
==================== Pre unarise: ====================
2018-03-16 16:07:20.187651374 UTC

System.Console.GetOpt.$fFunctorArgOrder_$cfmap
  :: forall a b.
     (a -> b)
     -> System.Console.GetOpt.ArgOrder a
     -> System.Console.GetOpt.ArgOrder b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,C(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_scsnD ds1_scsnE]
        case ds1_scsnE of {
          System.Console.GetOpt.RequireOrder ->
              System.Console.GetOpt.RequireOrder [];
          System.Console.GetOpt.Permute -> System.Console.GetOpt.Permute [];
          System.Console.GetOpt.ReturnInOrder g_scsnG [Occ=OnceL] ->
              let {
                sat_scsnH [Occ=Once] :: GHC.Base.String -> b_acr1l
                [LclId] =
                    [ds_scsnD g_scsnG] \r [eta_B1] GHC.Base.. ds_scsnD g_scsnG eta_B1;
              } in  System.Console.GetOpt.ReturnInOrder [sat_scsnH];
        };

System.Console.GetOpt.$fFunctorArgOrder_$c<$
  :: forall a b.
     a
     -> System.Console.GetOpt.ArgOrder b
     -> System.Console.GetOpt.ArgOrder a
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [x_scsnI eta_scsnJ]
        case eta_scsnJ of {
          System.Console.GetOpt.RequireOrder ->
              System.Console.GetOpt.RequireOrder [];
          System.Console.GetOpt.Permute -> System.Console.GetOpt.Permute [];
          System.Console.GetOpt.ReturnInOrder _ [Occ=Dead] ->
              let {
                sat_scsnN [Occ=Once] :: GHC.Base.String -> a_acr1w
                [LclId] =
                    [x_scsnI] \r [x1_scsnM] x_scsnI;
              } in  System.Console.GetOpt.ReturnInOrder [sat_scsnN];
        };

System.Console.GetOpt.$fFunctorArgOrder [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Functor System.Console.GetOpt.ArgOrder
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Base.C:Functor! [System.Console.GetOpt.$fFunctorArgOrder_$cfmap
                                       System.Console.GetOpt.$fFunctorArgOrder_$c<$];

System.Console.GetOpt.$fFunctorArgDescr_$cfmap
  :: forall a b.
     (a -> b)
     -> System.Console.GetOpt.ArgDescr a
     -> System.Console.GetOpt.ArgDescr b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,C(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [f_scsnO ds_scsnP]
        case ds_scsnP of {
          System.Console.GetOpt.NoArg a1_scsnR [Occ=Once] ->
              let {
                sat_scsnS [Occ=Once] :: b_acr0U
                [LclId] =
                    [f_scsnO a1_scsnR] \u [] f_scsnO a1_scsnR;
              } in  System.Console.GetOpt.NoArg [sat_scsnS];
          System.Console.GetOpt.ReqArg g_scsnT [Occ=OnceL]
                                       s_scsnU [Occ=Once] ->
              let {
                sat_scsnV [Occ=Once] :: GHC.Base.String -> b_acr0U
                [LclId] =
                    [f_scsnO g_scsnT] \r [eta_B1] GHC.Base.. f_scsnO g_scsnT eta_B1;
              } in  System.Console.GetOpt.ReqArg [sat_scsnV s_scsnU];
          System.Console.GetOpt.OptArg g_scsnW [Occ=OnceL]
                                       s_scsnX [Occ=Once] ->
              let {
                sat_scsnY [Occ=Once] :: GHC.Base.Maybe GHC.Base.String -> b_acr0U
                [LclId] =
                    [f_scsnO g_scsnW] \r [eta_B1] GHC.Base.. f_scsnO g_scsnW eta_B1;
              } in  System.Console.GetOpt.OptArg [sat_scsnY s_scsnX];
        };

System.Console.GetOpt.$fFunctorArgDescr_$c<$
  :: forall a b.
     a
     -> System.Console.GetOpt.ArgDescr b
     -> System.Console.GetOpt.ArgDescr a
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [x_scsnZ eta_scso0]
        case eta_scso0 of {
          System.Console.GetOpt.NoArg _ [Occ=Dead] ->
              System.Console.GetOpt.NoArg [x_scsnZ];
          System.Console.GetOpt.ReqArg _ [Occ=Dead] s_scso4 [Occ=Once] ->
              let {
                sat_scso6 [Occ=Once] :: GHC.Base.String -> a_acr18
                [LclId] =
                    [x_scsnZ] \r [x1_scso5] x_scsnZ;
              } in  System.Console.GetOpt.ReqArg [sat_scso6 s_scso4];
          System.Console.GetOpt.OptArg _ [Occ=Dead] s_scso8 [Occ=Once] ->
              let {
                sat_scsoa [Occ=Once] :: GHC.Base.Maybe GHC.Base.String -> a_acr18
                [LclId] =
                    [x_scsnZ] \r [x1_scso9] x_scsnZ;
              } in  System.Console.GetOpt.OptArg [sat_scsoa s_scso8];
        };

System.Console.GetOpt.$fFunctorArgDescr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Functor System.Console.GetOpt.ArgDescr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Base.C:Functor! [System.Console.GetOpt.$fFunctorArgDescr_$cfmap
                                       System.Console.GetOpt.$fFunctorArgDescr_$c<$];

System.Console.GetOpt.$fFunctorOptDescr_$cfmap
  :: forall a b.
     (a -> b)
     -> System.Console.GetOpt.OptDescr a
     -> System.Console.GetOpt.OptDescr b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,C(U)><S,1*U(U,U,1*U,U)>m,
 Unf=OtherCon []] =
    [] \r [f_scsob ds_scsoc]
        case ds_scsoc of {
          System.Console.GetOpt.Option a1_scsoe [Occ=Once]
                                       b1_scsof [Occ=Once]
                                       argDescr_scsog [Occ=Once]
                                       c_scsoh [Occ=Once] ->
              let {
                sat_scsoi [Occ=Once] :: System.Console.GetOpt.ArgDescr b_acr0w
                [LclId] =
                    [f_scsob argDescr_scsog] \u []
                        System.Console.GetOpt.$fFunctorArgDescr_$cfmap
                            f_scsob argDescr_scsog;
              } in 
                System.Console.GetOpt.Option [a1_scsoe b1_scsof sat_scsoi c_scsoh];
        };

System.Console.GetOpt.$fFunctorOptDescr_$c<$ [InlPrag=NOUSERINLINE[0]]
  :: forall a b.
     a
     -> System.Console.GetOpt.OptDescr b
     -> System.Console.GetOpt.OptDescr a
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U(U,U,1*U,U)>m,
 Unf=OtherCon []] =
    [] \r [w_scsoj w1_scsok]
        case w1_scsok of {
          System.Console.GetOpt.Option ww1_scsom [Occ=Once]
                                       ww2_scson [Occ=Once]
                                       ww3_scsoo [Occ=Once!]
                                       ww4_scsop [Occ=Once] ->
              let {
                sat_scsoA [Occ=Once] :: System.Console.GetOpt.ArgDescr a_scrOx
                [LclId] =
                    [w_scsoj ww3_scsoo] \u []
                        case ww3_scsoo of {
                          System.Console.GetOpt.NoArg _ [Occ=Dead] ->
                              System.Console.GetOpt.NoArg [w_scsoj];
                          System.Console.GetOpt.ReqArg _ [Occ=Dead] s_scsot [Occ=Once] ->
                              let {
                                sat_scsov [Occ=Once] :: GHC.Base.String -> a_scrOx
                                [LclId] =
                                    [w_scsoj] \r [x_scsou] w_scsoj;
                              } in  System.Console.GetOpt.ReqArg [sat_scsov s_scsot];
                          System.Console.GetOpt.OptArg _ [Occ=Dead] s_scsox [Occ=Once] ->
                              let {
                                sat_scsoz [Occ=Once] :: GHC.Base.Maybe GHC.Base.String -> a_scrOx
                                [LclId] =
                                    [w_scsoj] \r [x_scsoy] w_scsoj;
                              } in  System.Console.GetOpt.OptArg [sat_scsoz s_scsox];
                        };
              } in 
                System.Console.GetOpt.Option [ww1_scsom
                                              ww2_scson
                                              sat_scsoA
                                              ww4_scsop];
        };

System.Console.GetOpt.$fFunctorOptDescr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Functor System.Console.GetOpt.OptDescr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Base.C:Functor! [System.Console.GetOpt.$fFunctorOptDescr_$cfmap
                                       System.Console.GetOpt.$fFunctorOptDescr_$c<$];

lvl_rcsmT :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! [' '#];

lvl1_rcsmU :: [GHC.Types.Char]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [lvl_rcsmT GHC.Types.[]];

$wxs_rcsmV :: GHC.Prim.Int# -> [GHC.Types.Char]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>m2, Unf=OtherCon []] =
    sat-only [] \r [ww_scsoB]
        case ww_scsoB of ds1_scsoC {
          __DEFAULT ->
              let {
                sat_scsoE [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [ds1_scsoC] \u []
                        case -# [ds1_scsoC 1#] of sat_scsoD {
                          __DEFAULT -> $wxs_rcsmV sat_scsoD;
                        };
              } in  : [lvl_rcsmT sat_scsoE];
          1# -> lvl1_rcsmU;
        };

System.Console.GetOpt.$wgo [InlPrag=NOUSERINLINE[0],
                            Occ=LoopBreaker]
  :: [GHC.Types.Char] -> GHC.Prim.Int# -> [GHC.Types.Char]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>m2,
 Unf=OtherCon []] =
    [] \r [w_scsoF ww_scsoG]
        case w_scsoF of {
          [] -> $wxs_rcsmV ww_scsoG;
          : y_scsoI [Occ=Once*] ys_scsoJ [Occ=Once] ->
              case ww_scsoG of ds1_scsoK {
                __DEFAULT ->
                    let {
                      sat_scsoM [Occ=Once] :: [GHC.Types.Char]
                      [LclId] =
                          [ys_scsoJ ds1_scsoK] \u []
                              case -# [ds1_scsoK 1#] of sat_scsoL {
                                __DEFAULT -> System.Console.GetOpt.$wgo ys_scsoJ sat_scsoL;
                              };
                    } in  : [y_scsoI sat_scsoM];
                1# -> : [y_scsoI GHC.Types.[]];
              };
        };

System.Console.GetOpt.usageInfo_sameLen
  :: [[GHC.Types.Char]] -> [[GHC.Types.Char]]
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [xs_scsoN]
        let {
          n_scsoO [Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [xs_scsoN] \u []
                  case GHC.Base.map GHC.List.length xs_scsoN of {
                    [] -> GHC.List.maximum2;
                    : ipv_scsoQ [Occ=Once!] ipv1_scsoR [Occ=Once] ->
                        case ipv_scsoQ of {
                          GHC.Types.I# ww1_scsoT [Occ=Once] ->
                              case GHC.List.$wgo ipv1_scsoR ww1_scsoT of ww2_scsoU {
                                __DEFAULT -> GHC.Types.I# [ww2_scsoU];
                              };
                        };
                  }; } in
        let {
          lvl25_scsoV [Occ=OnceL!] :: GHC.Types.Bool
          [LclId] =
              [n_scsoO] \u []
                  case n_scsoO of {
                    GHC.Types.I# y_scsoX [Occ=Once] ->
                        case <# [0# y_scsoX] of sat_scsoY {
                          __DEFAULT -> tagToEnum# [sat_scsoY];
                        };
                  }; } in
        let {
          go_scsoZ [Occ=LoopBreaker]
            :: [[GHC.Types.Char]] -> [[GHC.Types.Char]]
          [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
              sat-only [n_scsoO lvl25_scsoV go_scsoZ] \r [ds_scsp0]
                  case ds_scsp0 of {
                    [] -> [] [];
                    : y_scsp2 [Occ=Once] ys_scsp3 [Occ=Once] ->
                        let {
                          sat_scsp8 [Occ=Once] :: [[GHC.Types.Char]]
                          [LclId] =
                              [go_scsoZ ys_scsp3] \u [] go_scsoZ ys_scsp3; } in
                        let {
                          sat_scsp7 [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [n_scsoO lvl25_scsoV y_scsp2] \u []
                                  case lvl25_scsoV of {
                                    GHC.Types.False -> [] [];
                                    GHC.Types.True ->
                                        case n_scsoO of {
                                          GHC.Types.I# ww1_scsp6 [Occ=Once] ->
                                              System.Console.GetOpt.$wgo y_scsp2 ww1_scsp6;
                                        };
                                  };
                        } in  : [sat_scsp7 sat_scsp8];
                  };
        } in  go_scsoZ xs_scsoN;

sepBy_rcsmW
  :: GHC.Types.Char -> [[GHC.Types.Char]] -> [GHC.Types.Char]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U>,
 Unf=OtherCon []] =
    sat-only [] \r [ds_scsp9 ds1_scspa]
        case ds1_scspa of {
          [] -> [] [];
          : x_scspc [Occ=Once*] ds2_scspd [Occ=Once!] ->
              case ds2_scspd of wild1_scspe {
                [] -> x_scspc;
                : _ [Occ=Dead] _ [Occ=Dead] ->
                    let {
                      sat_scsph [Occ=Once] :: [GHC.Types.Char]
                      [LclId] =
                          [ds_scsp9 wild1_scspe] \u [] sepBy_rcsmW ds_scsp9 wild1_scspe; } in
                    let {
                      sat_scspi [Occ=Once] :: [GHC.Types.Char]
                      [LclId] =
                          CCCS :! [lvl_rcsmT sat_scsph]; } in
                    let {
                      sat_scspj [Occ=Once] :: [GHC.Types.Char]
                      [LclId] =
                          CCCS :! [ds_scsp9 sat_scspi];
                    } in  GHC.Base.++ x_scspc sat_scspj;
              };
        };

lvl2_rcsmX :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! [','#];

lvl3_rcsmY :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "-"#;

lvl4_rcsmZ :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "["#;

lvl5_rcsn0 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "]"#;

lvl6_rcsn1 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "--"#;

lvl7_rcsn2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "[="#;

lvl8_rcsn3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "  "#;

System.Console.GetOpt.usageInfo_go2 [Occ=LoopBreaker]
  :: [[GHC.Types.Char]]
     -> [[GHC.Types.Char]] -> [[GHC.Types.Char]] -> [[GHC.Types.Char]]
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U><L,1*U><L,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_scspk ds1_scspl ds2_scspm]
        case ds_scspk of {
          [] -> [] [];
          : a1_scspo [Occ=Once] as_scspp [Occ=Once] ->
              case ds1_scspl of {
                [] -> [] [];
                : b1_scspr [Occ=Once] bs_scsps [Occ=Once] ->
                    case ds2_scspm of {
                      [] -> [] [];
                      : c1_scspu [Occ=Once] cs_scspv [Occ=Once] ->
                          let {
                            sat_scspB [Occ=Once] :: [[GHC.Types.Char]]
                            [LclId] =
                                [as_scspp bs_scsps cs_scspv] \u []
                                    System.Console.GetOpt.usageInfo_go2
                                        as_scspp bs_scsps cs_scspv; } in
                          let {
                            sat_scspA [Occ=Once] :: [GHC.Types.Char]
                            [LclId] =
                                [a1_scspo b1_scspr c1_scspu] \u []
                                    let {
                                      sat_scspz [Occ=Once] :: [GHC.Types.Char]
                                      [LclId] =
                                          [a1_scspo b1_scspr c1_scspu] \u []
                                              let {
                                                sat_scspy [Occ=Once, Dmd=<L,1*U>]
                                                  :: [GHC.Types.Char]
                                                [LclId] =
                                                    [b1_scspr c1_scspu] \s []
                                                        let {
                                                          sat_scspx [Occ=Once] :: [GHC.Types.Char]
                                                          [LclId] =
                                                              [b1_scspr c1_scspu] \u []
                                                                  let {
                                                                    sat_scspw [Occ=Once,
                                                                               Dmd=<L,1*U>]
                                                                      :: [GHC.Types.Char]
                                                                    [LclId] =
                                                                        [c1_scspu] \s []
                                                                            GHC.CString.unpackAppendCString#
                                                                                lvl8_rcsn3 c1_scspu;
                                                                  } in 
                                                                    GHC.Base.++ b1_scspr sat_scspw;
                                                        } in 
                                                          GHC.CString.unpackAppendCString#
                                                              lvl8_rcsn3 sat_scspx;
                                              } in  GHC.Base.++ a1_scspo sat_scspy;
                                    } in  GHC.CString.unpackAppendCString# lvl8_rcsn3 sat_scspz;
                          } in  : [sat_scspA sat_scspB];
                    };
              };
        };

lvl9_rcsn4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    " "#;

lvl10_rcsn5 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl5_rcsn0;

lvl11_rcsn6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "="#;

System.Console.GetOpt.usageInfo1 [InlPrag=NOUSERINLINE[0],
                                  Occ=LoopBreaker]
  :: forall a.
     [System.Console.GetOpt.OptDescr a]
     -> (# [GHC.Base.String], [GHC.Base.String], [GHC.Base.String] #)
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [w_scspC]
        case w_scspC of {
          [] -> (#,,#) [GHC.Types.[] GHC.Types.[] GHC.Types.[]];
          : y_scspE [Occ=Once!] ys_scspF [Occ=Once] ->
              case y_scspE of {
                System.Console.GetOpt.Option sos_scspH [Occ=Once]
                                             los_scspI [Occ=Once]
                                             ad_scspJ
                                             descr_scspK [Occ=Once] ->
                    let {
                      b2_scspL [Dmd=<L,U(U,U,U)>]
                        :: ([GHC.Base.String], [GHC.Base.String], [GHC.Base.String])
                      [LclId] =
                          [ys_scspF] \u []
                              case System.Console.GetOpt.usageInfo1 ys_scspF of {
                                (#,,#) ww1_scspN [Occ=Once]
                                       ww2_scspO [Occ=Once]
                                       ww3_scspP [Occ=Once] ->
                                    (,,) [ww1_scspN ww2_scspO ww3_scspP];
                              }; } in
                    let {
                      sosFmt_scspQ [Occ=Once*] :: [GHC.Types.Char]
                      [LclId] =
                          [sos_scspH ad_scspJ] \u []
                              let {
                                sat_scsq4 [Occ=Once] :: GHC.Types.Char -> [GHC.Types.Char]
                                [LclId] =
                                    [ad_scspJ] \r [so_scspR]
                                        case ad_scspJ of {
                                          System.Console.GetOpt.NoArg _ [Occ=Dead] ->
                                              let {
                                                sat_scspU [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    CCCS :! [so_scspR GHC.Types.[]];
                                              } in 
                                                GHC.CString.unpackAppendCString#
                                                    lvl3_rcsmY sat_scspU;
                                          System.Console.GetOpt.ReqArg _ [Occ=Dead]
                                                                       ad1_scspW [Occ=Once] ->
                                              let {
                                                sat_scspX [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    [ad1_scspW] \u []
                                                        GHC.CString.unpackAppendCString#
                                                            lvl9_rcsn4 ad1_scspW; } in
                                              let {
                                                sat_scspY [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    CCCS :! [so_scspR sat_scspX];
                                              } in 
                                                GHC.CString.unpackAppendCString#
                                                    lvl3_rcsmY sat_scspY;
                                          System.Console.GetOpt.OptArg _ [Occ=Dead]
                                                                       ad1_scsq0 [Occ=Once] ->
                                              let {
                                                sat_scsq2 [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    [ad1_scsq0] \u []
                                                        let {
                                                          sat_scsq1 [Occ=Once] :: [GHC.Types.Char]
                                                          [LclId] =
                                                              [ad1_scsq0] \u []
                                                                  GHC.Base.++ ad1_scsq0 lvl10_rcsn5;
                                                        } in 
                                                          GHC.CString.unpackAppendCString#
                                                              lvl4_rcsmZ sat_scsq1; } in
                                              let {
                                                sat_scsq3 [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    CCCS :! [so_scspR sat_scsq2];
                                              } in 
                                                GHC.CString.unpackAppendCString#
                                                    lvl3_rcsmY sat_scsq3;
                                        };
                              } in 
                                case GHC.Base.map sat_scsq4 sos_scspH of sat_scsq5 {
                                  __DEFAULT -> sepBy_rcsmW lvl2_rcsmX sat_scsq5;
                                }; } in
                    let {
                      losFmt_scsq6 [Occ=Once*] :: [GHC.Types.Char]
                      [LclId] =
                          [los_scspI ad_scspJ] \u []
                              let {
                                sat_scsqj [Occ=Once] :: [GHC.Types.Char] -> [GHC.Types.Char]
                                [LclId] =
                                    [ad_scspJ] \r [lo_scsq7]
                                        case ad_scspJ of {
                                          System.Console.GetOpt.NoArg _ [Occ=Dead] ->
                                              GHC.CString.unpackAppendCString# lvl6_rcsn1 lo_scsq7;
                                          System.Console.GetOpt.ReqArg _ [Occ=Dead]
                                                                       ad1_scsqb [Occ=Once] ->
                                              let {
                                                sat_scsqd [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    [lo_scsq7 ad1_scsqb] \u []
                                                        let {
                                                          sat_scsqc [Occ=Once, Dmd=<L,1*U>]
                                                            :: [GHC.Types.Char]
                                                          [LclId] =
                                                              [ad1_scsqb] \s []
                                                                  GHC.CString.unpackAppendCString#
                                                                      lvl11_rcsn6 ad1_scsqb;
                                                        } in  GHC.Base.++ lo_scsq7 sat_scsqc;
                                              } in 
                                                GHC.CString.unpackAppendCString#
                                                    lvl6_rcsn1 sat_scsqd;
                                          System.Console.GetOpt.OptArg _ [Occ=Dead]
                                                                       ad1_scsqf [Occ=Once] ->
                                              let {
                                                sat_scsqi [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    [lo_scsq7 ad1_scsqf] \u []
                                                        let {
                                                          sat_scsqh [Occ=Once, Dmd=<L,1*U>]
                                                            :: [GHC.Types.Char]
                                                          [LclId] =
                                                              [ad1_scsqf] \s []
                                                                  let {
                                                                    sat_scsqg [Occ=Once]
                                                                      :: [GHC.Types.Char]
                                                                    [LclId] =
                                                                        [ad1_scsqf] \u []
                                                                            GHC.Base.++
                                                                                ad1_scsqf
                                                                                lvl10_rcsn5;
                                                                  } in 
                                                                    GHC.CString.unpackAppendCString#
                                                                        lvl7_rcsn2 sat_scsqg;
                                                        } in  GHC.Base.++ lo_scsq7 sat_scsqh;
                                              } in 
                                                GHC.CString.unpackAppendCString#
                                                    lvl6_rcsn1 sat_scsqi;
                                        };
                              } in 
                                case GHC.Base.map sat_scsqj los_scspI of sat_scsqk {
                                  __DEFAULT -> sepBy_rcsmW lvl2_rcsmX sat_scsqk;
                                };
                    } in 
                      case Data.OldList.lines descr_scspK of {
                        [] ->
                            let {
                              sat_scsqC [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [b2_scspL] \u []
                                      case b2_scspL of {
                                        (,,) _ [Occ=Dead] _ [Occ=Dead] cs_scsqB [Occ=Once] ->
                                            cs_scsqB;
                                      }; } in
                            let {
                              sat_scsqD [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [GHC.Types.[] sat_scsqC]; } in
                            let {
                              sat_scsqw [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [b2_scspL] \u []
                                      case b2_scspL of {
                                        (,,) _ [Occ=Dead] bs_scsqu [Occ=Once] _ [Occ=Dead] ->
                                            bs_scsqu;
                                      }; } in
                            let {
                              sat_scsqx [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [losFmt_scsq6 sat_scsqw]; } in
                            let {
                              sat_scsqq [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [b2_scspL] \u []
                                      case b2_scspL of {
                                        (,,) as_scsqn [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                                            as_scsqn;
                                      }; } in
                            let {
                              sat_scsqr [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [sosFmt_scspQ sat_scsqq];
                            } in  (#,,#) [sat_scsqr sat_scsqx sat_scsqD];
                        : d_scsqE [Occ=Once] ds_scsqF [Occ=Once] ->
                            let {
                              ds1_scsqG [Dmd=<L,U(1*U,1*U,1*U)>]
                                :: ([GHC.Base.String], [GHC.Base.String], [GHC.Base.String])
                              [LclId] =
                                  [b2_scspL ds_scsqF] \u []
                                      let {
                                        go_scsqH [Occ=LoopBreaker]
                                          :: [GHC.Base.String]
                                             -> ([GHC.Base.String], [GHC.Base.String],
                                                 [GHC.Base.String])
                                        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
                                            sat-only [b2_scspL go_scsqH] \r [ds2_scsqI]
                                                case ds2_scsqI of {
                                                  [] -> b2_scspL;
                                                  : y1_scsqK [Occ=Once] ys1_scsqL [Occ=Once] ->
                                                      let {
                                                        ds3_scsqM [Dmd=<L,U(1*U,1*U,1*U)>]
                                                          :: ([GHC.Base.String], [GHC.Base.String],
                                                              [GHC.Base.String])
                                                        [LclId] =
                                                            [go_scsqH ys1_scsqL] \u []
                                                                go_scsqH ys1_scsqL; } in
                                                      let {
                                                        sat_scsr3 [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            [ds3_scsqM] \u []
                                                                case ds3_scsqM of {
                                                                  (,,) _ [Occ=Dead]
                                                                       _ [Occ=Dead]
                                                                       cs_scsr2 [Occ=Once] ->
                                                                      cs_scsr2;
                                                                }; } in
                                                      let {
                                                        sat_scsr4 [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            CCCS :! [y1_scsqK sat_scsr3]; } in
                                                      let {
                                                        sat_scsqX [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            [ds3_scsqM] \u []
                                                                case ds3_scsqM of {
                                                                  (,,) _ [Occ=Dead]
                                                                       bs_scsqV [Occ=Once]
                                                                       _ [Occ=Dead] ->
                                                                      bs_scsqV;
                                                                }; } in
                                                      let {
                                                        sat_scsqY [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            CCCS :! [GHC.Types.[] sat_scsqX]; } in
                                                      let {
                                                        sat_scsqR [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            [ds3_scsqM] \u []
                                                                case ds3_scsqM of {
                                                                  (,,) as_scsqO [Occ=Once]
                                                                       _ [Occ=Dead]
                                                                       _ [Occ=Dead] ->
                                                                      as_scsqO;
                                                                }; } in
                                                      let {
                                                        sat_scsqS [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            CCCS :! [GHC.Types.[] sat_scsqR];
                                                      } in  (,,) [sat_scsqS sat_scsqY sat_scsr4];
                                                };
                                      } in  go_scsqH ds_scsqF; } in
                            let {
                              sat_scsrl [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [ds1_scsqG] \u []
                                      case ds1_scsqG of {
                                        (,,) _ [Occ=Dead] _ [Occ=Dead] cs_scsrk [Occ=Once] ->
                                            cs_scsrk;
                                      }; } in
                            let {
                              sat_scsrm [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [d_scsqE sat_scsrl]; } in
                            let {
                              sat_scsrf [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [ds1_scsqG] \u []
                                      case ds1_scsqG of {
                                        (,,) _ [Occ=Dead] bs_scsrd [Occ=Once] _ [Occ=Dead] ->
                                            bs_scsrd;
                                      }; } in
                            let {
                              sat_scsrg [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [losFmt_scsq6 sat_scsrf]; } in
                            let {
                              sat_scsr9 [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [ds1_scsqG] \u []
                                      case ds1_scsqG of {
                                        (,,) as_scsr6 [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                                            as_scsr6;
                                      }; } in
                            let {
                              sat_scsra [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [sosFmt_scspQ sat_scsr9];
                            } in  (#,,#) [sat_scsra sat_scsrg sat_scsrm];
                      };
              };
        };

System.Console.GetOpt.usageInfo
  :: forall a.
     GHC.Base.String
     -> [System.Console.GetOpt.OptDescr a] -> GHC.Base.String
[GblId, Arity=2, Str=<L,U><L,1*U>, Unf=OtherCon []] =
    [] \r [header_scsrn optDescr_scsro]
        let {
          sat_scsrv [Occ=Once] :: [GHC.Base.String]
          [LclId] =
              [optDescr_scsro] \u []
                  case System.Console.GetOpt.usageInfo1 optDescr_scsro of {
                    (#,,#) ww1_scsrq [Occ=Once]
                           ww2_scsrr [Occ=Once]
                           ww3_scsrs [Occ=Once] ->
                        let {
                          sat_scsru [Occ=Once, Dmd=<L,1*U>] :: [[GHC.Types.Char]]
                          [LclId] =
                              [ww2_scsrr] \s []
                                  System.Console.GetOpt.usageInfo_sameLen ww2_scsrr;
                        } in 
                          case
                              System.Console.GetOpt.usageInfo_sameLen ww1_scsrq
                          of
                          sat_scsrt
                          { __DEFAULT ->
                                System.Console.GetOpt.usageInfo_go2 sat_scsrt sat_scsru ww3_scsrs;
                          };
                  }; } in
        let {
          sat_scsrw [Occ=Once] :: [GHC.Base.String]
          [LclId] =
              CCCS :! [header_scsrn sat_scsrv];
        } in  Data.OldList.unlines sat_scsrw;

lvl12_rcsn7 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "option `"#;

lvl13_rcsn8 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "' is ambiguous; could be one of:"#;

lvl14_rcsn9 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "' requires an argument "#;

lvl15_rcsna :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "\n"#;

lvl16_rcsnb :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl15_rcsna;

System.Console.GetOpt.getOpt2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "unrecognized option `"#;

System.Console.GetOpt.getOpt1 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'\n"#;

lvl17_rcsnc :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# System.Console.GetOpt.getOpt1;

System.Console.GetOpt.errUnrec
  :: GHC.Base.String -> GHC.Base.String
[GblId, Arity=1, Str=<L,1*U>, Unf=OtherCon []] =
    [] \r [optStr_scsrx]
        let {
          sat_scsry [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [optStr_scsrx] \u [] GHC.Base.++ optStr_scsrx lvl17_rcsnc;
        } in 
          GHC.CString.unpackAppendCString#
              System.Console.GetOpt.getOpt2 sat_scsry;

lvl18_rcsnd :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "' doesn't allow an argument\n"#;

lvl19_rcsne
  :: [GHC.Types.Char] -> [GHC.Types.Char] -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Data.OldList.isPrefixOf GHC.Classes.$fEqChar eta_B2 eta_B1;

lvl20_rcsnf :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [ds_scsrz]
        case ds_scsrz of {
          GHC.Types.C# x_scsrB [Occ=Once!] ->
              case x_scsrB of {
                __DEFAULT -> GHC.Types.False [];
                '='# -> GHC.Types.True [];
              };
        };

lvl21_rcsng :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! ['-'#];

lvl22_rcsnh :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl18_rcsnd;

lvl23_rcsni :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "option `--"#;

poly_go_rcsnj
  :: forall a.
     [System.Console.GetOpt.OptDescr a]
     -> [System.Console.GetOpt.ArgDescr a]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    sat-only [] \r [ds_scsrD]
        case ds_scsrD of {
          [] -> [] [];
          : y_scsrF [Occ=Once!] ys_scsrG [Occ=Once] ->
              case y_scsrF of {
                System.Console.GetOpt.Option _ [Occ=Dead]
                                             _ [Occ=Dead]
                                             ad_scsrK [Occ=Once]
                                             _ [Occ=Dead] ->
                    let {
                      sat_scsrM [Occ=Once] :: [System.Console.GetOpt.ArgDescr a_scrPx]
                      [LclId] =
                          [ys_scsrG] \u [] poly_go_rcsnj ys_scsrG;
                    } in  : [ad_scsrK sat_scsrM];
              };
        };

lvl24_rcsnk :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl13_rcsn8;

poly_go1_rcsnl
  :: forall a.
     [System.Console.GetOpt.OptDescr a]
     -> [System.Console.GetOpt.ArgDescr a]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    sat-only [] \r [ds_scsrN]
        case ds_scsrN of {
          [] -> [] [];
          : y_scsrP [Occ=Once!] ys_scsrQ [Occ=Once] ->
              case y_scsrP of {
                System.Console.GetOpt.Option _ [Occ=Dead]
                                             _ [Occ=Dead]
                                             ad_scsrU [Occ=Once]
                                             _ [Occ=Dead] ->
                    let {
                      sat_scsrW [Occ=Once] :: [System.Console.GetOpt.ArgDescr a_scrPx]
                      [LclId] =
                          [ys_scsrQ] \u [] poly_go1_rcsnl ys_scsrQ;
                    } in  : [ad_scsrU sat_scsrW];
              };
        };

System.Console.GetOpt.$wgetOpt' [InlPrag=NOUSERINLINE[0],
                                 Occ=LoopBreaker]
  :: forall a.
     System.Console.GetOpt.ArgOrder a
     -> [System.Console.GetOpt.OptDescr a]
     -> [GHC.Base.String]
     -> (# [a], [GHC.Base.String], [GHC.Base.String],
           [GHC.Base.String] #)
[GblId, Arity=3, Str=<L,1*U><L,U><S,1*U>, Unf=OtherCon []] =
    [] \r [w_scsrX w1_scsrY w2_scsrZ]
        case w2_scsrZ of wild_scss0 {
          [] ->
              (#,,,#) [GHC.Types.[] GHC.Types.[] GHC.Types.[] GHC.Types.[]];
          : arg_scss1 [Occ=Once!] args_scss2 [Occ=OnceL*] ->
              case arg_scss1 of wild1_scss3 {
                [] ->
                    case w_scsrX of wild2_scss4 {
                      System.Console.GetOpt.RequireOrder ->
                          let {
                            sat_scss5 [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                CCCS :! [GHC.Types.[] args_scss2];
                          } in  (#,,,#) [GHC.Types.[] sat_scss5 GHC.Types.[] GHC.Types.[]];
                      System.Console.GetOpt.Permute ->
                          let {
                            ds_scss6 [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                              :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                  [GHC.Base.String])
                            [LclId] =
                                [w1_scsrY args_scss2] \u []
                                    case
                                        System.Console.GetOpt.$wgetOpt'
                                            System.Console.GetOpt.Permute w1_scsrY args_scss2
                                    of
                                    { (#,,,#) ww1_scss8 [Occ=Once]
                                              ww2_scss9 [Occ=Once]
                                              ww3_scssa [Occ=Once]
                                              ww4_scssb [Occ=Once] ->
                                          (,,,) [ww1_scss8 ww2_scss9 ww3_scssa ww4_scssb];
                                    }; } in
                          let {
                            sat_scssA [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scss6] \u []
                                    case ds_scss6 of {
                                      (,,,) _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            es_scssz [Occ=Once] ->
                                          es_scssz;
                                    }; } in
                          let {
                            sat_scssu [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scss6] \u []
                                    case ds_scss6 of {
                                      (,,,) _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            us_scsss [Occ=Once]
                                            _ [Occ=Dead] ->
                                          us_scsss;
                                    }; } in
                          let {
                            sat_scssn [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scss6] \u []
                                    case ds_scss6 of {
                                      (,,,) _ [Occ=Dead]
                                            xs_scssk [Occ=Once]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead] ->
                                          xs_scssk;
                                    }; } in
                          let {
                            sat_scsso [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                CCCS :! [GHC.Types.[] sat_scssn]; } in
                          let {
                            sat_scssh [Occ=Once] :: [a_scrPx]
                            [LclId] =
                                [ds_scss6] \u []
                                    case ds_scss6 of {
                                      (,,,) os_scssd [Occ=Once]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead] ->
                                          os_scssd;
                                    };
                          } in  (#,,,#) [sat_scssh sat_scsso sat_scssu sat_scssA];
                      System.Console.GetOpt.ReturnInOrder f_scssB [Occ=Once!] ->
                          let {
                            ds_scssC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                              :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                  [GHC.Base.String])
                            [LclId] =
                                [w1_scsrY args_scss2 wild2_scss4] \u []
                                    case
                                        System.Console.GetOpt.$wgetOpt'
                                            wild2_scss4 w1_scsrY args_scss2
                                    of
                                    { (#,,,#) ww1_scssE [Occ=Once]
                                              ww2_scssF [Occ=Once]
                                              ww3_scssG [Occ=Once]
                                              ww4_scssH [Occ=Once] ->
                                          (,,,) [ww1_scssE ww2_scssF ww3_scssG ww4_scssH];
                                    }; } in
                          let {
                            sat_scst7 [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scssC] \u []
                                    case ds_scssC of {
                                      (,,,) _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            es_scst6 [Occ=Once] ->
                                          es_scst6;
                                    }; } in
                          let {
                            sat_scst1 [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scssC] \u []
                                    case ds_scssC of {
                                      (,,,) _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            us_scssZ [Occ=Once]
                                            _ [Occ=Dead] ->
                                          us_scssZ;
                                    }; } in
                          let {
                            sat_scssV [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scssC] \u []
                                    case ds_scssC of {
                                      (,,,) _ [Occ=Dead]
                                            xs_scssS [Occ=Once]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead] ->
                                          xs_scssS;
                                    }; } in
                          let {
                            sat_scssO [Occ=Once] :: [a_scrPx]
                            [LclId] =
                                [ds_scssC] \u []
                                    case ds_scssC of {
                                      (,,,) os_scssK [Occ=Once]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead] ->
                                          os_scssK;
                                    }; } in
                          let {
                            sat_scssI [Occ=Once] :: a_scrPx
                            [LclId] =
                                [f_scssB] \u [] f_scssB GHC.Types.[]; } in
                          let {
                            sat_scssP [Occ=Once] :: [a_scrPx]
                            [LclId] =
                                CCCS :! [sat_scssI sat_scssO];
                          } in  (#,,,#) [sat_scssP sat_scssV sat_scst1 sat_scst7];
                    };
                : ds_scst8 [Occ=Once!] ds1_scst9 [Occ=Once!] ->
                    case ds_scst8 of {
                      GHC.Types.C# ds2_scstb [Occ=Once!] ->
                          case ds2_scstb of {
                            __DEFAULT ->
                                case w_scsrX of wild3_scstd {
                                  System.Console.GetOpt.RequireOrder ->
                                      (#,,,#) [GHC.Types.[] wild_scss0 GHC.Types.[] GHC.Types.[]];
                                  System.Console.GetOpt.Permute ->
                                      let {
                                        ds4_scste [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                          :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                              [GHC.Base.String])
                                        [LclId] =
                                            [w1_scsrY args_scss2] \u []
                                                case
                                                    System.Console.GetOpt.$wgetOpt'
                                                        System.Console.GetOpt.Permute
                                                        w1_scsrY
                                                        args_scss2
                                                of
                                                { (#,,,#) ww1_scstg [Occ=Once]
                                                          ww2_scsth [Occ=Once]
                                                          ww3_scsti [Occ=Once]
                                                          ww4_scstj [Occ=Once] ->
                                                      (,,,) [ww1_scstg
                                                             ww2_scsth
                                                             ww3_scsti
                                                             ww4_scstj];
                                                }; } in
                                      let {
                                        sat_scstI [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scste] \u []
                                                case ds4_scste of {
                                                  (,,,) _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        es_scstH [Occ=Once] ->
                                                      es_scstH;
                                                }; } in
                                      let {
                                        sat_scstC [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scste] \u []
                                                case ds4_scste of {
                                                  (,,,) _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        us_scstA [Occ=Once]
                                                        _ [Occ=Dead] ->
                                                      us_scstA;
                                                }; } in
                                      let {
                                        sat_scstv [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scste] \u []
                                                case ds4_scste of {
                                                  (,,,) _ [Occ=Dead]
                                                        xs_scsts [Occ=Once]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead] ->
                                                      xs_scsts;
                                                }; } in
                                      let {
                                        sat_scstw [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            CCCS :! [wild1_scss3 sat_scstv]; } in
                                      let {
                                        sat_scstp [Occ=Once] :: [a_scrPx]
                                        [LclId] =
                                            [ds4_scste] \u []
                                                case ds4_scste of {
                                                  (,,,) os_scstl [Occ=Once]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead] ->
                                                      os_scstl;
                                                };
                                      } in  (#,,,#) [sat_scstp sat_scstw sat_scstC sat_scstI];
                                  System.Console.GetOpt.ReturnInOrder f_scstJ [Occ=Once!] ->
                                      let {
                                        ds4_scstK [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                          :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                              [GHC.Base.String])
                                        [LclId] =
                                            [w1_scsrY args_scss2 wild3_scstd] \u []
                                                case
                                                    System.Console.GetOpt.$wgetOpt'
                                                        wild3_scstd w1_scsrY args_scss2
                                                of
                                                { (#,,,#) ww1_scstM [Occ=Once]
                                                          ww2_scstN [Occ=Once]
                                                          ww3_scstO [Occ=Once]
                                                          ww4_scstP [Occ=Once] ->
                                                      (,,,) [ww1_scstM
                                                             ww2_scstN
                                                             ww3_scstO
                                                             ww4_scstP];
                                                }; } in
                                      let {
                                        sat_scsuf [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scstK] \u []
                                                case ds4_scstK of {
                                                  (,,,) _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        es_scsue [Occ=Once] ->
                                                      es_scsue;
                                                }; } in
                                      let {
                                        sat_scsu9 [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scstK] \u []
                                                case ds4_scstK of {
                                                  (,,,) _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        us_scsu7 [Occ=Once]
                                                        _ [Occ=Dead] ->
                                                      us_scsu7;
                                                }; } in
                                      let {
                                        sat_scsu3 [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scstK] \u []
                                                case ds4_scstK of {
                                                  (,,,) _ [Occ=Dead]
                                                        xs_scsu0 [Occ=Once]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead] ->
                                                      xs_scsu0;
                                                }; } in
                                      let {
                                        sat_scstW [Occ=Once] :: [a_scrPx]
                                        [LclId] =
                                            [ds4_scstK] \u []
                                                case ds4_scstK of {
                                                  (,,,) os_scstS [Occ=Once]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead] ->
                                                      os_scstS;
                                                }; } in
                                      let {
                                        sat_scstQ [Occ=Once] :: a_scrPx
                                        [LclId] =
                                            [wild1_scss3 f_scstJ] \u [] f_scstJ wild1_scss3; } in
                                      let {
                                        sat_scstX [Occ=Once] :: [a_scrPx]
                                        [LclId] =
                                            CCCS :! [sat_scstQ sat_scstW];
                                      } in  (#,,,#) [sat_scstX sat_scsu3 sat_scsu9 sat_scsuf];
                                };
                            '-'# ->
                                case ds1_scst9 of {
                                  [] ->
                                      case w_scsrX of wild4_scsuh {
                                        System.Console.GetOpt.RequireOrder ->
                                            (#,,,#) [GHC.Types.[]
                                                     wild_scss0
                                                     GHC.Types.[]
                                                     GHC.Types.[]];
                                        System.Console.GetOpt.Permute ->
                                            let {
                                              ds4_scsui [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                                    [GHC.Base.String])
                                              [LclId] =
                                                  [w1_scsrY args_scss2] \u []
                                                      case
                                                          System.Console.GetOpt.$wgetOpt'
                                                              System.Console.GetOpt.Permute
                                                              w1_scsrY
                                                              args_scss2
                                                      of
                                                      { (#,,,#) ww1_scsuk [Occ=Once]
                                                                ww2_scsul [Occ=Once]
                                                                ww3_scsum [Occ=Once]
                                                                ww4_scsun [Occ=Once] ->
                                                            (,,,) [ww1_scsuk
                                                                   ww2_scsul
                                                                   ww3_scsum
                                                                   ww4_scsun];
                                                      }; } in
                                            let {
                                              sat_scsuM [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scsui] \u []
                                                      case ds4_scsui of {
                                                        (,,,) _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              es_scsuL [Occ=Once] ->
                                                            es_scsuL;
                                                      }; } in
                                            let {
                                              sat_scsuG [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scsui] \u []
                                                      case ds4_scsui of {
                                                        (,,,) _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              us_scsuE [Occ=Once]
                                                              _ [Occ=Dead] ->
                                                            us_scsuE;
                                                      }; } in
                                            let {
                                              sat_scsuz [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scsui] \u []
                                                      case ds4_scsui of {
                                                        (,,,) _ [Occ=Dead]
                                                              xs_scsuw [Occ=Once]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead] ->
                                                            xs_scsuw;
                                                      }; } in
                                            let {
                                              sat_scsuA [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  CCCS :! [wild1_scss3 sat_scsuz]; } in
                                            let {
                                              sat_scsut [Occ=Once] :: [a_scrPx]
                                              [LclId] =
                                                  [ds4_scsui] \u []
                                                      case ds4_scsui of {
                                                        (,,,) os_scsup [Occ=Once]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead] ->
                                                            os_scsup;
                                                      };
                                            } in  (#,,,#) [sat_scsut sat_scsuA sat_scsuG sat_scsuM];
                                        System.Console.GetOpt.ReturnInOrder f_scsuN [Occ=Once!] ->
                                            let {
                                              ds4_scsuO [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                                    [GHC.Base.String])
                                              [LclId] =
                                                  [w1_scsrY args_scss2 wild4_scsuh] \u []
                                                      case
                                                          System.Console.GetOpt.$wgetOpt'
                                                              wild4_scsuh w1_scsrY args_scss2
                                                      of
                                                      { (#,,,#) ww1_scsuQ [Occ=Once]
                                                                ww2_scsuR [Occ=Once]
                                                                ww3_scsuS [Occ=Once]
                                                                ww4_scsuT [Occ=Once] ->
                                                            (,,,) [ww1_scsuQ
                                                                   ww2_scsuR
                                                                   ww3_scsuS
                                                                   ww4_scsuT];
                                                      }; } in
                                            let {
                                              sat_scsvj [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scsuO] \u []
                                                      case ds4_scsuO of {
                                                        (,,,) _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              es_scsvi [Occ=Once] ->
                                                            es_scsvi;
                                                      }; } in
                                            let {
                                              sat_scsvd [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scsuO] \u []
                                                      case ds4_scsuO of {
                                                        (,,,) _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              us_scsvb [Occ=Once]
                                                              _ [Occ=Dead] ->
                                                            us_scsvb;
                                                      }; } in
                                            let {
                                              sat_scsv7 [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scsuO] \u []
                                                      case ds4_scsuO of {
                                                        (,,,) _ [Occ=Dead]
                                                              xs_scsv4 [Occ=Once]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead] ->
                                                            xs_scsv4;
                                                      }; } in
                                            let {
                                              sat_scsv0 [Occ=Once] :: [a_scrPx]
                                              [LclId] =
                                                  [ds4_scsuO] \u []
                                                      case ds4_scsuO of {
                                                        (,,,) os_scsuW [Occ=Once]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead] ->
                                                            os_scsuW;
                                                      }; } in
                                            let {
                                              sat_scsuU [Occ=Once] :: a_scrPx
                                              [LclId] =
                                                  [wild1_scss3 f_scsuN] \u []
                                                      f_scsuN wild1_scss3; } in
                                            let {
                                              sat_scsv1 [Occ=Once] :: [a_scrPx]
                                              [LclId] =
                                                  CCCS :! [sat_scsuU sat_scsv0];
                                            } in  (#,,,#) [sat_scsv1 sat_scsv7 sat_scsvd sat_scsvj];
                                      };
                                  : ds4_scsvk [Occ=Once!] ds5_scsvl [Occ=Once*!] ->
                                      case ds4_scsvk of wild4_scsvm {
                                        GHC.Types.C# ds6_scsvn [Occ=Once!] ->
                                            case ds6_scsvn of ds7_scsvo {
                                              __DEFAULT ->
                                                  let {
                                                    go_scsvp [Occ=LoopBreaker]
                                                      :: [System.Console.GetOpt.OptDescr a_scrPx]
                                                         -> [System.Console.GetOpt.OptDescr a_scrPx]
                                                    [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
                                                        sat-only [ds7_scsvo go_scsvp] \r [ds8_scsvq]
                                                            case ds8_scsvq of {
                                                              [] -> [] [];
                                                              : y_scsvs [Occ=Once!]
                                                                ys_scsvt [Occ=Once] ->
                                                                  case y_scsvs of wild6_scsvu {
                                                                    System.Console.GetOpt.Option ss_scsvv [Occ=Once]
                                                                                                 _ [Occ=Dead]
                                                                                                 _ [Occ=Dead]
                                                                                                 _ [Occ=Dead] ->
                                                                        let {
                                                                          z_scsvz [Occ=OnceL]
                                                                            :: [System.Console.GetOpt.OptDescr
                                                                                  a_scrPx]
                                                                          [LclId] =
                                                                              [go_scsvp
                                                                               ys_scsvt] \u []
                                                                                  go_scsvp
                                                                                      ys_scsvt; } in
                                                                        let {
                                                                          go1_scsvA [Occ=LoopBreaker]
                                                                            :: [GHC.Types.Char]
                                                                               -> [System.Console.GetOpt.OptDescr
                                                                                     a_scrPx]
                                                                          [LclId,
                                                                           Arity=1,
                                                                           Str=<S,1*U>,
                                                                           Unf=OtherCon []] =
                                                                              sat-only [ds7_scsvo
                                                                                        wild6_scsvu
                                                                                        z_scsvz
                                                                                        go1_scsvA] \r [ds12_scsvB]
                                                                                  case
                                                                                      ds12_scsvB
                                                                                  of
                                                                                  { [] -> z_scsvz;
                                                                                    : y1_scsvD [Occ=Once!]
                                                                                      ys1_scsvE [Occ=Once*] ->
                                                                                        case
                                                                                            y1_scsvD
                                                                                        of
                                                                                        { GHC.Types.C# y2_scsvG [Occ=Once] ->
                                                                                              case
                                                                                                  eqChar# [ds7_scsvo
                                                                                                           y2_scsvG]
                                                                                              of
                                                                                              { __DEFAULT ->
                                                                                                    go1_scsvA
                                                                                                        ys1_scsvE;
                                                                                                1# ->
                                                                                                    let {
                                                                                                      sat_scsvI [Occ=Once]
                                                                                                        :: [System.Console.GetOpt.OptDescr
                                                                                                              a_scrPx]
                                                                                                      [LclId] =
                                                                                                          [go1_scsvA
                                                                                                           ys1_scsvE] \u []
                                                                                                              go1_scsvA
                                                                                                                  ys1_scsvE;
                                                                                                    } in 
                                                                                                      : [wild6_scsvu
                                                                                                         sat_scsvI];
                                                                                              };
                                                                                        };
                                                                                  };
                                                                        } in  go1_scsvA ss_scsvv;
                                                                  };
                                                            };
                                                  } in 
                                                    case
                                                        go_scsvp w1_scsrY
                                                    of
                                                    options_scsvJ [Dmd=<S,U>]
                                                    { __DEFAULT ->
                                                          case poly_go1_rcsnl options_scsvJ of {
                                                            [] ->
                                                                case ds5_scsvl of wild6_scsvL {
                                                                  [] ->
                                                                      let {
                                                                        ds8_scsvM [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                          :: ([a_scrPx],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String])
                                                                        [LclId] =
                                                                            [w_scsrX
                                                                             w1_scsrY
                                                                             args_scss2] \u []
                                                                                case
                                                                                    System.Console.GetOpt.$wgetOpt'
                                                                                        w_scsrX
                                                                                        w1_scsrY
                                                                                        args_scss2
                                                                                of
                                                                                { (#,,,#) ww1_scsvO [Occ=Once]
                                                                                          ww2_scsvP [Occ=Once]
                                                                                          ww3_scsvQ [Occ=Once]
                                                                                          ww4_scsvR [Occ=Once] ->
                                                                                      (,,,) [ww1_scsvO
                                                                                             ww2_scsvP
                                                                                             ww3_scsvQ
                                                                                             ww4_scsvR];
                                                                                }; } in
                                                                      let {
                                                                        sat_scswi [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scsvM] \u []
                                                                                case ds8_scsvM of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        es_scswh [Occ=Once] ->
                                                                                      es_scswh;
                                                                                }; } in
                                                                      let {
                                                                        sat_scswb [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scsvM] \u []
                                                                                case ds8_scsvM of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        us_scsw9 [Occ=Once]
                                                                                        _ [Occ=Dead] ->
                                                                                      us_scsw9;
                                                                                }; } in
                                                                      let {
                                                                        sat_scsw4 [Occ=Once]
                                                                          :: [GHC.Types.Char]
                                                                        [LclId] =
                                                                            CCCS :! [wild4_scsvm
                                                                                     GHC.Types.[]]; } in
                                                                      let {
                                                                        sat_scsw5 [Occ=Once]
                                                                          :: GHC.Base.String
                                                                        [LclId] =
                                                                            CCCS :! [lvl21_rcsng
                                                                                     sat_scsw4]; } in
                                                                      let {
                                                                        sat_scswc [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            CCCS :! [sat_scsw5
                                                                                     sat_scswb]; } in
                                                                      let {
                                                                        sat_scsw3 [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scsvM] \u []
                                                                                case ds8_scsvM of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        xs_scsw0 [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      xs_scsw0;
                                                                                }; } in
                                                                      let {
                                                                        sat_scsvX [Occ=Once]
                                                                          :: [a_scrPx]
                                                                        [LclId] =
                                                                            [ds8_scsvM] \u []
                                                                                case ds8_scsvM of {
                                                                                  (,,,) os_scsvT [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      os_scsvT;
                                                                                };
                                                                      } in 
                                                                        (#,,,#) [sat_scsvX
                                                                                 sat_scsw3
                                                                                 sat_scswc
                                                                                 sat_scswi];
                                                                  : _ [Occ=Dead] _ [Occ=Dead] ->
                                                                      let {
                                                                        ds8_scswl [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                          :: ([a_scrPx],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String])
                                                                        [LclId] =
                                                                            [w_scsrX
                                                                             w1_scsrY
                                                                             args_scss2
                                                                             wild6_scsvL] \u []
                                                                                let {
                                                                                  sat_scswm [Occ=OnceL]
                                                                                    :: [GHC.Types.Char]
                                                                                  [LclId] =
                                                                                      CCCS :! [lvl21_rcsng
                                                                                               wild6_scsvL]; } in
                                                                                let {
                                                                                  sat_scswn [Occ=Once]
                                                                                    :: [GHC.Base.String]
                                                                                  [LclId] =
                                                                                      CCCS :! [sat_scswm
                                                                                               args_scss2];
                                                                                } in 
                                                                                  case
                                                                                      System.Console.GetOpt.$wgetOpt'
                                                                                          w_scsrX
                                                                                          w1_scsrY
                                                                                          sat_scswn
                                                                                  of
                                                                                  { (#,,,#) ww1_scswp [Occ=Once]
                                                                                            ww2_scswq [Occ=Once]
                                                                                            ww3_scswr [Occ=Once]
                                                                                            ww4_scsws [Occ=Once] ->
                                                                                        (,,,) [ww1_scswp
                                                                                               ww2_scswq
                                                                                               ww3_scswr
                                                                                               ww4_scsws];
                                                                                  }; } in
                                                                      let {
                                                                        sat_scswT [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scswl] \u []
                                                                                case ds8_scswl of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        es_scswS [Occ=Once] ->
                                                                                      es_scswS;
                                                                                }; } in
                                                                      let {
                                                                        sat_scswM [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scswl] \u []
                                                                                case ds8_scswl of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        us_scswK [Occ=Once]
                                                                                        _ [Occ=Dead] ->
                                                                                      us_scswK;
                                                                                }; } in
                                                                      let {
                                                                        sat_scswF [Occ=Once]
                                                                          :: [GHC.Types.Char]
                                                                        [LclId] =
                                                                            CCCS :! [wild4_scsvm
                                                                                     GHC.Types.[]]; } in
                                                                      let {
                                                                        sat_scswG [Occ=Once]
                                                                          :: GHC.Base.String
                                                                        [LclId] =
                                                                            CCCS :! [lvl21_rcsng
                                                                                     sat_scswF]; } in
                                                                      let {
                                                                        sat_scswN [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            CCCS :! [sat_scswG
                                                                                     sat_scswM]; } in
                                                                      let {
                                                                        sat_scswE [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scswl] \u []
                                                                                case ds8_scswl of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        xs_scswB [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      xs_scswB;
                                                                                }; } in
                                                                      let {
                                                                        sat_scswy [Occ=Once]
                                                                          :: [a_scrPx]
                                                                        [LclId] =
                                                                            [ds8_scswl] \u []
                                                                                case ds8_scswl of {
                                                                                  (,,,) os_scswu [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      os_scswu;
                                                                                };
                                                                      } in 
                                                                        (#,,,#) [sat_scswy
                                                                                 sat_scswE
                                                                                 sat_scswN
                                                                                 sat_scswT];
                                                                };
                                                            : ds8_scswU [Occ=Once!]
                                                              ds9_scswV [Occ=Once!] ->
                                                                case ds9_scswV of {
                                                                  [] ->
                                                                      case ds8_scswU of {
                                                                        System.Console.GetOpt.NoArg a1_scswY [Occ=Once*] ->
                                                                            case
                                                                                ds5_scsvl
                                                                            of
                                                                            wild8_scswZ
                                                                            { [] ->
                                                                                  let {
                                                                                    ds10_scsx0 [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                      :: ([a_scrPx],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String])
                                                                                    [LclId] =
                                                                                        [w_scsrX
                                                                                         w1_scsrY
                                                                                         args_scss2] \u []
                                                                                            case
                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                    w_scsrX
                                                                                                    w1_scsrY
                                                                                                    args_scss2
                                                                                            of
                                                                                            { (#,,,#) ww1_scsx2 [Occ=Once]
                                                                                                      ww2_scsx3 [Occ=Once]
                                                                                                      ww3_scsx4 [Occ=Once]
                                                                                                      ww4_scsx5 [Occ=Once] ->
                                                                                                  (,,,) [ww1_scsx2
                                                                                                         ww2_scsx3
                                                                                                         ww3_scsx4
                                                                                                         ww4_scsx5];
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsxu [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scsx0] \u []
                                                                                            case
                                                                                                ds10_scsx0
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    es_scsxt [Occ=Once] ->
                                                                                                  es_scsxt;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsxo [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scsx0] \u []
                                                                                            case
                                                                                                ds10_scsx0
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    us_scsxm [Occ=Once]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  us_scsxm;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsxi [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scsx0] \u []
                                                                                            case
                                                                                                ds10_scsx0
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    xs_scsxf [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  xs_scsxf;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsxb [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        [ds10_scsx0] \u []
                                                                                            case
                                                                                                ds10_scsx0
                                                                                            of
                                                                                            { (,,,) os_scsx7 [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  os_scsx7;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsxc [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        CCCS :! [a1_scswY
                                                                                                 sat_scsxb];
                                                                                  } in 
                                                                                    (#,,,#) [sat_scsxc
                                                                                             sat_scsxi
                                                                                             sat_scsxo
                                                                                             sat_scsxu];
                                                                              : _ [Occ=Dead]
                                                                                _ [Occ=Dead] ->
                                                                                  let {
                                                                                    ds10_scsxx [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                      :: ([a_scrPx],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String])
                                                                                    [LclId] =
                                                                                        [w_scsrX
                                                                                         w1_scsrY
                                                                                         args_scss2
                                                                                         wild8_scswZ] \u []
                                                                                            let {
                                                                                              sat_scsxy [Occ=OnceL]
                                                                                                :: [GHC.Types.Char]
                                                                                              [LclId] =
                                                                                                  CCCS :! [lvl21_rcsng
                                                                                                           wild8_scswZ]; } in
                                                                                            let {
                                                                                              sat_scsxz [Occ=Once]
                                                                                                :: [GHC.Base.String]
                                                                                              [LclId] =
                                                                                                  CCCS :! [sat_scsxy
                                                                                                           args_scss2];
                                                                                            } in 
                                                                                              case
                                                                                                  System.Console.GetOpt.$wgetOpt'
                                                                                                      w_scsrX
                                                                                                      w1_scsrY
                                                                                                      sat_scsxz
                                                                                              of
                                                                                              { (#,,,#) ww1_scsxB [Occ=Once]
                                                                                                        ww2_scsxC [Occ=Once]
                                                                                                        ww3_scsxD [Occ=Once]
                                                                                                        ww4_scsxE [Occ=Once] ->
                                                                                                    (,,,) [ww1_scsxB
                                                                                                           ww2_scsxC
                                                                                                           ww3_scsxD
                                                                                                           ww4_scsxE];
                                                                                              }; } in
                                                                                  let {
                                                                                    sat_scsy3 [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scsxx] \u []
                                                                                            case
                                                                                                ds10_scsxx
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    es_scsy2 [Occ=Once] ->
                                                                                                  es_scsy2;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsxX [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scsxx] \u []
                                                                                            case
                                                                                                ds10_scsxx
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    us_scsxV [Occ=Once]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  us_scsxV;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsxR [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scsxx] \u []
                                                                                            case
                                                                                                ds10_scsxx
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    xs_scsxO [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  xs_scsxO;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsxK [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        [ds10_scsxx] \u []
                                                                                            case
                                                                                                ds10_scsxx
                                                                                            of
                                                                                            { (,,,) os_scsxG [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  os_scsxG;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsxL [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        CCCS :! [a1_scswY
                                                                                                 sat_scsxK];
                                                                                  } in 
                                                                                    (#,,,#) [sat_scsxL
                                                                                             sat_scsxR
                                                                                             sat_scsxX
                                                                                             sat_scsy3];
                                                                            };
                                                                        System.Console.GetOpt.ReqArg ds10_scsy4 [Occ=Once*!]
                                                                                                     d_scsy5 [Occ=Once] ->
                                                                            case
                                                                                ds5_scsvl
                                                                            of
                                                                            wild8_scsy6
                                                                            { [] ->
                                                                                  case
                                                                                      args_scss2
                                                                                  of
                                                                                  { [] ->
                                                                                        let {
                                                                                          ds11_scsy8 [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                            :: ([a_scrPx],
                                                                                                [GHC.Base.String],
                                                                                                [GHC.Base.String],
                                                                                                [GHC.Base.String])
                                                                                          [LclId] =
                                                                                              [w_scsrX
                                                                                               w1_scsrY] \u []
                                                                                                  case
                                                                                                      System.Console.GetOpt.$wgetOpt'
                                                                                                          w_scsrX
                                                                                                          w1_scsrY
                                                                                                          GHC.Types.[]
                                                                                                  of
                                                                                                  { (#,,,#) ww1_scsya [Occ=Once]
                                                                                                            ww2_scsyb [Occ=Once]
                                                                                                            ww3_scsyc [Occ=Once]
                                                                                                            ww4_scsyd [Occ=Once] ->
                                                                                                        (,,,) [ww1_scsya
                                                                                                               ww2_scsyb
                                                                                                               ww3_scsyc
                                                                                                               ww4_scsyd];
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scsyH [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scsy8] \u []
                                                                                                  case
                                                                                                      ds11_scsy8
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          es_scsyG [Occ=Once] ->
                                                                                                        es_scsyG;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scsyB [Occ=Once]
                                                                                            :: GHC.Base.String
                                                                                          [LclId] =
                                                                                              [wild4_scsvm
                                                                                               d_scsy5] \u []
                                                                                                  let {
                                                                                                    sat_scsyA [Occ=Once]
                                                                                                      :: [GHC.Types.Char]
                                                                                                    [LclId] =
                                                                                                        [wild4_scsvm
                                                                                                         d_scsy5] \u []
                                                                                                            let {
                                                                                                              sat_scsyz [Occ=Once,
                                                                                                                         Dmd=<L,1*U>]
                                                                                                                :: [GHC.Types.Char]
                                                                                                              [LclId] =
                                                                                                                  [d_scsy5] \s []
                                                                                                                      let {
                                                                                                                        sat_scsyy [Occ=Once]
                                                                                                                          :: [GHC.Types.Char]
                                                                                                                        [LclId] =
                                                                                                                            [d_scsy5] \u []
                                                                                                                                GHC.Base.++
                                                                                                                                    d_scsy5
                                                                                                                                    lvl16_rcsnb;
                                                                                                                      } in 
                                                                                                                        GHC.CString.unpackAppendCString#
                                                                                                                            lvl14_rcsn9
                                                                                                                            sat_scsyy; } in
                                                                                                            let {
                                                                                                              sat_scsyw [Occ=Once]
                                                                                                                :: [GHC.Types.Char]
                                                                                                              [LclId] =
                                                                                                                  CCCS :! [wild4_scsvm
                                                                                                                           GHC.Types.[]]; } in
                                                                                                            let {
                                                                                                              sat_scsyx [Occ=Once]
                                                                                                                :: [GHC.Types.Char]
                                                                                                              [LclId] =
                                                                                                                  CCCS :! [lvl21_rcsng
                                                                                                                           sat_scsyw];
                                                                                                            } in 
                                                                                                              GHC.Base.++
                                                                                                                  sat_scsyx
                                                                                                                  sat_scsyz;
                                                                                                  } in 
                                                                                                    GHC.CString.unpackAppendCString#
                                                                                                        lvl12_rcsn7
                                                                                                        sat_scsyA; } in
                                                                                        let {
                                                                                          sat_scsyI [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              CCCS :! [sat_scsyB
                                                                                                       sat_scsyH]; } in
                                                                                        let {
                                                                                          sat_scsyv [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scsy8] \u []
                                                                                                  case
                                                                                                      ds11_scsy8
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          us_scsyt [Occ=Once]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        us_scsyt;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scsyp [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scsy8] \u []
                                                                                                  case
                                                                                                      ds11_scsy8
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          xs_scsym [Occ=Once]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        xs_scsym;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scsyj [Occ=Once]
                                                                                            :: [a_scrPx]
                                                                                          [LclId] =
                                                                                              [ds11_scsy8] \u []
                                                                                                  case
                                                                                                      ds11_scsy8
                                                                                                  of
                                                                                                  { (,,,) os_scsyf [Occ=Once]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        os_scsyf;
                                                                                                  };
                                                                                        } in 
                                                                                          (#,,,#) [sat_scsyj
                                                                                                   sat_scsyp
                                                                                                   sat_scsyv
                                                                                                   sat_scsyI];
                                                                                    : r_scsyJ [Occ=Once]
                                                                                      rest_scsyK [Occ=Once] ->
                                                                                        let {
                                                                                          ds11_scsyL [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                            :: ([a_scrPx],
                                                                                                [GHC.Base.String],
                                                                                                [GHC.Base.String],
                                                                                                [GHC.Base.String])
                                                                                          [LclId] =
                                                                                              [w_scsrX
                                                                                               w1_scsrY
                                                                                               rest_scsyK] \u []
                                                                                                  case
                                                                                                      System.Console.GetOpt.$wgetOpt'
                                                                                                          w_scsrX
                                                                                                          w1_scsrY
                                                                                                          rest_scsyK
                                                                                                  of
                                                                                                  { (#,,,#) ww1_scsyN [Occ=Once]
                                                                                                            ww2_scsyO [Occ=Once]
                                                                                                            ww3_scsyP [Occ=Once]
                                                                                                            ww4_scsyQ [Occ=Once] ->
                                                                                                        (,,,) [ww1_scsyN
                                                                                                               ww2_scsyO
                                                                                                               ww3_scsyP
                                                                                                               ww4_scsyQ];
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scszg [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scsyL] \u []
                                                                                                  case
                                                                                                      ds11_scsyL
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          es_scszf [Occ=Once] ->
                                                                                                        es_scszf;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scsza [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scsyL] \u []
                                                                                                  case
                                                                                                      ds11_scsyL
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          us_scsz8 [Occ=Once]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        us_scsz8;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scsz4 [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scsyL] \u []
                                                                                                  case
                                                                                                      ds11_scsyL
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          xs_scsz1 [Occ=Once]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        xs_scsz1;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scsyX [Occ=Once]
                                                                                            :: [a_scrPx]
                                                                                          [LclId] =
                                                                                              [ds11_scsyL] \u []
                                                                                                  case
                                                                                                      ds11_scsyL
                                                                                                  of
                                                                                                  { (,,,) os_scsyT [Occ=Once]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        os_scsyT;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scsyR [Occ=Once]
                                                                                            :: a_scrPx
                                                                                          [LclId] =
                                                                                              [ds10_scsy4
                                                                                               r_scsyJ] \u []
                                                                                                  ds10_scsy4
                                                                                                      r_scsyJ; } in
                                                                                        let {
                                                                                          sat_scsyY [Occ=Once]
                                                                                            :: [a_scrPx]
                                                                                          [LclId] =
                                                                                              CCCS :! [sat_scsyR
                                                                                                       sat_scsyX];
                                                                                        } in 
                                                                                          (#,,,#) [sat_scsyY
                                                                                                   sat_scsz4
                                                                                                   sat_scsza
                                                                                                   sat_scszg];
                                                                                  };
                                                                              : _ [Occ=Dead]
                                                                                _ [Occ=Dead] ->
                                                                                  let {
                                                                                    ds11_scszj [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                      :: ([a_scrPx],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String])
                                                                                    [LclId] =
                                                                                        [w_scsrX
                                                                                         w1_scsrY
                                                                                         args_scss2] \u []
                                                                                            case
                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                    w_scsrX
                                                                                                    w1_scsrY
                                                                                                    args_scss2
                                                                                            of
                                                                                            { (#,,,#) ww1_scszl [Occ=Once]
                                                                                                      ww2_scszm [Occ=Once]
                                                                                                      ww3_scszn [Occ=Once]
                                                                                                      ww4_scszo [Occ=Once] ->
                                                                                                  (,,,) [ww1_scszl
                                                                                                         ww2_scszm
                                                                                                         ww3_scszn
                                                                                                         ww4_scszo];
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scszO [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scszj] \u []
                                                                                            case
                                                                                                ds11_scszj
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    es_scszN [Occ=Once] ->
                                                                                                  es_scszN;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scszI [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scszj] \u []
                                                                                            case
                                                                                                ds11_scszj
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    us_scszG [Occ=Once]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  us_scszG;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scszC [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scszj] \u []
                                                                                            case
                                                                                                ds11_scszj
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    xs_scszz [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  xs_scszz;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scszv [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        [ds11_scszj] \u []
                                                                                            case
                                                                                                ds11_scszj
                                                                                            of
                                                                                            { (,,,) os_scszr [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  os_scszr;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scszp [Occ=Once]
                                                                                      :: a_scrPx
                                                                                    [LclId] =
                                                                                        [ds10_scsy4
                                                                                         wild8_scsy6] \u []
                                                                                            ds10_scsy4
                                                                                                wild8_scsy6; } in
                                                                                  let {
                                                                                    sat_scszw [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        CCCS :! [sat_scszp
                                                                                                 sat_scszv];
                                                                                  } in 
                                                                                    (#,,,#) [sat_scszw
                                                                                             sat_scszC
                                                                                             sat_scszI
                                                                                             sat_scszO];
                                                                            };
                                                                        System.Console.GetOpt.OptArg f_scszP [Occ=Once*!]
                                                                                                     _ [Occ=Dead] ->
                                                                            case
                                                                                ds5_scsvl
                                                                            of
                                                                            wild8_scszR
                                                                            { [] ->
                                                                                  let {
                                                                                    ds11_scszS [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                      :: ([a_scrPx],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String])
                                                                                    [LclId] =
                                                                                        [w_scsrX
                                                                                         w1_scsrY
                                                                                         args_scss2] \u []
                                                                                            case
                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                    w_scsrX
                                                                                                    w1_scsrY
                                                                                                    args_scss2
                                                                                            of
                                                                                            { (#,,,#) ww1_scszU [Occ=Once]
                                                                                                      ww2_scszV [Occ=Once]
                                                                                                      ww3_scszW [Occ=Once]
                                                                                                      ww4_scszX [Occ=Once] ->
                                                                                                  (,,,) [ww1_scszU
                                                                                                         ww2_scszV
                                                                                                         ww3_scszW
                                                                                                         ww4_scszX];
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsAn [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scszS] \u []
                                                                                            case
                                                                                                ds11_scszS
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    es_scsAm [Occ=Once] ->
                                                                                                  es_scsAm;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsAh [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scszS] \u []
                                                                                            case
                                                                                                ds11_scszS
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    us_scsAf [Occ=Once]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  us_scsAf;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsAb [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scszS] \u []
                                                                                            case
                                                                                                ds11_scszS
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    xs_scsA8 [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  xs_scsA8;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsA4 [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        [ds11_scszS] \u []
                                                                                            case
                                                                                                ds11_scszS
                                                                                            of
                                                                                            { (,,,) os_scsA0 [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  os_scsA0;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scszY [Occ=Once]
                                                                                      :: a_scrPx
                                                                                    [LclId] =
                                                                                        [f_scszP] \u []
                                                                                            f_scszP
                                                                                                GHC.Base.Nothing; } in
                                                                                  let {
                                                                                    sat_scsA5 [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        CCCS :! [sat_scszY
                                                                                                 sat_scsA4];
                                                                                  } in 
                                                                                    (#,,,#) [sat_scsA5
                                                                                             sat_scsAb
                                                                                             sat_scsAh
                                                                                             sat_scsAn];
                                                                              : _ [Occ=Dead]
                                                                                _ [Occ=Dead] ->
                                                                                  let {
                                                                                    ds11_scsAq [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                      :: ([a_scrPx],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String])
                                                                                    [LclId] =
                                                                                        [w_scsrX
                                                                                         w1_scsrY
                                                                                         args_scss2] \u []
                                                                                            case
                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                    w_scsrX
                                                                                                    w1_scsrY
                                                                                                    args_scss2
                                                                                            of
                                                                                            { (#,,,#) ww1_scsAs [Occ=Once]
                                                                                                      ww2_scsAt [Occ=Once]
                                                                                                      ww3_scsAu [Occ=Once]
                                                                                                      ww4_scsAv [Occ=Once] ->
                                                                                                  (,,,) [ww1_scsAs
                                                                                                         ww2_scsAt
                                                                                                         ww3_scsAu
                                                                                                         ww4_scsAv];
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsAW [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scsAq] \u []
                                                                                            case
                                                                                                ds11_scsAq
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    es_scsAV [Occ=Once] ->
                                                                                                  es_scsAV;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsAQ [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scsAq] \u []
                                                                                            case
                                                                                                ds11_scsAq
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    us_scsAO [Occ=Once]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  us_scsAO;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsAK [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scsAq] \u []
                                                                                            case
                                                                                                ds11_scsAq
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    xs_scsAH [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  xs_scsAH;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsAD [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        [ds11_scsAq] \u []
                                                                                            case
                                                                                                ds11_scsAq
                                                                                            of
                                                                                            { (,,,) os_scsAz [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  os_scsAz;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsAx [Occ=Once]
                                                                                      :: a_scrPx
                                                                                    [LclId] =
                                                                                        [f_scszP
                                                                                         wild8_scszR] \u []
                                                                                            let {
                                                                                              sat_scsAw [Occ=Once]
                                                                                                :: GHC.Base.Maybe
                                                                                                     GHC.Base.String
                                                                                              [LclId] =
                                                                                                  CCCS GHC.Base.Just! [wild8_scszR];
                                                                                            } in 
                                                                                              f_scszP
                                                                                                  sat_scsAw; } in
                                                                                  let {
                                                                                    sat_scsAE [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        CCCS :! [sat_scsAx
                                                                                                 sat_scsAD];
                                                                                  } in 
                                                                                    (#,,,#) [sat_scsAE
                                                                                             sat_scsAK
                                                                                             sat_scsAQ
                                                                                             sat_scsAW];
                                                                            };
                                                                      };
                                                                  : _ [Occ=Dead] _ [Occ=Dead] ->
                                                                      let {
                                                                        ds12_scsAZ [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                          :: ([a_scrPx],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String])
                                                                        [LclId] =
                                                                            [w_scsrX
                                                                             w1_scsrY
                                                                             args_scss2] \u []
                                                                                case
                                                                                    System.Console.GetOpt.$wgetOpt'
                                                                                        w_scsrX
                                                                                        w1_scsrY
                                                                                        args_scss2
                                                                                of
                                                                                { (#,,,#) ww1_scsB1 [Occ=Once]
                                                                                          ww2_scsB2 [Occ=Once]
                                                                                          ww3_scsB3 [Occ=Once]
                                                                                          ww4_scsB4 [Occ=Once] ->
                                                                                      (,,,) [ww1_scsB1
                                                                                             ww2_scsB2
                                                                                             ww3_scsB3
                                                                                             ww4_scsB4];
                                                                                }; } in
                                                                      let {
                                                                        sat_scsBx [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds12_scsAZ] \u []
                                                                                case ds12_scsAZ of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        es_scsBw [Occ=Once] ->
                                                                                      es_scsBw;
                                                                                }; } in
                                                                      let {
                                                                        sat_scsBr [Occ=Once]
                                                                          :: GHC.Base.String
                                                                        [LclId] =
                                                                            [wild4_scsvm
                                                                             options_scsvJ] \u []
                                                                                let {
                                                                                  sat_scsBq [Occ=Once]
                                                                                    :: GHC.Base.String
                                                                                  [LclId] =
                                                                                      [wild4_scsvm] \u []
                                                                                          let {
                                                                                            sat_scsBp [Occ=Once]
                                                                                              :: [GHC.Types.Char]
                                                                                            [LclId] =
                                                                                                [wild4_scsvm] \u []
                                                                                                    let {
                                                                                                      sat_scsBn [Occ=Once]
                                                                                                        :: [GHC.Types.Char]
                                                                                                      [LclId] =
                                                                                                          CCCS :! [wild4_scsvm
                                                                                                                   GHC.Types.[]]; } in
                                                                                                    let {
                                                                                                      sat_scsBo [Occ=Once]
                                                                                                        :: [GHC.Types.Char]
                                                                                                      [LclId] =
                                                                                                          CCCS :! [lvl21_rcsng
                                                                                                                   sat_scsBn];
                                                                                                    } in 
                                                                                                      GHC.Base.++
                                                                                                          sat_scsBo
                                                                                                          lvl24_rcsnk;
                                                                                          } in 
                                                                                            GHC.CString.unpackAppendCString#
                                                                                                lvl12_rcsn7
                                                                                                sat_scsBp;
                                                                                } in 
                                                                                  System.Console.GetOpt.usageInfo
                                                                                      sat_scsBq
                                                                                      options_scsvJ; } in
                                                                      let {
                                                                        sat_scsBy [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            CCCS :! [sat_scsBr
                                                                                     sat_scsBx]; } in
                                                                      let {
                                                                        sat_scsBm [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds12_scsAZ] \u []
                                                                                case ds12_scsAZ of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        us_scsBk [Occ=Once]
                                                                                        _ [Occ=Dead] ->
                                                                                      us_scsBk;
                                                                                }; } in
                                                                      let {
                                                                        sat_scsBg [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds12_scsAZ] \u []
                                                                                case ds12_scsAZ of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        xs_scsBd [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      xs_scsBd;
                                                                                }; } in
                                                                      let {
                                                                        sat_scsBa [Occ=Once]
                                                                          :: [a_scrPx]
                                                                        [LclId] =
                                                                            [ds12_scsAZ] \u []
                                                                                case ds12_scsAZ of {
                                                                                  (,,,) os_scsB6 [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      os_scsB6;
                                                                                };
                                                                      } in 
                                                                        (#,,,#) [sat_scsBa
                                                                                 sat_scsBg
                                                                                 sat_scsBm
                                                                                 sat_scsBy];
                                                                };
                                                          };
                                                    };
                                              '-'# ->
                                                  case ds5_scsvl of wild5_scsBz {
                                                    [] ->
                                                        case w_scsrX of {
                                                          __DEFAULT ->
                                                              (#,,,#) [GHC.Types.[]
                                                                       args_scss2
                                                                       GHC.Types.[]
                                                                       GHC.Types.[]];
                                                          System.Console.GetOpt.ReturnInOrder f_scsBB [Occ=Once] ->
                                                              let {
                                                                sat_scsBC [Occ=Once] :: [a_scrPx]
                                                                [LclId] =
                                                                    [args_scss2 f_scsBB] \u []
                                                                        GHC.Base.map
                                                                            f_scsBB args_scss2;
                                                              } in 
                                                                (#,,,#) [sat_scsBC
                                                                         GHC.Types.[]
                                                                         GHC.Types.[]
                                                                         GHC.Types.[]];
                                                        };
                                                    : _ [Occ=Dead] _ [Occ=Dead] ->
                                                        let {
                                                          ds8_scsBF [Dmd=<L,U(1*U,1*U)>]
                                                            :: ([GHC.Types.Char], [GHC.Types.Char])
                                                          [LclId] =
                                                              [wild5_scsBz] \u []
                                                                  case
                                                                      GHC.List.$wbreak
                                                                          lvl20_rcsnf wild5_scsBz
                                                                  of
                                                                  { (#,#) ww1_scsBH [Occ=Once]
                                                                          ww2_scsBI [Occ=Once] ->
                                                                        (,) [ww1_scsBH ww2_scsBI];
                                                                  }; } in
                                                        let {
                                                          opt_scsBJ :: [GHC.Types.Char]
                                                          [LclId] =
                                                              [ds8_scsBF] \u []
                                                                  case ds8_scsBF of {
                                                                    (,) opt1_scsBL [Occ=Once]
                                                                        _ [Occ=Dead] ->
                                                                        opt1_scsBL;
                                                                  }; } in
                                                        let {
                                                          getWith_scsBN [Dmd=<C(S),C(U)>]
                                                            :: ([GHC.Types.Char]
                                                                -> GHC.Base.String
                                                                -> GHC.Types.Bool)
                                                               -> [System.Console.GetOpt.OptDescr
                                                                     a_scrPx]
                                                          [LclId,
                                                           Arity=1,
                                                           Str=<L,1*C1(C(U))>,
                                                           Unf=OtherCon []] =
                                                              sat-only [w1_scsrY
                                                                        opt_scsBJ] \r [p_scsBO]
                                                                  let {
                                                                    p1_scsBP [Occ=OnceL!,
                                                                              Dmd=<L,C(U)>]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Types.Bool
                                                                    [LclId] =
                                                                        [opt_scsBJ p_scsBO] \u []
                                                                            p_scsBO opt_scsBJ; } in
                                                                  let {
                                                                    go_scsBQ [Occ=LoopBreaker]
                                                                      :: [System.Console.GetOpt.OptDescr
                                                                            a_scrPx]
                                                                         -> [System.Console.GetOpt.OptDescr
                                                                               a_scrPx]
                                                                    [LclId,
                                                                     Arity=1,
                                                                     Str=<S,1*U>,
                                                                     Unf=OtherCon []] =
                                                                        sat-only [p1_scsBP
                                                                                  go_scsBQ] \r [ds9_scsBR]
                                                                            case ds9_scsBR of {
                                                                              [] -> [] [];
                                                                              : y_scsBT [Occ=Once!]
                                                                                ys_scsBU ->
                                                                                  case
                                                                                      y_scsBT
                                                                                  of
                                                                                  wild7_scsBV
                                                                                  { System.Console.GetOpt.Option _ [Occ=Dead]
                                                                                                                 xs_scsBX [Occ=Once]
                                                                                                                 _ [Occ=Dead]
                                                                                                                 _ [Occ=Dead] ->
                                                                                        let-no-escape {
                                                                                          exit_scsC0 [Occ=OnceLT[0]]
                                                                                            :: [System.Console.GetOpt.OptDescr
                                                                                                  a_scrPx]
                                                                                          [LclId[JoinId(0)],
                                                                                           Unf=OtherCon []] =
                                                                                              [go_scsBQ
                                                                                               ys_scsBU] \r []
                                                                                                  go_scsBQ
                                                                                                      ys_scsBU;
                                                                                        } in 
                                                                                          let-no-escape {
                                                                                            exit1_scsC1 [Occ=OnceLT[0]]
                                                                                              :: [System.Console.GetOpt.OptDescr
                                                                                                    a_scrPx]
                                                                                            [LclId[JoinId(0)],
                                                                                             Unf=OtherCon []] =
                                                                                                [go_scsBQ
                                                                                                 ys_scsBU
                                                                                                 wild7_scsBV] \r []
                                                                                                    let {
                                                                                                      sat_scsC2 [Occ=Once]
                                                                                                        :: [System.Console.GetOpt.OptDescr
                                                                                                              a_scrPx]
                                                                                                      [LclId] =
                                                                                                          [go_scsBQ
                                                                                                           ys_scsBU] \u []
                                                                                                              go_scsBQ
                                                                                                                  ys_scsBU;
                                                                                                    } in 
                                                                                                      : [wild7_scsBV
                                                                                                         sat_scsC2];
                                                                                          } in 
                                                                                            let-no-escape {
                                                                                              go1_scsC3 [Occ=LoopBreakerT[1]]
                                                                                                :: [GHC.Base.String]
                                                                                                   -> [System.Console.GetOpt.OptDescr
                                                                                                         a_scrPx]
                                                                                              [LclId[JoinId(1)],
                                                                                               Arity=1,
                                                                                               Str=<S,1*U>,
                                                                                               Unf=OtherCon []] =
                                                                                                  sat-only [p1_scsBP
                                                                                                            exit_scsC0
                                                                                                            exit1_scsC1
                                                                                                            go1_scsC3] \r [ds13_scsC4]
                                                                                                      case
                                                                                                          ds13_scsC4
                                                                                                      of
                                                                                                      { [] ->
                                                                                                            exit_scsC0;
                                                                                                        : y1_scsC6 [Occ=Once]
                                                                                                          ys1_scsC7 [Occ=Once] ->
                                                                                                            case
                                                                                                                p1_scsBP
                                                                                                                    y1_scsC6
                                                                                                            of
                                                                                                            { GHC.Types.False ->
                                                                                                                  go1_scsC3
                                                                                                                      ys1_scsC7;
                                                                                                              GHC.Types.True ->
                                                                                                                  exit1_scsC1;
                                                                                                            };
                                                                                                      };
                                                                                            } in 
                                                                                              go1_scsC3
                                                                                                  xs_scsBX;
                                                                                  };
                                                                            };
                                                                  } in  go_scsBQ w1_scsrY;
                                                        } in 
                                                          let-no-escape {
                                                            $j_scsC9 [Occ=Once*!T[1],
                                                                      Dmd=<C(S),1*C1(U(U,U,U,U))>]
                                                              :: [System.Console.GetOpt.OptDescr
                                                                    a_scrPx]
                                                                 -> (# [a_scrPx], [GHC.Base.String],
                                                                       [GHC.Base.String],
                                                                       [GHC.Base.String] #)
                                                            [LclId[JoinId(1)],
                                                             Arity=1,
                                                             Str=<S,U>,
                                                             Unf=OtherCon []] =
                                                                sat-only [w_scsrX
                                                                          w1_scsrY
                                                                          args_scss2
                                                                          wild5_scsBz
                                                                          ds8_scsBF
                                                                          opt_scsBJ] \r [options_scsCa]
                                                                    case
                                                                        poly_go_rcsnj options_scsCa
                                                                    of
                                                                    { [] ->
                                                                          let {
                                                                            ds9_scsCc [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                              :: ([a_scrPx],
                                                                                  [GHC.Base.String],
                                                                                  [GHC.Base.String],
                                                                                  [GHC.Base.String])
                                                                            [LclId] =
                                                                                [w_scsrX
                                                                                 w1_scsrY
                                                                                 args_scss2] \u []
                                                                                    case
                                                                                        System.Console.GetOpt.$wgetOpt'
                                                                                            w_scsrX
                                                                                            w1_scsrY
                                                                                            args_scss2
                                                                                    of
                                                                                    { (#,,,#) ww1_scsCe [Occ=Once]
                                                                                              ww2_scsCf [Occ=Once]
                                                                                              ww3_scsCg [Occ=Once]
                                                                                              ww4_scsCh [Occ=Once] ->
                                                                                          (,,,) [ww1_scsCe
                                                                                                 ww2_scsCf
                                                                                                 ww3_scsCg
                                                                                                 ww4_scsCh];
                                                                                    }; } in
                                                                          let {
                                                                            sat_scsCH [Occ=Once]
                                                                              :: [GHC.Base.String]
                                                                            [LclId] =
                                                                                [ds9_scsCc] \u []
                                                                                    case
                                                                                        ds9_scsCc
                                                                                    of
                                                                                    { (,,,) _ [Occ=Dead]
                                                                                            _ [Occ=Dead]
                                                                                            _ [Occ=Dead]
                                                                                            es_scsCG [Occ=Once] ->
                                                                                          es_scsCG;
                                                                                    }; } in
                                                                          let {
                                                                            sat_scsCA [Occ=Once]
                                                                              :: [GHC.Base.String]
                                                                            [LclId] =
                                                                                [ds9_scsCc] \u []
                                                                                    case
                                                                                        ds9_scsCc
                                                                                    of
                                                                                    { (,,,) _ [Occ=Dead]
                                                                                            _ [Occ=Dead]
                                                                                            us_scsCy [Occ=Once]
                                                                                            _ [Occ=Dead] ->
                                                                                          us_scsCy;
                                                                                    }; } in
                                                                          let {
                                                                            sat_scsCu [Occ=Once]
                                                                              :: GHC.Base.String
                                                                            [LclId] =
                                                                                [wild5_scsBz] \u []
                                                                                    GHC.CString.unpackAppendCString#
                                                                                        lvl6_rcsn1
                                                                                        wild5_scsBz; } in
                                                                          let {
                                                                            sat_scsCB [Occ=Once]
                                                                              :: [GHC.Base.String]
                                                                            [LclId] =
                                                                                CCCS :! [sat_scsCu
                                                                                         sat_scsCA]; } in
                                                                          let {
                                                                            sat_scsCt [Occ=Once]
                                                                              :: [GHC.Base.String]
                                                                            [LclId] =
                                                                                [ds9_scsCc] \u []
                                                                                    case
                                                                                        ds9_scsCc
                                                                                    of
                                                                                    { (,,,) _ [Occ=Dead]
                                                                                            xs_scsCq [Occ=Once]
                                                                                            _ [Occ=Dead]
                                                                                            _ [Occ=Dead] ->
                                                                                          xs_scsCq;
                                                                                    }; } in
                                                                          let {
                                                                            sat_scsCn [Occ=Once]
                                                                              :: [a_scrPx]
                                                                            [LclId] =
                                                                                [ds9_scsCc] \u []
                                                                                    case
                                                                                        ds9_scsCc
                                                                                    of
                                                                                    { (,,,) os_scsCj [Occ=Once]
                                                                                            _ [Occ=Dead]
                                                                                            _ [Occ=Dead]
                                                                                            _ [Occ=Dead] ->
                                                                                          os_scsCj;
                                                                                    };
                                                                          } in 
                                                                            (#,,,#) [sat_scsCn
                                                                                     sat_scsCt
                                                                                     sat_scsCB
                                                                                     sat_scsCH];
                                                                      : ds9_scsCI [Occ=Once!]
                                                                        ds10_scsCJ [Occ=Once!] ->
                                                                          case ds10_scsCJ of {
                                                                            [] ->
                                                                                case ds9_scsCI of {
                                                                                  System.Console.GetOpt.NoArg a1_scsCM [Occ=Once] ->
                                                                                      case
                                                                                          ds8_scsBF
                                                                                      of
                                                                                      { (,) _ [Occ=Dead]
                                                                                            arg1_scsCP [Occ=Once!] ->
                                                                                            case
                                                                                                arg1_scsCP
                                                                                            of
                                                                                            { [] ->
                                                                                                  let {
                                                                                                    ds11_scsCR [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                      :: ([a_scrPx],
                                                                                                          [GHC.Base.String],
                                                                                                          [GHC.Base.String],
                                                                                                          [GHC.Base.String])
                                                                                                    [LclId] =
                                                                                                        [w_scsrX
                                                                                                         w1_scsrY
                                                                                                         args_scss2] \u []
                                                                                                            case
                                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                                    w_scsrX
                                                                                                                    w1_scsrY
                                                                                                                    args_scss2
                                                                                                            of
                                                                                                            { (#,,,#) ww1_scsCT [Occ=Once]
                                                                                                                      ww2_scsCU [Occ=Once]
                                                                                                                      ww3_scsCV [Occ=Once]
                                                                                                                      ww4_scsCW [Occ=Once] ->
                                                                                                                  (,,,) [ww1_scsCT
                                                                                                                         ww2_scsCU
                                                                                                                         ww3_scsCV
                                                                                                                         ww4_scsCW];
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scsDl [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds11_scsCR] \u []
                                                                                                            case
                                                                                                                ds11_scsCR
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    es_scsDk [Occ=Once] ->
                                                                                                                  es_scsDk;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scsDf [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds11_scsCR] \u []
                                                                                                            case
                                                                                                                ds11_scsCR
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    us_scsDd [Occ=Once]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  us_scsDd;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scsD9 [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds11_scsCR] \u []
                                                                                                            case
                                                                                                                ds11_scsCR
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    xs_scsD6 [Occ=Once]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  xs_scsD6;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scsD2 [Occ=Once]
                                                                                                      :: [a_scrPx]
                                                                                                    [LclId] =
                                                                                                        [ds11_scsCR] \u []
                                                                                                            case
                                                                                                                ds11_scsCR
                                                                                                            of
                                                                                                            { (,,,) os_scsCY [Occ=Once]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  os_scsCY;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scsD3 [Occ=Once]
                                                                                                      :: [a_scrPx]
                                                                                                    [LclId] =
                                                                                                        CCCS :! [a1_scsCM
                                                                                                                 sat_scsD2];
                                                                                                  } in 
                                                                                                    (#,,,#) [sat_scsD3
                                                                                                             sat_scsD9
                                                                                                             sat_scsDf
                                                                                                             sat_scsDl];
                                                                                              : ds11_scsDm [Occ=Once!]
                                                                                                _ [Occ=Dead] ->
                                                                                                  case
                                                                                                      ds11_scsDm
                                                                                                  of
                                                                                                  { GHC.Types.C# ds13_scsDp [Occ=Once!] ->
                                                                                                        case
                                                                                                            ds13_scsDp
                                                                                                        of
                                                                                                        { __DEFAULT ->
                                                                                                              let {
                                                                                                                ds15_scsDr [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scsrX
                                                                                                                     w1_scsrY
                                                                                                                     args_scss2] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scsrX
                                                                                                                                w1_scsrY
                                                                                                                                args_scss2
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scsDt [Occ=Once]
                                                                                                                                  ww2_scsDu [Occ=Once]
                                                                                                                                  ww3_scsDv [Occ=Once]
                                                                                                                                  ww4_scsDw [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scsDt
                                                                                                                                     ww2_scsDu
                                                                                                                                     ww3_scsDv
                                                                                                                                     ww4_scsDw];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsDW [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsDr] \u []
                                                                                                                        case
                                                                                                                            ds15_scsDr
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scsDV [Occ=Once] ->
                                                                                                                              es_scsDV;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsDP [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsDr] \u []
                                                                                                                        case
                                                                                                                            ds15_scsDr
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scsDN [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scsDN;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsDJ [Occ=Once]
                                                                                                                  :: GHC.Base.String
                                                                                                                [LclId] =
                                                                                                                    [wild5_scsBz] \u []
                                                                                                                        GHC.CString.unpackAppendCString#
                                                                                                                            lvl6_rcsn1
                                                                                                                            wild5_scsBz; } in
                                                                                                              let {
                                                                                                                sat_scsDQ [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scsDJ
                                                                                                                             sat_scsDP]; } in
                                                                                                              let {
                                                                                                                sat_scsDI [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsDr] \u []
                                                                                                                        case
                                                                                                                            ds15_scsDr
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs_scsDF [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs_scsDF;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsDC [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsDr] \u []
                                                                                                                        case
                                                                                                                            ds15_scsDr
                                                                                                                        of
                                                                                                                        { (,,,) os_scsDy [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scsDy;
                                                                                                                        };
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scsDC
                                                                                                                         sat_scsDI
                                                                                                                         sat_scsDQ
                                                                                                                         sat_scsDW];
                                                                                                          '='# ->
                                                                                                              let {
                                                                                                                ds15_scsDX [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scsrX
                                                                                                                     w1_scsrY
                                                                                                                     args_scss2] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scsrX
                                                                                                                                w1_scsrY
                                                                                                                                args_scss2
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scsDZ [Occ=Once]
                                                                                                                                  ww2_scsE0 [Occ=Once]
                                                                                                                                  ww3_scsE1 [Occ=Once]
                                                                                                                                  ww4_scsE2 [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scsDZ
                                                                                                                                     ww2_scsE0
                                                                                                                                     ww3_scsE1
                                                                                                                                     ww4_scsE2];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsEs [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsDX] \u []
                                                                                                                        case
                                                                                                                            ds15_scsDX
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scsEr [Occ=Once] ->
                                                                                                                              es_scsEr;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsEm [Occ=Once]
                                                                                                                  :: GHC.Base.String
                                                                                                                [LclId] =
                                                                                                                    [opt_scsBJ] \u []
                                                                                                                        let {
                                                                                                                          sat_scsEl [Occ=Once]
                                                                                                                            :: [GHC.Types.Char]
                                                                                                                          [LclId] =
                                                                                                                              [opt_scsBJ] \u []
                                                                                                                                  GHC.Base.++
                                                                                                                                      opt_scsBJ
                                                                                                                                      lvl22_rcsnh;
                                                                                                                        } in 
                                                                                                                          GHC.CString.unpackAppendCString#
                                                                                                                              lvl23_rcsni
                                                                                                                              sat_scsEl; } in
                                                                                                              let {
                                                                                                                sat_scsEt [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scsEm
                                                                                                                             sat_scsEs]; } in
                                                                                                              let {
                                                                                                                sat_scsEk [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsDX] \u []
                                                                                                                        case
                                                                                                                            ds15_scsDX
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scsEi [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scsEi;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsEe [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsDX] \u []
                                                                                                                        case
                                                                                                                            ds15_scsDX
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs_scsEb [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs_scsEb;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsE8 [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsDX] \u []
                                                                                                                        case
                                                                                                                            ds15_scsDX
                                                                                                                        of
                                                                                                                        { (,,,) os_scsE4 [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scsE4;
                                                                                                                        };
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scsE8
                                                                                                                         sat_scsEe
                                                                                                                         sat_scsEk
                                                                                                                         sat_scsEt];
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                  System.Console.GetOpt.ReqArg ds11_scsEu [Occ=Once*!]
                                                                                                               d_scsEv [Occ=Once] ->
                                                                                      case
                                                                                          ds8_scsBF
                                                                                      of
                                                                                      { (,) _ [Occ=Dead]
                                                                                            arg1_scsEy [Occ=Once!] ->
                                                                                            case
                                                                                                arg1_scsEy
                                                                                            of
                                                                                            { [] ->
                                                                                                  case
                                                                                                      args_scss2
                                                                                                  of
                                                                                                  { [] ->
                                                                                                        let {
                                                                                                          ds12_scsEB [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                            :: ([a_scrPx],
                                                                                                                [GHC.Base.String],
                                                                                                                [GHC.Base.String],
                                                                                                                [GHC.Base.String])
                                                                                                          [LclId] =
                                                                                                              [w_scsrX
                                                                                                               w1_scsrY] \u []
                                                                                                                  case
                                                                                                                      System.Console.GetOpt.$wgetOpt'
                                                                                                                          w_scsrX
                                                                                                                          w1_scsrY
                                                                                                                          GHC.Types.[]
                                                                                                                  of
                                                                                                                  { (#,,,#) ww1_scsED [Occ=Once]
                                                                                                                            ww2_scsEE [Occ=Once]
                                                                                                                            ww3_scsEF [Occ=Once]
                                                                                                                            ww4_scsEG [Occ=Once] ->
                                                                                                                        (,,,) [ww1_scsED
                                                                                                                               ww2_scsEE
                                                                                                                               ww3_scsEF
                                                                                                                               ww4_scsEG];
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scsF9 [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scsEB] \u []
                                                                                                                  case
                                                                                                                      ds12_scsEB
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          es_scsF8 [Occ=Once] ->
                                                                                                                        es_scsF8;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scsF3 [Occ=Once]
                                                                                                            :: GHC.Base.String
                                                                                                          [LclId] =
                                                                                                              [opt_scsBJ
                                                                                                               d_scsEv] \u []
                                                                                                                  let {
                                                                                                                    sat_scsF2 [Occ=Once]
                                                                                                                      :: [GHC.Types.Char]
                                                                                                                    [LclId] =
                                                                                                                        [opt_scsBJ
                                                                                                                         d_scsEv] \u []
                                                                                                                            let {
                                                                                                                              sat_scsF1 [Occ=Once,
                                                                                                                                         Dmd=<L,1*U>]
                                                                                                                                :: [GHC.Types.Char]
                                                                                                                              [LclId] =
                                                                                                                                  [d_scsEv] \s []
                                                                                                                                      let {
                                                                                                                                        sat_scsF0 [Occ=Once]
                                                                                                                                          :: [GHC.Types.Char]
                                                                                                                                        [LclId] =
                                                                                                                                            [d_scsEv] \u []
                                                                                                                                                GHC.Base.++
                                                                                                                                                    d_scsEv
                                                                                                                                                    lvl16_rcsnb;
                                                                                                                                      } in 
                                                                                                                                        GHC.CString.unpackAppendCString#
                                                                                                                                            lvl14_rcsn9
                                                                                                                                            sat_scsF0;
                                                                                                                            } in 
                                                                                                                              case
                                                                                                                                  GHC.CString.unpackAppendCString#
                                                                                                                                      lvl6_rcsn1
                                                                                                                                      opt_scsBJ
                                                                                                                              of
                                                                                                                              sat_scsEZ
                                                                                                                              { __DEFAULT ->
                                                                                                                                    GHC.Base.++
                                                                                                                                        sat_scsEZ
                                                                                                                                        sat_scsF1;
                                                                                                                              };
                                                                                                                  } in 
                                                                                                                    GHC.CString.unpackAppendCString#
                                                                                                                        lvl12_rcsn7
                                                                                                                        sat_scsF2; } in
                                                                                                        let {
                                                                                                          sat_scsFa [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              CCCS :! [sat_scsF3
                                                                                                                       sat_scsF9]; } in
                                                                                                        let {
                                                                                                          sat_scsEY [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scsEB] \u []
                                                                                                                  case
                                                                                                                      ds12_scsEB
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          us_scsEW [Occ=Once]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        us_scsEW;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scsES [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scsEB] \u []
                                                                                                                  case
                                                                                                                      ds12_scsEB
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          xs_scsEP [Occ=Once]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        xs_scsEP;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scsEM [Occ=Once]
                                                                                                            :: [a_scrPx]
                                                                                                          [LclId] =
                                                                                                              [ds12_scsEB] \u []
                                                                                                                  case
                                                                                                                      ds12_scsEB
                                                                                                                  of
                                                                                                                  { (,,,) os_scsEI [Occ=Once]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        os_scsEI;
                                                                                                                  };
                                                                                                        } in 
                                                                                                          (#,,,#) [sat_scsEM
                                                                                                                   sat_scsES
                                                                                                                   sat_scsEY
                                                                                                                   sat_scsFa];
                                                                                                    : r_scsFb [Occ=Once]
                                                                                                      rest_scsFc [Occ=Once] ->
                                                                                                        let {
                                                                                                          ds12_scsFd [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                            :: ([a_scrPx],
                                                                                                                [GHC.Base.String],
                                                                                                                [GHC.Base.String],
                                                                                                                [GHC.Base.String])
                                                                                                          [LclId] =
                                                                                                              [w_scsrX
                                                                                                               w1_scsrY
                                                                                                               rest_scsFc] \u []
                                                                                                                  case
                                                                                                                      System.Console.GetOpt.$wgetOpt'
                                                                                                                          w_scsrX
                                                                                                                          w1_scsrY
                                                                                                                          rest_scsFc
                                                                                                                  of
                                                                                                                  { (#,,,#) ww1_scsFf [Occ=Once]
                                                                                                                            ww2_scsFg [Occ=Once]
                                                                                                                            ww3_scsFh [Occ=Once]
                                                                                                                            ww4_scsFi [Occ=Once] ->
                                                                                                                        (,,,) [ww1_scsFf
                                                                                                                               ww2_scsFg
                                                                                                                               ww3_scsFh
                                                                                                                               ww4_scsFi];
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scsFI [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scsFd] \u []
                                                                                                                  case
                                                                                                                      ds12_scsFd
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          es_scsFH [Occ=Once] ->
                                                                                                                        es_scsFH;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scsFC [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scsFd] \u []
                                                                                                                  case
                                                                                                                      ds12_scsFd
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          us_scsFA [Occ=Once]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        us_scsFA;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scsFw [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scsFd] \u []
                                                                                                                  case
                                                                                                                      ds12_scsFd
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          xs_scsFt [Occ=Once]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        xs_scsFt;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scsFp [Occ=Once]
                                                                                                            :: [a_scrPx]
                                                                                                          [LclId] =
                                                                                                              [ds12_scsFd] \u []
                                                                                                                  case
                                                                                                                      ds12_scsFd
                                                                                                                  of
                                                                                                                  { (,,,) os_scsFl [Occ=Once]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        os_scsFl;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scsFj [Occ=Once]
                                                                                                            :: a_scrPx
                                                                                                          [LclId] =
                                                                                                              [ds11_scsEu
                                                                                                               r_scsFb] \u []
                                                                                                                  ds11_scsEu
                                                                                                                      r_scsFb; } in
                                                                                                        let {
                                                                                                          sat_scsFq [Occ=Once]
                                                                                                            :: [a_scrPx]
                                                                                                          [LclId] =
                                                                                                              CCCS :! [sat_scsFj
                                                                                                                       sat_scsFp];
                                                                                                        } in 
                                                                                                          (#,,,#) [sat_scsFq
                                                                                                                   sat_scsFw
                                                                                                                   sat_scsFC
                                                                                                                   sat_scsFI];
                                                                                                  };
                                                                                              : ds12_scsFJ [Occ=Once!]
                                                                                                xs_scsFK [Occ=Once] ->
                                                                                                  case
                                                                                                      ds12_scsFJ
                                                                                                  of
                                                                                                  { GHC.Types.C# ds13_scsFM [Occ=Once!] ->
                                                                                                        case
                                                                                                            ds13_scsFM
                                                                                                        of
                                                                                                        { __DEFAULT ->
                                                                                                              let {
                                                                                                                ds15_scsFO [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scsrX
                                                                                                                     w1_scsrY
                                                                                                                     args_scss2] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scsrX
                                                                                                                                w1_scsrY
                                                                                                                                args_scss2
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scsFQ [Occ=Once]
                                                                                                                                  ww2_scsFR [Occ=Once]
                                                                                                                                  ww3_scsFS [Occ=Once]
                                                                                                                                  ww4_scsFT [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scsFQ
                                                                                                                                     ww2_scsFR
                                                                                                                                     ww3_scsFS
                                                                                                                                     ww4_scsFT];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsGj [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsFO] \u []
                                                                                                                        case
                                                                                                                            ds15_scsFO
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scsGi [Occ=Once] ->
                                                                                                                              es_scsGi;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsGc [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsFO] \u []
                                                                                                                        case
                                                                                                                            ds15_scsFO
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scsGa [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scsGa;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsG6 [Occ=Once]
                                                                                                                  :: GHC.Base.String
                                                                                                                [LclId] =
                                                                                                                    [wild5_scsBz] \u []
                                                                                                                        GHC.CString.unpackAppendCString#
                                                                                                                            lvl6_rcsn1
                                                                                                                            wild5_scsBz; } in
                                                                                                              let {
                                                                                                                sat_scsGd [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scsG6
                                                                                                                             sat_scsGc]; } in
                                                                                                              let {
                                                                                                                sat_scsG5 [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsFO] \u []
                                                                                                                        case
                                                                                                                            ds15_scsFO
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs1_scsG2 [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs1_scsG2;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsFZ [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsFO] \u []
                                                                                                                        case
                                                                                                                            ds15_scsFO
                                                                                                                        of
                                                                                                                        { (,,,) os_scsFV [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scsFV;
                                                                                                                        };
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scsFZ
                                                                                                                         sat_scsG5
                                                                                                                         sat_scsGd
                                                                                                                         sat_scsGj];
                                                                                                          '='# ->
                                                                                                              let {
                                                                                                                ds15_scsGk [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scsrX
                                                                                                                     w1_scsrY
                                                                                                                     args_scss2] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scsrX
                                                                                                                                w1_scsrY
                                                                                                                                args_scss2
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scsGm [Occ=Once]
                                                                                                                                  ww2_scsGn [Occ=Once]
                                                                                                                                  ww3_scsGo [Occ=Once]
                                                                                                                                  ww4_scsGp [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scsGm
                                                                                                                                     ww2_scsGn
                                                                                                                                     ww3_scsGo
                                                                                                                                     ww4_scsGp];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsGP [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsGk] \u []
                                                                                                                        case
                                                                                                                            ds15_scsGk
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scsGO [Occ=Once] ->
                                                                                                                              es_scsGO;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsGJ [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsGk] \u []
                                                                                                                        case
                                                                                                                            ds15_scsGk
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scsGH [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scsGH;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsGD [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsGk] \u []
                                                                                                                        case
                                                                                                                            ds15_scsGk
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs1_scsGA [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs1_scsGA;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsGw [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsGk] \u []
                                                                                                                        case
                                                                                                                            ds15_scsGk
                                                                                                                        of
                                                                                                                        { (,,,) os_scsGs [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scsGs;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsGq [Occ=Once]
                                                                                                                  :: a_scrPx
                                                                                                                [LclId] =
                                                                                                                    [ds11_scsEu
                                                                                                                     xs_scsFK] \u []
                                                                                                                        ds11_scsEu
                                                                                                                            xs_scsFK; } in
                                                                                                              let {
                                                                                                                sat_scsGx [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scsGq
                                                                                                                             sat_scsGw];
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scsGx
                                                                                                                         sat_scsGD
                                                                                                                         sat_scsGJ
                                                                                                                         sat_scsGP];
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                  System.Console.GetOpt.OptArg f_scsGQ [Occ=Once*!]
                                                                                                               _ [Occ=Dead] ->
                                                                                      case
                                                                                          ds8_scsBF
                                                                                      of
                                                                                      { (,) _ [Occ=Dead]
                                                                                            arg1_scsGU [Occ=Once!] ->
                                                                                            case
                                                                                                arg1_scsGU
                                                                                            of
                                                                                            { [] ->
                                                                                                  let {
                                                                                                    ds12_scsGW [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                      :: ([a_scrPx],
                                                                                                          [GHC.Base.String],
                                                                                                          [GHC.Base.String],
                                                                                                          [GHC.Base.String])
                                                                                                    [LclId] =
                                                                                                        [w_scsrX
                                                                                                         w1_scsrY
                                                                                                         args_scss2] \u []
                                                                                                            case
                                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                                    w_scsrX
                                                                                                                    w1_scsrY
                                                                                                                    args_scss2
                                                                                                            of
                                                                                                            { (#,,,#) ww1_scsGY [Occ=Once]
                                                                                                                      ww2_scsGZ [Occ=Once]
                                                                                                                      ww3_scsH0 [Occ=Once]
                                                                                                                      ww4_scsH1 [Occ=Once] ->
                                                                                                                  (,,,) [ww1_scsGY
                                                                                                                         ww2_scsGZ
                                                                                                                         ww3_scsH0
                                                                                                                         ww4_scsH1];
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scsHr [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds12_scsGW] \u []
                                                                                                            case
                                                                                                                ds12_scsGW
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    es_scsHq [Occ=Once] ->
                                                                                                                  es_scsHq;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scsHl [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds12_scsGW] \u []
                                                                                                            case
                                                                                                                ds12_scsGW
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    us_scsHj [Occ=Once]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  us_scsHj;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scsHf [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds12_scsGW] \u []
                                                                                                            case
                                                                                                                ds12_scsGW
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    xs_scsHc [Occ=Once]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  xs_scsHc;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scsH8 [Occ=Once]
                                                                                                      :: [a_scrPx]
                                                                                                    [LclId] =
                                                                                                        [ds12_scsGW] \u []
                                                                                                            case
                                                                                                                ds12_scsGW
                                                                                                            of
                                                                                                            { (,,,) os_scsH4 [Occ=Once]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  os_scsH4;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scsH2 [Occ=Once]
                                                                                                      :: a_scrPx
                                                                                                    [LclId] =
                                                                                                        [f_scsGQ] \u []
                                                                                                            f_scsGQ
                                                                                                                GHC.Base.Nothing; } in
                                                                                                  let {
                                                                                                    sat_scsH9 [Occ=Once]
                                                                                                      :: [a_scrPx]
                                                                                                    [LclId] =
                                                                                                        CCCS :! [sat_scsH2
                                                                                                                 sat_scsH8];
                                                                                                  } in 
                                                                                                    (#,,,#) [sat_scsH9
                                                                                                             sat_scsHf
                                                                                                             sat_scsHl
                                                                                                             sat_scsHr];
                                                                                              : ds12_scsHs [Occ=Once!]
                                                                                                xs_scsHt [Occ=Once] ->
                                                                                                  case
                                                                                                      ds12_scsHs
                                                                                                  of
                                                                                                  { GHC.Types.C# ds13_scsHv [Occ=Once!] ->
                                                                                                        case
                                                                                                            ds13_scsHv
                                                                                                        of
                                                                                                        { __DEFAULT ->
                                                                                                              let {
                                                                                                                ds15_scsHx [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scsrX
                                                                                                                     w1_scsrY
                                                                                                                     args_scss2] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scsrX
                                                                                                                                w1_scsrY
                                                                                                                                args_scss2
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scsHz [Occ=Once]
                                                                                                                                  ww2_scsHA [Occ=Once]
                                                                                                                                  ww3_scsHB [Occ=Once]
                                                                                                                                  ww4_scsHC [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scsHz
                                                                                                                                     ww2_scsHA
                                                                                                                                     ww3_scsHB
                                                                                                                                     ww4_scsHC];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsI2 [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsHx] \u []
                                                                                                                        case
                                                                                                                            ds15_scsHx
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scsI1 [Occ=Once] ->
                                                                                                                              es_scsI1;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsHV [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsHx] \u []
                                                                                                                        case
                                                                                                                            ds15_scsHx
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scsHT [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scsHT;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsHP [Occ=Once]
                                                                                                                  :: GHC.Base.String
                                                                                                                [LclId] =
                                                                                                                    [wild5_scsBz] \u []
                                                                                                                        GHC.CString.unpackAppendCString#
                                                                                                                            lvl6_rcsn1
                                                                                                                            wild5_scsBz; } in
                                                                                                              let {
                                                                                                                sat_scsHW [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scsHP
                                                                                                                             sat_scsHV]; } in
                                                                                                              let {
                                                                                                                sat_scsHO [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsHx] \u []
                                                                                                                        case
                                                                                                                            ds15_scsHx
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs1_scsHL [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs1_scsHL;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsHI [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsHx] \u []
                                                                                                                        case
                                                                                                                            ds15_scsHx
                                                                                                                        of
                                                                                                                        { (,,,) os_scsHE [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scsHE;
                                                                                                                        };
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scsHI
                                                                                                                         sat_scsHO
                                                                                                                         sat_scsHW
                                                                                                                         sat_scsI2];
                                                                                                          '='# ->
                                                                                                              let {
                                                                                                                ds15_scsI3 [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scsrX
                                                                                                                     w1_scsrY
                                                                                                                     args_scss2] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scsrX
                                                                                                                                w1_scsrY
                                                                                                                                args_scss2
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scsI5 [Occ=Once]
                                                                                                                                  ww2_scsI6 [Occ=Once]
                                                                                                                                  ww3_scsI7 [Occ=Once]
                                                                                                                                  ww4_scsI8 [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scsI5
                                                                                                                                     ww2_scsI6
                                                                                                                                     ww3_scsI7
                                                                                                                                     ww4_scsI8];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsIz [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsI3] \u []
                                                                                                                        case
                                                                                                                            ds15_scsI3
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scsIy [Occ=Once] ->
                                                                                                                              es_scsIy;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsIt [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsI3] \u []
                                                                                                                        case
                                                                                                                            ds15_scsI3
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scsIr [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scsIr;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsIn [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsI3] \u []
                                                                                                                        case
                                                                                                                            ds15_scsI3
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs1_scsIk [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs1_scsIk;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsIg [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsI3] \u []
                                                                                                                        case
                                                                                                                            ds15_scsI3
                                                                                                                        of
                                                                                                                        { (,,,) os_scsIc [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scsIc;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsIa [Occ=Once]
                                                                                                                  :: a_scrPx
                                                                                                                [LclId] =
                                                                                                                    [f_scsGQ
                                                                                                                     xs_scsHt] \u []
                                                                                                                        let {
                                                                                                                          sat_scsI9 [Occ=Once]
                                                                                                                            :: GHC.Base.Maybe
                                                                                                                                 GHC.Base.String
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Base.Just! [xs_scsHt];
                                                                                                                        } in 
                                                                                                                          f_scsGQ
                                                                                                                              sat_scsI9; } in
                                                                                                              let {
                                                                                                                sat_scsIh [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scsIa
                                                                                                                             sat_scsIg];
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scsIh
                                                                                                                         sat_scsIn
                                                                                                                         sat_scsIt
                                                                                                                         sat_scsIz];
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                            : _ [Occ=Dead]
                                                                              _ [Occ=Dead] ->
                                                                                let {
                                                                                  ds13_scsIC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                    :: ([a_scrPx],
                                                                                        [GHC.Base.String],
                                                                                        [GHC.Base.String],
                                                                                        [GHC.Base.String])
                                                                                  [LclId] =
                                                                                      [w_scsrX
                                                                                       w1_scsrY
                                                                                       args_scss2] \u []
                                                                                          case
                                                                                              System.Console.GetOpt.$wgetOpt'
                                                                                                  w_scsrX
                                                                                                  w1_scsrY
                                                                                                  args_scss2
                                                                                          of
                                                                                          { (#,,,#) ww1_scsIE [Occ=Once]
                                                                                                    ww2_scsIF [Occ=Once]
                                                                                                    ww3_scsIG [Occ=Once]
                                                                                                    ww4_scsIH [Occ=Once] ->
                                                                                                (,,,) [ww1_scsIE
                                                                                                       ww2_scsIF
                                                                                                       ww3_scsIG
                                                                                                       ww4_scsIH];
                                                                                          }; } in
                                                                                let {
                                                                                  sat_scsJ9 [Occ=Once]
                                                                                    :: [GHC.Base.String]
                                                                                  [LclId] =
                                                                                      [ds13_scsIC] \u []
                                                                                          case
                                                                                              ds13_scsIC
                                                                                          of
                                                                                          { (,,,) _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  es_scsJ8 [Occ=Once] ->
                                                                                                es_scsJ8;
                                                                                          }; } in
                                                                                let {
                                                                                  sat_scsJ3 [Occ=Once]
                                                                                    :: GHC.Base.String
                                                                                  [LclId] =
                                                                                      [opt_scsBJ
                                                                                       options_scsCa] \u []
                                                                                          let {
                                                                                            sat_scsJ2 [Occ=Once]
                                                                                              :: GHC.Base.String
                                                                                            [LclId] =
                                                                                                [opt_scsBJ] \u []
                                                                                                    let {
                                                                                                      sat_scsJ1 [Occ=Once]
                                                                                                        :: [GHC.Types.Char]
                                                                                                      [LclId] =
                                                                                                          [opt_scsBJ] \u []
                                                                                                              case
                                                                                                                  GHC.CString.unpackAppendCString#
                                                                                                                      lvl6_rcsn1
                                                                                                                      opt_scsBJ
                                                                                                              of
                                                                                                              sat_scsJ0
                                                                                                              { __DEFAULT ->
                                                                                                                    GHC.Base.++
                                                                                                                        sat_scsJ0
                                                                                                                        lvl24_rcsnk;
                                                                                                              };
                                                                                                    } in 
                                                                                                      GHC.CString.unpackAppendCString#
                                                                                                          lvl12_rcsn7
                                                                                                          sat_scsJ1;
                                                                                          } in 
                                                                                            System.Console.GetOpt.usageInfo
                                                                                                sat_scsJ2
                                                                                                options_scsCa; } in
                                                                                let {
                                                                                  sat_scsJa [Occ=Once]
                                                                                    :: [GHC.Base.String]
                                                                                  [LclId] =
                                                                                      CCCS :! [sat_scsJ3
                                                                                               sat_scsJ9]; } in
                                                                                let {
                                                                                  sat_scsIZ [Occ=Once]
                                                                                    :: [GHC.Base.String]
                                                                                  [LclId] =
                                                                                      [ds13_scsIC] \u []
                                                                                          case
                                                                                              ds13_scsIC
                                                                                          of
                                                                                          { (,,,) _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  us_scsIX [Occ=Once]
                                                                                                  _ [Occ=Dead] ->
                                                                                                us_scsIX;
                                                                                          }; } in
                                                                                let {
                                                                                  sat_scsIT [Occ=Once]
                                                                                    :: [GHC.Base.String]
                                                                                  [LclId] =
                                                                                      [ds13_scsIC] \u []
                                                                                          case
                                                                                              ds13_scsIC
                                                                                          of
                                                                                          { (,,,) _ [Occ=Dead]
                                                                                                  xs_scsIQ [Occ=Once]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead] ->
                                                                                                xs_scsIQ;
                                                                                          }; } in
                                                                                let {
                                                                                  sat_scsIN [Occ=Once]
                                                                                    :: [a_scrPx]
                                                                                  [LclId] =
                                                                                      [ds13_scsIC] \u []
                                                                                          case
                                                                                              ds13_scsIC
                                                                                          of
                                                                                          { (,,,) os_scsIJ [Occ=Once]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead] ->
                                                                                                os_scsIJ;
                                                                                          };
                                                                                } in 
                                                                                  (#,,,#) [sat_scsIN
                                                                                           sat_scsIT
                                                                                           sat_scsIZ
                                                                                           sat_scsJa];
                                                                          };
                                                                    };
                                                          } in 
                                                            case
                                                                getWith_scsBN GHC.Base.eqString
                                                            of
                                                            wild6_scsJb
                                                            { [] ->
                                                                  case
                                                                      getWith_scsBN lvl19_rcsne
                                                                  of
                                                                  sat_scsJc
                                                                  { __DEFAULT -> $j_scsC9 sat_scsJc;
                                                                  };
                                                              : _ [Occ=Dead] _ [Occ=Dead] ->
                                                                  $j_scsC9 wild6_scsJb;
                                                            };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

System.Console.GetOpt.getOpt' [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     System.Console.GetOpt.ArgOrder a
     -> [System.Console.GetOpt.OptDescr a]
     -> [GHC.Base.String]
     -> ([a], [GHC.Base.String], [GHC.Base.String], [GHC.Base.String])
[GblId, Arity=3, Str=<L,1*U><L,U><S,1*U>m, Unf=OtherCon []] =
    [] \r [w_scsJf w1_scsJg w2_scsJh]
        case System.Console.GetOpt.$wgetOpt' w_scsJf w1_scsJg w2_scsJh of {
          (#,,,#) ww1_scsJj [Occ=Once]
                  ww2_scsJk [Occ=Once]
                  ww3_scsJl [Occ=Once]
                  ww4_scsJm [Occ=Once] ->
              (,,,) [ww1_scsJj ww2_scsJk ww3_scsJl ww4_scsJm];
        };

System.Console.GetOpt.getOpt [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     System.Console.GetOpt.ArgOrder a
     -> [System.Console.GetOpt.OptDescr a]
     -> [GHC.Base.String]
     -> ([a], [GHC.Base.String], [GHC.Base.String])
[GblId, Arity=3, Str=<L,1*U><L,U><L,1*U>m, Unf=OtherCon []] =
    [] \r [w_scsJn w1_scsJo w2_scsJp]
        let {
          ds_scsJq [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
            :: ([a_scrPF], [GHC.Base.String], [GHC.Base.String],
                [GHC.Base.String])
          [LclId] =
              [w_scsJn w1_scsJo w2_scsJp] \u []
                  case System.Console.GetOpt.$wgetOpt' w_scsJn w1_scsJo w2_scsJp of {
                    (#,,,#) ww1_scsJs [Occ=Once]
                            ww2_scsJt [Occ=Once]
                            ww3_scsJu [Occ=Once]
                            ww4_scsJv [Occ=Once] ->
                        (,,,) [ww1_scsJs ww2_scsJt ww3_scsJu ww4_scsJv];
                  }; } in
        let {
          sat_scsJO [Occ=Once] :: [GHC.Base.String]
          [LclId] =
              [ds_scsJq] \u []
                  case ds_scsJq of {
                    (,,,) _ [Occ=Dead]
                          _ [Occ=Dead]
                          us_scsJL [Occ=Once]
                          es_scsJM [Occ=Once] ->
                        let {
                          sat_scsJN [Occ=Once, Dmd=<L,1*U>] :: [[GHC.Types.Char]]
                          [LclId] =
                              [us_scsJL] \s []
                                  GHC.Base.map System.Console.GetOpt.errUnrec us_scsJL;
                        } in  GHC.Base.++ es_scsJM sat_scsJN;
                  }; } in
        let {
          sat_scsJH [Occ=Once] :: [GHC.Base.String]
          [LclId] =
              [ds_scsJq] \u []
                  case ds_scsJq of {
                    (,,,) _ [Occ=Dead] xs_scsJE [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                        xs_scsJE;
                  }; } in
        let {
          sat_scsJB [Occ=Once] :: [a_scrPF]
          [LclId] =
              [ds_scsJq] \u []
                  case ds_scsJq of {
                    (,,,) os_scsJx [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
                        os_scsJx;
                  };
        } in  (,,) [sat_scsJB sat_scsJH sat_scsJO];

System.Console.GetOpt.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

System.Console.GetOpt.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$trModule4];

System.Console.GetOpt.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "System.Console.GetOpt"#;

System.Console.GetOpt.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$trModule2];

System.Console.GetOpt.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [System.Console.GetOpt.$trModule3
                                     System.Console.GetOpt.$trModule1];

$krep_rcsnm :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcChar
                                              GHC.Types.[]];

$krep1_rcsnn :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep_rcsnm GHC.Types.[]];

$krep2_rcsno :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tc[]
                                              $krep1_rcsnn];

$krep3_rcsnp :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep2_rcsno GHC.Types.[]];

$krep4_rcsnq :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Base.$tcMaybe
                                              $krep3_rcsnp];

$krep5_rcsnr :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tc[]
                                              $krep3_rcsnp];

$krep6_rcsns :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

$krep7_rcsnt :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcsno $krep6_rcsns];

$krep8_rcsnu :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_rcsnq $krep6_rcsns];

System.Console.GetOpt.$tcArgOrder2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ArgOrder"#;

System.Console.GetOpt.$tcArgOrder1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tcArgOrder2];

System.Console.GetOpt.$tcArgOrder :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2821249393238363172##
                                    5857765806309969278##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tcArgOrder1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep9_rcsnv :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep6_rcsns GHC.Types.[]];

System.Console.GetOpt.$tc'Permute1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Console.GetOpt.$tcArgOrder
                                              $krep9_rcsnv];

System.Console.GetOpt.$tc'RequireOrder2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'RequireOrder"#;

System.Console.GetOpt.$tc'RequireOrder1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'RequireOrder2];

System.Console.GetOpt.$tc'RequireOrder :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16641478699741903091##
                                    17241976392395699271##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'RequireOrder1
                                    1#
                                    System.Console.GetOpt.$tc'Permute1];

System.Console.GetOpt.$tc'Permute3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Permute"#;

System.Console.GetOpt.$tc'Permute2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'Permute3];

System.Console.GetOpt.$tc'Permute :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16188869008381252759##
                                    7304126484053682933##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'Permute2
                                    1#
                                    System.Console.GetOpt.$tc'Permute1];

System.Console.GetOpt.$tc'ReturnInOrder1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep7_rcsnt
                                         System.Console.GetOpt.$tc'Permute1];

System.Console.GetOpt.$tc'ReturnInOrder3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ReturnInOrder"#;

System.Console.GetOpt.$tc'ReturnInOrder2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'ReturnInOrder3];

System.Console.GetOpt.$tc'ReturnInOrder :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11429107017830306662##
                                    977062333259332084##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'ReturnInOrder2
                                    1#
                                    System.Console.GetOpt.$tc'ReturnInOrder1];

System.Console.GetOpt.$tcArgDescr2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ArgDescr"#;

System.Console.GetOpt.$tcArgDescr1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tcArgDescr2];

System.Console.GetOpt.$tcArgDescr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5371299798435897528##
                                    4777542234116424858##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tcArgDescr1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep10_rcsnw :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Console.GetOpt.$tcArgDescr
                                              $krep9_rcsnv];

System.Console.GetOpt.$tc'NoArg1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep6_rcsns $krep10_rcsnw];

System.Console.GetOpt.$tc'NoArg3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'NoArg"#;

System.Console.GetOpt.$tc'NoArg2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'NoArg3];

System.Console.GetOpt.$tc'NoArg :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4447437708857855473##
                                    9938854276741266046##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'NoArg2
                                    1#
                                    System.Console.GetOpt.$tc'NoArg1];

$krep11_rcsnx :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcsno $krep10_rcsnw];

System.Console.GetOpt.$tc'OptArg1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_rcsnu $krep11_rcsnx];

System.Console.GetOpt.$tc'OptArg3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OptArg"#;

System.Console.GetOpt.$tc'OptArg2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'OptArg3];

System.Console.GetOpt.$tc'OptArg :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2223072509852051452##
                                    11632957215606156764##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'OptArg2
                                    1#
                                    System.Console.GetOpt.$tc'OptArg1];

System.Console.GetOpt.$tc'ReqArg1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep7_rcsnt $krep11_rcsnx];

System.Console.GetOpt.$tc'ReqArg3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ReqArg"#;

System.Console.GetOpt.$tc'ReqArg2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'ReqArg3];

System.Console.GetOpt.$tc'ReqArg :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16427330633826478147##
                                    15179110347223027838##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'ReqArg2
                                    1#
                                    System.Console.GetOpt.$tc'ReqArg1];

System.Console.GetOpt.$tcOptDescr2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OptDescr"#;

System.Console.GetOpt.$tcOptDescr1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tcOptDescr2];

System.Console.GetOpt.$tcOptDescr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5602371009437266142##
                                    11022077518484673144##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tcOptDescr1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep12_rcsny :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Console.GetOpt.$tcOptDescr
                                              $krep9_rcsnv];

$krep13_rcsnz :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcsno $krep12_rcsny];

$krep14_rcsnA :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep10_rcsnw $krep13_rcsnz];

$krep15_rcsnB :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep5_rcsnr $krep14_rcsnA];

System.Console.GetOpt.$tc'Option1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcsno $krep15_rcsnB];

System.Console.GetOpt.$tc'Option3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Option"#;

System.Console.GetOpt.$tc'Option2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'Option3];

System.Console.GetOpt.$tc'Option :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10066039264625497029##
                                    5674636120141944492##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'Option2
                                    1#
                                    System.Console.GetOpt.$tc'Option1];

System.Console.GetOpt.$tcOptKind2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OptKind"#;

System.Console.GetOpt.$tcOptKind1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tcOptKind2];

System.Console.GetOpt.$tcOptKind :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5196380470096609574##
                                    4174335291028142741##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tcOptKind1
                                    0#
                                    GHC.Types.krep$*Arr*];

System.Console.GetOpt.$tc'EndOfOpts1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Console.GetOpt.$tcOptKind
                                              $krep9_rcsnv];

System.Console.GetOpt.$tc'EndOfOpts3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EndOfOpts"#;

System.Console.GetOpt.$tc'EndOfOpts2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'EndOfOpts3];

System.Console.GetOpt.$tc'EndOfOpts :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16241379069650497856##
                                    7399561775253491405##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'EndOfOpts2
                                    1#
                                    System.Console.GetOpt.$tc'EndOfOpts1];

System.Console.GetOpt.$tc'Opt1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep6_rcsns
                                         System.Console.GetOpt.$tc'EndOfOpts1];

System.Console.GetOpt.$tc'Opt3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Opt"#;

System.Console.GetOpt.$tc'Opt2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'Opt3];

System.Console.GetOpt.$tc'Opt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2387467460439073880##
                                    875868993959501908##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'Opt2
                                    1#
                                    System.Console.GetOpt.$tc'Opt1];

System.Console.GetOpt.$tc'NonOpt1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcsno
                                         System.Console.GetOpt.$tc'EndOfOpts1];

System.Console.GetOpt.$tc'UnreqOpt2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'UnreqOpt"#;

System.Console.GetOpt.$tc'UnreqOpt1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'UnreqOpt2];

System.Console.GetOpt.$tc'UnreqOpt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6747281843324563502##
                                    13162655807375334605##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'UnreqOpt1
                                    1#
                                    System.Console.GetOpt.$tc'NonOpt1];

System.Console.GetOpt.$tc'NonOpt3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'NonOpt"#;

System.Console.GetOpt.$tc'NonOpt2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'NonOpt3];

System.Console.GetOpt.$tc'NonOpt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17187900375792953920##
                                    18196243003688324985##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'NonOpt2
                                    1#
                                    System.Console.GetOpt.$tc'NonOpt1];

System.Console.GetOpt.$tc'OptErr2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OptErr"#;

System.Console.GetOpt.$tc'OptErr1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'OptErr2];

System.Console.GetOpt.$tc'OptErr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13165663139815598038##
                                    5639435123785572420##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'OptErr1
                                    1#
                                    System.Console.GetOpt.$tc'NonOpt1];

System.Console.GetOpt.Opt
  :: forall a. a -> System.Console.GetOpt.OptKind a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m1,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.Opt [eta_B1];

System.Console.GetOpt.UnreqOpt
  :: forall a. GHC.Base.String -> System.Console.GetOpt.OptKind a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m2,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.UnreqOpt [eta_B1];

System.Console.GetOpt.NonOpt
  :: forall a. GHC.Base.String -> System.Console.GetOpt.OptKind a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m3,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.NonOpt [eta_B1];

System.Console.GetOpt.EndOfOpts
  :: forall a. System.Console.GetOpt.OptKind a
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE System.Console.GetOpt.EndOfOpts! [];

System.Console.GetOpt.OptErr
  :: forall a. GHC.Base.String -> System.Console.GetOpt.OptKind a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m5,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.OptErr [eta_B1];

System.Console.GetOpt.NoArg
  :: forall a. a -> System.Console.GetOpt.ArgDescr a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m1,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.NoArg [eta_B1];

System.Console.GetOpt.ReqArg
  :: forall a.
     (GHC.Base.String -> a)
     -> GHC.Base.String -> System.Console.GetOpt.ArgDescr a
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m2,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] System.Console.GetOpt.ReqArg [eta_B2 eta_B1];

System.Console.GetOpt.OptArg
  :: forall a.
     (GHC.Base.Maybe GHC.Base.String -> a)
     -> GHC.Base.String -> System.Console.GetOpt.ArgDescr a
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m3,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] System.Console.GetOpt.OptArg [eta_B2 eta_B1];

System.Console.GetOpt.Option
  :: forall a.
     [GHC.Types.Char]
     -> [GHC.Base.String]
     -> System.Console.GetOpt.ArgDescr a
     -> GHC.Base.String
     -> System.Console.GetOpt.OptDescr a
[GblId[DataCon],
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        System.Console.GetOpt.Option [eta_B4 eta_B3 eta_B2 eta_B1];

System.Console.GetOpt.RequireOrder
  :: forall a. System.Console.GetOpt.ArgOrder a
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE System.Console.GetOpt.RequireOrder! [];

System.Console.GetOpt.Permute
  :: forall a. System.Console.GetOpt.ArgOrder a
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE System.Console.GetOpt.Permute! [];

System.Console.GetOpt.ReturnInOrder
  :: forall a.
     (GHC.Base.String -> a) -> System.Console.GetOpt.ArgOrder a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m3,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.ReturnInOrder [eta_B1];


==================== STG syntax: ====================
2018-03-16 16:07:20.263639841 UTC

System.Console.GetOpt.$fFunctorArgOrder_$cfmap
  :: forall a b.
     (a -> b)
     -> System.Console.GetOpt.ArgOrder a
     -> System.Console.GetOpt.ArgOrder b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,C(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_scsnD ds1_scsnE]
        case ds1_scsnE of {
          System.Console.GetOpt.RequireOrder ->
              System.Console.GetOpt.RequireOrder [];
          System.Console.GetOpt.Permute -> System.Console.GetOpt.Permute [];
          System.Console.GetOpt.ReturnInOrder g_scsnG [Occ=OnceL] ->
              let {
                sat_scsnH [Occ=Once] :: GHC.Base.String -> b_acr1l
                [LclId] =
                    [ds_scsnD g_scsnG] \r [eta_B1] GHC.Base.. ds_scsnD g_scsnG eta_B1;
              } in  System.Console.GetOpt.ReturnInOrder [sat_scsnH];
        };

System.Console.GetOpt.$fFunctorArgOrder_$c<$
  :: forall a b.
     a
     -> System.Console.GetOpt.ArgOrder b
     -> System.Console.GetOpt.ArgOrder a
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [x_scsnI eta_scsnJ]
        case eta_scsnJ of {
          System.Console.GetOpt.RequireOrder ->
              System.Console.GetOpt.RequireOrder [];
          System.Console.GetOpt.Permute -> System.Console.GetOpt.Permute [];
          System.Console.GetOpt.ReturnInOrder _ [Occ=Dead] ->
              let {
                sat_scsnN [Occ=Once] :: GHC.Base.String -> a_acr1w
                [LclId] =
                    [x_scsnI] \r [x1_scsnM] x_scsnI;
              } in  System.Console.GetOpt.ReturnInOrder [sat_scsnN];
        };

System.Console.GetOpt.$fFunctorArgOrder [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Functor System.Console.GetOpt.ArgOrder
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Base.C:Functor! [System.Console.GetOpt.$fFunctorArgOrder_$cfmap
                                       System.Console.GetOpt.$fFunctorArgOrder_$c<$];

System.Console.GetOpt.$fFunctorArgDescr_$cfmap
  :: forall a b.
     (a -> b)
     -> System.Console.GetOpt.ArgDescr a
     -> System.Console.GetOpt.ArgDescr b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,C(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [f_scsnO ds_scsnP]
        case ds_scsnP of {
          System.Console.GetOpt.NoArg a1_scsnR [Occ=Once] ->
              let {
                sat_scsnS [Occ=Once] :: b_acr0U
                [LclId] =
                    [f_scsnO a1_scsnR] \u [] f_scsnO a1_scsnR;
              } in  System.Console.GetOpt.NoArg [sat_scsnS];
          System.Console.GetOpt.ReqArg g_scsnT [Occ=OnceL]
                                       s_scsnU [Occ=Once] ->
              let {
                sat_scsnV [Occ=Once] :: GHC.Base.String -> b_acr0U
                [LclId] =
                    [f_scsnO g_scsnT] \r [eta_B1] GHC.Base.. f_scsnO g_scsnT eta_B1;
              } in  System.Console.GetOpt.ReqArg [sat_scsnV s_scsnU];
          System.Console.GetOpt.OptArg g_scsnW [Occ=OnceL]
                                       s_scsnX [Occ=Once] ->
              let {
                sat_scsnY [Occ=Once] :: GHC.Base.Maybe GHC.Base.String -> b_acr0U
                [LclId] =
                    [f_scsnO g_scsnW] \r [eta_B1] GHC.Base.. f_scsnO g_scsnW eta_B1;
              } in  System.Console.GetOpt.OptArg [sat_scsnY s_scsnX];
        };

System.Console.GetOpt.$fFunctorArgDescr_$c<$
  :: forall a b.
     a
     -> System.Console.GetOpt.ArgDescr b
     -> System.Console.GetOpt.ArgDescr a
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [x_scsnZ eta_scso0]
        case eta_scso0 of {
          System.Console.GetOpt.NoArg _ [Occ=Dead] ->
              System.Console.GetOpt.NoArg [x_scsnZ];
          System.Console.GetOpt.ReqArg _ [Occ=Dead] s_scso4 [Occ=Once] ->
              let {
                sat_scso6 [Occ=Once] :: GHC.Base.String -> a_acr18
                [LclId] =
                    [x_scsnZ] \r [x1_scso5] x_scsnZ;
              } in  System.Console.GetOpt.ReqArg [sat_scso6 s_scso4];
          System.Console.GetOpt.OptArg _ [Occ=Dead] s_scso8 [Occ=Once] ->
              let {
                sat_scsoa [Occ=Once] :: GHC.Base.Maybe GHC.Base.String -> a_acr18
                [LclId] =
                    [x_scsnZ] \r [x1_scso9] x_scsnZ;
              } in  System.Console.GetOpt.OptArg [sat_scsoa s_scso8];
        };

System.Console.GetOpt.$fFunctorArgDescr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Functor System.Console.GetOpt.ArgDescr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Base.C:Functor! [System.Console.GetOpt.$fFunctorArgDescr_$cfmap
                                       System.Console.GetOpt.$fFunctorArgDescr_$c<$];

System.Console.GetOpt.$fFunctorOptDescr_$cfmap
  :: forall a b.
     (a -> b)
     -> System.Console.GetOpt.OptDescr a
     -> System.Console.GetOpt.OptDescr b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,C(U)><S,1*U(U,U,1*U,U)>m,
 Unf=OtherCon []] =
    [] \r [f_scsob ds_scsoc]
        case ds_scsoc of {
          System.Console.GetOpt.Option a1_scsoe [Occ=Once]
                                       b1_scsof [Occ=Once]
                                       argDescr_scsog [Occ=Once]
                                       c_scsoh [Occ=Once] ->
              let {
                sat_scsoi [Occ=Once] :: System.Console.GetOpt.ArgDescr b_acr0w
                [LclId] =
                    [f_scsob argDescr_scsog] \u []
                        System.Console.GetOpt.$fFunctorArgDescr_$cfmap
                            f_scsob argDescr_scsog;
              } in 
                System.Console.GetOpt.Option [a1_scsoe b1_scsof sat_scsoi c_scsoh];
        };

System.Console.GetOpt.$fFunctorOptDescr_$c<$ [InlPrag=NOUSERINLINE[0]]
  :: forall a b.
     a
     -> System.Console.GetOpt.OptDescr b
     -> System.Console.GetOpt.OptDescr a
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U(U,U,1*U,U)>m,
 Unf=OtherCon []] =
    [] \r [w_scsoj w1_scsok]
        case w1_scsok of {
          System.Console.GetOpt.Option ww1_scsom [Occ=Once]
                                       ww2_scson [Occ=Once]
                                       ww3_scsoo [Occ=Once!]
                                       ww4_scsop [Occ=Once] ->
              let {
                sat_scsoA [Occ=Once] :: System.Console.GetOpt.ArgDescr a_scrOx
                [LclId] =
                    [w_scsoj ww3_scsoo] \u []
                        case ww3_scsoo of {
                          System.Console.GetOpt.NoArg _ [Occ=Dead] ->
                              System.Console.GetOpt.NoArg [w_scsoj];
                          System.Console.GetOpt.ReqArg _ [Occ=Dead] s_scsot [Occ=Once] ->
                              let {
                                sat_scsov [Occ=Once] :: GHC.Base.String -> a_scrOx
                                [LclId] =
                                    [w_scsoj] \r [x_scsou] w_scsoj;
                              } in  System.Console.GetOpt.ReqArg [sat_scsov s_scsot];
                          System.Console.GetOpt.OptArg _ [Occ=Dead] s_scsox [Occ=Once] ->
                              let {
                                sat_scsoz [Occ=Once] :: GHC.Base.Maybe GHC.Base.String -> a_scrOx
                                [LclId] =
                                    [w_scsoj] \r [x_scsoy] w_scsoj;
                              } in  System.Console.GetOpt.OptArg [sat_scsoz s_scsox];
                        };
              } in 
                System.Console.GetOpt.Option [ww1_scsom
                                              ww2_scson
                                              sat_scsoA
                                              ww4_scsop];
        };

System.Console.GetOpt.$fFunctorOptDescr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Functor System.Console.GetOpt.OptDescr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Base.C:Functor! [System.Console.GetOpt.$fFunctorOptDescr_$cfmap
                                       System.Console.GetOpt.$fFunctorOptDescr_$c<$];

lvl_rcsmT :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! [' '#];

lvl1_rcsmU :: [GHC.Types.Char]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [lvl_rcsmT GHC.Types.[]];

$wxs_rcsmV :: GHC.Prim.Int# -> [GHC.Types.Char]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>m2, Unf=OtherCon []] =
    sat-only [] \r [ww_scsoB]
        case ww_scsoB of ds1_scsoC {
          __DEFAULT ->
              let {
                sat_scsoE [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [ds1_scsoC] \u []
                        case -# [ds1_scsoC 1#] of sat_scsoD {
                          __DEFAULT -> $wxs_rcsmV sat_scsoD;
                        };
              } in  : [lvl_rcsmT sat_scsoE];
          1# -> lvl1_rcsmU;
        };

System.Console.GetOpt.$wgo [InlPrag=NOUSERINLINE[0],
                            Occ=LoopBreaker]
  :: [GHC.Types.Char] -> GHC.Prim.Int# -> [GHC.Types.Char]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>m2,
 Unf=OtherCon []] =
    [] \r [w_scsoF ww_scsoG]
        case w_scsoF of {
          [] -> $wxs_rcsmV ww_scsoG;
          : y_scsoI [Occ=Once*] ys_scsoJ [Occ=Once] ->
              case ww_scsoG of ds1_scsoK {
                __DEFAULT ->
                    let {
                      sat_scsoM [Occ=Once] :: [GHC.Types.Char]
                      [LclId] =
                          [ys_scsoJ ds1_scsoK] \u []
                              case -# [ds1_scsoK 1#] of sat_scsoL {
                                __DEFAULT -> System.Console.GetOpt.$wgo ys_scsoJ sat_scsoL;
                              };
                    } in  : [y_scsoI sat_scsoM];
                1# -> : [y_scsoI GHC.Types.[]];
              };
        };

System.Console.GetOpt.usageInfo_sameLen
  :: [[GHC.Types.Char]] -> [[GHC.Types.Char]]
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [xs_scsoN]
        let {
          n_scsoO [Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [xs_scsoN] \u []
                  case GHC.Base.map GHC.List.length xs_scsoN of {
                    [] -> GHC.List.maximum2;
                    : ipv_scsoQ [Occ=Once!] ipv1_scsoR [Occ=Once] ->
                        case ipv_scsoQ of {
                          GHC.Types.I# ww1_scsoT [Occ=Once] ->
                              case GHC.List.$wgo ipv1_scsoR ww1_scsoT of ww2_scsoU {
                                __DEFAULT -> GHC.Types.I# [ww2_scsoU];
                              };
                        };
                  }; } in
        let {
          lvl25_scsoV [Occ=OnceL!] :: GHC.Types.Bool
          [LclId] =
              [n_scsoO] \u []
                  case n_scsoO of {
                    GHC.Types.I# y_scsoX [Occ=Once] ->
                        case <# [0# y_scsoX] of sat_scsoY {
                          __DEFAULT -> tagToEnum# [sat_scsoY];
                        };
                  }; } in
        let {
          go_scsoZ [Occ=LoopBreaker]
            :: [[GHC.Types.Char]] -> [[GHC.Types.Char]]
          [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
              sat-only [n_scsoO lvl25_scsoV go_scsoZ] \r [ds_scsp0]
                  case ds_scsp0 of {
                    [] -> [] [];
                    : y_scsp2 [Occ=Once] ys_scsp3 [Occ=Once] ->
                        let {
                          sat_scsp8 [Occ=Once] :: [[GHC.Types.Char]]
                          [LclId] =
                              [go_scsoZ ys_scsp3] \u [] go_scsoZ ys_scsp3; } in
                        let {
                          sat_scsp7 [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [n_scsoO lvl25_scsoV y_scsp2] \u []
                                  case lvl25_scsoV of {
                                    GHC.Types.False -> [] [];
                                    GHC.Types.True ->
                                        case n_scsoO of {
                                          GHC.Types.I# ww1_scsp6 [Occ=Once] ->
                                              System.Console.GetOpt.$wgo y_scsp2 ww1_scsp6;
                                        };
                                  };
                        } in  : [sat_scsp7 sat_scsp8];
                  };
        } in  go_scsoZ xs_scsoN;

sepBy_rcsmW
  :: GHC.Types.Char -> [[GHC.Types.Char]] -> [GHC.Types.Char]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U>,
 Unf=OtherCon []] =
    sat-only [] \r [ds_scsp9 ds1_scspa]
        case ds1_scspa of {
          [] -> [] [];
          : x_scspc [Occ=Once*] ds2_scspd [Occ=Once!] ->
              case ds2_scspd of wild1_scspe {
                [] -> x_scspc;
                : _ [Occ=Dead] _ [Occ=Dead] ->
                    let {
                      sat_scsph [Occ=Once] :: [GHC.Types.Char]
                      [LclId] =
                          [ds_scsp9 wild1_scspe] \u [] sepBy_rcsmW ds_scsp9 wild1_scspe; } in
                    let {
                      sat_scspi [Occ=Once] :: [GHC.Types.Char]
                      [LclId] =
                          CCCS :! [lvl_rcsmT sat_scsph]; } in
                    let {
                      sat_scspj [Occ=Once] :: [GHC.Types.Char]
                      [LclId] =
                          CCCS :! [ds_scsp9 sat_scspi];
                    } in  GHC.Base.++ x_scspc sat_scspj;
              };
        };

lvl2_rcsmX :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! [','#];

lvl3_rcsmY :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "-"#;

lvl4_rcsmZ :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "["#;

lvl5_rcsn0 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "]"#;

lvl6_rcsn1 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "--"#;

lvl7_rcsn2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "[="#;

lvl8_rcsn3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "  "#;

System.Console.GetOpt.usageInfo_go2 [Occ=LoopBreaker]
  :: [[GHC.Types.Char]]
     -> [[GHC.Types.Char]] -> [[GHC.Types.Char]] -> [[GHC.Types.Char]]
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U><L,1*U><L,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_scspk ds1_scspl ds2_scspm]
        case ds_scspk of {
          [] -> [] [];
          : a1_scspo [Occ=Once] as_scspp [Occ=Once] ->
              case ds1_scspl of {
                [] -> [] [];
                : b1_scspr [Occ=Once] bs_scsps [Occ=Once] ->
                    case ds2_scspm of {
                      [] -> [] [];
                      : c1_scspu [Occ=Once] cs_scspv [Occ=Once] ->
                          let {
                            sat_scspB [Occ=Once] :: [[GHC.Types.Char]]
                            [LclId] =
                                [as_scspp bs_scsps cs_scspv] \u []
                                    System.Console.GetOpt.usageInfo_go2
                                        as_scspp bs_scsps cs_scspv; } in
                          let {
                            sat_scspA [Occ=Once] :: [GHC.Types.Char]
                            [LclId] =
                                [a1_scspo b1_scspr c1_scspu] \u []
                                    let {
                                      sat_scspz [Occ=Once] :: [GHC.Types.Char]
                                      [LclId] =
                                          [a1_scspo b1_scspr c1_scspu] \u []
                                              let {
                                                sat_scspy [Occ=Once, Dmd=<L,1*U>]
                                                  :: [GHC.Types.Char]
                                                [LclId] =
                                                    [b1_scspr c1_scspu] \s []
                                                        let {
                                                          sat_scspx [Occ=Once] :: [GHC.Types.Char]
                                                          [LclId] =
                                                              [b1_scspr c1_scspu] \u []
                                                                  let {
                                                                    sat_scspw [Occ=Once,
                                                                               Dmd=<L,1*U>]
                                                                      :: [GHC.Types.Char]
                                                                    [LclId] =
                                                                        [c1_scspu] \s []
                                                                            GHC.CString.unpackAppendCString#
                                                                                lvl8_rcsn3 c1_scspu;
                                                                  } in 
                                                                    GHC.Base.++ b1_scspr sat_scspw;
                                                        } in 
                                                          GHC.CString.unpackAppendCString#
                                                              lvl8_rcsn3 sat_scspx;
                                              } in  GHC.Base.++ a1_scspo sat_scspy;
                                    } in  GHC.CString.unpackAppendCString# lvl8_rcsn3 sat_scspz;
                          } in  : [sat_scspA sat_scspB];
                    };
              };
        };

lvl9_rcsn4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    " "#;

lvl10_rcsn5 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl5_rcsn0;

lvl11_rcsn6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "="#;

System.Console.GetOpt.usageInfo1 [InlPrag=NOUSERINLINE[0],
                                  Occ=LoopBreaker]
  :: forall a.
     [System.Console.GetOpt.OptDescr a]
     -> (# [GHC.Base.String], [GHC.Base.String], [GHC.Base.String] #)
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [w_scspC]
        case w_scspC of {
          [] -> (#,,#) [GHC.Types.[] GHC.Types.[] GHC.Types.[]];
          : y_scspE [Occ=Once!] ys_scspF [Occ=Once] ->
              case y_scspE of {
                System.Console.GetOpt.Option sos_scspH [Occ=Once]
                                             los_scspI [Occ=Once]
                                             ad_scspJ
                                             descr_scspK [Occ=Once] ->
                    let {
                      b2_scspL [Dmd=<L,U(U,U,U)>]
                        :: ([GHC.Base.String], [GHC.Base.String], [GHC.Base.String])
                      [LclId] =
                          [ys_scspF] \u []
                              case System.Console.GetOpt.usageInfo1 ys_scspF of {
                                (#,,#) ww1_scspN [Occ=Once]
                                       ww2_scspO [Occ=Once]
                                       ww3_scspP [Occ=Once] ->
                                    (,,) [ww1_scspN ww2_scspO ww3_scspP];
                              }; } in
                    let {
                      sosFmt_scspQ [Occ=Once*] :: [GHC.Types.Char]
                      [LclId] =
                          [sos_scspH ad_scspJ] \u []
                              let {
                                sat_scsq4 [Occ=Once] :: GHC.Types.Char -> [GHC.Types.Char]
                                [LclId] =
                                    [ad_scspJ] \r [so_scspR]
                                        case ad_scspJ of {
                                          System.Console.GetOpt.NoArg _ [Occ=Dead] ->
                                              let {
                                                sat_scspU [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    CCCS :! [so_scspR GHC.Types.[]];
                                              } in 
                                                GHC.CString.unpackAppendCString#
                                                    lvl3_rcsmY sat_scspU;
                                          System.Console.GetOpt.ReqArg _ [Occ=Dead]
                                                                       ad1_scspW [Occ=Once] ->
                                              let {
                                                sat_scspX [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    [ad1_scspW] \u []
                                                        GHC.CString.unpackAppendCString#
                                                            lvl9_rcsn4 ad1_scspW; } in
                                              let {
                                                sat_scspY [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    CCCS :! [so_scspR sat_scspX];
                                              } in 
                                                GHC.CString.unpackAppendCString#
                                                    lvl3_rcsmY sat_scspY;
                                          System.Console.GetOpt.OptArg _ [Occ=Dead]
                                                                       ad1_scsq0 [Occ=Once] ->
                                              let {
                                                sat_scsq2 [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    [ad1_scsq0] \u []
                                                        let {
                                                          sat_scsq1 [Occ=Once] :: [GHC.Types.Char]
                                                          [LclId] =
                                                              [ad1_scsq0] \u []
                                                                  GHC.Base.++ ad1_scsq0 lvl10_rcsn5;
                                                        } in 
                                                          GHC.CString.unpackAppendCString#
                                                              lvl4_rcsmZ sat_scsq1; } in
                                              let {
                                                sat_scsq3 [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    CCCS :! [so_scspR sat_scsq2];
                                              } in 
                                                GHC.CString.unpackAppendCString#
                                                    lvl3_rcsmY sat_scsq3;
                                        };
                              } in 
                                case GHC.Base.map sat_scsq4 sos_scspH of sat_scsq5 {
                                  __DEFAULT -> sepBy_rcsmW lvl2_rcsmX sat_scsq5;
                                }; } in
                    let {
                      losFmt_scsq6 [Occ=Once*] :: [GHC.Types.Char]
                      [LclId] =
                          [los_scspI ad_scspJ] \u []
                              let {
                                sat_scsqj [Occ=Once] :: [GHC.Types.Char] -> [GHC.Types.Char]
                                [LclId] =
                                    [ad_scspJ] \r [lo_scsq7]
                                        case ad_scspJ of {
                                          System.Console.GetOpt.NoArg _ [Occ=Dead] ->
                                              GHC.CString.unpackAppendCString# lvl6_rcsn1 lo_scsq7;
                                          System.Console.GetOpt.ReqArg _ [Occ=Dead]
                                                                       ad1_scsqb [Occ=Once] ->
                                              let {
                                                sat_scsqd [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    [lo_scsq7 ad1_scsqb] \u []
                                                        let {
                                                          sat_scsqc [Occ=Once, Dmd=<L,1*U>]
                                                            :: [GHC.Types.Char]
                                                          [LclId] =
                                                              [ad1_scsqb] \s []
                                                                  GHC.CString.unpackAppendCString#
                                                                      lvl11_rcsn6 ad1_scsqb;
                                                        } in  GHC.Base.++ lo_scsq7 sat_scsqc;
                                              } in 
                                                GHC.CString.unpackAppendCString#
                                                    lvl6_rcsn1 sat_scsqd;
                                          System.Console.GetOpt.OptArg _ [Occ=Dead]
                                                                       ad1_scsqf [Occ=Once] ->
                                              let {
                                                sat_scsqi [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    [lo_scsq7 ad1_scsqf] \u []
                                                        let {
                                                          sat_scsqh [Occ=Once, Dmd=<L,1*U>]
                                                            :: [GHC.Types.Char]
                                                          [LclId] =
                                                              [ad1_scsqf] \s []
                                                                  let {
                                                                    sat_scsqg [Occ=Once]
                                                                      :: [GHC.Types.Char]
                                                                    [LclId] =
                                                                        [ad1_scsqf] \u []
                                                                            GHC.Base.++
                                                                                ad1_scsqf
                                                                                lvl10_rcsn5;
                                                                  } in 
                                                                    GHC.CString.unpackAppendCString#
                                                                        lvl7_rcsn2 sat_scsqg;
                                                        } in  GHC.Base.++ lo_scsq7 sat_scsqh;
                                              } in 
                                                GHC.CString.unpackAppendCString#
                                                    lvl6_rcsn1 sat_scsqi;
                                        };
                              } in 
                                case GHC.Base.map sat_scsqj los_scspI of sat_scsqk {
                                  __DEFAULT -> sepBy_rcsmW lvl2_rcsmX sat_scsqk;
                                };
                    } in 
                      case Data.OldList.lines descr_scspK of {
                        [] ->
                            let {
                              sat_scsqC [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [b2_scspL] \u []
                                      case b2_scspL of {
                                        (,,) _ [Occ=Dead] _ [Occ=Dead] cs_scsqB [Occ=Once] ->
                                            cs_scsqB;
                                      }; } in
                            let {
                              sat_scsqD [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [GHC.Types.[] sat_scsqC]; } in
                            let {
                              sat_scsqw [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [b2_scspL] \u []
                                      case b2_scspL of {
                                        (,,) _ [Occ=Dead] bs_scsqu [Occ=Once] _ [Occ=Dead] ->
                                            bs_scsqu;
                                      }; } in
                            let {
                              sat_scsqx [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [losFmt_scsq6 sat_scsqw]; } in
                            let {
                              sat_scsqq [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [b2_scspL] \u []
                                      case b2_scspL of {
                                        (,,) as_scsqn [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                                            as_scsqn;
                                      }; } in
                            let {
                              sat_scsqr [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [sosFmt_scspQ sat_scsqq];
                            } in  (#,,#) [sat_scsqr sat_scsqx sat_scsqD];
                        : d_scsqE [Occ=Once] ds_scsqF [Occ=Once] ->
                            let {
                              ds1_scsqG [Dmd=<L,U(1*U,1*U,1*U)>]
                                :: ([GHC.Base.String], [GHC.Base.String], [GHC.Base.String])
                              [LclId] =
                                  [b2_scspL ds_scsqF] \u []
                                      let {
                                        go_scsqH [Occ=LoopBreaker]
                                          :: [GHC.Base.String]
                                             -> ([GHC.Base.String], [GHC.Base.String],
                                                 [GHC.Base.String])
                                        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
                                            sat-only [b2_scspL go_scsqH] \r [ds2_scsqI]
                                                case ds2_scsqI of {
                                                  [] -> b2_scspL;
                                                  : y1_scsqK [Occ=Once] ys1_scsqL [Occ=Once] ->
                                                      let {
                                                        ds3_scsqM [Dmd=<L,U(1*U,1*U,1*U)>]
                                                          :: ([GHC.Base.String], [GHC.Base.String],
                                                              [GHC.Base.String])
                                                        [LclId] =
                                                            [go_scsqH ys1_scsqL] \u []
                                                                go_scsqH ys1_scsqL; } in
                                                      let {
                                                        sat_scsr3 [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            [ds3_scsqM] \u []
                                                                case ds3_scsqM of {
                                                                  (,,) _ [Occ=Dead]
                                                                       _ [Occ=Dead]
                                                                       cs_scsr2 [Occ=Once] ->
                                                                      cs_scsr2;
                                                                }; } in
                                                      let {
                                                        sat_scsr4 [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            CCCS :! [y1_scsqK sat_scsr3]; } in
                                                      let {
                                                        sat_scsqX [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            [ds3_scsqM] \u []
                                                                case ds3_scsqM of {
                                                                  (,,) _ [Occ=Dead]
                                                                       bs_scsqV [Occ=Once]
                                                                       _ [Occ=Dead] ->
                                                                      bs_scsqV;
                                                                }; } in
                                                      let {
                                                        sat_scsqY [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            CCCS :! [GHC.Types.[] sat_scsqX]; } in
                                                      let {
                                                        sat_scsqR [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            [ds3_scsqM] \u []
                                                                case ds3_scsqM of {
                                                                  (,,) as_scsqO [Occ=Once]
                                                                       _ [Occ=Dead]
                                                                       _ [Occ=Dead] ->
                                                                      as_scsqO;
                                                                }; } in
                                                      let {
                                                        sat_scsqS [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            CCCS :! [GHC.Types.[] sat_scsqR];
                                                      } in  (,,) [sat_scsqS sat_scsqY sat_scsr4];
                                                };
                                      } in  go_scsqH ds_scsqF; } in
                            let {
                              sat_scsrl [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [ds1_scsqG] \u []
                                      case ds1_scsqG of {
                                        (,,) _ [Occ=Dead] _ [Occ=Dead] cs_scsrk [Occ=Once] ->
                                            cs_scsrk;
                                      }; } in
                            let {
                              sat_scsrm [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [d_scsqE sat_scsrl]; } in
                            let {
                              sat_scsrf [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [ds1_scsqG] \u []
                                      case ds1_scsqG of {
                                        (,,) _ [Occ=Dead] bs_scsrd [Occ=Once] _ [Occ=Dead] ->
                                            bs_scsrd;
                                      }; } in
                            let {
                              sat_scsrg [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [losFmt_scsq6 sat_scsrf]; } in
                            let {
                              sat_scsr9 [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [ds1_scsqG] \u []
                                      case ds1_scsqG of {
                                        (,,) as_scsr6 [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                                            as_scsr6;
                                      }; } in
                            let {
                              sat_scsra [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [sosFmt_scspQ sat_scsr9];
                            } in  (#,,#) [sat_scsra sat_scsrg sat_scsrm];
                      };
              };
        };

System.Console.GetOpt.usageInfo
  :: forall a.
     GHC.Base.String
     -> [System.Console.GetOpt.OptDescr a] -> GHC.Base.String
[GblId, Arity=2, Str=<L,U><L,1*U>, Unf=OtherCon []] =
    [] \r [header_scsrn optDescr_scsro]
        let {
          sat_scsrv [Occ=Once] :: [GHC.Base.String]
          [LclId] =
              [optDescr_scsro] \u []
                  case System.Console.GetOpt.usageInfo1 optDescr_scsro of {
                    (#,,#) ww1_scsrq [Occ=Once]
                           ww2_scsrr [Occ=Once]
                           ww3_scsrs [Occ=Once] ->
                        let {
                          sat_scsru [Occ=Once, Dmd=<L,1*U>] :: [[GHC.Types.Char]]
                          [LclId] =
                              [ww2_scsrr] \s []
                                  System.Console.GetOpt.usageInfo_sameLen ww2_scsrr;
                        } in 
                          case
                              System.Console.GetOpt.usageInfo_sameLen ww1_scsrq
                          of
                          sat_scsrt
                          { __DEFAULT ->
                                System.Console.GetOpt.usageInfo_go2 sat_scsrt sat_scsru ww3_scsrs;
                          };
                  }; } in
        let {
          sat_scsrw [Occ=Once] :: [GHC.Base.String]
          [LclId] =
              CCCS :! [header_scsrn sat_scsrv];
        } in  Data.OldList.unlines sat_scsrw;

lvl12_rcsn7 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "option `"#;

lvl13_rcsn8 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "' is ambiguous; could be one of:"#;

lvl14_rcsn9 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "' requires an argument "#;

lvl15_rcsna :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "\n"#;

lvl16_rcsnb :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl15_rcsna;

System.Console.GetOpt.getOpt2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "unrecognized option `"#;

System.Console.GetOpt.getOpt1 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'\n"#;

lvl17_rcsnc :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# System.Console.GetOpt.getOpt1;

System.Console.GetOpt.errUnrec
  :: GHC.Base.String -> GHC.Base.String
[GblId, Arity=1, Str=<L,1*U>, Unf=OtherCon []] =
    [] \r [optStr_scsrx]
        let {
          sat_scsry [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [optStr_scsrx] \u [] GHC.Base.++ optStr_scsrx lvl17_rcsnc;
        } in 
          GHC.CString.unpackAppendCString#
              System.Console.GetOpt.getOpt2 sat_scsry;

lvl18_rcsnd :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "' doesn't allow an argument\n"#;

lvl19_rcsne
  :: [GHC.Types.Char] -> [GHC.Types.Char] -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Data.OldList.isPrefixOf GHC.Classes.$fEqChar eta_B2 eta_B1;

lvl20_rcsnf :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [ds_scsrz]
        case ds_scsrz of {
          GHC.Types.C# x_scsrB [Occ=Once!] ->
              case x_scsrB of {
                __DEFAULT -> GHC.Types.False [];
                '='# -> GHC.Types.True [];
              };
        };

lvl21_rcsng :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! ['-'#];

lvl22_rcsnh :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl18_rcsnd;

lvl23_rcsni :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "option `--"#;

poly_go_rcsnj
  :: forall a.
     [System.Console.GetOpt.OptDescr a]
     -> [System.Console.GetOpt.ArgDescr a]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    sat-only [] \r [ds_scsrD]
        case ds_scsrD of {
          [] -> [] [];
          : y_scsrF [Occ=Once!] ys_scsrG [Occ=Once] ->
              case y_scsrF of {
                System.Console.GetOpt.Option _ [Occ=Dead]
                                             _ [Occ=Dead]
                                             ad_scsrK [Occ=Once]
                                             _ [Occ=Dead] ->
                    let {
                      sat_scsrM [Occ=Once] :: [System.Console.GetOpt.ArgDescr a_scrPx]
                      [LclId] =
                          [ys_scsrG] \u [] poly_go_rcsnj ys_scsrG;
                    } in  : [ad_scsrK sat_scsrM];
              };
        };

lvl24_rcsnk :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl13_rcsn8;

poly_go1_rcsnl
  :: forall a.
     [System.Console.GetOpt.OptDescr a]
     -> [System.Console.GetOpt.ArgDescr a]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    sat-only [] \r [ds_scsrN]
        case ds_scsrN of {
          [] -> [] [];
          : y_scsrP [Occ=Once!] ys_scsrQ [Occ=Once] ->
              case y_scsrP of {
                System.Console.GetOpt.Option _ [Occ=Dead]
                                             _ [Occ=Dead]
                                             ad_scsrU [Occ=Once]
                                             _ [Occ=Dead] ->
                    let {
                      sat_scsrW [Occ=Once] :: [System.Console.GetOpt.ArgDescr a_scrPx]
                      [LclId] =
                          [ys_scsrQ] \u [] poly_go1_rcsnl ys_scsrQ;
                    } in  : [ad_scsrU sat_scsrW];
              };
        };

System.Console.GetOpt.$wgetOpt' [InlPrag=NOUSERINLINE[0],
                                 Occ=LoopBreaker]
  :: forall a.
     System.Console.GetOpt.ArgOrder a
     -> [System.Console.GetOpt.OptDescr a]
     -> [GHC.Base.String]
     -> (# [a], [GHC.Base.String], [GHC.Base.String],
           [GHC.Base.String] #)
[GblId, Arity=3, Str=<L,1*U><L,U><S,1*U>, Unf=OtherCon []] =
    [] \r [w_scsrX w1_scsrY w2_scsrZ]
        case w2_scsrZ of wild_scss0 {
          [] ->
              (#,,,#) [GHC.Types.[] GHC.Types.[] GHC.Types.[] GHC.Types.[]];
          : arg_scss1 [Occ=Once!] args_scss2 [Occ=OnceL*] ->
              case arg_scss1 of wild1_scss3 {
                [] ->
                    case w_scsrX of wild2_scss4 {
                      System.Console.GetOpt.RequireOrder ->
                          let {
                            sat_scss5 [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                CCCS :! [GHC.Types.[] args_scss2];
                          } in  (#,,,#) [GHC.Types.[] sat_scss5 GHC.Types.[] GHC.Types.[]];
                      System.Console.GetOpt.Permute ->
                          let {
                            ds_scss6 [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                              :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                  [GHC.Base.String])
                            [LclId] =
                                [w1_scsrY args_scss2] \u []
                                    case
                                        System.Console.GetOpt.$wgetOpt'
                                            System.Console.GetOpt.Permute w1_scsrY args_scss2
                                    of
                                    { (#,,,#) ww1_scss8 [Occ=Once]
                                              ww2_scss9 [Occ=Once]
                                              ww3_scssa [Occ=Once]
                                              ww4_scssb [Occ=Once] ->
                                          (,,,) [ww1_scss8 ww2_scss9 ww3_scssa ww4_scssb];
                                    }; } in
                          let {
                            sat_scssA [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scss6] \u []
                                    case ds_scss6 of {
                                      (,,,) _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            es_scssz [Occ=Once] ->
                                          es_scssz;
                                    }; } in
                          let {
                            sat_scssu [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scss6] \u []
                                    case ds_scss6 of {
                                      (,,,) _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            us_scsss [Occ=Once]
                                            _ [Occ=Dead] ->
                                          us_scsss;
                                    }; } in
                          let {
                            sat_scssn [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scss6] \u []
                                    case ds_scss6 of {
                                      (,,,) _ [Occ=Dead]
                                            xs_scssk [Occ=Once]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead] ->
                                          xs_scssk;
                                    }; } in
                          let {
                            sat_scsso [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                CCCS :! [GHC.Types.[] sat_scssn]; } in
                          let {
                            sat_scssh [Occ=Once] :: [a_scrPx]
                            [LclId] =
                                [ds_scss6] \u []
                                    case ds_scss6 of {
                                      (,,,) os_scssd [Occ=Once]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead] ->
                                          os_scssd;
                                    };
                          } in  (#,,,#) [sat_scssh sat_scsso sat_scssu sat_scssA];
                      System.Console.GetOpt.ReturnInOrder f_scssB [Occ=Once!] ->
                          let {
                            ds_scssC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                              :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                  [GHC.Base.String])
                            [LclId] =
                                [w1_scsrY args_scss2 wild2_scss4] \u []
                                    case
                                        System.Console.GetOpt.$wgetOpt'
                                            wild2_scss4 w1_scsrY args_scss2
                                    of
                                    { (#,,,#) ww1_scssE [Occ=Once]
                                              ww2_scssF [Occ=Once]
                                              ww3_scssG [Occ=Once]
                                              ww4_scssH [Occ=Once] ->
                                          (,,,) [ww1_scssE ww2_scssF ww3_scssG ww4_scssH];
                                    }; } in
                          let {
                            sat_scst7 [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scssC] \u []
                                    case ds_scssC of {
                                      (,,,) _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            es_scst6 [Occ=Once] ->
                                          es_scst6;
                                    }; } in
                          let {
                            sat_scst1 [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scssC] \u []
                                    case ds_scssC of {
                                      (,,,) _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            us_scssZ [Occ=Once]
                                            _ [Occ=Dead] ->
                                          us_scssZ;
                                    }; } in
                          let {
                            sat_scssV [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scssC] \u []
                                    case ds_scssC of {
                                      (,,,) _ [Occ=Dead]
                                            xs_scssS [Occ=Once]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead] ->
                                          xs_scssS;
                                    }; } in
                          let {
                            sat_scssO [Occ=Once] :: [a_scrPx]
                            [LclId] =
                                [ds_scssC] \u []
                                    case ds_scssC of {
                                      (,,,) os_scssK [Occ=Once]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead] ->
                                          os_scssK;
                                    }; } in
                          let {
                            sat_scssI [Occ=Once] :: a_scrPx
                            [LclId] =
                                [f_scssB] \u [] f_scssB GHC.Types.[]; } in
                          let {
                            sat_scssP [Occ=Once] :: [a_scrPx]
                            [LclId] =
                                CCCS :! [sat_scssI sat_scssO];
                          } in  (#,,,#) [sat_scssP sat_scssV sat_scst1 sat_scst7];
                    };
                : ds_scst8 [Occ=Once!] ds1_scst9 [Occ=Once!] ->
                    case ds_scst8 of {
                      GHC.Types.C# ds2_scstb [Occ=Once!] ->
                          case ds2_scstb of {
                            __DEFAULT ->
                                case w_scsrX of wild3_scstd {
                                  System.Console.GetOpt.RequireOrder ->
                                      (#,,,#) [GHC.Types.[] wild_scss0 GHC.Types.[] GHC.Types.[]];
                                  System.Console.GetOpt.Permute ->
                                      let {
                                        ds4_scste [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                          :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                              [GHC.Base.String])
                                        [LclId] =
                                            [w1_scsrY args_scss2] \u []
                                                case
                                                    System.Console.GetOpt.$wgetOpt'
                                                        System.Console.GetOpt.Permute
                                                        w1_scsrY
                                                        args_scss2
                                                of
                                                { (#,,,#) ww1_scstg [Occ=Once]
                                                          ww2_scsth [Occ=Once]
                                                          ww3_scsti [Occ=Once]
                                                          ww4_scstj [Occ=Once] ->
                                                      (,,,) [ww1_scstg
                                                             ww2_scsth
                                                             ww3_scsti
                                                             ww4_scstj];
                                                }; } in
                                      let {
                                        sat_scstI [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scste] \u []
                                                case ds4_scste of {
                                                  (,,,) _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        es_scstH [Occ=Once] ->
                                                      es_scstH;
                                                }; } in
                                      let {
                                        sat_scstC [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scste] \u []
                                                case ds4_scste of {
                                                  (,,,) _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        us_scstA [Occ=Once]
                                                        _ [Occ=Dead] ->
                                                      us_scstA;
                                                }; } in
                                      let {
                                        sat_scstv [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scste] \u []
                                                case ds4_scste of {
                                                  (,,,) _ [Occ=Dead]
                                                        xs_scsts [Occ=Once]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead] ->
                                                      xs_scsts;
                                                }; } in
                                      let {
                                        sat_scstw [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            CCCS :! [wild1_scss3 sat_scstv]; } in
                                      let {
                                        sat_scstp [Occ=Once] :: [a_scrPx]
                                        [LclId] =
                                            [ds4_scste] \u []
                                                case ds4_scste of {
                                                  (,,,) os_scstl [Occ=Once]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead] ->
                                                      os_scstl;
                                                };
                                      } in  (#,,,#) [sat_scstp sat_scstw sat_scstC sat_scstI];
                                  System.Console.GetOpt.ReturnInOrder f_scstJ [Occ=Once!] ->
                                      let {
                                        ds4_scstK [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                          :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                              [GHC.Base.String])
                                        [LclId] =
                                            [w1_scsrY args_scss2 wild3_scstd] \u []
                                                case
                                                    System.Console.GetOpt.$wgetOpt'
                                                        wild3_scstd w1_scsrY args_scss2
                                                of
                                                { (#,,,#) ww1_scstM [Occ=Once]
                                                          ww2_scstN [Occ=Once]
                                                          ww3_scstO [Occ=Once]
                                                          ww4_scstP [Occ=Once] ->
                                                      (,,,) [ww1_scstM
                                                             ww2_scstN
                                                             ww3_scstO
                                                             ww4_scstP];
                                                }; } in
                                      let {
                                        sat_scsuf [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scstK] \u []
                                                case ds4_scstK of {
                                                  (,,,) _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        es_scsue [Occ=Once] ->
                                                      es_scsue;
                                                }; } in
                                      let {
                                        sat_scsu9 [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scstK] \u []
                                                case ds4_scstK of {
                                                  (,,,) _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        us_scsu7 [Occ=Once]
                                                        _ [Occ=Dead] ->
                                                      us_scsu7;
                                                }; } in
                                      let {
                                        sat_scsu3 [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scstK] \u []
                                                case ds4_scstK of {
                                                  (,,,) _ [Occ=Dead]
                                                        xs_scsu0 [Occ=Once]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead] ->
                                                      xs_scsu0;
                                                }; } in
                                      let {
                                        sat_scstW [Occ=Once] :: [a_scrPx]
                                        [LclId] =
                                            [ds4_scstK] \u []
                                                case ds4_scstK of {
                                                  (,,,) os_scstS [Occ=Once]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead] ->
                                                      os_scstS;
                                                }; } in
                                      let {
                                        sat_scstQ [Occ=Once] :: a_scrPx
                                        [LclId] =
                                            [wild1_scss3 f_scstJ] \u [] f_scstJ wild1_scss3; } in
                                      let {
                                        sat_scstX [Occ=Once] :: [a_scrPx]
                                        [LclId] =
                                            CCCS :! [sat_scstQ sat_scstW];
                                      } in  (#,,,#) [sat_scstX sat_scsu3 sat_scsu9 sat_scsuf];
                                };
                            '-'# ->
                                case ds1_scst9 of {
                                  [] ->
                                      case w_scsrX of wild4_scsuh {
                                        System.Console.GetOpt.RequireOrder ->
                                            (#,,,#) [GHC.Types.[]
                                                     wild_scss0
                                                     GHC.Types.[]
                                                     GHC.Types.[]];
                                        System.Console.GetOpt.Permute ->
                                            let {
                                              ds4_scsui [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                                    [GHC.Base.String])
                                              [LclId] =
                                                  [w1_scsrY args_scss2] \u []
                                                      case
                                                          System.Console.GetOpt.$wgetOpt'
                                                              System.Console.GetOpt.Permute
                                                              w1_scsrY
                                                              args_scss2
                                                      of
                                                      { (#,,,#) ww1_scsuk [Occ=Once]
                                                                ww2_scsul [Occ=Once]
                                                                ww3_scsum [Occ=Once]
                                                                ww4_scsun [Occ=Once] ->
                                                            (,,,) [ww1_scsuk
                                                                   ww2_scsul
                                                                   ww3_scsum
                                                                   ww4_scsun];
                                                      }; } in
                                            let {
                                              sat_scsuM [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scsui] \u []
                                                      case ds4_scsui of {
                                                        (,,,) _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              es_scsuL [Occ=Once] ->
                                                            es_scsuL;
                                                      }; } in
                                            let {
                                              sat_scsuG [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scsui] \u []
                                                      case ds4_scsui of {
                                                        (,,,) _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              us_scsuE [Occ=Once]
                                                              _ [Occ=Dead] ->
                                                            us_scsuE;
                                                      }; } in
                                            let {
                                              sat_scsuz [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scsui] \u []
                                                      case ds4_scsui of {
                                                        (,,,) _ [Occ=Dead]
                                                              xs_scsuw [Occ=Once]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead] ->
                                                            xs_scsuw;
                                                      }; } in
                                            let {
                                              sat_scsuA [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  CCCS :! [wild1_scss3 sat_scsuz]; } in
                                            let {
                                              sat_scsut [Occ=Once] :: [a_scrPx]
                                              [LclId] =
                                                  [ds4_scsui] \u []
                                                      case ds4_scsui of {
                                                        (,,,) os_scsup [Occ=Once]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead] ->
                                                            os_scsup;
                                                      };
                                            } in  (#,,,#) [sat_scsut sat_scsuA sat_scsuG sat_scsuM];
                                        System.Console.GetOpt.ReturnInOrder f_scsuN [Occ=Once!] ->
                                            let {
                                              ds4_scsuO [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                                    [GHC.Base.String])
                                              [LclId] =
                                                  [w1_scsrY args_scss2 wild4_scsuh] \u []
                                                      case
                                                          System.Console.GetOpt.$wgetOpt'
                                                              wild4_scsuh w1_scsrY args_scss2
                                                      of
                                                      { (#,,,#) ww1_scsuQ [Occ=Once]
                                                                ww2_scsuR [Occ=Once]
                                                                ww3_scsuS [Occ=Once]
                                                                ww4_scsuT [Occ=Once] ->
                                                            (,,,) [ww1_scsuQ
                                                                   ww2_scsuR
                                                                   ww3_scsuS
                                                                   ww4_scsuT];
                                                      }; } in
                                            let {
                                              sat_scsvj [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scsuO] \u []
                                                      case ds4_scsuO of {
                                                        (,,,) _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              es_scsvi [Occ=Once] ->
                                                            es_scsvi;
                                                      }; } in
                                            let {
                                              sat_scsvd [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scsuO] \u []
                                                      case ds4_scsuO of {
                                                        (,,,) _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              us_scsvb [Occ=Once]
                                                              _ [Occ=Dead] ->
                                                            us_scsvb;
                                                      }; } in
                                            let {
                                              sat_scsv7 [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scsuO] \u []
                                                      case ds4_scsuO of {
                                                        (,,,) _ [Occ=Dead]
                                                              xs_scsv4 [Occ=Once]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead] ->
                                                            xs_scsv4;
                                                      }; } in
                                            let {
                                              sat_scsv0 [Occ=Once] :: [a_scrPx]
                                              [LclId] =
                                                  [ds4_scsuO] \u []
                                                      case ds4_scsuO of {
                                                        (,,,) os_scsuW [Occ=Once]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead] ->
                                                            os_scsuW;
                                                      }; } in
                                            let {
                                              sat_scsuU [Occ=Once] :: a_scrPx
                                              [LclId] =
                                                  [wild1_scss3 f_scsuN] \u []
                                                      f_scsuN wild1_scss3; } in
                                            let {
                                              sat_scsv1 [Occ=Once] :: [a_scrPx]
                                              [LclId] =
                                                  CCCS :! [sat_scsuU sat_scsv0];
                                            } in  (#,,,#) [sat_scsv1 sat_scsv7 sat_scsvd sat_scsvj];
                                      };
                                  : ds4_scsvk [Occ=Once!] ds5_scsvl [Occ=Once*!] ->
                                      case ds4_scsvk of wild4_scsvm {
                                        GHC.Types.C# ds6_scsvn [Occ=Once!] ->
                                            case ds6_scsvn of ds7_scsvo {
                                              __DEFAULT ->
                                                  let {
                                                    go_scsvp [Occ=LoopBreaker]
                                                      :: [System.Console.GetOpt.OptDescr a_scrPx]
                                                         -> [System.Console.GetOpt.OptDescr a_scrPx]
                                                    [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
                                                        sat-only [ds7_scsvo go_scsvp] \r [ds8_scsvq]
                                                            case ds8_scsvq of {
                                                              [] -> [] [];
                                                              : y_scsvs [Occ=Once!]
                                                                ys_scsvt [Occ=Once] ->
                                                                  case y_scsvs of wild6_scsvu {
                                                                    System.Console.GetOpt.Option ss_scsvv [Occ=Once]
                                                                                                 _ [Occ=Dead]
                                                                                                 _ [Occ=Dead]
                                                                                                 _ [Occ=Dead] ->
                                                                        let {
                                                                          z_scsvz [Occ=OnceL]
                                                                            :: [System.Console.GetOpt.OptDescr
                                                                                  a_scrPx]
                                                                          [LclId] =
                                                                              [go_scsvp
                                                                               ys_scsvt] \u []
                                                                                  go_scsvp
                                                                                      ys_scsvt; } in
                                                                        let {
                                                                          go1_scsvA [Occ=LoopBreaker]
                                                                            :: [GHC.Types.Char]
                                                                               -> [System.Console.GetOpt.OptDescr
                                                                                     a_scrPx]
                                                                          [LclId,
                                                                           Arity=1,
                                                                           Str=<S,1*U>,
                                                                           Unf=OtherCon []] =
                                                                              sat-only [ds7_scsvo
                                                                                        wild6_scsvu
                                                                                        z_scsvz
                                                                                        go1_scsvA] \r [ds12_scsvB]
                                                                                  case
                                                                                      ds12_scsvB
                                                                                  of
                                                                                  { [] -> z_scsvz;
                                                                                    : y1_scsvD [Occ=Once!]
                                                                                      ys1_scsvE [Occ=Once*] ->
                                                                                        case
                                                                                            y1_scsvD
                                                                                        of
                                                                                        { GHC.Types.C# y2_scsvG [Occ=Once] ->
                                                                                              case
                                                                                                  eqChar# [ds7_scsvo
                                                                                                           y2_scsvG]
                                                                                              of
                                                                                              { __DEFAULT ->
                                                                                                    go1_scsvA
                                                                                                        ys1_scsvE;
                                                                                                1# ->
                                                                                                    let {
                                                                                                      sat_scsvI [Occ=Once]
                                                                                                        :: [System.Console.GetOpt.OptDescr
                                                                                                              a_scrPx]
                                                                                                      [LclId] =
                                                                                                          [go1_scsvA
                                                                                                           ys1_scsvE] \u []
                                                                                                              go1_scsvA
                                                                                                                  ys1_scsvE;
                                                                                                    } in 
                                                                                                      : [wild6_scsvu
                                                                                                         sat_scsvI];
                                                                                              };
                                                                                        };
                                                                                  };
                                                                        } in  go1_scsvA ss_scsvv;
                                                                  };
                                                            };
                                                  } in 
                                                    case
                                                        go_scsvp w1_scsrY
                                                    of
                                                    options_scsvJ [Dmd=<S,U>]
                                                    { __DEFAULT ->
                                                          case poly_go1_rcsnl options_scsvJ of {
                                                            [] ->
                                                                case ds5_scsvl of wild6_scsvL {
                                                                  [] ->
                                                                      let {
                                                                        ds8_scsvM [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                          :: ([a_scrPx],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String])
                                                                        [LclId] =
                                                                            [w_scsrX
                                                                             w1_scsrY
                                                                             args_scss2] \u []
                                                                                case
                                                                                    System.Console.GetOpt.$wgetOpt'
                                                                                        w_scsrX
                                                                                        w1_scsrY
                                                                                        args_scss2
                                                                                of
                                                                                { (#,,,#) ww1_scsvO [Occ=Once]
                                                                                          ww2_scsvP [Occ=Once]
                                                                                          ww3_scsvQ [Occ=Once]
                                                                                          ww4_scsvR [Occ=Once] ->
                                                                                      (,,,) [ww1_scsvO
                                                                                             ww2_scsvP
                                                                                             ww3_scsvQ
                                                                                             ww4_scsvR];
                                                                                }; } in
                                                                      let {
                                                                        sat_scswi [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scsvM] \u []
                                                                                case ds8_scsvM of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        es_scswh [Occ=Once] ->
                                                                                      es_scswh;
                                                                                }; } in
                                                                      let {
                                                                        sat_scswb [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scsvM] \u []
                                                                                case ds8_scsvM of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        us_scsw9 [Occ=Once]
                                                                                        _ [Occ=Dead] ->
                                                                                      us_scsw9;
                                                                                }; } in
                                                                      let {
                                                                        sat_scsw4 [Occ=Once]
                                                                          :: [GHC.Types.Char]
                                                                        [LclId] =
                                                                            CCCS :! [wild4_scsvm
                                                                                     GHC.Types.[]]; } in
                                                                      let {
                                                                        sat_scsw5 [Occ=Once]
                                                                          :: GHC.Base.String
                                                                        [LclId] =
                                                                            CCCS :! [lvl21_rcsng
                                                                                     sat_scsw4]; } in
                                                                      let {
                                                                        sat_scswc [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            CCCS :! [sat_scsw5
                                                                                     sat_scswb]; } in
                                                                      let {
                                                                        sat_scsw3 [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scsvM] \u []
                                                                                case ds8_scsvM of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        xs_scsw0 [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      xs_scsw0;
                                                                                }; } in
                                                                      let {
                                                                        sat_scsvX [Occ=Once]
                                                                          :: [a_scrPx]
                                                                        [LclId] =
                                                                            [ds8_scsvM] \u []
                                                                                case ds8_scsvM of {
                                                                                  (,,,) os_scsvT [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      os_scsvT;
                                                                                };
                                                                      } in 
                                                                        (#,,,#) [sat_scsvX
                                                                                 sat_scsw3
                                                                                 sat_scswc
                                                                                 sat_scswi];
                                                                  : _ [Occ=Dead] _ [Occ=Dead] ->
                                                                      let {
                                                                        ds8_scswl [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                          :: ([a_scrPx],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String])
                                                                        [LclId] =
                                                                            [w_scsrX
                                                                             w1_scsrY
                                                                             args_scss2
                                                                             wild6_scsvL] \u []
                                                                                let {
                                                                                  sat_scswm [Occ=OnceL]
                                                                                    :: [GHC.Types.Char]
                                                                                  [LclId] =
                                                                                      CCCS :! [lvl21_rcsng
                                                                                               wild6_scsvL]; } in
                                                                                let {
                                                                                  sat_scswn [Occ=Once]
                                                                                    :: [GHC.Base.String]
                                                                                  [LclId] =
                                                                                      CCCS :! [sat_scswm
                                                                                               args_scss2];
                                                                                } in 
                                                                                  case
                                                                                      System.Console.GetOpt.$wgetOpt'
                                                                                          w_scsrX
                                                                                          w1_scsrY
                                                                                          sat_scswn
                                                                                  of
                                                                                  { (#,,,#) ww1_scswp [Occ=Once]
                                                                                            ww2_scswq [Occ=Once]
                                                                                            ww3_scswr [Occ=Once]
                                                                                            ww4_scsws [Occ=Once] ->
                                                                                        (,,,) [ww1_scswp
                                                                                               ww2_scswq
                                                                                               ww3_scswr
                                                                                               ww4_scsws];
                                                                                  }; } in
                                                                      let {
                                                                        sat_scswT [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scswl] \u []
                                                                                case ds8_scswl of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        es_scswS [Occ=Once] ->
                                                                                      es_scswS;
                                                                                }; } in
                                                                      let {
                                                                        sat_scswM [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scswl] \u []
                                                                                case ds8_scswl of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        us_scswK [Occ=Once]
                                                                                        _ [Occ=Dead] ->
                                                                                      us_scswK;
                                                                                }; } in
                                                                      let {
                                                                        sat_scswF [Occ=Once]
                                                                          :: [GHC.Types.Char]
                                                                        [LclId] =
                                                                            CCCS :! [wild4_scsvm
                                                                                     GHC.Types.[]]; } in
                                                                      let {
                                                                        sat_scswG [Occ=Once]
                                                                          :: GHC.Base.String
                                                                        [LclId] =
                                                                            CCCS :! [lvl21_rcsng
                                                                                     sat_scswF]; } in
                                                                      let {
                                                                        sat_scswN [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            CCCS :! [sat_scswG
                                                                                     sat_scswM]; } in
                                                                      let {
                                                                        sat_scswE [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scswl] \u []
                                                                                case ds8_scswl of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        xs_scswB [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      xs_scswB;
                                                                                }; } in
                                                                      let {
                                                                        sat_scswy [Occ=Once]
                                                                          :: [a_scrPx]
                                                                        [LclId] =
                                                                            [ds8_scswl] \u []
                                                                                case ds8_scswl of {
                                                                                  (,,,) os_scswu [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      os_scswu;
                                                                                };
                                                                      } in 
                                                                        (#,,,#) [sat_scswy
                                                                                 sat_scswE
                                                                                 sat_scswN
                                                                                 sat_scswT];
                                                                };
                                                            : ds8_scswU [Occ=Once!]
                                                              ds9_scswV [Occ=Once!] ->
                                                                case ds9_scswV of {
                                                                  [] ->
                                                                      case ds8_scswU of {
                                                                        System.Console.GetOpt.NoArg a1_scswY [Occ=Once*] ->
                                                                            case
                                                                                ds5_scsvl
                                                                            of
                                                                            wild8_scswZ
                                                                            { [] ->
                                                                                  let {
                                                                                    ds10_scsx0 [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                      :: ([a_scrPx],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String])
                                                                                    [LclId] =
                                                                                        [w_scsrX
                                                                                         w1_scsrY
                                                                                         args_scss2] \u []
                                                                                            case
                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                    w_scsrX
                                                                                                    w1_scsrY
                                                                                                    args_scss2
                                                                                            of
                                                                                            { (#,,,#) ww1_scsx2 [Occ=Once]
                                                                                                      ww2_scsx3 [Occ=Once]
                                                                                                      ww3_scsx4 [Occ=Once]
                                                                                                      ww4_scsx5 [Occ=Once] ->
                                                                                                  (,,,) [ww1_scsx2
                                                                                                         ww2_scsx3
                                                                                                         ww3_scsx4
                                                                                                         ww4_scsx5];
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsxu [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scsx0] \u []
                                                                                            case
                                                                                                ds10_scsx0
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    es_scsxt [Occ=Once] ->
                                                                                                  es_scsxt;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsxo [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scsx0] \u []
                                                                                            case
                                                                                                ds10_scsx0
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    us_scsxm [Occ=Once]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  us_scsxm;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsxi [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scsx0] \u []
                                                                                            case
                                                                                                ds10_scsx0
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    xs_scsxf [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  xs_scsxf;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsxb [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        [ds10_scsx0] \u []
                                                                                            case
                                                                                                ds10_scsx0
                                                                                            of
                                                                                            { (,,,) os_scsx7 [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  os_scsx7;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsxc [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        CCCS :! [a1_scswY
                                                                                                 sat_scsxb];
                                                                                  } in 
                                                                                    (#,,,#) [sat_scsxc
                                                                                             sat_scsxi
                                                                                             sat_scsxo
                                                                                             sat_scsxu];
                                                                              : _ [Occ=Dead]
                                                                                _ [Occ=Dead] ->
                                                                                  let {
                                                                                    ds10_scsxx [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                      :: ([a_scrPx],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String])
                                                                                    [LclId] =
                                                                                        [w_scsrX
                                                                                         w1_scsrY
                                                                                         args_scss2
                                                                                         wild8_scswZ] \u []
                                                                                            let {
                                                                                              sat_scsxy [Occ=OnceL]
                                                                                                :: [GHC.Types.Char]
                                                                                              [LclId] =
                                                                                                  CCCS :! [lvl21_rcsng
                                                                                                           wild8_scswZ]; } in
                                                                                            let {
                                                                                              sat_scsxz [Occ=Once]
                                                                                                :: [GHC.Base.String]
                                                                                              [LclId] =
                                                                                                  CCCS :! [sat_scsxy
                                                                                                           args_scss2];
                                                                                            } in 
                                                                                              case
                                                                                                  System.Console.GetOpt.$wgetOpt'
                                                                                                      w_scsrX
                                                                                                      w1_scsrY
                                                                                                      sat_scsxz
                                                                                              of
                                                                                              { (#,,,#) ww1_scsxB [Occ=Once]
                                                                                                        ww2_scsxC [Occ=Once]
                                                                                                        ww3_scsxD [Occ=Once]
                                                                                                        ww4_scsxE [Occ=Once] ->
                                                                                                    (,,,) [ww1_scsxB
                                                                                                           ww2_scsxC
                                                                                                           ww3_scsxD
                                                                                                           ww4_scsxE];
                                                                                              }; } in
                                                                                  let {
                                                                                    sat_scsy3 [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scsxx] \u []
                                                                                            case
                                                                                                ds10_scsxx
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    es_scsy2 [Occ=Once] ->
                                                                                                  es_scsy2;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsxX [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scsxx] \u []
                                                                                            case
                                                                                                ds10_scsxx
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    us_scsxV [Occ=Once]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  us_scsxV;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsxR [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scsxx] \u []
                                                                                            case
                                                                                                ds10_scsxx
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    xs_scsxO [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  xs_scsxO;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsxK [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        [ds10_scsxx] \u []
                                                                                            case
                                                                                                ds10_scsxx
                                                                                            of
                                                                                            { (,,,) os_scsxG [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  os_scsxG;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsxL [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        CCCS :! [a1_scswY
                                                                                                 sat_scsxK];
                                                                                  } in 
                                                                                    (#,,,#) [sat_scsxL
                                                                                             sat_scsxR
                                                                                             sat_scsxX
                                                                                             sat_scsy3];
                                                                            };
                                                                        System.Console.GetOpt.ReqArg ds10_scsy4 [Occ=Once*!]
                                                                                                     d_scsy5 [Occ=Once] ->
                                                                            case
                                                                                ds5_scsvl
                                                                            of
                                                                            wild8_scsy6
                                                                            { [] ->
                                                                                  case
                                                                                      args_scss2
                                                                                  of
                                                                                  { [] ->
                                                                                        let {
                                                                                          ds11_scsy8 [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                            :: ([a_scrPx],
                                                                                                [GHC.Base.String],
                                                                                                [GHC.Base.String],
                                                                                                [GHC.Base.String])
                                                                                          [LclId] =
                                                                                              [w_scsrX
                                                                                               w1_scsrY] \u []
                                                                                                  case
                                                                                                      System.Console.GetOpt.$wgetOpt'
                                                                                                          w_scsrX
                                                                                                          w1_scsrY
                                                                                                          GHC.Types.[]
                                                                                                  of
                                                                                                  { (#,,,#) ww1_scsya [Occ=Once]
                                                                                                            ww2_scsyb [Occ=Once]
                                                                                                            ww3_scsyc [Occ=Once]
                                                                                                            ww4_scsyd [Occ=Once] ->
                                                                                                        (,,,) [ww1_scsya
                                                                                                               ww2_scsyb
                                                                                                               ww3_scsyc
                                                                                                               ww4_scsyd];
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scsyH [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scsy8] \u []
                                                                                                  case
                                                                                                      ds11_scsy8
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          es_scsyG [Occ=Once] ->
                                                                                                        es_scsyG;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scsyB [Occ=Once]
                                                                                            :: GHC.Base.String
                                                                                          [LclId] =
                                                                                              [wild4_scsvm
                                                                                               d_scsy5] \u []
                                                                                                  let {
                                                                                                    sat_scsyA [Occ=Once]
                                                                                                      :: [GHC.Types.Char]
                                                                                                    [LclId] =
                                                                                                        [wild4_scsvm
                                                                                                         d_scsy5] \u []
                                                                                                            let {
                                                                                                              sat_scsyz [Occ=Once,
                                                                                                                         Dmd=<L,1*U>]
                                                                                                                :: [GHC.Types.Char]
                                                                                                              [LclId] =
                                                                                                                  [d_scsy5] \s []
                                                                                                                      let {
                                                                                                                        sat_scsyy [Occ=Once]
                                                                                                                          :: [GHC.Types.Char]
                                                                                                                        [LclId] =
                                                                                                                            [d_scsy5] \u []
                                                                                                                                GHC.Base.++
                                                                                                                                    d_scsy5
                                                                                                                                    lvl16_rcsnb;
                                                                                                                      } in 
                                                                                                                        GHC.CString.unpackAppendCString#
                                                                                                                            lvl14_rcsn9
                                                                                                                            sat_scsyy; } in
                                                                                                            let {
                                                                                                              sat_scsyw [Occ=Once]
                                                                                                                :: [GHC.Types.Char]
                                                                                                              [LclId] =
                                                                                                                  CCCS :! [wild4_scsvm
                                                                                                                           GHC.Types.[]]; } in
                                                                                                            let {
                                                                                                              sat_scsyx [Occ=Once]
                                                                                                                :: [GHC.Types.Char]
                                                                                                              [LclId] =
                                                                                                                  CCCS :! [lvl21_rcsng
                                                                                                                           sat_scsyw];
                                                                                                            } in 
                                                                                                              GHC.Base.++
                                                                                                                  sat_scsyx
                                                                                                                  sat_scsyz;
                                                                                                  } in 
                                                                                                    GHC.CString.unpackAppendCString#
                                                                                                        lvl12_rcsn7
                                                                                                        sat_scsyA; } in
                                                                                        let {
                                                                                          sat_scsyI [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              CCCS :! [sat_scsyB
                                                                                                       sat_scsyH]; } in
                                                                                        let {
                                                                                          sat_scsyv [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scsy8] \u []
                                                                                                  case
                                                                                                      ds11_scsy8
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          us_scsyt [Occ=Once]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        us_scsyt;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scsyp [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scsy8] \u []
                                                                                                  case
                                                                                                      ds11_scsy8
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          xs_scsym [Occ=Once]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        xs_scsym;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scsyj [Occ=Once]
                                                                                            :: [a_scrPx]
                                                                                          [LclId] =
                                                                                              [ds11_scsy8] \u []
                                                                                                  case
                                                                                                      ds11_scsy8
                                                                                                  of
                                                                                                  { (,,,) os_scsyf [Occ=Once]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        os_scsyf;
                                                                                                  };
                                                                                        } in 
                                                                                          (#,,,#) [sat_scsyj
                                                                                                   sat_scsyp
                                                                                                   sat_scsyv
                                                                                                   sat_scsyI];
                                                                                    : r_scsyJ [Occ=Once]
                                                                                      rest_scsyK [Occ=Once] ->
                                                                                        let {
                                                                                          ds11_scsyL [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                            :: ([a_scrPx],
                                                                                                [GHC.Base.String],
                                                                                                [GHC.Base.String],
                                                                                                [GHC.Base.String])
                                                                                          [LclId] =
                                                                                              [w_scsrX
                                                                                               w1_scsrY
                                                                                               rest_scsyK] \u []
                                                                                                  case
                                                                                                      System.Console.GetOpt.$wgetOpt'
                                                                                                          w_scsrX
                                                                                                          w1_scsrY
                                                                                                          rest_scsyK
                                                                                                  of
                                                                                                  { (#,,,#) ww1_scsyN [Occ=Once]
                                                                                                            ww2_scsyO [Occ=Once]
                                                                                                            ww3_scsyP [Occ=Once]
                                                                                                            ww4_scsyQ [Occ=Once] ->
                                                                                                        (,,,) [ww1_scsyN
                                                                                                               ww2_scsyO
                                                                                                               ww3_scsyP
                                                                                                               ww4_scsyQ];
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scszg [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scsyL] \u []
                                                                                                  case
                                                                                                      ds11_scsyL
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          es_scszf [Occ=Once] ->
                                                                                                        es_scszf;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scsza [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scsyL] \u []
                                                                                                  case
                                                                                                      ds11_scsyL
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          us_scsz8 [Occ=Once]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        us_scsz8;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scsz4 [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scsyL] \u []
                                                                                                  case
                                                                                                      ds11_scsyL
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          xs_scsz1 [Occ=Once]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        xs_scsz1;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scsyX [Occ=Once]
                                                                                            :: [a_scrPx]
                                                                                          [LclId] =
                                                                                              [ds11_scsyL] \u []
                                                                                                  case
                                                                                                      ds11_scsyL
                                                                                                  of
                                                                                                  { (,,,) os_scsyT [Occ=Once]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        os_scsyT;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scsyR [Occ=Once]
                                                                                            :: a_scrPx
                                                                                          [LclId] =
                                                                                              [ds10_scsy4
                                                                                               r_scsyJ] \u []
                                                                                                  ds10_scsy4
                                                                                                      r_scsyJ; } in
                                                                                        let {
                                                                                          sat_scsyY [Occ=Once]
                                                                                            :: [a_scrPx]
                                                                                          [LclId] =
                                                                                              CCCS :! [sat_scsyR
                                                                                                       sat_scsyX];
                                                                                        } in 
                                                                                          (#,,,#) [sat_scsyY
                                                                                                   sat_scsz4
                                                                                                   sat_scsza
                                                                                                   sat_scszg];
                                                                                  };
                                                                              : _ [Occ=Dead]
                                                                                _ [Occ=Dead] ->
                                                                                  let {
                                                                                    ds11_scszj [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                      :: ([a_scrPx],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String])
                                                                                    [LclId] =
                                                                                        [w_scsrX
                                                                                         w1_scsrY
                                                                                         args_scss2] \u []
                                                                                            case
                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                    w_scsrX
                                                                                                    w1_scsrY
                                                                                                    args_scss2
                                                                                            of
                                                                                            { (#,,,#) ww1_scszl [Occ=Once]
                                                                                                      ww2_scszm [Occ=Once]
                                                                                                      ww3_scszn [Occ=Once]
                                                                                                      ww4_scszo [Occ=Once] ->
                                                                                                  (,,,) [ww1_scszl
                                                                                                         ww2_scszm
                                                                                                         ww3_scszn
                                                                                                         ww4_scszo];
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scszO [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scszj] \u []
                                                                                            case
                                                                                                ds11_scszj
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    es_scszN [Occ=Once] ->
                                                                                                  es_scszN;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scszI [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scszj] \u []
                                                                                            case
                                                                                                ds11_scszj
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    us_scszG [Occ=Once]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  us_scszG;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scszC [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scszj] \u []
                                                                                            case
                                                                                                ds11_scszj
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    xs_scszz [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  xs_scszz;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scszv [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        [ds11_scszj] \u []
                                                                                            case
                                                                                                ds11_scszj
                                                                                            of
                                                                                            { (,,,) os_scszr [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  os_scszr;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scszp [Occ=Once]
                                                                                      :: a_scrPx
                                                                                    [LclId] =
                                                                                        [ds10_scsy4
                                                                                         wild8_scsy6] \u []
                                                                                            ds10_scsy4
                                                                                                wild8_scsy6; } in
                                                                                  let {
                                                                                    sat_scszw [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        CCCS :! [sat_scszp
                                                                                                 sat_scszv];
                                                                                  } in 
                                                                                    (#,,,#) [sat_scszw
                                                                                             sat_scszC
                                                                                             sat_scszI
                                                                                             sat_scszO];
                                                                            };
                                                                        System.Console.GetOpt.OptArg f_scszP [Occ=Once*!]
                                                                                                     _ [Occ=Dead] ->
                                                                            case
                                                                                ds5_scsvl
                                                                            of
                                                                            wild8_scszR
                                                                            { [] ->
                                                                                  let {
                                                                                    ds11_scszS [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                      :: ([a_scrPx],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String])
                                                                                    [LclId] =
                                                                                        [w_scsrX
                                                                                         w1_scsrY
                                                                                         args_scss2] \u []
                                                                                            case
                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                    w_scsrX
                                                                                                    w1_scsrY
                                                                                                    args_scss2
                                                                                            of
                                                                                            { (#,,,#) ww1_scszU [Occ=Once]
                                                                                                      ww2_scszV [Occ=Once]
                                                                                                      ww3_scszW [Occ=Once]
                                                                                                      ww4_scszX [Occ=Once] ->
                                                                                                  (,,,) [ww1_scszU
                                                                                                         ww2_scszV
                                                                                                         ww3_scszW
                                                                                                         ww4_scszX];
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsAn [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scszS] \u []
                                                                                            case
                                                                                                ds11_scszS
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    es_scsAm [Occ=Once] ->
                                                                                                  es_scsAm;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsAh [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scszS] \u []
                                                                                            case
                                                                                                ds11_scszS
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    us_scsAf [Occ=Once]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  us_scsAf;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsAb [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scszS] \u []
                                                                                            case
                                                                                                ds11_scszS
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    xs_scsA8 [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  xs_scsA8;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsA4 [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        [ds11_scszS] \u []
                                                                                            case
                                                                                                ds11_scszS
                                                                                            of
                                                                                            { (,,,) os_scsA0 [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  os_scsA0;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scszY [Occ=Once]
                                                                                      :: a_scrPx
                                                                                    [LclId] =
                                                                                        [f_scszP] \u []
                                                                                            f_scszP
                                                                                                GHC.Base.Nothing; } in
                                                                                  let {
                                                                                    sat_scsA5 [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        CCCS :! [sat_scszY
                                                                                                 sat_scsA4];
                                                                                  } in 
                                                                                    (#,,,#) [sat_scsA5
                                                                                             sat_scsAb
                                                                                             sat_scsAh
                                                                                             sat_scsAn];
                                                                              : _ [Occ=Dead]
                                                                                _ [Occ=Dead] ->
                                                                                  let {
                                                                                    ds11_scsAq [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                      :: ([a_scrPx],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String])
                                                                                    [LclId] =
                                                                                        [w_scsrX
                                                                                         w1_scsrY
                                                                                         args_scss2] \u []
                                                                                            case
                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                    w_scsrX
                                                                                                    w1_scsrY
                                                                                                    args_scss2
                                                                                            of
                                                                                            { (#,,,#) ww1_scsAs [Occ=Once]
                                                                                                      ww2_scsAt [Occ=Once]
                                                                                                      ww3_scsAu [Occ=Once]
                                                                                                      ww4_scsAv [Occ=Once] ->
                                                                                                  (,,,) [ww1_scsAs
                                                                                                         ww2_scsAt
                                                                                                         ww3_scsAu
                                                                                                         ww4_scsAv];
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsAW [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scsAq] \u []
                                                                                            case
                                                                                                ds11_scsAq
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    es_scsAV [Occ=Once] ->
                                                                                                  es_scsAV;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsAQ [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scsAq] \u []
                                                                                            case
                                                                                                ds11_scsAq
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    us_scsAO [Occ=Once]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  us_scsAO;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsAK [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scsAq] \u []
                                                                                            case
                                                                                                ds11_scsAq
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    xs_scsAH [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  xs_scsAH;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsAD [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        [ds11_scsAq] \u []
                                                                                            case
                                                                                                ds11_scsAq
                                                                                            of
                                                                                            { (,,,) os_scsAz [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  os_scsAz;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scsAx [Occ=Once]
                                                                                      :: a_scrPx
                                                                                    [LclId] =
                                                                                        [f_scszP
                                                                                         wild8_scszR] \u []
                                                                                            let {
                                                                                              sat_scsAw [Occ=Once]
                                                                                                :: GHC.Base.Maybe
                                                                                                     GHC.Base.String
                                                                                              [LclId] =
                                                                                                  CCCS GHC.Base.Just! [wild8_scszR];
                                                                                            } in 
                                                                                              f_scszP
                                                                                                  sat_scsAw; } in
                                                                                  let {
                                                                                    sat_scsAE [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        CCCS :! [sat_scsAx
                                                                                                 sat_scsAD];
                                                                                  } in 
                                                                                    (#,,,#) [sat_scsAE
                                                                                             sat_scsAK
                                                                                             sat_scsAQ
                                                                                             sat_scsAW];
                                                                            };
                                                                      };
                                                                  : _ [Occ=Dead] _ [Occ=Dead] ->
                                                                      let {
                                                                        ds12_scsAZ [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                          :: ([a_scrPx],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String])
                                                                        [LclId] =
                                                                            [w_scsrX
                                                                             w1_scsrY
                                                                             args_scss2] \u []
                                                                                case
                                                                                    System.Console.GetOpt.$wgetOpt'
                                                                                        w_scsrX
                                                                                        w1_scsrY
                                                                                        args_scss2
                                                                                of
                                                                                { (#,,,#) ww1_scsB1 [Occ=Once]
                                                                                          ww2_scsB2 [Occ=Once]
                                                                                          ww3_scsB3 [Occ=Once]
                                                                                          ww4_scsB4 [Occ=Once] ->
                                                                                      (,,,) [ww1_scsB1
                                                                                             ww2_scsB2
                                                                                             ww3_scsB3
                                                                                             ww4_scsB4];
                                                                                }; } in
                                                                      let {
                                                                        sat_scsBx [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds12_scsAZ] \u []
                                                                                case ds12_scsAZ of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        es_scsBw [Occ=Once] ->
                                                                                      es_scsBw;
                                                                                }; } in
                                                                      let {
                                                                        sat_scsBr [Occ=Once]
                                                                          :: GHC.Base.String
                                                                        [LclId] =
                                                                            [wild4_scsvm
                                                                             options_scsvJ] \u []
                                                                                let {
                                                                                  sat_scsBq [Occ=Once]
                                                                                    :: GHC.Base.String
                                                                                  [LclId] =
                                                                                      [wild4_scsvm] \u []
                                                                                          let {
                                                                                            sat_scsBp [Occ=Once]
                                                                                              :: [GHC.Types.Char]
                                                                                            [LclId] =
                                                                                                [wild4_scsvm] \u []
                                                                                                    let {
                                                                                                      sat_scsBn [Occ=Once]
                                                                                                        :: [GHC.Types.Char]
                                                                                                      [LclId] =
                                                                                                          CCCS :! [wild4_scsvm
                                                                                                                   GHC.Types.[]]; } in
                                                                                                    let {
                                                                                                      sat_scsBo [Occ=Once]
                                                                                                        :: [GHC.Types.Char]
                                                                                                      [LclId] =
                                                                                                          CCCS :! [lvl21_rcsng
                                                                                                                   sat_scsBn];
                                                                                                    } in 
                                                                                                      GHC.Base.++
                                                                                                          sat_scsBo
                                                                                                          lvl24_rcsnk;
                                                                                          } in 
                                                                                            GHC.CString.unpackAppendCString#
                                                                                                lvl12_rcsn7
                                                                                                sat_scsBp;
                                                                                } in 
                                                                                  System.Console.GetOpt.usageInfo
                                                                                      sat_scsBq
                                                                                      options_scsvJ; } in
                                                                      let {
                                                                        sat_scsBy [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            CCCS :! [sat_scsBr
                                                                                     sat_scsBx]; } in
                                                                      let {
                                                                        sat_scsBm [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds12_scsAZ] \u []
                                                                                case ds12_scsAZ of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        us_scsBk [Occ=Once]
                                                                                        _ [Occ=Dead] ->
                                                                                      us_scsBk;
                                                                                }; } in
                                                                      let {
                                                                        sat_scsBg [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds12_scsAZ] \u []
                                                                                case ds12_scsAZ of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        xs_scsBd [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      xs_scsBd;
                                                                                }; } in
                                                                      let {
                                                                        sat_scsBa [Occ=Once]
                                                                          :: [a_scrPx]
                                                                        [LclId] =
                                                                            [ds12_scsAZ] \u []
                                                                                case ds12_scsAZ of {
                                                                                  (,,,) os_scsB6 [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      os_scsB6;
                                                                                };
                                                                      } in 
                                                                        (#,,,#) [sat_scsBa
                                                                                 sat_scsBg
                                                                                 sat_scsBm
                                                                                 sat_scsBy];
                                                                };
                                                          };
                                                    };
                                              '-'# ->
                                                  case ds5_scsvl of wild5_scsBz {
                                                    [] ->
                                                        case w_scsrX of {
                                                          __DEFAULT ->
                                                              (#,,,#) [GHC.Types.[]
                                                                       args_scss2
                                                                       GHC.Types.[]
                                                                       GHC.Types.[]];
                                                          System.Console.GetOpt.ReturnInOrder f_scsBB [Occ=Once] ->
                                                              let {
                                                                sat_scsBC [Occ=Once] :: [a_scrPx]
                                                                [LclId] =
                                                                    [args_scss2 f_scsBB] \u []
                                                                        GHC.Base.map
                                                                            f_scsBB args_scss2;
                                                              } in 
                                                                (#,,,#) [sat_scsBC
                                                                         GHC.Types.[]
                                                                         GHC.Types.[]
                                                                         GHC.Types.[]];
                                                        };
                                                    : _ [Occ=Dead] _ [Occ=Dead] ->
                                                        let {
                                                          ds8_scsBF [Dmd=<L,U(1*U,1*U)>]
                                                            :: ([GHC.Types.Char], [GHC.Types.Char])
                                                          [LclId] =
                                                              [wild5_scsBz] \u []
                                                                  case
                                                                      GHC.List.$wbreak
                                                                          lvl20_rcsnf wild5_scsBz
                                                                  of
                                                                  { (#,#) ww1_scsBH [Occ=Once]
                                                                          ww2_scsBI [Occ=Once] ->
                                                                        (,) [ww1_scsBH ww2_scsBI];
                                                                  }; } in
                                                        let {
                                                          opt_scsBJ :: [GHC.Types.Char]
                                                          [LclId] =
                                                              [ds8_scsBF] \u []
                                                                  case ds8_scsBF of {
                                                                    (,) opt1_scsBL [Occ=Once]
                                                                        _ [Occ=Dead] ->
                                                                        opt1_scsBL;
                                                                  }; } in
                                                        let {
                                                          getWith_scsBN [Dmd=<C(S),C(U)>]
                                                            :: ([GHC.Types.Char]
                                                                -> GHC.Base.String
                                                                -> GHC.Types.Bool)
                                                               -> [System.Console.GetOpt.OptDescr
                                                                     a_scrPx]
                                                          [LclId,
                                                           Arity=1,
                                                           Str=<L,1*C1(C(U))>,
                                                           Unf=OtherCon []] =
                                                              sat-only [w1_scsrY
                                                                        opt_scsBJ] \r [p_scsBO]
                                                                  let {
                                                                    p1_scsBP [Occ=OnceL!,
                                                                              Dmd=<L,C(U)>]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Types.Bool
                                                                    [LclId] =
                                                                        [opt_scsBJ p_scsBO] \u []
                                                                            p_scsBO opt_scsBJ; } in
                                                                  let {
                                                                    go_scsBQ [Occ=LoopBreaker]
                                                                      :: [System.Console.GetOpt.OptDescr
                                                                            a_scrPx]
                                                                         -> [System.Console.GetOpt.OptDescr
                                                                               a_scrPx]
                                                                    [LclId,
                                                                     Arity=1,
                                                                     Str=<S,1*U>,
                                                                     Unf=OtherCon []] =
                                                                        sat-only [p1_scsBP
                                                                                  go_scsBQ] \r [ds9_scsBR]
                                                                            case ds9_scsBR of {
                                                                              [] -> [] [];
                                                                              : y_scsBT [Occ=Once!]
                                                                                ys_scsBU ->
                                                                                  case
                                                                                      y_scsBT
                                                                                  of
                                                                                  wild7_scsBV
                                                                                  { System.Console.GetOpt.Option _ [Occ=Dead]
                                                                                                                 xs_scsBX [Occ=Once]
                                                                                                                 _ [Occ=Dead]
                                                                                                                 _ [Occ=Dead] ->
                                                                                        let-no-escape {
                                                                                          exit_scsC0 [Occ=OnceLT[0]]
                                                                                            :: [System.Console.GetOpt.OptDescr
                                                                                                  a_scrPx]
                                                                                          [LclId[JoinId(0)],
                                                                                           Unf=OtherCon []] =
                                                                                              [go_scsBQ
                                                                                               ys_scsBU] \r []
                                                                                                  go_scsBQ
                                                                                                      ys_scsBU;
                                                                                        } in 
                                                                                          let-no-escape {
                                                                                            exit1_scsC1 [Occ=OnceLT[0]]
                                                                                              :: [System.Console.GetOpt.OptDescr
                                                                                                    a_scrPx]
                                                                                            [LclId[JoinId(0)],
                                                                                             Unf=OtherCon []] =
                                                                                                [go_scsBQ
                                                                                                 ys_scsBU
                                                                                                 wild7_scsBV] \r []
                                                                                                    let {
                                                                                                      sat_scsC2 [Occ=Once]
                                                                                                        :: [System.Console.GetOpt.OptDescr
                                                                                                              a_scrPx]
                                                                                                      [LclId] =
                                                                                                          [go_scsBQ
                                                                                                           ys_scsBU] \u []
                                                                                                              go_scsBQ
                                                                                                                  ys_scsBU;
                                                                                                    } in 
                                                                                                      : [wild7_scsBV
                                                                                                         sat_scsC2];
                                                                                          } in 
                                                                                            let-no-escape {
                                                                                              go1_scsC3 [Occ=LoopBreakerT[1]]
                                                                                                :: [GHC.Base.String]
                                                                                                   -> [System.Console.GetOpt.OptDescr
                                                                                                         a_scrPx]
                                                                                              [LclId[JoinId(1)],
                                                                                               Arity=1,
                                                                                               Str=<S,1*U>,
                                                                                               Unf=OtherCon []] =
                                                                                                  sat-only [p1_scsBP
                                                                                                            exit_scsC0
                                                                                                            exit1_scsC1
                                                                                                            go1_scsC3] \r [ds13_scsC4]
                                                                                                      case
                                                                                                          ds13_scsC4
                                                                                                      of
                                                                                                      { [] ->
                                                                                                            exit_scsC0;
                                                                                                        : y1_scsC6 [Occ=Once]
                                                                                                          ys1_scsC7 [Occ=Once] ->
                                                                                                            case
                                                                                                                p1_scsBP
                                                                                                                    y1_scsC6
                                                                                                            of
                                                                                                            { GHC.Types.False ->
                                                                                                                  go1_scsC3
                                                                                                                      ys1_scsC7;
                                                                                                              GHC.Types.True ->
                                                                                                                  exit1_scsC1;
                                                                                                            };
                                                                                                      };
                                                                                            } in 
                                                                                              go1_scsC3
                                                                                                  xs_scsBX;
                                                                                  };
                                                                            };
                                                                  } in  go_scsBQ w1_scsrY;
                                                        } in 
                                                          let-no-escape {
                                                            $j_scsC9 [Occ=Once*!T[1],
                                                                      Dmd=<C(S),1*C1(U(U,U,U,U))>]
                                                              :: [System.Console.GetOpt.OptDescr
                                                                    a_scrPx]
                                                                 -> (# [a_scrPx], [GHC.Base.String],
                                                                       [GHC.Base.String],
                                                                       [GHC.Base.String] #)
                                                            [LclId[JoinId(1)],
                                                             Arity=1,
                                                             Str=<S,U>,
                                                             Unf=OtherCon []] =
                                                                sat-only [w_scsrX
                                                                          w1_scsrY
                                                                          args_scss2
                                                                          wild5_scsBz
                                                                          ds8_scsBF
                                                                          opt_scsBJ] \r [options_scsCa]
                                                                    case
                                                                        poly_go_rcsnj options_scsCa
                                                                    of
                                                                    { [] ->
                                                                          let {
                                                                            ds9_scsCc [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                              :: ([a_scrPx],
                                                                                  [GHC.Base.String],
                                                                                  [GHC.Base.String],
                                                                                  [GHC.Base.String])
                                                                            [LclId] =
                                                                                [w_scsrX
                                                                                 w1_scsrY
                                                                                 args_scss2] \u []
                                                                                    case
                                                                                        System.Console.GetOpt.$wgetOpt'
                                                                                            w_scsrX
                                                                                            w1_scsrY
                                                                                            args_scss2
                                                                                    of
                                                                                    { (#,,,#) ww1_scsCe [Occ=Once]
                                                                                              ww2_scsCf [Occ=Once]
                                                                                              ww3_scsCg [Occ=Once]
                                                                                              ww4_scsCh [Occ=Once] ->
                                                                                          (,,,) [ww1_scsCe
                                                                                                 ww2_scsCf
                                                                                                 ww3_scsCg
                                                                                                 ww4_scsCh];
                                                                                    }; } in
                                                                          let {
                                                                            sat_scsCH [Occ=Once]
                                                                              :: [GHC.Base.String]
                                                                            [LclId] =
                                                                                [ds9_scsCc] \u []
                                                                                    case
                                                                                        ds9_scsCc
                                                                                    of
                                                                                    { (,,,) _ [Occ=Dead]
                                                                                            _ [Occ=Dead]
                                                                                            _ [Occ=Dead]
                                                                                            es_scsCG [Occ=Once] ->
                                                                                          es_scsCG;
                                                                                    }; } in
                                                                          let {
                                                                            sat_scsCA [Occ=Once]
                                                                              :: [GHC.Base.String]
                                                                            [LclId] =
                                                                                [ds9_scsCc] \u []
                                                                                    case
                                                                                        ds9_scsCc
                                                                                    of
                                                                                    { (,,,) _ [Occ=Dead]
                                                                                            _ [Occ=Dead]
                                                                                            us_scsCy [Occ=Once]
                                                                                            _ [Occ=Dead] ->
                                                                                          us_scsCy;
                                                                                    }; } in
                                                                          let {
                                                                            sat_scsCu [Occ=Once]
                                                                              :: GHC.Base.String
                                                                            [LclId] =
                                                                                [wild5_scsBz] \u []
                                                                                    GHC.CString.unpackAppendCString#
                                                                                        lvl6_rcsn1
                                                                                        wild5_scsBz; } in
                                                                          let {
                                                                            sat_scsCB [Occ=Once]
                                                                              :: [GHC.Base.String]
                                                                            [LclId] =
                                                                                CCCS :! [sat_scsCu
                                                                                         sat_scsCA]; } in
                                                                          let {
                                                                            sat_scsCt [Occ=Once]
                                                                              :: [GHC.Base.String]
                                                                            [LclId] =
                                                                                [ds9_scsCc] \u []
                                                                                    case
                                                                                        ds9_scsCc
                                                                                    of
                                                                                    { (,,,) _ [Occ=Dead]
                                                                                            xs_scsCq [Occ=Once]
                                                                                            _ [Occ=Dead]
                                                                                            _ [Occ=Dead] ->
                                                                                          xs_scsCq;
                                                                                    }; } in
                                                                          let {
                                                                            sat_scsCn [Occ=Once]
                                                                              :: [a_scrPx]
                                                                            [LclId] =
                                                                                [ds9_scsCc] \u []
                                                                                    case
                                                                                        ds9_scsCc
                                                                                    of
                                                                                    { (,,,) os_scsCj [Occ=Once]
                                                                                            _ [Occ=Dead]
                                                                                            _ [Occ=Dead]
                                                                                            _ [Occ=Dead] ->
                                                                                          os_scsCj;
                                                                                    };
                                                                          } in 
                                                                            (#,,,#) [sat_scsCn
                                                                                     sat_scsCt
                                                                                     sat_scsCB
                                                                                     sat_scsCH];
                                                                      : ds9_scsCI [Occ=Once!]
                                                                        ds10_scsCJ [Occ=Once!] ->
                                                                          case ds10_scsCJ of {
                                                                            [] ->
                                                                                case ds9_scsCI of {
                                                                                  System.Console.GetOpt.NoArg a1_scsCM [Occ=Once] ->
                                                                                      case
                                                                                          ds8_scsBF
                                                                                      of
                                                                                      { (,) _ [Occ=Dead]
                                                                                            arg1_scsCP [Occ=Once!] ->
                                                                                            case
                                                                                                arg1_scsCP
                                                                                            of
                                                                                            { [] ->
                                                                                                  let {
                                                                                                    ds11_scsCR [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                      :: ([a_scrPx],
                                                                                                          [GHC.Base.String],
                                                                                                          [GHC.Base.String],
                                                                                                          [GHC.Base.String])
                                                                                                    [LclId] =
                                                                                                        [w_scsrX
                                                                                                         w1_scsrY
                                                                                                         args_scss2] \u []
                                                                                                            case
                                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                                    w_scsrX
                                                                                                                    w1_scsrY
                                                                                                                    args_scss2
                                                                                                            of
                                                                                                            { (#,,,#) ww1_scsCT [Occ=Once]
                                                                                                                      ww2_scsCU [Occ=Once]
                                                                                                                      ww3_scsCV [Occ=Once]
                                                                                                                      ww4_scsCW [Occ=Once] ->
                                                                                                                  (,,,) [ww1_scsCT
                                                                                                                         ww2_scsCU
                                                                                                                         ww3_scsCV
                                                                                                                         ww4_scsCW];
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scsDl [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds11_scsCR] \u []
                                                                                                            case
                                                                                                                ds11_scsCR
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    es_scsDk [Occ=Once] ->
                                                                                                                  es_scsDk;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scsDf [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds11_scsCR] \u []
                                                                                                            case
                                                                                                                ds11_scsCR
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    us_scsDd [Occ=Once]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  us_scsDd;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scsD9 [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds11_scsCR] \u []
                                                                                                            case
                                                                                                                ds11_scsCR
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    xs_scsD6 [Occ=Once]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  xs_scsD6;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scsD2 [Occ=Once]
                                                                                                      :: [a_scrPx]
                                                                                                    [LclId] =
                                                                                                        [ds11_scsCR] \u []
                                                                                                            case
                                                                                                                ds11_scsCR
                                                                                                            of
                                                                                                            { (,,,) os_scsCY [Occ=Once]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  os_scsCY;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scsD3 [Occ=Once]
                                                                                                      :: [a_scrPx]
                                                                                                    [LclId] =
                                                                                                        CCCS :! [a1_scsCM
                                                                                                                 sat_scsD2];
                                                                                                  } in 
                                                                                                    (#,,,#) [sat_scsD3
                                                                                                             sat_scsD9
                                                                                                             sat_scsDf
                                                                                                             sat_scsDl];
                                                                                              : ds11_scsDm [Occ=Once!]
                                                                                                _ [Occ=Dead] ->
                                                                                                  case
                                                                                                      ds11_scsDm
                                                                                                  of
                                                                                                  { GHC.Types.C# ds13_scsDp [Occ=Once!] ->
                                                                                                        case
                                                                                                            ds13_scsDp
                                                                                                        of
                                                                                                        { __DEFAULT ->
                                                                                                              let {
                                                                                                                ds15_scsDr [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scsrX
                                                                                                                     w1_scsrY
                                                                                                                     args_scss2] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scsrX
                                                                                                                                w1_scsrY
                                                                                                                                args_scss2
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scsDt [Occ=Once]
                                                                                                                                  ww2_scsDu [Occ=Once]
                                                                                                                                  ww3_scsDv [Occ=Once]
                                                                                                                                  ww4_scsDw [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scsDt
                                                                                                                                     ww2_scsDu
                                                                                                                                     ww3_scsDv
                                                                                                                                     ww4_scsDw];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsDW [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsDr] \u []
                                                                                                                        case
                                                                                                                            ds15_scsDr
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scsDV [Occ=Once] ->
                                                                                                                              es_scsDV;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsDP [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsDr] \u []
                                                                                                                        case
                                                                                                                            ds15_scsDr
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scsDN [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scsDN;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsDJ [Occ=Once]
                                                                                                                  :: GHC.Base.String
                                                                                                                [LclId] =
                                                                                                                    [wild5_scsBz] \u []
                                                                                                                        GHC.CString.unpackAppendCString#
                                                                                                                            lvl6_rcsn1
                                                                                                                            wild5_scsBz; } in
                                                                                                              let {
                                                                                                                sat_scsDQ [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scsDJ
                                                                                                                             sat_scsDP]; } in
                                                                                                              let {
                                                                                                                sat_scsDI [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsDr] \u []
                                                                                                                        case
                                                                                                                            ds15_scsDr
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs_scsDF [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs_scsDF;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsDC [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsDr] \u []
                                                                                                                        case
                                                                                                                            ds15_scsDr
                                                                                                                        of
                                                                                                                        { (,,,) os_scsDy [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scsDy;
                                                                                                                        };
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scsDC
                                                                                                                         sat_scsDI
                                                                                                                         sat_scsDQ
                                                                                                                         sat_scsDW];
                                                                                                          '='# ->
                                                                                                              let {
                                                                                                                ds15_scsDX [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scsrX
                                                                                                                     w1_scsrY
                                                                                                                     args_scss2] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scsrX
                                                                                                                                w1_scsrY
                                                                                                                                args_scss2
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scsDZ [Occ=Once]
                                                                                                                                  ww2_scsE0 [Occ=Once]
                                                                                                                                  ww3_scsE1 [Occ=Once]
                                                                                                                                  ww4_scsE2 [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scsDZ
                                                                                                                                     ww2_scsE0
                                                                                                                                     ww3_scsE1
                                                                                                                                     ww4_scsE2];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsEs [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsDX] \u []
                                                                                                                        case
                                                                                                                            ds15_scsDX
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scsEr [Occ=Once] ->
                                                                                                                              es_scsEr;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsEm [Occ=Once]
                                                                                                                  :: GHC.Base.String
                                                                                                                [LclId] =
                                                                                                                    [opt_scsBJ] \u []
                                                                                                                        let {
                                                                                                                          sat_scsEl [Occ=Once]
                                                                                                                            :: [GHC.Types.Char]
                                                                                                                          [LclId] =
                                                                                                                              [opt_scsBJ] \u []
                                                                                                                                  GHC.Base.++
                                                                                                                                      opt_scsBJ
                                                                                                                                      lvl22_rcsnh;
                                                                                                                        } in 
                                                                                                                          GHC.CString.unpackAppendCString#
                                                                                                                              lvl23_rcsni
                                                                                                                              sat_scsEl; } in
                                                                                                              let {
                                                                                                                sat_scsEt [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scsEm
                                                                                                                             sat_scsEs]; } in
                                                                                                              let {
                                                                                                                sat_scsEk [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsDX] \u []
                                                                                                                        case
                                                                                                                            ds15_scsDX
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scsEi [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scsEi;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsEe [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsDX] \u []
                                                                                                                        case
                                                                                                                            ds15_scsDX
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs_scsEb [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs_scsEb;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsE8 [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsDX] \u []
                                                                                                                        case
                                                                                                                            ds15_scsDX
                                                                                                                        of
                                                                                                                        { (,,,) os_scsE4 [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scsE4;
                                                                                                                        };
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scsE8
                                                                                                                         sat_scsEe
                                                                                                                         sat_scsEk
                                                                                                                         sat_scsEt];
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                  System.Console.GetOpt.ReqArg ds11_scsEu [Occ=Once*!]
                                                                                                               d_scsEv [Occ=Once] ->
                                                                                      case
                                                                                          ds8_scsBF
                                                                                      of
                                                                                      { (,) _ [Occ=Dead]
                                                                                            arg1_scsEy [Occ=Once!] ->
                                                                                            case
                                                                                                arg1_scsEy
                                                                                            of
                                                                                            { [] ->
                                                                                                  case
                                                                                                      args_scss2
                                                                                                  of
                                                                                                  { [] ->
                                                                                                        let {
                                                                                                          ds12_scsEB [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                            :: ([a_scrPx],
                                                                                                                [GHC.Base.String],
                                                                                                                [GHC.Base.String],
                                                                                                                [GHC.Base.String])
                                                                                                          [LclId] =
                                                                                                              [w_scsrX
                                                                                                               w1_scsrY] \u []
                                                                                                                  case
                                                                                                                      System.Console.GetOpt.$wgetOpt'
                                                                                                                          w_scsrX
                                                                                                                          w1_scsrY
                                                                                                                          GHC.Types.[]
                                                                                                                  of
                                                                                                                  { (#,,,#) ww1_scsED [Occ=Once]
                                                                                                                            ww2_scsEE [Occ=Once]
                                                                                                                            ww3_scsEF [Occ=Once]
                                                                                                                            ww4_scsEG [Occ=Once] ->
                                                                                                                        (,,,) [ww1_scsED
                                                                                                                               ww2_scsEE
                                                                                                                               ww3_scsEF
                                                                                                                               ww4_scsEG];
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scsF9 [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scsEB] \u []
                                                                                                                  case
                                                                                                                      ds12_scsEB
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          es_scsF8 [Occ=Once] ->
                                                                                                                        es_scsF8;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scsF3 [Occ=Once]
                                                                                                            :: GHC.Base.String
                                                                                                          [LclId] =
                                                                                                              [opt_scsBJ
                                                                                                               d_scsEv] \u []
                                                                                                                  let {
                                                                                                                    sat_scsF2 [Occ=Once]
                                                                                                                      :: [GHC.Types.Char]
                                                                                                                    [LclId] =
                                                                                                                        [opt_scsBJ
                                                                                                                         d_scsEv] \u []
                                                                                                                            let {
                                                                                                                              sat_scsF1 [Occ=Once,
                                                                                                                                         Dmd=<L,1*U>]
                                                                                                                                :: [GHC.Types.Char]
                                                                                                                              [LclId] =
                                                                                                                                  [d_scsEv] \s []
                                                                                                                                      let {
                                                                                                                                        sat_scsF0 [Occ=Once]
                                                                                                                                          :: [GHC.Types.Char]
                                                                                                                                        [LclId] =
                                                                                                                                            [d_scsEv] \u []
                                                                                                                                                GHC.Base.++
                                                                                                                                                    d_scsEv
                                                                                                                                                    lvl16_rcsnb;
                                                                                                                                      } in 
                                                                                                                                        GHC.CString.unpackAppendCString#
                                                                                                                                            lvl14_rcsn9
                                                                                                                                            sat_scsF0;
                                                                                                                            } in 
                                                                                                                              case
                                                                                                                                  GHC.CString.unpackAppendCString#
                                                                                                                                      lvl6_rcsn1
                                                                                                                                      opt_scsBJ
                                                                                                                              of
                                                                                                                              sat_scsEZ
                                                                                                                              { __DEFAULT ->
                                                                                                                                    GHC.Base.++
                                                                                                                                        sat_scsEZ
                                                                                                                                        sat_scsF1;
                                                                                                                              };
                                                                                                                  } in 
                                                                                                                    GHC.CString.unpackAppendCString#
                                                                                                                        lvl12_rcsn7
                                                                                                                        sat_scsF2; } in
                                                                                                        let {
                                                                                                          sat_scsFa [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              CCCS :! [sat_scsF3
                                                                                                                       sat_scsF9]; } in
                                                                                                        let {
                                                                                                          sat_scsEY [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scsEB] \u []
                                                                                                                  case
                                                                                                                      ds12_scsEB
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          us_scsEW [Occ=Once]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        us_scsEW;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scsES [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scsEB] \u []
                                                                                                                  case
                                                                                                                      ds12_scsEB
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          xs_scsEP [Occ=Once]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        xs_scsEP;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scsEM [Occ=Once]
                                                                                                            :: [a_scrPx]
                                                                                                          [LclId] =
                                                                                                              [ds12_scsEB] \u []
                                                                                                                  case
                                                                                                                      ds12_scsEB
                                                                                                                  of
                                                                                                                  { (,,,) os_scsEI [Occ=Once]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        os_scsEI;
                                                                                                                  };
                                                                                                        } in 
                                                                                                          (#,,,#) [sat_scsEM
                                                                                                                   sat_scsES
                                                                                                                   sat_scsEY
                                                                                                                   sat_scsFa];
                                                                                                    : r_scsFb [Occ=Once]
                                                                                                      rest_scsFc [Occ=Once] ->
                                                                                                        let {
                                                                                                          ds12_scsFd [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                            :: ([a_scrPx],
                                                                                                                [GHC.Base.String],
                                                                                                                [GHC.Base.String],
                                                                                                                [GHC.Base.String])
                                                                                                          [LclId] =
                                                                                                              [w_scsrX
                                                                                                               w1_scsrY
                                                                                                               rest_scsFc] \u []
                                                                                                                  case
                                                                                                                      System.Console.GetOpt.$wgetOpt'
                                                                                                                          w_scsrX
                                                                                                                          w1_scsrY
                                                                                                                          rest_scsFc
                                                                                                                  of
                                                                                                                  { (#,,,#) ww1_scsFf [Occ=Once]
                                                                                                                            ww2_scsFg [Occ=Once]
                                                                                                                            ww3_scsFh [Occ=Once]
                                                                                                                            ww4_scsFi [Occ=Once] ->
                                                                                                                        (,,,) [ww1_scsFf
                                                                                                                               ww2_scsFg
                                                                                                                               ww3_scsFh
                                                                                                                               ww4_scsFi];
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scsFI [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scsFd] \u []
                                                                                                                  case
                                                                                                                      ds12_scsFd
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          es_scsFH [Occ=Once] ->
                                                                                                                        es_scsFH;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scsFC [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scsFd] \u []
                                                                                                                  case
                                                                                                                      ds12_scsFd
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          us_scsFA [Occ=Once]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        us_scsFA;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scsFw [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scsFd] \u []
                                                                                                                  case
                                                                                                                      ds12_scsFd
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          xs_scsFt [Occ=Once]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        xs_scsFt;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scsFp [Occ=Once]
                                                                                                            :: [a_scrPx]
                                                                                                          [LclId] =
                                                                                                              [ds12_scsFd] \u []
                                                                                                                  case
                                                                                                                      ds12_scsFd
                                                                                                                  of
                                                                                                                  { (,,,) os_scsFl [Occ=Once]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        os_scsFl;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scsFj [Occ=Once]
                                                                                                            :: a_scrPx
                                                                                                          [LclId] =
                                                                                                              [ds11_scsEu
                                                                                                               r_scsFb] \u []
                                                                                                                  ds11_scsEu
                                                                                                                      r_scsFb; } in
                                                                                                        let {
                                                                                                          sat_scsFq [Occ=Once]
                                                                                                            :: [a_scrPx]
                                                                                                          [LclId] =
                                                                                                              CCCS :! [sat_scsFj
                                                                                                                       sat_scsFp];
                                                                                                        } in 
                                                                                                          (#,,,#) [sat_scsFq
                                                                                                                   sat_scsFw
                                                                                                                   sat_scsFC
                                                                                                                   sat_scsFI];
                                                                                                  };
                                                                                              : ds12_scsFJ [Occ=Once!]
                                                                                                xs_scsFK [Occ=Once] ->
                                                                                                  case
                                                                                                      ds12_scsFJ
                                                                                                  of
                                                                                                  { GHC.Types.C# ds13_scsFM [Occ=Once!] ->
                                                                                                        case
                                                                                                            ds13_scsFM
                                                                                                        of
                                                                                                        { __DEFAULT ->
                                                                                                              let {
                                                                                                                ds15_scsFO [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scsrX
                                                                                                                     w1_scsrY
                                                                                                                     args_scss2] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scsrX
                                                                                                                                w1_scsrY
                                                                                                                                args_scss2
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scsFQ [Occ=Once]
                                                                                                                                  ww2_scsFR [Occ=Once]
                                                                                                                                  ww3_scsFS [Occ=Once]
                                                                                                                                  ww4_scsFT [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scsFQ
                                                                                                                                     ww2_scsFR
                                                                                                                                     ww3_scsFS
                                                                                                                                     ww4_scsFT];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsGj [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsFO] \u []
                                                                                                                        case
                                                                                                                            ds15_scsFO
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scsGi [Occ=Once] ->
                                                                                                                              es_scsGi;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsGc [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsFO] \u []
                                                                                                                        case
                                                                                                                            ds15_scsFO
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scsGa [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scsGa;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsG6 [Occ=Once]
                                                                                                                  :: GHC.Base.String
                                                                                                                [LclId] =
                                                                                                                    [wild5_scsBz] \u []
                                                                                                                        GHC.CString.unpackAppendCString#
                                                                                                                            lvl6_rcsn1
                                                                                                                            wild5_scsBz; } in
                                                                                                              let {
                                                                                                                sat_scsGd [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scsG6
                                                                                                                             sat_scsGc]; } in
                                                                                                              let {
                                                                                                                sat_scsG5 [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsFO] \u []
                                                                                                                        case
                                                                                                                            ds15_scsFO
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs1_scsG2 [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs1_scsG2;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsFZ [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsFO] \u []
                                                                                                                        case
                                                                                                                            ds15_scsFO
                                                                                                                        of
                                                                                                                        { (,,,) os_scsFV [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scsFV;
                                                                                                                        };
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scsFZ
                                                                                                                         sat_scsG5
                                                                                                                         sat_scsGd
                                                                                                                         sat_scsGj];
                                                                                                          '='# ->
                                                                                                              let {
                                                                                                                ds15_scsGk [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scsrX
                                                                                                                     w1_scsrY
                                                                                                                     args_scss2] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scsrX
                                                                                                                                w1_scsrY
                                                                                                                                args_scss2
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scsGm [Occ=Once]
                                                                                                                                  ww2_scsGn [Occ=Once]
                                                                                                                                  ww3_scsGo [Occ=Once]
                                                                                                                                  ww4_scsGp [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scsGm
                                                                                                                                     ww2_scsGn
                                                                                                                                     ww3_scsGo
                                                                                                                                     ww4_scsGp];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsGP [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsGk] \u []
                                                                                                                        case
                                                                                                                            ds15_scsGk
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scsGO [Occ=Once] ->
                                                                                                                              es_scsGO;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsGJ [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsGk] \u []
                                                                                                                        case
                                                                                                                            ds15_scsGk
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scsGH [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scsGH;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsGD [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsGk] \u []
                                                                                                                        case
                                                                                                                            ds15_scsGk
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs1_scsGA [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs1_scsGA;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsGw [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsGk] \u []
                                                                                                                        case
                                                                                                                            ds15_scsGk
                                                                                                                        of
                                                                                                                        { (,,,) os_scsGs [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scsGs;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsGq [Occ=Once]
                                                                                                                  :: a_scrPx
                                                                                                                [LclId] =
                                                                                                                    [ds11_scsEu
                                                                                                                     xs_scsFK] \u []
                                                                                                                        ds11_scsEu
                                                                                                                            xs_scsFK; } in
                                                                                                              let {
                                                                                                                sat_scsGx [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scsGq
                                                                                                                             sat_scsGw];
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scsGx
                                                                                                                         sat_scsGD
                                                                                                                         sat_scsGJ
                                                                                                                         sat_scsGP];
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                  System.Console.GetOpt.OptArg f_scsGQ [Occ=Once*!]
                                                                                                               _ [Occ=Dead] ->
                                                                                      case
                                                                                          ds8_scsBF
                                                                                      of
                                                                                      { (,) _ [Occ=Dead]
                                                                                            arg1_scsGU [Occ=Once!] ->
                                                                                            case
                                                                                                arg1_scsGU
                                                                                            of
                                                                                            { [] ->
                                                                                                  let {
                                                                                                    ds12_scsGW [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                      :: ([a_scrPx],
                                                                                                          [GHC.Base.String],
                                                                                                          [GHC.Base.String],
                                                                                                          [GHC.Base.String])
                                                                                                    [LclId] =
                                                                                                        [w_scsrX
                                                                                                         w1_scsrY
                                                                                                         args_scss2] \u []
                                                                                                            case
                                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                                    w_scsrX
                                                                                                                    w1_scsrY
                                                                                                                    args_scss2
                                                                                                            of
                                                                                                            { (#,,,#) ww1_scsGY [Occ=Once]
                                                                                                                      ww2_scsGZ [Occ=Once]
                                                                                                                      ww3_scsH0 [Occ=Once]
                                                                                                                      ww4_scsH1 [Occ=Once] ->
                                                                                                                  (,,,) [ww1_scsGY
                                                                                                                         ww2_scsGZ
                                                                                                                         ww3_scsH0
                                                                                                                         ww4_scsH1];
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scsHr [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds12_scsGW] \u []
                                                                                                            case
                                                                                                                ds12_scsGW
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    es_scsHq [Occ=Once] ->
                                                                                                                  es_scsHq;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scsHl [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds12_scsGW] \u []
                                                                                                            case
                                                                                                                ds12_scsGW
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    us_scsHj [Occ=Once]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  us_scsHj;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scsHf [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds12_scsGW] \u []
                                                                                                            case
                                                                                                                ds12_scsGW
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    xs_scsHc [Occ=Once]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  xs_scsHc;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scsH8 [Occ=Once]
                                                                                                      :: [a_scrPx]
                                                                                                    [LclId] =
                                                                                                        [ds12_scsGW] \u []
                                                                                                            case
                                                                                                                ds12_scsGW
                                                                                                            of
                                                                                                            { (,,,) os_scsH4 [Occ=Once]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  os_scsH4;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scsH2 [Occ=Once]
                                                                                                      :: a_scrPx
                                                                                                    [LclId] =
                                                                                                        [f_scsGQ] \u []
                                                                                                            f_scsGQ
                                                                                                                GHC.Base.Nothing; } in
                                                                                                  let {
                                                                                                    sat_scsH9 [Occ=Once]
                                                                                                      :: [a_scrPx]
                                                                                                    [LclId] =
                                                                                                        CCCS :! [sat_scsH2
                                                                                                                 sat_scsH8];
                                                                                                  } in 
                                                                                                    (#,,,#) [sat_scsH9
                                                                                                             sat_scsHf
                                                                                                             sat_scsHl
                                                                                                             sat_scsHr];
                                                                                              : ds12_scsHs [Occ=Once!]
                                                                                                xs_scsHt [Occ=Once] ->
                                                                                                  case
                                                                                                      ds12_scsHs
                                                                                                  of
                                                                                                  { GHC.Types.C# ds13_scsHv [Occ=Once!] ->
                                                                                                        case
                                                                                                            ds13_scsHv
                                                                                                        of
                                                                                                        { __DEFAULT ->
                                                                                                              let {
                                                                                                                ds15_scsHx [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scsrX
                                                                                                                     w1_scsrY
                                                                                                                     args_scss2] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scsrX
                                                                                                                                w1_scsrY
                                                                                                                                args_scss2
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scsHz [Occ=Once]
                                                                                                                                  ww2_scsHA [Occ=Once]
                                                                                                                                  ww3_scsHB [Occ=Once]
                                                                                                                                  ww4_scsHC [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scsHz
                                                                                                                                     ww2_scsHA
                                                                                                                                     ww3_scsHB
                                                                                                                                     ww4_scsHC];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsI2 [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsHx] \u []
                                                                                                                        case
                                                                                                                            ds15_scsHx
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scsI1 [Occ=Once] ->
                                                                                                                              es_scsI1;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsHV [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsHx] \u []
                                                                                                                        case
                                                                                                                            ds15_scsHx
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scsHT [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scsHT;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsHP [Occ=Once]
                                                                                                                  :: GHC.Base.String
                                                                                                                [LclId] =
                                                                                                                    [wild5_scsBz] \u []
                                                                                                                        GHC.CString.unpackAppendCString#
                                                                                                                            lvl6_rcsn1
                                                                                                                            wild5_scsBz; } in
                                                                                                              let {
                                                                                                                sat_scsHW [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scsHP
                                                                                                                             sat_scsHV]; } in
                                                                                                              let {
                                                                                                                sat_scsHO [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsHx] \u []
                                                                                                                        case
                                                                                                                            ds15_scsHx
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs1_scsHL [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs1_scsHL;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsHI [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsHx] \u []
                                                                                                                        case
                                                                                                                            ds15_scsHx
                                                                                                                        of
                                                                                                                        { (,,,) os_scsHE [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scsHE;
                                                                                                                        };
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scsHI
                                                                                                                         sat_scsHO
                                                                                                                         sat_scsHW
                                                                                                                         sat_scsI2];
                                                                                                          '='# ->
                                                                                                              let {
                                                                                                                ds15_scsI3 [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scsrX
                                                                                                                     w1_scsrY
                                                                                                                     args_scss2] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scsrX
                                                                                                                                w1_scsrY
                                                                                                                                args_scss2
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scsI5 [Occ=Once]
                                                                                                                                  ww2_scsI6 [Occ=Once]
                                                                                                                                  ww3_scsI7 [Occ=Once]
                                                                                                                                  ww4_scsI8 [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scsI5
                                                                                                                                     ww2_scsI6
                                                                                                                                     ww3_scsI7
                                                                                                                                     ww4_scsI8];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsIz [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsI3] \u []
                                                                                                                        case
                                                                                                                            ds15_scsI3
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scsIy [Occ=Once] ->
                                                                                                                              es_scsIy;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsIt [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsI3] \u []
                                                                                                                        case
                                                                                                                            ds15_scsI3
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scsIr [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scsIr;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsIn [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsI3] \u []
                                                                                                                        case
                                                                                                                            ds15_scsI3
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs1_scsIk [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs1_scsIk;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsIg [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scsI3] \u []
                                                                                                                        case
                                                                                                                            ds15_scsI3
                                                                                                                        of
                                                                                                                        { (,,,) os_scsIc [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scsIc;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scsIa [Occ=Once]
                                                                                                                  :: a_scrPx
                                                                                                                [LclId] =
                                                                                                                    [f_scsGQ
                                                                                                                     xs_scsHt] \u []
                                                                                                                        let {
                                                                                                                          sat_scsI9 [Occ=Once]
                                                                                                                            :: GHC.Base.Maybe
                                                                                                                                 GHC.Base.String
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Base.Just! [xs_scsHt];
                                                                                                                        } in 
                                                                                                                          f_scsGQ
                                                                                                                              sat_scsI9; } in
                                                                                                              let {
                                                                                                                sat_scsIh [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scsIa
                                                                                                                             sat_scsIg];
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scsIh
                                                                                                                         sat_scsIn
                                                                                                                         sat_scsIt
                                                                                                                         sat_scsIz];
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                            : _ [Occ=Dead]
                                                                              _ [Occ=Dead] ->
                                                                                let {
                                                                                  ds13_scsIC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                    :: ([a_scrPx],
                                                                                        [GHC.Base.String],
                                                                                        [GHC.Base.String],
                                                                                        [GHC.Base.String])
                                                                                  [LclId] =
                                                                                      [w_scsrX
                                                                                       w1_scsrY
                                                                                       args_scss2] \u []
                                                                                          case
                                                                                              System.Console.GetOpt.$wgetOpt'
                                                                                                  w_scsrX
                                                                                                  w1_scsrY
                                                                                                  args_scss2
                                                                                          of
                                                                                          { (#,,,#) ww1_scsIE [Occ=Once]
                                                                                                    ww2_scsIF [Occ=Once]
                                                                                                    ww3_scsIG [Occ=Once]
                                                                                                    ww4_scsIH [Occ=Once] ->
                                                                                                (,,,) [ww1_scsIE
                                                                                                       ww2_scsIF
                                                                                                       ww3_scsIG
                                                                                                       ww4_scsIH];
                                                                                          }; } in
                                                                                let {
                                                                                  sat_scsJ9 [Occ=Once]
                                                                                    :: [GHC.Base.String]
                                                                                  [LclId] =
                                                                                      [ds13_scsIC] \u []
                                                                                          case
                                                                                              ds13_scsIC
                                                                                          of
                                                                                          { (,,,) _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  es_scsJ8 [Occ=Once] ->
                                                                                                es_scsJ8;
                                                                                          }; } in
                                                                                let {
                                                                                  sat_scsJ3 [Occ=Once]
                                                                                    :: GHC.Base.String
                                                                                  [LclId] =
                                                                                      [opt_scsBJ
                                                                                       options_scsCa] \u []
                                                                                          let {
                                                                                            sat_scsJ2 [Occ=Once]
                                                                                              :: GHC.Base.String
                                                                                            [LclId] =
                                                                                                [opt_scsBJ] \u []
                                                                                                    let {
                                                                                                      sat_scsJ1 [Occ=Once]
                                                                                                        :: [GHC.Types.Char]
                                                                                                      [LclId] =
                                                                                                          [opt_scsBJ] \u []
                                                                                                              case
                                                                                                                  GHC.CString.unpackAppendCString#
                                                                                                                      lvl6_rcsn1
                                                                                                                      opt_scsBJ
                                                                                                              of
                                                                                                              sat_scsJ0
                                                                                                              { __DEFAULT ->
                                                                                                                    GHC.Base.++
                                                                                                                        sat_scsJ0
                                                                                                                        lvl24_rcsnk;
                                                                                                              };
                                                                                                    } in 
                                                                                                      GHC.CString.unpackAppendCString#
                                                                                                          lvl12_rcsn7
                                                                                                          sat_scsJ1;
                                                                                          } in 
                                                                                            System.Console.GetOpt.usageInfo
                                                                                                sat_scsJ2
                                                                                                options_scsCa; } in
                                                                                let {
                                                                                  sat_scsJa [Occ=Once]
                                                                                    :: [GHC.Base.String]
                                                                                  [LclId] =
                                                                                      CCCS :! [sat_scsJ3
                                                                                               sat_scsJ9]; } in
                                                                                let {
                                                                                  sat_scsIZ [Occ=Once]
                                                                                    :: [GHC.Base.String]
                                                                                  [LclId] =
                                                                                      [ds13_scsIC] \u []
                                                                                          case
                                                                                              ds13_scsIC
                                                                                          of
                                                                                          { (,,,) _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  us_scsIX [Occ=Once]
                                                                                                  _ [Occ=Dead] ->
                                                                                                us_scsIX;
                                                                                          }; } in
                                                                                let {
                                                                                  sat_scsIT [Occ=Once]
                                                                                    :: [GHC.Base.String]
                                                                                  [LclId] =
                                                                                      [ds13_scsIC] \u []
                                                                                          case
                                                                                              ds13_scsIC
                                                                                          of
                                                                                          { (,,,) _ [Occ=Dead]
                                                                                                  xs_scsIQ [Occ=Once]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead] ->
                                                                                                xs_scsIQ;
                                                                                          }; } in
                                                                                let {
                                                                                  sat_scsIN [Occ=Once]
                                                                                    :: [a_scrPx]
                                                                                  [LclId] =
                                                                                      [ds13_scsIC] \u []
                                                                                          case
                                                                                              ds13_scsIC
                                                                                          of
                                                                                          { (,,,) os_scsIJ [Occ=Once]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead] ->
                                                                                                os_scsIJ;
                                                                                          };
                                                                                } in 
                                                                                  (#,,,#) [sat_scsIN
                                                                                           sat_scsIT
                                                                                           sat_scsIZ
                                                                                           sat_scsJa];
                                                                          };
                                                                    };
                                                          } in 
                                                            case
                                                                getWith_scsBN GHC.Base.eqString
                                                            of
                                                            wild6_scsJb
                                                            { [] ->
                                                                  case
                                                                      getWith_scsBN lvl19_rcsne
                                                                  of
                                                                  sat_scsJc
                                                                  { __DEFAULT -> $j_scsC9 sat_scsJc;
                                                                  };
                                                              : _ [Occ=Dead] _ [Occ=Dead] ->
                                                                  $j_scsC9 wild6_scsJb;
                                                            };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

System.Console.GetOpt.getOpt' [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     System.Console.GetOpt.ArgOrder a
     -> [System.Console.GetOpt.OptDescr a]
     -> [GHC.Base.String]
     -> ([a], [GHC.Base.String], [GHC.Base.String], [GHC.Base.String])
[GblId, Arity=3, Str=<L,1*U><L,U><S,1*U>m, Unf=OtherCon []] =
    [] \r [w_scsJf w1_scsJg w2_scsJh]
        case System.Console.GetOpt.$wgetOpt' w_scsJf w1_scsJg w2_scsJh of {
          (#,,,#) ww1_scsJj [Occ=Once]
                  ww2_scsJk [Occ=Once]
                  ww3_scsJl [Occ=Once]
                  ww4_scsJm [Occ=Once] ->
              (,,,) [ww1_scsJj ww2_scsJk ww3_scsJl ww4_scsJm];
        };

System.Console.GetOpt.getOpt [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     System.Console.GetOpt.ArgOrder a
     -> [System.Console.GetOpt.OptDescr a]
     -> [GHC.Base.String]
     -> ([a], [GHC.Base.String], [GHC.Base.String])
[GblId, Arity=3, Str=<L,1*U><L,U><L,1*U>m, Unf=OtherCon []] =
    [] \r [w_scsJn w1_scsJo w2_scsJp]
        let {
          ds_scsJq [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
            :: ([a_scrPF], [GHC.Base.String], [GHC.Base.String],
                [GHC.Base.String])
          [LclId] =
              [w_scsJn w1_scsJo w2_scsJp] \u []
                  case System.Console.GetOpt.$wgetOpt' w_scsJn w1_scsJo w2_scsJp of {
                    (#,,,#) ww1_scsJs [Occ=Once]
                            ww2_scsJt [Occ=Once]
                            ww3_scsJu [Occ=Once]
                            ww4_scsJv [Occ=Once] ->
                        (,,,) [ww1_scsJs ww2_scsJt ww3_scsJu ww4_scsJv];
                  }; } in
        let {
          sat_scsJO [Occ=Once] :: [GHC.Base.String]
          [LclId] =
              [ds_scsJq] \u []
                  case ds_scsJq of {
                    (,,,) _ [Occ=Dead]
                          _ [Occ=Dead]
                          us_scsJL [Occ=Once]
                          es_scsJM [Occ=Once] ->
                        let {
                          sat_scsJN [Occ=Once, Dmd=<L,1*U>] :: [[GHC.Types.Char]]
                          [LclId] =
                              [us_scsJL] \s []
                                  GHC.Base.map System.Console.GetOpt.errUnrec us_scsJL;
                        } in  GHC.Base.++ es_scsJM sat_scsJN;
                  }; } in
        let {
          sat_scsJH [Occ=Once] :: [GHC.Base.String]
          [LclId] =
              [ds_scsJq] \u []
                  case ds_scsJq of {
                    (,,,) _ [Occ=Dead] xs_scsJE [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                        xs_scsJE;
                  }; } in
        let {
          sat_scsJB [Occ=Once] :: [a_scrPF]
          [LclId] =
              [ds_scsJq] \u []
                  case ds_scsJq of {
                    (,,,) os_scsJx [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
                        os_scsJx;
                  };
        } in  (,,) [sat_scsJB sat_scsJH sat_scsJO];

System.Console.GetOpt.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

System.Console.GetOpt.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$trModule4];

System.Console.GetOpt.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "System.Console.GetOpt"#;

System.Console.GetOpt.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$trModule2];

System.Console.GetOpt.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [System.Console.GetOpt.$trModule3
                                     System.Console.GetOpt.$trModule1];

$krep_rcsnm :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcChar
                                              GHC.Types.[]];

$krep1_rcsnn :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep_rcsnm GHC.Types.[]];

$krep2_rcsno :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tc[]
                                              $krep1_rcsnn];

$krep3_rcsnp :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep2_rcsno GHC.Types.[]];

$krep4_rcsnq :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Base.$tcMaybe
                                              $krep3_rcsnp];

$krep5_rcsnr :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tc[]
                                              $krep3_rcsnp];

$krep6_rcsns :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

$krep7_rcsnt :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcsno $krep6_rcsns];

$krep8_rcsnu :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_rcsnq $krep6_rcsns];

System.Console.GetOpt.$tcArgOrder2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ArgOrder"#;

System.Console.GetOpt.$tcArgOrder1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tcArgOrder2];

System.Console.GetOpt.$tcArgOrder :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2821249393238363172##
                                    5857765806309969278##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tcArgOrder1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep9_rcsnv :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep6_rcsns GHC.Types.[]];

System.Console.GetOpt.$tc'Permute1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Console.GetOpt.$tcArgOrder
                                              $krep9_rcsnv];

System.Console.GetOpt.$tc'RequireOrder2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'RequireOrder"#;

System.Console.GetOpt.$tc'RequireOrder1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'RequireOrder2];

System.Console.GetOpt.$tc'RequireOrder :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16641478699741903091##
                                    17241976392395699271##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'RequireOrder1
                                    1#
                                    System.Console.GetOpt.$tc'Permute1];

System.Console.GetOpt.$tc'Permute3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Permute"#;

System.Console.GetOpt.$tc'Permute2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'Permute3];

System.Console.GetOpt.$tc'Permute :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16188869008381252759##
                                    7304126484053682933##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'Permute2
                                    1#
                                    System.Console.GetOpt.$tc'Permute1];

System.Console.GetOpt.$tc'ReturnInOrder1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep7_rcsnt
                                         System.Console.GetOpt.$tc'Permute1];

System.Console.GetOpt.$tc'ReturnInOrder3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ReturnInOrder"#;

System.Console.GetOpt.$tc'ReturnInOrder2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'ReturnInOrder3];

System.Console.GetOpt.$tc'ReturnInOrder :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11429107017830306662##
                                    977062333259332084##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'ReturnInOrder2
                                    1#
                                    System.Console.GetOpt.$tc'ReturnInOrder1];

System.Console.GetOpt.$tcArgDescr2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ArgDescr"#;

System.Console.GetOpt.$tcArgDescr1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tcArgDescr2];

System.Console.GetOpt.$tcArgDescr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5371299798435897528##
                                    4777542234116424858##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tcArgDescr1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep10_rcsnw :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Console.GetOpt.$tcArgDescr
                                              $krep9_rcsnv];

System.Console.GetOpt.$tc'NoArg1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep6_rcsns $krep10_rcsnw];

System.Console.GetOpt.$tc'NoArg3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'NoArg"#;

System.Console.GetOpt.$tc'NoArg2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'NoArg3];

System.Console.GetOpt.$tc'NoArg :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4447437708857855473##
                                    9938854276741266046##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'NoArg2
                                    1#
                                    System.Console.GetOpt.$tc'NoArg1];

$krep11_rcsnx :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcsno $krep10_rcsnw];

System.Console.GetOpt.$tc'OptArg1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_rcsnu $krep11_rcsnx];

System.Console.GetOpt.$tc'OptArg3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OptArg"#;

System.Console.GetOpt.$tc'OptArg2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'OptArg3];

System.Console.GetOpt.$tc'OptArg :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2223072509852051452##
                                    11632957215606156764##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'OptArg2
                                    1#
                                    System.Console.GetOpt.$tc'OptArg1];

System.Console.GetOpt.$tc'ReqArg1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep7_rcsnt $krep11_rcsnx];

System.Console.GetOpt.$tc'ReqArg3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ReqArg"#;

System.Console.GetOpt.$tc'ReqArg2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'ReqArg3];

System.Console.GetOpt.$tc'ReqArg :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16427330633826478147##
                                    15179110347223027838##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'ReqArg2
                                    1#
                                    System.Console.GetOpt.$tc'ReqArg1];

System.Console.GetOpt.$tcOptDescr2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OptDescr"#;

System.Console.GetOpt.$tcOptDescr1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tcOptDescr2];

System.Console.GetOpt.$tcOptDescr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5602371009437266142##
                                    11022077518484673144##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tcOptDescr1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep12_rcsny :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Console.GetOpt.$tcOptDescr
                                              $krep9_rcsnv];

$krep13_rcsnz :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcsno $krep12_rcsny];

$krep14_rcsnA :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep10_rcsnw $krep13_rcsnz];

$krep15_rcsnB :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep5_rcsnr $krep14_rcsnA];

System.Console.GetOpt.$tc'Option1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcsno $krep15_rcsnB];

System.Console.GetOpt.$tc'Option3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Option"#;

System.Console.GetOpt.$tc'Option2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'Option3];

System.Console.GetOpt.$tc'Option :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10066039264625497029##
                                    5674636120141944492##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'Option2
                                    1#
                                    System.Console.GetOpt.$tc'Option1];

System.Console.GetOpt.$tcOptKind2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OptKind"#;

System.Console.GetOpt.$tcOptKind1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tcOptKind2];

System.Console.GetOpt.$tcOptKind :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5196380470096609574##
                                    4174335291028142741##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tcOptKind1
                                    0#
                                    GHC.Types.krep$*Arr*];

System.Console.GetOpt.$tc'EndOfOpts1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Console.GetOpt.$tcOptKind
                                              $krep9_rcsnv];

System.Console.GetOpt.$tc'EndOfOpts3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EndOfOpts"#;

System.Console.GetOpt.$tc'EndOfOpts2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'EndOfOpts3];

System.Console.GetOpt.$tc'EndOfOpts :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16241379069650497856##
                                    7399561775253491405##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'EndOfOpts2
                                    1#
                                    System.Console.GetOpt.$tc'EndOfOpts1];

System.Console.GetOpt.$tc'Opt1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep6_rcsns
                                         System.Console.GetOpt.$tc'EndOfOpts1];

System.Console.GetOpt.$tc'Opt3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Opt"#;

System.Console.GetOpt.$tc'Opt2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'Opt3];

System.Console.GetOpt.$tc'Opt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2387467460439073880##
                                    875868993959501908##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'Opt2
                                    1#
                                    System.Console.GetOpt.$tc'Opt1];

System.Console.GetOpt.$tc'NonOpt1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcsno
                                         System.Console.GetOpt.$tc'EndOfOpts1];

System.Console.GetOpt.$tc'UnreqOpt2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'UnreqOpt"#;

System.Console.GetOpt.$tc'UnreqOpt1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'UnreqOpt2];

System.Console.GetOpt.$tc'UnreqOpt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6747281843324563502##
                                    13162655807375334605##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'UnreqOpt1
                                    1#
                                    System.Console.GetOpt.$tc'NonOpt1];

System.Console.GetOpt.$tc'NonOpt3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'NonOpt"#;

System.Console.GetOpt.$tc'NonOpt2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'NonOpt3];

System.Console.GetOpt.$tc'NonOpt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17187900375792953920##
                                    18196243003688324985##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'NonOpt2
                                    1#
                                    System.Console.GetOpt.$tc'NonOpt1];

System.Console.GetOpt.$tc'OptErr2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OptErr"#;

System.Console.GetOpt.$tc'OptErr1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'OptErr2];

System.Console.GetOpt.$tc'OptErr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13165663139815598038##
                                    5639435123785572420##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'OptErr1
                                    1#
                                    System.Console.GetOpt.$tc'NonOpt1];

System.Console.GetOpt.Opt
  :: forall a. a -> System.Console.GetOpt.OptKind a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m1,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.Opt [eta_B1];

System.Console.GetOpt.UnreqOpt
  :: forall a. GHC.Base.String -> System.Console.GetOpt.OptKind a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m2,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.UnreqOpt [eta_B1];

System.Console.GetOpt.NonOpt
  :: forall a. GHC.Base.String -> System.Console.GetOpt.OptKind a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m3,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.NonOpt [eta_B1];

System.Console.GetOpt.EndOfOpts
  :: forall a. System.Console.GetOpt.OptKind a
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE System.Console.GetOpt.EndOfOpts! [];

System.Console.GetOpt.OptErr
  :: forall a. GHC.Base.String -> System.Console.GetOpt.OptKind a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m5,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.OptErr [eta_B1];

System.Console.GetOpt.NoArg
  :: forall a. a -> System.Console.GetOpt.ArgDescr a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m1,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.NoArg [eta_B1];

System.Console.GetOpt.ReqArg
  :: forall a.
     (GHC.Base.String -> a)
     -> GHC.Base.String -> System.Console.GetOpt.ArgDescr a
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m2,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] System.Console.GetOpt.ReqArg [eta_B2 eta_B1];

System.Console.GetOpt.OptArg
  :: forall a.
     (GHC.Base.Maybe GHC.Base.String -> a)
     -> GHC.Base.String -> System.Console.GetOpt.ArgDescr a
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m3,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] System.Console.GetOpt.OptArg [eta_B2 eta_B1];

System.Console.GetOpt.Option
  :: forall a.
     [GHC.Types.Char]
     -> [GHC.Base.String]
     -> System.Console.GetOpt.ArgDescr a
     -> GHC.Base.String
     -> System.Console.GetOpt.OptDescr a
[GblId[DataCon],
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        System.Console.GetOpt.Option [eta_B4 eta_B3 eta_B2 eta_B1];

System.Console.GetOpt.RequireOrder
  :: forall a. System.Console.GetOpt.ArgOrder a
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE System.Console.GetOpt.RequireOrder! [];

System.Console.GetOpt.Permute
  :: forall a. System.Console.GetOpt.ArgOrder a
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE System.Console.GetOpt.Permute! [];

System.Console.GetOpt.ReturnInOrder
  :: forall a.
     (GHC.Base.String -> a) -> System.Console.GetOpt.ArgOrder a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m3,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.ReturnInOrder [eta_B1];


==================== Pre unarise: ====================
2018-03-16 16:07:24.335890531 UTC

System.Console.GetOpt.$fFunctorArgOrder_$cfmap
  :: forall a b.
     (a -> b)
     -> System.Console.GetOpt.ArgOrder a
     -> System.Console.GetOpt.ArgOrder b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,C(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_scvfs ds1_scvft]
        case ds1_scvft of {
          System.Console.GetOpt.RequireOrder ->
              System.Console.GetOpt.RequireOrder [];
          System.Console.GetOpt.Permute -> System.Console.GetOpt.Permute [];
          System.Console.GetOpt.ReturnInOrder g_scvfv [Occ=OnceL] ->
              let {
                sat_scvfw [Occ=Once] :: GHC.Base.String -> b_acr1l
                [LclId] =
                    [ds_scvfs g_scvfv] \r [eta_B1] GHC.Base.. ds_scvfs g_scvfv eta_B1;
              } in  System.Console.GetOpt.ReturnInOrder [sat_scvfw];
        };

System.Console.GetOpt.$fFunctorArgOrder_$c<$
  :: forall a b.
     a
     -> System.Console.GetOpt.ArgOrder b
     -> System.Console.GetOpt.ArgOrder a
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [x_scvfx eta_scvfy]
        case eta_scvfy of {
          System.Console.GetOpt.RequireOrder ->
              System.Console.GetOpt.RequireOrder [];
          System.Console.GetOpt.Permute -> System.Console.GetOpt.Permute [];
          System.Console.GetOpt.ReturnInOrder _ [Occ=Dead] ->
              let {
                sat_scvfC [Occ=Once] :: GHC.Base.String -> a_acr1w
                [LclId] =
                    [x_scvfx] \r [x1_scvfB] x_scvfx;
              } in  System.Console.GetOpt.ReturnInOrder [sat_scvfC];
        };

System.Console.GetOpt.$fFunctorArgOrder [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Functor System.Console.GetOpt.ArgOrder
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Base.C:Functor! [System.Console.GetOpt.$fFunctorArgOrder_$cfmap
                                       System.Console.GetOpt.$fFunctorArgOrder_$c<$];

System.Console.GetOpt.$fFunctorArgDescr_$cfmap
  :: forall a b.
     (a -> b)
     -> System.Console.GetOpt.ArgDescr a
     -> System.Console.GetOpt.ArgDescr b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,C(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [f_scvfD ds_scvfE]
        case ds_scvfE of {
          System.Console.GetOpt.NoArg a1_scvfG [Occ=Once] ->
              let {
                sat_scvfH [Occ=Once] :: b_acr0U
                [LclId] =
                    [f_scvfD a1_scvfG] \u [] f_scvfD a1_scvfG;
              } in  System.Console.GetOpt.NoArg [sat_scvfH];
          System.Console.GetOpt.ReqArg g_scvfI [Occ=OnceL]
                                       s_scvfJ [Occ=Once] ->
              let {
                sat_scvfK [Occ=Once] :: GHC.Base.String -> b_acr0U
                [LclId] =
                    [f_scvfD g_scvfI] \r [eta_B1] GHC.Base.. f_scvfD g_scvfI eta_B1;
              } in  System.Console.GetOpt.ReqArg [sat_scvfK s_scvfJ];
          System.Console.GetOpt.OptArg g_scvfL [Occ=OnceL]
                                       s_scvfM [Occ=Once] ->
              let {
                sat_scvfN [Occ=Once] :: GHC.Base.Maybe GHC.Base.String -> b_acr0U
                [LclId] =
                    [f_scvfD g_scvfL] \r [eta_B1] GHC.Base.. f_scvfD g_scvfL eta_B1;
              } in  System.Console.GetOpt.OptArg [sat_scvfN s_scvfM];
        };

System.Console.GetOpt.$fFunctorArgDescr_$c<$
  :: forall a b.
     a
     -> System.Console.GetOpt.ArgDescr b
     -> System.Console.GetOpt.ArgDescr a
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [x_scvfO eta_scvfP]
        case eta_scvfP of {
          System.Console.GetOpt.NoArg _ [Occ=Dead] ->
              System.Console.GetOpt.NoArg [x_scvfO];
          System.Console.GetOpt.ReqArg _ [Occ=Dead] s_scvfT [Occ=Once] ->
              let {
                sat_scvfV [Occ=Once] :: GHC.Base.String -> a_acr18
                [LclId] =
                    [x_scvfO] \r [x1_scvfU] x_scvfO;
              } in  System.Console.GetOpt.ReqArg [sat_scvfV s_scvfT];
          System.Console.GetOpt.OptArg _ [Occ=Dead] s_scvfX [Occ=Once] ->
              let {
                sat_scvfZ [Occ=Once] :: GHC.Base.Maybe GHC.Base.String -> a_acr18
                [LclId] =
                    [x_scvfO] \r [x1_scvfY] x_scvfO;
              } in  System.Console.GetOpt.OptArg [sat_scvfZ s_scvfX];
        };

System.Console.GetOpt.$fFunctorArgDescr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Functor System.Console.GetOpt.ArgDescr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Base.C:Functor! [System.Console.GetOpt.$fFunctorArgDescr_$cfmap
                                       System.Console.GetOpt.$fFunctorArgDescr_$c<$];

System.Console.GetOpt.$fFunctorOptDescr_$cfmap
  :: forall a b.
     (a -> b)
     -> System.Console.GetOpt.OptDescr a
     -> System.Console.GetOpt.OptDescr b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,C(U)><S,1*U(U,U,1*U,U)>m,
 Unf=OtherCon []] =
    [] \r [f_scvg0 ds_scvg1]
        case ds_scvg1 of {
          System.Console.GetOpt.Option a1_scvg3 [Occ=Once]
                                       b1_scvg4 [Occ=Once]
                                       argDescr_scvg5 [Occ=Once]
                                       c_scvg6 [Occ=Once] ->
              let {
                sat_scvg7 [Occ=Once] :: System.Console.GetOpt.ArgDescr b_acr0w
                [LclId] =
                    [f_scvg0 argDescr_scvg5] \u []
                        System.Console.GetOpt.$fFunctorArgDescr_$cfmap
                            f_scvg0 argDescr_scvg5;
              } in 
                System.Console.GetOpt.Option [a1_scvg3 b1_scvg4 sat_scvg7 c_scvg6];
        };

System.Console.GetOpt.$fFunctorOptDescr_$c<$ [InlPrag=NOUSERINLINE[0]]
  :: forall a b.
     a
     -> System.Console.GetOpt.OptDescr b
     -> System.Console.GetOpt.OptDescr a
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U(U,U,1*U,U)>m,
 Unf=OtherCon []] =
    [] \r [w_scvg8 w1_scvg9]
        case w1_scvg9 of {
          System.Console.GetOpt.Option ww1_scvgb [Occ=Once]
                                       ww2_scvgc [Occ=Once]
                                       ww3_scvgd [Occ=Once!]
                                       ww4_scvge [Occ=Once] ->
              let {
                sat_scvgp [Occ=Once] :: System.Console.GetOpt.ArgDescr a_scrOx
                [LclId] =
                    [w_scvg8 ww3_scvgd] \u []
                        case ww3_scvgd of {
                          System.Console.GetOpt.NoArg _ [Occ=Dead] ->
                              System.Console.GetOpt.NoArg [w_scvg8];
                          System.Console.GetOpt.ReqArg _ [Occ=Dead] s_scvgi [Occ=Once] ->
                              let {
                                sat_scvgk [Occ=Once] :: GHC.Base.String -> a_scrOx
                                [LclId] =
                                    [w_scvg8] \r [x_scvgj] w_scvg8;
                              } in  System.Console.GetOpt.ReqArg [sat_scvgk s_scvgi];
                          System.Console.GetOpt.OptArg _ [Occ=Dead] s_scvgm [Occ=Once] ->
                              let {
                                sat_scvgo [Occ=Once] :: GHC.Base.Maybe GHC.Base.String -> a_scrOx
                                [LclId] =
                                    [w_scvg8] \r [x_scvgn] w_scvg8;
                              } in  System.Console.GetOpt.OptArg [sat_scvgo s_scvgm];
                        };
              } in 
                System.Console.GetOpt.Option [ww1_scvgb
                                              ww2_scvgc
                                              sat_scvgp
                                              ww4_scvge];
        };

System.Console.GetOpt.$fFunctorOptDescr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Functor System.Console.GetOpt.OptDescr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Base.C:Functor! [System.Console.GetOpt.$fFunctorOptDescr_$cfmap
                                       System.Console.GetOpt.$fFunctorOptDescr_$c<$];

lvl_rcsmT :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! [' '#];

lvl1_rcsmU :: [GHC.Types.Char]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [lvl_rcsmT GHC.Types.[]];

$wxs_rcsmV :: GHC.Prim.Int# -> [GHC.Types.Char]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>m2, Unf=OtherCon []] =
    sat-only [] \r [ww_scvgq]
        case ww_scvgq of ds1_scvgr {
          __DEFAULT ->
              let {
                sat_scvgt [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [ds1_scvgr] \u []
                        case -# [ds1_scvgr 1#] of sat_scvgs {
                          __DEFAULT -> $wxs_rcsmV sat_scvgs;
                        };
              } in  : [lvl_rcsmT sat_scvgt];
          1# -> lvl1_rcsmU;
        };

System.Console.GetOpt.$wgo [InlPrag=NOUSERINLINE[0],
                            Occ=LoopBreaker]
  :: [GHC.Types.Char] -> GHC.Prim.Int# -> [GHC.Types.Char]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>m2,
 Unf=OtherCon []] =
    [] \r [w_scvgu ww_scvgv]
        case w_scvgu of {
          [] -> $wxs_rcsmV ww_scvgv;
          : y_scvgx [Occ=Once*] ys_scvgy [Occ=Once] ->
              case ww_scvgv of ds1_scvgz {
                __DEFAULT ->
                    let {
                      sat_scvgB [Occ=Once] :: [GHC.Types.Char]
                      [LclId] =
                          [ys_scvgy ds1_scvgz] \u []
                              case -# [ds1_scvgz 1#] of sat_scvgA {
                                __DEFAULT -> System.Console.GetOpt.$wgo ys_scvgy sat_scvgA;
                              };
                    } in  : [y_scvgx sat_scvgB];
                1# -> : [y_scvgx GHC.Types.[]];
              };
        };

System.Console.GetOpt.usageInfo_sameLen
  :: [[GHC.Types.Char]] -> [[GHC.Types.Char]]
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [xs_scvgC]
        let {
          n_scvgD [Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [xs_scvgC] \u []
                  case GHC.Base.map GHC.List.length xs_scvgC of {
                    [] -> GHC.List.maximum2;
                    : ipv_scvgF [Occ=Once!] ipv1_scvgG [Occ=Once] ->
                        case ipv_scvgF of {
                          GHC.Types.I# ww1_scvgI [Occ=Once] ->
                              case GHC.List.$wgo ipv1_scvgG ww1_scvgI of ww2_scvgJ {
                                __DEFAULT -> GHC.Types.I# [ww2_scvgJ];
                              };
                        };
                  }; } in
        let {
          lvl25_scvgK [Occ=OnceL!] :: GHC.Types.Bool
          [LclId] =
              [n_scvgD] \u []
                  case n_scvgD of {
                    GHC.Types.I# y_scvgM [Occ=Once] ->
                        case <# [0# y_scvgM] of sat_scvgN {
                          __DEFAULT -> tagToEnum# [sat_scvgN];
                        };
                  }; } in
        let {
          go_scvgO [Occ=LoopBreaker]
            :: [[GHC.Types.Char]] -> [[GHC.Types.Char]]
          [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
              sat-only [n_scvgD lvl25_scvgK go_scvgO] \r [ds_scvgP]
                  case ds_scvgP of {
                    [] -> [] [];
                    : y_scvgR [Occ=Once] ys_scvgS [Occ=Once] ->
                        let {
                          sat_scvgX [Occ=Once] :: [[GHC.Types.Char]]
                          [LclId] =
                              [go_scvgO ys_scvgS] \u [] go_scvgO ys_scvgS; } in
                        let {
                          sat_scvgW [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [n_scvgD lvl25_scvgK y_scvgR] \u []
                                  case lvl25_scvgK of {
                                    GHC.Types.False -> [] [];
                                    GHC.Types.True ->
                                        case n_scvgD of {
                                          GHC.Types.I# ww1_scvgV [Occ=Once] ->
                                              System.Console.GetOpt.$wgo y_scvgR ww1_scvgV;
                                        };
                                  };
                        } in  : [sat_scvgW sat_scvgX];
                  };
        } in  go_scvgO xs_scvgC;

sepBy_rcsmW
  :: GHC.Types.Char -> [[GHC.Types.Char]] -> [GHC.Types.Char]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U>,
 Unf=OtherCon []] =
    sat-only [] \r [ds_scvgY ds1_scvgZ]
        case ds1_scvgZ of {
          [] -> [] [];
          : x_scvh1 [Occ=Once*] ds2_scvh2 [Occ=Once!] ->
              case ds2_scvh2 of wild1_scvh3 {
                [] -> x_scvh1;
                : _ [Occ=Dead] _ [Occ=Dead] ->
                    let {
                      sat_scvh6 [Occ=Once] :: [GHC.Types.Char]
                      [LclId] =
                          [ds_scvgY wild1_scvh3] \u [] sepBy_rcsmW ds_scvgY wild1_scvh3; } in
                    let {
                      sat_scvh7 [Occ=Once] :: [GHC.Types.Char]
                      [LclId] =
                          CCCS :! [lvl_rcsmT sat_scvh6]; } in
                    let {
                      sat_scvh8 [Occ=Once] :: [GHC.Types.Char]
                      [LclId] =
                          CCCS :! [ds_scvgY sat_scvh7];
                    } in  GHC.Base.++ x_scvh1 sat_scvh8;
              };
        };

lvl2_rcsmX :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! [','#];

lvl3_rcsmY :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "-"#;

lvl4_rcsmZ :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "["#;

lvl5_rcsn0 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "]"#;

lvl6_rcsn1 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "--"#;

lvl7_rcsn2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "[="#;

lvl8_rcsn3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "  "#;

System.Console.GetOpt.usageInfo_go2 [Occ=LoopBreaker]
  :: [[GHC.Types.Char]]
     -> [[GHC.Types.Char]] -> [[GHC.Types.Char]] -> [[GHC.Types.Char]]
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U><L,1*U><L,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_scvh9 ds1_scvha ds2_scvhb]
        case ds_scvh9 of {
          [] -> [] [];
          : a1_scvhd [Occ=Once] as_scvhe [Occ=Once] ->
              case ds1_scvha of {
                [] -> [] [];
                : b1_scvhg [Occ=Once] bs_scvhh [Occ=Once] ->
                    case ds2_scvhb of {
                      [] -> [] [];
                      : c1_scvhj [Occ=Once] cs_scvhk [Occ=Once] ->
                          let {
                            sat_scvhq [Occ=Once] :: [[GHC.Types.Char]]
                            [LclId] =
                                [as_scvhe bs_scvhh cs_scvhk] \u []
                                    System.Console.GetOpt.usageInfo_go2
                                        as_scvhe bs_scvhh cs_scvhk; } in
                          let {
                            sat_scvhp [Occ=Once] :: [GHC.Types.Char]
                            [LclId] =
                                [a1_scvhd b1_scvhg c1_scvhj] \u []
                                    let {
                                      sat_scvho [Occ=Once] :: [GHC.Types.Char]
                                      [LclId] =
                                          [a1_scvhd b1_scvhg c1_scvhj] \u []
                                              let {
                                                sat_scvhn [Occ=Once, Dmd=<L,1*U>]
                                                  :: [GHC.Types.Char]
                                                [LclId] =
                                                    [b1_scvhg c1_scvhj] \s []
                                                        let {
                                                          sat_scvhm [Occ=Once] :: [GHC.Types.Char]
                                                          [LclId] =
                                                              [b1_scvhg c1_scvhj] \u []
                                                                  let {
                                                                    sat_scvhl [Occ=Once,
                                                                               Dmd=<L,1*U>]
                                                                      :: [GHC.Types.Char]
                                                                    [LclId] =
                                                                        [c1_scvhj] \s []
                                                                            GHC.CString.unpackAppendCString#
                                                                                lvl8_rcsn3 c1_scvhj;
                                                                  } in 
                                                                    GHC.Base.++ b1_scvhg sat_scvhl;
                                                        } in 
                                                          GHC.CString.unpackAppendCString#
                                                              lvl8_rcsn3 sat_scvhm;
                                              } in  GHC.Base.++ a1_scvhd sat_scvhn;
                                    } in  GHC.CString.unpackAppendCString# lvl8_rcsn3 sat_scvho;
                          } in  : [sat_scvhp sat_scvhq];
                    };
              };
        };

lvl9_rcsn4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    " "#;

lvl10_rcsn5 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl5_rcsn0;

lvl11_rcsn6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "="#;

System.Console.GetOpt.usageInfo1 [InlPrag=NOUSERINLINE[0],
                                  Occ=LoopBreaker]
  :: forall a.
     [System.Console.GetOpt.OptDescr a]
     -> (# [GHC.Base.String], [GHC.Base.String], [GHC.Base.String] #)
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [w_scvhr]
        case w_scvhr of {
          [] -> (#,,#) [GHC.Types.[] GHC.Types.[] GHC.Types.[]];
          : y_scvht [Occ=Once!] ys_scvhu [Occ=Once] ->
              case y_scvht of {
                System.Console.GetOpt.Option sos_scvhw [Occ=Once]
                                             los_scvhx [Occ=Once]
                                             ad_scvhy
                                             descr_scvhz [Occ=Once] ->
                    let {
                      b2_scvhA [Dmd=<L,U(U,U,U)>]
                        :: ([GHC.Base.String], [GHC.Base.String], [GHC.Base.String])
                      [LclId] =
                          [ys_scvhu] \u []
                              case System.Console.GetOpt.usageInfo1 ys_scvhu of {
                                (#,,#) ww1_scvhC [Occ=Once]
                                       ww2_scvhD [Occ=Once]
                                       ww3_scvhE [Occ=Once] ->
                                    (,,) [ww1_scvhC ww2_scvhD ww3_scvhE];
                              }; } in
                    let {
                      sosFmt_scvhF [Occ=Once*] :: [GHC.Types.Char]
                      [LclId] =
                          [sos_scvhw ad_scvhy] \u []
                              let {
                                sat_scvhT [Occ=Once] :: GHC.Types.Char -> [GHC.Types.Char]
                                [LclId] =
                                    [ad_scvhy] \r [so_scvhG]
                                        case ad_scvhy of {
                                          System.Console.GetOpt.NoArg _ [Occ=Dead] ->
                                              let {
                                                sat_scvhJ [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    CCCS :! [so_scvhG GHC.Types.[]];
                                              } in 
                                                GHC.CString.unpackAppendCString#
                                                    lvl3_rcsmY sat_scvhJ;
                                          System.Console.GetOpt.ReqArg _ [Occ=Dead]
                                                                       ad1_scvhL [Occ=Once] ->
                                              let {
                                                sat_scvhM [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    [ad1_scvhL] \u []
                                                        GHC.CString.unpackAppendCString#
                                                            lvl9_rcsn4 ad1_scvhL; } in
                                              let {
                                                sat_scvhN [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    CCCS :! [so_scvhG sat_scvhM];
                                              } in 
                                                GHC.CString.unpackAppendCString#
                                                    lvl3_rcsmY sat_scvhN;
                                          System.Console.GetOpt.OptArg _ [Occ=Dead]
                                                                       ad1_scvhP [Occ=Once] ->
                                              let {
                                                sat_scvhR [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    [ad1_scvhP] \u []
                                                        let {
                                                          sat_scvhQ [Occ=Once] :: [GHC.Types.Char]
                                                          [LclId] =
                                                              [ad1_scvhP] \u []
                                                                  GHC.Base.++ ad1_scvhP lvl10_rcsn5;
                                                        } in 
                                                          GHC.CString.unpackAppendCString#
                                                              lvl4_rcsmZ sat_scvhQ; } in
                                              let {
                                                sat_scvhS [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    CCCS :! [so_scvhG sat_scvhR];
                                              } in 
                                                GHC.CString.unpackAppendCString#
                                                    lvl3_rcsmY sat_scvhS;
                                        };
                              } in 
                                case GHC.Base.map sat_scvhT sos_scvhw of sat_scvhU {
                                  __DEFAULT -> sepBy_rcsmW lvl2_rcsmX sat_scvhU;
                                }; } in
                    let {
                      losFmt_scvhV [Occ=Once*] :: [GHC.Types.Char]
                      [LclId] =
                          [los_scvhx ad_scvhy] \u []
                              let {
                                sat_scvi8 [Occ=Once] :: [GHC.Types.Char] -> [GHC.Types.Char]
                                [LclId] =
                                    [ad_scvhy] \r [lo_scvhW]
                                        case ad_scvhy of {
                                          System.Console.GetOpt.NoArg _ [Occ=Dead] ->
                                              GHC.CString.unpackAppendCString# lvl6_rcsn1 lo_scvhW;
                                          System.Console.GetOpt.ReqArg _ [Occ=Dead]
                                                                       ad1_scvi0 [Occ=Once] ->
                                              let {
                                                sat_scvi2 [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    [lo_scvhW ad1_scvi0] \u []
                                                        let {
                                                          sat_scvi1 [Occ=Once, Dmd=<L,1*U>]
                                                            :: [GHC.Types.Char]
                                                          [LclId] =
                                                              [ad1_scvi0] \s []
                                                                  GHC.CString.unpackAppendCString#
                                                                      lvl11_rcsn6 ad1_scvi0;
                                                        } in  GHC.Base.++ lo_scvhW sat_scvi1;
                                              } in 
                                                GHC.CString.unpackAppendCString#
                                                    lvl6_rcsn1 sat_scvi2;
                                          System.Console.GetOpt.OptArg _ [Occ=Dead]
                                                                       ad1_scvi4 [Occ=Once] ->
                                              let {
                                                sat_scvi7 [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    [lo_scvhW ad1_scvi4] \u []
                                                        let {
                                                          sat_scvi6 [Occ=Once, Dmd=<L,1*U>]
                                                            :: [GHC.Types.Char]
                                                          [LclId] =
                                                              [ad1_scvi4] \s []
                                                                  let {
                                                                    sat_scvi5 [Occ=Once]
                                                                      :: [GHC.Types.Char]
                                                                    [LclId] =
                                                                        [ad1_scvi4] \u []
                                                                            GHC.Base.++
                                                                                ad1_scvi4
                                                                                lvl10_rcsn5;
                                                                  } in 
                                                                    GHC.CString.unpackAppendCString#
                                                                        lvl7_rcsn2 sat_scvi5;
                                                        } in  GHC.Base.++ lo_scvhW sat_scvi6;
                                              } in 
                                                GHC.CString.unpackAppendCString#
                                                    lvl6_rcsn1 sat_scvi7;
                                        };
                              } in 
                                case GHC.Base.map sat_scvi8 los_scvhx of sat_scvi9 {
                                  __DEFAULT -> sepBy_rcsmW lvl2_rcsmX sat_scvi9;
                                };
                    } in 
                      case Data.OldList.lines descr_scvhz of {
                        [] ->
                            let {
                              sat_scvir [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [b2_scvhA] \u []
                                      case b2_scvhA of {
                                        (,,) _ [Occ=Dead] _ [Occ=Dead] cs_scviq [Occ=Once] ->
                                            cs_scviq;
                                      }; } in
                            let {
                              sat_scvis [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [GHC.Types.[] sat_scvir]; } in
                            let {
                              sat_scvil [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [b2_scvhA] \u []
                                      case b2_scvhA of {
                                        (,,) _ [Occ=Dead] bs_scvij [Occ=Once] _ [Occ=Dead] ->
                                            bs_scvij;
                                      }; } in
                            let {
                              sat_scvim [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [losFmt_scvhV sat_scvil]; } in
                            let {
                              sat_scvif [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [b2_scvhA] \u []
                                      case b2_scvhA of {
                                        (,,) as_scvic [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                                            as_scvic;
                                      }; } in
                            let {
                              sat_scvig [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [sosFmt_scvhF sat_scvif];
                            } in  (#,,#) [sat_scvig sat_scvim sat_scvis];
                        : d_scvit [Occ=Once] ds_scviu [Occ=Once] ->
                            let {
                              ds1_scviv [Dmd=<L,U(1*U,1*U,1*U)>]
                                :: ([GHC.Base.String], [GHC.Base.String], [GHC.Base.String])
                              [LclId] =
                                  [b2_scvhA ds_scviu] \u []
                                      let {
                                        go_scviw [Occ=LoopBreaker]
                                          :: [GHC.Base.String]
                                             -> ([GHC.Base.String], [GHC.Base.String],
                                                 [GHC.Base.String])
                                        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
                                            sat-only [b2_scvhA go_scviw] \r [ds2_scvix]
                                                case ds2_scvix of {
                                                  [] -> b2_scvhA;
                                                  : y1_scviz [Occ=Once] ys1_scviA [Occ=Once] ->
                                                      let {
                                                        ds3_scviB [Dmd=<L,U(1*U,1*U,1*U)>]
                                                          :: ([GHC.Base.String], [GHC.Base.String],
                                                              [GHC.Base.String])
                                                        [LclId] =
                                                            [go_scviw ys1_scviA] \u []
                                                                go_scviw ys1_scviA; } in
                                                      let {
                                                        sat_scviS [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            [ds3_scviB] \u []
                                                                case ds3_scviB of {
                                                                  (,,) _ [Occ=Dead]
                                                                       _ [Occ=Dead]
                                                                       cs_scviR [Occ=Once] ->
                                                                      cs_scviR;
                                                                }; } in
                                                      let {
                                                        sat_scviT [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            CCCS :! [y1_scviz sat_scviS]; } in
                                                      let {
                                                        sat_scviM [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            [ds3_scviB] \u []
                                                                case ds3_scviB of {
                                                                  (,,) _ [Occ=Dead]
                                                                       bs_scviK [Occ=Once]
                                                                       _ [Occ=Dead] ->
                                                                      bs_scviK;
                                                                }; } in
                                                      let {
                                                        sat_scviN [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            CCCS :! [GHC.Types.[] sat_scviM]; } in
                                                      let {
                                                        sat_scviG [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            [ds3_scviB] \u []
                                                                case ds3_scviB of {
                                                                  (,,) as_scviD [Occ=Once]
                                                                       _ [Occ=Dead]
                                                                       _ [Occ=Dead] ->
                                                                      as_scviD;
                                                                }; } in
                                                      let {
                                                        sat_scviH [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            CCCS :! [GHC.Types.[] sat_scviG];
                                                      } in  (,,) [sat_scviH sat_scviN sat_scviT];
                                                };
                                      } in  go_scviw ds_scviu; } in
                            let {
                              sat_scvja [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [ds1_scviv] \u []
                                      case ds1_scviv of {
                                        (,,) _ [Occ=Dead] _ [Occ=Dead] cs_scvj9 [Occ=Once] ->
                                            cs_scvj9;
                                      }; } in
                            let {
                              sat_scvjb [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [d_scvit sat_scvja]; } in
                            let {
                              sat_scvj4 [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [ds1_scviv] \u []
                                      case ds1_scviv of {
                                        (,,) _ [Occ=Dead] bs_scvj2 [Occ=Once] _ [Occ=Dead] ->
                                            bs_scvj2;
                                      }; } in
                            let {
                              sat_scvj5 [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [losFmt_scvhV sat_scvj4]; } in
                            let {
                              sat_scviY [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [ds1_scviv] \u []
                                      case ds1_scviv of {
                                        (,,) as_scviV [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                                            as_scviV;
                                      }; } in
                            let {
                              sat_scviZ [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [sosFmt_scvhF sat_scviY];
                            } in  (#,,#) [sat_scviZ sat_scvj5 sat_scvjb];
                      };
              };
        };

System.Console.GetOpt.usageInfo
  :: forall a.
     GHC.Base.String
     -> [System.Console.GetOpt.OptDescr a] -> GHC.Base.String
[GblId, Arity=2, Str=<L,U><L,1*U>, Unf=OtherCon []] =
    [] \r [header_scvjc optDescr_scvjd]
        let {
          sat_scvjk [Occ=Once] :: [GHC.Base.String]
          [LclId] =
              [optDescr_scvjd] \u []
                  case System.Console.GetOpt.usageInfo1 optDescr_scvjd of {
                    (#,,#) ww1_scvjf [Occ=Once]
                           ww2_scvjg [Occ=Once]
                           ww3_scvjh [Occ=Once] ->
                        let {
                          sat_scvjj [Occ=Once, Dmd=<L,1*U>] :: [[GHC.Types.Char]]
                          [LclId] =
                              [ww2_scvjg] \s []
                                  System.Console.GetOpt.usageInfo_sameLen ww2_scvjg;
                        } in 
                          case
                              System.Console.GetOpt.usageInfo_sameLen ww1_scvjf
                          of
                          sat_scvji
                          { __DEFAULT ->
                                System.Console.GetOpt.usageInfo_go2 sat_scvji sat_scvjj ww3_scvjh;
                          };
                  }; } in
        let {
          sat_scvjl [Occ=Once] :: [GHC.Base.String]
          [LclId] =
              CCCS :! [header_scvjc sat_scvjk];
        } in  Data.OldList.unlines sat_scvjl;

lvl12_rcsn7 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "option `"#;

lvl13_rcsn8 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "' is ambiguous; could be one of:"#;

lvl14_rcsn9 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "' requires an argument "#;

lvl15_rcsna :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "\n"#;

lvl16_rcsnb :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl15_rcsna;

System.Console.GetOpt.getOpt2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "unrecognized option `"#;

System.Console.GetOpt.getOpt1 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'\n"#;

lvl17_rcsnc :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# System.Console.GetOpt.getOpt1;

System.Console.GetOpt.errUnrec
  :: GHC.Base.String -> GHC.Base.String
[GblId, Arity=1, Str=<L,1*U>, Unf=OtherCon []] =
    [] \r [optStr_scvjm]
        let {
          sat_scvjn [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [optStr_scvjm] \u [] GHC.Base.++ optStr_scvjm lvl17_rcsnc;
        } in 
          GHC.CString.unpackAppendCString#
              System.Console.GetOpt.getOpt2 sat_scvjn;

lvl18_rcsnd :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "' doesn't allow an argument\n"#;

lvl19_rcsne
  :: [GHC.Types.Char] -> [GHC.Types.Char] -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Data.OldList.isPrefixOf GHC.Classes.$fEqChar eta_B2 eta_B1;

lvl20_rcsnf :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [ds_scvjo]
        case ds_scvjo of {
          GHC.Types.C# x_scvjq [Occ=Once!] ->
              case x_scvjq of {
                __DEFAULT -> GHC.Types.False [];
                '='# -> GHC.Types.True [];
              };
        };

lvl21_rcsng :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! ['-'#];

lvl22_rcsnh :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl18_rcsnd;

lvl23_rcsni :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "option `--"#;

poly_go_rcsnj
  :: forall a.
     [System.Console.GetOpt.OptDescr a]
     -> [System.Console.GetOpt.ArgDescr a]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    sat-only [] \r [ds_scvjs]
        case ds_scvjs of {
          [] -> [] [];
          : y_scvju [Occ=Once!] ys_scvjv [Occ=Once] ->
              case y_scvju of {
                System.Console.GetOpt.Option _ [Occ=Dead]
                                             _ [Occ=Dead]
                                             ad_scvjz [Occ=Once]
                                             _ [Occ=Dead] ->
                    let {
                      sat_scvjB [Occ=Once] :: [System.Console.GetOpt.ArgDescr a_scrPx]
                      [LclId] =
                          [ys_scvjv] \u [] poly_go_rcsnj ys_scvjv;
                    } in  : [ad_scvjz sat_scvjB];
              };
        };

lvl24_rcsnk :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl13_rcsn8;

poly_go1_rcsnl
  :: forall a.
     [System.Console.GetOpt.OptDescr a]
     -> [System.Console.GetOpt.ArgDescr a]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    sat-only [] \r [ds_scvjC]
        case ds_scvjC of {
          [] -> [] [];
          : y_scvjE [Occ=Once!] ys_scvjF [Occ=Once] ->
              case y_scvjE of {
                System.Console.GetOpt.Option _ [Occ=Dead]
                                             _ [Occ=Dead]
                                             ad_scvjJ [Occ=Once]
                                             _ [Occ=Dead] ->
                    let {
                      sat_scvjL [Occ=Once] :: [System.Console.GetOpt.ArgDescr a_scrPx]
                      [LclId] =
                          [ys_scvjF] \u [] poly_go1_rcsnl ys_scvjF;
                    } in  : [ad_scvjJ sat_scvjL];
              };
        };

System.Console.GetOpt.$wgetOpt' [InlPrag=NOUSERINLINE[0],
                                 Occ=LoopBreaker]
  :: forall a.
     System.Console.GetOpt.ArgOrder a
     -> [System.Console.GetOpt.OptDescr a]
     -> [GHC.Base.String]
     -> (# [a], [GHC.Base.String], [GHC.Base.String],
           [GHC.Base.String] #)
[GblId, Arity=3, Str=<L,1*U><L,U><S,1*U>, Unf=OtherCon []] =
    [] \r [w_scvjM w1_scvjN w2_scvjO]
        case w2_scvjO of wild_scvjP {
          [] ->
              (#,,,#) [GHC.Types.[] GHC.Types.[] GHC.Types.[] GHC.Types.[]];
          : arg_scvjQ [Occ=Once!] args_scvjR [Occ=OnceL*] ->
              case arg_scvjQ of wild1_scvjS {
                [] ->
                    case w_scvjM of wild2_scvjT {
                      System.Console.GetOpt.RequireOrder ->
                          let {
                            sat_scvjU [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                CCCS :! [GHC.Types.[] args_scvjR];
                          } in  (#,,,#) [GHC.Types.[] sat_scvjU GHC.Types.[] GHC.Types.[]];
                      System.Console.GetOpt.Permute ->
                          let {
                            ds_scvjV [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                              :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                  [GHC.Base.String])
                            [LclId] =
                                [w1_scvjN args_scvjR] \u []
                                    case
                                        System.Console.GetOpt.$wgetOpt'
                                            System.Console.GetOpt.Permute w1_scvjN args_scvjR
                                    of
                                    { (#,,,#) ww1_scvjX [Occ=Once]
                                              ww2_scvjY [Occ=Once]
                                              ww3_scvjZ [Occ=Once]
                                              ww4_scvk0 [Occ=Once] ->
                                          (,,,) [ww1_scvjX ww2_scvjY ww3_scvjZ ww4_scvk0];
                                    }; } in
                          let {
                            sat_scvkp [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scvjV] \u []
                                    case ds_scvjV of {
                                      (,,,) _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            es_scvko [Occ=Once] ->
                                          es_scvko;
                                    }; } in
                          let {
                            sat_scvkj [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scvjV] \u []
                                    case ds_scvjV of {
                                      (,,,) _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            us_scvkh [Occ=Once]
                                            _ [Occ=Dead] ->
                                          us_scvkh;
                                    }; } in
                          let {
                            sat_scvkc [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scvjV] \u []
                                    case ds_scvjV of {
                                      (,,,) _ [Occ=Dead]
                                            xs_scvk9 [Occ=Once]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead] ->
                                          xs_scvk9;
                                    }; } in
                          let {
                            sat_scvkd [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                CCCS :! [GHC.Types.[] sat_scvkc]; } in
                          let {
                            sat_scvk6 [Occ=Once] :: [a_scrPx]
                            [LclId] =
                                [ds_scvjV] \u []
                                    case ds_scvjV of {
                                      (,,,) os_scvk2 [Occ=Once]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead] ->
                                          os_scvk2;
                                    };
                          } in  (#,,,#) [sat_scvk6 sat_scvkd sat_scvkj sat_scvkp];
                      System.Console.GetOpt.ReturnInOrder f_scvkq [Occ=Once!] ->
                          let {
                            ds_scvkr [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                              :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                  [GHC.Base.String])
                            [LclId] =
                                [w1_scvjN args_scvjR wild2_scvjT] \u []
                                    case
                                        System.Console.GetOpt.$wgetOpt'
                                            wild2_scvjT w1_scvjN args_scvjR
                                    of
                                    { (#,,,#) ww1_scvkt [Occ=Once]
                                              ww2_scvku [Occ=Once]
                                              ww3_scvkv [Occ=Once]
                                              ww4_scvkw [Occ=Once] ->
                                          (,,,) [ww1_scvkt ww2_scvku ww3_scvkv ww4_scvkw];
                                    }; } in
                          let {
                            sat_scvkW [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scvkr] \u []
                                    case ds_scvkr of {
                                      (,,,) _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            es_scvkV [Occ=Once] ->
                                          es_scvkV;
                                    }; } in
                          let {
                            sat_scvkQ [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scvkr] \u []
                                    case ds_scvkr of {
                                      (,,,) _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            us_scvkO [Occ=Once]
                                            _ [Occ=Dead] ->
                                          us_scvkO;
                                    }; } in
                          let {
                            sat_scvkK [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scvkr] \u []
                                    case ds_scvkr of {
                                      (,,,) _ [Occ=Dead]
                                            xs_scvkH [Occ=Once]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead] ->
                                          xs_scvkH;
                                    }; } in
                          let {
                            sat_scvkD [Occ=Once] :: [a_scrPx]
                            [LclId] =
                                [ds_scvkr] \u []
                                    case ds_scvkr of {
                                      (,,,) os_scvkz [Occ=Once]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead] ->
                                          os_scvkz;
                                    }; } in
                          let {
                            sat_scvkx [Occ=Once] :: a_scrPx
                            [LclId] =
                                [f_scvkq] \u [] f_scvkq GHC.Types.[]; } in
                          let {
                            sat_scvkE [Occ=Once] :: [a_scrPx]
                            [LclId] =
                                CCCS :! [sat_scvkx sat_scvkD];
                          } in  (#,,,#) [sat_scvkE sat_scvkK sat_scvkQ sat_scvkW];
                    };
                : ds_scvkX [Occ=Once!] ds1_scvkY [Occ=Once!] ->
                    case ds_scvkX of {
                      GHC.Types.C# ds2_scvl0 [Occ=Once!] ->
                          case ds2_scvl0 of {
                            __DEFAULT ->
                                case w_scvjM of wild3_scvl2 {
                                  System.Console.GetOpt.RequireOrder ->
                                      (#,,,#) [GHC.Types.[] wild_scvjP GHC.Types.[] GHC.Types.[]];
                                  System.Console.GetOpt.Permute ->
                                      let {
                                        ds4_scvl3 [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                          :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                              [GHC.Base.String])
                                        [LclId] =
                                            [w1_scvjN args_scvjR] \u []
                                                case
                                                    System.Console.GetOpt.$wgetOpt'
                                                        System.Console.GetOpt.Permute
                                                        w1_scvjN
                                                        args_scvjR
                                                of
                                                { (#,,,#) ww1_scvl5 [Occ=Once]
                                                          ww2_scvl6 [Occ=Once]
                                                          ww3_scvl7 [Occ=Once]
                                                          ww4_scvl8 [Occ=Once] ->
                                                      (,,,) [ww1_scvl5
                                                             ww2_scvl6
                                                             ww3_scvl7
                                                             ww4_scvl8];
                                                }; } in
                                      let {
                                        sat_scvlx [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scvl3] \u []
                                                case ds4_scvl3 of {
                                                  (,,,) _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        es_scvlw [Occ=Once] ->
                                                      es_scvlw;
                                                }; } in
                                      let {
                                        sat_scvlr [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scvl3] \u []
                                                case ds4_scvl3 of {
                                                  (,,,) _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        us_scvlp [Occ=Once]
                                                        _ [Occ=Dead] ->
                                                      us_scvlp;
                                                }; } in
                                      let {
                                        sat_scvlk [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scvl3] \u []
                                                case ds4_scvl3 of {
                                                  (,,,) _ [Occ=Dead]
                                                        xs_scvlh [Occ=Once]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead] ->
                                                      xs_scvlh;
                                                }; } in
                                      let {
                                        sat_scvll [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            CCCS :! [wild1_scvjS sat_scvlk]; } in
                                      let {
                                        sat_scvle [Occ=Once] :: [a_scrPx]
                                        [LclId] =
                                            [ds4_scvl3] \u []
                                                case ds4_scvl3 of {
                                                  (,,,) os_scvla [Occ=Once]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead] ->
                                                      os_scvla;
                                                };
                                      } in  (#,,,#) [sat_scvle sat_scvll sat_scvlr sat_scvlx];
                                  System.Console.GetOpt.ReturnInOrder f_scvly [Occ=Once!] ->
                                      let {
                                        ds4_scvlz [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                          :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                              [GHC.Base.String])
                                        [LclId] =
                                            [w1_scvjN args_scvjR wild3_scvl2] \u []
                                                case
                                                    System.Console.GetOpt.$wgetOpt'
                                                        wild3_scvl2 w1_scvjN args_scvjR
                                                of
                                                { (#,,,#) ww1_scvlB [Occ=Once]
                                                          ww2_scvlC [Occ=Once]
                                                          ww3_scvlD [Occ=Once]
                                                          ww4_scvlE [Occ=Once] ->
                                                      (,,,) [ww1_scvlB
                                                             ww2_scvlC
                                                             ww3_scvlD
                                                             ww4_scvlE];
                                                }; } in
                                      let {
                                        sat_scvm4 [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scvlz] \u []
                                                case ds4_scvlz of {
                                                  (,,,) _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        es_scvm3 [Occ=Once] ->
                                                      es_scvm3;
                                                }; } in
                                      let {
                                        sat_scvlY [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scvlz] \u []
                                                case ds4_scvlz of {
                                                  (,,,) _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        us_scvlW [Occ=Once]
                                                        _ [Occ=Dead] ->
                                                      us_scvlW;
                                                }; } in
                                      let {
                                        sat_scvlS [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scvlz] \u []
                                                case ds4_scvlz of {
                                                  (,,,) _ [Occ=Dead]
                                                        xs_scvlP [Occ=Once]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead] ->
                                                      xs_scvlP;
                                                }; } in
                                      let {
                                        sat_scvlL [Occ=Once] :: [a_scrPx]
                                        [LclId] =
                                            [ds4_scvlz] \u []
                                                case ds4_scvlz of {
                                                  (,,,) os_scvlH [Occ=Once]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead] ->
                                                      os_scvlH;
                                                }; } in
                                      let {
                                        sat_scvlF [Occ=Once] :: a_scrPx
                                        [LclId] =
                                            [wild1_scvjS f_scvly] \u [] f_scvly wild1_scvjS; } in
                                      let {
                                        sat_scvlM [Occ=Once] :: [a_scrPx]
                                        [LclId] =
                                            CCCS :! [sat_scvlF sat_scvlL];
                                      } in  (#,,,#) [sat_scvlM sat_scvlS sat_scvlY sat_scvm4];
                                };
                            '-'# ->
                                case ds1_scvkY of {
                                  [] ->
                                      case w_scvjM of wild4_scvm6 {
                                        System.Console.GetOpt.RequireOrder ->
                                            (#,,,#) [GHC.Types.[]
                                                     wild_scvjP
                                                     GHC.Types.[]
                                                     GHC.Types.[]];
                                        System.Console.GetOpt.Permute ->
                                            let {
                                              ds4_scvm7 [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                                    [GHC.Base.String])
                                              [LclId] =
                                                  [w1_scvjN args_scvjR] \u []
                                                      case
                                                          System.Console.GetOpt.$wgetOpt'
                                                              System.Console.GetOpt.Permute
                                                              w1_scvjN
                                                              args_scvjR
                                                      of
                                                      { (#,,,#) ww1_scvm9 [Occ=Once]
                                                                ww2_scvma [Occ=Once]
                                                                ww3_scvmb [Occ=Once]
                                                                ww4_scvmc [Occ=Once] ->
                                                            (,,,) [ww1_scvm9
                                                                   ww2_scvma
                                                                   ww3_scvmb
                                                                   ww4_scvmc];
                                                      }; } in
                                            let {
                                              sat_scvmB [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scvm7] \u []
                                                      case ds4_scvm7 of {
                                                        (,,,) _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              es_scvmA [Occ=Once] ->
                                                            es_scvmA;
                                                      }; } in
                                            let {
                                              sat_scvmv [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scvm7] \u []
                                                      case ds4_scvm7 of {
                                                        (,,,) _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              us_scvmt [Occ=Once]
                                                              _ [Occ=Dead] ->
                                                            us_scvmt;
                                                      }; } in
                                            let {
                                              sat_scvmo [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scvm7] \u []
                                                      case ds4_scvm7 of {
                                                        (,,,) _ [Occ=Dead]
                                                              xs_scvml [Occ=Once]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead] ->
                                                            xs_scvml;
                                                      }; } in
                                            let {
                                              sat_scvmp [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  CCCS :! [wild1_scvjS sat_scvmo]; } in
                                            let {
                                              sat_scvmi [Occ=Once] :: [a_scrPx]
                                              [LclId] =
                                                  [ds4_scvm7] \u []
                                                      case ds4_scvm7 of {
                                                        (,,,) os_scvme [Occ=Once]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead] ->
                                                            os_scvme;
                                                      };
                                            } in  (#,,,#) [sat_scvmi sat_scvmp sat_scvmv sat_scvmB];
                                        System.Console.GetOpt.ReturnInOrder f_scvmC [Occ=Once!] ->
                                            let {
                                              ds4_scvmD [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                                    [GHC.Base.String])
                                              [LclId] =
                                                  [w1_scvjN args_scvjR wild4_scvm6] \u []
                                                      case
                                                          System.Console.GetOpt.$wgetOpt'
                                                              wild4_scvm6 w1_scvjN args_scvjR
                                                      of
                                                      { (#,,,#) ww1_scvmF [Occ=Once]
                                                                ww2_scvmG [Occ=Once]
                                                                ww3_scvmH [Occ=Once]
                                                                ww4_scvmI [Occ=Once] ->
                                                            (,,,) [ww1_scvmF
                                                                   ww2_scvmG
                                                                   ww3_scvmH
                                                                   ww4_scvmI];
                                                      }; } in
                                            let {
                                              sat_scvn8 [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scvmD] \u []
                                                      case ds4_scvmD of {
                                                        (,,,) _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              es_scvn7 [Occ=Once] ->
                                                            es_scvn7;
                                                      }; } in
                                            let {
                                              sat_scvn2 [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scvmD] \u []
                                                      case ds4_scvmD of {
                                                        (,,,) _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              us_scvn0 [Occ=Once]
                                                              _ [Occ=Dead] ->
                                                            us_scvn0;
                                                      }; } in
                                            let {
                                              sat_scvmW [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scvmD] \u []
                                                      case ds4_scvmD of {
                                                        (,,,) _ [Occ=Dead]
                                                              xs_scvmT [Occ=Once]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead] ->
                                                            xs_scvmT;
                                                      }; } in
                                            let {
                                              sat_scvmP [Occ=Once] :: [a_scrPx]
                                              [LclId] =
                                                  [ds4_scvmD] \u []
                                                      case ds4_scvmD of {
                                                        (,,,) os_scvmL [Occ=Once]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead] ->
                                                            os_scvmL;
                                                      }; } in
                                            let {
                                              sat_scvmJ [Occ=Once] :: a_scrPx
                                              [LclId] =
                                                  [wild1_scvjS f_scvmC] \u []
                                                      f_scvmC wild1_scvjS; } in
                                            let {
                                              sat_scvmQ [Occ=Once] :: [a_scrPx]
                                              [LclId] =
                                                  CCCS :! [sat_scvmJ sat_scvmP];
                                            } in  (#,,,#) [sat_scvmQ sat_scvmW sat_scvn2 sat_scvn8];
                                      };
                                  : ds4_scvn9 [Occ=Once!] ds5_scvna [Occ=Once*!] ->
                                      case ds4_scvn9 of wild4_scvnb {
                                        GHC.Types.C# ds6_scvnc [Occ=Once!] ->
                                            case ds6_scvnc of ds7_scvnd {
                                              __DEFAULT ->
                                                  let {
                                                    go_scvne [Occ=LoopBreaker]
                                                      :: [System.Console.GetOpt.OptDescr a_scrPx]
                                                         -> [System.Console.GetOpt.OptDescr a_scrPx]
                                                    [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
                                                        sat-only [ds7_scvnd go_scvne] \r [ds8_scvnf]
                                                            case ds8_scvnf of {
                                                              [] -> [] [];
                                                              : y_scvnh [Occ=Once!]
                                                                ys_scvni [Occ=Once] ->
                                                                  case y_scvnh of wild6_scvnj {
                                                                    System.Console.GetOpt.Option ss_scvnk [Occ=Once]
                                                                                                 _ [Occ=Dead]
                                                                                                 _ [Occ=Dead]
                                                                                                 _ [Occ=Dead] ->
                                                                        let {
                                                                          z_scvno [Occ=OnceL]
                                                                            :: [System.Console.GetOpt.OptDescr
                                                                                  a_scrPx]
                                                                          [LclId] =
                                                                              [go_scvne
                                                                               ys_scvni] \u []
                                                                                  go_scvne
                                                                                      ys_scvni; } in
                                                                        let {
                                                                          go1_scvnp [Occ=LoopBreaker]
                                                                            :: [GHC.Types.Char]
                                                                               -> [System.Console.GetOpt.OptDescr
                                                                                     a_scrPx]
                                                                          [LclId,
                                                                           Arity=1,
                                                                           Str=<S,1*U>,
                                                                           Unf=OtherCon []] =
                                                                              sat-only [ds7_scvnd
                                                                                        wild6_scvnj
                                                                                        z_scvno
                                                                                        go1_scvnp] \r [ds12_scvnq]
                                                                                  case
                                                                                      ds12_scvnq
                                                                                  of
                                                                                  { [] -> z_scvno;
                                                                                    : y1_scvns [Occ=Once!]
                                                                                      ys1_scvnt [Occ=Once*] ->
                                                                                        case
                                                                                            y1_scvns
                                                                                        of
                                                                                        { GHC.Types.C# y2_scvnv [Occ=Once] ->
                                                                                              case
                                                                                                  eqChar# [ds7_scvnd
                                                                                                           y2_scvnv]
                                                                                              of
                                                                                              { __DEFAULT ->
                                                                                                    go1_scvnp
                                                                                                        ys1_scvnt;
                                                                                                1# ->
                                                                                                    let {
                                                                                                      sat_scvnx [Occ=Once]
                                                                                                        :: [System.Console.GetOpt.OptDescr
                                                                                                              a_scrPx]
                                                                                                      [LclId] =
                                                                                                          [go1_scvnp
                                                                                                           ys1_scvnt] \u []
                                                                                                              go1_scvnp
                                                                                                                  ys1_scvnt;
                                                                                                    } in 
                                                                                                      : [wild6_scvnj
                                                                                                         sat_scvnx];
                                                                                              };
                                                                                        };
                                                                                  };
                                                                        } in  go1_scvnp ss_scvnk;
                                                                  };
                                                            };
                                                  } in 
                                                    case
                                                        go_scvne w1_scvjN
                                                    of
                                                    options_scvny [Dmd=<S,U>]
                                                    { __DEFAULT ->
                                                          case poly_go1_rcsnl options_scvny of {
                                                            [] ->
                                                                case ds5_scvna of wild6_scvnA {
                                                                  [] ->
                                                                      let {
                                                                        ds8_scvnB [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                          :: ([a_scrPx],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String])
                                                                        [LclId] =
                                                                            [w_scvjM
                                                                             w1_scvjN
                                                                             args_scvjR] \u []
                                                                                case
                                                                                    System.Console.GetOpt.$wgetOpt'
                                                                                        w_scvjM
                                                                                        w1_scvjN
                                                                                        args_scvjR
                                                                                of
                                                                                { (#,,,#) ww1_scvnD [Occ=Once]
                                                                                          ww2_scvnE [Occ=Once]
                                                                                          ww3_scvnF [Occ=Once]
                                                                                          ww4_scvnG [Occ=Once] ->
                                                                                      (,,,) [ww1_scvnD
                                                                                             ww2_scvnE
                                                                                             ww3_scvnF
                                                                                             ww4_scvnG];
                                                                                }; } in
                                                                      let {
                                                                        sat_scvo7 [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scvnB] \u []
                                                                                case ds8_scvnB of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        es_scvo6 [Occ=Once] ->
                                                                                      es_scvo6;
                                                                                }; } in
                                                                      let {
                                                                        sat_scvo0 [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scvnB] \u []
                                                                                case ds8_scvnB of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        us_scvnY [Occ=Once]
                                                                                        _ [Occ=Dead] ->
                                                                                      us_scvnY;
                                                                                }; } in
                                                                      let {
                                                                        sat_scvnT [Occ=Once]
                                                                          :: [GHC.Types.Char]
                                                                        [LclId] =
                                                                            CCCS :! [wild4_scvnb
                                                                                     GHC.Types.[]]; } in
                                                                      let {
                                                                        sat_scvnU [Occ=Once]
                                                                          :: GHC.Base.String
                                                                        [LclId] =
                                                                            CCCS :! [lvl21_rcsng
                                                                                     sat_scvnT]; } in
                                                                      let {
                                                                        sat_scvo1 [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            CCCS :! [sat_scvnU
                                                                                     sat_scvo0]; } in
                                                                      let {
                                                                        sat_scvnS [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scvnB] \u []
                                                                                case ds8_scvnB of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        xs_scvnP [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      xs_scvnP;
                                                                                }; } in
                                                                      let {
                                                                        sat_scvnM [Occ=Once]
                                                                          :: [a_scrPx]
                                                                        [LclId] =
                                                                            [ds8_scvnB] \u []
                                                                                case ds8_scvnB of {
                                                                                  (,,,) os_scvnI [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      os_scvnI;
                                                                                };
                                                                      } in 
                                                                        (#,,,#) [sat_scvnM
                                                                                 sat_scvnS
                                                                                 sat_scvo1
                                                                                 sat_scvo7];
                                                                  : _ [Occ=Dead] _ [Occ=Dead] ->
                                                                      let {
                                                                        ds8_scvoa [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                          :: ([a_scrPx],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String])
                                                                        [LclId] =
                                                                            [w_scvjM
                                                                             w1_scvjN
                                                                             args_scvjR
                                                                             wild6_scvnA] \u []
                                                                                let {
                                                                                  sat_scvob [Occ=OnceL]
                                                                                    :: [GHC.Types.Char]
                                                                                  [LclId] =
                                                                                      CCCS :! [lvl21_rcsng
                                                                                               wild6_scvnA]; } in
                                                                                let {
                                                                                  sat_scvoc [Occ=Once]
                                                                                    :: [GHC.Base.String]
                                                                                  [LclId] =
                                                                                      CCCS :! [sat_scvob
                                                                                               args_scvjR];
                                                                                } in 
                                                                                  case
                                                                                      System.Console.GetOpt.$wgetOpt'
                                                                                          w_scvjM
                                                                                          w1_scvjN
                                                                                          sat_scvoc
                                                                                  of
                                                                                  { (#,,,#) ww1_scvoe [Occ=Once]
                                                                                            ww2_scvof [Occ=Once]
                                                                                            ww3_scvog [Occ=Once]
                                                                                            ww4_scvoh [Occ=Once] ->
                                                                                        (,,,) [ww1_scvoe
                                                                                               ww2_scvof
                                                                                               ww3_scvog
                                                                                               ww4_scvoh];
                                                                                  }; } in
                                                                      let {
                                                                        sat_scvoI [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scvoa] \u []
                                                                                case ds8_scvoa of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        es_scvoH [Occ=Once] ->
                                                                                      es_scvoH;
                                                                                }; } in
                                                                      let {
                                                                        sat_scvoB [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scvoa] \u []
                                                                                case ds8_scvoa of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        us_scvoz [Occ=Once]
                                                                                        _ [Occ=Dead] ->
                                                                                      us_scvoz;
                                                                                }; } in
                                                                      let {
                                                                        sat_scvou [Occ=Once]
                                                                          :: [GHC.Types.Char]
                                                                        [LclId] =
                                                                            CCCS :! [wild4_scvnb
                                                                                     GHC.Types.[]]; } in
                                                                      let {
                                                                        sat_scvov [Occ=Once]
                                                                          :: GHC.Base.String
                                                                        [LclId] =
                                                                            CCCS :! [lvl21_rcsng
                                                                                     sat_scvou]; } in
                                                                      let {
                                                                        sat_scvoC [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            CCCS :! [sat_scvov
                                                                                     sat_scvoB]; } in
                                                                      let {
                                                                        sat_scvot [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scvoa] \u []
                                                                                case ds8_scvoa of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        xs_scvoq [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      xs_scvoq;
                                                                                }; } in
                                                                      let {
                                                                        sat_scvon [Occ=Once]
                                                                          :: [a_scrPx]
                                                                        [LclId] =
                                                                            [ds8_scvoa] \u []
                                                                                case ds8_scvoa of {
                                                                                  (,,,) os_scvoj [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      os_scvoj;
                                                                                };
                                                                      } in 
                                                                        (#,,,#) [sat_scvon
                                                                                 sat_scvot
                                                                                 sat_scvoC
                                                                                 sat_scvoI];
                                                                };
                                                            : ds8_scvoJ [Occ=Once!]
                                                              ds9_scvoK [Occ=Once!] ->
                                                                case ds9_scvoK of {
                                                                  [] ->
                                                                      case ds8_scvoJ of {
                                                                        System.Console.GetOpt.NoArg a1_scvoN [Occ=Once*] ->
                                                                            case
                                                                                ds5_scvna
                                                                            of
                                                                            wild8_scvoO
                                                                            { [] ->
                                                                                  let {
                                                                                    ds10_scvoP [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                      :: ([a_scrPx],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String])
                                                                                    [LclId] =
                                                                                        [w_scvjM
                                                                                         w1_scvjN
                                                                                         args_scvjR] \u []
                                                                                            case
                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                    w_scvjM
                                                                                                    w1_scvjN
                                                                                                    args_scvjR
                                                                                            of
                                                                                            { (#,,,#) ww1_scvoR [Occ=Once]
                                                                                                      ww2_scvoS [Occ=Once]
                                                                                                      ww3_scvoT [Occ=Once]
                                                                                                      ww4_scvoU [Occ=Once] ->
                                                                                                  (,,,) [ww1_scvoR
                                                                                                         ww2_scvoS
                                                                                                         ww3_scvoT
                                                                                                         ww4_scvoU];
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvpj [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scvoP] \u []
                                                                                            case
                                                                                                ds10_scvoP
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    es_scvpi [Occ=Once] ->
                                                                                                  es_scvpi;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvpd [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scvoP] \u []
                                                                                            case
                                                                                                ds10_scvoP
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    us_scvpb [Occ=Once]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  us_scvpb;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvp7 [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scvoP] \u []
                                                                                            case
                                                                                                ds10_scvoP
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    xs_scvp4 [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  xs_scvp4;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvp0 [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        [ds10_scvoP] \u []
                                                                                            case
                                                                                                ds10_scvoP
                                                                                            of
                                                                                            { (,,,) os_scvoW [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  os_scvoW;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvp1 [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        CCCS :! [a1_scvoN
                                                                                                 sat_scvp0];
                                                                                  } in 
                                                                                    (#,,,#) [sat_scvp1
                                                                                             sat_scvp7
                                                                                             sat_scvpd
                                                                                             sat_scvpj];
                                                                              : _ [Occ=Dead]
                                                                                _ [Occ=Dead] ->
                                                                                  let {
                                                                                    ds10_scvpm [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                      :: ([a_scrPx],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String])
                                                                                    [LclId] =
                                                                                        [w_scvjM
                                                                                         w1_scvjN
                                                                                         args_scvjR
                                                                                         wild8_scvoO] \u []
                                                                                            let {
                                                                                              sat_scvpn [Occ=OnceL]
                                                                                                :: [GHC.Types.Char]
                                                                                              [LclId] =
                                                                                                  CCCS :! [lvl21_rcsng
                                                                                                           wild8_scvoO]; } in
                                                                                            let {
                                                                                              sat_scvpo [Occ=Once]
                                                                                                :: [GHC.Base.String]
                                                                                              [LclId] =
                                                                                                  CCCS :! [sat_scvpn
                                                                                                           args_scvjR];
                                                                                            } in 
                                                                                              case
                                                                                                  System.Console.GetOpt.$wgetOpt'
                                                                                                      w_scvjM
                                                                                                      w1_scvjN
                                                                                                      sat_scvpo
                                                                                              of
                                                                                              { (#,,,#) ww1_scvpq [Occ=Once]
                                                                                                        ww2_scvpr [Occ=Once]
                                                                                                        ww3_scvps [Occ=Once]
                                                                                                        ww4_scvpt [Occ=Once] ->
                                                                                                    (,,,) [ww1_scvpq
                                                                                                           ww2_scvpr
                                                                                                           ww3_scvps
                                                                                                           ww4_scvpt];
                                                                                              }; } in
                                                                                  let {
                                                                                    sat_scvpS [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scvpm] \u []
                                                                                            case
                                                                                                ds10_scvpm
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    es_scvpR [Occ=Once] ->
                                                                                                  es_scvpR;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvpM [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scvpm] \u []
                                                                                            case
                                                                                                ds10_scvpm
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    us_scvpK [Occ=Once]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  us_scvpK;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvpG [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scvpm] \u []
                                                                                            case
                                                                                                ds10_scvpm
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    xs_scvpD [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  xs_scvpD;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvpz [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        [ds10_scvpm] \u []
                                                                                            case
                                                                                                ds10_scvpm
                                                                                            of
                                                                                            { (,,,) os_scvpv [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  os_scvpv;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvpA [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        CCCS :! [a1_scvoN
                                                                                                 sat_scvpz];
                                                                                  } in 
                                                                                    (#,,,#) [sat_scvpA
                                                                                             sat_scvpG
                                                                                             sat_scvpM
                                                                                             sat_scvpS];
                                                                            };
                                                                        System.Console.GetOpt.ReqArg ds10_scvpT [Occ=Once*!]
                                                                                                     d_scvpU [Occ=Once] ->
                                                                            case
                                                                                ds5_scvna
                                                                            of
                                                                            wild8_scvpV
                                                                            { [] ->
                                                                                  case
                                                                                      args_scvjR
                                                                                  of
                                                                                  { [] ->
                                                                                        let {
                                                                                          ds11_scvpX [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                            :: ([a_scrPx],
                                                                                                [GHC.Base.String],
                                                                                                [GHC.Base.String],
                                                                                                [GHC.Base.String])
                                                                                          [LclId] =
                                                                                              [w_scvjM
                                                                                               w1_scvjN] \u []
                                                                                                  case
                                                                                                      System.Console.GetOpt.$wgetOpt'
                                                                                                          w_scvjM
                                                                                                          w1_scvjN
                                                                                                          GHC.Types.[]
                                                                                                  of
                                                                                                  { (#,,,#) ww1_scvpZ [Occ=Once]
                                                                                                            ww2_scvq0 [Occ=Once]
                                                                                                            ww3_scvq1 [Occ=Once]
                                                                                                            ww4_scvq2 [Occ=Once] ->
                                                                                                        (,,,) [ww1_scvpZ
                                                                                                               ww2_scvq0
                                                                                                               ww3_scvq1
                                                                                                               ww4_scvq2];
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scvqw [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scvpX] \u []
                                                                                                  case
                                                                                                      ds11_scvpX
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          es_scvqv [Occ=Once] ->
                                                                                                        es_scvqv;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scvqq [Occ=Once]
                                                                                            :: GHC.Base.String
                                                                                          [LclId] =
                                                                                              [wild4_scvnb
                                                                                               d_scvpU] \u []
                                                                                                  let {
                                                                                                    sat_scvqp [Occ=Once]
                                                                                                      :: [GHC.Types.Char]
                                                                                                    [LclId] =
                                                                                                        [wild4_scvnb
                                                                                                         d_scvpU] \u []
                                                                                                            let {
                                                                                                              sat_scvqo [Occ=Once,
                                                                                                                         Dmd=<L,1*U>]
                                                                                                                :: [GHC.Types.Char]
                                                                                                              [LclId] =
                                                                                                                  [d_scvpU] \s []
                                                                                                                      let {
                                                                                                                        sat_scvqn [Occ=Once]
                                                                                                                          :: [GHC.Types.Char]
                                                                                                                        [LclId] =
                                                                                                                            [d_scvpU] \u []
                                                                                                                                GHC.Base.++
                                                                                                                                    d_scvpU
                                                                                                                                    lvl16_rcsnb;
                                                                                                                      } in 
                                                                                                                        GHC.CString.unpackAppendCString#
                                                                                                                            lvl14_rcsn9
                                                                                                                            sat_scvqn; } in
                                                                                                            let {
                                                                                                              sat_scvql [Occ=Once]
                                                                                                                :: [GHC.Types.Char]
                                                                                                              [LclId] =
                                                                                                                  CCCS :! [wild4_scvnb
                                                                                                                           GHC.Types.[]]; } in
                                                                                                            let {
                                                                                                              sat_scvqm [Occ=Once]
                                                                                                                :: [GHC.Types.Char]
                                                                                                              [LclId] =
                                                                                                                  CCCS :! [lvl21_rcsng
                                                                                                                           sat_scvql];
                                                                                                            } in 
                                                                                                              GHC.Base.++
                                                                                                                  sat_scvqm
                                                                                                                  sat_scvqo;
                                                                                                  } in 
                                                                                                    GHC.CString.unpackAppendCString#
                                                                                                        lvl12_rcsn7
                                                                                                        sat_scvqp; } in
                                                                                        let {
                                                                                          sat_scvqx [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              CCCS :! [sat_scvqq
                                                                                                       sat_scvqw]; } in
                                                                                        let {
                                                                                          sat_scvqk [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scvpX] \u []
                                                                                                  case
                                                                                                      ds11_scvpX
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          us_scvqi [Occ=Once]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        us_scvqi;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scvqe [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scvpX] \u []
                                                                                                  case
                                                                                                      ds11_scvpX
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          xs_scvqb [Occ=Once]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        xs_scvqb;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scvq8 [Occ=Once]
                                                                                            :: [a_scrPx]
                                                                                          [LclId] =
                                                                                              [ds11_scvpX] \u []
                                                                                                  case
                                                                                                      ds11_scvpX
                                                                                                  of
                                                                                                  { (,,,) os_scvq4 [Occ=Once]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        os_scvq4;
                                                                                                  };
                                                                                        } in 
                                                                                          (#,,,#) [sat_scvq8
                                                                                                   sat_scvqe
                                                                                                   sat_scvqk
                                                                                                   sat_scvqx];
                                                                                    : r_scvqy [Occ=Once]
                                                                                      rest_scvqz [Occ=Once] ->
                                                                                        let {
                                                                                          ds11_scvqA [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                            :: ([a_scrPx],
                                                                                                [GHC.Base.String],
                                                                                                [GHC.Base.String],
                                                                                                [GHC.Base.String])
                                                                                          [LclId] =
                                                                                              [w_scvjM
                                                                                               w1_scvjN
                                                                                               rest_scvqz] \u []
                                                                                                  case
                                                                                                      System.Console.GetOpt.$wgetOpt'
                                                                                                          w_scvjM
                                                                                                          w1_scvjN
                                                                                                          rest_scvqz
                                                                                                  of
                                                                                                  { (#,,,#) ww1_scvqC [Occ=Once]
                                                                                                            ww2_scvqD [Occ=Once]
                                                                                                            ww3_scvqE [Occ=Once]
                                                                                                            ww4_scvqF [Occ=Once] ->
                                                                                                        (,,,) [ww1_scvqC
                                                                                                               ww2_scvqD
                                                                                                               ww3_scvqE
                                                                                                               ww4_scvqF];
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scvr5 [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scvqA] \u []
                                                                                                  case
                                                                                                      ds11_scvqA
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          es_scvr4 [Occ=Once] ->
                                                                                                        es_scvr4;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scvqZ [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scvqA] \u []
                                                                                                  case
                                                                                                      ds11_scvqA
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          us_scvqX [Occ=Once]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        us_scvqX;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scvqT [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scvqA] \u []
                                                                                                  case
                                                                                                      ds11_scvqA
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          xs_scvqQ [Occ=Once]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        xs_scvqQ;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scvqM [Occ=Once]
                                                                                            :: [a_scrPx]
                                                                                          [LclId] =
                                                                                              [ds11_scvqA] \u []
                                                                                                  case
                                                                                                      ds11_scvqA
                                                                                                  of
                                                                                                  { (,,,) os_scvqI [Occ=Once]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        os_scvqI;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scvqG [Occ=Once]
                                                                                            :: a_scrPx
                                                                                          [LclId] =
                                                                                              [ds10_scvpT
                                                                                               r_scvqy] \u []
                                                                                                  ds10_scvpT
                                                                                                      r_scvqy; } in
                                                                                        let {
                                                                                          sat_scvqN [Occ=Once]
                                                                                            :: [a_scrPx]
                                                                                          [LclId] =
                                                                                              CCCS :! [sat_scvqG
                                                                                                       sat_scvqM];
                                                                                        } in 
                                                                                          (#,,,#) [sat_scvqN
                                                                                                   sat_scvqT
                                                                                                   sat_scvqZ
                                                                                                   sat_scvr5];
                                                                                  };
                                                                              : _ [Occ=Dead]
                                                                                _ [Occ=Dead] ->
                                                                                  let {
                                                                                    ds11_scvr8 [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                      :: ([a_scrPx],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String])
                                                                                    [LclId] =
                                                                                        [w_scvjM
                                                                                         w1_scvjN
                                                                                         args_scvjR] \u []
                                                                                            case
                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                    w_scvjM
                                                                                                    w1_scvjN
                                                                                                    args_scvjR
                                                                                            of
                                                                                            { (#,,,#) ww1_scvra [Occ=Once]
                                                                                                      ww2_scvrb [Occ=Once]
                                                                                                      ww3_scvrc [Occ=Once]
                                                                                                      ww4_scvrd [Occ=Once] ->
                                                                                                  (,,,) [ww1_scvra
                                                                                                         ww2_scvrb
                                                                                                         ww3_scvrc
                                                                                                         ww4_scvrd];
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvrD [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scvr8] \u []
                                                                                            case
                                                                                                ds11_scvr8
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    es_scvrC [Occ=Once] ->
                                                                                                  es_scvrC;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvrx [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scvr8] \u []
                                                                                            case
                                                                                                ds11_scvr8
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    us_scvrv [Occ=Once]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  us_scvrv;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvrr [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scvr8] \u []
                                                                                            case
                                                                                                ds11_scvr8
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    xs_scvro [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  xs_scvro;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvrk [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        [ds11_scvr8] \u []
                                                                                            case
                                                                                                ds11_scvr8
                                                                                            of
                                                                                            { (,,,) os_scvrg [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  os_scvrg;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvre [Occ=Once]
                                                                                      :: a_scrPx
                                                                                    [LclId] =
                                                                                        [ds10_scvpT
                                                                                         wild8_scvpV] \u []
                                                                                            ds10_scvpT
                                                                                                wild8_scvpV; } in
                                                                                  let {
                                                                                    sat_scvrl [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        CCCS :! [sat_scvre
                                                                                                 sat_scvrk];
                                                                                  } in 
                                                                                    (#,,,#) [sat_scvrl
                                                                                             sat_scvrr
                                                                                             sat_scvrx
                                                                                             sat_scvrD];
                                                                            };
                                                                        System.Console.GetOpt.OptArg f_scvrE [Occ=Once*!]
                                                                                                     _ [Occ=Dead] ->
                                                                            case
                                                                                ds5_scvna
                                                                            of
                                                                            wild8_scvrG
                                                                            { [] ->
                                                                                  let {
                                                                                    ds11_scvrH [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                      :: ([a_scrPx],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String])
                                                                                    [LclId] =
                                                                                        [w_scvjM
                                                                                         w1_scvjN
                                                                                         args_scvjR] \u []
                                                                                            case
                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                    w_scvjM
                                                                                                    w1_scvjN
                                                                                                    args_scvjR
                                                                                            of
                                                                                            { (#,,,#) ww1_scvrJ [Occ=Once]
                                                                                                      ww2_scvrK [Occ=Once]
                                                                                                      ww3_scvrL [Occ=Once]
                                                                                                      ww4_scvrM [Occ=Once] ->
                                                                                                  (,,,) [ww1_scvrJ
                                                                                                         ww2_scvrK
                                                                                                         ww3_scvrL
                                                                                                         ww4_scvrM];
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvsc [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scvrH] \u []
                                                                                            case
                                                                                                ds11_scvrH
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    es_scvsb [Occ=Once] ->
                                                                                                  es_scvsb;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvs6 [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scvrH] \u []
                                                                                            case
                                                                                                ds11_scvrH
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    us_scvs4 [Occ=Once]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  us_scvs4;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvs0 [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scvrH] \u []
                                                                                            case
                                                                                                ds11_scvrH
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    xs_scvrX [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  xs_scvrX;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvrT [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        [ds11_scvrH] \u []
                                                                                            case
                                                                                                ds11_scvrH
                                                                                            of
                                                                                            { (,,,) os_scvrP [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  os_scvrP;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvrN [Occ=Once]
                                                                                      :: a_scrPx
                                                                                    [LclId] =
                                                                                        [f_scvrE] \u []
                                                                                            f_scvrE
                                                                                                GHC.Base.Nothing; } in
                                                                                  let {
                                                                                    sat_scvrU [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        CCCS :! [sat_scvrN
                                                                                                 sat_scvrT];
                                                                                  } in 
                                                                                    (#,,,#) [sat_scvrU
                                                                                             sat_scvs0
                                                                                             sat_scvs6
                                                                                             sat_scvsc];
                                                                              : _ [Occ=Dead]
                                                                                _ [Occ=Dead] ->
                                                                                  let {
                                                                                    ds11_scvsf [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                      :: ([a_scrPx],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String])
                                                                                    [LclId] =
                                                                                        [w_scvjM
                                                                                         w1_scvjN
                                                                                         args_scvjR] \u []
                                                                                            case
                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                    w_scvjM
                                                                                                    w1_scvjN
                                                                                                    args_scvjR
                                                                                            of
                                                                                            { (#,,,#) ww1_scvsh [Occ=Once]
                                                                                                      ww2_scvsi [Occ=Once]
                                                                                                      ww3_scvsj [Occ=Once]
                                                                                                      ww4_scvsk [Occ=Once] ->
                                                                                                  (,,,) [ww1_scvsh
                                                                                                         ww2_scvsi
                                                                                                         ww3_scvsj
                                                                                                         ww4_scvsk];
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvsL [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scvsf] \u []
                                                                                            case
                                                                                                ds11_scvsf
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    es_scvsK [Occ=Once] ->
                                                                                                  es_scvsK;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvsF [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scvsf] \u []
                                                                                            case
                                                                                                ds11_scvsf
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    us_scvsD [Occ=Once]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  us_scvsD;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvsz [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scvsf] \u []
                                                                                            case
                                                                                                ds11_scvsf
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    xs_scvsw [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  xs_scvsw;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvss [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        [ds11_scvsf] \u []
                                                                                            case
                                                                                                ds11_scvsf
                                                                                            of
                                                                                            { (,,,) os_scvso [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  os_scvso;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvsm [Occ=Once]
                                                                                      :: a_scrPx
                                                                                    [LclId] =
                                                                                        [f_scvrE
                                                                                         wild8_scvrG] \u []
                                                                                            let {
                                                                                              sat_scvsl [Occ=Once]
                                                                                                :: GHC.Base.Maybe
                                                                                                     GHC.Base.String
                                                                                              [LclId] =
                                                                                                  CCCS GHC.Base.Just! [wild8_scvrG];
                                                                                            } in 
                                                                                              f_scvrE
                                                                                                  sat_scvsl; } in
                                                                                  let {
                                                                                    sat_scvst [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        CCCS :! [sat_scvsm
                                                                                                 sat_scvss];
                                                                                  } in 
                                                                                    (#,,,#) [sat_scvst
                                                                                             sat_scvsz
                                                                                             sat_scvsF
                                                                                             sat_scvsL];
                                                                            };
                                                                      };
                                                                  : _ [Occ=Dead] _ [Occ=Dead] ->
                                                                      let {
                                                                        ds12_scvsO [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                          :: ([a_scrPx],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String])
                                                                        [LclId] =
                                                                            [w_scvjM
                                                                             w1_scvjN
                                                                             args_scvjR] \u []
                                                                                case
                                                                                    System.Console.GetOpt.$wgetOpt'
                                                                                        w_scvjM
                                                                                        w1_scvjN
                                                                                        args_scvjR
                                                                                of
                                                                                { (#,,,#) ww1_scvsQ [Occ=Once]
                                                                                          ww2_scvsR [Occ=Once]
                                                                                          ww3_scvsS [Occ=Once]
                                                                                          ww4_scvsT [Occ=Once] ->
                                                                                      (,,,) [ww1_scvsQ
                                                                                             ww2_scvsR
                                                                                             ww3_scvsS
                                                                                             ww4_scvsT];
                                                                                }; } in
                                                                      let {
                                                                        sat_scvtm [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds12_scvsO] \u []
                                                                                case ds12_scvsO of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        es_scvtl [Occ=Once] ->
                                                                                      es_scvtl;
                                                                                }; } in
                                                                      let {
                                                                        sat_scvtg [Occ=Once]
                                                                          :: GHC.Base.String
                                                                        [LclId] =
                                                                            [wild4_scvnb
                                                                             options_scvny] \u []
                                                                                let {
                                                                                  sat_scvtf [Occ=Once]
                                                                                    :: GHC.Base.String
                                                                                  [LclId] =
                                                                                      [wild4_scvnb] \u []
                                                                                          let {
                                                                                            sat_scvte [Occ=Once]
                                                                                              :: [GHC.Types.Char]
                                                                                            [LclId] =
                                                                                                [wild4_scvnb] \u []
                                                                                                    let {
                                                                                                      sat_scvtc [Occ=Once]
                                                                                                        :: [GHC.Types.Char]
                                                                                                      [LclId] =
                                                                                                          CCCS :! [wild4_scvnb
                                                                                                                   GHC.Types.[]]; } in
                                                                                                    let {
                                                                                                      sat_scvtd [Occ=Once]
                                                                                                        :: [GHC.Types.Char]
                                                                                                      [LclId] =
                                                                                                          CCCS :! [lvl21_rcsng
                                                                                                                   sat_scvtc];
                                                                                                    } in 
                                                                                                      GHC.Base.++
                                                                                                          sat_scvtd
                                                                                                          lvl24_rcsnk;
                                                                                          } in 
                                                                                            GHC.CString.unpackAppendCString#
                                                                                                lvl12_rcsn7
                                                                                                sat_scvte;
                                                                                } in 
                                                                                  System.Console.GetOpt.usageInfo
                                                                                      sat_scvtf
                                                                                      options_scvny; } in
                                                                      let {
                                                                        sat_scvtn [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            CCCS :! [sat_scvtg
                                                                                     sat_scvtm]; } in
                                                                      let {
                                                                        sat_scvtb [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds12_scvsO] \u []
                                                                                case ds12_scvsO of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        us_scvt9 [Occ=Once]
                                                                                        _ [Occ=Dead] ->
                                                                                      us_scvt9;
                                                                                }; } in
                                                                      let {
                                                                        sat_scvt5 [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds12_scvsO] \u []
                                                                                case ds12_scvsO of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        xs_scvt2 [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      xs_scvt2;
                                                                                }; } in
                                                                      let {
                                                                        sat_scvsZ [Occ=Once]
                                                                          :: [a_scrPx]
                                                                        [LclId] =
                                                                            [ds12_scvsO] \u []
                                                                                case ds12_scvsO of {
                                                                                  (,,,) os_scvsV [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      os_scvsV;
                                                                                };
                                                                      } in 
                                                                        (#,,,#) [sat_scvsZ
                                                                                 sat_scvt5
                                                                                 sat_scvtb
                                                                                 sat_scvtn];
                                                                };
                                                          };
                                                    };
                                              '-'# ->
                                                  case ds5_scvna of wild5_scvto {
                                                    [] ->
                                                        case w_scvjM of {
                                                          __DEFAULT ->
                                                              (#,,,#) [GHC.Types.[]
                                                                       args_scvjR
                                                                       GHC.Types.[]
                                                                       GHC.Types.[]];
                                                          System.Console.GetOpt.ReturnInOrder f_scvtq [Occ=Once] ->
                                                              let {
                                                                sat_scvtr [Occ=Once] :: [a_scrPx]
                                                                [LclId] =
                                                                    [args_scvjR f_scvtq] \u []
                                                                        GHC.Base.map
                                                                            f_scvtq args_scvjR;
                                                              } in 
                                                                (#,,,#) [sat_scvtr
                                                                         GHC.Types.[]
                                                                         GHC.Types.[]
                                                                         GHC.Types.[]];
                                                        };
                                                    : _ [Occ=Dead] _ [Occ=Dead] ->
                                                        let {
                                                          ds8_scvtu [Dmd=<L,U(1*U,1*U)>]
                                                            :: ([GHC.Types.Char], [GHC.Types.Char])
                                                          [LclId] =
                                                              [wild5_scvto] \u []
                                                                  case
                                                                      GHC.List.$wbreak
                                                                          lvl20_rcsnf wild5_scvto
                                                                  of
                                                                  { (#,#) ww1_scvtw [Occ=Once]
                                                                          ww2_scvtx [Occ=Once] ->
                                                                        (,) [ww1_scvtw ww2_scvtx];
                                                                  }; } in
                                                        let {
                                                          opt_scvty :: [GHC.Types.Char]
                                                          [LclId] =
                                                              [ds8_scvtu] \u []
                                                                  case ds8_scvtu of {
                                                                    (,) opt1_scvtA [Occ=Once]
                                                                        _ [Occ=Dead] ->
                                                                        opt1_scvtA;
                                                                  }; } in
                                                        let {
                                                          getWith_scvtC [Dmd=<C(S),C(U)>]
                                                            :: ([GHC.Types.Char]
                                                                -> GHC.Base.String
                                                                -> GHC.Types.Bool)
                                                               -> [System.Console.GetOpt.OptDescr
                                                                     a_scrPx]
                                                          [LclId,
                                                           Arity=1,
                                                           Str=<L,1*C1(C(U))>,
                                                           Unf=OtherCon []] =
                                                              sat-only [w1_scvjN
                                                                        opt_scvty] \r [p_scvtD]
                                                                  let {
                                                                    p1_scvtE [Occ=OnceL!,
                                                                              Dmd=<L,C(U)>]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Types.Bool
                                                                    [LclId] =
                                                                        [opt_scvty p_scvtD] \u []
                                                                            p_scvtD opt_scvty; } in
                                                                  let {
                                                                    go_scvtF [Occ=LoopBreaker]
                                                                      :: [System.Console.GetOpt.OptDescr
                                                                            a_scrPx]
                                                                         -> [System.Console.GetOpt.OptDescr
                                                                               a_scrPx]
                                                                    [LclId,
                                                                     Arity=1,
                                                                     Str=<S,1*U>,
                                                                     Unf=OtherCon []] =
                                                                        sat-only [p1_scvtE
                                                                                  go_scvtF] \r [ds9_scvtG]
                                                                            case ds9_scvtG of {
                                                                              [] -> [] [];
                                                                              : y_scvtI [Occ=Once!]
                                                                                ys_scvtJ ->
                                                                                  case
                                                                                      y_scvtI
                                                                                  of
                                                                                  wild7_scvtK
                                                                                  { System.Console.GetOpt.Option _ [Occ=Dead]
                                                                                                                 xs_scvtM [Occ=Once]
                                                                                                                 _ [Occ=Dead]
                                                                                                                 _ [Occ=Dead] ->
                                                                                        let-no-escape {
                                                                                          exit_scvtP [Occ=OnceLT[0]]
                                                                                            :: [System.Console.GetOpt.OptDescr
                                                                                                  a_scrPx]
                                                                                          [LclId[JoinId(0)],
                                                                                           Unf=OtherCon []] =
                                                                                              [go_scvtF
                                                                                               ys_scvtJ] \r []
                                                                                                  go_scvtF
                                                                                                      ys_scvtJ;
                                                                                        } in 
                                                                                          let-no-escape {
                                                                                            exit1_scvtQ [Occ=OnceLT[0]]
                                                                                              :: [System.Console.GetOpt.OptDescr
                                                                                                    a_scrPx]
                                                                                            [LclId[JoinId(0)],
                                                                                             Unf=OtherCon []] =
                                                                                                [go_scvtF
                                                                                                 ys_scvtJ
                                                                                                 wild7_scvtK] \r []
                                                                                                    let {
                                                                                                      sat_scvtR [Occ=Once]
                                                                                                        :: [System.Console.GetOpt.OptDescr
                                                                                                              a_scrPx]
                                                                                                      [LclId] =
                                                                                                          [go_scvtF
                                                                                                           ys_scvtJ] \u []
                                                                                                              go_scvtF
                                                                                                                  ys_scvtJ;
                                                                                                    } in 
                                                                                                      : [wild7_scvtK
                                                                                                         sat_scvtR];
                                                                                          } in 
                                                                                            let-no-escape {
                                                                                              go1_scvtS [Occ=LoopBreakerT[1]]
                                                                                                :: [GHC.Base.String]
                                                                                                   -> [System.Console.GetOpt.OptDescr
                                                                                                         a_scrPx]
                                                                                              [LclId[JoinId(1)],
                                                                                               Arity=1,
                                                                                               Str=<S,1*U>,
                                                                                               Unf=OtherCon []] =
                                                                                                  sat-only [p1_scvtE
                                                                                                            exit_scvtP
                                                                                                            exit1_scvtQ
                                                                                                            go1_scvtS] \r [ds13_scvtT]
                                                                                                      case
                                                                                                          ds13_scvtT
                                                                                                      of
                                                                                                      { [] ->
                                                                                                            exit_scvtP;
                                                                                                        : y1_scvtV [Occ=Once]
                                                                                                          ys1_scvtW [Occ=Once] ->
                                                                                                            case
                                                                                                                p1_scvtE
                                                                                                                    y1_scvtV
                                                                                                            of
                                                                                                            { GHC.Types.False ->
                                                                                                                  go1_scvtS
                                                                                                                      ys1_scvtW;
                                                                                                              GHC.Types.True ->
                                                                                                                  exit1_scvtQ;
                                                                                                            };
                                                                                                      };
                                                                                            } in 
                                                                                              go1_scvtS
                                                                                                  xs_scvtM;
                                                                                  };
                                                                            };
                                                                  } in  go_scvtF w1_scvjN;
                                                        } in 
                                                          let-no-escape {
                                                            $j_scvtY [Occ=Once*!T[1],
                                                                      Dmd=<C(S),1*C1(U(U,U,U,U))>]
                                                              :: [System.Console.GetOpt.OptDescr
                                                                    a_scrPx]
                                                                 -> (# [a_scrPx], [GHC.Base.String],
                                                                       [GHC.Base.String],
                                                                       [GHC.Base.String] #)
                                                            [LclId[JoinId(1)],
                                                             Arity=1,
                                                             Str=<S,U>,
                                                             Unf=OtherCon []] =
                                                                sat-only [w_scvjM
                                                                          w1_scvjN
                                                                          args_scvjR
                                                                          wild5_scvto
                                                                          ds8_scvtu
                                                                          opt_scvty] \r [options_scvtZ]
                                                                    case
                                                                        poly_go_rcsnj options_scvtZ
                                                                    of
                                                                    { [] ->
                                                                          let {
                                                                            ds9_scvu1 [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                              :: ([a_scrPx],
                                                                                  [GHC.Base.String],
                                                                                  [GHC.Base.String],
                                                                                  [GHC.Base.String])
                                                                            [LclId] =
                                                                                [w_scvjM
                                                                                 w1_scvjN
                                                                                 args_scvjR] \u []
                                                                                    case
                                                                                        System.Console.GetOpt.$wgetOpt'
                                                                                            w_scvjM
                                                                                            w1_scvjN
                                                                                            args_scvjR
                                                                                    of
                                                                                    { (#,,,#) ww1_scvu3 [Occ=Once]
                                                                                              ww2_scvu4 [Occ=Once]
                                                                                              ww3_scvu5 [Occ=Once]
                                                                                              ww4_scvu6 [Occ=Once] ->
                                                                                          (,,,) [ww1_scvu3
                                                                                                 ww2_scvu4
                                                                                                 ww3_scvu5
                                                                                                 ww4_scvu6];
                                                                                    }; } in
                                                                          let {
                                                                            sat_scvuw [Occ=Once]
                                                                              :: [GHC.Base.String]
                                                                            [LclId] =
                                                                                [ds9_scvu1] \u []
                                                                                    case
                                                                                        ds9_scvu1
                                                                                    of
                                                                                    { (,,,) _ [Occ=Dead]
                                                                                            _ [Occ=Dead]
                                                                                            _ [Occ=Dead]
                                                                                            es_scvuv [Occ=Once] ->
                                                                                          es_scvuv;
                                                                                    }; } in
                                                                          let {
                                                                            sat_scvup [Occ=Once]
                                                                              :: [GHC.Base.String]
                                                                            [LclId] =
                                                                                [ds9_scvu1] \u []
                                                                                    case
                                                                                        ds9_scvu1
                                                                                    of
                                                                                    { (,,,) _ [Occ=Dead]
                                                                                            _ [Occ=Dead]
                                                                                            us_scvun [Occ=Once]
                                                                                            _ [Occ=Dead] ->
                                                                                          us_scvun;
                                                                                    }; } in
                                                                          let {
                                                                            sat_scvuj [Occ=Once]
                                                                              :: GHC.Base.String
                                                                            [LclId] =
                                                                                [wild5_scvto] \u []
                                                                                    GHC.CString.unpackAppendCString#
                                                                                        lvl6_rcsn1
                                                                                        wild5_scvto; } in
                                                                          let {
                                                                            sat_scvuq [Occ=Once]
                                                                              :: [GHC.Base.String]
                                                                            [LclId] =
                                                                                CCCS :! [sat_scvuj
                                                                                         sat_scvup]; } in
                                                                          let {
                                                                            sat_scvui [Occ=Once]
                                                                              :: [GHC.Base.String]
                                                                            [LclId] =
                                                                                [ds9_scvu1] \u []
                                                                                    case
                                                                                        ds9_scvu1
                                                                                    of
                                                                                    { (,,,) _ [Occ=Dead]
                                                                                            xs_scvuf [Occ=Once]
                                                                                            _ [Occ=Dead]
                                                                                            _ [Occ=Dead] ->
                                                                                          xs_scvuf;
                                                                                    }; } in
                                                                          let {
                                                                            sat_scvuc [Occ=Once]
                                                                              :: [a_scrPx]
                                                                            [LclId] =
                                                                                [ds9_scvu1] \u []
                                                                                    case
                                                                                        ds9_scvu1
                                                                                    of
                                                                                    { (,,,) os_scvu8 [Occ=Once]
                                                                                            _ [Occ=Dead]
                                                                                            _ [Occ=Dead]
                                                                                            _ [Occ=Dead] ->
                                                                                          os_scvu8;
                                                                                    };
                                                                          } in 
                                                                            (#,,,#) [sat_scvuc
                                                                                     sat_scvui
                                                                                     sat_scvuq
                                                                                     sat_scvuw];
                                                                      : ds9_scvux [Occ=Once!]
                                                                        ds10_scvuy [Occ=Once!] ->
                                                                          case ds10_scvuy of {
                                                                            [] ->
                                                                                case ds9_scvux of {
                                                                                  System.Console.GetOpt.NoArg a1_scvuB [Occ=Once] ->
                                                                                      case
                                                                                          ds8_scvtu
                                                                                      of
                                                                                      { (,) _ [Occ=Dead]
                                                                                            arg1_scvuE [Occ=Once!] ->
                                                                                            case
                                                                                                arg1_scvuE
                                                                                            of
                                                                                            { [] ->
                                                                                                  let {
                                                                                                    ds11_scvuG [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                      :: ([a_scrPx],
                                                                                                          [GHC.Base.String],
                                                                                                          [GHC.Base.String],
                                                                                                          [GHC.Base.String])
                                                                                                    [LclId] =
                                                                                                        [w_scvjM
                                                                                                         w1_scvjN
                                                                                                         args_scvjR] \u []
                                                                                                            case
                                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                                    w_scvjM
                                                                                                                    w1_scvjN
                                                                                                                    args_scvjR
                                                                                                            of
                                                                                                            { (#,,,#) ww1_scvuI [Occ=Once]
                                                                                                                      ww2_scvuJ [Occ=Once]
                                                                                                                      ww3_scvuK [Occ=Once]
                                                                                                                      ww4_scvuL [Occ=Once] ->
                                                                                                                  (,,,) [ww1_scvuI
                                                                                                                         ww2_scvuJ
                                                                                                                         ww3_scvuK
                                                                                                                         ww4_scvuL];
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scvva [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds11_scvuG] \u []
                                                                                                            case
                                                                                                                ds11_scvuG
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    es_scvv9 [Occ=Once] ->
                                                                                                                  es_scvv9;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scvv4 [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds11_scvuG] \u []
                                                                                                            case
                                                                                                                ds11_scvuG
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    us_scvv2 [Occ=Once]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  us_scvv2;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scvuY [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds11_scvuG] \u []
                                                                                                            case
                                                                                                                ds11_scvuG
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    xs_scvuV [Occ=Once]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  xs_scvuV;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scvuR [Occ=Once]
                                                                                                      :: [a_scrPx]
                                                                                                    [LclId] =
                                                                                                        [ds11_scvuG] \u []
                                                                                                            case
                                                                                                                ds11_scvuG
                                                                                                            of
                                                                                                            { (,,,) os_scvuN [Occ=Once]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  os_scvuN;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scvuS [Occ=Once]
                                                                                                      :: [a_scrPx]
                                                                                                    [LclId] =
                                                                                                        CCCS :! [a1_scvuB
                                                                                                                 sat_scvuR];
                                                                                                  } in 
                                                                                                    (#,,,#) [sat_scvuS
                                                                                                             sat_scvuY
                                                                                                             sat_scvv4
                                                                                                             sat_scvva];
                                                                                              : ds11_scvvb [Occ=Once!]
                                                                                                _ [Occ=Dead] ->
                                                                                                  case
                                                                                                      ds11_scvvb
                                                                                                  of
                                                                                                  { GHC.Types.C# ds13_scvve [Occ=Once!] ->
                                                                                                        case
                                                                                                            ds13_scvve
                                                                                                        of
                                                                                                        { __DEFAULT ->
                                                                                                              let {
                                                                                                                ds15_scvvg [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scvjM
                                                                                                                     w1_scvjN
                                                                                                                     args_scvjR] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scvjM
                                                                                                                                w1_scvjN
                                                                                                                                args_scvjR
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scvvi [Occ=Once]
                                                                                                                                  ww2_scvvj [Occ=Once]
                                                                                                                                  ww3_scvvk [Occ=Once]
                                                                                                                                  ww4_scvvl [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scvvi
                                                                                                                                     ww2_scvvj
                                                                                                                                     ww3_scvvk
                                                                                                                                     ww4_scvvl];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvvL [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvvg] \u []
                                                                                                                        case
                                                                                                                            ds15_scvvg
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scvvK [Occ=Once] ->
                                                                                                                              es_scvvK;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvvE [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvvg] \u []
                                                                                                                        case
                                                                                                                            ds15_scvvg
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scvvC [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scvvC;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvvy [Occ=Once]
                                                                                                                  :: GHC.Base.String
                                                                                                                [LclId] =
                                                                                                                    [wild5_scvto] \u []
                                                                                                                        GHC.CString.unpackAppendCString#
                                                                                                                            lvl6_rcsn1
                                                                                                                            wild5_scvto; } in
                                                                                                              let {
                                                                                                                sat_scvvF [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scvvy
                                                                                                                             sat_scvvE]; } in
                                                                                                              let {
                                                                                                                sat_scvvx [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvvg] \u []
                                                                                                                        case
                                                                                                                            ds15_scvvg
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs_scvvu [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs_scvvu;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvvr [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvvg] \u []
                                                                                                                        case
                                                                                                                            ds15_scvvg
                                                                                                                        of
                                                                                                                        { (,,,) os_scvvn [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scvvn;
                                                                                                                        };
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scvvr
                                                                                                                         sat_scvvx
                                                                                                                         sat_scvvF
                                                                                                                         sat_scvvL];
                                                                                                          '='# ->
                                                                                                              let {
                                                                                                                ds15_scvvM [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scvjM
                                                                                                                     w1_scvjN
                                                                                                                     args_scvjR] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scvjM
                                                                                                                                w1_scvjN
                                                                                                                                args_scvjR
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scvvO [Occ=Once]
                                                                                                                                  ww2_scvvP [Occ=Once]
                                                                                                                                  ww3_scvvQ [Occ=Once]
                                                                                                                                  ww4_scvvR [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scvvO
                                                                                                                                     ww2_scvvP
                                                                                                                                     ww3_scvvQ
                                                                                                                                     ww4_scvvR];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvwh [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvvM] \u []
                                                                                                                        case
                                                                                                                            ds15_scvvM
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scvwg [Occ=Once] ->
                                                                                                                              es_scvwg;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvwb [Occ=Once]
                                                                                                                  :: GHC.Base.String
                                                                                                                [LclId] =
                                                                                                                    [opt_scvty] \u []
                                                                                                                        let {
                                                                                                                          sat_scvwa [Occ=Once]
                                                                                                                            :: [GHC.Types.Char]
                                                                                                                          [LclId] =
                                                                                                                              [opt_scvty] \u []
                                                                                                                                  GHC.Base.++
                                                                                                                                      opt_scvty
                                                                                                                                      lvl22_rcsnh;
                                                                                                                        } in 
                                                                                                                          GHC.CString.unpackAppendCString#
                                                                                                                              lvl23_rcsni
                                                                                                                              sat_scvwa; } in
                                                                                                              let {
                                                                                                                sat_scvwi [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scvwb
                                                                                                                             sat_scvwh]; } in
                                                                                                              let {
                                                                                                                sat_scvw9 [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvvM] \u []
                                                                                                                        case
                                                                                                                            ds15_scvvM
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scvw7 [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scvw7;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvw3 [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvvM] \u []
                                                                                                                        case
                                                                                                                            ds15_scvvM
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs_scvw0 [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs_scvw0;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvvX [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvvM] \u []
                                                                                                                        case
                                                                                                                            ds15_scvvM
                                                                                                                        of
                                                                                                                        { (,,,) os_scvvT [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scvvT;
                                                                                                                        };
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scvvX
                                                                                                                         sat_scvw3
                                                                                                                         sat_scvw9
                                                                                                                         sat_scvwi];
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                  System.Console.GetOpt.ReqArg ds11_scvwj [Occ=Once*!]
                                                                                                               d_scvwk [Occ=Once] ->
                                                                                      case
                                                                                          ds8_scvtu
                                                                                      of
                                                                                      { (,) _ [Occ=Dead]
                                                                                            arg1_scvwn [Occ=Once!] ->
                                                                                            case
                                                                                                arg1_scvwn
                                                                                            of
                                                                                            { [] ->
                                                                                                  case
                                                                                                      args_scvjR
                                                                                                  of
                                                                                                  { [] ->
                                                                                                        let {
                                                                                                          ds12_scvwq [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                            :: ([a_scrPx],
                                                                                                                [GHC.Base.String],
                                                                                                                [GHC.Base.String],
                                                                                                                [GHC.Base.String])
                                                                                                          [LclId] =
                                                                                                              [w_scvjM
                                                                                                               w1_scvjN] \u []
                                                                                                                  case
                                                                                                                      System.Console.GetOpt.$wgetOpt'
                                                                                                                          w_scvjM
                                                                                                                          w1_scvjN
                                                                                                                          GHC.Types.[]
                                                                                                                  of
                                                                                                                  { (#,,,#) ww1_scvws [Occ=Once]
                                                                                                                            ww2_scvwt [Occ=Once]
                                                                                                                            ww3_scvwu [Occ=Once]
                                                                                                                            ww4_scvwv [Occ=Once] ->
                                                                                                                        (,,,) [ww1_scvws
                                                                                                                               ww2_scvwt
                                                                                                                               ww3_scvwu
                                                                                                                               ww4_scvwv];
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scvwY [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scvwq] \u []
                                                                                                                  case
                                                                                                                      ds12_scvwq
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          es_scvwX [Occ=Once] ->
                                                                                                                        es_scvwX;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scvwS [Occ=Once]
                                                                                                            :: GHC.Base.String
                                                                                                          [LclId] =
                                                                                                              [opt_scvty
                                                                                                               d_scvwk] \u []
                                                                                                                  let {
                                                                                                                    sat_scvwR [Occ=Once]
                                                                                                                      :: [GHC.Types.Char]
                                                                                                                    [LclId] =
                                                                                                                        [opt_scvty
                                                                                                                         d_scvwk] \u []
                                                                                                                            let {
                                                                                                                              sat_scvwQ [Occ=Once,
                                                                                                                                         Dmd=<L,1*U>]
                                                                                                                                :: [GHC.Types.Char]
                                                                                                                              [LclId] =
                                                                                                                                  [d_scvwk] \s []
                                                                                                                                      let {
                                                                                                                                        sat_scvwP [Occ=Once]
                                                                                                                                          :: [GHC.Types.Char]
                                                                                                                                        [LclId] =
                                                                                                                                            [d_scvwk] \u []
                                                                                                                                                GHC.Base.++
                                                                                                                                                    d_scvwk
                                                                                                                                                    lvl16_rcsnb;
                                                                                                                                      } in 
                                                                                                                                        GHC.CString.unpackAppendCString#
                                                                                                                                            lvl14_rcsn9
                                                                                                                                            sat_scvwP;
                                                                                                                            } in 
                                                                                                                              case
                                                                                                                                  GHC.CString.unpackAppendCString#
                                                                                                                                      lvl6_rcsn1
                                                                                                                                      opt_scvty
                                                                                                                              of
                                                                                                                              sat_scvwO
                                                                                                                              { __DEFAULT ->
                                                                                                                                    GHC.Base.++
                                                                                                                                        sat_scvwO
                                                                                                                                        sat_scvwQ;
                                                                                                                              };
                                                                                                                  } in 
                                                                                                                    GHC.CString.unpackAppendCString#
                                                                                                                        lvl12_rcsn7
                                                                                                                        sat_scvwR; } in
                                                                                                        let {
                                                                                                          sat_scvwZ [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              CCCS :! [sat_scvwS
                                                                                                                       sat_scvwY]; } in
                                                                                                        let {
                                                                                                          sat_scvwN [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scvwq] \u []
                                                                                                                  case
                                                                                                                      ds12_scvwq
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          us_scvwL [Occ=Once]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        us_scvwL;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scvwH [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scvwq] \u []
                                                                                                                  case
                                                                                                                      ds12_scvwq
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          xs_scvwE [Occ=Once]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        xs_scvwE;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scvwB [Occ=Once]
                                                                                                            :: [a_scrPx]
                                                                                                          [LclId] =
                                                                                                              [ds12_scvwq] \u []
                                                                                                                  case
                                                                                                                      ds12_scvwq
                                                                                                                  of
                                                                                                                  { (,,,) os_scvwx [Occ=Once]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        os_scvwx;
                                                                                                                  };
                                                                                                        } in 
                                                                                                          (#,,,#) [sat_scvwB
                                                                                                                   sat_scvwH
                                                                                                                   sat_scvwN
                                                                                                                   sat_scvwZ];
                                                                                                    : r_scvx0 [Occ=Once]
                                                                                                      rest_scvx1 [Occ=Once] ->
                                                                                                        let {
                                                                                                          ds12_scvx2 [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                            :: ([a_scrPx],
                                                                                                                [GHC.Base.String],
                                                                                                                [GHC.Base.String],
                                                                                                                [GHC.Base.String])
                                                                                                          [LclId] =
                                                                                                              [w_scvjM
                                                                                                               w1_scvjN
                                                                                                               rest_scvx1] \u []
                                                                                                                  case
                                                                                                                      System.Console.GetOpt.$wgetOpt'
                                                                                                                          w_scvjM
                                                                                                                          w1_scvjN
                                                                                                                          rest_scvx1
                                                                                                                  of
                                                                                                                  { (#,,,#) ww1_scvx4 [Occ=Once]
                                                                                                                            ww2_scvx5 [Occ=Once]
                                                                                                                            ww3_scvx6 [Occ=Once]
                                                                                                                            ww4_scvx7 [Occ=Once] ->
                                                                                                                        (,,,) [ww1_scvx4
                                                                                                                               ww2_scvx5
                                                                                                                               ww3_scvx6
                                                                                                                               ww4_scvx7];
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scvxx [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scvx2] \u []
                                                                                                                  case
                                                                                                                      ds12_scvx2
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          es_scvxw [Occ=Once] ->
                                                                                                                        es_scvxw;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scvxr [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scvx2] \u []
                                                                                                                  case
                                                                                                                      ds12_scvx2
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          us_scvxp [Occ=Once]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        us_scvxp;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scvxl [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scvx2] \u []
                                                                                                                  case
                                                                                                                      ds12_scvx2
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          xs_scvxi [Occ=Once]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        xs_scvxi;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scvxe [Occ=Once]
                                                                                                            :: [a_scrPx]
                                                                                                          [LclId] =
                                                                                                              [ds12_scvx2] \u []
                                                                                                                  case
                                                                                                                      ds12_scvx2
                                                                                                                  of
                                                                                                                  { (,,,) os_scvxa [Occ=Once]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        os_scvxa;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scvx8 [Occ=Once]
                                                                                                            :: a_scrPx
                                                                                                          [LclId] =
                                                                                                              [ds11_scvwj
                                                                                                               r_scvx0] \u []
                                                                                                                  ds11_scvwj
                                                                                                                      r_scvx0; } in
                                                                                                        let {
                                                                                                          sat_scvxf [Occ=Once]
                                                                                                            :: [a_scrPx]
                                                                                                          [LclId] =
                                                                                                              CCCS :! [sat_scvx8
                                                                                                                       sat_scvxe];
                                                                                                        } in 
                                                                                                          (#,,,#) [sat_scvxf
                                                                                                                   sat_scvxl
                                                                                                                   sat_scvxr
                                                                                                                   sat_scvxx];
                                                                                                  };
                                                                                              : ds12_scvxy [Occ=Once!]
                                                                                                xs_scvxz [Occ=Once] ->
                                                                                                  case
                                                                                                      ds12_scvxy
                                                                                                  of
                                                                                                  { GHC.Types.C# ds13_scvxB [Occ=Once!] ->
                                                                                                        case
                                                                                                            ds13_scvxB
                                                                                                        of
                                                                                                        { __DEFAULT ->
                                                                                                              let {
                                                                                                                ds15_scvxD [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scvjM
                                                                                                                     w1_scvjN
                                                                                                                     args_scvjR] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scvjM
                                                                                                                                w1_scvjN
                                                                                                                                args_scvjR
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scvxF [Occ=Once]
                                                                                                                                  ww2_scvxG [Occ=Once]
                                                                                                                                  ww3_scvxH [Occ=Once]
                                                                                                                                  ww4_scvxI [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scvxF
                                                                                                                                     ww2_scvxG
                                                                                                                                     ww3_scvxH
                                                                                                                                     ww4_scvxI];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvy8 [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvxD] \u []
                                                                                                                        case
                                                                                                                            ds15_scvxD
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scvy7 [Occ=Once] ->
                                                                                                                              es_scvy7;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvy1 [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvxD] \u []
                                                                                                                        case
                                                                                                                            ds15_scvxD
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scvxZ [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scvxZ;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvxV [Occ=Once]
                                                                                                                  :: GHC.Base.String
                                                                                                                [LclId] =
                                                                                                                    [wild5_scvto] \u []
                                                                                                                        GHC.CString.unpackAppendCString#
                                                                                                                            lvl6_rcsn1
                                                                                                                            wild5_scvto; } in
                                                                                                              let {
                                                                                                                sat_scvy2 [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scvxV
                                                                                                                             sat_scvy1]; } in
                                                                                                              let {
                                                                                                                sat_scvxU [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvxD] \u []
                                                                                                                        case
                                                                                                                            ds15_scvxD
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs1_scvxR [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs1_scvxR;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvxO [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvxD] \u []
                                                                                                                        case
                                                                                                                            ds15_scvxD
                                                                                                                        of
                                                                                                                        { (,,,) os_scvxK [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scvxK;
                                                                                                                        };
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scvxO
                                                                                                                         sat_scvxU
                                                                                                                         sat_scvy2
                                                                                                                         sat_scvy8];
                                                                                                          '='# ->
                                                                                                              let {
                                                                                                                ds15_scvy9 [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scvjM
                                                                                                                     w1_scvjN
                                                                                                                     args_scvjR] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scvjM
                                                                                                                                w1_scvjN
                                                                                                                                args_scvjR
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scvyb [Occ=Once]
                                                                                                                                  ww2_scvyc [Occ=Once]
                                                                                                                                  ww3_scvyd [Occ=Once]
                                                                                                                                  ww4_scvye [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scvyb
                                                                                                                                     ww2_scvyc
                                                                                                                                     ww3_scvyd
                                                                                                                                     ww4_scvye];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvyE [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvy9] \u []
                                                                                                                        case
                                                                                                                            ds15_scvy9
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scvyD [Occ=Once] ->
                                                                                                                              es_scvyD;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvyy [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvy9] \u []
                                                                                                                        case
                                                                                                                            ds15_scvy9
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scvyw [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scvyw;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvys [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvy9] \u []
                                                                                                                        case
                                                                                                                            ds15_scvy9
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs1_scvyp [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs1_scvyp;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvyl [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvy9] \u []
                                                                                                                        case
                                                                                                                            ds15_scvy9
                                                                                                                        of
                                                                                                                        { (,,,) os_scvyh [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scvyh;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvyf [Occ=Once]
                                                                                                                  :: a_scrPx
                                                                                                                [LclId] =
                                                                                                                    [ds11_scvwj
                                                                                                                     xs_scvxz] \u []
                                                                                                                        ds11_scvwj
                                                                                                                            xs_scvxz; } in
                                                                                                              let {
                                                                                                                sat_scvym [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scvyf
                                                                                                                             sat_scvyl];
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scvym
                                                                                                                         sat_scvys
                                                                                                                         sat_scvyy
                                                                                                                         sat_scvyE];
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                  System.Console.GetOpt.OptArg f_scvyF [Occ=Once*!]
                                                                                                               _ [Occ=Dead] ->
                                                                                      case
                                                                                          ds8_scvtu
                                                                                      of
                                                                                      { (,) _ [Occ=Dead]
                                                                                            arg1_scvyJ [Occ=Once!] ->
                                                                                            case
                                                                                                arg1_scvyJ
                                                                                            of
                                                                                            { [] ->
                                                                                                  let {
                                                                                                    ds12_scvyL [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                      :: ([a_scrPx],
                                                                                                          [GHC.Base.String],
                                                                                                          [GHC.Base.String],
                                                                                                          [GHC.Base.String])
                                                                                                    [LclId] =
                                                                                                        [w_scvjM
                                                                                                         w1_scvjN
                                                                                                         args_scvjR] \u []
                                                                                                            case
                                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                                    w_scvjM
                                                                                                                    w1_scvjN
                                                                                                                    args_scvjR
                                                                                                            of
                                                                                                            { (#,,,#) ww1_scvyN [Occ=Once]
                                                                                                                      ww2_scvyO [Occ=Once]
                                                                                                                      ww3_scvyP [Occ=Once]
                                                                                                                      ww4_scvyQ [Occ=Once] ->
                                                                                                                  (,,,) [ww1_scvyN
                                                                                                                         ww2_scvyO
                                                                                                                         ww3_scvyP
                                                                                                                         ww4_scvyQ];
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scvzg [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds12_scvyL] \u []
                                                                                                            case
                                                                                                                ds12_scvyL
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    es_scvzf [Occ=Once] ->
                                                                                                                  es_scvzf;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scvza [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds12_scvyL] \u []
                                                                                                            case
                                                                                                                ds12_scvyL
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    us_scvz8 [Occ=Once]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  us_scvz8;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scvz4 [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds12_scvyL] \u []
                                                                                                            case
                                                                                                                ds12_scvyL
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    xs_scvz1 [Occ=Once]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  xs_scvz1;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scvyX [Occ=Once]
                                                                                                      :: [a_scrPx]
                                                                                                    [LclId] =
                                                                                                        [ds12_scvyL] \u []
                                                                                                            case
                                                                                                                ds12_scvyL
                                                                                                            of
                                                                                                            { (,,,) os_scvyT [Occ=Once]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  os_scvyT;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scvyR [Occ=Once]
                                                                                                      :: a_scrPx
                                                                                                    [LclId] =
                                                                                                        [f_scvyF] \u []
                                                                                                            f_scvyF
                                                                                                                GHC.Base.Nothing; } in
                                                                                                  let {
                                                                                                    sat_scvyY [Occ=Once]
                                                                                                      :: [a_scrPx]
                                                                                                    [LclId] =
                                                                                                        CCCS :! [sat_scvyR
                                                                                                                 sat_scvyX];
                                                                                                  } in 
                                                                                                    (#,,,#) [sat_scvyY
                                                                                                             sat_scvz4
                                                                                                             sat_scvza
                                                                                                             sat_scvzg];
                                                                                              : ds12_scvzh [Occ=Once!]
                                                                                                xs_scvzi [Occ=Once] ->
                                                                                                  case
                                                                                                      ds12_scvzh
                                                                                                  of
                                                                                                  { GHC.Types.C# ds13_scvzk [Occ=Once!] ->
                                                                                                        case
                                                                                                            ds13_scvzk
                                                                                                        of
                                                                                                        { __DEFAULT ->
                                                                                                              let {
                                                                                                                ds15_scvzm [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scvjM
                                                                                                                     w1_scvjN
                                                                                                                     args_scvjR] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scvjM
                                                                                                                                w1_scvjN
                                                                                                                                args_scvjR
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scvzo [Occ=Once]
                                                                                                                                  ww2_scvzp [Occ=Once]
                                                                                                                                  ww3_scvzq [Occ=Once]
                                                                                                                                  ww4_scvzr [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scvzo
                                                                                                                                     ww2_scvzp
                                                                                                                                     ww3_scvzq
                                                                                                                                     ww4_scvzr];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvzR [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvzm] \u []
                                                                                                                        case
                                                                                                                            ds15_scvzm
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scvzQ [Occ=Once] ->
                                                                                                                              es_scvzQ;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvzK [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvzm] \u []
                                                                                                                        case
                                                                                                                            ds15_scvzm
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scvzI [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scvzI;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvzE [Occ=Once]
                                                                                                                  :: GHC.Base.String
                                                                                                                [LclId] =
                                                                                                                    [wild5_scvto] \u []
                                                                                                                        GHC.CString.unpackAppendCString#
                                                                                                                            lvl6_rcsn1
                                                                                                                            wild5_scvto; } in
                                                                                                              let {
                                                                                                                sat_scvzL [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scvzE
                                                                                                                             sat_scvzK]; } in
                                                                                                              let {
                                                                                                                sat_scvzD [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvzm] \u []
                                                                                                                        case
                                                                                                                            ds15_scvzm
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs1_scvzA [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs1_scvzA;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvzx [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvzm] \u []
                                                                                                                        case
                                                                                                                            ds15_scvzm
                                                                                                                        of
                                                                                                                        { (,,,) os_scvzt [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scvzt;
                                                                                                                        };
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scvzx
                                                                                                                         sat_scvzD
                                                                                                                         sat_scvzL
                                                                                                                         sat_scvzR];
                                                                                                          '='# ->
                                                                                                              let {
                                                                                                                ds15_scvzS [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scvjM
                                                                                                                     w1_scvjN
                                                                                                                     args_scvjR] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scvjM
                                                                                                                                w1_scvjN
                                                                                                                                args_scvjR
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scvzU [Occ=Once]
                                                                                                                                  ww2_scvzV [Occ=Once]
                                                                                                                                  ww3_scvzW [Occ=Once]
                                                                                                                                  ww4_scvzX [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scvzU
                                                                                                                                     ww2_scvzV
                                                                                                                                     ww3_scvzW
                                                                                                                                     ww4_scvzX];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvAo [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvzS] \u []
                                                                                                                        case
                                                                                                                            ds15_scvzS
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scvAn [Occ=Once] ->
                                                                                                                              es_scvAn;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvAi [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvzS] \u []
                                                                                                                        case
                                                                                                                            ds15_scvzS
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scvAg [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scvAg;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvAc [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvzS] \u []
                                                                                                                        case
                                                                                                                            ds15_scvzS
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs1_scvA9 [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs1_scvA9;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvA5 [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvzS] \u []
                                                                                                                        case
                                                                                                                            ds15_scvzS
                                                                                                                        of
                                                                                                                        { (,,,) os_scvA1 [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scvA1;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvzZ [Occ=Once]
                                                                                                                  :: a_scrPx
                                                                                                                [LclId] =
                                                                                                                    [f_scvyF
                                                                                                                     xs_scvzi] \u []
                                                                                                                        let {
                                                                                                                          sat_scvzY [Occ=Once]
                                                                                                                            :: GHC.Base.Maybe
                                                                                                                                 GHC.Base.String
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Base.Just! [xs_scvzi];
                                                                                                                        } in 
                                                                                                                          f_scvyF
                                                                                                                              sat_scvzY; } in
                                                                                                              let {
                                                                                                                sat_scvA6 [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scvzZ
                                                                                                                             sat_scvA5];
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scvA6
                                                                                                                         sat_scvAc
                                                                                                                         sat_scvAi
                                                                                                                         sat_scvAo];
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                            : _ [Occ=Dead]
                                                                              _ [Occ=Dead] ->
                                                                                let {
                                                                                  ds13_scvAr [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                    :: ([a_scrPx],
                                                                                        [GHC.Base.String],
                                                                                        [GHC.Base.String],
                                                                                        [GHC.Base.String])
                                                                                  [LclId] =
                                                                                      [w_scvjM
                                                                                       w1_scvjN
                                                                                       args_scvjR] \u []
                                                                                          case
                                                                                              System.Console.GetOpt.$wgetOpt'
                                                                                                  w_scvjM
                                                                                                  w1_scvjN
                                                                                                  args_scvjR
                                                                                          of
                                                                                          { (#,,,#) ww1_scvAt [Occ=Once]
                                                                                                    ww2_scvAu [Occ=Once]
                                                                                                    ww3_scvAv [Occ=Once]
                                                                                                    ww4_scvAw [Occ=Once] ->
                                                                                                (,,,) [ww1_scvAt
                                                                                                       ww2_scvAu
                                                                                                       ww3_scvAv
                                                                                                       ww4_scvAw];
                                                                                          }; } in
                                                                                let {
                                                                                  sat_scvAY [Occ=Once]
                                                                                    :: [GHC.Base.String]
                                                                                  [LclId] =
                                                                                      [ds13_scvAr] \u []
                                                                                          case
                                                                                              ds13_scvAr
                                                                                          of
                                                                                          { (,,,) _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  es_scvAX [Occ=Once] ->
                                                                                                es_scvAX;
                                                                                          }; } in
                                                                                let {
                                                                                  sat_scvAS [Occ=Once]
                                                                                    :: GHC.Base.String
                                                                                  [LclId] =
                                                                                      [opt_scvty
                                                                                       options_scvtZ] \u []
                                                                                          let {
                                                                                            sat_scvAR [Occ=Once]
                                                                                              :: GHC.Base.String
                                                                                            [LclId] =
                                                                                                [opt_scvty] \u []
                                                                                                    let {
                                                                                                      sat_scvAQ [Occ=Once]
                                                                                                        :: [GHC.Types.Char]
                                                                                                      [LclId] =
                                                                                                          [opt_scvty] \u []
                                                                                                              case
                                                                                                                  GHC.CString.unpackAppendCString#
                                                                                                                      lvl6_rcsn1
                                                                                                                      opt_scvty
                                                                                                              of
                                                                                                              sat_scvAP
                                                                                                              { __DEFAULT ->
                                                                                                                    GHC.Base.++
                                                                                                                        sat_scvAP
                                                                                                                        lvl24_rcsnk;
                                                                                                              };
                                                                                                    } in 
                                                                                                      GHC.CString.unpackAppendCString#
                                                                                                          lvl12_rcsn7
                                                                                                          sat_scvAQ;
                                                                                          } in 
                                                                                            System.Console.GetOpt.usageInfo
                                                                                                sat_scvAR
                                                                                                options_scvtZ; } in
                                                                                let {
                                                                                  sat_scvAZ [Occ=Once]
                                                                                    :: [GHC.Base.String]
                                                                                  [LclId] =
                                                                                      CCCS :! [sat_scvAS
                                                                                               sat_scvAY]; } in
                                                                                let {
                                                                                  sat_scvAO [Occ=Once]
                                                                                    :: [GHC.Base.String]
                                                                                  [LclId] =
                                                                                      [ds13_scvAr] \u []
                                                                                          case
                                                                                              ds13_scvAr
                                                                                          of
                                                                                          { (,,,) _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  us_scvAM [Occ=Once]
                                                                                                  _ [Occ=Dead] ->
                                                                                                us_scvAM;
                                                                                          }; } in
                                                                                let {
                                                                                  sat_scvAI [Occ=Once]
                                                                                    :: [GHC.Base.String]
                                                                                  [LclId] =
                                                                                      [ds13_scvAr] \u []
                                                                                          case
                                                                                              ds13_scvAr
                                                                                          of
                                                                                          { (,,,) _ [Occ=Dead]
                                                                                                  xs_scvAF [Occ=Once]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead] ->
                                                                                                xs_scvAF;
                                                                                          }; } in
                                                                                let {
                                                                                  sat_scvAC [Occ=Once]
                                                                                    :: [a_scrPx]
                                                                                  [LclId] =
                                                                                      [ds13_scvAr] \u []
                                                                                          case
                                                                                              ds13_scvAr
                                                                                          of
                                                                                          { (,,,) os_scvAy [Occ=Once]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead] ->
                                                                                                os_scvAy;
                                                                                          };
                                                                                } in 
                                                                                  (#,,,#) [sat_scvAC
                                                                                           sat_scvAI
                                                                                           sat_scvAO
                                                                                           sat_scvAZ];
                                                                          };
                                                                    };
                                                          } in 
                                                            case
                                                                getWith_scvtC GHC.Base.eqString
                                                            of
                                                            wild6_scvB0
                                                            { [] ->
                                                                  case
                                                                      getWith_scvtC lvl19_rcsne
                                                                  of
                                                                  sat_scvB1
                                                                  { __DEFAULT -> $j_scvtY sat_scvB1;
                                                                  };
                                                              : _ [Occ=Dead] _ [Occ=Dead] ->
                                                                  $j_scvtY wild6_scvB0;
                                                            };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

System.Console.GetOpt.getOpt' [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     System.Console.GetOpt.ArgOrder a
     -> [System.Console.GetOpt.OptDescr a]
     -> [GHC.Base.String]
     -> ([a], [GHC.Base.String], [GHC.Base.String], [GHC.Base.String])
[GblId, Arity=3, Str=<L,1*U><L,U><S,1*U>m, Unf=OtherCon []] =
    [] \r [w_scvB4 w1_scvB5 w2_scvB6]
        case System.Console.GetOpt.$wgetOpt' w_scvB4 w1_scvB5 w2_scvB6 of {
          (#,,,#) ww1_scvB8 [Occ=Once]
                  ww2_scvB9 [Occ=Once]
                  ww3_scvBa [Occ=Once]
                  ww4_scvBb [Occ=Once] ->
              (,,,) [ww1_scvB8 ww2_scvB9 ww3_scvBa ww4_scvBb];
        };

System.Console.GetOpt.getOpt [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     System.Console.GetOpt.ArgOrder a
     -> [System.Console.GetOpt.OptDescr a]
     -> [GHC.Base.String]
     -> ([a], [GHC.Base.String], [GHC.Base.String])
[GblId, Arity=3, Str=<L,1*U><L,U><L,1*U>m, Unf=OtherCon []] =
    [] \r [w_scvBc w1_scvBd w2_scvBe]
        let {
          ds_scvBf [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
            :: ([a_scrPF], [GHC.Base.String], [GHC.Base.String],
                [GHC.Base.String])
          [LclId] =
              [w_scvBc w1_scvBd w2_scvBe] \u []
                  case System.Console.GetOpt.$wgetOpt' w_scvBc w1_scvBd w2_scvBe of {
                    (#,,,#) ww1_scvBh [Occ=Once]
                            ww2_scvBi [Occ=Once]
                            ww3_scvBj [Occ=Once]
                            ww4_scvBk [Occ=Once] ->
                        (,,,) [ww1_scvBh ww2_scvBi ww3_scvBj ww4_scvBk];
                  }; } in
        let {
          sat_scvBD [Occ=Once] :: [GHC.Base.String]
          [LclId] =
              [ds_scvBf] \u []
                  case ds_scvBf of {
                    (,,,) _ [Occ=Dead]
                          _ [Occ=Dead]
                          us_scvBA [Occ=Once]
                          es_scvBB [Occ=Once] ->
                        let {
                          sat_scvBC [Occ=Once, Dmd=<L,1*U>] :: [[GHC.Types.Char]]
                          [LclId] =
                              [us_scvBA] \s []
                                  GHC.Base.map System.Console.GetOpt.errUnrec us_scvBA;
                        } in  GHC.Base.++ es_scvBB sat_scvBC;
                  }; } in
        let {
          sat_scvBw [Occ=Once] :: [GHC.Base.String]
          [LclId] =
              [ds_scvBf] \u []
                  case ds_scvBf of {
                    (,,,) _ [Occ=Dead] xs_scvBt [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                        xs_scvBt;
                  }; } in
        let {
          sat_scvBq [Occ=Once] :: [a_scrPF]
          [LclId] =
              [ds_scvBf] \u []
                  case ds_scvBf of {
                    (,,,) os_scvBm [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
                        os_scvBm;
                  };
        } in  (,,) [sat_scvBq sat_scvBw sat_scvBD];

System.Console.GetOpt.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

System.Console.GetOpt.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$trModule4];

System.Console.GetOpt.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "System.Console.GetOpt"#;

System.Console.GetOpt.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$trModule2];

System.Console.GetOpt.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [System.Console.GetOpt.$trModule3
                                     System.Console.GetOpt.$trModule1];

$krep_rcsnm :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcChar
                                              GHC.Types.[]];

$krep1_rcsnn :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep_rcsnm GHC.Types.[]];

$krep2_rcsno :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tc[]
                                              $krep1_rcsnn];

$krep3_rcsnp :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep2_rcsno GHC.Types.[]];

$krep4_rcsnq :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Base.$tcMaybe
                                              $krep3_rcsnp];

$krep5_rcsnr :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tc[]
                                              $krep3_rcsnp];

$krep6_rcsns :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

$krep7_rcsnt :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcsno $krep6_rcsns];

$krep8_rcsnu :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_rcsnq $krep6_rcsns];

System.Console.GetOpt.$tcArgOrder2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ArgOrder"#;

System.Console.GetOpt.$tcArgOrder1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tcArgOrder2];

System.Console.GetOpt.$tcArgOrder :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2821249393238363172##
                                    5857765806309969278##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tcArgOrder1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep9_rcsnv :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep6_rcsns GHC.Types.[]];

System.Console.GetOpt.$tc'Permute1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Console.GetOpt.$tcArgOrder
                                              $krep9_rcsnv];

System.Console.GetOpt.$tc'RequireOrder2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'RequireOrder"#;

System.Console.GetOpt.$tc'RequireOrder1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'RequireOrder2];

System.Console.GetOpt.$tc'RequireOrder :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16641478699741903091##
                                    17241976392395699271##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'RequireOrder1
                                    1#
                                    System.Console.GetOpt.$tc'Permute1];

System.Console.GetOpt.$tc'Permute3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Permute"#;

System.Console.GetOpt.$tc'Permute2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'Permute3];

System.Console.GetOpt.$tc'Permute :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16188869008381252759##
                                    7304126484053682933##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'Permute2
                                    1#
                                    System.Console.GetOpt.$tc'Permute1];

System.Console.GetOpt.$tc'ReturnInOrder1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep7_rcsnt
                                         System.Console.GetOpt.$tc'Permute1];

System.Console.GetOpt.$tc'ReturnInOrder3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ReturnInOrder"#;

System.Console.GetOpt.$tc'ReturnInOrder2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'ReturnInOrder3];

System.Console.GetOpt.$tc'ReturnInOrder :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11429107017830306662##
                                    977062333259332084##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'ReturnInOrder2
                                    1#
                                    System.Console.GetOpt.$tc'ReturnInOrder1];

System.Console.GetOpt.$tcArgDescr2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ArgDescr"#;

System.Console.GetOpt.$tcArgDescr1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tcArgDescr2];

System.Console.GetOpt.$tcArgDescr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5371299798435897528##
                                    4777542234116424858##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tcArgDescr1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep10_rcsnw :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Console.GetOpt.$tcArgDescr
                                              $krep9_rcsnv];

System.Console.GetOpt.$tc'NoArg1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep6_rcsns $krep10_rcsnw];

System.Console.GetOpt.$tc'NoArg3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'NoArg"#;

System.Console.GetOpt.$tc'NoArg2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'NoArg3];

System.Console.GetOpt.$tc'NoArg :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4447437708857855473##
                                    9938854276741266046##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'NoArg2
                                    1#
                                    System.Console.GetOpt.$tc'NoArg1];

$krep11_rcsnx :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcsno $krep10_rcsnw];

System.Console.GetOpt.$tc'OptArg1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_rcsnu $krep11_rcsnx];

System.Console.GetOpt.$tc'OptArg3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OptArg"#;

System.Console.GetOpt.$tc'OptArg2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'OptArg3];

System.Console.GetOpt.$tc'OptArg :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2223072509852051452##
                                    11632957215606156764##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'OptArg2
                                    1#
                                    System.Console.GetOpt.$tc'OptArg1];

System.Console.GetOpt.$tc'ReqArg1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep7_rcsnt $krep11_rcsnx];

System.Console.GetOpt.$tc'ReqArg3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ReqArg"#;

System.Console.GetOpt.$tc'ReqArg2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'ReqArg3];

System.Console.GetOpt.$tc'ReqArg :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16427330633826478147##
                                    15179110347223027838##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'ReqArg2
                                    1#
                                    System.Console.GetOpt.$tc'ReqArg1];

System.Console.GetOpt.$tcOptDescr2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OptDescr"#;

System.Console.GetOpt.$tcOptDescr1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tcOptDescr2];

System.Console.GetOpt.$tcOptDescr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5602371009437266142##
                                    11022077518484673144##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tcOptDescr1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep12_rcsny :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Console.GetOpt.$tcOptDescr
                                              $krep9_rcsnv];

$krep13_rcsnz :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcsno $krep12_rcsny];

$krep14_rcsnA :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep10_rcsnw $krep13_rcsnz];

$krep15_rcsnB :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep5_rcsnr $krep14_rcsnA];

System.Console.GetOpt.$tc'Option1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcsno $krep15_rcsnB];

System.Console.GetOpt.$tc'Option3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Option"#;

System.Console.GetOpt.$tc'Option2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'Option3];

System.Console.GetOpt.$tc'Option :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10066039264625497029##
                                    5674636120141944492##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'Option2
                                    1#
                                    System.Console.GetOpt.$tc'Option1];

System.Console.GetOpt.$tcOptKind2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OptKind"#;

System.Console.GetOpt.$tcOptKind1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tcOptKind2];

System.Console.GetOpt.$tcOptKind :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5196380470096609574##
                                    4174335291028142741##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tcOptKind1
                                    0#
                                    GHC.Types.krep$*Arr*];

System.Console.GetOpt.$tc'EndOfOpts1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Console.GetOpt.$tcOptKind
                                              $krep9_rcsnv];

System.Console.GetOpt.$tc'EndOfOpts3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EndOfOpts"#;

System.Console.GetOpt.$tc'EndOfOpts2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'EndOfOpts3];

System.Console.GetOpt.$tc'EndOfOpts :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16241379069650497856##
                                    7399561775253491405##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'EndOfOpts2
                                    1#
                                    System.Console.GetOpt.$tc'EndOfOpts1];

System.Console.GetOpt.$tc'Opt1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep6_rcsns
                                         System.Console.GetOpt.$tc'EndOfOpts1];

System.Console.GetOpt.$tc'Opt3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Opt"#;

System.Console.GetOpt.$tc'Opt2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'Opt3];

System.Console.GetOpt.$tc'Opt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2387467460439073880##
                                    875868993959501908##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'Opt2
                                    1#
                                    System.Console.GetOpt.$tc'Opt1];

System.Console.GetOpt.$tc'NonOpt1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcsno
                                         System.Console.GetOpt.$tc'EndOfOpts1];

System.Console.GetOpt.$tc'UnreqOpt2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'UnreqOpt"#;

System.Console.GetOpt.$tc'UnreqOpt1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'UnreqOpt2];

System.Console.GetOpt.$tc'UnreqOpt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6747281843324563502##
                                    13162655807375334605##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'UnreqOpt1
                                    1#
                                    System.Console.GetOpt.$tc'NonOpt1];

System.Console.GetOpt.$tc'NonOpt3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'NonOpt"#;

System.Console.GetOpt.$tc'NonOpt2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'NonOpt3];

System.Console.GetOpt.$tc'NonOpt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17187900375792953920##
                                    18196243003688324985##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'NonOpt2
                                    1#
                                    System.Console.GetOpt.$tc'NonOpt1];

System.Console.GetOpt.$tc'OptErr2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OptErr"#;

System.Console.GetOpt.$tc'OptErr1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'OptErr2];

System.Console.GetOpt.$tc'OptErr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13165663139815598038##
                                    5639435123785572420##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'OptErr1
                                    1#
                                    System.Console.GetOpt.$tc'NonOpt1];

System.Console.GetOpt.Opt
  :: forall a. a -> System.Console.GetOpt.OptKind a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m1,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.Opt [eta_B1];

System.Console.GetOpt.UnreqOpt
  :: forall a. GHC.Base.String -> System.Console.GetOpt.OptKind a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m2,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.UnreqOpt [eta_B1];

System.Console.GetOpt.NonOpt
  :: forall a. GHC.Base.String -> System.Console.GetOpt.OptKind a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m3,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.NonOpt [eta_B1];

System.Console.GetOpt.EndOfOpts
  :: forall a. System.Console.GetOpt.OptKind a
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE System.Console.GetOpt.EndOfOpts! [];

System.Console.GetOpt.OptErr
  :: forall a. GHC.Base.String -> System.Console.GetOpt.OptKind a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m5,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.OptErr [eta_B1];

System.Console.GetOpt.NoArg
  :: forall a. a -> System.Console.GetOpt.ArgDescr a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m1,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.NoArg [eta_B1];

System.Console.GetOpt.ReqArg
  :: forall a.
     (GHC.Base.String -> a)
     -> GHC.Base.String -> System.Console.GetOpt.ArgDescr a
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m2,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] System.Console.GetOpt.ReqArg [eta_B2 eta_B1];

System.Console.GetOpt.OptArg
  :: forall a.
     (GHC.Base.Maybe GHC.Base.String -> a)
     -> GHC.Base.String -> System.Console.GetOpt.ArgDescr a
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m3,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] System.Console.GetOpt.OptArg [eta_B2 eta_B1];

System.Console.GetOpt.Option
  :: forall a.
     [GHC.Types.Char]
     -> [GHC.Base.String]
     -> System.Console.GetOpt.ArgDescr a
     -> GHC.Base.String
     -> System.Console.GetOpt.OptDescr a
[GblId[DataCon],
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        System.Console.GetOpt.Option [eta_B4 eta_B3 eta_B2 eta_B1];

System.Console.GetOpt.RequireOrder
  :: forall a. System.Console.GetOpt.ArgOrder a
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE System.Console.GetOpt.RequireOrder! [];

System.Console.GetOpt.Permute
  :: forall a. System.Console.GetOpt.ArgOrder a
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE System.Console.GetOpt.Permute! [];

System.Console.GetOpt.ReturnInOrder
  :: forall a.
     (GHC.Base.String -> a) -> System.Console.GetOpt.ArgOrder a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m3,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.ReturnInOrder [eta_B1];


==================== STG syntax: ====================
2018-03-16 16:07:24.430578529 UTC

System.Console.GetOpt.$fFunctorArgOrder_$cfmap
  :: forall a b.
     (a -> b)
     -> System.Console.GetOpt.ArgOrder a
     -> System.Console.GetOpt.ArgOrder b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,C(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_scvfs ds1_scvft]
        case ds1_scvft of {
          System.Console.GetOpt.RequireOrder ->
              System.Console.GetOpt.RequireOrder [];
          System.Console.GetOpt.Permute -> System.Console.GetOpt.Permute [];
          System.Console.GetOpt.ReturnInOrder g_scvfv [Occ=OnceL] ->
              let {
                sat_scvfw [Occ=Once] :: GHC.Base.String -> b_acr1l
                [LclId] =
                    [ds_scvfs g_scvfv] \r [eta_B1] GHC.Base.. ds_scvfs g_scvfv eta_B1;
              } in  System.Console.GetOpt.ReturnInOrder [sat_scvfw];
        };

System.Console.GetOpt.$fFunctorArgOrder_$c<$
  :: forall a b.
     a
     -> System.Console.GetOpt.ArgOrder b
     -> System.Console.GetOpt.ArgOrder a
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [x_scvfx eta_scvfy]
        case eta_scvfy of {
          System.Console.GetOpt.RequireOrder ->
              System.Console.GetOpt.RequireOrder [];
          System.Console.GetOpt.Permute -> System.Console.GetOpt.Permute [];
          System.Console.GetOpt.ReturnInOrder _ [Occ=Dead] ->
              let {
                sat_scvfC [Occ=Once] :: GHC.Base.String -> a_acr1w
                [LclId] =
                    [x_scvfx] \r [x1_scvfB] x_scvfx;
              } in  System.Console.GetOpt.ReturnInOrder [sat_scvfC];
        };

System.Console.GetOpt.$fFunctorArgOrder [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Functor System.Console.GetOpt.ArgOrder
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Base.C:Functor! [System.Console.GetOpt.$fFunctorArgOrder_$cfmap
                                       System.Console.GetOpt.$fFunctorArgOrder_$c<$];

System.Console.GetOpt.$fFunctorArgDescr_$cfmap
  :: forall a b.
     (a -> b)
     -> System.Console.GetOpt.ArgDescr a
     -> System.Console.GetOpt.ArgDescr b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,C(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [f_scvfD ds_scvfE]
        case ds_scvfE of {
          System.Console.GetOpt.NoArg a1_scvfG [Occ=Once] ->
              let {
                sat_scvfH [Occ=Once] :: b_acr0U
                [LclId] =
                    [f_scvfD a1_scvfG] \u [] f_scvfD a1_scvfG;
              } in  System.Console.GetOpt.NoArg [sat_scvfH];
          System.Console.GetOpt.ReqArg g_scvfI [Occ=OnceL]
                                       s_scvfJ [Occ=Once] ->
              let {
                sat_scvfK [Occ=Once] :: GHC.Base.String -> b_acr0U
                [LclId] =
                    [f_scvfD g_scvfI] \r [eta_B1] GHC.Base.. f_scvfD g_scvfI eta_B1;
              } in  System.Console.GetOpt.ReqArg [sat_scvfK s_scvfJ];
          System.Console.GetOpt.OptArg g_scvfL [Occ=OnceL]
                                       s_scvfM [Occ=Once] ->
              let {
                sat_scvfN [Occ=Once] :: GHC.Base.Maybe GHC.Base.String -> b_acr0U
                [LclId] =
                    [f_scvfD g_scvfL] \r [eta_B1] GHC.Base.. f_scvfD g_scvfL eta_B1;
              } in  System.Console.GetOpt.OptArg [sat_scvfN s_scvfM];
        };

System.Console.GetOpt.$fFunctorArgDescr_$c<$
  :: forall a b.
     a
     -> System.Console.GetOpt.ArgDescr b
     -> System.Console.GetOpt.ArgDescr a
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [x_scvfO eta_scvfP]
        case eta_scvfP of {
          System.Console.GetOpt.NoArg _ [Occ=Dead] ->
              System.Console.GetOpt.NoArg [x_scvfO];
          System.Console.GetOpt.ReqArg _ [Occ=Dead] s_scvfT [Occ=Once] ->
              let {
                sat_scvfV [Occ=Once] :: GHC.Base.String -> a_acr18
                [LclId] =
                    [x_scvfO] \r [x1_scvfU] x_scvfO;
              } in  System.Console.GetOpt.ReqArg [sat_scvfV s_scvfT];
          System.Console.GetOpt.OptArg _ [Occ=Dead] s_scvfX [Occ=Once] ->
              let {
                sat_scvfZ [Occ=Once] :: GHC.Base.Maybe GHC.Base.String -> a_acr18
                [LclId] =
                    [x_scvfO] \r [x1_scvfY] x_scvfO;
              } in  System.Console.GetOpt.OptArg [sat_scvfZ s_scvfX];
        };

System.Console.GetOpt.$fFunctorArgDescr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Functor System.Console.GetOpt.ArgDescr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Base.C:Functor! [System.Console.GetOpt.$fFunctorArgDescr_$cfmap
                                       System.Console.GetOpt.$fFunctorArgDescr_$c<$];

System.Console.GetOpt.$fFunctorOptDescr_$cfmap
  :: forall a b.
     (a -> b)
     -> System.Console.GetOpt.OptDescr a
     -> System.Console.GetOpt.OptDescr b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,C(U)><S,1*U(U,U,1*U,U)>m,
 Unf=OtherCon []] =
    [] \r [f_scvg0 ds_scvg1]
        case ds_scvg1 of {
          System.Console.GetOpt.Option a1_scvg3 [Occ=Once]
                                       b1_scvg4 [Occ=Once]
                                       argDescr_scvg5 [Occ=Once]
                                       c_scvg6 [Occ=Once] ->
              let {
                sat_scvg7 [Occ=Once] :: System.Console.GetOpt.ArgDescr b_acr0w
                [LclId] =
                    [f_scvg0 argDescr_scvg5] \u []
                        System.Console.GetOpt.$fFunctorArgDescr_$cfmap
                            f_scvg0 argDescr_scvg5;
              } in 
                System.Console.GetOpt.Option [a1_scvg3 b1_scvg4 sat_scvg7 c_scvg6];
        };

System.Console.GetOpt.$fFunctorOptDescr_$c<$ [InlPrag=NOUSERINLINE[0]]
  :: forall a b.
     a
     -> System.Console.GetOpt.OptDescr b
     -> System.Console.GetOpt.OptDescr a
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U(U,U,1*U,U)>m,
 Unf=OtherCon []] =
    [] \r [w_scvg8 w1_scvg9]
        case w1_scvg9 of {
          System.Console.GetOpt.Option ww1_scvgb [Occ=Once]
                                       ww2_scvgc [Occ=Once]
                                       ww3_scvgd [Occ=Once!]
                                       ww4_scvge [Occ=Once] ->
              let {
                sat_scvgp [Occ=Once] :: System.Console.GetOpt.ArgDescr a_scrOx
                [LclId] =
                    [w_scvg8 ww3_scvgd] \u []
                        case ww3_scvgd of {
                          System.Console.GetOpt.NoArg _ [Occ=Dead] ->
                              System.Console.GetOpt.NoArg [w_scvg8];
                          System.Console.GetOpt.ReqArg _ [Occ=Dead] s_scvgi [Occ=Once] ->
                              let {
                                sat_scvgk [Occ=Once] :: GHC.Base.String -> a_scrOx
                                [LclId] =
                                    [w_scvg8] \r [x_scvgj] w_scvg8;
                              } in  System.Console.GetOpt.ReqArg [sat_scvgk s_scvgi];
                          System.Console.GetOpt.OptArg _ [Occ=Dead] s_scvgm [Occ=Once] ->
                              let {
                                sat_scvgo [Occ=Once] :: GHC.Base.Maybe GHC.Base.String -> a_scrOx
                                [LclId] =
                                    [w_scvg8] \r [x_scvgn] w_scvg8;
                              } in  System.Console.GetOpt.OptArg [sat_scvgo s_scvgm];
                        };
              } in 
                System.Console.GetOpt.Option [ww1_scvgb
                                              ww2_scvgc
                                              sat_scvgp
                                              ww4_scvge];
        };

System.Console.GetOpt.$fFunctorOptDescr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Functor System.Console.GetOpt.OptDescr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Base.C:Functor! [System.Console.GetOpt.$fFunctorOptDescr_$cfmap
                                       System.Console.GetOpt.$fFunctorOptDescr_$c<$];

lvl_rcsmT :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! [' '#];

lvl1_rcsmU :: [GHC.Types.Char]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [lvl_rcsmT GHC.Types.[]];

$wxs_rcsmV :: GHC.Prim.Int# -> [GHC.Types.Char]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>m2, Unf=OtherCon []] =
    sat-only [] \r [ww_scvgq]
        case ww_scvgq of ds1_scvgr {
          __DEFAULT ->
              let {
                sat_scvgt [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [ds1_scvgr] \u []
                        case -# [ds1_scvgr 1#] of sat_scvgs {
                          __DEFAULT -> $wxs_rcsmV sat_scvgs;
                        };
              } in  : [lvl_rcsmT sat_scvgt];
          1# -> lvl1_rcsmU;
        };

System.Console.GetOpt.$wgo [InlPrag=NOUSERINLINE[0],
                            Occ=LoopBreaker]
  :: [GHC.Types.Char] -> GHC.Prim.Int# -> [GHC.Types.Char]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>m2,
 Unf=OtherCon []] =
    [] \r [w_scvgu ww_scvgv]
        case w_scvgu of {
          [] -> $wxs_rcsmV ww_scvgv;
          : y_scvgx [Occ=Once*] ys_scvgy [Occ=Once] ->
              case ww_scvgv of ds1_scvgz {
                __DEFAULT ->
                    let {
                      sat_scvgB [Occ=Once] :: [GHC.Types.Char]
                      [LclId] =
                          [ys_scvgy ds1_scvgz] \u []
                              case -# [ds1_scvgz 1#] of sat_scvgA {
                                __DEFAULT -> System.Console.GetOpt.$wgo ys_scvgy sat_scvgA;
                              };
                    } in  : [y_scvgx sat_scvgB];
                1# -> : [y_scvgx GHC.Types.[]];
              };
        };

System.Console.GetOpt.usageInfo_sameLen
  :: [[GHC.Types.Char]] -> [[GHC.Types.Char]]
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [xs_scvgC]
        let {
          n_scvgD [Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [xs_scvgC] \u []
                  case GHC.Base.map GHC.List.length xs_scvgC of {
                    [] -> GHC.List.maximum2;
                    : ipv_scvgF [Occ=Once!] ipv1_scvgG [Occ=Once] ->
                        case ipv_scvgF of {
                          GHC.Types.I# ww1_scvgI [Occ=Once] ->
                              case GHC.List.$wgo ipv1_scvgG ww1_scvgI of ww2_scvgJ {
                                __DEFAULT -> GHC.Types.I# [ww2_scvgJ];
                              };
                        };
                  }; } in
        let {
          lvl25_scvgK [Occ=OnceL!] :: GHC.Types.Bool
          [LclId] =
              [n_scvgD] \u []
                  case n_scvgD of {
                    GHC.Types.I# y_scvgM [Occ=Once] ->
                        case <# [0# y_scvgM] of sat_scvgN {
                          __DEFAULT -> tagToEnum# [sat_scvgN];
                        };
                  }; } in
        let {
          go_scvgO [Occ=LoopBreaker]
            :: [[GHC.Types.Char]] -> [[GHC.Types.Char]]
          [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
              sat-only [n_scvgD lvl25_scvgK go_scvgO] \r [ds_scvgP]
                  case ds_scvgP of {
                    [] -> [] [];
                    : y_scvgR [Occ=Once] ys_scvgS [Occ=Once] ->
                        let {
                          sat_scvgX [Occ=Once] :: [[GHC.Types.Char]]
                          [LclId] =
                              [go_scvgO ys_scvgS] \u [] go_scvgO ys_scvgS; } in
                        let {
                          sat_scvgW [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [n_scvgD lvl25_scvgK y_scvgR] \u []
                                  case lvl25_scvgK of {
                                    GHC.Types.False -> [] [];
                                    GHC.Types.True ->
                                        case n_scvgD of {
                                          GHC.Types.I# ww1_scvgV [Occ=Once] ->
                                              System.Console.GetOpt.$wgo y_scvgR ww1_scvgV;
                                        };
                                  };
                        } in  : [sat_scvgW sat_scvgX];
                  };
        } in  go_scvgO xs_scvgC;

sepBy_rcsmW
  :: GHC.Types.Char -> [[GHC.Types.Char]] -> [GHC.Types.Char]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U>,
 Unf=OtherCon []] =
    sat-only [] \r [ds_scvgY ds1_scvgZ]
        case ds1_scvgZ of {
          [] -> [] [];
          : x_scvh1 [Occ=Once*] ds2_scvh2 [Occ=Once!] ->
              case ds2_scvh2 of wild1_scvh3 {
                [] -> x_scvh1;
                : _ [Occ=Dead] _ [Occ=Dead] ->
                    let {
                      sat_scvh6 [Occ=Once] :: [GHC.Types.Char]
                      [LclId] =
                          [ds_scvgY wild1_scvh3] \u [] sepBy_rcsmW ds_scvgY wild1_scvh3; } in
                    let {
                      sat_scvh7 [Occ=Once] :: [GHC.Types.Char]
                      [LclId] =
                          CCCS :! [lvl_rcsmT sat_scvh6]; } in
                    let {
                      sat_scvh8 [Occ=Once] :: [GHC.Types.Char]
                      [LclId] =
                          CCCS :! [ds_scvgY sat_scvh7];
                    } in  GHC.Base.++ x_scvh1 sat_scvh8;
              };
        };

lvl2_rcsmX :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! [','#];

lvl3_rcsmY :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "-"#;

lvl4_rcsmZ :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "["#;

lvl5_rcsn0 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "]"#;

lvl6_rcsn1 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "--"#;

lvl7_rcsn2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "[="#;

lvl8_rcsn3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "  "#;

System.Console.GetOpt.usageInfo_go2 [Occ=LoopBreaker]
  :: [[GHC.Types.Char]]
     -> [[GHC.Types.Char]] -> [[GHC.Types.Char]] -> [[GHC.Types.Char]]
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U><L,1*U><L,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_scvh9 ds1_scvha ds2_scvhb]
        case ds_scvh9 of {
          [] -> [] [];
          : a1_scvhd [Occ=Once] as_scvhe [Occ=Once] ->
              case ds1_scvha of {
                [] -> [] [];
                : b1_scvhg [Occ=Once] bs_scvhh [Occ=Once] ->
                    case ds2_scvhb of {
                      [] -> [] [];
                      : c1_scvhj [Occ=Once] cs_scvhk [Occ=Once] ->
                          let {
                            sat_scvhq [Occ=Once] :: [[GHC.Types.Char]]
                            [LclId] =
                                [as_scvhe bs_scvhh cs_scvhk] \u []
                                    System.Console.GetOpt.usageInfo_go2
                                        as_scvhe bs_scvhh cs_scvhk; } in
                          let {
                            sat_scvhp [Occ=Once] :: [GHC.Types.Char]
                            [LclId] =
                                [a1_scvhd b1_scvhg c1_scvhj] \u []
                                    let {
                                      sat_scvho [Occ=Once] :: [GHC.Types.Char]
                                      [LclId] =
                                          [a1_scvhd b1_scvhg c1_scvhj] \u []
                                              let {
                                                sat_scvhn [Occ=Once, Dmd=<L,1*U>]
                                                  :: [GHC.Types.Char]
                                                [LclId] =
                                                    [b1_scvhg c1_scvhj] \s []
                                                        let {
                                                          sat_scvhm [Occ=Once] :: [GHC.Types.Char]
                                                          [LclId] =
                                                              [b1_scvhg c1_scvhj] \u []
                                                                  let {
                                                                    sat_scvhl [Occ=Once,
                                                                               Dmd=<L,1*U>]
                                                                      :: [GHC.Types.Char]
                                                                    [LclId] =
                                                                        [c1_scvhj] \s []
                                                                            GHC.CString.unpackAppendCString#
                                                                                lvl8_rcsn3 c1_scvhj;
                                                                  } in 
                                                                    GHC.Base.++ b1_scvhg sat_scvhl;
                                                        } in 
                                                          GHC.CString.unpackAppendCString#
                                                              lvl8_rcsn3 sat_scvhm;
                                              } in  GHC.Base.++ a1_scvhd sat_scvhn;
                                    } in  GHC.CString.unpackAppendCString# lvl8_rcsn3 sat_scvho;
                          } in  : [sat_scvhp sat_scvhq];
                    };
              };
        };

lvl9_rcsn4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    " "#;

lvl10_rcsn5 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl5_rcsn0;

lvl11_rcsn6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "="#;

System.Console.GetOpt.usageInfo1 [InlPrag=NOUSERINLINE[0],
                                  Occ=LoopBreaker]
  :: forall a.
     [System.Console.GetOpt.OptDescr a]
     -> (# [GHC.Base.String], [GHC.Base.String], [GHC.Base.String] #)
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [w_scvhr]
        case w_scvhr of {
          [] -> (#,,#) [GHC.Types.[] GHC.Types.[] GHC.Types.[]];
          : y_scvht [Occ=Once!] ys_scvhu [Occ=Once] ->
              case y_scvht of {
                System.Console.GetOpt.Option sos_scvhw [Occ=Once]
                                             los_scvhx [Occ=Once]
                                             ad_scvhy
                                             descr_scvhz [Occ=Once] ->
                    let {
                      b2_scvhA [Dmd=<L,U(U,U,U)>]
                        :: ([GHC.Base.String], [GHC.Base.String], [GHC.Base.String])
                      [LclId] =
                          [ys_scvhu] \u []
                              case System.Console.GetOpt.usageInfo1 ys_scvhu of {
                                (#,,#) ww1_scvhC [Occ=Once]
                                       ww2_scvhD [Occ=Once]
                                       ww3_scvhE [Occ=Once] ->
                                    (,,) [ww1_scvhC ww2_scvhD ww3_scvhE];
                              }; } in
                    let {
                      sosFmt_scvhF [Occ=Once*] :: [GHC.Types.Char]
                      [LclId] =
                          [sos_scvhw ad_scvhy] \u []
                              let {
                                sat_scvhT [Occ=Once] :: GHC.Types.Char -> [GHC.Types.Char]
                                [LclId] =
                                    [ad_scvhy] \r [so_scvhG]
                                        case ad_scvhy of {
                                          System.Console.GetOpt.NoArg _ [Occ=Dead] ->
                                              let {
                                                sat_scvhJ [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    CCCS :! [so_scvhG GHC.Types.[]];
                                              } in 
                                                GHC.CString.unpackAppendCString#
                                                    lvl3_rcsmY sat_scvhJ;
                                          System.Console.GetOpt.ReqArg _ [Occ=Dead]
                                                                       ad1_scvhL [Occ=Once] ->
                                              let {
                                                sat_scvhM [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    [ad1_scvhL] \u []
                                                        GHC.CString.unpackAppendCString#
                                                            lvl9_rcsn4 ad1_scvhL; } in
                                              let {
                                                sat_scvhN [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    CCCS :! [so_scvhG sat_scvhM];
                                              } in 
                                                GHC.CString.unpackAppendCString#
                                                    lvl3_rcsmY sat_scvhN;
                                          System.Console.GetOpt.OptArg _ [Occ=Dead]
                                                                       ad1_scvhP [Occ=Once] ->
                                              let {
                                                sat_scvhR [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    [ad1_scvhP] \u []
                                                        let {
                                                          sat_scvhQ [Occ=Once] :: [GHC.Types.Char]
                                                          [LclId] =
                                                              [ad1_scvhP] \u []
                                                                  GHC.Base.++ ad1_scvhP lvl10_rcsn5;
                                                        } in 
                                                          GHC.CString.unpackAppendCString#
                                                              lvl4_rcsmZ sat_scvhQ; } in
                                              let {
                                                sat_scvhS [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    CCCS :! [so_scvhG sat_scvhR];
                                              } in 
                                                GHC.CString.unpackAppendCString#
                                                    lvl3_rcsmY sat_scvhS;
                                        };
                              } in 
                                case GHC.Base.map sat_scvhT sos_scvhw of sat_scvhU {
                                  __DEFAULT -> sepBy_rcsmW lvl2_rcsmX sat_scvhU;
                                }; } in
                    let {
                      losFmt_scvhV [Occ=Once*] :: [GHC.Types.Char]
                      [LclId] =
                          [los_scvhx ad_scvhy] \u []
                              let {
                                sat_scvi8 [Occ=Once] :: [GHC.Types.Char] -> [GHC.Types.Char]
                                [LclId] =
                                    [ad_scvhy] \r [lo_scvhW]
                                        case ad_scvhy of {
                                          System.Console.GetOpt.NoArg _ [Occ=Dead] ->
                                              GHC.CString.unpackAppendCString# lvl6_rcsn1 lo_scvhW;
                                          System.Console.GetOpt.ReqArg _ [Occ=Dead]
                                                                       ad1_scvi0 [Occ=Once] ->
                                              let {
                                                sat_scvi2 [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    [lo_scvhW ad1_scvi0] \u []
                                                        let {
                                                          sat_scvi1 [Occ=Once, Dmd=<L,1*U>]
                                                            :: [GHC.Types.Char]
                                                          [LclId] =
                                                              [ad1_scvi0] \s []
                                                                  GHC.CString.unpackAppendCString#
                                                                      lvl11_rcsn6 ad1_scvi0;
                                                        } in  GHC.Base.++ lo_scvhW sat_scvi1;
                                              } in 
                                                GHC.CString.unpackAppendCString#
                                                    lvl6_rcsn1 sat_scvi2;
                                          System.Console.GetOpt.OptArg _ [Occ=Dead]
                                                                       ad1_scvi4 [Occ=Once] ->
                                              let {
                                                sat_scvi7 [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    [lo_scvhW ad1_scvi4] \u []
                                                        let {
                                                          sat_scvi6 [Occ=Once, Dmd=<L,1*U>]
                                                            :: [GHC.Types.Char]
                                                          [LclId] =
                                                              [ad1_scvi4] \s []
                                                                  let {
                                                                    sat_scvi5 [Occ=Once]
                                                                      :: [GHC.Types.Char]
                                                                    [LclId] =
                                                                        [ad1_scvi4] \u []
                                                                            GHC.Base.++
                                                                                ad1_scvi4
                                                                                lvl10_rcsn5;
                                                                  } in 
                                                                    GHC.CString.unpackAppendCString#
                                                                        lvl7_rcsn2 sat_scvi5;
                                                        } in  GHC.Base.++ lo_scvhW sat_scvi6;
                                              } in 
                                                GHC.CString.unpackAppendCString#
                                                    lvl6_rcsn1 sat_scvi7;
                                        };
                              } in 
                                case GHC.Base.map sat_scvi8 los_scvhx of sat_scvi9 {
                                  __DEFAULT -> sepBy_rcsmW lvl2_rcsmX sat_scvi9;
                                };
                    } in 
                      case Data.OldList.lines descr_scvhz of {
                        [] ->
                            let {
                              sat_scvir [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [b2_scvhA] \u []
                                      case b2_scvhA of {
                                        (,,) _ [Occ=Dead] _ [Occ=Dead] cs_scviq [Occ=Once] ->
                                            cs_scviq;
                                      }; } in
                            let {
                              sat_scvis [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [GHC.Types.[] sat_scvir]; } in
                            let {
                              sat_scvil [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [b2_scvhA] \u []
                                      case b2_scvhA of {
                                        (,,) _ [Occ=Dead] bs_scvij [Occ=Once] _ [Occ=Dead] ->
                                            bs_scvij;
                                      }; } in
                            let {
                              sat_scvim [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [losFmt_scvhV sat_scvil]; } in
                            let {
                              sat_scvif [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [b2_scvhA] \u []
                                      case b2_scvhA of {
                                        (,,) as_scvic [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                                            as_scvic;
                                      }; } in
                            let {
                              sat_scvig [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [sosFmt_scvhF sat_scvif];
                            } in  (#,,#) [sat_scvig sat_scvim sat_scvis];
                        : d_scvit [Occ=Once] ds_scviu [Occ=Once] ->
                            let {
                              ds1_scviv [Dmd=<L,U(1*U,1*U,1*U)>]
                                :: ([GHC.Base.String], [GHC.Base.String], [GHC.Base.String])
                              [LclId] =
                                  [b2_scvhA ds_scviu] \u []
                                      let {
                                        go_scviw [Occ=LoopBreaker]
                                          :: [GHC.Base.String]
                                             -> ([GHC.Base.String], [GHC.Base.String],
                                                 [GHC.Base.String])
                                        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
                                            sat-only [b2_scvhA go_scviw] \r [ds2_scvix]
                                                case ds2_scvix of {
                                                  [] -> b2_scvhA;
                                                  : y1_scviz [Occ=Once] ys1_scviA [Occ=Once] ->
                                                      let {
                                                        ds3_scviB [Dmd=<L,U(1*U,1*U,1*U)>]
                                                          :: ([GHC.Base.String], [GHC.Base.String],
                                                              [GHC.Base.String])
                                                        [LclId] =
                                                            [go_scviw ys1_scviA] \u []
                                                                go_scviw ys1_scviA; } in
                                                      let {
                                                        sat_scviS [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            [ds3_scviB] \u []
                                                                case ds3_scviB of {
                                                                  (,,) _ [Occ=Dead]
                                                                       _ [Occ=Dead]
                                                                       cs_scviR [Occ=Once] ->
                                                                      cs_scviR;
                                                                }; } in
                                                      let {
                                                        sat_scviT [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            CCCS :! [y1_scviz sat_scviS]; } in
                                                      let {
                                                        sat_scviM [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            [ds3_scviB] \u []
                                                                case ds3_scviB of {
                                                                  (,,) _ [Occ=Dead]
                                                                       bs_scviK [Occ=Once]
                                                                       _ [Occ=Dead] ->
                                                                      bs_scviK;
                                                                }; } in
                                                      let {
                                                        sat_scviN [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            CCCS :! [GHC.Types.[] sat_scviM]; } in
                                                      let {
                                                        sat_scviG [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            [ds3_scviB] \u []
                                                                case ds3_scviB of {
                                                                  (,,) as_scviD [Occ=Once]
                                                                       _ [Occ=Dead]
                                                                       _ [Occ=Dead] ->
                                                                      as_scviD;
                                                                }; } in
                                                      let {
                                                        sat_scviH [Occ=Once] :: [GHC.Base.String]
                                                        [LclId] =
                                                            CCCS :! [GHC.Types.[] sat_scviG];
                                                      } in  (,,) [sat_scviH sat_scviN sat_scviT];
                                                };
                                      } in  go_scviw ds_scviu; } in
                            let {
                              sat_scvja [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [ds1_scviv] \u []
                                      case ds1_scviv of {
                                        (,,) _ [Occ=Dead] _ [Occ=Dead] cs_scvj9 [Occ=Once] ->
                                            cs_scvj9;
                                      }; } in
                            let {
                              sat_scvjb [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [d_scvit sat_scvja]; } in
                            let {
                              sat_scvj4 [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [ds1_scviv] \u []
                                      case ds1_scviv of {
                                        (,,) _ [Occ=Dead] bs_scvj2 [Occ=Once] _ [Occ=Dead] ->
                                            bs_scvj2;
                                      }; } in
                            let {
                              sat_scvj5 [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [losFmt_scvhV sat_scvj4]; } in
                            let {
                              sat_scviY [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  [ds1_scviv] \u []
                                      case ds1_scviv of {
                                        (,,) as_scviV [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                                            as_scviV;
                                      }; } in
                            let {
                              sat_scviZ [Occ=Once] :: [GHC.Base.String]
                              [LclId] =
                                  CCCS :! [sosFmt_scvhF sat_scviY];
                            } in  (#,,#) [sat_scviZ sat_scvj5 sat_scvjb];
                      };
              };
        };

System.Console.GetOpt.usageInfo
  :: forall a.
     GHC.Base.String
     -> [System.Console.GetOpt.OptDescr a] -> GHC.Base.String
[GblId, Arity=2, Str=<L,U><L,1*U>, Unf=OtherCon []] =
    [] \r [header_scvjc optDescr_scvjd]
        let {
          sat_scvjk [Occ=Once] :: [GHC.Base.String]
          [LclId] =
              [optDescr_scvjd] \u []
                  case System.Console.GetOpt.usageInfo1 optDescr_scvjd of {
                    (#,,#) ww1_scvjf [Occ=Once]
                           ww2_scvjg [Occ=Once]
                           ww3_scvjh [Occ=Once] ->
                        let {
                          sat_scvjj [Occ=Once, Dmd=<L,1*U>] :: [[GHC.Types.Char]]
                          [LclId] =
                              [ww2_scvjg] \s []
                                  System.Console.GetOpt.usageInfo_sameLen ww2_scvjg;
                        } in 
                          case
                              System.Console.GetOpt.usageInfo_sameLen ww1_scvjf
                          of
                          sat_scvji
                          { __DEFAULT ->
                                System.Console.GetOpt.usageInfo_go2 sat_scvji sat_scvjj ww3_scvjh;
                          };
                  }; } in
        let {
          sat_scvjl [Occ=Once] :: [GHC.Base.String]
          [LclId] =
              CCCS :! [header_scvjc sat_scvjk];
        } in  Data.OldList.unlines sat_scvjl;

lvl12_rcsn7 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "option `"#;

lvl13_rcsn8 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "' is ambiguous; could be one of:"#;

lvl14_rcsn9 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "' requires an argument "#;

lvl15_rcsna :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "\n"#;

lvl16_rcsnb :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl15_rcsna;

System.Console.GetOpt.getOpt2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "unrecognized option `"#;

System.Console.GetOpt.getOpt1 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'\n"#;

lvl17_rcsnc :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# System.Console.GetOpt.getOpt1;

System.Console.GetOpt.errUnrec
  :: GHC.Base.String -> GHC.Base.String
[GblId, Arity=1, Str=<L,1*U>, Unf=OtherCon []] =
    [] \r [optStr_scvjm]
        let {
          sat_scvjn [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [optStr_scvjm] \u [] GHC.Base.++ optStr_scvjm lvl17_rcsnc;
        } in 
          GHC.CString.unpackAppendCString#
              System.Console.GetOpt.getOpt2 sat_scvjn;

lvl18_rcsnd :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "' doesn't allow an argument\n"#;

lvl19_rcsne
  :: [GHC.Types.Char] -> [GHC.Types.Char] -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Data.OldList.isPrefixOf GHC.Classes.$fEqChar eta_B2 eta_B1;

lvl20_rcsnf :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [ds_scvjo]
        case ds_scvjo of {
          GHC.Types.C# x_scvjq [Occ=Once!] ->
              case x_scvjq of {
                __DEFAULT -> GHC.Types.False [];
                '='# -> GHC.Types.True [];
              };
        };

lvl21_rcsng :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! ['-'#];

lvl22_rcsnh :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl18_rcsnd;

lvl23_rcsni :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "option `--"#;

poly_go_rcsnj
  :: forall a.
     [System.Console.GetOpt.OptDescr a]
     -> [System.Console.GetOpt.ArgDescr a]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    sat-only [] \r [ds_scvjs]
        case ds_scvjs of {
          [] -> [] [];
          : y_scvju [Occ=Once!] ys_scvjv [Occ=Once] ->
              case y_scvju of {
                System.Console.GetOpt.Option _ [Occ=Dead]
                                             _ [Occ=Dead]
                                             ad_scvjz [Occ=Once]
                                             _ [Occ=Dead] ->
                    let {
                      sat_scvjB [Occ=Once] :: [System.Console.GetOpt.ArgDescr a_scrPx]
                      [LclId] =
                          [ys_scvjv] \u [] poly_go_rcsnj ys_scvjv;
                    } in  : [ad_scvjz sat_scvjB];
              };
        };

lvl24_rcsnk :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl13_rcsn8;

poly_go1_rcsnl
  :: forall a.
     [System.Console.GetOpt.OptDescr a]
     -> [System.Console.GetOpt.ArgDescr a]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    sat-only [] \r [ds_scvjC]
        case ds_scvjC of {
          [] -> [] [];
          : y_scvjE [Occ=Once!] ys_scvjF [Occ=Once] ->
              case y_scvjE of {
                System.Console.GetOpt.Option _ [Occ=Dead]
                                             _ [Occ=Dead]
                                             ad_scvjJ [Occ=Once]
                                             _ [Occ=Dead] ->
                    let {
                      sat_scvjL [Occ=Once] :: [System.Console.GetOpt.ArgDescr a_scrPx]
                      [LclId] =
                          [ys_scvjF] \u [] poly_go1_rcsnl ys_scvjF;
                    } in  : [ad_scvjJ sat_scvjL];
              };
        };

System.Console.GetOpt.$wgetOpt' [InlPrag=NOUSERINLINE[0],
                                 Occ=LoopBreaker]
  :: forall a.
     System.Console.GetOpt.ArgOrder a
     -> [System.Console.GetOpt.OptDescr a]
     -> [GHC.Base.String]
     -> (# [a], [GHC.Base.String], [GHC.Base.String],
           [GHC.Base.String] #)
[GblId, Arity=3, Str=<L,1*U><L,U><S,1*U>, Unf=OtherCon []] =
    [] \r [w_scvjM w1_scvjN w2_scvjO]
        case w2_scvjO of wild_scvjP {
          [] ->
              (#,,,#) [GHC.Types.[] GHC.Types.[] GHC.Types.[] GHC.Types.[]];
          : arg_scvjQ [Occ=Once!] args_scvjR [Occ=OnceL*] ->
              case arg_scvjQ of wild1_scvjS {
                [] ->
                    case w_scvjM of wild2_scvjT {
                      System.Console.GetOpt.RequireOrder ->
                          let {
                            sat_scvjU [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                CCCS :! [GHC.Types.[] args_scvjR];
                          } in  (#,,,#) [GHC.Types.[] sat_scvjU GHC.Types.[] GHC.Types.[]];
                      System.Console.GetOpt.Permute ->
                          let {
                            ds_scvjV [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                              :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                  [GHC.Base.String])
                            [LclId] =
                                [w1_scvjN args_scvjR] \u []
                                    case
                                        System.Console.GetOpt.$wgetOpt'
                                            System.Console.GetOpt.Permute w1_scvjN args_scvjR
                                    of
                                    { (#,,,#) ww1_scvjX [Occ=Once]
                                              ww2_scvjY [Occ=Once]
                                              ww3_scvjZ [Occ=Once]
                                              ww4_scvk0 [Occ=Once] ->
                                          (,,,) [ww1_scvjX ww2_scvjY ww3_scvjZ ww4_scvk0];
                                    }; } in
                          let {
                            sat_scvkp [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scvjV] \u []
                                    case ds_scvjV of {
                                      (,,,) _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            es_scvko [Occ=Once] ->
                                          es_scvko;
                                    }; } in
                          let {
                            sat_scvkj [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scvjV] \u []
                                    case ds_scvjV of {
                                      (,,,) _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            us_scvkh [Occ=Once]
                                            _ [Occ=Dead] ->
                                          us_scvkh;
                                    }; } in
                          let {
                            sat_scvkc [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scvjV] \u []
                                    case ds_scvjV of {
                                      (,,,) _ [Occ=Dead]
                                            xs_scvk9 [Occ=Once]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead] ->
                                          xs_scvk9;
                                    }; } in
                          let {
                            sat_scvkd [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                CCCS :! [GHC.Types.[] sat_scvkc]; } in
                          let {
                            sat_scvk6 [Occ=Once] :: [a_scrPx]
                            [LclId] =
                                [ds_scvjV] \u []
                                    case ds_scvjV of {
                                      (,,,) os_scvk2 [Occ=Once]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead] ->
                                          os_scvk2;
                                    };
                          } in  (#,,,#) [sat_scvk6 sat_scvkd sat_scvkj sat_scvkp];
                      System.Console.GetOpt.ReturnInOrder f_scvkq [Occ=Once!] ->
                          let {
                            ds_scvkr [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                              :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                  [GHC.Base.String])
                            [LclId] =
                                [w1_scvjN args_scvjR wild2_scvjT] \u []
                                    case
                                        System.Console.GetOpt.$wgetOpt'
                                            wild2_scvjT w1_scvjN args_scvjR
                                    of
                                    { (#,,,#) ww1_scvkt [Occ=Once]
                                              ww2_scvku [Occ=Once]
                                              ww3_scvkv [Occ=Once]
                                              ww4_scvkw [Occ=Once] ->
                                          (,,,) [ww1_scvkt ww2_scvku ww3_scvkv ww4_scvkw];
                                    }; } in
                          let {
                            sat_scvkW [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scvkr] \u []
                                    case ds_scvkr of {
                                      (,,,) _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            es_scvkV [Occ=Once] ->
                                          es_scvkV;
                                    }; } in
                          let {
                            sat_scvkQ [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scvkr] \u []
                                    case ds_scvkr of {
                                      (,,,) _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            us_scvkO [Occ=Once]
                                            _ [Occ=Dead] ->
                                          us_scvkO;
                                    }; } in
                          let {
                            sat_scvkK [Occ=Once] :: [GHC.Base.String]
                            [LclId] =
                                [ds_scvkr] \u []
                                    case ds_scvkr of {
                                      (,,,) _ [Occ=Dead]
                                            xs_scvkH [Occ=Once]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead] ->
                                          xs_scvkH;
                                    }; } in
                          let {
                            sat_scvkD [Occ=Once] :: [a_scrPx]
                            [LclId] =
                                [ds_scvkr] \u []
                                    case ds_scvkr of {
                                      (,,,) os_scvkz [Occ=Once]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead]
                                            _ [Occ=Dead] ->
                                          os_scvkz;
                                    }; } in
                          let {
                            sat_scvkx [Occ=Once] :: a_scrPx
                            [LclId] =
                                [f_scvkq] \u [] f_scvkq GHC.Types.[]; } in
                          let {
                            sat_scvkE [Occ=Once] :: [a_scrPx]
                            [LclId] =
                                CCCS :! [sat_scvkx sat_scvkD];
                          } in  (#,,,#) [sat_scvkE sat_scvkK sat_scvkQ sat_scvkW];
                    };
                : ds_scvkX [Occ=Once!] ds1_scvkY [Occ=Once!] ->
                    case ds_scvkX of {
                      GHC.Types.C# ds2_scvl0 [Occ=Once!] ->
                          case ds2_scvl0 of {
                            __DEFAULT ->
                                case w_scvjM of wild3_scvl2 {
                                  System.Console.GetOpt.RequireOrder ->
                                      (#,,,#) [GHC.Types.[] wild_scvjP GHC.Types.[] GHC.Types.[]];
                                  System.Console.GetOpt.Permute ->
                                      let {
                                        ds4_scvl3 [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                          :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                              [GHC.Base.String])
                                        [LclId] =
                                            [w1_scvjN args_scvjR] \u []
                                                case
                                                    System.Console.GetOpt.$wgetOpt'
                                                        System.Console.GetOpt.Permute
                                                        w1_scvjN
                                                        args_scvjR
                                                of
                                                { (#,,,#) ww1_scvl5 [Occ=Once]
                                                          ww2_scvl6 [Occ=Once]
                                                          ww3_scvl7 [Occ=Once]
                                                          ww4_scvl8 [Occ=Once] ->
                                                      (,,,) [ww1_scvl5
                                                             ww2_scvl6
                                                             ww3_scvl7
                                                             ww4_scvl8];
                                                }; } in
                                      let {
                                        sat_scvlx [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scvl3] \u []
                                                case ds4_scvl3 of {
                                                  (,,,) _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        es_scvlw [Occ=Once] ->
                                                      es_scvlw;
                                                }; } in
                                      let {
                                        sat_scvlr [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scvl3] \u []
                                                case ds4_scvl3 of {
                                                  (,,,) _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        us_scvlp [Occ=Once]
                                                        _ [Occ=Dead] ->
                                                      us_scvlp;
                                                }; } in
                                      let {
                                        sat_scvlk [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scvl3] \u []
                                                case ds4_scvl3 of {
                                                  (,,,) _ [Occ=Dead]
                                                        xs_scvlh [Occ=Once]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead] ->
                                                      xs_scvlh;
                                                }; } in
                                      let {
                                        sat_scvll [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            CCCS :! [wild1_scvjS sat_scvlk]; } in
                                      let {
                                        sat_scvle [Occ=Once] :: [a_scrPx]
                                        [LclId] =
                                            [ds4_scvl3] \u []
                                                case ds4_scvl3 of {
                                                  (,,,) os_scvla [Occ=Once]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead] ->
                                                      os_scvla;
                                                };
                                      } in  (#,,,#) [sat_scvle sat_scvll sat_scvlr sat_scvlx];
                                  System.Console.GetOpt.ReturnInOrder f_scvly [Occ=Once!] ->
                                      let {
                                        ds4_scvlz [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                          :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                              [GHC.Base.String])
                                        [LclId] =
                                            [w1_scvjN args_scvjR wild3_scvl2] \u []
                                                case
                                                    System.Console.GetOpt.$wgetOpt'
                                                        wild3_scvl2 w1_scvjN args_scvjR
                                                of
                                                { (#,,,#) ww1_scvlB [Occ=Once]
                                                          ww2_scvlC [Occ=Once]
                                                          ww3_scvlD [Occ=Once]
                                                          ww4_scvlE [Occ=Once] ->
                                                      (,,,) [ww1_scvlB
                                                             ww2_scvlC
                                                             ww3_scvlD
                                                             ww4_scvlE];
                                                }; } in
                                      let {
                                        sat_scvm4 [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scvlz] \u []
                                                case ds4_scvlz of {
                                                  (,,,) _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        es_scvm3 [Occ=Once] ->
                                                      es_scvm3;
                                                }; } in
                                      let {
                                        sat_scvlY [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scvlz] \u []
                                                case ds4_scvlz of {
                                                  (,,,) _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        us_scvlW [Occ=Once]
                                                        _ [Occ=Dead] ->
                                                      us_scvlW;
                                                }; } in
                                      let {
                                        sat_scvlS [Occ=Once] :: [GHC.Base.String]
                                        [LclId] =
                                            [ds4_scvlz] \u []
                                                case ds4_scvlz of {
                                                  (,,,) _ [Occ=Dead]
                                                        xs_scvlP [Occ=Once]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead] ->
                                                      xs_scvlP;
                                                }; } in
                                      let {
                                        sat_scvlL [Occ=Once] :: [a_scrPx]
                                        [LclId] =
                                            [ds4_scvlz] \u []
                                                case ds4_scvlz of {
                                                  (,,,) os_scvlH [Occ=Once]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead]
                                                        _ [Occ=Dead] ->
                                                      os_scvlH;
                                                }; } in
                                      let {
                                        sat_scvlF [Occ=Once] :: a_scrPx
                                        [LclId] =
                                            [wild1_scvjS f_scvly] \u [] f_scvly wild1_scvjS; } in
                                      let {
                                        sat_scvlM [Occ=Once] :: [a_scrPx]
                                        [LclId] =
                                            CCCS :! [sat_scvlF sat_scvlL];
                                      } in  (#,,,#) [sat_scvlM sat_scvlS sat_scvlY sat_scvm4];
                                };
                            '-'# ->
                                case ds1_scvkY of {
                                  [] ->
                                      case w_scvjM of wild4_scvm6 {
                                        System.Console.GetOpt.RequireOrder ->
                                            (#,,,#) [GHC.Types.[]
                                                     wild_scvjP
                                                     GHC.Types.[]
                                                     GHC.Types.[]];
                                        System.Console.GetOpt.Permute ->
                                            let {
                                              ds4_scvm7 [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                                    [GHC.Base.String])
                                              [LclId] =
                                                  [w1_scvjN args_scvjR] \u []
                                                      case
                                                          System.Console.GetOpt.$wgetOpt'
                                                              System.Console.GetOpt.Permute
                                                              w1_scvjN
                                                              args_scvjR
                                                      of
                                                      { (#,,,#) ww1_scvm9 [Occ=Once]
                                                                ww2_scvma [Occ=Once]
                                                                ww3_scvmb [Occ=Once]
                                                                ww4_scvmc [Occ=Once] ->
                                                            (,,,) [ww1_scvm9
                                                                   ww2_scvma
                                                                   ww3_scvmb
                                                                   ww4_scvmc];
                                                      }; } in
                                            let {
                                              sat_scvmB [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scvm7] \u []
                                                      case ds4_scvm7 of {
                                                        (,,,) _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              es_scvmA [Occ=Once] ->
                                                            es_scvmA;
                                                      }; } in
                                            let {
                                              sat_scvmv [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scvm7] \u []
                                                      case ds4_scvm7 of {
                                                        (,,,) _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              us_scvmt [Occ=Once]
                                                              _ [Occ=Dead] ->
                                                            us_scvmt;
                                                      }; } in
                                            let {
                                              sat_scvmo [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scvm7] \u []
                                                      case ds4_scvm7 of {
                                                        (,,,) _ [Occ=Dead]
                                                              xs_scvml [Occ=Once]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead] ->
                                                            xs_scvml;
                                                      }; } in
                                            let {
                                              sat_scvmp [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  CCCS :! [wild1_scvjS sat_scvmo]; } in
                                            let {
                                              sat_scvmi [Occ=Once] :: [a_scrPx]
                                              [LclId] =
                                                  [ds4_scvm7] \u []
                                                      case ds4_scvm7 of {
                                                        (,,,) os_scvme [Occ=Once]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead] ->
                                                            os_scvme;
                                                      };
                                            } in  (#,,,#) [sat_scvmi sat_scvmp sat_scvmv sat_scvmB];
                                        System.Console.GetOpt.ReturnInOrder f_scvmC [Occ=Once!] ->
                                            let {
                                              ds4_scvmD [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                :: ([a_scrPx], [GHC.Base.String], [GHC.Base.String],
                                                    [GHC.Base.String])
                                              [LclId] =
                                                  [w1_scvjN args_scvjR wild4_scvm6] \u []
                                                      case
                                                          System.Console.GetOpt.$wgetOpt'
                                                              wild4_scvm6 w1_scvjN args_scvjR
                                                      of
                                                      { (#,,,#) ww1_scvmF [Occ=Once]
                                                                ww2_scvmG [Occ=Once]
                                                                ww3_scvmH [Occ=Once]
                                                                ww4_scvmI [Occ=Once] ->
                                                            (,,,) [ww1_scvmF
                                                                   ww2_scvmG
                                                                   ww3_scvmH
                                                                   ww4_scvmI];
                                                      }; } in
                                            let {
                                              sat_scvn8 [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scvmD] \u []
                                                      case ds4_scvmD of {
                                                        (,,,) _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              es_scvn7 [Occ=Once] ->
                                                            es_scvn7;
                                                      }; } in
                                            let {
                                              sat_scvn2 [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scvmD] \u []
                                                      case ds4_scvmD of {
                                                        (,,,) _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              us_scvn0 [Occ=Once]
                                                              _ [Occ=Dead] ->
                                                            us_scvn0;
                                                      }; } in
                                            let {
                                              sat_scvmW [Occ=Once] :: [GHC.Base.String]
                                              [LclId] =
                                                  [ds4_scvmD] \u []
                                                      case ds4_scvmD of {
                                                        (,,,) _ [Occ=Dead]
                                                              xs_scvmT [Occ=Once]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead] ->
                                                            xs_scvmT;
                                                      }; } in
                                            let {
                                              sat_scvmP [Occ=Once] :: [a_scrPx]
                                              [LclId] =
                                                  [ds4_scvmD] \u []
                                                      case ds4_scvmD of {
                                                        (,,,) os_scvmL [Occ=Once]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead]
                                                              _ [Occ=Dead] ->
                                                            os_scvmL;
                                                      }; } in
                                            let {
                                              sat_scvmJ [Occ=Once] :: a_scrPx
                                              [LclId] =
                                                  [wild1_scvjS f_scvmC] \u []
                                                      f_scvmC wild1_scvjS; } in
                                            let {
                                              sat_scvmQ [Occ=Once] :: [a_scrPx]
                                              [LclId] =
                                                  CCCS :! [sat_scvmJ sat_scvmP];
                                            } in  (#,,,#) [sat_scvmQ sat_scvmW sat_scvn2 sat_scvn8];
                                      };
                                  : ds4_scvn9 [Occ=Once!] ds5_scvna [Occ=Once*!] ->
                                      case ds4_scvn9 of wild4_scvnb {
                                        GHC.Types.C# ds6_scvnc [Occ=Once!] ->
                                            case ds6_scvnc of ds7_scvnd {
                                              __DEFAULT ->
                                                  let {
                                                    go_scvne [Occ=LoopBreaker]
                                                      :: [System.Console.GetOpt.OptDescr a_scrPx]
                                                         -> [System.Console.GetOpt.OptDescr a_scrPx]
                                                    [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
                                                        sat-only [ds7_scvnd go_scvne] \r [ds8_scvnf]
                                                            case ds8_scvnf of {
                                                              [] -> [] [];
                                                              : y_scvnh [Occ=Once!]
                                                                ys_scvni [Occ=Once] ->
                                                                  case y_scvnh of wild6_scvnj {
                                                                    System.Console.GetOpt.Option ss_scvnk [Occ=Once]
                                                                                                 _ [Occ=Dead]
                                                                                                 _ [Occ=Dead]
                                                                                                 _ [Occ=Dead] ->
                                                                        let {
                                                                          z_scvno [Occ=OnceL]
                                                                            :: [System.Console.GetOpt.OptDescr
                                                                                  a_scrPx]
                                                                          [LclId] =
                                                                              [go_scvne
                                                                               ys_scvni] \u []
                                                                                  go_scvne
                                                                                      ys_scvni; } in
                                                                        let {
                                                                          go1_scvnp [Occ=LoopBreaker]
                                                                            :: [GHC.Types.Char]
                                                                               -> [System.Console.GetOpt.OptDescr
                                                                                     a_scrPx]
                                                                          [LclId,
                                                                           Arity=1,
                                                                           Str=<S,1*U>,
                                                                           Unf=OtherCon []] =
                                                                              sat-only [ds7_scvnd
                                                                                        wild6_scvnj
                                                                                        z_scvno
                                                                                        go1_scvnp] \r [ds12_scvnq]
                                                                                  case
                                                                                      ds12_scvnq
                                                                                  of
                                                                                  { [] -> z_scvno;
                                                                                    : y1_scvns [Occ=Once!]
                                                                                      ys1_scvnt [Occ=Once*] ->
                                                                                        case
                                                                                            y1_scvns
                                                                                        of
                                                                                        { GHC.Types.C# y2_scvnv [Occ=Once] ->
                                                                                              case
                                                                                                  eqChar# [ds7_scvnd
                                                                                                           y2_scvnv]
                                                                                              of
                                                                                              { __DEFAULT ->
                                                                                                    go1_scvnp
                                                                                                        ys1_scvnt;
                                                                                                1# ->
                                                                                                    let {
                                                                                                      sat_scvnx [Occ=Once]
                                                                                                        :: [System.Console.GetOpt.OptDescr
                                                                                                              a_scrPx]
                                                                                                      [LclId] =
                                                                                                          [go1_scvnp
                                                                                                           ys1_scvnt] \u []
                                                                                                              go1_scvnp
                                                                                                                  ys1_scvnt;
                                                                                                    } in 
                                                                                                      : [wild6_scvnj
                                                                                                         sat_scvnx];
                                                                                              };
                                                                                        };
                                                                                  };
                                                                        } in  go1_scvnp ss_scvnk;
                                                                  };
                                                            };
                                                  } in 
                                                    case
                                                        go_scvne w1_scvjN
                                                    of
                                                    options_scvny [Dmd=<S,U>]
                                                    { __DEFAULT ->
                                                          case poly_go1_rcsnl options_scvny of {
                                                            [] ->
                                                                case ds5_scvna of wild6_scvnA {
                                                                  [] ->
                                                                      let {
                                                                        ds8_scvnB [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                          :: ([a_scrPx],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String])
                                                                        [LclId] =
                                                                            [w_scvjM
                                                                             w1_scvjN
                                                                             args_scvjR] \u []
                                                                                case
                                                                                    System.Console.GetOpt.$wgetOpt'
                                                                                        w_scvjM
                                                                                        w1_scvjN
                                                                                        args_scvjR
                                                                                of
                                                                                { (#,,,#) ww1_scvnD [Occ=Once]
                                                                                          ww2_scvnE [Occ=Once]
                                                                                          ww3_scvnF [Occ=Once]
                                                                                          ww4_scvnG [Occ=Once] ->
                                                                                      (,,,) [ww1_scvnD
                                                                                             ww2_scvnE
                                                                                             ww3_scvnF
                                                                                             ww4_scvnG];
                                                                                }; } in
                                                                      let {
                                                                        sat_scvo7 [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scvnB] \u []
                                                                                case ds8_scvnB of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        es_scvo6 [Occ=Once] ->
                                                                                      es_scvo6;
                                                                                }; } in
                                                                      let {
                                                                        sat_scvo0 [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scvnB] \u []
                                                                                case ds8_scvnB of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        us_scvnY [Occ=Once]
                                                                                        _ [Occ=Dead] ->
                                                                                      us_scvnY;
                                                                                }; } in
                                                                      let {
                                                                        sat_scvnT [Occ=Once]
                                                                          :: [GHC.Types.Char]
                                                                        [LclId] =
                                                                            CCCS :! [wild4_scvnb
                                                                                     GHC.Types.[]]; } in
                                                                      let {
                                                                        sat_scvnU [Occ=Once]
                                                                          :: GHC.Base.String
                                                                        [LclId] =
                                                                            CCCS :! [lvl21_rcsng
                                                                                     sat_scvnT]; } in
                                                                      let {
                                                                        sat_scvo1 [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            CCCS :! [sat_scvnU
                                                                                     sat_scvo0]; } in
                                                                      let {
                                                                        sat_scvnS [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scvnB] \u []
                                                                                case ds8_scvnB of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        xs_scvnP [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      xs_scvnP;
                                                                                }; } in
                                                                      let {
                                                                        sat_scvnM [Occ=Once]
                                                                          :: [a_scrPx]
                                                                        [LclId] =
                                                                            [ds8_scvnB] \u []
                                                                                case ds8_scvnB of {
                                                                                  (,,,) os_scvnI [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      os_scvnI;
                                                                                };
                                                                      } in 
                                                                        (#,,,#) [sat_scvnM
                                                                                 sat_scvnS
                                                                                 sat_scvo1
                                                                                 sat_scvo7];
                                                                  : _ [Occ=Dead] _ [Occ=Dead] ->
                                                                      let {
                                                                        ds8_scvoa [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                          :: ([a_scrPx],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String])
                                                                        [LclId] =
                                                                            [w_scvjM
                                                                             w1_scvjN
                                                                             args_scvjR
                                                                             wild6_scvnA] \u []
                                                                                let {
                                                                                  sat_scvob [Occ=OnceL]
                                                                                    :: [GHC.Types.Char]
                                                                                  [LclId] =
                                                                                      CCCS :! [lvl21_rcsng
                                                                                               wild6_scvnA]; } in
                                                                                let {
                                                                                  sat_scvoc [Occ=Once]
                                                                                    :: [GHC.Base.String]
                                                                                  [LclId] =
                                                                                      CCCS :! [sat_scvob
                                                                                               args_scvjR];
                                                                                } in 
                                                                                  case
                                                                                      System.Console.GetOpt.$wgetOpt'
                                                                                          w_scvjM
                                                                                          w1_scvjN
                                                                                          sat_scvoc
                                                                                  of
                                                                                  { (#,,,#) ww1_scvoe [Occ=Once]
                                                                                            ww2_scvof [Occ=Once]
                                                                                            ww3_scvog [Occ=Once]
                                                                                            ww4_scvoh [Occ=Once] ->
                                                                                        (,,,) [ww1_scvoe
                                                                                               ww2_scvof
                                                                                               ww3_scvog
                                                                                               ww4_scvoh];
                                                                                  }; } in
                                                                      let {
                                                                        sat_scvoI [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scvoa] \u []
                                                                                case ds8_scvoa of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        es_scvoH [Occ=Once] ->
                                                                                      es_scvoH;
                                                                                }; } in
                                                                      let {
                                                                        sat_scvoB [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scvoa] \u []
                                                                                case ds8_scvoa of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        us_scvoz [Occ=Once]
                                                                                        _ [Occ=Dead] ->
                                                                                      us_scvoz;
                                                                                }; } in
                                                                      let {
                                                                        sat_scvou [Occ=Once]
                                                                          :: [GHC.Types.Char]
                                                                        [LclId] =
                                                                            CCCS :! [wild4_scvnb
                                                                                     GHC.Types.[]]; } in
                                                                      let {
                                                                        sat_scvov [Occ=Once]
                                                                          :: GHC.Base.String
                                                                        [LclId] =
                                                                            CCCS :! [lvl21_rcsng
                                                                                     sat_scvou]; } in
                                                                      let {
                                                                        sat_scvoC [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            CCCS :! [sat_scvov
                                                                                     sat_scvoB]; } in
                                                                      let {
                                                                        sat_scvot [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds8_scvoa] \u []
                                                                                case ds8_scvoa of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        xs_scvoq [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      xs_scvoq;
                                                                                }; } in
                                                                      let {
                                                                        sat_scvon [Occ=Once]
                                                                          :: [a_scrPx]
                                                                        [LclId] =
                                                                            [ds8_scvoa] \u []
                                                                                case ds8_scvoa of {
                                                                                  (,,,) os_scvoj [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      os_scvoj;
                                                                                };
                                                                      } in 
                                                                        (#,,,#) [sat_scvon
                                                                                 sat_scvot
                                                                                 sat_scvoC
                                                                                 sat_scvoI];
                                                                };
                                                            : ds8_scvoJ [Occ=Once!]
                                                              ds9_scvoK [Occ=Once!] ->
                                                                case ds9_scvoK of {
                                                                  [] ->
                                                                      case ds8_scvoJ of {
                                                                        System.Console.GetOpt.NoArg a1_scvoN [Occ=Once*] ->
                                                                            case
                                                                                ds5_scvna
                                                                            of
                                                                            wild8_scvoO
                                                                            { [] ->
                                                                                  let {
                                                                                    ds10_scvoP [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                      :: ([a_scrPx],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String])
                                                                                    [LclId] =
                                                                                        [w_scvjM
                                                                                         w1_scvjN
                                                                                         args_scvjR] \u []
                                                                                            case
                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                    w_scvjM
                                                                                                    w1_scvjN
                                                                                                    args_scvjR
                                                                                            of
                                                                                            { (#,,,#) ww1_scvoR [Occ=Once]
                                                                                                      ww2_scvoS [Occ=Once]
                                                                                                      ww3_scvoT [Occ=Once]
                                                                                                      ww4_scvoU [Occ=Once] ->
                                                                                                  (,,,) [ww1_scvoR
                                                                                                         ww2_scvoS
                                                                                                         ww3_scvoT
                                                                                                         ww4_scvoU];
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvpj [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scvoP] \u []
                                                                                            case
                                                                                                ds10_scvoP
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    es_scvpi [Occ=Once] ->
                                                                                                  es_scvpi;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvpd [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scvoP] \u []
                                                                                            case
                                                                                                ds10_scvoP
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    us_scvpb [Occ=Once]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  us_scvpb;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvp7 [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scvoP] \u []
                                                                                            case
                                                                                                ds10_scvoP
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    xs_scvp4 [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  xs_scvp4;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvp0 [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        [ds10_scvoP] \u []
                                                                                            case
                                                                                                ds10_scvoP
                                                                                            of
                                                                                            { (,,,) os_scvoW [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  os_scvoW;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvp1 [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        CCCS :! [a1_scvoN
                                                                                                 sat_scvp0];
                                                                                  } in 
                                                                                    (#,,,#) [sat_scvp1
                                                                                             sat_scvp7
                                                                                             sat_scvpd
                                                                                             sat_scvpj];
                                                                              : _ [Occ=Dead]
                                                                                _ [Occ=Dead] ->
                                                                                  let {
                                                                                    ds10_scvpm [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                      :: ([a_scrPx],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String])
                                                                                    [LclId] =
                                                                                        [w_scvjM
                                                                                         w1_scvjN
                                                                                         args_scvjR
                                                                                         wild8_scvoO] \u []
                                                                                            let {
                                                                                              sat_scvpn [Occ=OnceL]
                                                                                                :: [GHC.Types.Char]
                                                                                              [LclId] =
                                                                                                  CCCS :! [lvl21_rcsng
                                                                                                           wild8_scvoO]; } in
                                                                                            let {
                                                                                              sat_scvpo [Occ=Once]
                                                                                                :: [GHC.Base.String]
                                                                                              [LclId] =
                                                                                                  CCCS :! [sat_scvpn
                                                                                                           args_scvjR];
                                                                                            } in 
                                                                                              case
                                                                                                  System.Console.GetOpt.$wgetOpt'
                                                                                                      w_scvjM
                                                                                                      w1_scvjN
                                                                                                      sat_scvpo
                                                                                              of
                                                                                              { (#,,,#) ww1_scvpq [Occ=Once]
                                                                                                        ww2_scvpr [Occ=Once]
                                                                                                        ww3_scvps [Occ=Once]
                                                                                                        ww4_scvpt [Occ=Once] ->
                                                                                                    (,,,) [ww1_scvpq
                                                                                                           ww2_scvpr
                                                                                                           ww3_scvps
                                                                                                           ww4_scvpt];
                                                                                              }; } in
                                                                                  let {
                                                                                    sat_scvpS [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scvpm] \u []
                                                                                            case
                                                                                                ds10_scvpm
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    es_scvpR [Occ=Once] ->
                                                                                                  es_scvpR;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvpM [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scvpm] \u []
                                                                                            case
                                                                                                ds10_scvpm
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    us_scvpK [Occ=Once]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  us_scvpK;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvpG [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds10_scvpm] \u []
                                                                                            case
                                                                                                ds10_scvpm
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    xs_scvpD [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  xs_scvpD;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvpz [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        [ds10_scvpm] \u []
                                                                                            case
                                                                                                ds10_scvpm
                                                                                            of
                                                                                            { (,,,) os_scvpv [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  os_scvpv;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvpA [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        CCCS :! [a1_scvoN
                                                                                                 sat_scvpz];
                                                                                  } in 
                                                                                    (#,,,#) [sat_scvpA
                                                                                             sat_scvpG
                                                                                             sat_scvpM
                                                                                             sat_scvpS];
                                                                            };
                                                                        System.Console.GetOpt.ReqArg ds10_scvpT [Occ=Once*!]
                                                                                                     d_scvpU [Occ=Once] ->
                                                                            case
                                                                                ds5_scvna
                                                                            of
                                                                            wild8_scvpV
                                                                            { [] ->
                                                                                  case
                                                                                      args_scvjR
                                                                                  of
                                                                                  { [] ->
                                                                                        let {
                                                                                          ds11_scvpX [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                            :: ([a_scrPx],
                                                                                                [GHC.Base.String],
                                                                                                [GHC.Base.String],
                                                                                                [GHC.Base.String])
                                                                                          [LclId] =
                                                                                              [w_scvjM
                                                                                               w1_scvjN] \u []
                                                                                                  case
                                                                                                      System.Console.GetOpt.$wgetOpt'
                                                                                                          w_scvjM
                                                                                                          w1_scvjN
                                                                                                          GHC.Types.[]
                                                                                                  of
                                                                                                  { (#,,,#) ww1_scvpZ [Occ=Once]
                                                                                                            ww2_scvq0 [Occ=Once]
                                                                                                            ww3_scvq1 [Occ=Once]
                                                                                                            ww4_scvq2 [Occ=Once] ->
                                                                                                        (,,,) [ww1_scvpZ
                                                                                                               ww2_scvq0
                                                                                                               ww3_scvq1
                                                                                                               ww4_scvq2];
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scvqw [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scvpX] \u []
                                                                                                  case
                                                                                                      ds11_scvpX
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          es_scvqv [Occ=Once] ->
                                                                                                        es_scvqv;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scvqq [Occ=Once]
                                                                                            :: GHC.Base.String
                                                                                          [LclId] =
                                                                                              [wild4_scvnb
                                                                                               d_scvpU] \u []
                                                                                                  let {
                                                                                                    sat_scvqp [Occ=Once]
                                                                                                      :: [GHC.Types.Char]
                                                                                                    [LclId] =
                                                                                                        [wild4_scvnb
                                                                                                         d_scvpU] \u []
                                                                                                            let {
                                                                                                              sat_scvqo [Occ=Once,
                                                                                                                         Dmd=<L,1*U>]
                                                                                                                :: [GHC.Types.Char]
                                                                                                              [LclId] =
                                                                                                                  [d_scvpU] \s []
                                                                                                                      let {
                                                                                                                        sat_scvqn [Occ=Once]
                                                                                                                          :: [GHC.Types.Char]
                                                                                                                        [LclId] =
                                                                                                                            [d_scvpU] \u []
                                                                                                                                GHC.Base.++
                                                                                                                                    d_scvpU
                                                                                                                                    lvl16_rcsnb;
                                                                                                                      } in 
                                                                                                                        GHC.CString.unpackAppendCString#
                                                                                                                            lvl14_rcsn9
                                                                                                                            sat_scvqn; } in
                                                                                                            let {
                                                                                                              sat_scvql [Occ=Once]
                                                                                                                :: [GHC.Types.Char]
                                                                                                              [LclId] =
                                                                                                                  CCCS :! [wild4_scvnb
                                                                                                                           GHC.Types.[]]; } in
                                                                                                            let {
                                                                                                              sat_scvqm [Occ=Once]
                                                                                                                :: [GHC.Types.Char]
                                                                                                              [LclId] =
                                                                                                                  CCCS :! [lvl21_rcsng
                                                                                                                           sat_scvql];
                                                                                                            } in 
                                                                                                              GHC.Base.++
                                                                                                                  sat_scvqm
                                                                                                                  sat_scvqo;
                                                                                                  } in 
                                                                                                    GHC.CString.unpackAppendCString#
                                                                                                        lvl12_rcsn7
                                                                                                        sat_scvqp; } in
                                                                                        let {
                                                                                          sat_scvqx [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              CCCS :! [sat_scvqq
                                                                                                       sat_scvqw]; } in
                                                                                        let {
                                                                                          sat_scvqk [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scvpX] \u []
                                                                                                  case
                                                                                                      ds11_scvpX
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          us_scvqi [Occ=Once]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        us_scvqi;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scvqe [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scvpX] \u []
                                                                                                  case
                                                                                                      ds11_scvpX
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          xs_scvqb [Occ=Once]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        xs_scvqb;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scvq8 [Occ=Once]
                                                                                            :: [a_scrPx]
                                                                                          [LclId] =
                                                                                              [ds11_scvpX] \u []
                                                                                                  case
                                                                                                      ds11_scvpX
                                                                                                  of
                                                                                                  { (,,,) os_scvq4 [Occ=Once]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        os_scvq4;
                                                                                                  };
                                                                                        } in 
                                                                                          (#,,,#) [sat_scvq8
                                                                                                   sat_scvqe
                                                                                                   sat_scvqk
                                                                                                   sat_scvqx];
                                                                                    : r_scvqy [Occ=Once]
                                                                                      rest_scvqz [Occ=Once] ->
                                                                                        let {
                                                                                          ds11_scvqA [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                            :: ([a_scrPx],
                                                                                                [GHC.Base.String],
                                                                                                [GHC.Base.String],
                                                                                                [GHC.Base.String])
                                                                                          [LclId] =
                                                                                              [w_scvjM
                                                                                               w1_scvjN
                                                                                               rest_scvqz] \u []
                                                                                                  case
                                                                                                      System.Console.GetOpt.$wgetOpt'
                                                                                                          w_scvjM
                                                                                                          w1_scvjN
                                                                                                          rest_scvqz
                                                                                                  of
                                                                                                  { (#,,,#) ww1_scvqC [Occ=Once]
                                                                                                            ww2_scvqD [Occ=Once]
                                                                                                            ww3_scvqE [Occ=Once]
                                                                                                            ww4_scvqF [Occ=Once] ->
                                                                                                        (,,,) [ww1_scvqC
                                                                                                               ww2_scvqD
                                                                                                               ww3_scvqE
                                                                                                               ww4_scvqF];
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scvr5 [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scvqA] \u []
                                                                                                  case
                                                                                                      ds11_scvqA
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          es_scvr4 [Occ=Once] ->
                                                                                                        es_scvr4;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scvqZ [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scvqA] \u []
                                                                                                  case
                                                                                                      ds11_scvqA
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          us_scvqX [Occ=Once]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        us_scvqX;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scvqT [Occ=Once]
                                                                                            :: [GHC.Base.String]
                                                                                          [LclId] =
                                                                                              [ds11_scvqA] \u []
                                                                                                  case
                                                                                                      ds11_scvqA
                                                                                                  of
                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                          xs_scvqQ [Occ=Once]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        xs_scvqQ;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scvqM [Occ=Once]
                                                                                            :: [a_scrPx]
                                                                                          [LclId] =
                                                                                              [ds11_scvqA] \u []
                                                                                                  case
                                                                                                      ds11_scvqA
                                                                                                  of
                                                                                                  { (,,,) os_scvqI [Occ=Once]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead]
                                                                                                          _ [Occ=Dead] ->
                                                                                                        os_scvqI;
                                                                                                  }; } in
                                                                                        let {
                                                                                          sat_scvqG [Occ=Once]
                                                                                            :: a_scrPx
                                                                                          [LclId] =
                                                                                              [ds10_scvpT
                                                                                               r_scvqy] \u []
                                                                                                  ds10_scvpT
                                                                                                      r_scvqy; } in
                                                                                        let {
                                                                                          sat_scvqN [Occ=Once]
                                                                                            :: [a_scrPx]
                                                                                          [LclId] =
                                                                                              CCCS :! [sat_scvqG
                                                                                                       sat_scvqM];
                                                                                        } in 
                                                                                          (#,,,#) [sat_scvqN
                                                                                                   sat_scvqT
                                                                                                   sat_scvqZ
                                                                                                   sat_scvr5];
                                                                                  };
                                                                              : _ [Occ=Dead]
                                                                                _ [Occ=Dead] ->
                                                                                  let {
                                                                                    ds11_scvr8 [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                      :: ([a_scrPx],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String])
                                                                                    [LclId] =
                                                                                        [w_scvjM
                                                                                         w1_scvjN
                                                                                         args_scvjR] \u []
                                                                                            case
                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                    w_scvjM
                                                                                                    w1_scvjN
                                                                                                    args_scvjR
                                                                                            of
                                                                                            { (#,,,#) ww1_scvra [Occ=Once]
                                                                                                      ww2_scvrb [Occ=Once]
                                                                                                      ww3_scvrc [Occ=Once]
                                                                                                      ww4_scvrd [Occ=Once] ->
                                                                                                  (,,,) [ww1_scvra
                                                                                                         ww2_scvrb
                                                                                                         ww3_scvrc
                                                                                                         ww4_scvrd];
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvrD [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scvr8] \u []
                                                                                            case
                                                                                                ds11_scvr8
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    es_scvrC [Occ=Once] ->
                                                                                                  es_scvrC;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvrx [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scvr8] \u []
                                                                                            case
                                                                                                ds11_scvr8
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    us_scvrv [Occ=Once]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  us_scvrv;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvrr [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scvr8] \u []
                                                                                            case
                                                                                                ds11_scvr8
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    xs_scvro [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  xs_scvro;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvrk [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        [ds11_scvr8] \u []
                                                                                            case
                                                                                                ds11_scvr8
                                                                                            of
                                                                                            { (,,,) os_scvrg [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  os_scvrg;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvre [Occ=Once]
                                                                                      :: a_scrPx
                                                                                    [LclId] =
                                                                                        [ds10_scvpT
                                                                                         wild8_scvpV] \u []
                                                                                            ds10_scvpT
                                                                                                wild8_scvpV; } in
                                                                                  let {
                                                                                    sat_scvrl [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        CCCS :! [sat_scvre
                                                                                                 sat_scvrk];
                                                                                  } in 
                                                                                    (#,,,#) [sat_scvrl
                                                                                             sat_scvrr
                                                                                             sat_scvrx
                                                                                             sat_scvrD];
                                                                            };
                                                                        System.Console.GetOpt.OptArg f_scvrE [Occ=Once*!]
                                                                                                     _ [Occ=Dead] ->
                                                                            case
                                                                                ds5_scvna
                                                                            of
                                                                            wild8_scvrG
                                                                            { [] ->
                                                                                  let {
                                                                                    ds11_scvrH [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                      :: ([a_scrPx],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String])
                                                                                    [LclId] =
                                                                                        [w_scvjM
                                                                                         w1_scvjN
                                                                                         args_scvjR] \u []
                                                                                            case
                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                    w_scvjM
                                                                                                    w1_scvjN
                                                                                                    args_scvjR
                                                                                            of
                                                                                            { (#,,,#) ww1_scvrJ [Occ=Once]
                                                                                                      ww2_scvrK [Occ=Once]
                                                                                                      ww3_scvrL [Occ=Once]
                                                                                                      ww4_scvrM [Occ=Once] ->
                                                                                                  (,,,) [ww1_scvrJ
                                                                                                         ww2_scvrK
                                                                                                         ww3_scvrL
                                                                                                         ww4_scvrM];
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvsc [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scvrH] \u []
                                                                                            case
                                                                                                ds11_scvrH
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    es_scvsb [Occ=Once] ->
                                                                                                  es_scvsb;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvs6 [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scvrH] \u []
                                                                                            case
                                                                                                ds11_scvrH
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    us_scvs4 [Occ=Once]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  us_scvs4;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvs0 [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scvrH] \u []
                                                                                            case
                                                                                                ds11_scvrH
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    xs_scvrX [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  xs_scvrX;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvrT [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        [ds11_scvrH] \u []
                                                                                            case
                                                                                                ds11_scvrH
                                                                                            of
                                                                                            { (,,,) os_scvrP [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  os_scvrP;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvrN [Occ=Once]
                                                                                      :: a_scrPx
                                                                                    [LclId] =
                                                                                        [f_scvrE] \u []
                                                                                            f_scvrE
                                                                                                GHC.Base.Nothing; } in
                                                                                  let {
                                                                                    sat_scvrU [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        CCCS :! [sat_scvrN
                                                                                                 sat_scvrT];
                                                                                  } in 
                                                                                    (#,,,#) [sat_scvrU
                                                                                             sat_scvs0
                                                                                             sat_scvs6
                                                                                             sat_scvsc];
                                                                              : _ [Occ=Dead]
                                                                                _ [Occ=Dead] ->
                                                                                  let {
                                                                                    ds11_scvsf [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                      :: ([a_scrPx],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String],
                                                                                          [GHC.Base.String])
                                                                                    [LclId] =
                                                                                        [w_scvjM
                                                                                         w1_scvjN
                                                                                         args_scvjR] \u []
                                                                                            case
                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                    w_scvjM
                                                                                                    w1_scvjN
                                                                                                    args_scvjR
                                                                                            of
                                                                                            { (#,,,#) ww1_scvsh [Occ=Once]
                                                                                                      ww2_scvsi [Occ=Once]
                                                                                                      ww3_scvsj [Occ=Once]
                                                                                                      ww4_scvsk [Occ=Once] ->
                                                                                                  (,,,) [ww1_scvsh
                                                                                                         ww2_scvsi
                                                                                                         ww3_scvsj
                                                                                                         ww4_scvsk];
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvsL [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scvsf] \u []
                                                                                            case
                                                                                                ds11_scvsf
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    es_scvsK [Occ=Once] ->
                                                                                                  es_scvsK;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvsF [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scvsf] \u []
                                                                                            case
                                                                                                ds11_scvsf
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    us_scvsD [Occ=Once]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  us_scvsD;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvsz [Occ=Once]
                                                                                      :: [GHC.Base.String]
                                                                                    [LclId] =
                                                                                        [ds11_scvsf] \u []
                                                                                            case
                                                                                                ds11_scvsf
                                                                                            of
                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                    xs_scvsw [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  xs_scvsw;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvss [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        [ds11_scvsf] \u []
                                                                                            case
                                                                                                ds11_scvsf
                                                                                            of
                                                                                            { (,,,) os_scvso [Occ=Once]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  os_scvso;
                                                                                            }; } in
                                                                                  let {
                                                                                    sat_scvsm [Occ=Once]
                                                                                      :: a_scrPx
                                                                                    [LclId] =
                                                                                        [f_scvrE
                                                                                         wild8_scvrG] \u []
                                                                                            let {
                                                                                              sat_scvsl [Occ=Once]
                                                                                                :: GHC.Base.Maybe
                                                                                                     GHC.Base.String
                                                                                              [LclId] =
                                                                                                  CCCS GHC.Base.Just! [wild8_scvrG];
                                                                                            } in 
                                                                                              f_scvrE
                                                                                                  sat_scvsl; } in
                                                                                  let {
                                                                                    sat_scvst [Occ=Once]
                                                                                      :: [a_scrPx]
                                                                                    [LclId] =
                                                                                        CCCS :! [sat_scvsm
                                                                                                 sat_scvss];
                                                                                  } in 
                                                                                    (#,,,#) [sat_scvst
                                                                                             sat_scvsz
                                                                                             sat_scvsF
                                                                                             sat_scvsL];
                                                                            };
                                                                      };
                                                                  : _ [Occ=Dead] _ [Occ=Dead] ->
                                                                      let {
                                                                        ds12_scvsO [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                          :: ([a_scrPx],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String],
                                                                              [GHC.Base.String])
                                                                        [LclId] =
                                                                            [w_scvjM
                                                                             w1_scvjN
                                                                             args_scvjR] \u []
                                                                                case
                                                                                    System.Console.GetOpt.$wgetOpt'
                                                                                        w_scvjM
                                                                                        w1_scvjN
                                                                                        args_scvjR
                                                                                of
                                                                                { (#,,,#) ww1_scvsQ [Occ=Once]
                                                                                          ww2_scvsR [Occ=Once]
                                                                                          ww3_scvsS [Occ=Once]
                                                                                          ww4_scvsT [Occ=Once] ->
                                                                                      (,,,) [ww1_scvsQ
                                                                                             ww2_scvsR
                                                                                             ww3_scvsS
                                                                                             ww4_scvsT];
                                                                                }; } in
                                                                      let {
                                                                        sat_scvtm [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds12_scvsO] \u []
                                                                                case ds12_scvsO of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        es_scvtl [Occ=Once] ->
                                                                                      es_scvtl;
                                                                                }; } in
                                                                      let {
                                                                        sat_scvtg [Occ=Once]
                                                                          :: GHC.Base.String
                                                                        [LclId] =
                                                                            [wild4_scvnb
                                                                             options_scvny] \u []
                                                                                let {
                                                                                  sat_scvtf [Occ=Once]
                                                                                    :: GHC.Base.String
                                                                                  [LclId] =
                                                                                      [wild4_scvnb] \u []
                                                                                          let {
                                                                                            sat_scvte [Occ=Once]
                                                                                              :: [GHC.Types.Char]
                                                                                            [LclId] =
                                                                                                [wild4_scvnb] \u []
                                                                                                    let {
                                                                                                      sat_scvtc [Occ=Once]
                                                                                                        :: [GHC.Types.Char]
                                                                                                      [LclId] =
                                                                                                          CCCS :! [wild4_scvnb
                                                                                                                   GHC.Types.[]]; } in
                                                                                                    let {
                                                                                                      sat_scvtd [Occ=Once]
                                                                                                        :: [GHC.Types.Char]
                                                                                                      [LclId] =
                                                                                                          CCCS :! [lvl21_rcsng
                                                                                                                   sat_scvtc];
                                                                                                    } in 
                                                                                                      GHC.Base.++
                                                                                                          sat_scvtd
                                                                                                          lvl24_rcsnk;
                                                                                          } in 
                                                                                            GHC.CString.unpackAppendCString#
                                                                                                lvl12_rcsn7
                                                                                                sat_scvte;
                                                                                } in 
                                                                                  System.Console.GetOpt.usageInfo
                                                                                      sat_scvtf
                                                                                      options_scvny; } in
                                                                      let {
                                                                        sat_scvtn [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            CCCS :! [sat_scvtg
                                                                                     sat_scvtm]; } in
                                                                      let {
                                                                        sat_scvtb [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds12_scvsO] \u []
                                                                                case ds12_scvsO of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        us_scvt9 [Occ=Once]
                                                                                        _ [Occ=Dead] ->
                                                                                      us_scvt9;
                                                                                }; } in
                                                                      let {
                                                                        sat_scvt5 [Occ=Once]
                                                                          :: [GHC.Base.String]
                                                                        [LclId] =
                                                                            [ds12_scvsO] \u []
                                                                                case ds12_scvsO of {
                                                                                  (,,,) _ [Occ=Dead]
                                                                                        xs_scvt2 [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      xs_scvt2;
                                                                                }; } in
                                                                      let {
                                                                        sat_scvsZ [Occ=Once]
                                                                          :: [a_scrPx]
                                                                        [LclId] =
                                                                            [ds12_scvsO] \u []
                                                                                case ds12_scvsO of {
                                                                                  (,,,) os_scvsV [Occ=Once]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      os_scvsV;
                                                                                };
                                                                      } in 
                                                                        (#,,,#) [sat_scvsZ
                                                                                 sat_scvt5
                                                                                 sat_scvtb
                                                                                 sat_scvtn];
                                                                };
                                                          };
                                                    };
                                              '-'# ->
                                                  case ds5_scvna of wild5_scvto {
                                                    [] ->
                                                        case w_scvjM of {
                                                          __DEFAULT ->
                                                              (#,,,#) [GHC.Types.[]
                                                                       args_scvjR
                                                                       GHC.Types.[]
                                                                       GHC.Types.[]];
                                                          System.Console.GetOpt.ReturnInOrder f_scvtq [Occ=Once] ->
                                                              let {
                                                                sat_scvtr [Occ=Once] :: [a_scrPx]
                                                                [LclId] =
                                                                    [args_scvjR f_scvtq] \u []
                                                                        GHC.Base.map
                                                                            f_scvtq args_scvjR;
                                                              } in 
                                                                (#,,,#) [sat_scvtr
                                                                         GHC.Types.[]
                                                                         GHC.Types.[]
                                                                         GHC.Types.[]];
                                                        };
                                                    : _ [Occ=Dead] _ [Occ=Dead] ->
                                                        let {
                                                          ds8_scvtu [Dmd=<L,U(1*U,1*U)>]
                                                            :: ([GHC.Types.Char], [GHC.Types.Char])
                                                          [LclId] =
                                                              [wild5_scvto] \u []
                                                                  case
                                                                      GHC.List.$wbreak
                                                                          lvl20_rcsnf wild5_scvto
                                                                  of
                                                                  { (#,#) ww1_scvtw [Occ=Once]
                                                                          ww2_scvtx [Occ=Once] ->
                                                                        (,) [ww1_scvtw ww2_scvtx];
                                                                  }; } in
                                                        let {
                                                          opt_scvty :: [GHC.Types.Char]
                                                          [LclId] =
                                                              [ds8_scvtu] \u []
                                                                  case ds8_scvtu of {
                                                                    (,) opt1_scvtA [Occ=Once]
                                                                        _ [Occ=Dead] ->
                                                                        opt1_scvtA;
                                                                  }; } in
                                                        let {
                                                          getWith_scvtC [Dmd=<C(S),C(U)>]
                                                            :: ([GHC.Types.Char]
                                                                -> GHC.Base.String
                                                                -> GHC.Types.Bool)
                                                               -> [System.Console.GetOpt.OptDescr
                                                                     a_scrPx]
                                                          [LclId,
                                                           Arity=1,
                                                           Str=<L,1*C1(C(U))>,
                                                           Unf=OtherCon []] =
                                                              sat-only [w1_scvjN
                                                                        opt_scvty] \r [p_scvtD]
                                                                  let {
                                                                    p1_scvtE [Occ=OnceL!,
                                                                              Dmd=<L,C(U)>]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Types.Bool
                                                                    [LclId] =
                                                                        [opt_scvty p_scvtD] \u []
                                                                            p_scvtD opt_scvty; } in
                                                                  let {
                                                                    go_scvtF [Occ=LoopBreaker]
                                                                      :: [System.Console.GetOpt.OptDescr
                                                                            a_scrPx]
                                                                         -> [System.Console.GetOpt.OptDescr
                                                                               a_scrPx]
                                                                    [LclId,
                                                                     Arity=1,
                                                                     Str=<S,1*U>,
                                                                     Unf=OtherCon []] =
                                                                        sat-only [p1_scvtE
                                                                                  go_scvtF] \r [ds9_scvtG]
                                                                            case ds9_scvtG of {
                                                                              [] -> [] [];
                                                                              : y_scvtI [Occ=Once!]
                                                                                ys_scvtJ ->
                                                                                  case
                                                                                      y_scvtI
                                                                                  of
                                                                                  wild7_scvtK
                                                                                  { System.Console.GetOpt.Option _ [Occ=Dead]
                                                                                                                 xs_scvtM [Occ=Once]
                                                                                                                 _ [Occ=Dead]
                                                                                                                 _ [Occ=Dead] ->
                                                                                        let-no-escape {
                                                                                          exit_scvtP [Occ=OnceLT[0]]
                                                                                            :: [System.Console.GetOpt.OptDescr
                                                                                                  a_scrPx]
                                                                                          [LclId[JoinId(0)],
                                                                                           Unf=OtherCon []] =
                                                                                              [go_scvtF
                                                                                               ys_scvtJ] \r []
                                                                                                  go_scvtF
                                                                                                      ys_scvtJ;
                                                                                        } in 
                                                                                          let-no-escape {
                                                                                            exit1_scvtQ [Occ=OnceLT[0]]
                                                                                              :: [System.Console.GetOpt.OptDescr
                                                                                                    a_scrPx]
                                                                                            [LclId[JoinId(0)],
                                                                                             Unf=OtherCon []] =
                                                                                                [go_scvtF
                                                                                                 ys_scvtJ
                                                                                                 wild7_scvtK] \r []
                                                                                                    let {
                                                                                                      sat_scvtR [Occ=Once]
                                                                                                        :: [System.Console.GetOpt.OptDescr
                                                                                                              a_scrPx]
                                                                                                      [LclId] =
                                                                                                          [go_scvtF
                                                                                                           ys_scvtJ] \u []
                                                                                                              go_scvtF
                                                                                                                  ys_scvtJ;
                                                                                                    } in 
                                                                                                      : [wild7_scvtK
                                                                                                         sat_scvtR];
                                                                                          } in 
                                                                                            let-no-escape {
                                                                                              go1_scvtS [Occ=LoopBreakerT[1]]
                                                                                                :: [GHC.Base.String]
                                                                                                   -> [System.Console.GetOpt.OptDescr
                                                                                                         a_scrPx]
                                                                                              [LclId[JoinId(1)],
                                                                                               Arity=1,
                                                                                               Str=<S,1*U>,
                                                                                               Unf=OtherCon []] =
                                                                                                  sat-only [p1_scvtE
                                                                                                            exit_scvtP
                                                                                                            exit1_scvtQ
                                                                                                            go1_scvtS] \r [ds13_scvtT]
                                                                                                      case
                                                                                                          ds13_scvtT
                                                                                                      of
                                                                                                      { [] ->
                                                                                                            exit_scvtP;
                                                                                                        : y1_scvtV [Occ=Once]
                                                                                                          ys1_scvtW [Occ=Once] ->
                                                                                                            case
                                                                                                                p1_scvtE
                                                                                                                    y1_scvtV
                                                                                                            of
                                                                                                            { GHC.Types.False ->
                                                                                                                  go1_scvtS
                                                                                                                      ys1_scvtW;
                                                                                                              GHC.Types.True ->
                                                                                                                  exit1_scvtQ;
                                                                                                            };
                                                                                                      };
                                                                                            } in 
                                                                                              go1_scvtS
                                                                                                  xs_scvtM;
                                                                                  };
                                                                            };
                                                                  } in  go_scvtF w1_scvjN;
                                                        } in 
                                                          let-no-escape {
                                                            $j_scvtY [Occ=Once*!T[1],
                                                                      Dmd=<C(S),1*C1(U(U,U,U,U))>]
                                                              :: [System.Console.GetOpt.OptDescr
                                                                    a_scrPx]
                                                                 -> (# [a_scrPx], [GHC.Base.String],
                                                                       [GHC.Base.String],
                                                                       [GHC.Base.String] #)
                                                            [LclId[JoinId(1)],
                                                             Arity=1,
                                                             Str=<S,U>,
                                                             Unf=OtherCon []] =
                                                                sat-only [w_scvjM
                                                                          w1_scvjN
                                                                          args_scvjR
                                                                          wild5_scvto
                                                                          ds8_scvtu
                                                                          opt_scvty] \r [options_scvtZ]
                                                                    case
                                                                        poly_go_rcsnj options_scvtZ
                                                                    of
                                                                    { [] ->
                                                                          let {
                                                                            ds9_scvu1 [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                              :: ([a_scrPx],
                                                                                  [GHC.Base.String],
                                                                                  [GHC.Base.String],
                                                                                  [GHC.Base.String])
                                                                            [LclId] =
                                                                                [w_scvjM
                                                                                 w1_scvjN
                                                                                 args_scvjR] \u []
                                                                                    case
                                                                                        System.Console.GetOpt.$wgetOpt'
                                                                                            w_scvjM
                                                                                            w1_scvjN
                                                                                            args_scvjR
                                                                                    of
                                                                                    { (#,,,#) ww1_scvu3 [Occ=Once]
                                                                                              ww2_scvu4 [Occ=Once]
                                                                                              ww3_scvu5 [Occ=Once]
                                                                                              ww4_scvu6 [Occ=Once] ->
                                                                                          (,,,) [ww1_scvu3
                                                                                                 ww2_scvu4
                                                                                                 ww3_scvu5
                                                                                                 ww4_scvu6];
                                                                                    }; } in
                                                                          let {
                                                                            sat_scvuw [Occ=Once]
                                                                              :: [GHC.Base.String]
                                                                            [LclId] =
                                                                                [ds9_scvu1] \u []
                                                                                    case
                                                                                        ds9_scvu1
                                                                                    of
                                                                                    { (,,,) _ [Occ=Dead]
                                                                                            _ [Occ=Dead]
                                                                                            _ [Occ=Dead]
                                                                                            es_scvuv [Occ=Once] ->
                                                                                          es_scvuv;
                                                                                    }; } in
                                                                          let {
                                                                            sat_scvup [Occ=Once]
                                                                              :: [GHC.Base.String]
                                                                            [LclId] =
                                                                                [ds9_scvu1] \u []
                                                                                    case
                                                                                        ds9_scvu1
                                                                                    of
                                                                                    { (,,,) _ [Occ=Dead]
                                                                                            _ [Occ=Dead]
                                                                                            us_scvun [Occ=Once]
                                                                                            _ [Occ=Dead] ->
                                                                                          us_scvun;
                                                                                    }; } in
                                                                          let {
                                                                            sat_scvuj [Occ=Once]
                                                                              :: GHC.Base.String
                                                                            [LclId] =
                                                                                [wild5_scvto] \u []
                                                                                    GHC.CString.unpackAppendCString#
                                                                                        lvl6_rcsn1
                                                                                        wild5_scvto; } in
                                                                          let {
                                                                            sat_scvuq [Occ=Once]
                                                                              :: [GHC.Base.String]
                                                                            [LclId] =
                                                                                CCCS :! [sat_scvuj
                                                                                         sat_scvup]; } in
                                                                          let {
                                                                            sat_scvui [Occ=Once]
                                                                              :: [GHC.Base.String]
                                                                            [LclId] =
                                                                                [ds9_scvu1] \u []
                                                                                    case
                                                                                        ds9_scvu1
                                                                                    of
                                                                                    { (,,,) _ [Occ=Dead]
                                                                                            xs_scvuf [Occ=Once]
                                                                                            _ [Occ=Dead]
                                                                                            _ [Occ=Dead] ->
                                                                                          xs_scvuf;
                                                                                    }; } in
                                                                          let {
                                                                            sat_scvuc [Occ=Once]
                                                                              :: [a_scrPx]
                                                                            [LclId] =
                                                                                [ds9_scvu1] \u []
                                                                                    case
                                                                                        ds9_scvu1
                                                                                    of
                                                                                    { (,,,) os_scvu8 [Occ=Once]
                                                                                            _ [Occ=Dead]
                                                                                            _ [Occ=Dead]
                                                                                            _ [Occ=Dead] ->
                                                                                          os_scvu8;
                                                                                    };
                                                                          } in 
                                                                            (#,,,#) [sat_scvuc
                                                                                     sat_scvui
                                                                                     sat_scvuq
                                                                                     sat_scvuw];
                                                                      : ds9_scvux [Occ=Once!]
                                                                        ds10_scvuy [Occ=Once!] ->
                                                                          case ds10_scvuy of {
                                                                            [] ->
                                                                                case ds9_scvux of {
                                                                                  System.Console.GetOpt.NoArg a1_scvuB [Occ=Once] ->
                                                                                      case
                                                                                          ds8_scvtu
                                                                                      of
                                                                                      { (,) _ [Occ=Dead]
                                                                                            arg1_scvuE [Occ=Once!] ->
                                                                                            case
                                                                                                arg1_scvuE
                                                                                            of
                                                                                            { [] ->
                                                                                                  let {
                                                                                                    ds11_scvuG [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                      :: ([a_scrPx],
                                                                                                          [GHC.Base.String],
                                                                                                          [GHC.Base.String],
                                                                                                          [GHC.Base.String])
                                                                                                    [LclId] =
                                                                                                        [w_scvjM
                                                                                                         w1_scvjN
                                                                                                         args_scvjR] \u []
                                                                                                            case
                                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                                    w_scvjM
                                                                                                                    w1_scvjN
                                                                                                                    args_scvjR
                                                                                                            of
                                                                                                            { (#,,,#) ww1_scvuI [Occ=Once]
                                                                                                                      ww2_scvuJ [Occ=Once]
                                                                                                                      ww3_scvuK [Occ=Once]
                                                                                                                      ww4_scvuL [Occ=Once] ->
                                                                                                                  (,,,) [ww1_scvuI
                                                                                                                         ww2_scvuJ
                                                                                                                         ww3_scvuK
                                                                                                                         ww4_scvuL];
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scvva [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds11_scvuG] \u []
                                                                                                            case
                                                                                                                ds11_scvuG
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    es_scvv9 [Occ=Once] ->
                                                                                                                  es_scvv9;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scvv4 [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds11_scvuG] \u []
                                                                                                            case
                                                                                                                ds11_scvuG
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    us_scvv2 [Occ=Once]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  us_scvv2;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scvuY [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds11_scvuG] \u []
                                                                                                            case
                                                                                                                ds11_scvuG
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    xs_scvuV [Occ=Once]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  xs_scvuV;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scvuR [Occ=Once]
                                                                                                      :: [a_scrPx]
                                                                                                    [LclId] =
                                                                                                        [ds11_scvuG] \u []
                                                                                                            case
                                                                                                                ds11_scvuG
                                                                                                            of
                                                                                                            { (,,,) os_scvuN [Occ=Once]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  os_scvuN;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scvuS [Occ=Once]
                                                                                                      :: [a_scrPx]
                                                                                                    [LclId] =
                                                                                                        CCCS :! [a1_scvuB
                                                                                                                 sat_scvuR];
                                                                                                  } in 
                                                                                                    (#,,,#) [sat_scvuS
                                                                                                             sat_scvuY
                                                                                                             sat_scvv4
                                                                                                             sat_scvva];
                                                                                              : ds11_scvvb [Occ=Once!]
                                                                                                _ [Occ=Dead] ->
                                                                                                  case
                                                                                                      ds11_scvvb
                                                                                                  of
                                                                                                  { GHC.Types.C# ds13_scvve [Occ=Once!] ->
                                                                                                        case
                                                                                                            ds13_scvve
                                                                                                        of
                                                                                                        { __DEFAULT ->
                                                                                                              let {
                                                                                                                ds15_scvvg [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scvjM
                                                                                                                     w1_scvjN
                                                                                                                     args_scvjR] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scvjM
                                                                                                                                w1_scvjN
                                                                                                                                args_scvjR
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scvvi [Occ=Once]
                                                                                                                                  ww2_scvvj [Occ=Once]
                                                                                                                                  ww3_scvvk [Occ=Once]
                                                                                                                                  ww4_scvvl [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scvvi
                                                                                                                                     ww2_scvvj
                                                                                                                                     ww3_scvvk
                                                                                                                                     ww4_scvvl];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvvL [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvvg] \u []
                                                                                                                        case
                                                                                                                            ds15_scvvg
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scvvK [Occ=Once] ->
                                                                                                                              es_scvvK;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvvE [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvvg] \u []
                                                                                                                        case
                                                                                                                            ds15_scvvg
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scvvC [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scvvC;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvvy [Occ=Once]
                                                                                                                  :: GHC.Base.String
                                                                                                                [LclId] =
                                                                                                                    [wild5_scvto] \u []
                                                                                                                        GHC.CString.unpackAppendCString#
                                                                                                                            lvl6_rcsn1
                                                                                                                            wild5_scvto; } in
                                                                                                              let {
                                                                                                                sat_scvvF [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scvvy
                                                                                                                             sat_scvvE]; } in
                                                                                                              let {
                                                                                                                sat_scvvx [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvvg] \u []
                                                                                                                        case
                                                                                                                            ds15_scvvg
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs_scvvu [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs_scvvu;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvvr [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvvg] \u []
                                                                                                                        case
                                                                                                                            ds15_scvvg
                                                                                                                        of
                                                                                                                        { (,,,) os_scvvn [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scvvn;
                                                                                                                        };
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scvvr
                                                                                                                         sat_scvvx
                                                                                                                         sat_scvvF
                                                                                                                         sat_scvvL];
                                                                                                          '='# ->
                                                                                                              let {
                                                                                                                ds15_scvvM [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scvjM
                                                                                                                     w1_scvjN
                                                                                                                     args_scvjR] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scvjM
                                                                                                                                w1_scvjN
                                                                                                                                args_scvjR
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scvvO [Occ=Once]
                                                                                                                                  ww2_scvvP [Occ=Once]
                                                                                                                                  ww3_scvvQ [Occ=Once]
                                                                                                                                  ww4_scvvR [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scvvO
                                                                                                                                     ww2_scvvP
                                                                                                                                     ww3_scvvQ
                                                                                                                                     ww4_scvvR];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvwh [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvvM] \u []
                                                                                                                        case
                                                                                                                            ds15_scvvM
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scvwg [Occ=Once] ->
                                                                                                                              es_scvwg;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvwb [Occ=Once]
                                                                                                                  :: GHC.Base.String
                                                                                                                [LclId] =
                                                                                                                    [opt_scvty] \u []
                                                                                                                        let {
                                                                                                                          sat_scvwa [Occ=Once]
                                                                                                                            :: [GHC.Types.Char]
                                                                                                                          [LclId] =
                                                                                                                              [opt_scvty] \u []
                                                                                                                                  GHC.Base.++
                                                                                                                                      opt_scvty
                                                                                                                                      lvl22_rcsnh;
                                                                                                                        } in 
                                                                                                                          GHC.CString.unpackAppendCString#
                                                                                                                              lvl23_rcsni
                                                                                                                              sat_scvwa; } in
                                                                                                              let {
                                                                                                                sat_scvwi [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scvwb
                                                                                                                             sat_scvwh]; } in
                                                                                                              let {
                                                                                                                sat_scvw9 [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvvM] \u []
                                                                                                                        case
                                                                                                                            ds15_scvvM
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scvw7 [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scvw7;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvw3 [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvvM] \u []
                                                                                                                        case
                                                                                                                            ds15_scvvM
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs_scvw0 [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs_scvw0;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvvX [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvvM] \u []
                                                                                                                        case
                                                                                                                            ds15_scvvM
                                                                                                                        of
                                                                                                                        { (,,,) os_scvvT [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scvvT;
                                                                                                                        };
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scvvX
                                                                                                                         sat_scvw3
                                                                                                                         sat_scvw9
                                                                                                                         sat_scvwi];
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                  System.Console.GetOpt.ReqArg ds11_scvwj [Occ=Once*!]
                                                                                                               d_scvwk [Occ=Once] ->
                                                                                      case
                                                                                          ds8_scvtu
                                                                                      of
                                                                                      { (,) _ [Occ=Dead]
                                                                                            arg1_scvwn [Occ=Once!] ->
                                                                                            case
                                                                                                arg1_scvwn
                                                                                            of
                                                                                            { [] ->
                                                                                                  case
                                                                                                      args_scvjR
                                                                                                  of
                                                                                                  { [] ->
                                                                                                        let {
                                                                                                          ds12_scvwq [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                            :: ([a_scrPx],
                                                                                                                [GHC.Base.String],
                                                                                                                [GHC.Base.String],
                                                                                                                [GHC.Base.String])
                                                                                                          [LclId] =
                                                                                                              [w_scvjM
                                                                                                               w1_scvjN] \u []
                                                                                                                  case
                                                                                                                      System.Console.GetOpt.$wgetOpt'
                                                                                                                          w_scvjM
                                                                                                                          w1_scvjN
                                                                                                                          GHC.Types.[]
                                                                                                                  of
                                                                                                                  { (#,,,#) ww1_scvws [Occ=Once]
                                                                                                                            ww2_scvwt [Occ=Once]
                                                                                                                            ww3_scvwu [Occ=Once]
                                                                                                                            ww4_scvwv [Occ=Once] ->
                                                                                                                        (,,,) [ww1_scvws
                                                                                                                               ww2_scvwt
                                                                                                                               ww3_scvwu
                                                                                                                               ww4_scvwv];
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scvwY [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scvwq] \u []
                                                                                                                  case
                                                                                                                      ds12_scvwq
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          es_scvwX [Occ=Once] ->
                                                                                                                        es_scvwX;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scvwS [Occ=Once]
                                                                                                            :: GHC.Base.String
                                                                                                          [LclId] =
                                                                                                              [opt_scvty
                                                                                                               d_scvwk] \u []
                                                                                                                  let {
                                                                                                                    sat_scvwR [Occ=Once]
                                                                                                                      :: [GHC.Types.Char]
                                                                                                                    [LclId] =
                                                                                                                        [opt_scvty
                                                                                                                         d_scvwk] \u []
                                                                                                                            let {
                                                                                                                              sat_scvwQ [Occ=Once,
                                                                                                                                         Dmd=<L,1*U>]
                                                                                                                                :: [GHC.Types.Char]
                                                                                                                              [LclId] =
                                                                                                                                  [d_scvwk] \s []
                                                                                                                                      let {
                                                                                                                                        sat_scvwP [Occ=Once]
                                                                                                                                          :: [GHC.Types.Char]
                                                                                                                                        [LclId] =
                                                                                                                                            [d_scvwk] \u []
                                                                                                                                                GHC.Base.++
                                                                                                                                                    d_scvwk
                                                                                                                                                    lvl16_rcsnb;
                                                                                                                                      } in 
                                                                                                                                        GHC.CString.unpackAppendCString#
                                                                                                                                            lvl14_rcsn9
                                                                                                                                            sat_scvwP;
                                                                                                                            } in 
                                                                                                                              case
                                                                                                                                  GHC.CString.unpackAppendCString#
                                                                                                                                      lvl6_rcsn1
                                                                                                                                      opt_scvty
                                                                                                                              of
                                                                                                                              sat_scvwO
                                                                                                                              { __DEFAULT ->
                                                                                                                                    GHC.Base.++
                                                                                                                                        sat_scvwO
                                                                                                                                        sat_scvwQ;
                                                                                                                              };
                                                                                                                  } in 
                                                                                                                    GHC.CString.unpackAppendCString#
                                                                                                                        lvl12_rcsn7
                                                                                                                        sat_scvwR; } in
                                                                                                        let {
                                                                                                          sat_scvwZ [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              CCCS :! [sat_scvwS
                                                                                                                       sat_scvwY]; } in
                                                                                                        let {
                                                                                                          sat_scvwN [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scvwq] \u []
                                                                                                                  case
                                                                                                                      ds12_scvwq
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          us_scvwL [Occ=Once]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        us_scvwL;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scvwH [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scvwq] \u []
                                                                                                                  case
                                                                                                                      ds12_scvwq
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          xs_scvwE [Occ=Once]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        xs_scvwE;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scvwB [Occ=Once]
                                                                                                            :: [a_scrPx]
                                                                                                          [LclId] =
                                                                                                              [ds12_scvwq] \u []
                                                                                                                  case
                                                                                                                      ds12_scvwq
                                                                                                                  of
                                                                                                                  { (,,,) os_scvwx [Occ=Once]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        os_scvwx;
                                                                                                                  };
                                                                                                        } in 
                                                                                                          (#,,,#) [sat_scvwB
                                                                                                                   sat_scvwH
                                                                                                                   sat_scvwN
                                                                                                                   sat_scvwZ];
                                                                                                    : r_scvx0 [Occ=Once]
                                                                                                      rest_scvx1 [Occ=Once] ->
                                                                                                        let {
                                                                                                          ds12_scvx2 [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                            :: ([a_scrPx],
                                                                                                                [GHC.Base.String],
                                                                                                                [GHC.Base.String],
                                                                                                                [GHC.Base.String])
                                                                                                          [LclId] =
                                                                                                              [w_scvjM
                                                                                                               w1_scvjN
                                                                                                               rest_scvx1] \u []
                                                                                                                  case
                                                                                                                      System.Console.GetOpt.$wgetOpt'
                                                                                                                          w_scvjM
                                                                                                                          w1_scvjN
                                                                                                                          rest_scvx1
                                                                                                                  of
                                                                                                                  { (#,,,#) ww1_scvx4 [Occ=Once]
                                                                                                                            ww2_scvx5 [Occ=Once]
                                                                                                                            ww3_scvx6 [Occ=Once]
                                                                                                                            ww4_scvx7 [Occ=Once] ->
                                                                                                                        (,,,) [ww1_scvx4
                                                                                                                               ww2_scvx5
                                                                                                                               ww3_scvx6
                                                                                                                               ww4_scvx7];
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scvxx [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scvx2] \u []
                                                                                                                  case
                                                                                                                      ds12_scvx2
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          es_scvxw [Occ=Once] ->
                                                                                                                        es_scvxw;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scvxr [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scvx2] \u []
                                                                                                                  case
                                                                                                                      ds12_scvx2
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          us_scvxp [Occ=Once]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        us_scvxp;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scvxl [Occ=Once]
                                                                                                            :: [GHC.Base.String]
                                                                                                          [LclId] =
                                                                                                              [ds12_scvx2] \u []
                                                                                                                  case
                                                                                                                      ds12_scvx2
                                                                                                                  of
                                                                                                                  { (,,,) _ [Occ=Dead]
                                                                                                                          xs_scvxi [Occ=Once]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        xs_scvxi;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scvxe [Occ=Once]
                                                                                                            :: [a_scrPx]
                                                                                                          [LclId] =
                                                                                                              [ds12_scvx2] \u []
                                                                                                                  case
                                                                                                                      ds12_scvx2
                                                                                                                  of
                                                                                                                  { (,,,) os_scvxa [Occ=Once]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        os_scvxa;
                                                                                                                  }; } in
                                                                                                        let {
                                                                                                          sat_scvx8 [Occ=Once]
                                                                                                            :: a_scrPx
                                                                                                          [LclId] =
                                                                                                              [ds11_scvwj
                                                                                                               r_scvx0] \u []
                                                                                                                  ds11_scvwj
                                                                                                                      r_scvx0; } in
                                                                                                        let {
                                                                                                          sat_scvxf [Occ=Once]
                                                                                                            :: [a_scrPx]
                                                                                                          [LclId] =
                                                                                                              CCCS :! [sat_scvx8
                                                                                                                       sat_scvxe];
                                                                                                        } in 
                                                                                                          (#,,,#) [sat_scvxf
                                                                                                                   sat_scvxl
                                                                                                                   sat_scvxr
                                                                                                                   sat_scvxx];
                                                                                                  };
                                                                                              : ds12_scvxy [Occ=Once!]
                                                                                                xs_scvxz [Occ=Once] ->
                                                                                                  case
                                                                                                      ds12_scvxy
                                                                                                  of
                                                                                                  { GHC.Types.C# ds13_scvxB [Occ=Once!] ->
                                                                                                        case
                                                                                                            ds13_scvxB
                                                                                                        of
                                                                                                        { __DEFAULT ->
                                                                                                              let {
                                                                                                                ds15_scvxD [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scvjM
                                                                                                                     w1_scvjN
                                                                                                                     args_scvjR] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scvjM
                                                                                                                                w1_scvjN
                                                                                                                                args_scvjR
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scvxF [Occ=Once]
                                                                                                                                  ww2_scvxG [Occ=Once]
                                                                                                                                  ww3_scvxH [Occ=Once]
                                                                                                                                  ww4_scvxI [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scvxF
                                                                                                                                     ww2_scvxG
                                                                                                                                     ww3_scvxH
                                                                                                                                     ww4_scvxI];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvy8 [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvxD] \u []
                                                                                                                        case
                                                                                                                            ds15_scvxD
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scvy7 [Occ=Once] ->
                                                                                                                              es_scvy7;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvy1 [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvxD] \u []
                                                                                                                        case
                                                                                                                            ds15_scvxD
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scvxZ [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scvxZ;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvxV [Occ=Once]
                                                                                                                  :: GHC.Base.String
                                                                                                                [LclId] =
                                                                                                                    [wild5_scvto] \u []
                                                                                                                        GHC.CString.unpackAppendCString#
                                                                                                                            lvl6_rcsn1
                                                                                                                            wild5_scvto; } in
                                                                                                              let {
                                                                                                                sat_scvy2 [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scvxV
                                                                                                                             sat_scvy1]; } in
                                                                                                              let {
                                                                                                                sat_scvxU [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvxD] \u []
                                                                                                                        case
                                                                                                                            ds15_scvxD
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs1_scvxR [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs1_scvxR;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvxO [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvxD] \u []
                                                                                                                        case
                                                                                                                            ds15_scvxD
                                                                                                                        of
                                                                                                                        { (,,,) os_scvxK [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scvxK;
                                                                                                                        };
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scvxO
                                                                                                                         sat_scvxU
                                                                                                                         sat_scvy2
                                                                                                                         sat_scvy8];
                                                                                                          '='# ->
                                                                                                              let {
                                                                                                                ds15_scvy9 [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scvjM
                                                                                                                     w1_scvjN
                                                                                                                     args_scvjR] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scvjM
                                                                                                                                w1_scvjN
                                                                                                                                args_scvjR
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scvyb [Occ=Once]
                                                                                                                                  ww2_scvyc [Occ=Once]
                                                                                                                                  ww3_scvyd [Occ=Once]
                                                                                                                                  ww4_scvye [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scvyb
                                                                                                                                     ww2_scvyc
                                                                                                                                     ww3_scvyd
                                                                                                                                     ww4_scvye];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvyE [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvy9] \u []
                                                                                                                        case
                                                                                                                            ds15_scvy9
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scvyD [Occ=Once] ->
                                                                                                                              es_scvyD;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvyy [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvy9] \u []
                                                                                                                        case
                                                                                                                            ds15_scvy9
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scvyw [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scvyw;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvys [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvy9] \u []
                                                                                                                        case
                                                                                                                            ds15_scvy9
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs1_scvyp [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs1_scvyp;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvyl [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvy9] \u []
                                                                                                                        case
                                                                                                                            ds15_scvy9
                                                                                                                        of
                                                                                                                        { (,,,) os_scvyh [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scvyh;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvyf [Occ=Once]
                                                                                                                  :: a_scrPx
                                                                                                                [LclId] =
                                                                                                                    [ds11_scvwj
                                                                                                                     xs_scvxz] \u []
                                                                                                                        ds11_scvwj
                                                                                                                            xs_scvxz; } in
                                                                                                              let {
                                                                                                                sat_scvym [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scvyf
                                                                                                                             sat_scvyl];
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scvym
                                                                                                                         sat_scvys
                                                                                                                         sat_scvyy
                                                                                                                         sat_scvyE];
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                  System.Console.GetOpt.OptArg f_scvyF [Occ=Once*!]
                                                                                                               _ [Occ=Dead] ->
                                                                                      case
                                                                                          ds8_scvtu
                                                                                      of
                                                                                      { (,) _ [Occ=Dead]
                                                                                            arg1_scvyJ [Occ=Once!] ->
                                                                                            case
                                                                                                arg1_scvyJ
                                                                                            of
                                                                                            { [] ->
                                                                                                  let {
                                                                                                    ds12_scvyL [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                      :: ([a_scrPx],
                                                                                                          [GHC.Base.String],
                                                                                                          [GHC.Base.String],
                                                                                                          [GHC.Base.String])
                                                                                                    [LclId] =
                                                                                                        [w_scvjM
                                                                                                         w1_scvjN
                                                                                                         args_scvjR] \u []
                                                                                                            case
                                                                                                                System.Console.GetOpt.$wgetOpt'
                                                                                                                    w_scvjM
                                                                                                                    w1_scvjN
                                                                                                                    args_scvjR
                                                                                                            of
                                                                                                            { (#,,,#) ww1_scvyN [Occ=Once]
                                                                                                                      ww2_scvyO [Occ=Once]
                                                                                                                      ww3_scvyP [Occ=Once]
                                                                                                                      ww4_scvyQ [Occ=Once] ->
                                                                                                                  (,,,) [ww1_scvyN
                                                                                                                         ww2_scvyO
                                                                                                                         ww3_scvyP
                                                                                                                         ww4_scvyQ];
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scvzg [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds12_scvyL] \u []
                                                                                                            case
                                                                                                                ds12_scvyL
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    es_scvzf [Occ=Once] ->
                                                                                                                  es_scvzf;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scvza [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds12_scvyL] \u []
                                                                                                            case
                                                                                                                ds12_scvyL
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    us_scvz8 [Occ=Once]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  us_scvz8;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scvz4 [Occ=Once]
                                                                                                      :: [GHC.Base.String]
                                                                                                    [LclId] =
                                                                                                        [ds12_scvyL] \u []
                                                                                                            case
                                                                                                                ds12_scvyL
                                                                                                            of
                                                                                                            { (,,,) _ [Occ=Dead]
                                                                                                                    xs_scvz1 [Occ=Once]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  xs_scvz1;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scvyX [Occ=Once]
                                                                                                      :: [a_scrPx]
                                                                                                    [LclId] =
                                                                                                        [ds12_scvyL] \u []
                                                                                                            case
                                                                                                                ds12_scvyL
                                                                                                            of
                                                                                                            { (,,,) os_scvyT [Occ=Once]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  os_scvyT;
                                                                                                            }; } in
                                                                                                  let {
                                                                                                    sat_scvyR [Occ=Once]
                                                                                                      :: a_scrPx
                                                                                                    [LclId] =
                                                                                                        [f_scvyF] \u []
                                                                                                            f_scvyF
                                                                                                                GHC.Base.Nothing; } in
                                                                                                  let {
                                                                                                    sat_scvyY [Occ=Once]
                                                                                                      :: [a_scrPx]
                                                                                                    [LclId] =
                                                                                                        CCCS :! [sat_scvyR
                                                                                                                 sat_scvyX];
                                                                                                  } in 
                                                                                                    (#,,,#) [sat_scvyY
                                                                                                             sat_scvz4
                                                                                                             sat_scvza
                                                                                                             sat_scvzg];
                                                                                              : ds12_scvzh [Occ=Once!]
                                                                                                xs_scvzi [Occ=Once] ->
                                                                                                  case
                                                                                                      ds12_scvzh
                                                                                                  of
                                                                                                  { GHC.Types.C# ds13_scvzk [Occ=Once!] ->
                                                                                                        case
                                                                                                            ds13_scvzk
                                                                                                        of
                                                                                                        { __DEFAULT ->
                                                                                                              let {
                                                                                                                ds15_scvzm [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scvjM
                                                                                                                     w1_scvjN
                                                                                                                     args_scvjR] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scvjM
                                                                                                                                w1_scvjN
                                                                                                                                args_scvjR
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scvzo [Occ=Once]
                                                                                                                                  ww2_scvzp [Occ=Once]
                                                                                                                                  ww3_scvzq [Occ=Once]
                                                                                                                                  ww4_scvzr [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scvzo
                                                                                                                                     ww2_scvzp
                                                                                                                                     ww3_scvzq
                                                                                                                                     ww4_scvzr];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvzR [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvzm] \u []
                                                                                                                        case
                                                                                                                            ds15_scvzm
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scvzQ [Occ=Once] ->
                                                                                                                              es_scvzQ;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvzK [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvzm] \u []
                                                                                                                        case
                                                                                                                            ds15_scvzm
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scvzI [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scvzI;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvzE [Occ=Once]
                                                                                                                  :: GHC.Base.String
                                                                                                                [LclId] =
                                                                                                                    [wild5_scvto] \u []
                                                                                                                        GHC.CString.unpackAppendCString#
                                                                                                                            lvl6_rcsn1
                                                                                                                            wild5_scvto; } in
                                                                                                              let {
                                                                                                                sat_scvzL [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scvzE
                                                                                                                             sat_scvzK]; } in
                                                                                                              let {
                                                                                                                sat_scvzD [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvzm] \u []
                                                                                                                        case
                                                                                                                            ds15_scvzm
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs1_scvzA [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs1_scvzA;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvzx [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvzm] \u []
                                                                                                                        case
                                                                                                                            ds15_scvzm
                                                                                                                        of
                                                                                                                        { (,,,) os_scvzt [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scvzt;
                                                                                                                        };
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scvzx
                                                                                                                         sat_scvzD
                                                                                                                         sat_scvzL
                                                                                                                         sat_scvzR];
                                                                                                          '='# ->
                                                                                                              let {
                                                                                                                ds15_scvzS [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                                                  :: ([a_scrPx],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String],
                                                                                                                      [GHC.Base.String])
                                                                                                                [LclId] =
                                                                                                                    [w_scvjM
                                                                                                                     w1_scvjN
                                                                                                                     args_scvjR] \u []
                                                                                                                        case
                                                                                                                            System.Console.GetOpt.$wgetOpt'
                                                                                                                                w_scvjM
                                                                                                                                w1_scvjN
                                                                                                                                args_scvjR
                                                                                                                        of
                                                                                                                        { (#,,,#) ww1_scvzU [Occ=Once]
                                                                                                                                  ww2_scvzV [Occ=Once]
                                                                                                                                  ww3_scvzW [Occ=Once]
                                                                                                                                  ww4_scvzX [Occ=Once] ->
                                                                                                                              (,,,) [ww1_scvzU
                                                                                                                                     ww2_scvzV
                                                                                                                                     ww3_scvzW
                                                                                                                                     ww4_scvzX];
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvAo [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvzS] \u []
                                                                                                                        case
                                                                                                                            ds15_scvzS
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                es_scvAn [Occ=Once] ->
                                                                                                                              es_scvAn;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvAi [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvzS] \u []
                                                                                                                        case
                                                                                                                            ds15_scvzS
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                us_scvAg [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              us_scvAg;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvAc [Occ=Once]
                                                                                                                  :: [GHC.Base.String]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvzS] \u []
                                                                                                                        case
                                                                                                                            ds15_scvzS
                                                                                                                        of
                                                                                                                        { (,,,) _ [Occ=Dead]
                                                                                                                                xs1_scvA9 [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              xs1_scvA9;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvA5 [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    [ds15_scvzS] \u []
                                                                                                                        case
                                                                                                                            ds15_scvzS
                                                                                                                        of
                                                                                                                        { (,,,) os_scvA1 [Occ=Once]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              os_scvA1;
                                                                                                                        }; } in
                                                                                                              let {
                                                                                                                sat_scvzZ [Occ=Once]
                                                                                                                  :: a_scrPx
                                                                                                                [LclId] =
                                                                                                                    [f_scvyF
                                                                                                                     xs_scvzi] \u []
                                                                                                                        let {
                                                                                                                          sat_scvzY [Occ=Once]
                                                                                                                            :: GHC.Base.Maybe
                                                                                                                                 GHC.Base.String
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Base.Just! [xs_scvzi];
                                                                                                                        } in 
                                                                                                                          f_scvyF
                                                                                                                              sat_scvzY; } in
                                                                                                              let {
                                                                                                                sat_scvA6 [Occ=Once]
                                                                                                                  :: [a_scrPx]
                                                                                                                [LclId] =
                                                                                                                    CCCS :! [sat_scvzZ
                                                                                                                             sat_scvA5];
                                                                                                              } in 
                                                                                                                (#,,,#) [sat_scvA6
                                                                                                                         sat_scvAc
                                                                                                                         sat_scvAi
                                                                                                                         sat_scvAo];
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                            : _ [Occ=Dead]
                                                                              _ [Occ=Dead] ->
                                                                                let {
                                                                                  ds13_scvAr [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                                                    :: ([a_scrPx],
                                                                                        [GHC.Base.String],
                                                                                        [GHC.Base.String],
                                                                                        [GHC.Base.String])
                                                                                  [LclId] =
                                                                                      [w_scvjM
                                                                                       w1_scvjN
                                                                                       args_scvjR] \u []
                                                                                          case
                                                                                              System.Console.GetOpt.$wgetOpt'
                                                                                                  w_scvjM
                                                                                                  w1_scvjN
                                                                                                  args_scvjR
                                                                                          of
                                                                                          { (#,,,#) ww1_scvAt [Occ=Once]
                                                                                                    ww2_scvAu [Occ=Once]
                                                                                                    ww3_scvAv [Occ=Once]
                                                                                                    ww4_scvAw [Occ=Once] ->
                                                                                                (,,,) [ww1_scvAt
                                                                                                       ww2_scvAu
                                                                                                       ww3_scvAv
                                                                                                       ww4_scvAw];
                                                                                          }; } in
                                                                                let {
                                                                                  sat_scvAY [Occ=Once]
                                                                                    :: [GHC.Base.String]
                                                                                  [LclId] =
                                                                                      [ds13_scvAr] \u []
                                                                                          case
                                                                                              ds13_scvAr
                                                                                          of
                                                                                          { (,,,) _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  es_scvAX [Occ=Once] ->
                                                                                                es_scvAX;
                                                                                          }; } in
                                                                                let {
                                                                                  sat_scvAS [Occ=Once]
                                                                                    :: GHC.Base.String
                                                                                  [LclId] =
                                                                                      [opt_scvty
                                                                                       options_scvtZ] \u []
                                                                                          let {
                                                                                            sat_scvAR [Occ=Once]
                                                                                              :: GHC.Base.String
                                                                                            [LclId] =
                                                                                                [opt_scvty] \u []
                                                                                                    let {
                                                                                                      sat_scvAQ [Occ=Once]
                                                                                                        :: [GHC.Types.Char]
                                                                                                      [LclId] =
                                                                                                          [opt_scvty] \u []
                                                                                                              case
                                                                                                                  GHC.CString.unpackAppendCString#
                                                                                                                      lvl6_rcsn1
                                                                                                                      opt_scvty
                                                                                                              of
                                                                                                              sat_scvAP
                                                                                                              { __DEFAULT ->
                                                                                                                    GHC.Base.++
                                                                                                                        sat_scvAP
                                                                                                                        lvl24_rcsnk;
                                                                                                              };
                                                                                                    } in 
                                                                                                      GHC.CString.unpackAppendCString#
                                                                                                          lvl12_rcsn7
                                                                                                          sat_scvAQ;
                                                                                          } in 
                                                                                            System.Console.GetOpt.usageInfo
                                                                                                sat_scvAR
                                                                                                options_scvtZ; } in
                                                                                let {
                                                                                  sat_scvAZ [Occ=Once]
                                                                                    :: [GHC.Base.String]
                                                                                  [LclId] =
                                                                                      CCCS :! [sat_scvAS
                                                                                               sat_scvAY]; } in
                                                                                let {
                                                                                  sat_scvAO [Occ=Once]
                                                                                    :: [GHC.Base.String]
                                                                                  [LclId] =
                                                                                      [ds13_scvAr] \u []
                                                                                          case
                                                                                              ds13_scvAr
                                                                                          of
                                                                                          { (,,,) _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  us_scvAM [Occ=Once]
                                                                                                  _ [Occ=Dead] ->
                                                                                                us_scvAM;
                                                                                          }; } in
                                                                                let {
                                                                                  sat_scvAI [Occ=Once]
                                                                                    :: [GHC.Base.String]
                                                                                  [LclId] =
                                                                                      [ds13_scvAr] \u []
                                                                                          case
                                                                                              ds13_scvAr
                                                                                          of
                                                                                          { (,,,) _ [Occ=Dead]
                                                                                                  xs_scvAF [Occ=Once]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead] ->
                                                                                                xs_scvAF;
                                                                                          }; } in
                                                                                let {
                                                                                  sat_scvAC [Occ=Once]
                                                                                    :: [a_scrPx]
                                                                                  [LclId] =
                                                                                      [ds13_scvAr] \u []
                                                                                          case
                                                                                              ds13_scvAr
                                                                                          of
                                                                                          { (,,,) os_scvAy [Occ=Once]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead] ->
                                                                                                os_scvAy;
                                                                                          };
                                                                                } in 
                                                                                  (#,,,#) [sat_scvAC
                                                                                           sat_scvAI
                                                                                           sat_scvAO
                                                                                           sat_scvAZ];
                                                                          };
                                                                    };
                                                          } in 
                                                            case
                                                                getWith_scvtC GHC.Base.eqString
                                                            of
                                                            wild6_scvB0
                                                            { [] ->
                                                                  case
                                                                      getWith_scvtC lvl19_rcsne
                                                                  of
                                                                  sat_scvB1
                                                                  { __DEFAULT -> $j_scvtY sat_scvB1;
                                                                  };
                                                              : _ [Occ=Dead] _ [Occ=Dead] ->
                                                                  $j_scvtY wild6_scvB0;
                                                            };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

System.Console.GetOpt.getOpt' [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     System.Console.GetOpt.ArgOrder a
     -> [System.Console.GetOpt.OptDescr a]
     -> [GHC.Base.String]
     -> ([a], [GHC.Base.String], [GHC.Base.String], [GHC.Base.String])
[GblId, Arity=3, Str=<L,1*U><L,U><S,1*U>m, Unf=OtherCon []] =
    [] \r [w_scvB4 w1_scvB5 w2_scvB6]
        case System.Console.GetOpt.$wgetOpt' w_scvB4 w1_scvB5 w2_scvB6 of {
          (#,,,#) ww1_scvB8 [Occ=Once]
                  ww2_scvB9 [Occ=Once]
                  ww3_scvBa [Occ=Once]
                  ww4_scvBb [Occ=Once] ->
              (,,,) [ww1_scvB8 ww2_scvB9 ww3_scvBa ww4_scvBb];
        };

System.Console.GetOpt.getOpt [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     System.Console.GetOpt.ArgOrder a
     -> [System.Console.GetOpt.OptDescr a]
     -> [GHC.Base.String]
     -> ([a], [GHC.Base.String], [GHC.Base.String])
[GblId, Arity=3, Str=<L,1*U><L,U><L,1*U>m, Unf=OtherCon []] =
    [] \r [w_scvBc w1_scvBd w2_scvBe]
        let {
          ds_scvBf [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
            :: ([a_scrPF], [GHC.Base.String], [GHC.Base.String],
                [GHC.Base.String])
          [LclId] =
              [w_scvBc w1_scvBd w2_scvBe] \u []
                  case System.Console.GetOpt.$wgetOpt' w_scvBc w1_scvBd w2_scvBe of {
                    (#,,,#) ww1_scvBh [Occ=Once]
                            ww2_scvBi [Occ=Once]
                            ww3_scvBj [Occ=Once]
                            ww4_scvBk [Occ=Once] ->
                        (,,,) [ww1_scvBh ww2_scvBi ww3_scvBj ww4_scvBk];
                  }; } in
        let {
          sat_scvBD [Occ=Once] :: [GHC.Base.String]
          [LclId] =
              [ds_scvBf] \u []
                  case ds_scvBf of {
                    (,,,) _ [Occ=Dead]
                          _ [Occ=Dead]
                          us_scvBA [Occ=Once]
                          es_scvBB [Occ=Once] ->
                        let {
                          sat_scvBC [Occ=Once, Dmd=<L,1*U>] :: [[GHC.Types.Char]]
                          [LclId] =
                              [us_scvBA] \s []
                                  GHC.Base.map System.Console.GetOpt.errUnrec us_scvBA;
                        } in  GHC.Base.++ es_scvBB sat_scvBC;
                  }; } in
        let {
          sat_scvBw [Occ=Once] :: [GHC.Base.String]
          [LclId] =
              [ds_scvBf] \u []
                  case ds_scvBf of {
                    (,,,) _ [Occ=Dead] xs_scvBt [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                        xs_scvBt;
                  }; } in
        let {
          sat_scvBq [Occ=Once] :: [a_scrPF]
          [LclId] =
              [ds_scvBf] \u []
                  case ds_scvBf of {
                    (,,,) os_scvBm [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
                        os_scvBm;
                  };
        } in  (,,) [sat_scvBq sat_scvBw sat_scvBD];

System.Console.GetOpt.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

System.Console.GetOpt.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$trModule4];

System.Console.GetOpt.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "System.Console.GetOpt"#;

System.Console.GetOpt.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$trModule2];

System.Console.GetOpt.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [System.Console.GetOpt.$trModule3
                                     System.Console.GetOpt.$trModule1];

$krep_rcsnm :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcChar
                                              GHC.Types.[]];

$krep1_rcsnn :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep_rcsnm GHC.Types.[]];

$krep2_rcsno :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tc[]
                                              $krep1_rcsnn];

$krep3_rcsnp :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep2_rcsno GHC.Types.[]];

$krep4_rcsnq :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Base.$tcMaybe
                                              $krep3_rcsnp];

$krep5_rcsnr :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tc[]
                                              $krep3_rcsnp];

$krep6_rcsns :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

$krep7_rcsnt :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcsno $krep6_rcsns];

$krep8_rcsnu :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_rcsnq $krep6_rcsns];

System.Console.GetOpt.$tcArgOrder2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ArgOrder"#;

System.Console.GetOpt.$tcArgOrder1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tcArgOrder2];

System.Console.GetOpt.$tcArgOrder :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2821249393238363172##
                                    5857765806309969278##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tcArgOrder1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep9_rcsnv :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep6_rcsns GHC.Types.[]];

System.Console.GetOpt.$tc'Permute1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Console.GetOpt.$tcArgOrder
                                              $krep9_rcsnv];

System.Console.GetOpt.$tc'RequireOrder2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'RequireOrder"#;

System.Console.GetOpt.$tc'RequireOrder1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'RequireOrder2];

System.Console.GetOpt.$tc'RequireOrder :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16641478699741903091##
                                    17241976392395699271##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'RequireOrder1
                                    1#
                                    System.Console.GetOpt.$tc'Permute1];

System.Console.GetOpt.$tc'Permute3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Permute"#;

System.Console.GetOpt.$tc'Permute2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'Permute3];

System.Console.GetOpt.$tc'Permute :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16188869008381252759##
                                    7304126484053682933##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'Permute2
                                    1#
                                    System.Console.GetOpt.$tc'Permute1];

System.Console.GetOpt.$tc'ReturnInOrder1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep7_rcsnt
                                         System.Console.GetOpt.$tc'Permute1];

System.Console.GetOpt.$tc'ReturnInOrder3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ReturnInOrder"#;

System.Console.GetOpt.$tc'ReturnInOrder2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'ReturnInOrder3];

System.Console.GetOpt.$tc'ReturnInOrder :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11429107017830306662##
                                    977062333259332084##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'ReturnInOrder2
                                    1#
                                    System.Console.GetOpt.$tc'ReturnInOrder1];

System.Console.GetOpt.$tcArgDescr2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ArgDescr"#;

System.Console.GetOpt.$tcArgDescr1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tcArgDescr2];

System.Console.GetOpt.$tcArgDescr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5371299798435897528##
                                    4777542234116424858##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tcArgDescr1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep10_rcsnw :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Console.GetOpt.$tcArgDescr
                                              $krep9_rcsnv];

System.Console.GetOpt.$tc'NoArg1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep6_rcsns $krep10_rcsnw];

System.Console.GetOpt.$tc'NoArg3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'NoArg"#;

System.Console.GetOpt.$tc'NoArg2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'NoArg3];

System.Console.GetOpt.$tc'NoArg :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4447437708857855473##
                                    9938854276741266046##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'NoArg2
                                    1#
                                    System.Console.GetOpt.$tc'NoArg1];

$krep11_rcsnx :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcsno $krep10_rcsnw];

System.Console.GetOpt.$tc'OptArg1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_rcsnu $krep11_rcsnx];

System.Console.GetOpt.$tc'OptArg3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OptArg"#;

System.Console.GetOpt.$tc'OptArg2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'OptArg3];

System.Console.GetOpt.$tc'OptArg :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2223072509852051452##
                                    11632957215606156764##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'OptArg2
                                    1#
                                    System.Console.GetOpt.$tc'OptArg1];

System.Console.GetOpt.$tc'ReqArg1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep7_rcsnt $krep11_rcsnx];

System.Console.GetOpt.$tc'ReqArg3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ReqArg"#;

System.Console.GetOpt.$tc'ReqArg2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'ReqArg3];

System.Console.GetOpt.$tc'ReqArg :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16427330633826478147##
                                    15179110347223027838##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'ReqArg2
                                    1#
                                    System.Console.GetOpt.$tc'ReqArg1];

System.Console.GetOpt.$tcOptDescr2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OptDescr"#;

System.Console.GetOpt.$tcOptDescr1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tcOptDescr2];

System.Console.GetOpt.$tcOptDescr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5602371009437266142##
                                    11022077518484673144##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tcOptDescr1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep12_rcsny :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Console.GetOpt.$tcOptDescr
                                              $krep9_rcsnv];

$krep13_rcsnz :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcsno $krep12_rcsny];

$krep14_rcsnA :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep10_rcsnw $krep13_rcsnz];

$krep15_rcsnB :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep5_rcsnr $krep14_rcsnA];

System.Console.GetOpt.$tc'Option1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcsno $krep15_rcsnB];

System.Console.GetOpt.$tc'Option3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Option"#;

System.Console.GetOpt.$tc'Option2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'Option3];

System.Console.GetOpt.$tc'Option :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10066039264625497029##
                                    5674636120141944492##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'Option2
                                    1#
                                    System.Console.GetOpt.$tc'Option1];

System.Console.GetOpt.$tcOptKind2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OptKind"#;

System.Console.GetOpt.$tcOptKind1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tcOptKind2];

System.Console.GetOpt.$tcOptKind :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5196380470096609574##
                                    4174335291028142741##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tcOptKind1
                                    0#
                                    GHC.Types.krep$*Arr*];

System.Console.GetOpt.$tc'EndOfOpts1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Console.GetOpt.$tcOptKind
                                              $krep9_rcsnv];

System.Console.GetOpt.$tc'EndOfOpts3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EndOfOpts"#;

System.Console.GetOpt.$tc'EndOfOpts2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'EndOfOpts3];

System.Console.GetOpt.$tc'EndOfOpts :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16241379069650497856##
                                    7399561775253491405##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'EndOfOpts2
                                    1#
                                    System.Console.GetOpt.$tc'EndOfOpts1];

System.Console.GetOpt.$tc'Opt1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep6_rcsns
                                         System.Console.GetOpt.$tc'EndOfOpts1];

System.Console.GetOpt.$tc'Opt3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Opt"#;

System.Console.GetOpt.$tc'Opt2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'Opt3];

System.Console.GetOpt.$tc'Opt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2387467460439073880##
                                    875868993959501908##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'Opt2
                                    1#
                                    System.Console.GetOpt.$tc'Opt1];

System.Console.GetOpt.$tc'NonOpt1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcsno
                                         System.Console.GetOpt.$tc'EndOfOpts1];

System.Console.GetOpt.$tc'UnreqOpt2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'UnreqOpt"#;

System.Console.GetOpt.$tc'UnreqOpt1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'UnreqOpt2];

System.Console.GetOpt.$tc'UnreqOpt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6747281843324563502##
                                    13162655807375334605##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'UnreqOpt1
                                    1#
                                    System.Console.GetOpt.$tc'NonOpt1];

System.Console.GetOpt.$tc'NonOpt3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'NonOpt"#;

System.Console.GetOpt.$tc'NonOpt2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'NonOpt3];

System.Console.GetOpt.$tc'NonOpt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17187900375792953920##
                                    18196243003688324985##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'NonOpt2
                                    1#
                                    System.Console.GetOpt.$tc'NonOpt1];

System.Console.GetOpt.$tc'OptErr2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OptErr"#;

System.Console.GetOpt.$tc'OptErr1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Console.GetOpt.$tc'OptErr2];

System.Console.GetOpt.$tc'OptErr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13165663139815598038##
                                    5639435123785572420##
                                    System.Console.GetOpt.$trModule
                                    System.Console.GetOpt.$tc'OptErr1
                                    1#
                                    System.Console.GetOpt.$tc'NonOpt1];

System.Console.GetOpt.Opt
  :: forall a. a -> System.Console.GetOpt.OptKind a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m1,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.Opt [eta_B1];

System.Console.GetOpt.UnreqOpt
  :: forall a. GHC.Base.String -> System.Console.GetOpt.OptKind a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m2,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.UnreqOpt [eta_B1];

System.Console.GetOpt.NonOpt
  :: forall a. GHC.Base.String -> System.Console.GetOpt.OptKind a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m3,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.NonOpt [eta_B1];

System.Console.GetOpt.EndOfOpts
  :: forall a. System.Console.GetOpt.OptKind a
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE System.Console.GetOpt.EndOfOpts! [];

System.Console.GetOpt.OptErr
  :: forall a. GHC.Base.String -> System.Console.GetOpt.OptKind a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m5,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.OptErr [eta_B1];

System.Console.GetOpt.NoArg
  :: forall a. a -> System.Console.GetOpt.ArgDescr a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m1,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.NoArg [eta_B1];

System.Console.GetOpt.ReqArg
  :: forall a.
     (GHC.Base.String -> a)
     -> GHC.Base.String -> System.Console.GetOpt.ArgDescr a
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m2,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] System.Console.GetOpt.ReqArg [eta_B2 eta_B1];

System.Console.GetOpt.OptArg
  :: forall a.
     (GHC.Base.Maybe GHC.Base.String -> a)
     -> GHC.Base.String -> System.Console.GetOpt.ArgDescr a
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m3,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] System.Console.GetOpt.OptArg [eta_B2 eta_B1];

System.Console.GetOpt.Option
  :: forall a.
     [GHC.Types.Char]
     -> [GHC.Base.String]
     -> System.Console.GetOpt.ArgDescr a
     -> GHC.Base.String
     -> System.Console.GetOpt.OptDescr a
[GblId[DataCon],
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        System.Console.GetOpt.Option [eta_B4 eta_B3 eta_B2 eta_B1];

System.Console.GetOpt.RequireOrder
  :: forall a. System.Console.GetOpt.ArgOrder a
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE System.Console.GetOpt.RequireOrder! [];

System.Console.GetOpt.Permute
  :: forall a. System.Console.GetOpt.ArgOrder a
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE System.Console.GetOpt.Permute! [];

System.Console.GetOpt.ReturnInOrder
  :: forall a.
     (GHC.Base.String -> a) -> System.Console.GetOpt.ArgOrder a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m3,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Console.GetOpt.ReturnInOrder [eta_B1];

