
==================== Pre unarise: ====================
2018-03-16 16:07:15.22130144 UTC

System.Mem.StableName.$fEqStableName_$c==
  :: forall a.
     System.Mem.StableName.StableName a
     -> System.Mem.StableName.StableName a -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [ds_scmbX ds1_scmbY]
        case ds_scmbX of {
          System.Mem.StableName.StableName sn1_scmc0 [Occ=Once] ->
              case ds1_scmbY of {
                System.Mem.StableName.StableName sn2_scmc2 [Occ=Once] ->
                    case eqStableName# [sn1_scmc0 sn2_scmc2] of {
                      __DEFAULT -> GHC.Types.True [];
                      0# -> GHC.Types.False [];
                    };
              };
        };

System.Mem.StableName.$fEqStableName_$c/= [InlPrag=INLINE (sat-args=2)]
  :: forall a.
     System.Mem.StableName.StableName a
     -> System.Mem.StableName.StableName a -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [eta_scmc4 eta1_scmc5]
        case eta_scmc4 of {
          System.Mem.StableName.StableName sn1_scmc7 [Occ=Once] ->
              case eta1_scmc5 of {
                System.Mem.StableName.StableName sn2_scmc9 [Occ=Once] ->
                    case eqStableName# [sn1_scmc7 sn2_scmc9] of {
                      __DEFAULT -> GHC.Types.False [];
                      0# -> GHC.Types.True [];
                    };
              };
        };

System.Mem.StableName.$fEqStableName [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a. GHC.Classes.Eq (System.Mem.StableName.StableName a)
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [System.Mem.StableName.$fEqStableName_$c==
                                     System.Mem.StableName.$fEqStableName_$c/=];

System.Mem.StableName.makeStableName1
  :: forall a.
     a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           System.Mem.StableName.StableName a #)
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [a1_scmcb s_scmcc]
        case makeStableName# [a1_scmcb s_scmcc] of {
          (#,#) ipv_scmce [Occ=Once] ipv1_scmcf [Occ=Once] ->
              let {
                sat_scmcg [Occ=Once] :: System.Mem.StableName.StableName a_acm7O
                [LclId] =
                    CCCS System.Mem.StableName.StableName! [ipv1_scmcf];
              } in  (#,#) [ipv_scmce sat_scmcg];
        };

System.Mem.StableName.makeStableName
  :: forall a. a -> GHC.Types.IO (System.Mem.StableName.StableName a)
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        System.Mem.StableName.makeStableName1 eta_B2 eta_B1;

System.Mem.StableName.hashStableName
  :: forall a. System.Mem.StableName.StableName a -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ds_scmch]
        case ds_scmch of {
          System.Mem.StableName.StableName sn_scmcj [Occ=Once] ->
              case stableNameToInt# [sn_scmcj] of sat_scmck {
                __DEFAULT -> GHC.Types.I# [sat_scmck];
              };
        };

System.Mem.StableName.eqStableName
  :: forall a b.
     System.Mem.StableName.StableName a
     -> System.Mem.StableName.StableName b -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [ds_scmcl ds1_scmcm]
        case ds_scmcl of {
          System.Mem.StableName.StableName sn1_scmco [Occ=Once] ->
              case ds1_scmcm of {
                System.Mem.StableName.StableName sn2_scmcq [Occ=Once] ->
                    case eqStableName# [sn1_scmco sn2_scmcq] of {
                      __DEFAULT -> GHC.Types.True [];
                      0# -> GHC.Types.False [];
                    };
              };
        };

System.Mem.StableName.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

System.Mem.StableName.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Mem.StableName.$trModule4];

System.Mem.StableName.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "System.Mem.StableName"#;

System.Mem.StableName.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Mem.StableName.$trModule2];

System.Mem.StableName.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [System.Mem.StableName.$trModule3
                                     System.Mem.StableName.$trModule1];

$krep_rcmbS :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

$krep1_rcmbT :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep_rcmbS GHC.Types.[]];

$krep2_rcmbU :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcStableName#
                                              $krep1_rcmbT];

System.Mem.StableName.$tcStableName2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "StableName"#;

System.Mem.StableName.$tcStableName1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Mem.StableName.$tcStableName2];

System.Mem.StableName.$tcStableName :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9283215246123464151##
                                    14241671522388568561##
                                    System.Mem.StableName.$trModule
                                    System.Mem.StableName.$tcStableName1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep3_rcmbV :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Mem.StableName.$tcStableName
                                              $krep1_rcmbT];

System.Mem.StableName.$tc'StableName1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcmbU $krep3_rcmbV];

System.Mem.StableName.$tc'StableName3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'StableName"#;

System.Mem.StableName.$tc'StableName2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Mem.StableName.$tc'StableName3];

System.Mem.StableName.$tc'StableName :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11629501114032097064##
                                    10388293122134847073##
                                    System.Mem.StableName.$trModule
                                    System.Mem.StableName.$tc'StableName2
                                    1#
                                    System.Mem.StableName.$tc'StableName1];

System.Mem.StableName.StableName
  :: forall a.
     GHC.Prim.StableName# a -> System.Mem.StableName.StableName a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Mem.StableName.StableName [eta_B1];


==================== STG syntax: ====================
2018-03-16 16:07:15.224601732 UTC

System.Mem.StableName.$fEqStableName_$c==
  :: forall a.
     System.Mem.StableName.StableName a
     -> System.Mem.StableName.StableName a -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [ds_scmbX ds1_scmbY]
        case ds_scmbX of {
          System.Mem.StableName.StableName sn1_scmc0 [Occ=Once] ->
              case ds1_scmbY of {
                System.Mem.StableName.StableName sn2_scmc2 [Occ=Once] ->
                    case eqStableName# [sn1_scmc0 sn2_scmc2] of {
                      __DEFAULT -> GHC.Types.True [];
                      0# -> GHC.Types.False [];
                    };
              };
        };

System.Mem.StableName.$fEqStableName_$c/= [InlPrag=INLINE (sat-args=2)]
  :: forall a.
     System.Mem.StableName.StableName a
     -> System.Mem.StableName.StableName a -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [eta_scmc4 eta1_scmc5]
        case eta_scmc4 of {
          System.Mem.StableName.StableName sn1_scmc7 [Occ=Once] ->
              case eta1_scmc5 of {
                System.Mem.StableName.StableName sn2_scmc9 [Occ=Once] ->
                    case eqStableName# [sn1_scmc7 sn2_scmc9] of {
                      __DEFAULT -> GHC.Types.False [];
                      0# -> GHC.Types.True [];
                    };
              };
        };

System.Mem.StableName.$fEqStableName [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a. GHC.Classes.Eq (System.Mem.StableName.StableName a)
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [System.Mem.StableName.$fEqStableName_$c==
                                     System.Mem.StableName.$fEqStableName_$c/=];

System.Mem.StableName.makeStableName1
  :: forall a.
     a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           System.Mem.StableName.StableName a #)
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [a1_scmcb void_0E]
        case makeStableName# [a1_scmcb GHC.Prim.void#] of {
          Unit# ipv1_scmcf [Occ=Once] ->
              let {
                sat_scmcg [Occ=Once] :: System.Mem.StableName.StableName a_acm7O
                [LclId] =
                    CCCS System.Mem.StableName.StableName! [ipv1_scmcf];
              } in  Unit# [sat_scmcg];
        };

System.Mem.StableName.makeStableName
  :: forall a. a -> GHC.Types.IO (System.Mem.StableName.StableName a)
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        System.Mem.StableName.makeStableName1 eta_B2 GHC.Prim.void#;

System.Mem.StableName.hashStableName
  :: forall a. System.Mem.StableName.StableName a -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ds_scmch]
        case ds_scmch of {
          System.Mem.StableName.StableName sn_scmcj [Occ=Once] ->
              case stableNameToInt# [sn_scmcj] of sat_scmck {
                __DEFAULT -> GHC.Types.I# [sat_scmck];
              };
        };

System.Mem.StableName.eqStableName
  :: forall a b.
     System.Mem.StableName.StableName a
     -> System.Mem.StableName.StableName b -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [ds_scmcl ds1_scmcm]
        case ds_scmcl of {
          System.Mem.StableName.StableName sn1_scmco [Occ=Once] ->
              case ds1_scmcm of {
                System.Mem.StableName.StableName sn2_scmcq [Occ=Once] ->
                    case eqStableName# [sn1_scmco sn2_scmcq] of {
                      __DEFAULT -> GHC.Types.True [];
                      0# -> GHC.Types.False [];
                    };
              };
        };

System.Mem.StableName.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

System.Mem.StableName.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Mem.StableName.$trModule4];

System.Mem.StableName.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "System.Mem.StableName"#;

System.Mem.StableName.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Mem.StableName.$trModule2];

System.Mem.StableName.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [System.Mem.StableName.$trModule3
                                     System.Mem.StableName.$trModule1];

$krep_rcmbS :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

$krep1_rcmbT :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep_rcmbS GHC.Types.[]];

$krep2_rcmbU :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcStableName#
                                              $krep1_rcmbT];

System.Mem.StableName.$tcStableName2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "StableName"#;

System.Mem.StableName.$tcStableName1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Mem.StableName.$tcStableName2];

System.Mem.StableName.$tcStableName :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9283215246123464151##
                                    14241671522388568561##
                                    System.Mem.StableName.$trModule
                                    System.Mem.StableName.$tcStableName1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep3_rcmbV :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Mem.StableName.$tcStableName
                                              $krep1_rcmbT];

System.Mem.StableName.$tc'StableName1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcmbU $krep3_rcmbV];

System.Mem.StableName.$tc'StableName3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'StableName"#;

System.Mem.StableName.$tc'StableName2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Mem.StableName.$tc'StableName3];

System.Mem.StableName.$tc'StableName :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11629501114032097064##
                                    10388293122134847073##
                                    System.Mem.StableName.$trModule
                                    System.Mem.StableName.$tc'StableName2
                                    1#
                                    System.Mem.StableName.$tc'StableName1];

System.Mem.StableName.StableName
  :: forall a.
     GHC.Prim.StableName# a -> System.Mem.StableName.StableName a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Mem.StableName.StableName [eta_B1];


==================== Pre unarise: ====================
2018-03-16 16:07:15.450880884 UTC

System.Mem.StableName.$fEqStableName_$c==
  :: forall a.
     System.Mem.StableName.StableName a
     -> System.Mem.StableName.StableName a -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [ds_scmlT ds1_scmlU]
        case ds_scmlT of {
          System.Mem.StableName.StableName sn1_scmlW [Occ=Once] ->
              case ds1_scmlU of {
                System.Mem.StableName.StableName sn2_scmlY [Occ=Once] ->
                    case eqStableName# [sn1_scmlW sn2_scmlY] of {
                      __DEFAULT -> GHC.Types.True [];
                      0# -> GHC.Types.False [];
                    };
              };
        };

System.Mem.StableName.$fEqStableName_$c/= [InlPrag=INLINE (sat-args=2)]
  :: forall a.
     System.Mem.StableName.StableName a
     -> System.Mem.StableName.StableName a -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [eta_scmm0 eta1_scmm1]
        case eta_scmm0 of {
          System.Mem.StableName.StableName sn1_scmm3 [Occ=Once] ->
              case eta1_scmm1 of {
                System.Mem.StableName.StableName sn2_scmm5 [Occ=Once] ->
                    case eqStableName# [sn1_scmm3 sn2_scmm5] of {
                      __DEFAULT -> GHC.Types.False [];
                      0# -> GHC.Types.True [];
                    };
              };
        };

System.Mem.StableName.$fEqStableName [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a. GHC.Classes.Eq (System.Mem.StableName.StableName a)
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [System.Mem.StableName.$fEqStableName_$c==
                                     System.Mem.StableName.$fEqStableName_$c/=];

System.Mem.StableName.makeStableName1
  :: forall a.
     a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           System.Mem.StableName.StableName a #)
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [a1_scmm7 s_scmm8]
        case makeStableName# [a1_scmm7 s_scmm8] of {
          (#,#) ipv_scmma [Occ=Once] ipv1_scmmb [Occ=Once] ->
              let {
                sat_scmmc [Occ=Once] :: System.Mem.StableName.StableName a_acm7O
                [LclId] =
                    CCCS System.Mem.StableName.StableName! [ipv1_scmmb];
              } in  (#,#) [ipv_scmma sat_scmmc];
        };

System.Mem.StableName.makeStableName
  :: forall a. a -> GHC.Types.IO (System.Mem.StableName.StableName a)
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        System.Mem.StableName.makeStableName1 eta_B2 eta_B1;

System.Mem.StableName.hashStableName
  :: forall a. System.Mem.StableName.StableName a -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ds_scmmd]
        case ds_scmmd of {
          System.Mem.StableName.StableName sn_scmmf [Occ=Once] ->
              case stableNameToInt# [sn_scmmf] of sat_scmmg {
                __DEFAULT -> GHC.Types.I# [sat_scmmg];
              };
        };

System.Mem.StableName.eqStableName
  :: forall a b.
     System.Mem.StableName.StableName a
     -> System.Mem.StableName.StableName b -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [ds_scmmh ds1_scmmi]
        case ds_scmmh of {
          System.Mem.StableName.StableName sn1_scmmk [Occ=Once] ->
              case ds1_scmmi of {
                System.Mem.StableName.StableName sn2_scmmm [Occ=Once] ->
                    case eqStableName# [sn1_scmmk sn2_scmmm] of {
                      __DEFAULT -> GHC.Types.True [];
                      0# -> GHC.Types.False [];
                    };
              };
        };

System.Mem.StableName.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

System.Mem.StableName.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Mem.StableName.$trModule4];

System.Mem.StableName.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "System.Mem.StableName"#;

System.Mem.StableName.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Mem.StableName.$trModule2];

System.Mem.StableName.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [System.Mem.StableName.$trModule3
                                     System.Mem.StableName.$trModule1];

$krep_rcmbS :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

$krep1_rcmbT :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep_rcmbS GHC.Types.[]];

$krep2_rcmbU :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcStableName#
                                              $krep1_rcmbT];

System.Mem.StableName.$tcStableName2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "StableName"#;

System.Mem.StableName.$tcStableName1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Mem.StableName.$tcStableName2];

System.Mem.StableName.$tcStableName :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9283215246123464151##
                                    14241671522388568561##
                                    System.Mem.StableName.$trModule
                                    System.Mem.StableName.$tcStableName1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep3_rcmbV :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Mem.StableName.$tcStableName
                                              $krep1_rcmbT];

System.Mem.StableName.$tc'StableName1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcmbU $krep3_rcmbV];

System.Mem.StableName.$tc'StableName3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'StableName"#;

System.Mem.StableName.$tc'StableName2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Mem.StableName.$tc'StableName3];

System.Mem.StableName.$tc'StableName :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11629501114032097064##
                                    10388293122134847073##
                                    System.Mem.StableName.$trModule
                                    System.Mem.StableName.$tc'StableName2
                                    1#
                                    System.Mem.StableName.$tc'StableName1];

System.Mem.StableName.StableName
  :: forall a.
     GHC.Prim.StableName# a -> System.Mem.StableName.StableName a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Mem.StableName.StableName [eta_B1];


==================== STG syntax: ====================
2018-03-16 16:07:15.454577143 UTC

System.Mem.StableName.$fEqStableName_$c==
  :: forall a.
     System.Mem.StableName.StableName a
     -> System.Mem.StableName.StableName a -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [ds_scmlT ds1_scmlU]
        case ds_scmlT of {
          System.Mem.StableName.StableName sn1_scmlW [Occ=Once] ->
              case ds1_scmlU of {
                System.Mem.StableName.StableName sn2_scmlY [Occ=Once] ->
                    case eqStableName# [sn1_scmlW sn2_scmlY] of {
                      __DEFAULT -> GHC.Types.True [];
                      0# -> GHC.Types.False [];
                    };
              };
        };

System.Mem.StableName.$fEqStableName_$c/= [InlPrag=INLINE (sat-args=2)]
  :: forall a.
     System.Mem.StableName.StableName a
     -> System.Mem.StableName.StableName a -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [eta_scmm0 eta1_scmm1]
        case eta_scmm0 of {
          System.Mem.StableName.StableName sn1_scmm3 [Occ=Once] ->
              case eta1_scmm1 of {
                System.Mem.StableName.StableName sn2_scmm5 [Occ=Once] ->
                    case eqStableName# [sn1_scmm3 sn2_scmm5] of {
                      __DEFAULT -> GHC.Types.False [];
                      0# -> GHC.Types.True [];
                    };
              };
        };

System.Mem.StableName.$fEqStableName [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a. GHC.Classes.Eq (System.Mem.StableName.StableName a)
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [System.Mem.StableName.$fEqStableName_$c==
                                     System.Mem.StableName.$fEqStableName_$c/=];

System.Mem.StableName.makeStableName1
  :: forall a.
     a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           System.Mem.StableName.StableName a #)
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [a1_scmm7 void_0E]
        case makeStableName# [a1_scmm7 GHC.Prim.void#] of {
          Unit# ipv1_scmmb [Occ=Once] ->
              let {
                sat_scmmc [Occ=Once] :: System.Mem.StableName.StableName a_acm7O
                [LclId] =
                    CCCS System.Mem.StableName.StableName! [ipv1_scmmb];
              } in  Unit# [sat_scmmc];
        };

System.Mem.StableName.makeStableName
  :: forall a. a -> GHC.Types.IO (System.Mem.StableName.StableName a)
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        System.Mem.StableName.makeStableName1 eta_B2 GHC.Prim.void#;

System.Mem.StableName.hashStableName
  :: forall a. System.Mem.StableName.StableName a -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ds_scmmd]
        case ds_scmmd of {
          System.Mem.StableName.StableName sn_scmmf [Occ=Once] ->
              case stableNameToInt# [sn_scmmf] of sat_scmmg {
                __DEFAULT -> GHC.Types.I# [sat_scmmg];
              };
        };

System.Mem.StableName.eqStableName
  :: forall a b.
     System.Mem.StableName.StableName a
     -> System.Mem.StableName.StableName b -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [ds_scmmh ds1_scmmi]
        case ds_scmmh of {
          System.Mem.StableName.StableName sn1_scmmk [Occ=Once] ->
              case ds1_scmmi of {
                System.Mem.StableName.StableName sn2_scmmm [Occ=Once] ->
                    case eqStableName# [sn1_scmmk sn2_scmmm] of {
                      __DEFAULT -> GHC.Types.True [];
                      0# -> GHC.Types.False [];
                    };
              };
        };

System.Mem.StableName.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

System.Mem.StableName.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Mem.StableName.$trModule4];

System.Mem.StableName.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "System.Mem.StableName"#;

System.Mem.StableName.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Mem.StableName.$trModule2];

System.Mem.StableName.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [System.Mem.StableName.$trModule3
                                     System.Mem.StableName.$trModule1];

$krep_rcmbS :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

$krep1_rcmbT :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep_rcmbS GHC.Types.[]];

$krep2_rcmbU :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcStableName#
                                              $krep1_rcmbT];

System.Mem.StableName.$tcStableName2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "StableName"#;

System.Mem.StableName.$tcStableName1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Mem.StableName.$tcStableName2];

System.Mem.StableName.$tcStableName :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9283215246123464151##
                                    14241671522388568561##
                                    System.Mem.StableName.$trModule
                                    System.Mem.StableName.$tcStableName1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep3_rcmbV :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Mem.StableName.$tcStableName
                                              $krep1_rcmbT];

System.Mem.StableName.$tc'StableName1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcmbU $krep3_rcmbV];

System.Mem.StableName.$tc'StableName3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'StableName"#;

System.Mem.StableName.$tc'StableName2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Mem.StableName.$tc'StableName3];

System.Mem.StableName.$tc'StableName :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11629501114032097064##
                                    10388293122134847073##
                                    System.Mem.StableName.$trModule
                                    System.Mem.StableName.$tc'StableName2
                                    1#
                                    System.Mem.StableName.$tc'StableName1];

System.Mem.StableName.StableName
  :: forall a.
     GHC.Prim.StableName# a -> System.Mem.StableName.StableName a
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] System.Mem.StableName.StableName [eta_B1];

