
==================== Raw Cmm ====================
2018-03-16 16:07:15.276609951 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:07:15.279001782 UTC

[section ""data" . System.Mem.StableName.$fEqStableName_$c==_closure" {
     System.Mem.StableName.$fEqStableName_$c==_closure:
         const System.Mem.StableName.$fEqStableName_$c==_info;
 },
 System.Mem.StableName.$fEqStableName_$c==_entry() //  [R2, R3]
         { []
         }
     {offset
       ccmhJ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmhN; else goto ccmhO;
       ccmhN: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Mem.StableName.$fEqStableName_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccmhO: // global
           I64[Sp - 16] = block_ccmhG_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto ucmib; else goto ccmhH;
       ucmib: // global
           call _ccmhG(R1) args: 0, res: 0, upd: 0;
       ccmhH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Mem.StableName.$fEqStableName_$c==_info" {
     System.Mem.StableName.$fEqStableName_$c==_info:
         const System.Mem.StableName.$fEqStableName_$c==_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _ccmhG() //  [R1]
         { []
         }
     {offset
       ccmhG: // global
           I64[Sp] = block_ccmhM_info;
           _scmc0::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _scmc0::P64;
           if (R1 & 7 != 0) goto ucmia; else goto ccmhQ;
       ucmia: // global
           call _ccmhM(R1) args: 0, res: 0, upd: 0;
       ccmhQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_ccmhG_info" {
     block_ccmhG_info:
         const _ccmhG;
         const 1;
         const 30;
 },
 _ccmhM() //  [R1]
         { []
         }
     {offset
       ccmhM: // global
           if (I64[P64[Sp + 8] + 8] == I64[P64[R1 + 7] + 8]) goto ccmi0; else goto ccmi6;
       ccmi0: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       ccmi6: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccmhM_info" {
     block_ccmhM_info:
         const _ccmhM;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.287147231 UTC

[section ""data" . System.Mem.StableName.$fEqStableName_$c/=_closure" {
     System.Mem.StableName.$fEqStableName_$c/=_closure:
         const System.Mem.StableName.$fEqStableName_$c/=_info;
 },
 System.Mem.StableName.$fEqStableName_$c/=_entry() //  [R2, R3]
         { []
         }
     {offset
       ccmiB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmiF; else goto ccmiG;
       ccmiF: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Mem.StableName.$fEqStableName_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccmiG: // global
           I64[Sp - 16] = block_ccmiy_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto ucmj3; else goto ccmiz;
       ucmj3: // global
           call _ccmiy(R1) args: 0, res: 0, upd: 0;
       ccmiz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Mem.StableName.$fEqStableName_$c/=_info" {
     System.Mem.StableName.$fEqStableName_$c/=_info:
         const System.Mem.StableName.$fEqStableName_$c/=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _ccmiy() //  [R1]
         { []
         }
     {offset
       ccmiy: // global
           I64[Sp] = block_ccmiE_info;
           _scmc7::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _scmc7::P64;
           if (R1 & 7 != 0) goto ucmj2; else goto ccmiI;
       ucmj2: // global
           call _ccmiE(R1) args: 0, res: 0, upd: 0;
       ccmiI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_ccmiy_info" {
     block_ccmiy_info:
         const _ccmiy;
         const 1;
         const 30;
 },
 _ccmiE() //  [R1]
         { []
         }
     {offset
       ccmiE: // global
           if (I64[P64[Sp + 8] + 8] == I64[P64[R1 + 7] + 8]) goto ccmiS; else goto ccmiY;
       ccmiS: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       ccmiY: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccmiE_info" {
     block_ccmiE_info:
         const _ccmiE;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.294149118 UTC

[section ""data" . System.Mem.StableName.$fEqStableName_closure" {
     System.Mem.StableName.$fEqStableName_closure:
         const GHC.Classes.C:Eq_con_info;
         const System.Mem.StableName.$fEqStableName_$c==_closure+2;
         const System.Mem.StableName.$fEqStableName_$c/=_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.296815641 UTC

[section ""data" . System.Mem.StableName.makeStableName1_closure" {
     System.Mem.StableName.makeStableName1_closure:
         const System.Mem.StableName.makeStableName1_info;
 },
 System.Mem.StableName.makeStableName1_entry() //  [R2]
         { []
         }
     {offset
       ccmju: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccmjv; else goto ccmjw;
       ccmjv: // global
           R2 = R2;
           R1 = System.Mem.StableName.makeStableName1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccmjw: // global
           I64[Sp - 8] = block_ccmjr_info;
           R1 = R2;
           Sp = Sp - 8;
           call stg_makeStableName#(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Mem.StableName.makeStableName1_info" {
     System.Mem.StableName.makeStableName1_info:
         const System.Mem.StableName.makeStableName1_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _ccmjr() //  [R1]
         { []
         }
     {offset
       ccmjr: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccmjz; else goto ccmjy;
       ccmjz: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccmjy: // global
           I64[Hp - 8] = System.Mem.StableName.StableName_con_info;
           P64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccmjr_info" {
     block_ccmjr_info:
         const _ccmjr;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.303367856 UTC

[section ""data" . System.Mem.StableName.makeStableName_closure" {
     System.Mem.StableName.makeStableName_closure:
         const System.Mem.StableName.makeStableName_info;
 },
 System.Mem.StableName.makeStableName_entry() //  [R2]
         { []
         }
     {offset
       ccmjN: // global
           R2 = R2;
           call System.Mem.StableName.makeStableName1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Mem.StableName.makeStableName_info" {
     System.Mem.StableName.makeStableName_info:
         const System.Mem.StableName.makeStableName_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.307255161 UTC

[section ""data" . System.Mem.StableName.hashStableName_closure" {
     System.Mem.StableName.hashStableName_closure:
         const System.Mem.StableName.hashStableName_info;
 },
 System.Mem.StableName.hashStableName_entry() //  [R2]
         { []
         }
     {offset
       ccmk1: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccmk8; else goto ccmk9;
       ccmk8: // global
           R2 = R2;
           R1 = System.Mem.StableName.hashStableName_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccmk9: // global
           I64[Sp - 8] = block_ccmjY_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucmkd; else goto ccmjZ;
       ucmkd: // global
           call _ccmjY(R1) args: 0, res: 0, upd: 0;
       ccmjZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Mem.StableName.hashStableName_info" {
     System.Mem.StableName.hashStableName_info:
         const System.Mem.StableName.hashStableName_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _ccmjY() //  [R1]
         { []
         }
     {offset
       ccmjY: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccmkc; else goto ccmkb;
       ccmkc: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccmkb: // global
           _scmck::I64 = I64[P64[R1 + 7] + 8];
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _scmck::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccmjY_info" {
     block_ccmjY_info:
         const _ccmjY;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.313780587 UTC

[section ""data" . System.Mem.StableName.eqStableName_closure" {
     System.Mem.StableName.eqStableName_closure:
         const System.Mem.StableName.eqStableName_info;
 },
 System.Mem.StableName.eqStableName_entry() //  [R2, R3]
         { []
         }
     {offset
       ccmkw: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmkA; else goto ccmkB;
       ccmkA: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Mem.StableName.eqStableName_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccmkB: // global
           I64[Sp - 16] = block_ccmkt_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto ucmkY; else goto ccmku;
       ucmkY: // global
           call _ccmkt(R1) args: 0, res: 0, upd: 0;
       ccmku: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Mem.StableName.eqStableName_info" {
     System.Mem.StableName.eqStableName_info:
         const System.Mem.StableName.eqStableName_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _ccmkt() //  [R1]
         { []
         }
     {offset
       ccmkt: // global
           I64[Sp] = block_ccmkz_info;
           _scmco::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _scmco::P64;
           if (R1 & 7 != 0) goto ucmkX; else goto ccmkD;
       ucmkX: // global
           call _ccmkz(R1) args: 0, res: 0, upd: 0;
       ccmkD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_ccmkt_info" {
     block_ccmkt_info:
         const _ccmkt;
         const 1;
         const 30;
 },
 _ccmkz() //  [R1]
         { []
         }
     {offset
       ccmkz: // global
           if (I64[P64[Sp + 8] + 8] == I64[P64[R1 + 7] + 8]) goto ccmkN; else goto ccmkT;
       ccmkN: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       ccmkT: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccmkz_info" {
     block_ccmkz_info:
         const _ccmkz;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.320266363 UTC

[section ""cstring" . System.Mem.StableName.$trModule4_bytes" {
     System.Mem.StableName.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.322292136 UTC

[section ""data" . System.Mem.StableName.$trModule3_closure" {
     System.Mem.StableName.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Mem.StableName.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.324038716 UTC

[section ""cstring" . System.Mem.StableName.$trModule2_bytes" {
     System.Mem.StableName.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,77,101,109,46,83,116,97,98,108,101,78,97,109,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.325803138 UTC

[section ""data" . System.Mem.StableName.$trModule1_closure" {
     System.Mem.StableName.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Mem.StableName.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.32757599 UTC

[section ""data" . System.Mem.StableName.$trModule_closure" {
     System.Mem.StableName.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.Mem.StableName.$trModule3_closure+1;
         const System.Mem.StableName.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.329455252 UTC

[section ""data" . $krep_rcmbS_closure" {
     $krep_rcmbS_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.332199015 UTC

[section ""data" . $krep1_rcmbT_closure" {
     $krep1_rcmbT_closure:
         const :_con_info;
         const $krep_rcmbS_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.334232726 UTC

[section ""data" . $krep2_rcmbU_closure" {
     $krep2_rcmbU_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcStableName#_closure;
         const $krep1_rcmbT_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.336088833 UTC

[section ""cstring" . System.Mem.StableName.$tcStableName2_bytes" {
     System.Mem.StableName.$tcStableName2_bytes:
         I8[] [83,116,97,98,108,101,78,97,109,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.33799719 UTC

[section ""data" . System.Mem.StableName.$tcStableName1_closure" {
     System.Mem.StableName.$tcStableName1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Mem.StableName.$tcStableName2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.339921046 UTC

[section ""data" . System.Mem.StableName.$tcStableName_closure" {
     System.Mem.StableName.$tcStableName_closure:
         const GHC.Types.TyCon_con_info;
         const System.Mem.StableName.$trModule_closure+1;
         const System.Mem.StableName.$tcStableName1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 9283215246123464151;
         const 14241671522388568561;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.342031023 UTC

[section ""data" . $krep3_rcmbV_closure" {
     $krep3_rcmbV_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const System.Mem.StableName.$tcStableName_closure+1;
         const $krep1_rcmbT_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.343989771 UTC

[section ""data" . System.Mem.StableName.$tc'StableName1_closure" {
     System.Mem.StableName.$tc'StableName1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_rcmbU_closure+1;
         const $krep3_rcmbV_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.345956072 UTC

[section ""cstring" . System.Mem.StableName.$tc'StableName3_bytes" {
     System.Mem.StableName.$tc'StableName3_bytes:
         I8[] [39,83,116,97,98,108,101,78,97,109,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.347829081 UTC

[section ""data" . System.Mem.StableName.$tc'StableName2_closure" {
     System.Mem.StableName.$tc'StableName2_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Mem.StableName.$tc'StableName3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.349789416 UTC

[section ""data" . System.Mem.StableName.$tc'StableName_closure" {
     System.Mem.StableName.$tc'StableName_closure:
         const GHC.Types.TyCon_con_info;
         const System.Mem.StableName.$trModule_closure+1;
         const System.Mem.StableName.$tc'StableName2_closure+1;
         const System.Mem.StableName.$tc'StableName1_closure+4;
         const 11629501114032097064;
         const 10388293122134847073;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.352540361 UTC

[section ""data" . System.Mem.StableName.StableName_closure" {
     System.Mem.StableName.StableName_closure:
         const System.Mem.StableName.StableName_info;
 },
 System.Mem.StableName.StableName_entry() //  [R2]
         { []
         }
     {offset
       ccmlC: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccmlG; else goto ccmlF;
       ccmlG: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = System.Mem.StableName.StableName_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccmlF: // global
           I64[Hp - 8] = System.Mem.StableName.StableName_con_info;
           P64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Mem.StableName.StableName_info" {
     System.Mem.StableName.StableName_info:
         const System.Mem.StableName.StableName_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.356984071 UTC

[section ""cstring" . icmhB_str" {
     icmhB_str:
         I8[] [98,97,115,101,58,83,121,115,116,101,109,46,77,101,109,46,83,116,97,98,108,101,78,97,109,101,46,83,116,97,98,108,101,78,97,109,101]
 },
 System.Mem.StableName.StableName_con_entry() //  [R1]
         { []
         }
     {offset
       ccmlM: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Mem.StableName.StableName_con_info" {
     System.Mem.StableName.StableName_con_info:
         const System.Mem.StableName.StableName_con_entry;
         const 1;
         const 2;
         const icmhB_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.360456749 UTC

[section ""relreadonly" . Scmf1_srt" { Scmf1_srt:
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.4584221 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:07:15.461277941 UTC

[section ""data" . System.Mem.StableName.$fEqStableName_$c==_closure" {
     System.Mem.StableName.$fEqStableName_$c==_closure:
         const System.Mem.StableName.$fEqStableName_$c==_info;
 },
 System.Mem.StableName.$fEqStableName_$c==_entry() //  [R2, R3]
         { []
         }
     {offset
       ccmmv: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmmz; else goto ccmmA;
       ccmmz: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Mem.StableName.$fEqStableName_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccmmA: // global
           I64[Sp - 16] = block_ccmms_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto ucmmX; else goto ccmmt;
       ucmmX: // global
           call _ccmms(R1) args: 0, res: 0, upd: 0;
       ccmmt: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Mem.StableName.$fEqStableName_$c==_info" {
     System.Mem.StableName.$fEqStableName_$c==_info:
         const System.Mem.StableName.$fEqStableName_$c==_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _ccmms() //  [R1]
         { []
         }
     {offset
       ccmms: // global
           I64[Sp] = block_ccmmy_info;
           _scmlW::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _scmlW::P64;
           if (R1 & 7 != 0) goto ucmmW; else goto ccmmC;
       ucmmW: // global
           call _ccmmy(R1) args: 0, res: 0, upd: 0;
       ccmmC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_ccmms_info" {
     block_ccmms_info:
         const _ccmms;
         const 1;
         const 30;
 },
 _ccmmy() //  [R1]
         { []
         }
     {offset
       ccmmy: // global
           if (I64[P64[Sp + 8] + 8] == I64[P64[R1 + 7] + 8]) goto ccmmM; else goto ccmmS;
       ccmmM: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       ccmmS: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccmmy_info" {
     block_ccmmy_info:
         const _ccmmy;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.470316995 UTC

[section ""data" . System.Mem.StableName.$fEqStableName_$c/=_closure" {
     System.Mem.StableName.$fEqStableName_$c/=_closure:
         const System.Mem.StableName.$fEqStableName_$c/=_info;
 },
 System.Mem.StableName.$fEqStableName_$c/=_entry() //  [R2, R3]
         { []
         }
     {offset
       ccmnr: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmnv; else goto ccmnw;
       ccmnv: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Mem.StableName.$fEqStableName_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccmnw: // global
           I64[Sp - 16] = block_ccmno_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto ucmnT; else goto ccmnp;
       ucmnT: // global
           call _ccmno(R1) args: 0, res: 0, upd: 0;
       ccmnp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Mem.StableName.$fEqStableName_$c/=_info" {
     System.Mem.StableName.$fEqStableName_$c/=_info:
         const System.Mem.StableName.$fEqStableName_$c/=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _ccmno() //  [R1]
         { []
         }
     {offset
       ccmno: // global
           I64[Sp] = block_ccmnu_info;
           _scmm3::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _scmm3::P64;
           if (R1 & 7 != 0) goto ucmnS; else goto ccmny;
       ucmnS: // global
           call _ccmnu(R1) args: 0, res: 0, upd: 0;
       ccmny: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_ccmno_info" {
     block_ccmno_info:
         const _ccmno;
         const 1;
         const 30;
 },
 _ccmnu() //  [R1]
         { []
         }
     {offset
       ccmnu: // global
           if (I64[P64[Sp + 8] + 8] == I64[P64[R1 + 7] + 8]) goto ccmnI; else goto ccmnO;
       ccmnI: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       ccmnO: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccmnu_info" {
     block_ccmnu_info:
         const _ccmnu;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.477837777 UTC

[section ""data" . System.Mem.StableName.$fEqStableName_closure" {
     System.Mem.StableName.$fEqStableName_closure:
         const GHC.Classes.C:Eq_con_info;
         const System.Mem.StableName.$fEqStableName_$c==_closure+2;
         const System.Mem.StableName.$fEqStableName_$c/=_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.48079798 UTC

[section ""data" . System.Mem.StableName.makeStableName1_closure" {
     System.Mem.StableName.makeStableName1_closure:
         const System.Mem.StableName.makeStableName1_info;
 },
 System.Mem.StableName.makeStableName1_entry() //  [R2]
         { []
         }
     {offset
       ccmoo: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccmop; else goto ccmoq;
       ccmop: // global
           R2 = R2;
           R1 = System.Mem.StableName.makeStableName1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccmoq: // global
           I64[Sp - 8] = block_ccmol_info;
           R1 = R2;
           Sp = Sp - 8;
           call stg_makeStableName#(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Mem.StableName.makeStableName1_info" {
     System.Mem.StableName.makeStableName1_info:
         const System.Mem.StableName.makeStableName1_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _ccmol() //  [R1]
         { []
         }
     {offset
       ccmol: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccmot; else goto ccmos;
       ccmot: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccmos: // global
           I64[Hp - 8] = System.Mem.StableName.StableName_con_info;
           P64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccmol_info" {
     block_ccmol_info:
         const _ccmol;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.487808663 UTC

[section ""data" . System.Mem.StableName.makeStableName_closure" {
     System.Mem.StableName.makeStableName_closure:
         const System.Mem.StableName.makeStableName_info;
 },
 System.Mem.StableName.makeStableName_entry() //  [R2]
         { []
         }
     {offset
       ccmoJ: // global
           R2 = R2;
           call System.Mem.StableName.makeStableName1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Mem.StableName.makeStableName_info" {
     System.Mem.StableName.makeStableName_info:
         const System.Mem.StableName.makeStableName_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.492213272 UTC

[section ""data" . System.Mem.StableName.hashStableName_closure" {
     System.Mem.StableName.hashStableName_closure:
         const System.Mem.StableName.hashStableName_info;
 },
 System.Mem.StableName.hashStableName_entry() //  [R2]
         { []
         }
     {offset
       ccmoX: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccmp4; else goto ccmp5;
       ccmp4: // global
           R2 = R2;
           R1 = System.Mem.StableName.hashStableName_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccmp5: // global
           I64[Sp - 8] = block_ccmoU_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucmp9; else goto ccmoV;
       ucmp9: // global
           call _ccmoU(R1) args: 0, res: 0, upd: 0;
       ccmoV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Mem.StableName.hashStableName_info" {
     System.Mem.StableName.hashStableName_info:
         const System.Mem.StableName.hashStableName_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _ccmoU() //  [R1]
         { []
         }
     {offset
       ccmoU: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccmp8; else goto ccmp7;
       ccmp8: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccmp7: // global
           _scmmg::I64 = I64[P64[R1 + 7] + 8];
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _scmmg::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccmoU_info" {
     block_ccmoU_info:
         const _ccmoU;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.499363146 UTC

[section ""data" . System.Mem.StableName.eqStableName_closure" {
     System.Mem.StableName.eqStableName_closure:
         const System.Mem.StableName.eqStableName_info;
 },
 System.Mem.StableName.eqStableName_entry() //  [R2, R3]
         { []
         }
     {offset
       ccmpu: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmpy; else goto ccmpz;
       ccmpy: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Mem.StableName.eqStableName_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccmpz: // global
           I64[Sp - 16] = block_ccmpr_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto ucmpW; else goto ccmps;
       ucmpW: // global
           call _ccmpr(R1) args: 0, res: 0, upd: 0;
       ccmps: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Mem.StableName.eqStableName_info" {
     System.Mem.StableName.eqStableName_info:
         const System.Mem.StableName.eqStableName_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _ccmpr() //  [R1]
         { []
         }
     {offset
       ccmpr: // global
           I64[Sp] = block_ccmpx_info;
           _scmmk::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _scmmk::P64;
           if (R1 & 7 != 0) goto ucmpV; else goto ccmpB;
       ucmpV: // global
           call _ccmpx(R1) args: 0, res: 0, upd: 0;
       ccmpB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_ccmpr_info" {
     block_ccmpr_info:
         const _ccmpr;
         const 1;
         const 30;
 },
 _ccmpx() //  [R1]
         { []
         }
     {offset
       ccmpx: // global
           if (I64[P64[Sp + 8] + 8] == I64[P64[R1 + 7] + 8]) goto ccmpL; else goto ccmpR;
       ccmpL: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       ccmpR: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccmpx_info" {
     block_ccmpx_info:
         const _ccmpx;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.505971012 UTC

[section ""cstring" . System.Mem.StableName.$trModule4_bytes" {
     System.Mem.StableName.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.507721909 UTC

[section ""data" . System.Mem.StableName.$trModule3_closure" {
     System.Mem.StableName.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Mem.StableName.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.509511643 UTC

[section ""cstring" . System.Mem.StableName.$trModule2_bytes" {
     System.Mem.StableName.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,77,101,109,46,83,116,97,98,108,101,78,97,109,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.511353761 UTC

[section ""data" . System.Mem.StableName.$trModule1_closure" {
     System.Mem.StableName.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Mem.StableName.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.513188005 UTC

[section ""data" . System.Mem.StableName.$trModule_closure" {
     System.Mem.StableName.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.Mem.StableName.$trModule3_closure+1;
         const System.Mem.StableName.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.515607395 UTC

[section ""data" . $krep_rcmbS_closure" {
     $krep_rcmbS_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.517715756 UTC

[section ""data" . $krep1_rcmbT_closure" {
     $krep1_rcmbT_closure:
         const :_con_info;
         const $krep_rcmbS_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.519812157 UTC

[section ""data" . $krep2_rcmbU_closure" {
     $krep2_rcmbU_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcStableName#_closure;
         const $krep1_rcmbT_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.521766547 UTC

[section ""cstring" . System.Mem.StableName.$tcStableName2_bytes" {
     System.Mem.StableName.$tcStableName2_bytes:
         I8[] [83,116,97,98,108,101,78,97,109,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.523620444 UTC

[section ""data" . System.Mem.StableName.$tcStableName1_closure" {
     System.Mem.StableName.$tcStableName1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Mem.StableName.$tcStableName2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.52562095 UTC

[section ""data" . System.Mem.StableName.$tcStableName_closure" {
     System.Mem.StableName.$tcStableName_closure:
         const GHC.Types.TyCon_con_info;
         const System.Mem.StableName.$trModule_closure+1;
         const System.Mem.StableName.$tcStableName1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 9283215246123464151;
         const 14241671522388568561;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.527616095 UTC

[section ""data" . $krep3_rcmbV_closure" {
     $krep3_rcmbV_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const System.Mem.StableName.$tcStableName_closure+1;
         const $krep1_rcmbT_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.529573774 UTC

[section ""data" . System.Mem.StableName.$tc'StableName1_closure" {
     System.Mem.StableName.$tc'StableName1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_rcmbU_closure+1;
         const $krep3_rcmbV_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.531432779 UTC

[section ""cstring" . System.Mem.StableName.$tc'StableName3_bytes" {
     System.Mem.StableName.$tc'StableName3_bytes:
         I8[] [39,83,116,97,98,108,101,78,97,109,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.533425653 UTC

[section ""data" . System.Mem.StableName.$tc'StableName2_closure" {
     System.Mem.StableName.$tc'StableName2_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Mem.StableName.$tc'StableName3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.535401078 UTC

[section ""data" . System.Mem.StableName.$tc'StableName_closure" {
     System.Mem.StableName.$tc'StableName_closure:
         const GHC.Types.TyCon_con_info;
         const System.Mem.StableName.$trModule_closure+1;
         const System.Mem.StableName.$tc'StableName2_closure+1;
         const System.Mem.StableName.$tc'StableName1_closure+4;
         const 11629501114032097064;
         const 10388293122134847073;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.538169281 UTC

[section ""data" . System.Mem.StableName.StableName_closure" {
     System.Mem.StableName.StableName_closure:
         const System.Mem.StableName.StableName_info;
 },
 System.Mem.StableName.StableName_entry() //  [R2]
         { []
         }
     {offset
       ccmqE: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccmqI; else goto ccmqH;
       ccmqI: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = System.Mem.StableName.StableName_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccmqH: // global
           I64[Hp - 8] = System.Mem.StableName.StableName_con_info;
           P64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Mem.StableName.StableName_info" {
     System.Mem.StableName.StableName_info:
         const System.Mem.StableName.StableName_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.542409557 UTC

[section ""cstring" . icmqQ_str" {
     icmqQ_str:
         I8[] [98,97,115,101,58,83,121,115,116,101,109,46,77,101,109,46,83,116,97,98,108,101,78,97,109,101,46,83,116,97,98,108,101,78,97,109,101]
 },
 System.Mem.StableName.StableName_con_entry() //  [R1]
         { []
         }
     {offset
       ccmqP: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Mem.StableName.StableName_con_info" {
     System.Mem.StableName.StableName_con_info:
         const System.Mem.StableName.StableName_con_entry;
         const 1;
         const 2;
         const icmqQ_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:15.54624618 UTC

[section ""relreadonly" . ScmqW_srt" { ScmqW_srt:
 }]

