
==================== Output Cmm ====================
2018-03-16 16:07:15.005354364 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:15.00615351 UTC

[section ""data" . System.Mem.Weak.mkWeakPtr1_closure" {
     System.Mem.Weak.mkWeakPtr1_closure:
         const System.Mem.Weak.mkWeakPtr1_info;
 },
 System.Mem.Weak.mkWeakPtr1_entry() //  [R2, R3]
         { info_tbl: [(cclZe,
                       label: System.Mem.Weak.mkWeakPtr1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cclZe: // global
           R4 = R3;
           R3 = R2;
           R2 = R2;
           call GHC.Weak.mkWeak1_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.007020126 UTC

[section ""data" . System.Mem.Weak.mkWeakPtr_closure" {
     System.Mem.Weak.mkWeakPtr_closure:
         const System.Mem.Weak.mkWeakPtr_info;
 },
 System.Mem.Weak.mkWeakPtr_entry() //  [R2, R3]
         { info_tbl: [(cclZl,
                       label: System.Mem.Weak.mkWeakPtr_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cclZl: // global
           R3 = R3;
           R2 = R2;
           call System.Mem.Weak.mkWeakPtr1_entry(R3,
                                                 R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.007910702 UTC

[section ""data" . System.Mem.Weak.addFinalizer1_closure" {
     System.Mem.Weak.addFinalizer1_closure:
         const System.Mem.Weak.addFinalizer1_info;
 },
 System.Mem.Weak.addFinalizer1_entry() //  [R2, R3]
         { info_tbl: [(cclZu,
                       label: System.Mem.Weak.addFinalizer1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cclZu: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cclZv; else goto cclZw;
       cclZv: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Mem.Weak.addFinalizer1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cclZw: // global
           I64[Sp - 8] = block_cclZs_info;
           R3 = R3;
           _sclYO::P64 = R2;
           R2 = R2;
           R1 = _sclYO::P64;
           Sp = Sp - 8;
           call stg_mkWeak#(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _cclZs() //  []
         { info_tbl: [(cclZs,
                       label: block_cclZs_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cclZs: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.008987705 UTC

[section ""data" . System.Mem.Weak.addFinalizer_closure" {
     System.Mem.Weak.addFinalizer_closure:
         const System.Mem.Weak.addFinalizer_info;
 },
 System.Mem.Weak.addFinalizer_entry() //  [R2, R3]
         { info_tbl: [(cclZC,
                       label: System.Mem.Weak.addFinalizer_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cclZC: // global
           R3 = R3;
           R2 = R2;
           call System.Mem.Weak.addFinalizer1_entry(R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.010364769 UTC

[section ""data" . System.Mem.Weak.mkWeakPair1_closure" {
     System.Mem.Weak.mkWeakPair1_closure:
         const System.Mem.Weak.mkWeakPair1_info;
 },
 System.Mem.Weak.mkWeakPair1_entry() //  [R2, R3, R4]
         { info_tbl: [(cclZQ,
                       label: System.Mem.Weak.mkWeakPair1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cclZQ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cclZR; else goto cclZS;
       cclZR: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = System.Mem.Weak.mkWeakPair1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cclZS: // global
           I64[Sp - 24] = block_cclZJ_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto ucm0h; else goto cclZK;
       ucm0h: // global
           call _cclZJ(R1) args: 0, res: 0, upd: 0;
       cclZK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cclZJ() //  [R1]
         { info_tbl: [(cclZJ,
                       label: block_cclZJ_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cclZJ: // global
           _sclYU::P64 = P64[Sp + 8];
           _sclYV::P64 = P64[Sp + 16];
           if (R1 & 7 == 1) goto cclZN; else goto cclZO;
       cclZN: // global
           Hp = Hp + 24;
           _sclYY::P64 = R1;
           if (Hp > HpLim) (likely: False) goto ccm0d; else goto ccm00;
       ccm00: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = _sclYU::P64;
           P64[Hp] = _sclYV::P64;
           I64[Sp + 16] = block_cclZW_info;
           R2 = Hp - 15;
           R1 = _sclYU::P64;
           Sp = Sp + 16;
           call stg_mkWeakNoFinalizer#(R2, R1) args: 8, res: 8, upd: 8;
       cclZO: // global
           Hp = Hp + 24;
           _sclYY::P64 = R1;
           if (Hp > HpLim) (likely: False) goto ccm0d; else goto ccm0c;
       ccm0d: // global
           HpAlloc = 24;
           R1 = _sclYY::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccm0c: // global
           _sclZ4::P64 = P64[_sclYY::P64 + 6];
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = _sclYU::P64;
           P64[Hp] = _sclYV::P64;
           I64[Sp + 16] = block_ccm08_info;
           R3 = _sclZ4::P64;
           R2 = Hp - 15;
           R1 = _sclYU::P64;
           Sp = Sp + 16;
           call stg_mkWeak#(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _cclZW() //  [R1]
         { info_tbl: [(cclZW,
                       label: block_cclZW_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cclZW: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccm04; else goto ccm03;
       ccm04: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccm03: // global
           I64[Hp - 8] = GHC.Weak.Weak_con_info;
           P64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _ccm08() //  [R1]
         { info_tbl: [(ccm08,
                       label: block_ccm08_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm08: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccm0g; else goto ccm0f;
       ccm0g: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccm0f: // global
           I64[Hp - 8] = GHC.Weak.Weak_con_info;
           P64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.012205118 UTC

[section ""data" . System.Mem.Weak.mkWeakPair_closure" {
     System.Mem.Weak.mkWeakPair_closure:
         const System.Mem.Weak.mkWeakPair_info;
 },
 System.Mem.Weak.mkWeakPair_entry() //  [R2, R3, R4]
         { info_tbl: [(ccm0m,
                       label: System.Mem.Weak.mkWeakPair_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm0m: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call System.Mem.Weak.mkWeakPair1_entry(R4,
                                                  R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.012922225 UTC

[section ""cstring" . System.Mem.Weak.$trModule4_bytes" {
     System.Mem.Weak.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.0136024 UTC

[section ""data" . System.Mem.Weak.$trModule3_closure" {
     System.Mem.Weak.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Mem.Weak.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.014122507 UTC

[section ""cstring" . System.Mem.Weak.$trModule2_bytes" {
     System.Mem.Weak.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,77,101,109,46,87,101,97,107]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.014689026 UTC

[section ""data" . System.Mem.Weak.$trModule1_closure" {
     System.Mem.Weak.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Mem.Weak.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.01528559 UTC

[section ""data" . System.Mem.Weak.$trModule_closure" {
     System.Mem.Weak.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.Mem.Weak.$trModule3_closure+1;
         const System.Mem.Weak.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.015856143 UTC

[section ""relreadonly" . Scm0p_srt" { Scm0p_srt:
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.016366538 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:15.017002962 UTC

[section ""data" . System.Mem.Weak.mkWeakPtr1_closure" {
     System.Mem.Weak.mkWeakPtr1_closure:
         const System.Mem.Weak.mkWeakPtr1_info;
 },
 System.Mem.Weak.mkWeakPtr1_entry() //  [R2, R3]
         { info_tbl: [(ccm0u,
                       label: System.Mem.Weak.mkWeakPtr1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm0u: // global
           R4 = R3;
           R3 = R2;
           R2 = R2;
           call GHC.Weak.mkWeak1_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.017851032 UTC

[section ""data" . System.Mem.Weak.mkWeakPtr_closure" {
     System.Mem.Weak.mkWeakPtr_closure:
         const System.Mem.Weak.mkWeakPtr_info;
 },
 System.Mem.Weak.mkWeakPtr_entry() //  [R2, R3]
         { info_tbl: [(ccm0B,
                       label: System.Mem.Weak.mkWeakPtr_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm0B: // global
           R3 = R3;
           R2 = R2;
           call System.Mem.Weak.mkWeakPtr1_entry(R3,
                                                 R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.01869534 UTC

[section ""data" . System.Mem.Weak.addFinalizer1_closure" {
     System.Mem.Weak.addFinalizer1_closure:
         const System.Mem.Weak.addFinalizer1_info;
 },
 System.Mem.Weak.addFinalizer1_entry() //  [R2, R3]
         { info_tbl: [(ccm0K,
                       label: System.Mem.Weak.addFinalizer1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm0K: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccm0L; else goto ccm0M;
       ccm0L: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Mem.Weak.addFinalizer1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccm0M: // global
           I64[Sp - 8] = block_ccm0I_info;
           R3 = R3;
           _sclYO::P64 = R2;
           R2 = R2;
           R1 = _sclYO::P64;
           Sp = Sp - 8;
           call stg_mkWeak#(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccm0I() //  []
         { info_tbl: [(ccm0I,
                       label: block_ccm0I_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm0I: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.019747901 UTC

[section ""data" . System.Mem.Weak.addFinalizer_closure" {
     System.Mem.Weak.addFinalizer_closure:
         const System.Mem.Weak.addFinalizer_info;
 },
 System.Mem.Weak.addFinalizer_entry() //  [R2, R3]
         { info_tbl: [(ccm0S,
                       label: System.Mem.Weak.addFinalizer_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm0S: // global
           R3 = R3;
           R2 = R2;
           call System.Mem.Weak.addFinalizer1_entry(R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.021148328 UTC

[section ""data" . System.Mem.Weak.mkWeakPair1_closure" {
     System.Mem.Weak.mkWeakPair1_closure:
         const System.Mem.Weak.mkWeakPair1_info;
 },
 System.Mem.Weak.mkWeakPair1_entry() //  [R2, R3, R4]
         { info_tbl: [(ccm16,
                       label: System.Mem.Weak.mkWeakPair1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm16: // global
           if ((Sp + -24) < SpLim) (likely: False) goto ccm17; else goto ccm18;
       ccm17: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = System.Mem.Weak.mkWeakPair1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       ccm18: // global
           I64[Sp - 24] = block_ccm0Z_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto ucm1x; else goto ccm10;
       ucm1x: // global
           call _ccm0Z(R1) args: 0, res: 0, upd: 0;
       ccm10: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccm0Z() //  [R1]
         { info_tbl: [(ccm0Z,
                       label: block_ccm0Z_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm0Z: // global
           _sclYU::P64 = P64[Sp + 8];
           _sclYV::P64 = P64[Sp + 16];
           if (R1 & 7 == 1) goto ccm13; else goto ccm14;
       ccm13: // global
           Hp = Hp + 24;
           _sclYY::P64 = R1;
           if (Hp > HpLim) (likely: False) goto ccm1t; else goto ccm1g;
       ccm1g: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = _sclYU::P64;
           P64[Hp] = _sclYV::P64;
           I64[Sp + 16] = block_ccm1c_info;
           R2 = Hp - 15;
           R1 = _sclYU::P64;
           Sp = Sp + 16;
           call stg_mkWeakNoFinalizer#(R2, R1) args: 8, res: 8, upd: 8;
       ccm14: // global
           Hp = Hp + 24;
           _sclYY::P64 = R1;
           if (Hp > HpLim) (likely: False) goto ccm1t; else goto ccm1s;
       ccm1t: // global
           HpAlloc = 24;
           R1 = _sclYY::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccm1s: // global
           _sclZ4::P64 = P64[_sclYY::P64 + 6];
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = _sclYU::P64;
           P64[Hp] = _sclYV::P64;
           I64[Sp + 16] = block_ccm1o_info;
           R3 = _sclZ4::P64;
           R2 = Hp - 15;
           R1 = _sclYU::P64;
           Sp = Sp + 16;
           call stg_mkWeak#(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccm1c() //  [R1]
         { info_tbl: [(ccm1c,
                       label: block_ccm1c_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm1c: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccm1k; else goto ccm1j;
       ccm1k: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccm1j: // global
           I64[Hp - 8] = GHC.Weak.Weak_con_info;
           P64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _ccm1o() //  [R1]
         { info_tbl: [(ccm1o,
                       label: block_ccm1o_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm1o: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccm1w; else goto ccm1v;
       ccm1w: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccm1v: // global
           I64[Hp - 8] = GHC.Weak.Weak_con_info;
           P64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.023039742 UTC

[section ""data" . System.Mem.Weak.mkWeakPair_closure" {
     System.Mem.Weak.mkWeakPair_closure:
         const System.Mem.Weak.mkWeakPair_info;
 },
 System.Mem.Weak.mkWeakPair_entry() //  [R2, R3, R4]
         { info_tbl: [(ccm1C,
                       label: System.Mem.Weak.mkWeakPair_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm1C: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call System.Mem.Weak.mkWeakPair1_entry(R4,
                                                  R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.02376713 UTC

[section ""cstring" . System.Mem.Weak.$trModule4_bytes" {
     System.Mem.Weak.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.024320585 UTC

[section ""data" . System.Mem.Weak.$trModule3_closure" {
     System.Mem.Weak.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Mem.Weak.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.024894558 UTC

[section ""cstring" . System.Mem.Weak.$trModule2_bytes" {
     System.Mem.Weak.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,77,101,109,46,87,101,97,107]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.025687772 UTC

[section ""data" . System.Mem.Weak.$trModule1_closure" {
     System.Mem.Weak.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Mem.Weak.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.026246071 UTC

[section ""data" . System.Mem.Weak.$trModule_closure" {
     System.Mem.Weak.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.Mem.Weak.$trModule3_closure+1;
         const System.Mem.Weak.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.026824624 UTC

[section ""relreadonly" . Scm0p_srt" { Scm0p_srt:
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.027598948 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:15.028911793 UTC

[section ""data" . System.Mem.Weak.mkWeakPtr1_closure" {
     System.Mem.Weak.mkWeakPtr1_closure:
         const System.Mem.Weak.mkWeakPtr1_info;
 },
 System.Mem.Weak.mkWeakPtr1_entry() //  [R2, R3]
         { info_tbl: [(ccm1J,
                       label: System.Mem.Weak.mkWeakPtr1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm1J: // global
           R4 = R3;
           R3 = R2;
           R2 = R2;
           call GHC.Weak.mkWeak1_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.032509351 UTC

[section ""data" . System.Mem.Weak.mkWeakPtr_closure" {
     System.Mem.Weak.mkWeakPtr_closure:
         const System.Mem.Weak.mkWeakPtr_info;
 },
 System.Mem.Weak.mkWeakPtr_entry() //  [R2, R3]
         { info_tbl: [(ccm1U,
                       label: System.Mem.Weak.mkWeakPtr_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm1U: // global
           R3 = R3;
           R2 = R2;
           call System.Mem.Weak.mkWeakPtr1_entry(R3,
                                                 R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.036005649 UTC

[section ""data" . System.Mem.Weak.addFinalizer1_closure" {
     System.Mem.Weak.addFinalizer1_closure:
         const System.Mem.Weak.addFinalizer1_info;
 },
 System.Mem.Weak.addFinalizer1_entry() //  [R2, R3]
         { info_tbl: [(ccm27,
                       label: System.Mem.Weak.addFinalizer1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm27: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccm28; else goto ccm29;
       ccm28: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Mem.Weak.addFinalizer1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccm29: // global
           I64[Sp - 8] = block_ccm25_info;
           R3 = R3;
           _sclYO::P64 = R2;
           R2 = R2;
           R1 = _sclYO::P64;
           Sp = Sp - 8;
           call stg_mkWeak#(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccm25() //  []
         { info_tbl: [(ccm25,
                       label: block_ccm25_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm25: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.042164112 UTC

[section ""data" . System.Mem.Weak.addFinalizer_closure" {
     System.Mem.Weak.addFinalizer_closure:
         const System.Mem.Weak.addFinalizer_info;
 },
 System.Mem.Weak.addFinalizer_entry() //  [R2, R3]
         { info_tbl: [(ccm2o,
                       label: System.Mem.Weak.addFinalizer_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm2o: // global
           R3 = R3;
           R2 = R2;
           call System.Mem.Weak.addFinalizer1_entry(R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.046496949 UTC

[section ""data" . System.Mem.Weak.mkWeakPair1_closure" {
     System.Mem.Weak.mkWeakPair1_closure:
         const System.Mem.Weak.mkWeakPair1_info;
 },
 System.Mem.Weak.mkWeakPair1_entry() //  [R2, R3, R4]
         { info_tbl: [(ccm2G,
                       label: System.Mem.Weak.mkWeakPair1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm2G: // global
           if ((Sp + -24) < SpLim) (likely: False) goto ccm2H; else goto ccm2I;
       ccm2H: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = System.Mem.Weak.mkWeakPair1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       ccm2I: // global
           I64[Sp - 24] = block_ccm2z_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto ucm37; else goto ccm2A;
       ucm37: // global
           call _ccm2z(R1) args: 0, res: 0, upd: 0;
       ccm2A: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccm2z() //  [R1]
         { info_tbl: [(ccm2z,
                       label: block_ccm2z_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm2z: // global
           _sclYU::P64 = P64[Sp + 8];
           _sclYV::P64 = P64[Sp + 16];
           if (R1 & 7 == 1) goto ccm2D; else goto ccm2E;
       ccm2D: // global
           Hp = Hp + 24;
           _sclYY::P64 = R1;
           if (Hp > HpLim) (likely: False) goto ccm33; else goto ccm2Q;
       ccm2Q: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = _sclYU::P64;
           P64[Hp] = _sclYV::P64;
           I64[Sp + 16] = block_ccm2M_info;
           R2 = Hp - 15;
           R1 = _sclYU::P64;
           Sp = Sp + 16;
           call stg_mkWeakNoFinalizer#(R2, R1) args: 8, res: 8, upd: 8;
       ccm2E: // global
           Hp = Hp + 24;
           _sclYY::P64 = R1;
           if (Hp > HpLim) (likely: False) goto ccm33; else goto ccm32;
       ccm33: // global
           HpAlloc = 24;
           R1 = _sclYY::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccm32: // global
           _sclZ4::P64 = P64[_sclYY::P64 + 6];
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = _sclYU::P64;
           P64[Hp] = _sclYV::P64;
           I64[Sp + 16] = block_ccm2Y_info;
           R3 = _sclZ4::P64;
           R2 = Hp - 15;
           R1 = _sclYU::P64;
           Sp = Sp + 16;
           call stg_mkWeak#(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccm2M() //  [R1]
         { info_tbl: [(ccm2M,
                       label: block_ccm2M_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm2M: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccm2U; else goto ccm2T;
       ccm2U: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccm2T: // global
           I64[Hp - 8] = GHC.Weak.Weak_con_info;
           P64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _ccm2Y() //  [R1]
         { info_tbl: [(ccm2Y,
                       label: block_ccm2Y_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm2Y: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccm36; else goto ccm35;
       ccm36: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccm35: // global
           I64[Hp - 8] = GHC.Weak.Weak_con_info;
           P64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.057211308 UTC

[section ""data" . System.Mem.Weak.mkWeakPair_closure" {
     System.Mem.Weak.mkWeakPair_closure:
         const System.Mem.Weak.mkWeakPair_info;
 },
 System.Mem.Weak.mkWeakPair_entry() //  [R2, R3, R4]
         { info_tbl: [(ccm3v,
                       label: System.Mem.Weak.mkWeakPair_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm3v: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call System.Mem.Weak.mkWeakPair1_entry(R4,
                                                  R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.060541878 UTC

[section ""cstring" . System.Mem.Weak.$trModule4_bytes" {
     System.Mem.Weak.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.06229005 UTC

[section ""data" . System.Mem.Weak.$trModule3_closure" {
     System.Mem.Weak.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Mem.Weak.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.06393948 UTC

[section ""cstring" . System.Mem.Weak.$trModule2_bytes" {
     System.Mem.Weak.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,77,101,109,46,87,101,97,107]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.065738368 UTC

[section ""data" . System.Mem.Weak.$trModule1_closure" {
     System.Mem.Weak.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Mem.Weak.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.067429489 UTC

[section ""data" . System.Mem.Weak.$trModule_closure" {
     System.Mem.Weak.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.Mem.Weak.$trModule3_closure+1;
         const System.Mem.Weak.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.069195917 UTC

[section ""relreadonly" . Scm0p_srt" { Scm0p_srt:
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.134821754 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:15.136357272 UTC

[section ""data" . System.Mem.Weak.mkWeakPtr1_closure" {
     System.Mem.Weak.mkWeakPtr1_closure:
         const System.Mem.Weak.mkWeakPtr1_info;
 },
 System.Mem.Weak.mkWeakPtr1_entry() //  [R2, R3]
         { info_tbl: [(ccm4a,
                       label: System.Mem.Weak.mkWeakPtr1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm4a: // global
           R4 = R3;
           R3 = R2;
           R2 = R2;
           call GHC.Weak.mkWeak1_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.140234349 UTC

[section ""data" . System.Mem.Weak.mkWeakPtr_closure" {
     System.Mem.Weak.mkWeakPtr_closure:
         const System.Mem.Weak.mkWeakPtr_info;
 },
 System.Mem.Weak.mkWeakPtr_entry() //  [R2, R3]
         { info_tbl: [(ccm4l,
                       label: System.Mem.Weak.mkWeakPtr_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm4l: // global
           R3 = R3;
           R2 = R2;
           call System.Mem.Weak.mkWeakPtr1_entry(R3,
                                                 R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.143955643 UTC

[section ""data" . System.Mem.Weak.addFinalizer1_closure" {
     System.Mem.Weak.addFinalizer1_closure:
         const System.Mem.Weak.addFinalizer1_info;
 },
 System.Mem.Weak.addFinalizer1_entry() //  [R2, R3]
         { info_tbl: [(ccm4y,
                       label: System.Mem.Weak.addFinalizer1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm4y: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccm4z; else goto ccm4A;
       ccm4z: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Mem.Weak.addFinalizer1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccm4A: // global
           I64[Sp - 8] = block_ccm4w_info;
           R3 = R3;
           _scm3K::P64 = R2;
           R2 = R2;
           R1 = _scm3K::P64;
           Sp = Sp - 8;
           call stg_mkWeak#(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccm4w() //  []
         { info_tbl: [(ccm4w,
                       label: block_ccm4w_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm4w: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.150080051 UTC

[section ""data" . System.Mem.Weak.addFinalizer_closure" {
     System.Mem.Weak.addFinalizer_closure:
         const System.Mem.Weak.addFinalizer_info;
 },
 System.Mem.Weak.addFinalizer_entry() //  [R2, R3]
         { info_tbl: [(ccm4R,
                       label: System.Mem.Weak.addFinalizer_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm4R: // global
           R3 = R3;
           R2 = R2;
           call System.Mem.Weak.addFinalizer1_entry(R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.15519732 UTC

[section ""data" . System.Mem.Weak.mkWeakPair1_closure" {
     System.Mem.Weak.mkWeakPair1_closure:
         const System.Mem.Weak.mkWeakPair1_info;
 },
 System.Mem.Weak.mkWeakPair1_entry() //  [R2, R3, R4]
         { info_tbl: [(ccm59,
                       label: System.Mem.Weak.mkWeakPair1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm59: // global
           if ((Sp + -24) < SpLim) (likely: False) goto ccm5a; else goto ccm5b;
       ccm5a: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = System.Mem.Weak.mkWeakPair1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       ccm5b: // global
           I64[Sp - 24] = block_ccm52_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto ucm5A; else goto ccm53;
       ucm5A: // global
           call _ccm52(R1) args: 0, res: 0, upd: 0;
       ccm53: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccm52() //  [R1]
         { info_tbl: [(ccm52,
                       label: block_ccm52_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm52: // global
           _scm3Q::P64 = P64[Sp + 8];
           _scm3R::P64 = P64[Sp + 16];
           if (R1 & 7 == 1) goto ccm56; else goto ccm57;
       ccm56: // global
           Hp = Hp + 24;
           _scm3U::P64 = R1;
           if (Hp > HpLim) (likely: False) goto ccm5w; else goto ccm5j;
       ccm5j: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = _scm3Q::P64;
           P64[Hp] = _scm3R::P64;
           I64[Sp + 16] = block_ccm5f_info;
           R2 = Hp - 15;
           R1 = _scm3Q::P64;
           Sp = Sp + 16;
           call stg_mkWeakNoFinalizer#(R2, R1) args: 8, res: 8, upd: 8;
       ccm57: // global
           Hp = Hp + 24;
           _scm3U::P64 = R1;
           if (Hp > HpLim) (likely: False) goto ccm5w; else goto ccm5v;
       ccm5w: // global
           HpAlloc = 24;
           R1 = _scm3U::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccm5v: // global
           _scm40::P64 = P64[_scm3U::P64 + 6];
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = _scm3Q::P64;
           P64[Hp] = _scm3R::P64;
           I64[Sp + 16] = block_ccm5r_info;
           R3 = _scm40::P64;
           R2 = Hp - 15;
           R1 = _scm3Q::P64;
           Sp = Sp + 16;
           call stg_mkWeak#(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccm5f() //  [R1]
         { info_tbl: [(ccm5f,
                       label: block_ccm5f_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm5f: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccm5n; else goto ccm5m;
       ccm5n: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccm5m: // global
           I64[Hp - 8] = GHC.Weak.Weak_con_info;
           P64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _ccm5r() //  [R1]
         { info_tbl: [(ccm5r,
                       label: block_ccm5r_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm5r: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccm5z; else goto ccm5y;
       ccm5z: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccm5y: // global
           I64[Hp - 8] = GHC.Weak.Weak_con_info;
           P64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.168190134 UTC

[section ""data" . System.Mem.Weak.mkWeakPair_closure" {
     System.Mem.Weak.mkWeakPair_closure:
         const System.Mem.Weak.mkWeakPair_info;
 },
 System.Mem.Weak.mkWeakPair_entry() //  [R2, R3, R4]
         { info_tbl: [(ccm65,
                       label: System.Mem.Weak.mkWeakPair_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccm65: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call System.Mem.Weak.mkWeakPair1_entry(R4,
                                                  R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.17213615 UTC

[section ""cstring" . System.Mem.Weak.$trModule4_bytes" {
     System.Mem.Weak.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.173869995 UTC

[section ""data" . System.Mem.Weak.$trModule3_closure" {
     System.Mem.Weak.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Mem.Weak.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.175692632 UTC

[section ""cstring" . System.Mem.Weak.$trModule2_bytes" {
     System.Mem.Weak.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,77,101,109,46,87,101,97,107]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.177412947 UTC

[section ""data" . System.Mem.Weak.$trModule1_closure" {
     System.Mem.Weak.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Mem.Weak.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.179185477 UTC

[section ""data" . System.Mem.Weak.$trModule_closure" {
     System.Mem.Weak.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.Mem.Weak.$trModule3_closure+1;
         const System.Mem.Weak.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.18097386 UTC

[section ""relreadonly" . Scm6h_srt" { Scm6h_srt:
 }]

