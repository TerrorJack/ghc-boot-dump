
==================== Output Cmm ====================
2018-03-16 16:04:58.001791515 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:04:58.003061854 UTC

[section ""data" . System.IO.Error.tryIOError2_closure" {
     System.IO.Error.tryIOError2_closure:
         const System.IO.Error.tryIOError2_info;
         const 0;
 },
 System.IO.Error.tryIOError2_entry() //  [R2]
         { info_tbl: [(c9SDL,
                       label: System.IO.Error.tryIOError2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SDL: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9SDP; else goto c9SDQ;
       c9SDP: // global
           R2 = R2;
           R1 = System.IO.Error.tryIOError2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SDQ: // global
           I64[Sp - 8] = block_c9SDI_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SEb; else goto c9SDJ;
       u9SEb: // global
           call _c9SDI(R1) args: 0, res: 0, upd: 0;
       c9SDJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SDI() //  [R1]
         { info_tbl: [(c9SDI,
                       label: block_c9SDI_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SDI: // global
           I64[Sp - 16] = block_c9SDO_info;
           R2 = P64[R1 + 7];
           P64[Sp - 8] = P64[R1 + 15];
           P64[Sp] = R1;
           Sp = Sp - 16;
           call GHC.Exception.$p1Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9SDO() //  [R1]
         { info_tbl: [(c9SDO,
                       label: block_c9SDO_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SDO: // global
           I64[Sp] = block_c9SDV_info;
           R3 = GHC.IO.Exception.$fExceptionIOException4_closure;
           R2 = R1;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9SDV() //  [R1]
         { info_tbl: [(c9SDV,
                       label: block_c9SDV_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SDV: // global
           if (R1 & 7 == 1) goto c9SE2; else goto c9SE6;
       c9SE2: // global
           R1 = P64[Sp + 16];
           Sp = Sp + 24;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
       c9SE6: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9SE9; else goto c9SE8;
       c9SE9: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9SE8: // global
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.004987778 UTC

[section ""data" . System.IO.Error.tryIOError1_closure" {
     System.IO.Error.tryIOError1_closure:
         const System.IO.Error.tryIOError1_info;
         const 0;
 },
 sat_s9SAw_entry() //  [R1]
         { info_tbl: [(c9SEp,
                       label: sat_s9SAw_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SEp: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SEq; else goto c9SEr;
       c9SEq: // global
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9SEr: // global
           I64[Sp - 8] = block_c9SEm_info;
           R1 = P64[R1 + 7];
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SEm() //  [R1]
         { info_tbl: [(c9SEm,
                       label: block_c9SEm_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SEm: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9SEu; else goto c9SEt;
       c9SEu: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9SEt: // global
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.IO.Error.tryIOError1_entry() //  [R2]
         { info_tbl: [(c9SEv,
                       label: System.IO.Error.tryIOError1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SEv: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9SEz; else goto c9SEy;
       c9SEz: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = System.IO.Error.tryIOError1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SEy: // global
           I64[Hp - 8] = sat_s9SAw_info;
           P64[Hp] = R2;
           R2 = System.IO.Error.tryIOError2_closure+2;
           R1 = Hp - 7;
           call stg_catch#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.006421243 UTC

[section ""data" . System.IO.Error.tryIOError_closure" {
     System.IO.Error.tryIOError_closure:
         const System.IO.Error.tryIOError_info;
         const 0;
 },
 System.IO.Error.tryIOError_entry() //  [R2]
         { info_tbl: [(c9SEE,
                       label: System.IO.Error.tryIOError_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SEE: // global
           R2 = R2;
           call System.IO.Error.tryIOError1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.007372219 UTC

[section ""data" . System.IO.Error.mkIOError_closure" {
     System.IO.Error.mkIOError_closure:
         const System.IO.Error.mkIOError_info;
 },
 System.IO.Error.mkIOError_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c9SEM,
                       label: System.IO.Error.mkIOError_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SEM: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9SEQ; else goto c9SEP;
       c9SEQ: // global
           HpAlloc = 56;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.mkIOError_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9SEP: // global
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = R4;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           P64[Hp - 16] = GHC.Types.[]_closure+1;
           P64[Hp - 8] = GHC.Base.Nothing_closure+1;
           P64[Hp] = R5;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.008270763 UTC

[section ""data" . System.IO.Error.alreadyExistsErrorType_closure" {
     System.IO.Error.alreadyExistsErrorType_closure:
         const GHC.IO.Exception.AlreadyExists_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.008830569 UTC

[section ""data" . System.IO.Error.doesNotExistErrorType_closure" {
     System.IO.Error.doesNotExistErrorType_closure:
         const GHC.IO.Exception.NoSuchThing_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.009488572 UTC

[section ""data" . System.IO.Error.alreadyInUseErrorType_closure" {
     System.IO.Error.alreadyInUseErrorType_closure:
         const GHC.IO.Exception.ResourceBusy_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.010014093 UTC

[section ""data" . System.IO.Error.fullErrorType_closure" {
     System.IO.Error.fullErrorType_closure:
         const GHC.IO.Exception.ResourceExhausted_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.010569719 UTC

[section ""data" . System.IO.Error.eofErrorType_closure" {
     System.IO.Error.eofErrorType_closure:
         const GHC.IO.Exception.EOF_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.011137287 UTC

[section ""data" . System.IO.Error.illegalOperationErrorType_closure" {
     System.IO.Error.illegalOperationErrorType_closure:
         const GHC.IO.Exception.IllegalOperation_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.011666267 UTC

[section ""data" . System.IO.Error.permissionErrorType_closure" {
     System.IO.Error.permissionErrorType_closure:
         const GHC.IO.Exception.PermissionDenied_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.012219602 UTC

[section ""data" . System.IO.Error.userErrorType_closure" {
     System.IO.Error.userErrorType_closure:
         const GHC.IO.Exception.UserError_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.013094592 UTC

[section ""data" . System.IO.Error.isAlreadyExistsErrorType_closure" {
     System.IO.Error.isAlreadyExistsErrorType_closure:
         const System.IO.Error.isAlreadyExistsErrorType_info;
 },
 System.IO.Error.isAlreadyExistsErrorType_entry() //  [R2]
         { info_tbl: [(c9SF2,
                       label: System.IO.Error.isAlreadyExistsErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SF2: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SF3; else goto c9SF4;
       c9SF3: // global
           R2 = R2;
           R1 = System.IO.Error.isAlreadyExistsErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SF4: // global
           I64[Sp - 8] = block_c9SEV_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SFb; else goto c9SEW;
       u9SFb: // global
           call _c9SEV(R1) args: 0, res: 0, upd: 0;
       c9SEW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SEV() //  [R1]
         { info_tbl: [(c9SEV,
                       label: block_c9SEV_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SEV: // global
           if (I32[I64[R1 - 1] + 20] == 0 :: W32) goto c9SF0; else goto c9SEZ;
       c9SF0: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SEZ: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.014455961 UTC

[section ""data" . System.IO.Error.isDoesNotExistErrorType_closure" {
     System.IO.Error.isDoesNotExistErrorType_closure:
         const System.IO.Error.isDoesNotExistErrorType_info;
 },
 System.IO.Error.isDoesNotExistErrorType_entry() //  [R2]
         { info_tbl: [(c9SFn,
                       label: System.IO.Error.isDoesNotExistErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SFn: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SFo; else goto c9SFp;
       c9SFo: // global
           R2 = R2;
           R1 = System.IO.Error.isDoesNotExistErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SFp: // global
           I64[Sp - 8] = block_c9SFg_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SFw; else goto c9SFh;
       u9SFw: // global
           call _c9SFg(R1) args: 0, res: 0, upd: 0;
       c9SFh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SFg() //  [R1]
         { info_tbl: [(c9SFg,
                       label: block_c9SFg_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SFg: // global
           if (I32[I64[R1 - 1] + 20] == 1 :: W32) goto c9SFl; else goto c9SFk;
       c9SFl: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SFk: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.015732256 UTC

[section ""data" . System.IO.Error.isAlreadyInUseErrorType_closure" {
     System.IO.Error.isAlreadyInUseErrorType_closure:
         const System.IO.Error.isAlreadyInUseErrorType_info;
 },
 System.IO.Error.isAlreadyInUseErrorType_entry() //  [R2]
         { info_tbl: [(c9SFI,
                       label: System.IO.Error.isAlreadyInUseErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SFI: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SFJ; else goto c9SFK;
       c9SFJ: // global
           R2 = R2;
           R1 = System.IO.Error.isAlreadyInUseErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SFK: // global
           I64[Sp - 8] = block_c9SFB_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SFR; else goto c9SFC;
       u9SFR: // global
           call _c9SFB(R1) args: 0, res: 0, upd: 0;
       c9SFC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SFB() //  [R1]
         { info_tbl: [(c9SFB,
                       label: block_c9SFB_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SFB: // global
           if (I32[I64[R1 - 1] + 20] == 2 :: W32) goto c9SFG; else goto c9SFF;
       c9SFG: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SFF: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.016969538 UTC

[section ""data" . System.IO.Error.isFullErrorType_closure" {
     System.IO.Error.isFullErrorType_closure:
         const System.IO.Error.isFullErrorType_info;
 },
 System.IO.Error.isFullErrorType_entry() //  [R2]
         { info_tbl: [(c9SG3,
                       label: System.IO.Error.isFullErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SG3: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SG4; else goto c9SG5;
       c9SG4: // global
           R2 = R2;
           R1 = System.IO.Error.isFullErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SG5: // global
           I64[Sp - 8] = block_c9SFW_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SGc; else goto c9SFX;
       u9SGc: // global
           call _c9SFW(R1) args: 0, res: 0, upd: 0;
       c9SFX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SFW() //  [R1]
         { info_tbl: [(c9SFW,
                       label: block_c9SFW_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SFW: // global
           if (I32[I64[R1 - 1] + 20] == 3 :: W32) goto c9SG1; else goto c9SG0;
       c9SG1: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SG0: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.018300893 UTC

[section ""data" . System.IO.Error.isEOFErrorType_closure" {
     System.IO.Error.isEOFErrorType_closure:
         const System.IO.Error.isEOFErrorType_info;
 },
 System.IO.Error.isEOFErrorType_entry() //  [R2]
         { info_tbl: [(c9SGo,
                       label: System.IO.Error.isEOFErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SGo: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SGp; else goto c9SGq;
       c9SGp: // global
           R2 = R2;
           R1 = System.IO.Error.isEOFErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SGq: // global
           I64[Sp - 8] = block_c9SGh_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SGx; else goto c9SGi;
       u9SGx: // global
           call _c9SGh(R1) args: 0, res: 0, upd: 0;
       c9SGi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SGh() //  [R1]
         { info_tbl: [(c9SGh,
                       label: block_c9SGh_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SGh: // global
           if (I32[I64[R1 - 1] + 20] == 4 :: W32) goto c9SGm; else goto c9SGl;
       c9SGm: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SGl: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.019576408 UTC

[section ""data" . System.IO.Error.isIllegalOperationErrorType_closure" {
     System.IO.Error.isIllegalOperationErrorType_closure:
         const System.IO.Error.isIllegalOperationErrorType_info;
 },
 System.IO.Error.isIllegalOperationErrorType_entry() //  [R2]
         { info_tbl: [(c9SGJ,
                       label: System.IO.Error.isIllegalOperationErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SGJ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SGK; else goto c9SGL;
       c9SGK: // global
           R2 = R2;
           R1 = System.IO.Error.isIllegalOperationErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SGL: // global
           I64[Sp - 8] = block_c9SGC_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SGS; else goto c9SGD;
       u9SGS: // global
           call _c9SGC(R1) args: 0, res: 0, upd: 0;
       c9SGD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SGC() //  [R1]
         { info_tbl: [(c9SGC,
                       label: block_c9SGC_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SGC: // global
           if (I32[I64[R1 - 1] + 20] == 5 :: W32) goto c9SGH; else goto c9SGG;
       c9SGH: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SGG: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.020827442 UTC

[section ""data" . System.IO.Error.isPermissionErrorType_closure" {
     System.IO.Error.isPermissionErrorType_closure:
         const System.IO.Error.isPermissionErrorType_info;
 },
 System.IO.Error.isPermissionErrorType_entry() //  [R2]
         { info_tbl: [(c9SH4,
                       label: System.IO.Error.isPermissionErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SH4: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SH5; else goto c9SH6;
       c9SH5: // global
           R2 = R2;
           R1 = System.IO.Error.isPermissionErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SH6: // global
           I64[Sp - 8] = block_c9SGX_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SHd; else goto c9SGY;
       u9SHd: // global
           call _c9SGX(R1) args: 0, res: 0, upd: 0;
       c9SGY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SGX() //  [R1]
         { info_tbl: [(c9SGX,
                       label: block_c9SGX_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SGX: // global
           if (I32[I64[R1 - 1] + 20] == 6 :: W32) goto c9SH2; else goto c9SH1;
       c9SH2: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SH1: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.022109929 UTC

[section ""data" . System.IO.Error.isUserErrorType_closure" {
     System.IO.Error.isUserErrorType_closure:
         const System.IO.Error.isUserErrorType_info;
 },
 System.IO.Error.isUserErrorType_entry() //  [R2]
         { info_tbl: [(c9SHp,
                       label: System.IO.Error.isUserErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SHp: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SHq; else goto c9SHr;
       c9SHq: // global
           R2 = R2;
           R1 = System.IO.Error.isUserErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SHr: // global
           I64[Sp - 8] = block_c9SHi_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SHy; else goto c9SHj;
       u9SHy: // global
           call _c9SHi(R1) args: 0, res: 0, upd: 0;
       c9SHj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SHi() //  [R1]
         { info_tbl: [(c9SHi,
                       label: block_c9SHi_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SHi: // global
           if (I32[I64[R1 - 1] + 20] == 7 :: W32) goto c9SHn; else goto c9SHm;
       c9SHn: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SHm: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.023241245 UTC

[section ""data" . System.IO.Error.ioeGetErrorType_closure" {
     System.IO.Error.ioeGetErrorType_closure:
         const System.IO.Error.ioeGetErrorType_info;
 },
 System.IO.Error.ioeGetErrorType_entry() //  [R2]
         { info_tbl: [(c9SHD,
                       label: System.IO.Error.ioeGetErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SHD: // global
           R2 = R2;
           call GHC.IO.Exception.ioe_type_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.024188826 UTC

[section ""data" . System.IO.Error.isUserError_closure" {
     System.IO.Error.isUserError_closure:
         const System.IO.Error.isUserError_info;
 },
 System.IO.Error.isUserError_entry() //  [R2]
         { info_tbl: [(c9SHN,
                       label: System.IO.Error.isUserError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SHN: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SHO; else goto c9SHP;
       c9SHO: // global
           R2 = R2;
           R1 = System.IO.Error.isUserError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SHP: // global
           I64[Sp - 8] = block_c9SHK_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SI7; else goto c9SHL;
       u9SI7: // global
           call _c9SHK(R1) args: 0, res: 0, upd: 0;
       c9SHL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SHK() //  [R1]
         { info_tbl: [(c9SHK,
                       label: block_c9SHK_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SHK: // global
           I64[Sp] = block_c9SHS_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9SI6; else goto c9SHU;
       u9SI6: // global
           call _c9SHS(R1) args: 0, res: 0, upd: 0;
       c9SHU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SHS() //  [R1]
         { info_tbl: [(c9SHS,
                       label: block_c9SHS_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SHS: // global
           if (I32[I64[R1 - 1] + 20] == 7 :: W32) goto c9SI4; else goto c9SI0;
       c9SI4: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SI0: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.025724305 UTC

[section ""data" . System.IO.Error.isPermissionError_closure" {
     System.IO.Error.isPermissionError_closure:
         const System.IO.Error.isPermissionError_info;
 },
 System.IO.Error.isPermissionError_entry() //  [R2]
         { info_tbl: [(c9SIf,
                       label: System.IO.Error.isPermissionError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SIf: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SIg; else goto c9SIh;
       c9SIg: // global
           R2 = R2;
           R1 = System.IO.Error.isPermissionError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SIh: // global
           I64[Sp - 8] = block_c9SIc_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SIz; else goto c9SId;
       u9SIz: // global
           call _c9SIc(R1) args: 0, res: 0, upd: 0;
       c9SId: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SIc() //  [R1]
         { info_tbl: [(c9SIc,
                       label: block_c9SIc_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SIc: // global
           I64[Sp] = block_c9SIk_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9SIy; else goto c9SIm;
       u9SIy: // global
           call _c9SIk(R1) args: 0, res: 0, upd: 0;
       c9SIm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SIk() //  [R1]
         { info_tbl: [(c9SIk,
                       label: block_c9SIk_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SIk: // global
           if (I32[I64[R1 - 1] + 20] == 6 :: W32) goto c9SIw; else goto c9SIs;
       c9SIw: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SIs: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.027248397 UTC

[section ""data" . System.IO.Error.isIllegalOperation_closure" {
     System.IO.Error.isIllegalOperation_closure:
         const System.IO.Error.isIllegalOperation_info;
 },
 System.IO.Error.isIllegalOperation_entry() //  [R2]
         { info_tbl: [(c9SIH,
                       label: System.IO.Error.isIllegalOperation_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SIH: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SII; else goto c9SIJ;
       c9SII: // global
           R2 = R2;
           R1 = System.IO.Error.isIllegalOperation_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SIJ: // global
           I64[Sp - 8] = block_c9SIE_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SJ1; else goto c9SIF;
       u9SJ1: // global
           call _c9SIE(R1) args: 0, res: 0, upd: 0;
       c9SIF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SIE() //  [R1]
         { info_tbl: [(c9SIE,
                       label: block_c9SIE_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SIE: // global
           I64[Sp] = block_c9SIM_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9SJ0; else goto c9SIO;
       u9SJ0: // global
           call _c9SIM(R1) args: 0, res: 0, upd: 0;
       c9SIO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SIM() //  [R1]
         { info_tbl: [(c9SIM,
                       label: block_c9SIM_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SIM: // global
           if (I32[I64[R1 - 1] + 20] == 5 :: W32) goto c9SIY; else goto c9SIU;
       c9SIY: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SIU: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.028810479 UTC

[section ""data" . System.IO.Error.isEOFError_closure" {
     System.IO.Error.isEOFError_closure:
         const System.IO.Error.isEOFError_info;
 },
 System.IO.Error.isEOFError_entry() //  [R2]
         { info_tbl: [(c9SJ9,
                       label: System.IO.Error.isEOFError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SJ9: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SJa; else goto c9SJb;
       c9SJa: // global
           R2 = R2;
           R1 = System.IO.Error.isEOFError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SJb: // global
           I64[Sp - 8] = block_c9SJ6_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SJt; else goto c9SJ7;
       u9SJt: // global
           call _c9SJ6(R1) args: 0, res: 0, upd: 0;
       c9SJ7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SJ6() //  [R1]
         { info_tbl: [(c9SJ6,
                       label: block_c9SJ6_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SJ6: // global
           I64[Sp] = block_c9SJe_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9SJs; else goto c9SJg;
       u9SJs: // global
           call _c9SJe(R1) args: 0, res: 0, upd: 0;
       c9SJg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SJe() //  [R1]
         { info_tbl: [(c9SJe,
                       label: block_c9SJe_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SJe: // global
           if (I32[I64[R1 - 1] + 20] == 4 :: W32) goto c9SJq; else goto c9SJm;
       c9SJq: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SJm: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.030740136 UTC

[section ""data" . System.IO.Error.isFullError_closure" {
     System.IO.Error.isFullError_closure:
         const System.IO.Error.isFullError_info;
 },
 System.IO.Error.isFullError_entry() //  [R2]
         { info_tbl: [(c9SJB,
                       label: System.IO.Error.isFullError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SJB: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SJC; else goto c9SJD;
       c9SJC: // global
           R2 = R2;
           R1 = System.IO.Error.isFullError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SJD: // global
           I64[Sp - 8] = block_c9SJy_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SJV; else goto c9SJz;
       u9SJV: // global
           call _c9SJy(R1) args: 0, res: 0, upd: 0;
       c9SJz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SJy() //  [R1]
         { info_tbl: [(c9SJy,
                       label: block_c9SJy_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SJy: // global
           I64[Sp] = block_c9SJG_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9SJU; else goto c9SJI;
       u9SJU: // global
           call _c9SJG(R1) args: 0, res: 0, upd: 0;
       c9SJI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SJG() //  [R1]
         { info_tbl: [(c9SJG,
                       label: block_c9SJG_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SJG: // global
           if (I32[I64[R1 - 1] + 20] == 3 :: W32) goto c9SJS; else goto c9SJO;
       c9SJS: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SJO: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.032258755 UTC

[section ""data" . System.IO.Error.isAlreadyInUseError_closure" {
     System.IO.Error.isAlreadyInUseError_closure:
         const System.IO.Error.isAlreadyInUseError_info;
 },
 System.IO.Error.isAlreadyInUseError_entry() //  [R2]
         { info_tbl: [(c9SK3,
                       label: System.IO.Error.isAlreadyInUseError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SK3: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SK4; else goto c9SK5;
       c9SK4: // global
           R2 = R2;
           R1 = System.IO.Error.isAlreadyInUseError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SK5: // global
           I64[Sp - 8] = block_c9SK0_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SKn; else goto c9SK1;
       u9SKn: // global
           call _c9SK0(R1) args: 0, res: 0, upd: 0;
       c9SK1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SK0() //  [R1]
         { info_tbl: [(c9SK0,
                       label: block_c9SK0_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SK0: // global
           I64[Sp] = block_c9SK8_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9SKm; else goto c9SKa;
       u9SKm: // global
           call _c9SK8(R1) args: 0, res: 0, upd: 0;
       c9SKa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SK8() //  [R1]
         { info_tbl: [(c9SK8,
                       label: block_c9SK8_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SK8: // global
           if (I32[I64[R1 - 1] + 20] == 2 :: W32) goto c9SKk; else goto c9SKg;
       c9SKk: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SKg: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.033744169 UTC

[section ""data" . System.IO.Error.isDoesNotExistError_closure" {
     System.IO.Error.isDoesNotExistError_closure:
         const System.IO.Error.isDoesNotExistError_info;
 },
 System.IO.Error.isDoesNotExistError_entry() //  [R2]
         { info_tbl: [(c9SKv,
                       label: System.IO.Error.isDoesNotExistError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SKv: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SKw; else goto c9SKx;
       c9SKw: // global
           R2 = R2;
           R1 = System.IO.Error.isDoesNotExistError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SKx: // global
           I64[Sp - 8] = block_c9SKs_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SKP; else goto c9SKt;
       u9SKP: // global
           call _c9SKs(R1) args: 0, res: 0, upd: 0;
       c9SKt: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SKs() //  [R1]
         { info_tbl: [(c9SKs,
                       label: block_c9SKs_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SKs: // global
           I64[Sp] = block_c9SKA_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9SKO; else goto c9SKC;
       u9SKO: // global
           call _c9SKA(R1) args: 0, res: 0, upd: 0;
       c9SKC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SKA() //  [R1]
         { info_tbl: [(c9SKA,
                       label: block_c9SKA_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SKA: // global
           if (I32[I64[R1 - 1] + 20] == 1 :: W32) goto c9SKM; else goto c9SKI;
       c9SKM: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SKI: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.035294752 UTC

[section ""data" . System.IO.Error.isAlreadyExistsError_closure" {
     System.IO.Error.isAlreadyExistsError_closure:
         const System.IO.Error.isAlreadyExistsError_info;
 },
 System.IO.Error.isAlreadyExistsError_entry() //  [R2]
         { info_tbl: [(c9SKX,
                       label: System.IO.Error.isAlreadyExistsError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SKX: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SKY; else goto c9SKZ;
       c9SKY: // global
           R2 = R2;
           R1 = System.IO.Error.isAlreadyExistsError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SKZ: // global
           I64[Sp - 8] = block_c9SKU_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SLh; else goto c9SKV;
       u9SLh: // global
           call _c9SKU(R1) args: 0, res: 0, upd: 0;
       c9SKV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SKU() //  [R1]
         { info_tbl: [(c9SKU,
                       label: block_c9SKU_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SKU: // global
           I64[Sp] = block_c9SL2_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9SLg; else goto c9SL4;
       u9SLg: // global
           call _c9SL2(R1) args: 0, res: 0, upd: 0;
       c9SL4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SL2() //  [R1]
         { info_tbl: [(c9SL2,
                       label: block_c9SL2_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SL2: // global
           if (I32[I64[R1 - 1] + 20] == 0 :: W32) goto c9SLe; else goto c9SLa;
       c9SLe: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SLa: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.036616857 UTC

[section ""data" . System.IO.Error.ioeGetLocation_closure" {
     System.IO.Error.ioeGetLocation_closure:
         const System.IO.Error.ioeGetLocation_info;
 },
 System.IO.Error.ioeGetLocation_entry() //  [R2]
         { info_tbl: [(c9SLm,
                       label: System.IO.Error.ioeGetLocation_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SLm: // global
           R2 = R2;
           call GHC.IO.Exception.ioe_location_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.037517861 UTC

[section ""data" . System.IO.Error.ioeGetHandle_closure" {
     System.IO.Error.ioeGetHandle_closure:
         const System.IO.Error.ioeGetHandle_info;
 },
 System.IO.Error.ioeGetHandle_entry() //  [R2]
         { info_tbl: [(c9SLt,
                       label: System.IO.Error.ioeGetHandle_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SLt: // global
           R2 = R2;
           call GHC.IO.Exception.ioe_handle_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.038362926 UTC

[section ""data" . System.IO.Error.ioeGetFileName_closure" {
     System.IO.Error.ioeGetFileName_closure:
         const System.IO.Error.ioeGetFileName_info;
 },
 System.IO.Error.ioeGetFileName_entry() //  [R2]
         { info_tbl: [(c9SLA,
                       label: System.IO.Error.ioeGetFileName_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SLA: // global
           R2 = R2;
           call GHC.IO.Exception.ioe_filename_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.039457397 UTC

[section ""data" . System.IO.Error.ioeSetErrorType_closure" {
     System.IO.Error.ioeSetErrorType_closure:
         const System.IO.Error.ioeSetErrorType_info;
 },
 System.IO.Error.ioeSetErrorType_entry() //  [R2, R3]
         { info_tbl: [(c9SLK,
                       label: System.IO.Error.ioeSetErrorType_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SLK: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9SLO; else goto c9SLP;
       c9SLO: // global
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.ioeSetErrorType_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9SLP: // global
           I64[Sp - 16] = block_c9SLH_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9SLT; else goto c9SLI;
       u9SLT: // global
           call _c9SLH(R1) args: 0, res: 0, upd: 0;
       c9SLI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SLH() //  [R1]
         { info_tbl: [(c9SLH,
                       label: block_c9SLH_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SLH: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9SLS; else goto c9SLR;
       c9SLS: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9SLR: // global
           _s9SC4::P64 = P64[R1 + 7];
           _s9SC6::P64 = P64[R1 + 23];
           _s9SC7::P64 = P64[R1 + 31];
           _s9SC8::P64 = P64[R1 + 39];
           _s9SC9::P64 = P64[R1 + 47];
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = _s9SC4::P64;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s9SC6::P64;
           P64[Hp - 16] = _s9SC7::P64;
           P64[Hp - 8] = _s9SC8::P64;
           P64[Hp] = _s9SC9::P64;
           R1 = Hp - 47;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.041032282 UTC

[section ""data" . System.IO.Error.ioeSetErrorString_closure" {
     System.IO.Error.ioeSetErrorString_closure:
         const System.IO.Error.ioeSetErrorString_info;
 },
 System.IO.Error.ioeSetErrorString_entry() //  [R2, R3]
         { info_tbl: [(c9SM1,
                       label: System.IO.Error.ioeSetErrorString_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SM1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9SM5; else goto c9SM6;
       c9SM5: // global
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.ioeSetErrorString_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9SM6: // global
           I64[Sp - 16] = block_c9SLY_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9SMa; else goto c9SLZ;
       u9SMa: // global
           call _c9SLY(R1) args: 0, res: 0, upd: 0;
       c9SLZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SLY() //  [R1]
         { info_tbl: [(c9SLY,
                       label: block_c9SLY_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SLY: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9SM9; else goto c9SM8;
       c9SM9: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9SM8: // global
           _s9SCd::P64 = P64[R1 + 7];
           _s9SCe::P64 = P64[R1 + 15];
           _s9SCf::P64 = P64[R1 + 23];
           _s9SCh::P64 = P64[R1 + 39];
           _s9SCi::P64 = P64[R1 + 47];
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = _s9SCd::P64;
           P64[Hp - 32] = _s9SCe::P64;
           P64[Hp - 24] = _s9SCf::P64;
           P64[Hp - 16] = P64[Sp + 8];
           P64[Hp - 8] = _s9SCh::P64;
           P64[Hp] = _s9SCi::P64;
           R1 = Hp - 47;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.044225713 UTC

[section ""data" . System.IO.Error.ioeSetLocation_closure" {
     System.IO.Error.ioeSetLocation_closure:
         const System.IO.Error.ioeSetLocation_info;
 },
 System.IO.Error.ioeSetLocation_entry() //  [R2, R3]
         { info_tbl: [(c9SMi,
                       label: System.IO.Error.ioeSetLocation_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SMi: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9SMm; else goto c9SMn;
       c9SMm: // global
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.ioeSetLocation_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9SMn: // global
           I64[Sp - 16] = block_c9SMf_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9SMr; else goto c9SMg;
       u9SMr: // global
           call _c9SMf(R1) args: 0, res: 0, upd: 0;
       c9SMg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SMf() //  [R1]
         { info_tbl: [(c9SMf,
                       label: block_c9SMf_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SMf: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9SMq; else goto c9SMp;
       c9SMq: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9SMp: // global
           _s9SCm::P64 = P64[R1 + 7];
           _s9SCn::P64 = P64[R1 + 15];
           _s9SCp::P64 = P64[R1 + 31];
           _s9SCq::P64 = P64[R1 + 39];
           _s9SCr::P64 = P64[R1 + 47];
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = _s9SCm::P64;
           P64[Hp - 32] = _s9SCn::P64;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _s9SCp::P64;
           P64[Hp - 8] = _s9SCq::P64;
           P64[Hp] = _s9SCr::P64;
           R1 = Hp - 47;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.045728375 UTC

[section ""data" . System.IO.Error.ioeSetHandle_closure" {
     System.IO.Error.ioeSetHandle_closure:
         const System.IO.Error.ioeSetHandle_info;
 },
 System.IO.Error.ioeSetHandle_entry() //  [R2, R3]
         { info_tbl: [(c9SMz,
                       label: System.IO.Error.ioeSetHandle_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SMz: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9SME; else goto c9SMF;
       c9SME: // global
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.ioeSetHandle_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9SMF: // global
           I64[Sp - 16] = block_c9SMw_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9SMJ; else goto c9SMx;
       u9SMJ: // global
           call _c9SMw(R1) args: 0, res: 0, upd: 0;
       c9SMx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SMw() //  [R1]
         { info_tbl: [(c9SMw,
                       label: block_c9SMw_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SMw: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c9SMI; else goto c9SMH;
       c9SMI: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9SMH: // global
           _s9SCw::P64 = P64[R1 + 15];
           _s9SCx::P64 = P64[R1 + 23];
           _s9SCy::P64 = P64[R1 + 31];
           _s9SCz::P64 = P64[R1 + 39];
           _s9SCA::P64 = P64[R1 + 47];
           I64[Hp - 64] = GHC.Base.Just_con_info;
           P64[Hp - 56] = P64[Sp + 8];
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = Hp - 62;
           P64[Hp - 32] = _s9SCw::P64;
           P64[Hp - 24] = _s9SCx::P64;
           P64[Hp - 16] = _s9SCy::P64;
           P64[Hp - 8] = _s9SCz::P64;
           P64[Hp] = _s9SCA::P64;
           R1 = Hp - 47;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.047240015 UTC

[section ""data" . System.IO.Error.ioeSetFileName_closure" {
     System.IO.Error.ioeSetFileName_closure:
         const System.IO.Error.ioeSetFileName_info;
 },
 System.IO.Error.ioeSetFileName_entry() //  [R2, R3]
         { info_tbl: [(c9SMR,
                       label: System.IO.Error.ioeSetFileName_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SMR: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9SMW; else goto c9SMX;
       c9SMW: // global
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.ioeSetFileName_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9SMX: // global
           I64[Sp - 16] = block_c9SMO_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9SN1; else goto c9SMP;
       u9SN1: // global
           call _c9SMO(R1) args: 0, res: 0, upd: 0;
       c9SMP: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SMO() //  [R1]
         { info_tbl: [(c9SMO,
                       label: block_c9SMO_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SMO: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c9SN0; else goto c9SMZ;
       c9SN0: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9SMZ: // global
           _s9SCF::P64 = P64[R1 + 7];
           _s9SCG::P64 = P64[R1 + 15];
           _s9SCH::P64 = P64[R1 + 23];
           _s9SCI::P64 = P64[R1 + 31];
           _s9SCJ::P64 = P64[R1 + 39];
           I64[Hp - 64] = GHC.Base.Just_con_info;
           P64[Hp - 56] = P64[Sp + 8];
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = _s9SCF::P64;
           P64[Hp - 32] = _s9SCG::P64;
           P64[Hp - 24] = _s9SCH::P64;
           P64[Hp - 16] = _s9SCI::P64;
           P64[Hp - 8] = _s9SCJ::P64;
           P64[Hp] = Hp - 62;
           R1 = Hp - 47;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.048764609 UTC

[section ""data" . System.IO.Error.modifyIOError2_closure" {
     System.IO.Error.modifyIOError2_closure:
         const System.IO.Error.modifyIOError2_info;
         const 0;
 },
 sat_s9SCQ_entry() //  [R1]
         { info_tbl: [(c9SNb,
                       label: sat_s9SCQ_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SNb: // global
           _s9SCQ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9SNc; else goto c9SNd;
       c9SNd: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9SNf; else goto c9SNe;
       c9SNf: // global
           HpAlloc = 32;
           goto c9SNc;
       c9SNc: // global
           R1 = _s9SCQ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9SNe: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9SCQ::P64;
           _s9SCM::P64 = P64[_s9SCQ::P64 + 16];
           _s9SCN::P64 = P64[_s9SCQ::P64 + 24];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _s9SCN::P64;
           P64[Hp] = _s9SCM::P64;
           R2 = Hp - 24;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 System.IO.Error.modifyIOError2_entry() //  [R2, R3]
         { info_tbl: [(c9SNg,
                       label: System.IO.Error.modifyIOError2_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SNg: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9SNk; else goto c9SNj;
       c9SNk: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.modifyIOError2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9SNj: // global
           I64[Hp - 24] = sat_s9SCQ_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 24;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.050739437 UTC

[section ""data" . System.IO.Error.modifyIOError1_closure" {
     System.IO.Error.modifyIOError1_closure:
         const System.IO.Error.modifyIOError1_info;
         const 0;
 },
 sat_s9SD0_entry() //  [R1]
         { info_tbl: [(c9SNM,
                       label: sat_s9SD0_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SNM: // global
           R1 = P64[R1 + 7];
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9SD2_entry() //  [R1, R2]
         { info_tbl: [(c9SNP,
                       label: sat_s9SD2_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SNP: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9SNQ; else goto c9SNR;
       c9SNQ: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SNR: // global
           I64[Sp - 16] = block_c9SNu_info;
           _s9SCR::P64 = P64[R1 + 7];
           R1 = R2;
           P64[Sp - 8] = _s9SCR::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9SO4; else goto c9SNv;
       u9SO4: // global
           call _c9SNu(R1) args: 0, res: 0, upd: 0;
       c9SNv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SNu() //  [R1]
         { info_tbl: [(c9SNu,
                       label: block_c9SNu_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SNu: // global
           I64[Sp - 16] = block_c9SNz_info;
           R2 = P64[R1 + 7];
           P64[Sp - 8] = P64[R1 + 15];
           P64[Sp] = R1;
           Sp = Sp - 16;
           call GHC.Exception.$p1Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9SNz() //  [R1]
         { info_tbl: [(c9SNz,
                       label: block_c9SNz_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SNz: // global
           I64[Sp] = block_c9SND_info;
           R3 = GHC.IO.Exception.$fExceptionIOException4_closure;
           R2 = R1;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9SND() //  [R1]
         { info_tbl: [(c9SND,
                       label: block_c9SND_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SND: // global
           if (R1 & 7 == 1) goto c9SNV; else goto c9SO2;
       c9SNV: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9SNY; else goto c9SNX;
       c9SNY: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9SNX: // global
           I64[Hp - 8] = sat_s9SD0_info;
           P64[Hp] = P64[Sp + 16];
           R1 = Hp - 7;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SO2: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 8];
           R1 = System.IO.Error.modifyIOError2_closure+3;
           Sp = Sp + 32;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 System.IO.Error.modifyIOError1_entry() //  [R2, R3]
         { info_tbl: [(c9SO5,
                       label: System.IO.Error.modifyIOError1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SO5: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9SO9; else goto c9SO8;
       c9SO9: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.modifyIOError1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9SO8: // global
           I64[Hp - 8] = sat_s9SD2_info;
           P64[Hp] = R2;
           R2 = Hp - 7;
           R1 = R3;
           call stg_catch#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.052715268 UTC

[section ""data" . System.IO.Error.modifyIOError_closure" {
     System.IO.Error.modifyIOError_closure:
         const System.IO.Error.modifyIOError_info;
         const 0;
 },
 System.IO.Error.modifyIOError_entry() //  [R2, R3]
         { info_tbl: [(c9SOe,
                       label: System.IO.Error.modifyIOError_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SOe: // global
           R3 = R3;
           R2 = R2;
           call System.IO.Error.modifyIOError1_entry(R3,
                                                     R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.0543867 UTC

[section ""data" . System.IO.Error.catchIOError1_closure" {
     System.IO.Error.catchIOError1_closure:
         const System.IO.Error.catchIOError1_info;
         const 0;
 },
 sat_s9SDc_entry() //  [R1]
         { info_tbl: [(c9SOI,
                       label: sat_s9SDc_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SOI: // global
           R1 = P64[R1 + 7];
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9SDd_entry() //  [R1, R2]
         { info_tbl: [(c9SOL,
                       label: sat_s9SDd_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SOL: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9SOM; else goto c9SON;
       c9SOM: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SON: // global
           I64[Sp - 16] = block_c9SOq_info;
           _s9SD4::P64 = P64[R1 + 7];
           R1 = R2;
           P64[Sp - 8] = _s9SD4::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9SP0; else goto c9SOr;
       u9SP0: // global
           call _c9SOq(R1) args: 0, res: 0, upd: 0;
       c9SOr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SOq() //  [R1]
         { info_tbl: [(c9SOq,
                       label: block_c9SOq_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SOq: // global
           I64[Sp - 16] = block_c9SOv_info;
           R2 = P64[R1 + 7];
           P64[Sp - 8] = P64[R1 + 15];
           P64[Sp] = R1;
           Sp = Sp - 16;
           call GHC.Exception.$p1Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9SOv() //  [R1]
         { info_tbl: [(c9SOv,
                       label: block_c9SOv_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SOv: // global
           I64[Sp] = block_c9SOz_info;
           R3 = GHC.IO.Exception.$fExceptionIOException4_closure;
           R2 = R1;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9SOz() //  [R1]
         { info_tbl: [(c9SOz,
                       label: block_c9SOz_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SOz: // global
           if (R1 & 7 == 1) goto c9SOR; else goto c9SOY;
       c9SOR: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9SOU; else goto c9SOT;
       c9SOU: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9SOT: // global
           I64[Hp - 8] = sat_s9SDc_info;
           P64[Hp] = P64[Sp + 16];
           R1 = Hp - 7;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SOY: // global
           R2 = P64[Sp + 8];
           R1 = P64[Sp + 24];
           Sp = Sp + 32;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 System.IO.Error.catchIOError1_entry() //  [R2, R3]
         { info_tbl: [(c9SP1,
                       label: System.IO.Error.catchIOError1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SP1: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9SP5; else goto c9SP4;
       c9SP5: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.catchIOError1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9SP4: // global
           I64[Hp - 8] = sat_s9SDd_info;
           P64[Hp] = R3;
           _s9SD3::P64 = R2;
           R2 = Hp - 7;
           R1 = _s9SD3::P64;
           call stg_catch#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.05630761 UTC

[section ""data" . System.IO.Error.catchIOError_closure" {
     System.IO.Error.catchIOError_closure:
         const System.IO.Error.catchIOError_info;
         const 0;
 },
 System.IO.Error.catchIOError_entry() //  [R2, R3]
         { info_tbl: [(c9SPa,
                       label: System.IO.Error.catchIOError_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SPa: // global
           R3 = R3;
           R2 = R2;
           call System.IO.Error.catchIOError1_entry(R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.057034864 UTC

[section ""cstring" . System.IO.Error.$trModule4_bytes" {
     System.IO.Error.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.057641403 UTC

[section ""data" . System.IO.Error.$trModule3_closure" {
     System.IO.Error.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.IO.Error.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.058206461 UTC

[section ""cstring" . System.IO.Error.$trModule2_bytes" {
     System.IO.Error.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,73,79,46,69,114,114,111,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.058740505 UTC

[section ""data" . System.IO.Error.$trModule1_closure" {
     System.IO.Error.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.IO.Error.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.05929543 UTC

[section ""data" . System.IO.Error.$trModule_closure" {
     System.IO.Error.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.IO.Error.$trModule3_closure+1;
         const System.IO.Error.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.060165011 UTC

[section ""data" . System.IO.Error.ioeGetErrorString_closure" {
     System.IO.Error.ioeGetErrorString_closure:
         const System.IO.Error.ioeGetErrorString_info;
         const 0;
 },
 System.IO.Error.ioeGetErrorString_entry() //  [R2]
         { info_tbl: [(c9SPk,
                       label: System.IO.Error.ioeGetErrorString_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SPk: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9SPl; else goto c9SPm;
       c9SPl: // global
           R2 = R2;
           R1 = System.IO.Error.ioeGetErrorString_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SPm: // global
           I64[Sp - 8] = block_c9SPh_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SPE; else goto c9SPi;
       u9SPE: // global
           call _c9SPh(R1) args: 0, res: 0, upd: 0;
       c9SPi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SPh() //  [R1]
         { info_tbl: [(c9SPh,
                       label: block_c9SPh_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SPh: // global
           I64[Sp - 8] = block_c9SPp_info;
           _s9SDj::P64 = P64[R1 + 31];
           R1 = P64[R1 + 15];
           P64[Sp] = _s9SDj::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SPD; else goto c9SPr;
       u9SPD: // global
           call _c9SPp(R1) args: 0, res: 0, upd: 0;
       c9SPr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SPp() //  [R1]
         { info_tbl: [(c9SPp,
                       label: block_c9SPp_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SPp: // global
           if (I32[I64[R1 - 1] + 20] == 7 :: W32) goto c9SPB; else goto c9SPx;
       c9SPB: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9SPx: // global
           R3 = GHC.Types.[]_closure+1;
           R2 = R1;
           Sp = Sp + 16;
           call GHC.IO.Exception.$w$cshowsPrec4_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.0623971 UTC

[section ""data" . System.IO.Error.annotateIOError_closure" {
     System.IO.Error.annotateIOError_closure:
         const System.IO.Error.annotateIOError_info;
 },
 sat_s9SDD_entry() //  [R1]
         { info_tbl: [(c9SPZ,
                       label: sat_s9SDD_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SPZ: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9SQ0; else goto c9SQ1;
       c9SQ0: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9SQ1: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c9SPS_info;
           _s9SDx::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s9SDx::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9SQ8; else goto c9SPT;
       u9SQ8: // global
           call _c9SPS(R1) args: 0, res: 0, upd: 0;
       c9SPT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9SPS() //  [R1]
         { info_tbl: [(c9SPS,
                       label: block_c9SPS_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SPS: // global
           if (R1 & 7 == 1) goto c9SPW; else goto c9SPX;
       c9SPW: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
       c9SPX: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9SDA_entry() //  [R1]
         { info_tbl: [(c9SQk,
                       label: sat_s9SDA_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SQk: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9SQl; else goto c9SQm;
       c9SQl: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9SQm: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c9SQd_info;
           _s9SDs::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s9SDs::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9SQt; else goto c9SQe;
       u9SQt: // global
           call _c9SQd(R1) args: 0, res: 0, upd: 0;
       c9SQe: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9SQd() //  [R1]
         { info_tbl: [(c9SQd,
                       label: block_c9SQd_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SQd: // global
           if (R1 & 7 == 1) goto c9SQh; else goto c9SQi;
       c9SQh: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
       c9SQi: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 System.IO.Error.annotateIOError_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c9SQu,
                       label: System.IO.Error.annotateIOError_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SQu: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9SQw; else goto c9SQx;
       c9SQw: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.annotateIOError_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9SQx: // global
           I64[Sp - 32] = block_c9SPJ_info;
           R1 = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9SQB; else goto c9SPK;
       u9SQB: // global
           call _c9SPJ(R1) args: 0, res: 0, upd: 0;
       c9SPK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SPJ() //  [R1]
         { info_tbl: [(c9SPJ,
                       label: block_c9SPJ_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SPJ: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto c9SQA; else goto c9SQz;
       c9SQA: // global
           HpAlloc = 120;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9SQz: // global
           _s9SDs::P64 = P64[R1 + 7];
           _s9SDt::P64 = P64[R1 + 15];
           _s9SDv::P64 = P64[R1 + 31];
           _s9SDw::P64 = P64[R1 + 39];
           _s9SDx::P64 = P64[R1 + 47];
           I64[Hp - 112] = sat_s9SDD_info;
           P64[Hp - 96] = P64[Sp + 24];
           P64[Hp - 88] = _s9SDx::P64;
           I64[Hp - 80] = sat_s9SDA_info;
           P64[Hp - 64] = P64[Sp + 16];
           P64[Hp - 56] = _s9SDs::P64;
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = Hp - 80;
           P64[Hp - 32] = _s9SDt::P64;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _s9SDv::P64;
           P64[Hp - 8] = _s9SDw::P64;
           P64[Hp] = Hp - 112;
           R1 = Hp - 47;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.064619965 UTC

[section ""relreadonly" . S9SEc_srt" {
     S9SEc_srt:
         const Data.Typeable.Internal.sameTypeRep_closure;
         const GHC.IO.Exception.$fExceptionIOException4_closure;
         const System.IO.Error.tryIOError2_closure;
         const System.IO.Error.tryIOError1_closure;
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const System.IO.Error.modifyIOError2_closure;
         const System.IO.Error.modifyIOError1_closure;
         const System.IO.Error.catchIOError1_closure;
         const GHC.IO.Exception.$w$cshowsPrec4_closure;
         const System.IO.Error.ioeGetErrorString_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.065185827 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:04:58.066202707 UTC

[section ""data" . System.IO.Error.tryIOError2_closure" {
     System.IO.Error.tryIOError2_closure:
         const System.IO.Error.tryIOError2_info;
         const 0;
 },
 System.IO.Error.tryIOError2_entry() //  [R2]
         { info_tbl: [(c9SQJ,
                       label: System.IO.Error.tryIOError2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SQJ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9SQN; else goto c9SQO;
       c9SQN: // global
           R2 = R2;
           R1 = System.IO.Error.tryIOError2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SQO: // global
           I64[Sp - 8] = block_c9SQG_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SR9; else goto c9SQH;
       u9SR9: // global
           call _c9SQG(R1) args: 0, res: 0, upd: 0;
       c9SQH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SQG() //  [R1]
         { info_tbl: [(c9SQG,
                       label: block_c9SQG_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SQG: // global
           I64[Sp - 16] = block_c9SQM_info;
           R2 = P64[R1 + 7];
           P64[Sp - 8] = P64[R1 + 15];
           P64[Sp] = R1;
           Sp = Sp - 16;
           call GHC.Exception.$p1Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9SQM() //  [R1]
         { info_tbl: [(c9SQM,
                       label: block_c9SQM_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SQM: // global
           I64[Sp] = block_c9SQT_info;
           R3 = GHC.IO.Exception.$fExceptionIOException4_closure;
           R2 = R1;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9SQT() //  [R1]
         { info_tbl: [(c9SQT,
                       label: block_c9SQT_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SQT: // global
           if (R1 & 7 == 1) goto c9SR0; else goto c9SR4;
       c9SR0: // global
           R1 = P64[Sp + 16];
           Sp = Sp + 24;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
       c9SR4: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9SR7; else goto c9SR6;
       c9SR7: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9SR6: // global
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.06800111 UTC

[section ""data" . System.IO.Error.tryIOError1_closure" {
     System.IO.Error.tryIOError1_closure:
         const System.IO.Error.tryIOError1_info;
         const 0;
 },
 sat_s9SAw_entry() //  [R1]
         { info_tbl: [(c9SRm,
                       label: sat_s9SAw_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SRm: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SRn; else goto c9SRo;
       c9SRn: // global
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9SRo: // global
           I64[Sp - 8] = block_c9SRj_info;
           R1 = P64[R1 + 7];
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SRj() //  [R1]
         { info_tbl: [(c9SRj,
                       label: block_c9SRj_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SRj: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9SRr; else goto c9SRq;
       c9SRr: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9SRq: // global
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.IO.Error.tryIOError1_entry() //  [R2]
         { info_tbl: [(c9SRs,
                       label: System.IO.Error.tryIOError1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SRs: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9SRw; else goto c9SRv;
       c9SRw: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = System.IO.Error.tryIOError1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SRv: // global
           I64[Hp - 8] = sat_s9SAw_info;
           P64[Hp] = R2;
           R2 = System.IO.Error.tryIOError2_closure+2;
           R1 = Hp - 7;
           call stg_catch#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.069430054 UTC

[section ""data" . System.IO.Error.tryIOError_closure" {
     System.IO.Error.tryIOError_closure:
         const System.IO.Error.tryIOError_info;
         const 0;
 },
 System.IO.Error.tryIOError_entry() //  [R2]
         { info_tbl: [(c9SRB,
                       label: System.IO.Error.tryIOError_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SRB: // global
           R2 = R2;
           call System.IO.Error.tryIOError1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.070305335 UTC

[section ""data" . System.IO.Error.mkIOError_closure" {
     System.IO.Error.mkIOError_closure:
         const System.IO.Error.mkIOError_info;
 },
 System.IO.Error.mkIOError_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c9SRJ,
                       label: System.IO.Error.mkIOError_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SRJ: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9SRN; else goto c9SRM;
       c9SRN: // global
           HpAlloc = 56;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.mkIOError_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9SRM: // global
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = R4;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           P64[Hp - 16] = GHC.Types.[]_closure+1;
           P64[Hp - 8] = GHC.Base.Nothing_closure+1;
           P64[Hp] = R5;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.071189103 UTC

[section ""data" . System.IO.Error.alreadyExistsErrorType_closure" {
     System.IO.Error.alreadyExistsErrorType_closure:
         const GHC.IO.Exception.AlreadyExists_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.07173482 UTC

[section ""data" . System.IO.Error.doesNotExistErrorType_closure" {
     System.IO.Error.doesNotExistErrorType_closure:
         const GHC.IO.Exception.NoSuchThing_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.07231129 UTC

[section ""data" . System.IO.Error.alreadyInUseErrorType_closure" {
     System.IO.Error.alreadyInUseErrorType_closure:
         const GHC.IO.Exception.ResourceBusy_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.072845163 UTC

[section ""data" . System.IO.Error.fullErrorType_closure" {
     System.IO.Error.fullErrorType_closure:
         const GHC.IO.Exception.ResourceExhausted_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.07344817 UTC

[section ""data" . System.IO.Error.eofErrorType_closure" {
     System.IO.Error.eofErrorType_closure:
         const GHC.IO.Exception.EOF_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.07398113 UTC

[section ""data" . System.IO.Error.illegalOperationErrorType_closure" {
     System.IO.Error.illegalOperationErrorType_closure:
         const GHC.IO.Exception.IllegalOperation_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.074535605 UTC

[section ""data" . System.IO.Error.permissionErrorType_closure" {
     System.IO.Error.permissionErrorType_closure:
         const GHC.IO.Exception.PermissionDenied_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.075008262 UTC

[section ""data" . System.IO.Error.userErrorType_closure" {
     System.IO.Error.userErrorType_closure:
         const GHC.IO.Exception.UserError_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.075766994 UTC

[section ""data" . System.IO.Error.isAlreadyExistsErrorType_closure" {
     System.IO.Error.isAlreadyExistsErrorType_closure:
         const System.IO.Error.isAlreadyExistsErrorType_info;
 },
 System.IO.Error.isAlreadyExistsErrorType_entry() //  [R2]
         { info_tbl: [(c9SRZ,
                       label: System.IO.Error.isAlreadyExistsErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SRZ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SS0; else goto c9SS1;
       c9SS0: // global
           R2 = R2;
           R1 = System.IO.Error.isAlreadyExistsErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SS1: // global
           I64[Sp - 8] = block_c9SRS_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SS8; else goto c9SRT;
       u9SS8: // global
           call _c9SRS(R1) args: 0, res: 0, upd: 0;
       c9SRT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SRS() //  [R1]
         { info_tbl: [(c9SRS,
                       label: block_c9SRS_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SRS: // global
           if (I32[I64[R1 - 1] + 20] == 0 :: W32) goto c9SRX; else goto c9SRW;
       c9SRX: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SRW: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.077038947 UTC

[section ""data" . System.IO.Error.isDoesNotExistErrorType_closure" {
     System.IO.Error.isDoesNotExistErrorType_closure:
         const System.IO.Error.isDoesNotExistErrorType_info;
 },
 System.IO.Error.isDoesNotExistErrorType_entry() //  [R2]
         { info_tbl: [(c9SSk,
                       label: System.IO.Error.isDoesNotExistErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SSk: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SSl; else goto c9SSm;
       c9SSl: // global
           R2 = R2;
           R1 = System.IO.Error.isDoesNotExistErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SSm: // global
           I64[Sp - 8] = block_c9SSd_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SSt; else goto c9SSe;
       u9SSt: // global
           call _c9SSd(R1) args: 0, res: 0, upd: 0;
       c9SSe: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SSd() //  [R1]
         { info_tbl: [(c9SSd,
                       label: block_c9SSd_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SSd: // global
           if (I32[I64[R1 - 1] + 20] == 1 :: W32) goto c9SSi; else goto c9SSh;
       c9SSi: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SSh: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.078460483 UTC

[section ""data" . System.IO.Error.isAlreadyInUseErrorType_closure" {
     System.IO.Error.isAlreadyInUseErrorType_closure:
         const System.IO.Error.isAlreadyInUseErrorType_info;
 },
 System.IO.Error.isAlreadyInUseErrorType_entry() //  [R2]
         { info_tbl: [(c9SSF,
                       label: System.IO.Error.isAlreadyInUseErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SSF: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SSG; else goto c9SSH;
       c9SSG: // global
           R2 = R2;
           R1 = System.IO.Error.isAlreadyInUseErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SSH: // global
           I64[Sp - 8] = block_c9SSy_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SSO; else goto c9SSz;
       u9SSO: // global
           call _c9SSy(R1) args: 0, res: 0, upd: 0;
       c9SSz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SSy() //  [R1]
         { info_tbl: [(c9SSy,
                       label: block_c9SSy_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SSy: // global
           if (I32[I64[R1 - 1] + 20] == 2 :: W32) goto c9SSD; else goto c9SSC;
       c9SSD: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SSC: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.079727094 UTC

[section ""data" . System.IO.Error.isFullErrorType_closure" {
     System.IO.Error.isFullErrorType_closure:
         const System.IO.Error.isFullErrorType_info;
 },
 System.IO.Error.isFullErrorType_entry() //  [R2]
         { info_tbl: [(c9ST0,
                       label: System.IO.Error.isFullErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ST0: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9ST1; else goto c9ST2;
       c9ST1: // global
           R2 = R2;
           R1 = System.IO.Error.isFullErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9ST2: // global
           I64[Sp - 8] = block_c9SST_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9ST9; else goto c9SSU;
       u9ST9: // global
           call _c9SST(R1) args: 0, res: 0, upd: 0;
       c9SSU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SST() //  [R1]
         { info_tbl: [(c9SST,
                       label: block_c9SST_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SST: // global
           if (I32[I64[R1 - 1] + 20] == 3 :: W32) goto c9SSY; else goto c9SSX;
       c9SSY: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SSX: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.080974001 UTC

[section ""data" . System.IO.Error.isEOFErrorType_closure" {
     System.IO.Error.isEOFErrorType_closure:
         const System.IO.Error.isEOFErrorType_info;
 },
 System.IO.Error.isEOFErrorType_entry() //  [R2]
         { info_tbl: [(c9STl,
                       label: System.IO.Error.isEOFErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9STl: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9STm; else goto c9STn;
       c9STm: // global
           R2 = R2;
           R1 = System.IO.Error.isEOFErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9STn: // global
           I64[Sp - 8] = block_c9STe_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9STu; else goto c9STf;
       u9STu: // global
           call _c9STe(R1) args: 0, res: 0, upd: 0;
       c9STf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9STe() //  [R1]
         { info_tbl: [(c9STe,
                       label: block_c9STe_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9STe: // global
           if (I32[I64[R1 - 1] + 20] == 4 :: W32) goto c9STj; else goto c9STi;
       c9STj: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9STi: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.082307176 UTC

[section ""data" . System.IO.Error.isIllegalOperationErrorType_closure" {
     System.IO.Error.isIllegalOperationErrorType_closure:
         const System.IO.Error.isIllegalOperationErrorType_info;
 },
 System.IO.Error.isIllegalOperationErrorType_entry() //  [R2]
         { info_tbl: [(c9STG,
                       label: System.IO.Error.isIllegalOperationErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9STG: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9STH; else goto c9STI;
       c9STH: // global
           R2 = R2;
           R1 = System.IO.Error.isIllegalOperationErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9STI: // global
           I64[Sp - 8] = block_c9STz_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9STP; else goto c9STA;
       u9STP: // global
           call _c9STz(R1) args: 0, res: 0, upd: 0;
       c9STA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9STz() //  [R1]
         { info_tbl: [(c9STz,
                       label: block_c9STz_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9STz: // global
           if (I32[I64[R1 - 1] + 20] == 5 :: W32) goto c9STE; else goto c9STD;
       c9STE: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9STD: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.083552928 UTC

[section ""data" . System.IO.Error.isPermissionErrorType_closure" {
     System.IO.Error.isPermissionErrorType_closure:
         const System.IO.Error.isPermissionErrorType_info;
 },
 System.IO.Error.isPermissionErrorType_entry() //  [R2]
         { info_tbl: [(c9SU1,
                       label: System.IO.Error.isPermissionErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SU1: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SU2; else goto c9SU3;
       c9SU2: // global
           R2 = R2;
           R1 = System.IO.Error.isPermissionErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SU3: // global
           I64[Sp - 8] = block_c9STU_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SUa; else goto c9STV;
       u9SUa: // global
           call _c9STU(R1) args: 0, res: 0, upd: 0;
       c9STV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9STU() //  [R1]
         { info_tbl: [(c9STU,
                       label: block_c9STU_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9STU: // global
           if (I32[I64[R1 - 1] + 20] == 6 :: W32) goto c9STZ; else goto c9STY;
       c9STZ: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9STY: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.084806155 UTC

[section ""data" . System.IO.Error.isUserErrorType_closure" {
     System.IO.Error.isUserErrorType_closure:
         const System.IO.Error.isUserErrorType_info;
 },
 System.IO.Error.isUserErrorType_entry() //  [R2]
         { info_tbl: [(c9SUm,
                       label: System.IO.Error.isUserErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SUm: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SUn; else goto c9SUo;
       c9SUn: // global
           R2 = R2;
           R1 = System.IO.Error.isUserErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SUo: // global
           I64[Sp - 8] = block_c9SUf_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SUv; else goto c9SUg;
       u9SUv: // global
           call _c9SUf(R1) args: 0, res: 0, upd: 0;
       c9SUg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SUf() //  [R1]
         { info_tbl: [(c9SUf,
                       label: block_c9SUf_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SUf: // global
           if (I32[I64[R1 - 1] + 20] == 7 :: W32) goto c9SUk; else goto c9SUj;
       c9SUk: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SUj: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.086044502 UTC

[section ""data" . System.IO.Error.ioeGetErrorType_closure" {
     System.IO.Error.ioeGetErrorType_closure:
         const System.IO.Error.ioeGetErrorType_info;
 },
 System.IO.Error.ioeGetErrorType_entry() //  [R2]
         { info_tbl: [(c9SUA,
                       label: System.IO.Error.ioeGetErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SUA: // global
           R2 = R2;
           call GHC.IO.Exception.ioe_type_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.087105179 UTC

[section ""data" . System.IO.Error.isUserError_closure" {
     System.IO.Error.isUserError_closure:
         const System.IO.Error.isUserError_info;
 },
 System.IO.Error.isUserError_entry() //  [R2]
         { info_tbl: [(c9SUK,
                       label: System.IO.Error.isUserError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SUK: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SUL; else goto c9SUM;
       c9SUL: // global
           R2 = R2;
           R1 = System.IO.Error.isUserError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SUM: // global
           I64[Sp - 8] = block_c9SUH_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SV4; else goto c9SUI;
       u9SV4: // global
           call _c9SUH(R1) args: 0, res: 0, upd: 0;
       c9SUI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SUH() //  [R1]
         { info_tbl: [(c9SUH,
                       label: block_c9SUH_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SUH: // global
           I64[Sp] = block_c9SUP_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9SV3; else goto c9SUR;
       u9SV3: // global
           call _c9SUP(R1) args: 0, res: 0, upd: 0;
       c9SUR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SUP() //  [R1]
         { info_tbl: [(c9SUP,
                       label: block_c9SUP_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SUP: // global
           if (I32[I64[R1 - 1] + 20] == 7 :: W32) goto c9SV1; else goto c9SUX;
       c9SV1: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SUX: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.088628247 UTC

[section ""data" . System.IO.Error.isPermissionError_closure" {
     System.IO.Error.isPermissionError_closure:
         const System.IO.Error.isPermissionError_info;
 },
 System.IO.Error.isPermissionError_entry() //  [R2]
         { info_tbl: [(c9SVc,
                       label: System.IO.Error.isPermissionError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SVc: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SVd; else goto c9SVe;
       c9SVd: // global
           R2 = R2;
           R1 = System.IO.Error.isPermissionError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SVe: // global
           I64[Sp - 8] = block_c9SV9_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SVw; else goto c9SVa;
       u9SVw: // global
           call _c9SV9(R1) args: 0, res: 0, upd: 0;
       c9SVa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SV9() //  [R1]
         { info_tbl: [(c9SV9,
                       label: block_c9SV9_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SV9: // global
           I64[Sp] = block_c9SVh_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9SVv; else goto c9SVj;
       u9SVv: // global
           call _c9SVh(R1) args: 0, res: 0, upd: 0;
       c9SVj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SVh() //  [R1]
         { info_tbl: [(c9SVh,
                       label: block_c9SVh_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SVh: // global
           if (I32[I64[R1 - 1] + 20] == 6 :: W32) goto c9SVt; else goto c9SVp;
       c9SVt: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SVp: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.090275711 UTC

[section ""data" . System.IO.Error.isIllegalOperation_closure" {
     System.IO.Error.isIllegalOperation_closure:
         const System.IO.Error.isIllegalOperation_info;
 },
 System.IO.Error.isIllegalOperation_entry() //  [R2]
         { info_tbl: [(c9SVE,
                       label: System.IO.Error.isIllegalOperation_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SVE: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SVF; else goto c9SVG;
       c9SVF: // global
           R2 = R2;
           R1 = System.IO.Error.isIllegalOperation_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SVG: // global
           I64[Sp - 8] = block_c9SVB_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SVY; else goto c9SVC;
       u9SVY: // global
           call _c9SVB(R1) args: 0, res: 0, upd: 0;
       c9SVC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SVB() //  [R1]
         { info_tbl: [(c9SVB,
                       label: block_c9SVB_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SVB: // global
           I64[Sp] = block_c9SVJ_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9SVX; else goto c9SVL;
       u9SVX: // global
           call _c9SVJ(R1) args: 0, res: 0, upd: 0;
       c9SVL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SVJ() //  [R1]
         { info_tbl: [(c9SVJ,
                       label: block_c9SVJ_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SVJ: // global
           if (I32[I64[R1 - 1] + 20] == 5 :: W32) goto c9SVV; else goto c9SVR;
       c9SVV: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SVR: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.09179814 UTC

[section ""data" . System.IO.Error.isEOFError_closure" {
     System.IO.Error.isEOFError_closure:
         const System.IO.Error.isEOFError_info;
 },
 System.IO.Error.isEOFError_entry() //  [R2]
         { info_tbl: [(c9SW6,
                       label: System.IO.Error.isEOFError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SW6: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SW7; else goto c9SW8;
       c9SW7: // global
           R2 = R2;
           R1 = System.IO.Error.isEOFError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SW8: // global
           I64[Sp - 8] = block_c9SW3_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SWq; else goto c9SW4;
       u9SWq: // global
           call _c9SW3(R1) args: 0, res: 0, upd: 0;
       c9SW4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SW3() //  [R1]
         { info_tbl: [(c9SW3,
                       label: block_c9SW3_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SW3: // global
           I64[Sp] = block_c9SWb_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9SWp; else goto c9SWd;
       u9SWp: // global
           call _c9SWb(R1) args: 0, res: 0, upd: 0;
       c9SWd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SWb() //  [R1]
         { info_tbl: [(c9SWb,
                       label: block_c9SWb_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SWb: // global
           if (I32[I64[R1 - 1] + 20] == 4 :: W32) goto c9SWn; else goto c9SWj;
       c9SWn: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SWj: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.095540765 UTC

[section ""data" . System.IO.Error.isFullError_closure" {
     System.IO.Error.isFullError_closure:
         const System.IO.Error.isFullError_info;
 },
 System.IO.Error.isFullError_entry() //  [R2]
         { info_tbl: [(c9SWy,
                       label: System.IO.Error.isFullError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SWy: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SWz; else goto c9SWA;
       c9SWz: // global
           R2 = R2;
           R1 = System.IO.Error.isFullError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SWA: // global
           I64[Sp - 8] = block_c9SWv_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SWS; else goto c9SWw;
       u9SWS: // global
           call _c9SWv(R1) args: 0, res: 0, upd: 0;
       c9SWw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SWv() //  [R1]
         { info_tbl: [(c9SWv,
                       label: block_c9SWv_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SWv: // global
           I64[Sp] = block_c9SWD_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9SWR; else goto c9SWF;
       u9SWR: // global
           call _c9SWD(R1) args: 0, res: 0, upd: 0;
       c9SWF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SWD() //  [R1]
         { info_tbl: [(c9SWD,
                       label: block_c9SWD_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SWD: // global
           if (I32[I64[R1 - 1] + 20] == 3 :: W32) goto c9SWP; else goto c9SWL;
       c9SWP: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SWL: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.09700572 UTC

[section ""data" . System.IO.Error.isAlreadyInUseError_closure" {
     System.IO.Error.isAlreadyInUseError_closure:
         const System.IO.Error.isAlreadyInUseError_info;
 },
 System.IO.Error.isAlreadyInUseError_entry() //  [R2]
         { info_tbl: [(c9SX0,
                       label: System.IO.Error.isAlreadyInUseError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SX0: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SX1; else goto c9SX2;
       c9SX1: // global
           R2 = R2;
           R1 = System.IO.Error.isAlreadyInUseError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SX2: // global
           I64[Sp - 8] = block_c9SWX_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SXk; else goto c9SWY;
       u9SXk: // global
           call _c9SWX(R1) args: 0, res: 0, upd: 0;
       c9SWY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SWX() //  [R1]
         { info_tbl: [(c9SWX,
                       label: block_c9SWX_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SWX: // global
           I64[Sp] = block_c9SX5_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9SXj; else goto c9SX7;
       u9SXj: // global
           call _c9SX5(R1) args: 0, res: 0, upd: 0;
       c9SX7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SX5() //  [R1]
         { info_tbl: [(c9SX5,
                       label: block_c9SX5_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SX5: // global
           if (I32[I64[R1 - 1] + 20] == 2 :: W32) goto c9SXh; else goto c9SXd;
       c9SXh: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SXd: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.098498289 UTC

[section ""data" . System.IO.Error.isDoesNotExistError_closure" {
     System.IO.Error.isDoesNotExistError_closure:
         const System.IO.Error.isDoesNotExistError_info;
 },
 System.IO.Error.isDoesNotExistError_entry() //  [R2]
         { info_tbl: [(c9SXs,
                       label: System.IO.Error.isDoesNotExistError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SXs: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SXt; else goto c9SXu;
       c9SXt: // global
           R2 = R2;
           R1 = System.IO.Error.isDoesNotExistError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SXu: // global
           I64[Sp - 8] = block_c9SXp_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SXM; else goto c9SXq;
       u9SXM: // global
           call _c9SXp(R1) args: 0, res: 0, upd: 0;
       c9SXq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SXp() //  [R1]
         { info_tbl: [(c9SXp,
                       label: block_c9SXp_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SXp: // global
           I64[Sp] = block_c9SXx_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9SXL; else goto c9SXz;
       u9SXL: // global
           call _c9SXx(R1) args: 0, res: 0, upd: 0;
       c9SXz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SXx() //  [R1]
         { info_tbl: [(c9SXx,
                       label: block_c9SXx_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SXx: // global
           if (I32[I64[R1 - 1] + 20] == 1 :: W32) goto c9SXJ; else goto c9SXF;
       c9SXJ: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SXF: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.099962067 UTC

[section ""data" . System.IO.Error.isAlreadyExistsError_closure" {
     System.IO.Error.isAlreadyExistsError_closure:
         const System.IO.Error.isAlreadyExistsError_info;
 },
 System.IO.Error.isAlreadyExistsError_entry() //  [R2]
         { info_tbl: [(c9SXU,
                       label: System.IO.Error.isAlreadyExistsError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SXU: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9SXV; else goto c9SXW;
       c9SXV: // global
           R2 = R2;
           R1 = System.IO.Error.isAlreadyExistsError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9SXW: // global
           I64[Sp - 8] = block_c9SXR_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9SYe; else goto c9SXS;
       u9SYe: // global
           call _c9SXR(R1) args: 0, res: 0, upd: 0;
       c9SXS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SXR() //  [R1]
         { info_tbl: [(c9SXR,
                       label: block_c9SXR_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SXR: // global
           I64[Sp] = block_c9SXZ_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9SYd; else goto c9SY1;
       u9SYd: // global
           call _c9SXZ(R1) args: 0, res: 0, upd: 0;
       c9SY1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SXZ() //  [R1]
         { info_tbl: [(c9SXZ,
                       label: block_c9SXZ_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SXZ: // global
           if (I32[I64[R1 - 1] + 20] == 0 :: W32) goto c9SYb; else goto c9SY7;
       c9SYb: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9SY7: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.101505742 UTC

[section ""data" . System.IO.Error.ioeGetLocation_closure" {
     System.IO.Error.ioeGetLocation_closure:
         const System.IO.Error.ioeGetLocation_info;
 },
 System.IO.Error.ioeGetLocation_entry() //  [R2]
         { info_tbl: [(c9SYj,
                       label: System.IO.Error.ioeGetLocation_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SYj: // global
           R2 = R2;
           call GHC.IO.Exception.ioe_location_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.102304117 UTC

[section ""data" . System.IO.Error.ioeGetHandle_closure" {
     System.IO.Error.ioeGetHandle_closure:
         const System.IO.Error.ioeGetHandle_info;
 },
 System.IO.Error.ioeGetHandle_entry() //  [R2]
         { info_tbl: [(c9SYq,
                       label: System.IO.Error.ioeGetHandle_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SYq: // global
           R2 = R2;
           call GHC.IO.Exception.ioe_handle_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.10310532 UTC

[section ""data" . System.IO.Error.ioeGetFileName_closure" {
     System.IO.Error.ioeGetFileName_closure:
         const System.IO.Error.ioeGetFileName_info;
 },
 System.IO.Error.ioeGetFileName_entry() //  [R2]
         { info_tbl: [(c9SYx,
                       label: System.IO.Error.ioeGetFileName_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SYx: // global
           R2 = R2;
           call GHC.IO.Exception.ioe_filename_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.104150082 UTC

[section ""data" . System.IO.Error.ioeSetErrorType_closure" {
     System.IO.Error.ioeSetErrorType_closure:
         const System.IO.Error.ioeSetErrorType_info;
 },
 System.IO.Error.ioeSetErrorType_entry() //  [R2, R3]
         { info_tbl: [(c9SYH,
                       label: System.IO.Error.ioeSetErrorType_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SYH: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9SYL; else goto c9SYM;
       c9SYL: // global
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.ioeSetErrorType_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9SYM: // global
           I64[Sp - 16] = block_c9SYE_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9SYQ; else goto c9SYF;
       u9SYQ: // global
           call _c9SYE(R1) args: 0, res: 0, upd: 0;
       c9SYF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SYE() //  [R1]
         { info_tbl: [(c9SYE,
                       label: block_c9SYE_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SYE: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9SYP; else goto c9SYO;
       c9SYP: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9SYO: // global
           _s9SC4::P64 = P64[R1 + 7];
           _s9SC6::P64 = P64[R1 + 23];
           _s9SC7::P64 = P64[R1 + 31];
           _s9SC8::P64 = P64[R1 + 39];
           _s9SC9::P64 = P64[R1 + 47];
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = _s9SC4::P64;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s9SC6::P64;
           P64[Hp - 16] = _s9SC7::P64;
           P64[Hp - 8] = _s9SC8::P64;
           P64[Hp] = _s9SC9::P64;
           R1 = Hp - 47;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.105690994 UTC

[section ""data" . System.IO.Error.ioeSetErrorString_closure" {
     System.IO.Error.ioeSetErrorString_closure:
         const System.IO.Error.ioeSetErrorString_info;
 },
 System.IO.Error.ioeSetErrorString_entry() //  [R2, R3]
         { info_tbl: [(c9SYY,
                       label: System.IO.Error.ioeSetErrorString_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SYY: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9SZ2; else goto c9SZ3;
       c9SZ2: // global
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.ioeSetErrorString_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9SZ3: // global
           I64[Sp - 16] = block_c9SYV_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9SZ7; else goto c9SYW;
       u9SZ7: // global
           call _c9SYV(R1) args: 0, res: 0, upd: 0;
       c9SYW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SYV() //  [R1]
         { info_tbl: [(c9SYV,
                       label: block_c9SYV_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SYV: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9SZ6; else goto c9SZ5;
       c9SZ6: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9SZ5: // global
           _s9SCd::P64 = P64[R1 + 7];
           _s9SCe::P64 = P64[R1 + 15];
           _s9SCf::P64 = P64[R1 + 23];
           _s9SCh::P64 = P64[R1 + 39];
           _s9SCi::P64 = P64[R1 + 47];
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = _s9SCd::P64;
           P64[Hp - 32] = _s9SCe::P64;
           P64[Hp - 24] = _s9SCf::P64;
           P64[Hp - 16] = P64[Sp + 8];
           P64[Hp - 8] = _s9SCh::P64;
           P64[Hp] = _s9SCi::P64;
           R1 = Hp - 47;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.10714524 UTC

[section ""data" . System.IO.Error.ioeSetLocation_closure" {
     System.IO.Error.ioeSetLocation_closure:
         const System.IO.Error.ioeSetLocation_info;
 },
 System.IO.Error.ioeSetLocation_entry() //  [R2, R3]
         { info_tbl: [(c9SZf,
                       label: System.IO.Error.ioeSetLocation_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SZf: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9SZj; else goto c9SZk;
       c9SZj: // global
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.ioeSetLocation_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9SZk: // global
           I64[Sp - 16] = block_c9SZc_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9SZo; else goto c9SZd;
       u9SZo: // global
           call _c9SZc(R1) args: 0, res: 0, upd: 0;
       c9SZd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SZc() //  [R1]
         { info_tbl: [(c9SZc,
                       label: block_c9SZc_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SZc: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9SZn; else goto c9SZm;
       c9SZn: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9SZm: // global
           _s9SCm::P64 = P64[R1 + 7];
           _s9SCn::P64 = P64[R1 + 15];
           _s9SCp::P64 = P64[R1 + 31];
           _s9SCq::P64 = P64[R1 + 39];
           _s9SCr::P64 = P64[R1 + 47];
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = _s9SCm::P64;
           P64[Hp - 32] = _s9SCn::P64;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _s9SCp::P64;
           P64[Hp - 8] = _s9SCq::P64;
           P64[Hp] = _s9SCr::P64;
           R1 = Hp - 47;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.108601205 UTC

[section ""data" . System.IO.Error.ioeSetHandle_closure" {
     System.IO.Error.ioeSetHandle_closure:
         const System.IO.Error.ioeSetHandle_info;
 },
 System.IO.Error.ioeSetHandle_entry() //  [R2, R3]
         { info_tbl: [(c9SZw,
                       label: System.IO.Error.ioeSetHandle_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SZw: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9SZB; else goto c9SZC;
       c9SZB: // global
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.ioeSetHandle_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9SZC: // global
           I64[Sp - 16] = block_c9SZt_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9SZG; else goto c9SZu;
       u9SZG: // global
           call _c9SZt(R1) args: 0, res: 0, upd: 0;
       c9SZu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SZt() //  [R1]
         { info_tbl: [(c9SZt,
                       label: block_c9SZt_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SZt: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c9SZF; else goto c9SZE;
       c9SZF: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9SZE: // global
           _s9SCw::P64 = P64[R1 + 15];
           _s9SCx::P64 = P64[R1 + 23];
           _s9SCy::P64 = P64[R1 + 31];
           _s9SCz::P64 = P64[R1 + 39];
           _s9SCA::P64 = P64[R1 + 47];
           I64[Hp - 64] = GHC.Base.Just_con_info;
           P64[Hp - 56] = P64[Sp + 8];
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = Hp - 62;
           P64[Hp - 32] = _s9SCw::P64;
           P64[Hp - 24] = _s9SCx::P64;
           P64[Hp - 16] = _s9SCy::P64;
           P64[Hp - 8] = _s9SCz::P64;
           P64[Hp] = _s9SCA::P64;
           R1 = Hp - 47;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.11026098 UTC

[section ""data" . System.IO.Error.ioeSetFileName_closure" {
     System.IO.Error.ioeSetFileName_closure:
         const System.IO.Error.ioeSetFileName_info;
 },
 System.IO.Error.ioeSetFileName_entry() //  [R2, R3]
         { info_tbl: [(c9SZO,
                       label: System.IO.Error.ioeSetFileName_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SZO: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9SZT; else goto c9SZU;
       c9SZT: // global
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.ioeSetFileName_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9SZU: // global
           I64[Sp - 16] = block_c9SZL_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9SZY; else goto c9SZM;
       u9SZY: // global
           call _c9SZL(R1) args: 0, res: 0, upd: 0;
       c9SZM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9SZL() //  [R1]
         { info_tbl: [(c9SZL,
                       label: block_c9SZL_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9SZL: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c9SZX; else goto c9SZW;
       c9SZX: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9SZW: // global
           _s9SCF::P64 = P64[R1 + 7];
           _s9SCG::P64 = P64[R1 + 15];
           _s9SCH::P64 = P64[R1 + 23];
           _s9SCI::P64 = P64[R1 + 31];
           _s9SCJ::P64 = P64[R1 + 39];
           I64[Hp - 64] = GHC.Base.Just_con_info;
           P64[Hp - 56] = P64[Sp + 8];
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = _s9SCF::P64;
           P64[Hp - 32] = _s9SCG::P64;
           P64[Hp - 24] = _s9SCH::P64;
           P64[Hp - 16] = _s9SCI::P64;
           P64[Hp - 8] = _s9SCJ::P64;
           P64[Hp] = Hp - 62;
           R1 = Hp - 47;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.111764847 UTC

[section ""data" . System.IO.Error.modifyIOError2_closure" {
     System.IO.Error.modifyIOError2_closure:
         const System.IO.Error.modifyIOError2_info;
         const 0;
 },
 sat_s9SCQ_entry() //  [R1]
         { info_tbl: [(c9T08,
                       label: sat_s9SCQ_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T08: // global
           _s9SCQ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9T09; else goto c9T0a;
       c9T0a: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9T0c; else goto c9T0b;
       c9T0c: // global
           HpAlloc = 32;
           goto c9T09;
       c9T09: // global
           R1 = _s9SCQ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9T0b: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9SCQ::P64;
           _s9SCM::P64 = P64[_s9SCQ::P64 + 16];
           _s9SCN::P64 = P64[_s9SCQ::P64 + 24];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _s9SCN::P64;
           P64[Hp] = _s9SCM::P64;
           R2 = Hp - 24;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 System.IO.Error.modifyIOError2_entry() //  [R2, R3]
         { info_tbl: [(c9T0d,
                       label: System.IO.Error.modifyIOError2_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T0d: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9T0h; else goto c9T0g;
       c9T0h: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.modifyIOError2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9T0g: // global
           I64[Hp - 24] = sat_s9SCQ_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 24;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.113710286 UTC

[section ""data" . System.IO.Error.modifyIOError1_closure" {
     System.IO.Error.modifyIOError1_closure:
         const System.IO.Error.modifyIOError1_info;
         const 0;
 },
 sat_s9SD0_entry() //  [R1]
         { info_tbl: [(c9T0J,
                       label: sat_s9SD0_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T0J: // global
           R1 = P64[R1 + 7];
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9SD2_entry() //  [R1, R2]
         { info_tbl: [(c9T0M,
                       label: sat_s9SD2_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T0M: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9T0N; else goto c9T0O;
       c9T0N: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9T0O: // global
           I64[Sp - 16] = block_c9T0r_info;
           _s9SCR::P64 = P64[R1 + 7];
           R1 = R2;
           P64[Sp - 8] = _s9SCR::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9T11; else goto c9T0s;
       u9T11: // global
           call _c9T0r(R1) args: 0, res: 0, upd: 0;
       c9T0s: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9T0r() //  [R1]
         { info_tbl: [(c9T0r,
                       label: block_c9T0r_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T0r: // global
           I64[Sp - 16] = block_c9T0w_info;
           R2 = P64[R1 + 7];
           P64[Sp - 8] = P64[R1 + 15];
           P64[Sp] = R1;
           Sp = Sp - 16;
           call GHC.Exception.$p1Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9T0w() //  [R1]
         { info_tbl: [(c9T0w,
                       label: block_c9T0w_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T0w: // global
           I64[Sp] = block_c9T0A_info;
           R3 = GHC.IO.Exception.$fExceptionIOException4_closure;
           R2 = R1;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9T0A() //  [R1]
         { info_tbl: [(c9T0A,
                       label: block_c9T0A_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T0A: // global
           if (R1 & 7 == 1) goto c9T0S; else goto c9T0Z;
       c9T0S: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9T0V; else goto c9T0U;
       c9T0V: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9T0U: // global
           I64[Hp - 8] = sat_s9SD0_info;
           P64[Hp] = P64[Sp + 16];
           R1 = Hp - 7;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9T0Z: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 8];
           R1 = System.IO.Error.modifyIOError2_closure+3;
           Sp = Sp + 32;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 System.IO.Error.modifyIOError1_entry() //  [R2, R3]
         { info_tbl: [(c9T12,
                       label: System.IO.Error.modifyIOError1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T12: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9T16; else goto c9T15;
       c9T16: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.modifyIOError1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9T15: // global
           I64[Hp - 8] = sat_s9SD2_info;
           P64[Hp] = R2;
           R2 = Hp - 7;
           R1 = R3;
           call stg_catch#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.115685517 UTC

[section ""data" . System.IO.Error.modifyIOError_closure" {
     System.IO.Error.modifyIOError_closure:
         const System.IO.Error.modifyIOError_info;
         const 0;
 },
 System.IO.Error.modifyIOError_entry() //  [R2, R3]
         { info_tbl: [(c9T1b,
                       label: System.IO.Error.modifyIOError_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T1b: // global
           R3 = R3;
           R2 = R2;
           call System.IO.Error.modifyIOError1_entry(R3,
                                                     R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.117136983 UTC

[section ""data" . System.IO.Error.catchIOError1_closure" {
     System.IO.Error.catchIOError1_closure:
         const System.IO.Error.catchIOError1_info;
         const 0;
 },
 sat_s9SDc_entry() //  [R1]
         { info_tbl: [(c9T1F,
                       label: sat_s9SDc_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T1F: // global
           R1 = P64[R1 + 7];
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9SDd_entry() //  [R1, R2]
         { info_tbl: [(c9T1I,
                       label: sat_s9SDd_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T1I: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9T1J; else goto c9T1K;
       c9T1J: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9T1K: // global
           I64[Sp - 16] = block_c9T1n_info;
           _s9SD4::P64 = P64[R1 + 7];
           R1 = R2;
           P64[Sp - 8] = _s9SD4::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9T1X; else goto c9T1o;
       u9T1X: // global
           call _c9T1n(R1) args: 0, res: 0, upd: 0;
       c9T1o: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9T1n() //  [R1]
         { info_tbl: [(c9T1n,
                       label: block_c9T1n_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T1n: // global
           I64[Sp - 16] = block_c9T1s_info;
           R2 = P64[R1 + 7];
           P64[Sp - 8] = P64[R1 + 15];
           P64[Sp] = R1;
           Sp = Sp - 16;
           call GHC.Exception.$p1Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9T1s() //  [R1]
         { info_tbl: [(c9T1s,
                       label: block_c9T1s_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T1s: // global
           I64[Sp] = block_c9T1w_info;
           R3 = GHC.IO.Exception.$fExceptionIOException4_closure;
           R2 = R1;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9T1w() //  [R1]
         { info_tbl: [(c9T1w,
                       label: block_c9T1w_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T1w: // global
           if (R1 & 7 == 1) goto c9T1O; else goto c9T1V;
       c9T1O: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9T1R; else goto c9T1Q;
       c9T1R: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9T1Q: // global
           I64[Hp - 8] = sat_s9SDc_info;
           P64[Hp] = P64[Sp + 16];
           R1 = Hp - 7;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9T1V: // global
           R2 = P64[Sp + 8];
           R1 = P64[Sp + 24];
           Sp = Sp + 32;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 System.IO.Error.catchIOError1_entry() //  [R2, R3]
         { info_tbl: [(c9T1Y,
                       label: System.IO.Error.catchIOError1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T1Y: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9T22; else goto c9T21;
       c9T22: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.catchIOError1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9T21: // global
           I64[Hp - 8] = sat_s9SDd_info;
           P64[Hp] = R3;
           _s9SD3::P64 = R2;
           R2 = Hp - 7;
           R1 = _s9SD3::P64;
           call stg_catch#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.119276838 UTC

[section ""data" . System.IO.Error.catchIOError_closure" {
     System.IO.Error.catchIOError_closure:
         const System.IO.Error.catchIOError_info;
         const 0;
 },
 System.IO.Error.catchIOError_entry() //  [R2, R3]
         { info_tbl: [(c9T27,
                       label: System.IO.Error.catchIOError_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T27: // global
           R3 = R3;
           R2 = R2;
           call System.IO.Error.catchIOError1_entry(R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.120006365 UTC

[section ""cstring" . System.IO.Error.$trModule4_bytes" {
     System.IO.Error.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.120519157 UTC

[section ""data" . System.IO.Error.$trModule3_closure" {
     System.IO.Error.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.IO.Error.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.121087351 UTC

[section ""cstring" . System.IO.Error.$trModule2_bytes" {
     System.IO.Error.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,73,79,46,69,114,114,111,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.121663534 UTC

[section ""data" . System.IO.Error.$trModule1_closure" {
     System.IO.Error.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.IO.Error.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.122228576 UTC

[section ""data" . System.IO.Error.$trModule_closure" {
     System.IO.Error.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.IO.Error.$trModule3_closure+1;
         const System.IO.Error.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.123115638 UTC

[section ""data" . System.IO.Error.ioeGetErrorString_closure" {
     System.IO.Error.ioeGetErrorString_closure:
         const System.IO.Error.ioeGetErrorString_info;
         const 0;
 },
 System.IO.Error.ioeGetErrorString_entry() //  [R2]
         { info_tbl: [(c9T2h,
                       label: System.IO.Error.ioeGetErrorString_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T2h: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9T2i; else goto c9T2j;
       c9T2i: // global
           R2 = R2;
           R1 = System.IO.Error.ioeGetErrorString_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9T2j: // global
           I64[Sp - 8] = block_c9T2e_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9T2B; else goto c9T2f;
       u9T2B: // global
           call _c9T2e(R1) args: 0, res: 0, upd: 0;
       c9T2f: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9T2e() //  [R1]
         { info_tbl: [(c9T2e,
                       label: block_c9T2e_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T2e: // global
           I64[Sp - 8] = block_c9T2m_info;
           _s9SDj::P64 = P64[R1 + 31];
           R1 = P64[R1 + 15];
           P64[Sp] = _s9SDj::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9T2A; else goto c9T2o;
       u9T2A: // global
           call _c9T2m(R1) args: 0, res: 0, upd: 0;
       c9T2o: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9T2m() //  [R1]
         { info_tbl: [(c9T2m,
                       label: block_c9T2m_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T2m: // global
           if (I32[I64[R1 - 1] + 20] == 7 :: W32) goto c9T2y; else goto c9T2u;
       c9T2y: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9T2u: // global
           R3 = GHC.Types.[]_closure+1;
           R2 = R1;
           Sp = Sp + 16;
           call GHC.IO.Exception.$w$cshowsPrec4_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.125397041 UTC

[section ""data" . System.IO.Error.annotateIOError_closure" {
     System.IO.Error.annotateIOError_closure:
         const System.IO.Error.annotateIOError_info;
 },
 sat_s9SDD_entry() //  [R1]
         { info_tbl: [(c9T2W,
                       label: sat_s9SDD_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T2W: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9T2X; else goto c9T2Y;
       c9T2X: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9T2Y: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c9T2P_info;
           _s9SDx::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s9SDx::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9T35; else goto c9T2Q;
       u9T35: // global
           call _c9T2P(R1) args: 0, res: 0, upd: 0;
       c9T2Q: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9T2P() //  [R1]
         { info_tbl: [(c9T2P,
                       label: block_c9T2P_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T2P: // global
           if (R1 & 7 == 1) goto c9T2T; else goto c9T2U;
       c9T2T: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
       c9T2U: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9SDA_entry() //  [R1]
         { info_tbl: [(c9T3h,
                       label: sat_s9SDA_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T3h: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9T3i; else goto c9T3j;
       c9T3i: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9T3j: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c9T3a_info;
           _s9SDs::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s9SDs::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9T3q; else goto c9T3b;
       u9T3q: // global
           call _c9T3a(R1) args: 0, res: 0, upd: 0;
       c9T3b: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9T3a() //  [R1]
         { info_tbl: [(c9T3a,
                       label: block_c9T3a_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T3a: // global
           if (R1 & 7 == 1) goto c9T3e; else goto c9T3f;
       c9T3e: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
       c9T3f: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 System.IO.Error.annotateIOError_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c9T3r,
                       label: System.IO.Error.annotateIOError_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T3r: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9T3t; else goto c9T3u;
       c9T3t: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.annotateIOError_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9T3u: // global
           I64[Sp - 32] = block_c9T2G_info;
           R1 = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9T3y; else goto c9T2H;
       u9T3y: // global
           call _c9T2G(R1) args: 0, res: 0, upd: 0;
       c9T2H: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9T2G() //  [R1]
         { info_tbl: [(c9T2G,
                       label: block_c9T2G_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T2G: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto c9T3x; else goto c9T3w;
       c9T3x: // global
           HpAlloc = 120;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9T3w: // global
           _s9SDs::P64 = P64[R1 + 7];
           _s9SDt::P64 = P64[R1 + 15];
           _s9SDv::P64 = P64[R1 + 31];
           _s9SDw::P64 = P64[R1 + 39];
           _s9SDx::P64 = P64[R1 + 47];
           I64[Hp - 112] = sat_s9SDD_info;
           P64[Hp - 96] = P64[Sp + 24];
           P64[Hp - 88] = _s9SDx::P64;
           I64[Hp - 80] = sat_s9SDA_info;
           P64[Hp - 64] = P64[Sp + 16];
           P64[Hp - 56] = _s9SDs::P64;
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = Hp - 80;
           P64[Hp - 32] = _s9SDt::P64;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _s9SDv::P64;
           P64[Hp - 8] = _s9SDw::P64;
           P64[Hp] = Hp - 112;
           R1 = Hp - 47;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.12761145 UTC

[section ""relreadonly" . S9SEc_srt" {
     S9SEc_srt:
         const Data.Typeable.Internal.sameTypeRep_closure;
         const GHC.IO.Exception.$fExceptionIOException4_closure;
         const System.IO.Error.tryIOError2_closure;
         const System.IO.Error.tryIOError1_closure;
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const System.IO.Error.modifyIOError2_closure;
         const System.IO.Error.modifyIOError1_closure;
         const System.IO.Error.catchIOError1_closure;
         const GHC.IO.Exception.$w$cshowsPrec4_closure;
         const System.IO.Error.ioeGetErrorString_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.128439363 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:04:58.129981233 UTC

[section ""data" . System.IO.Error.tryIOError2_closure" {
     System.IO.Error.tryIOError2_closure:
         const System.IO.Error.tryIOError2_info;
         const 0;
 },
 System.IO.Error.tryIOError2_entry() //  [R2]
         { info_tbl: [(c9T3G,
                       label: System.IO.Error.tryIOError2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T3G: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9T3K; else goto c9T3L;
       c9T3K: // global
           R2 = R2;
           R1 = System.IO.Error.tryIOError2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9T3L: // global
           I64[Sp - 8] = block_c9T3D_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9T46; else goto c9T3E;
       u9T46: // global
           call _c9T3D(R1) args: 0, res: 0, upd: 0;
       c9T3E: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9T3D() //  [R1]
         { info_tbl: [(c9T3D,
                       label: block_c9T3D_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T3D: // global
           I64[Sp - 16] = block_c9T3J_info;
           R2 = P64[R1 + 7];
           P64[Sp - 8] = P64[R1 + 15];
           P64[Sp] = R1;
           Sp = Sp - 16;
           call GHC.Exception.$p1Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9T3J() //  [R1]
         { info_tbl: [(c9T3J,
                       label: block_c9T3J_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T3J: // global
           I64[Sp] = block_c9T3Q_info;
           R3 = GHC.IO.Exception.$fExceptionIOException4_closure;
           R2 = R1;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9T3Q() //  [R1]
         { info_tbl: [(c9T3Q,
                       label: block_c9T3Q_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T3Q: // global
           if (R1 & 7 == 1) goto c9T3X; else goto c9T41;
       c9T3X: // global
           R1 = P64[Sp + 16];
           Sp = Sp + 24;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
       c9T41: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9T44; else goto c9T43;
       c9T44: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9T43: // global
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.139745402 UTC

[section ""data" . System.IO.Error.tryIOError1_closure" {
     System.IO.Error.tryIOError1_closure:
         const System.IO.Error.tryIOError1_info;
         const 0;
 },
 sat_s9SAw_entry() //  [R1]
         { info_tbl: [(c9T4D,
                       label: sat_s9SAw_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T4D: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9T4E; else goto c9T4F;
       c9T4E: // global
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9T4F: // global
           I64[Sp - 8] = block_c9T4A_info;
           R1 = P64[R1 + 7];
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9T4A() //  [R1]
         { info_tbl: [(c9T4A,
                       label: block_c9T4A_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T4A: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9T4I; else goto c9T4H;
       c9T4I: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9T4H: // global
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.IO.Error.tryIOError1_entry() //  [R2]
         { info_tbl: [(c9T4J,
                       label: System.IO.Error.tryIOError1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T4J: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9T4N; else goto c9T4M;
       c9T4N: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = System.IO.Error.tryIOError1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9T4M: // global
           I64[Hp - 8] = sat_s9SAw_info;
           P64[Hp] = R2;
           R2 = System.IO.Error.tryIOError2_closure+2;
           R1 = Hp - 7;
           call stg_catch#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.148472593 UTC

[section ""data" . System.IO.Error.tryIOError_closure" {
     System.IO.Error.tryIOError_closure:
         const System.IO.Error.tryIOError_info;
         const 0;
 },
 System.IO.Error.tryIOError_entry() //  [R2]
         { info_tbl: [(c9T54,
                       label: System.IO.Error.tryIOError_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T54: // global
           R2 = R2;
           call System.IO.Error.tryIOError1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.151957547 UTC

[section ""data" . System.IO.Error.mkIOError_closure" {
     System.IO.Error.mkIOError_closure:
         const System.IO.Error.mkIOError_info;
 },
 System.IO.Error.mkIOError_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c9T5g,
                       label: System.IO.Error.mkIOError_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T5g: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9T5k; else goto c9T5j;
       c9T5k: // global
           HpAlloc = 56;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.mkIOError_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9T5j: // global
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = R4;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           P64[Hp - 16] = GHC.Types.[]_closure+1;
           P64[Hp - 8] = GHC.Base.Nothing_closure+1;
           P64[Hp] = R5;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.155996132 UTC

[section ""data" . System.IO.Error.alreadyExistsErrorType_closure" {
     System.IO.Error.alreadyExistsErrorType_closure:
         const GHC.IO.Exception.AlreadyExists_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.157724708 UTC

[section ""data" . System.IO.Error.doesNotExistErrorType_closure" {
     System.IO.Error.doesNotExistErrorType_closure:
         const GHC.IO.Exception.NoSuchThing_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.159358279 UTC

[section ""data" . System.IO.Error.alreadyInUseErrorType_closure" {
     System.IO.Error.alreadyInUseErrorType_closure:
         const GHC.IO.Exception.ResourceBusy_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.161023125 UTC

[section ""data" . System.IO.Error.fullErrorType_closure" {
     System.IO.Error.fullErrorType_closure:
         const GHC.IO.Exception.ResourceExhausted_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.162711817 UTC

[section ""data" . System.IO.Error.eofErrorType_closure" {
     System.IO.Error.eofErrorType_closure:
         const GHC.IO.Exception.EOF_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.164342553 UTC

[section ""data" . System.IO.Error.illegalOperationErrorType_closure" {
     System.IO.Error.illegalOperationErrorType_closure:
         const GHC.IO.Exception.IllegalOperation_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.166083661 UTC

[section ""data" . System.IO.Error.permissionErrorType_closure" {
     System.IO.Error.permissionErrorType_closure:
         const GHC.IO.Exception.PermissionDenied_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.167705979 UTC

[section ""data" . System.IO.Error.userErrorType_closure" {
     System.IO.Error.userErrorType_closure:
         const GHC.IO.Exception.UserError_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.16981872 UTC

[section ""data" . System.IO.Error.isAlreadyExistsErrorType_closure" {
     System.IO.Error.isAlreadyExistsErrorType_closure:
         const System.IO.Error.isAlreadyExistsErrorType_info;
 },
 System.IO.Error.isAlreadyExistsErrorType_entry() //  [R2]
         { info_tbl: [(c9T5J,
                       label: System.IO.Error.isAlreadyExistsErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T5J: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9T5K; else goto c9T5L;
       c9T5K: // global
           R2 = R2;
           R1 = System.IO.Error.isAlreadyExistsErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9T5L: // global
           I64[Sp - 8] = block_c9T5C_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9T5S; else goto c9T5D;
       u9T5S: // global
           call _c9T5C(R1) args: 0, res: 0, upd: 0;
       c9T5D: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9T5C() //  [R1]
         { info_tbl: [(c9T5C,
                       label: block_c9T5C_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T5C: // global
           if (I32[I64[R1 - 1] + 20] == 0 :: W32) goto c9T5H; else goto c9T5G;
       c9T5H: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9T5G: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.176899333 UTC

[section ""data" . System.IO.Error.isDoesNotExistErrorType_closure" {
     System.IO.Error.isDoesNotExistErrorType_closure:
         const System.IO.Error.isDoesNotExistErrorType_info;
 },
 System.IO.Error.isDoesNotExistErrorType_entry() //  [R2]
         { info_tbl: [(c9T6g,
                       label: System.IO.Error.isDoesNotExistErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T6g: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9T6h; else goto c9T6i;
       c9T6h: // global
           R2 = R2;
           R1 = System.IO.Error.isDoesNotExistErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9T6i: // global
           I64[Sp - 8] = block_c9T69_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9T6p; else goto c9T6a;
       u9T6p: // global
           call _c9T69(R1) args: 0, res: 0, upd: 0;
       c9T6a: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9T69() //  [R1]
         { info_tbl: [(c9T69,
                       label: block_c9T69_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T69: // global
           if (I32[I64[R1 - 1] + 20] == 1 :: W32) goto c9T6e; else goto c9T6d;
       c9T6e: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9T6d: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.183104717 UTC

[section ""data" . System.IO.Error.isAlreadyInUseErrorType_closure" {
     System.IO.Error.isAlreadyInUseErrorType_closure:
         const System.IO.Error.isAlreadyInUseErrorType_info;
 },
 System.IO.Error.isAlreadyInUseErrorType_entry() //  [R2]
         { info_tbl: [(c9T6N,
                       label: System.IO.Error.isAlreadyInUseErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T6N: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9T6O; else goto c9T6P;
       c9T6O: // global
           R2 = R2;
           R1 = System.IO.Error.isAlreadyInUseErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9T6P: // global
           I64[Sp - 8] = block_c9T6G_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9T6W; else goto c9T6H;
       u9T6W: // global
           call _c9T6G(R1) args: 0, res: 0, upd: 0;
       c9T6H: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9T6G() //  [R1]
         { info_tbl: [(c9T6G,
                       label: block_c9T6G_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T6G: // global
           if (I32[I64[R1 - 1] + 20] == 2 :: W32) goto c9T6L; else goto c9T6K;
       c9T6L: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9T6K: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.188557357 UTC

[section ""data" . System.IO.Error.isFullErrorType_closure" {
     System.IO.Error.isFullErrorType_closure:
         const System.IO.Error.isFullErrorType_info;
 },
 System.IO.Error.isFullErrorType_entry() //  [R2]
         { info_tbl: [(c9T7k,
                       label: System.IO.Error.isFullErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T7k: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9T7l; else goto c9T7m;
       c9T7l: // global
           R2 = R2;
           R1 = System.IO.Error.isFullErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9T7m: // global
           I64[Sp - 8] = block_c9T7d_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9T7t; else goto c9T7e;
       u9T7t: // global
           call _c9T7d(R1) args: 0, res: 0, upd: 0;
       c9T7e: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9T7d() //  [R1]
         { info_tbl: [(c9T7d,
                       label: block_c9T7d_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T7d: // global
           if (I32[I64[R1 - 1] + 20] == 3 :: W32) goto c9T7i; else goto c9T7h;
       c9T7i: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9T7h: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.194278154 UTC

[section ""data" . System.IO.Error.isEOFErrorType_closure" {
     System.IO.Error.isEOFErrorType_closure:
         const System.IO.Error.isEOFErrorType_info;
 },
 System.IO.Error.isEOFErrorType_entry() //  [R2]
         { info_tbl: [(c9T7R,
                       label: System.IO.Error.isEOFErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T7R: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9T7S; else goto c9T7T;
       c9T7S: // global
           R2 = R2;
           R1 = System.IO.Error.isEOFErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9T7T: // global
           I64[Sp - 8] = block_c9T7K_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9T80; else goto c9T7L;
       u9T80: // global
           call _c9T7K(R1) args: 0, res: 0, upd: 0;
       c9T7L: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9T7K() //  [R1]
         { info_tbl: [(c9T7K,
                       label: block_c9T7K_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T7K: // global
           if (I32[I64[R1 - 1] + 20] == 4 :: W32) goto c9T7P; else goto c9T7O;
       c9T7P: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9T7O: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.200091865 UTC

[section ""data" . System.IO.Error.isIllegalOperationErrorType_closure" {
     System.IO.Error.isIllegalOperationErrorType_closure:
         const System.IO.Error.isIllegalOperationErrorType_info;
 },
 System.IO.Error.isIllegalOperationErrorType_entry() //  [R2]
         { info_tbl: [(c9T8o,
                       label: System.IO.Error.isIllegalOperationErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T8o: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9T8p; else goto c9T8q;
       c9T8p: // global
           R2 = R2;
           R1 = System.IO.Error.isIllegalOperationErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9T8q: // global
           I64[Sp - 8] = block_c9T8h_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9T8x; else goto c9T8i;
       u9T8x: // global
           call _c9T8h(R1) args: 0, res: 0, upd: 0;
       c9T8i: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9T8h() //  [R1]
         { info_tbl: [(c9T8h,
                       label: block_c9T8h_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T8h: // global
           if (I32[I64[R1 - 1] + 20] == 5 :: W32) goto c9T8m; else goto c9T8l;
       c9T8m: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9T8l: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.205923805 UTC

[section ""data" . System.IO.Error.isPermissionErrorType_closure" {
     System.IO.Error.isPermissionErrorType_closure:
         const System.IO.Error.isPermissionErrorType_info;
 },
 System.IO.Error.isPermissionErrorType_entry() //  [R2]
         { info_tbl: [(c9T8V,
                       label: System.IO.Error.isPermissionErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T8V: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9T8W; else goto c9T8X;
       c9T8W: // global
           R2 = R2;
           R1 = System.IO.Error.isPermissionErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9T8X: // global
           I64[Sp - 8] = block_c9T8O_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9T94; else goto c9T8P;
       u9T94: // global
           call _c9T8O(R1) args: 0, res: 0, upd: 0;
       c9T8P: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9T8O() //  [R1]
         { info_tbl: [(c9T8O,
                       label: block_c9T8O_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T8O: // global
           if (I32[I64[R1 - 1] + 20] == 6 :: W32) goto c9T8T; else goto c9T8S;
       c9T8T: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9T8S: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.21196899 UTC

[section ""data" . System.IO.Error.isUserErrorType_closure" {
     System.IO.Error.isUserErrorType_closure:
         const System.IO.Error.isUserErrorType_info;
 },
 System.IO.Error.isUserErrorType_entry() //  [R2]
         { info_tbl: [(c9T9s,
                       label: System.IO.Error.isUserErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T9s: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9T9t; else goto c9T9u;
       c9T9t: // global
           R2 = R2;
           R1 = System.IO.Error.isUserErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9T9u: // global
           I64[Sp - 8] = block_c9T9l_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9T9B; else goto c9T9m;
       u9T9B: // global
           call _c9T9l(R1) args: 0, res: 0, upd: 0;
       c9T9m: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9T9l() //  [R1]
         { info_tbl: [(c9T9l,
                       label: block_c9T9l_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T9l: // global
           if (I32[I64[R1 - 1] + 20] == 7 :: W32) goto c9T9q; else goto c9T9p;
       c9T9q: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9T9p: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.217508994 UTC

[section ""data" . System.IO.Error.ioeGetErrorType_closure" {
     System.IO.Error.ioeGetErrorType_closure:
         const System.IO.Error.ioeGetErrorType_info;
 },
 System.IO.Error.ioeGetErrorType_entry() //  [R2]
         { info_tbl: [(c9T9S,
                       label: System.IO.Error.ioeGetErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9T9S: // global
           R2 = R2;
           call GHC.IO.Exception.ioe_type_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.22104654 UTC

[section ""data" . System.IO.Error.isUserError_closure" {
     System.IO.Error.isUserError_closure:
         const System.IO.Error.isUserError_info;
 },
 System.IO.Error.isUserError_entry() //  [R2]
         { info_tbl: [(c9Ta6,
                       label: System.IO.Error.isUserError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Ta6: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9Ta7; else goto c9Ta8;
       c9Ta7: // global
           R2 = R2;
           R1 = System.IO.Error.isUserError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9Ta8: // global
           I64[Sp - 8] = block_c9Ta3_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Taq; else goto c9Ta4;
       u9Taq: // global
           call _c9Ta3(R1) args: 0, res: 0, upd: 0;
       c9Ta4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9Ta3() //  [R1]
         { info_tbl: [(c9Ta3,
                       label: block_c9Ta3_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Ta3: // global
           I64[Sp] = block_c9Tab_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9Tap; else goto c9Tad;
       u9Tap: // global
           call _c9Tab(R1) args: 0, res: 0, upd: 0;
       c9Tad: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9Tab() //  [R1]
         { info_tbl: [(c9Tab,
                       label: block_c9Tab_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tab: // global
           if (I32[I64[R1 - 1] + 20] == 7 :: W32) goto c9Tan; else goto c9Taj;
       c9Tan: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9Taj: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.228415197 UTC

[section ""data" . System.IO.Error.isPermissionError_closure" {
     System.IO.Error.isPermissionError_closure:
         const System.IO.Error.isPermissionError_info;
 },
 System.IO.Error.isPermissionError_entry() //  [R2]
         { info_tbl: [(c9TaO,
                       label: System.IO.Error.isPermissionError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TaO: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9TaP; else goto c9TaQ;
       c9TaP: // global
           R2 = R2;
           R1 = System.IO.Error.isPermissionError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TaQ: // global
           I64[Sp - 8] = block_c9TaL_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Tb8; else goto c9TaM;
       u9Tb8: // global
           call _c9TaL(R1) args: 0, res: 0, upd: 0;
       c9TaM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TaL() //  [R1]
         { info_tbl: [(c9TaL,
                       label: block_c9TaL_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TaL: // global
           I64[Sp] = block_c9TaT_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9Tb7; else goto c9TaV;
       u9Tb7: // global
           call _c9TaT(R1) args: 0, res: 0, upd: 0;
       c9TaV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TaT() //  [R1]
         { info_tbl: [(c9TaT,
                       label: block_c9TaT_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TaT: // global
           if (I32[I64[R1 - 1] + 20] == 6 :: W32) goto c9Tb5; else goto c9Tb1;
       c9Tb5: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9Tb1: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.235711318 UTC

[section ""data" . System.IO.Error.isIllegalOperation_closure" {
     System.IO.Error.isIllegalOperation_closure:
         const System.IO.Error.isIllegalOperation_info;
 },
 System.IO.Error.isIllegalOperation_entry() //  [R2]
         { info_tbl: [(c9Tbw,
                       label: System.IO.Error.isIllegalOperation_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tbw: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9Tbx; else goto c9Tby;
       c9Tbx: // global
           R2 = R2;
           R1 = System.IO.Error.isIllegalOperation_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9Tby: // global
           I64[Sp - 8] = block_c9Tbt_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9TbQ; else goto c9Tbu;
       u9TbQ: // global
           call _c9Tbt(R1) args: 0, res: 0, upd: 0;
       c9Tbu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9Tbt() //  [R1]
         { info_tbl: [(c9Tbt,
                       label: block_c9Tbt_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tbt: // global
           I64[Sp] = block_c9TbB_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9TbP; else goto c9TbD;
       u9TbP: // global
           call _c9TbB(R1) args: 0, res: 0, upd: 0;
       c9TbD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TbB() //  [R1]
         { info_tbl: [(c9TbB,
                       label: block_c9TbB_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TbB: // global
           if (I32[I64[R1 - 1] + 20] == 5 :: W32) goto c9TbN; else goto c9TbJ;
       c9TbN: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9TbJ: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.243638125 UTC

[section ""data" . System.IO.Error.isEOFError_closure" {
     System.IO.Error.isEOFError_closure:
         const System.IO.Error.isEOFError_info;
 },
 System.IO.Error.isEOFError_entry() //  [R2]
         { info_tbl: [(c9Tce,
                       label: System.IO.Error.isEOFError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tce: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9Tcf; else goto c9Tcg;
       c9Tcf: // global
           R2 = R2;
           R1 = System.IO.Error.isEOFError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9Tcg: // global
           I64[Sp - 8] = block_c9Tcb_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Tcy; else goto c9Tcc;
       u9Tcy: // global
           call _c9Tcb(R1) args: 0, res: 0, upd: 0;
       c9Tcc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9Tcb() //  [R1]
         { info_tbl: [(c9Tcb,
                       label: block_c9Tcb_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tcb: // global
           I64[Sp] = block_c9Tcj_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9Tcx; else goto c9Tcl;
       u9Tcx: // global
           call _c9Tcj(R1) args: 0, res: 0, upd: 0;
       c9Tcl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9Tcj() //  [R1]
         { info_tbl: [(c9Tcj,
                       label: block_c9Tcj_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tcj: // global
           if (I32[I64[R1 - 1] + 20] == 4 :: W32) goto c9Tcv; else goto c9Tcr;
       c9Tcv: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9Tcr: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.251259455 UTC

[section ""data" . System.IO.Error.isFullError_closure" {
     System.IO.Error.isFullError_closure:
         const System.IO.Error.isFullError_info;
 },
 System.IO.Error.isFullError_entry() //  [R2]
         { info_tbl: [(c9TcW,
                       label: System.IO.Error.isFullError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TcW: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9TcX; else goto c9TcY;
       c9TcX: // global
           R2 = R2;
           R1 = System.IO.Error.isFullError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TcY: // global
           I64[Sp - 8] = block_c9TcT_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Tdg; else goto c9TcU;
       u9Tdg: // global
           call _c9TcT(R1) args: 0, res: 0, upd: 0;
       c9TcU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TcT() //  [R1]
         { info_tbl: [(c9TcT,
                       label: block_c9TcT_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TcT: // global
           I64[Sp] = block_c9Td1_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9Tdf; else goto c9Td3;
       u9Tdf: // global
           call _c9Td1(R1) args: 0, res: 0, upd: 0;
       c9Td3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9Td1() //  [R1]
         { info_tbl: [(c9Td1,
                       label: block_c9Td1_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Td1: // global
           if (I32[I64[R1 - 1] + 20] == 3 :: W32) goto c9Tdd; else goto c9Td9;
       c9Tdd: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9Td9: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.259124195 UTC

[section ""data" . System.IO.Error.isAlreadyInUseError_closure" {
     System.IO.Error.isAlreadyInUseError_closure:
         const System.IO.Error.isAlreadyInUseError_info;
 },
 System.IO.Error.isAlreadyInUseError_entry() //  [R2]
         { info_tbl: [(c9TdE,
                       label: System.IO.Error.isAlreadyInUseError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TdE: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9TdF; else goto c9TdG;
       c9TdF: // global
           R2 = R2;
           R1 = System.IO.Error.isAlreadyInUseError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TdG: // global
           I64[Sp - 8] = block_c9TdB_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9TdY; else goto c9TdC;
       u9TdY: // global
           call _c9TdB(R1) args: 0, res: 0, upd: 0;
       c9TdC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TdB() //  [R1]
         { info_tbl: [(c9TdB,
                       label: block_c9TdB_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TdB: // global
           I64[Sp] = block_c9TdJ_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9TdX; else goto c9TdL;
       u9TdX: // global
           call _c9TdJ(R1) args: 0, res: 0, upd: 0;
       c9TdL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TdJ() //  [R1]
         { info_tbl: [(c9TdJ,
                       label: block_c9TdJ_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TdJ: // global
           if (I32[I64[R1 - 1] + 20] == 2 :: W32) goto c9TdV; else goto c9TdR;
       c9TdV: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9TdR: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.266528929 UTC

[section ""data" . System.IO.Error.isDoesNotExistError_closure" {
     System.IO.Error.isDoesNotExistError_closure:
         const System.IO.Error.isDoesNotExistError_info;
 },
 System.IO.Error.isDoesNotExistError_entry() //  [R2]
         { info_tbl: [(c9Tem,
                       label: System.IO.Error.isDoesNotExistError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tem: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9Ten; else goto c9Teo;
       c9Ten: // global
           R2 = R2;
           R1 = System.IO.Error.isDoesNotExistError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9Teo: // global
           I64[Sp - 8] = block_c9Tej_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9TeG; else goto c9Tek;
       u9TeG: // global
           call _c9Tej(R1) args: 0, res: 0, upd: 0;
       c9Tek: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9Tej() //  [R1]
         { info_tbl: [(c9Tej,
                       label: block_c9Tej_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tej: // global
           I64[Sp] = block_c9Ter_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9TeF; else goto c9Tet;
       u9TeF: // global
           call _c9Ter(R1) args: 0, res: 0, upd: 0;
       c9Tet: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9Ter() //  [R1]
         { info_tbl: [(c9Ter,
                       label: block_c9Ter_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Ter: // global
           if (I32[I64[R1 - 1] + 20] == 1 :: W32) goto c9TeD; else goto c9Tez;
       c9TeD: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9Tez: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.273936646 UTC

[section ""data" . System.IO.Error.isAlreadyExistsError_closure" {
     System.IO.Error.isAlreadyExistsError_closure:
         const System.IO.Error.isAlreadyExistsError_info;
 },
 System.IO.Error.isAlreadyExistsError_entry() //  [R2]
         { info_tbl: [(c9Tf4,
                       label: System.IO.Error.isAlreadyExistsError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tf4: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9Tf5; else goto c9Tf6;
       c9Tf5: // global
           R2 = R2;
           R1 = System.IO.Error.isAlreadyExistsError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9Tf6: // global
           I64[Sp - 8] = block_c9Tf1_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Tfo; else goto c9Tf2;
       u9Tfo: // global
           call _c9Tf1(R1) args: 0, res: 0, upd: 0;
       c9Tf2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9Tf1() //  [R1]
         { info_tbl: [(c9Tf1,
                       label: block_c9Tf1_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tf1: // global
           I64[Sp] = block_c9Tf9_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9Tfn; else goto c9Tfb;
       u9Tfn: // global
           call _c9Tf9(R1) args: 0, res: 0, upd: 0;
       c9Tfb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9Tf9() //  [R1]
         { info_tbl: [(c9Tf9,
                       label: block_c9Tf9_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tf9: // global
           if (I32[I64[R1 - 1] + 20] == 0 :: W32) goto c9Tfl; else goto c9Tfh;
       c9Tfl: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9Tfh: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.281500714 UTC

[section ""data" . System.IO.Error.ioeGetLocation_closure" {
     System.IO.Error.ioeGetLocation_closure:
         const System.IO.Error.ioeGetLocation_info;
 },
 System.IO.Error.ioeGetLocation_entry() //  [R2]
         { info_tbl: [(c9TfJ,
                       label: System.IO.Error.ioeGetLocation_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TfJ: // global
           R2 = R2;
           call GHC.IO.Exception.ioe_location_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.284656761 UTC

[section ""data" . System.IO.Error.ioeGetHandle_closure" {
     System.IO.Error.ioeGetHandle_closure:
         const System.IO.Error.ioeGetHandle_info;
 },
 System.IO.Error.ioeGetHandle_entry() //  [R2]
         { info_tbl: [(c9TfU,
                       label: System.IO.Error.ioeGetHandle_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TfU: // global
           R2 = R2;
           call GHC.IO.Exception.ioe_handle_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.287713438 UTC

[section ""data" . System.IO.Error.ioeGetFileName_closure" {
     System.IO.Error.ioeGetFileName_closure:
         const System.IO.Error.ioeGetFileName_info;
 },
 System.IO.Error.ioeGetFileName_entry() //  [R2]
         { info_tbl: [(c9Tg5,
                       label: System.IO.Error.ioeGetFileName_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tg5: // global
           R2 = R2;
           call GHC.IO.Exception.ioe_filename_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.29195834 UTC

[section ""data" . System.IO.Error.ioeSetErrorType_closure" {
     System.IO.Error.ioeSetErrorType_closure:
         const System.IO.Error.ioeSetErrorType_info;
 },
 System.IO.Error.ioeSetErrorType_entry() //  [R2, R3]
         { info_tbl: [(c9Tgj,
                       label: System.IO.Error.ioeSetErrorType_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tgj: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9Tgn; else goto c9Tgo;
       c9Tgn: // global
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.ioeSetErrorType_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9Tgo: // global
           I64[Sp - 16] = block_c9Tgg_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9Tgs; else goto c9Tgh;
       u9Tgs: // global
           call _c9Tgg(R1) args: 0, res: 0, upd: 0;
       c9Tgh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9Tgg() //  [R1]
         { info_tbl: [(c9Tgg,
                       label: block_c9Tgg_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tgg: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9Tgr; else goto c9Tgq;
       c9Tgr: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9Tgq: // global
           _s9SC4::P64 = P64[R1 + 7];
           _s9SC6::P64 = P64[R1 + 23];
           _s9SC7::P64 = P64[R1 + 31];
           _s9SC8::P64 = P64[R1 + 39];
           _s9SC9::P64 = P64[R1 + 47];
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = _s9SC4::P64;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s9SC6::P64;
           P64[Hp - 16] = _s9SC7::P64;
           P64[Hp - 8] = _s9SC8::P64;
           P64[Hp] = _s9SC9::P64;
           R1 = Hp - 47;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.298082322 UTC

[section ""data" . System.IO.Error.ioeSetErrorString_closure" {
     System.IO.Error.ioeSetErrorString_closure:
         const System.IO.Error.ioeSetErrorString_info;
 },
 System.IO.Error.ioeSetErrorString_entry() //  [R2, R3]
         { info_tbl: [(c9TgL,
                       label: System.IO.Error.ioeSetErrorString_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TgL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9TgP; else goto c9TgQ;
       c9TgP: // global
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.ioeSetErrorString_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9TgQ: // global
           I64[Sp - 16] = block_c9TgI_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9TgU; else goto c9TgJ;
       u9TgU: // global
           call _c9TgI(R1) args: 0, res: 0, upd: 0;
       c9TgJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TgI() //  [R1]
         { info_tbl: [(c9TgI,
                       label: block_c9TgI_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TgI: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9TgT; else goto c9TgS;
       c9TgT: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9TgS: // global
           _s9SCd::P64 = P64[R1 + 7];
           _s9SCe::P64 = P64[R1 + 15];
           _s9SCf::P64 = P64[R1 + 23];
           _s9SCh::P64 = P64[R1 + 39];
           _s9SCi::P64 = P64[R1 + 47];
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = _s9SCd::P64;
           P64[Hp - 32] = _s9SCe::P64;
           P64[Hp - 24] = _s9SCf::P64;
           P64[Hp - 16] = P64[Sp + 8];
           P64[Hp - 8] = _s9SCh::P64;
           P64[Hp] = _s9SCi::P64;
           R1 = Hp - 47;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.304972213 UTC

[section ""data" . System.IO.Error.ioeSetLocation_closure" {
     System.IO.Error.ioeSetLocation_closure:
         const System.IO.Error.ioeSetLocation_info;
 },
 System.IO.Error.ioeSetLocation_entry() //  [R2, R3]
         { info_tbl: [(c9Thd,
                       label: System.IO.Error.ioeSetLocation_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Thd: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9Thh; else goto c9Thi;
       c9Thh: // global
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.ioeSetLocation_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9Thi: // global
           I64[Sp - 16] = block_c9Tha_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9Thm; else goto c9Thb;
       u9Thm: // global
           call _c9Tha(R1) args: 0, res: 0, upd: 0;
       c9Thb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9Tha() //  [R1]
         { info_tbl: [(c9Tha,
                       label: block_c9Tha_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tha: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9Thl; else goto c9Thk;
       c9Thl: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9Thk: // global
           _s9SCm::P64 = P64[R1 + 7];
           _s9SCn::P64 = P64[R1 + 15];
           _s9SCp::P64 = P64[R1 + 31];
           _s9SCq::P64 = P64[R1 + 39];
           _s9SCr::P64 = P64[R1 + 47];
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = _s9SCm::P64;
           P64[Hp - 32] = _s9SCn::P64;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _s9SCp::P64;
           P64[Hp - 8] = _s9SCq::P64;
           P64[Hp] = _s9SCr::P64;
           R1 = Hp - 47;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.31106366 UTC

[section ""data" . System.IO.Error.ioeSetHandle_closure" {
     System.IO.Error.ioeSetHandle_closure:
         const System.IO.Error.ioeSetHandle_info;
 },
 System.IO.Error.ioeSetHandle_entry() //  [R2, R3]
         { info_tbl: [(c9ThF,
                       label: System.IO.Error.ioeSetHandle_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ThF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9ThK; else goto c9ThL;
       c9ThK: // global
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.ioeSetHandle_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9ThL: // global
           I64[Sp - 16] = block_c9ThC_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9ThP; else goto c9ThD;
       u9ThP: // global
           call _c9ThC(R1) args: 0, res: 0, upd: 0;
       c9ThD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ThC() //  [R1]
         { info_tbl: [(c9ThC,
                       label: block_c9ThC_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ThC: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c9ThO; else goto c9ThN;
       c9ThO: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9ThN: // global
           _s9SCw::P64 = P64[R1 + 15];
           _s9SCx::P64 = P64[R1 + 23];
           _s9SCy::P64 = P64[R1 + 31];
           _s9SCz::P64 = P64[R1 + 39];
           _s9SCA::P64 = P64[R1 + 47];
           I64[Hp - 64] = GHC.Base.Just_con_info;
           P64[Hp - 56] = P64[Sp + 8];
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = Hp - 62;
           P64[Hp - 32] = _s9SCw::P64;
           P64[Hp - 24] = _s9SCx::P64;
           P64[Hp - 16] = _s9SCy::P64;
           P64[Hp - 8] = _s9SCz::P64;
           P64[Hp] = _s9SCA::P64;
           R1 = Hp - 47;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.317988956 UTC

[section ""data" . System.IO.Error.ioeSetFileName_closure" {
     System.IO.Error.ioeSetFileName_closure:
         const System.IO.Error.ioeSetFileName_info;
 },
 System.IO.Error.ioeSetFileName_entry() //  [R2, R3]
         { info_tbl: [(c9Ti9,
                       label: System.IO.Error.ioeSetFileName_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Ti9: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9Tie; else goto c9Tif;
       c9Tie: // global
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.ioeSetFileName_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9Tif: // global
           I64[Sp - 16] = block_c9Ti6_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9Tij; else goto c9Ti7;
       u9Tij: // global
           call _c9Ti6(R1) args: 0, res: 0, upd: 0;
       c9Ti7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9Ti6() //  [R1]
         { info_tbl: [(c9Ti6,
                       label: block_c9Ti6_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Ti6: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c9Tii; else goto c9Tih;
       c9Tii: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9Tih: // global
           _s9SCF::P64 = P64[R1 + 7];
           _s9SCG::P64 = P64[R1 + 15];
           _s9SCH::P64 = P64[R1 + 23];
           _s9SCI::P64 = P64[R1 + 31];
           _s9SCJ::P64 = P64[R1 + 39];
           I64[Hp - 64] = GHC.Base.Just_con_info;
           P64[Hp - 56] = P64[Sp + 8];
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = _s9SCF::P64;
           P64[Hp - 32] = _s9SCG::P64;
           P64[Hp - 24] = _s9SCH::P64;
           P64[Hp - 16] = _s9SCI::P64;
           P64[Hp - 8] = _s9SCJ::P64;
           P64[Hp] = Hp - 62;
           R1 = Hp - 47;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.3241149 UTC

[section ""data" . System.IO.Error.modifyIOError2_closure" {
     System.IO.Error.modifyIOError2_closure:
         const System.IO.Error.modifyIOError2_info;
         const 0;
 },
 sat_s9SCQ_entry() //  [R1]
         { info_tbl: [(c9TiF,
                       label: sat_s9SCQ_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TiF: // global
           _s9SCQ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9TiG; else goto c9TiH;
       c9TiH: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9TiJ; else goto c9TiI;
       c9TiJ: // global
           HpAlloc = 32;
           goto c9TiG;
       c9TiG: // global
           R1 = _s9SCQ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9TiI: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9SCQ::P64;
           _s9SCM::P64 = P64[_s9SCQ::P64 + 16];
           _s9SCN::P64 = P64[_s9SCQ::P64 + 24];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _s9SCN::P64;
           P64[Hp] = _s9SCM::P64;
           R2 = Hp - 24;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 System.IO.Error.modifyIOError2_entry() //  [R2, R3]
         { info_tbl: [(c9TiK,
                       label: System.IO.Error.modifyIOError2_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TiK: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9TiO; else goto c9TiN;
       c9TiO: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.modifyIOError2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9TiN: // global
           I64[Hp - 24] = sat_s9SCQ_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 24;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.330707508 UTC

[section ""data" . System.IO.Error.modifyIOError1_closure" {
     System.IO.Error.modifyIOError1_closure:
         const System.IO.Error.modifyIOError1_info;
         const 0;
 },
 sat_s9SD0_entry() //  [R1]
         { info_tbl: [(c9Tjo,
                       label: sat_s9SD0_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tjo: // global
           R1 = P64[R1 + 7];
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9SD2_entry() //  [R1, R2]
         { info_tbl: [(c9Tjr,
                       label: sat_s9SD2_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tjr: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9Tjs; else goto c9Tjt;
       c9Tjs: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9Tjt: // global
           I64[Sp - 16] = block_c9Tj6_info;
           _s9SCR::P64 = P64[R1 + 7];
           R1 = R2;
           P64[Sp - 8] = _s9SCR::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9TjG; else goto c9Tj7;
       u9TjG: // global
           call _c9Tj6(R1) args: 0, res: 0, upd: 0;
       c9Tj7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9Tj6() //  [R1]
         { info_tbl: [(c9Tj6,
                       label: block_c9Tj6_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tj6: // global
           I64[Sp - 16] = block_c9Tjb_info;
           R2 = P64[R1 + 7];
           P64[Sp - 8] = P64[R1 + 15];
           P64[Sp] = R1;
           Sp = Sp - 16;
           call GHC.Exception.$p1Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9Tjb() //  [R1]
         { info_tbl: [(c9Tjb,
                       label: block_c9Tjb_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tjb: // global
           I64[Sp] = block_c9Tjf_info;
           R3 = GHC.IO.Exception.$fExceptionIOException4_closure;
           R2 = R1;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9Tjf() //  [R1]
         { info_tbl: [(c9Tjf,
                       label: block_c9Tjf_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tjf: // global
           if (R1 & 7 == 1) goto c9Tjx; else goto c9TjE;
       c9Tjx: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9TjA; else goto c9Tjz;
       c9TjA: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9Tjz: // global
           I64[Hp - 8] = sat_s9SD0_info;
           P64[Hp] = P64[Sp + 16];
           R1 = Hp - 7;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9TjE: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 8];
           R1 = System.IO.Error.modifyIOError2_closure+3;
           Sp = Sp + 32;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 System.IO.Error.modifyIOError1_entry() //  [R2, R3]
         { info_tbl: [(c9TjH,
                       label: System.IO.Error.modifyIOError1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TjH: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9TjL; else goto c9TjK;
       c9TjL: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.modifyIOError1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9TjK: // global
           I64[Hp - 8] = sat_s9SD2_info;
           P64[Hp] = R2;
           R2 = Hp - 7;
           R1 = R3;
           call stg_catch#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.343119998 UTC

[section ""data" . System.IO.Error.modifyIOError_closure" {
     System.IO.Error.modifyIOError_closure:
         const System.IO.Error.modifyIOError_info;
         const 0;
 },
 System.IO.Error.modifyIOError_entry() //  [R2, R3]
         { info_tbl: [(c9Tkg,
                       label: System.IO.Error.modifyIOError_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tkg: // global
           R3 = R3;
           R2 = R2;
           call System.IO.Error.modifyIOError1_entry(R3,
                                                     R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.347202425 UTC

[section ""data" . System.IO.Error.catchIOError1_closure" {
     System.IO.Error.catchIOError1_closure:
         const System.IO.Error.catchIOError1_info;
         const 0;
 },
 sat_s9SDc_entry() //  [R1]
         { info_tbl: [(c9TkO,
                       label: sat_s9SDc_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TkO: // global
           R1 = P64[R1 + 7];
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9SDd_entry() //  [R1, R2]
         { info_tbl: [(c9TkR,
                       label: sat_s9SDd_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TkR: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9TkS; else goto c9TkT;
       c9TkS: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TkT: // global
           I64[Sp - 16] = block_c9Tkw_info;
           _s9SD4::P64 = P64[R1 + 7];
           R1 = R2;
           P64[Sp - 8] = _s9SD4::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9Tl6; else goto c9Tkx;
       u9Tl6: // global
           call _c9Tkw(R1) args: 0, res: 0, upd: 0;
       c9Tkx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9Tkw() //  [R1]
         { info_tbl: [(c9Tkw,
                       label: block_c9Tkw_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tkw: // global
           I64[Sp - 16] = block_c9TkB_info;
           R2 = P64[R1 + 7];
           P64[Sp - 8] = P64[R1 + 15];
           P64[Sp] = R1;
           Sp = Sp - 16;
           call GHC.Exception.$p1Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9TkB() //  [R1]
         { info_tbl: [(c9TkB,
                       label: block_c9TkB_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TkB: // global
           I64[Sp] = block_c9TkF_info;
           R3 = GHC.IO.Exception.$fExceptionIOException4_closure;
           R2 = R1;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9TkF() //  [R1]
         { info_tbl: [(c9TkF,
                       label: block_c9TkF_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TkF: // global
           if (R1 & 7 == 1) goto c9TkX; else goto c9Tl4;
       c9TkX: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9Tl0; else goto c9TkZ;
       c9Tl0: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9TkZ: // global
           I64[Hp - 8] = sat_s9SDc_info;
           P64[Hp] = P64[Sp + 16];
           R1 = Hp - 7;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9Tl4: // global
           R2 = P64[Sp + 8];
           R1 = P64[Sp + 24];
           Sp = Sp + 32;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 System.IO.Error.catchIOError1_entry() //  [R2, R3]
         { info_tbl: [(c9Tl7,
                       label: System.IO.Error.catchIOError1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tl7: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9Tlb; else goto c9Tla;
       c9Tlb: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.catchIOError1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9Tla: // global
           I64[Hp - 8] = sat_s9SDd_info;
           P64[Hp] = R3;
           _s9SD3::P64 = R2;
           R2 = Hp - 7;
           R1 = _s9SD3::P64;
           call stg_catch#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.360376867 UTC

[section ""data" . System.IO.Error.catchIOError_closure" {
     System.IO.Error.catchIOError_closure:
         const System.IO.Error.catchIOError_info;
         const 0;
 },
 System.IO.Error.catchIOError_entry() //  [R2, R3]
         { info_tbl: [(c9TlG,
                       label: System.IO.Error.catchIOError_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TlG: // global
           R3 = R3;
           R2 = R2;
           call System.IO.Error.catchIOError1_entry(R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.363669019 UTC

[section ""cstring" . System.IO.Error.$trModule4_bytes" {
     System.IO.Error.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.365361479 UTC

[section ""data" . System.IO.Error.$trModule3_closure" {
     System.IO.Error.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.IO.Error.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.367094535 UTC

[section ""cstring" . System.IO.Error.$trModule2_bytes" {
     System.IO.Error.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,73,79,46,69,114,114,111,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.368713786 UTC

[section ""data" . System.IO.Error.$trModule1_closure" {
     System.IO.Error.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.IO.Error.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.370514278 UTC

[section ""data" . System.IO.Error.$trModule_closure" {
     System.IO.Error.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.IO.Error.$trModule3_closure+1;
         const System.IO.Error.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.372687068 UTC

[section ""data" . System.IO.Error.ioeGetErrorString_closure" {
     System.IO.Error.ioeGetErrorString_closure:
         const System.IO.Error.ioeGetErrorString_info;
         const 0;
 },
 System.IO.Error.ioeGetErrorString_entry() //  [R2]
         { info_tbl: [(c9TlZ,
                       label: System.IO.Error.ioeGetErrorString_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TlZ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9Tm0; else goto c9Tm1;
       c9Tm0: // global
           R2 = R2;
           R1 = System.IO.Error.ioeGetErrorString_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9Tm1: // global
           I64[Sp - 8] = block_c9TlW_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Tmj; else goto c9TlX;
       u9Tmj: // global
           call _c9TlW(R1) args: 0, res: 0, upd: 0;
       c9TlX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TlW() //  [R1]
         { info_tbl: [(c9TlW,
                       label: block_c9TlW_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TlW: // global
           I64[Sp - 8] = block_c9Tm4_info;
           _s9SDj::P64 = P64[R1 + 31];
           R1 = P64[R1 + 15];
           P64[Sp] = _s9SDj::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Tmi; else goto c9Tm6;
       u9Tmi: // global
           call _c9Tm4(R1) args: 0, res: 0, upd: 0;
       c9Tm6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9Tm4() //  [R1]
         { info_tbl: [(c9Tm4,
                       label: block_c9Tm4_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tm4: // global
           if (I32[I64[R1 - 1] + 20] == 7 :: W32) goto c9Tmg; else goto c9Tmc;
       c9Tmg: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9Tmc: // global
           R3 = GHC.Types.[]_closure+1;
           R2 = R1;
           Sp = Sp + 16;
           call GHC.IO.Exception.$w$cshowsPrec4_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.380999972 UTC

[section ""data" . System.IO.Error.annotateIOError_closure" {
     System.IO.Error.annotateIOError_closure:
         const System.IO.Error.annotateIOError_info;
 },
 sat_s9SDD_entry() //  [R1]
         { info_tbl: [(c9TmU,
                       label: sat_s9SDD_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TmU: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9TmV; else goto c9TmW;
       c9TmV: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9TmW: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c9TmN_info;
           _s9SDx::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s9SDx::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9Tn3; else goto c9TmO;
       u9Tn3: // global
           call _c9TmN(R1) args: 0, res: 0, upd: 0;
       c9TmO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9TmN() //  [R1]
         { info_tbl: [(c9TmN,
                       label: block_c9TmN_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TmN: // global
           if (R1 & 7 == 1) goto c9TmR; else goto c9TmS;
       c9TmR: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
       c9TmS: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9SDA_entry() //  [R1]
         { info_tbl: [(c9Tnf,
                       label: sat_s9SDA_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tnf: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9Tng; else goto c9Tnh;
       c9Tng: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9Tnh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c9Tn8_info;
           _s9SDs::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s9SDs::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9Tno; else goto c9Tn9;
       u9Tno: // global
           call _c9Tn8(R1) args: 0, res: 0, upd: 0;
       c9Tn9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9Tn8() //  [R1]
         { info_tbl: [(c9Tn8,
                       label: block_c9Tn8_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tn8: // global
           if (R1 & 7 == 1) goto c9Tnc; else goto c9Tnd;
       c9Tnc: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
       c9Tnd: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 System.IO.Error.annotateIOError_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c9Tnp,
                       label: System.IO.Error.annotateIOError_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tnp: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9Tnr; else goto c9Tns;
       c9Tnr: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.annotateIOError_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9Tns: // global
           I64[Sp - 32] = block_c9TmE_info;
           R1 = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9Tnw; else goto c9TmF;
       u9Tnw: // global
           call _c9TmE(R1) args: 0, res: 0, upd: 0;
       c9TmF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TmE() //  [R1]
         { info_tbl: [(c9TmE,
                       label: block_c9TmE_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TmE: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto c9Tnv; else goto c9Tnu;
       c9Tnv: // global
           HpAlloc = 120;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9Tnu: // global
           _s9SDs::P64 = P64[R1 + 7];
           _s9SDt::P64 = P64[R1 + 15];
           _s9SDv::P64 = P64[R1 + 31];
           _s9SDw::P64 = P64[R1 + 39];
           _s9SDx::P64 = P64[R1 + 47];
           I64[Hp - 112] = sat_s9SDD_info;
           P64[Hp - 96] = P64[Sp + 24];
           P64[Hp - 88] = _s9SDx::P64;
           I64[Hp - 80] = sat_s9SDA_info;
           P64[Hp - 64] = P64[Sp + 16];
           P64[Hp - 56] = _s9SDs::P64;
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = Hp - 80;
           P64[Hp - 32] = _s9SDt::P64;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _s9SDv::P64;
           P64[Hp - 8] = _s9SDw::P64;
           P64[Hp] = Hp - 112;
           R1 = Hp - 47;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.396123614 UTC

[section ""relreadonly" . S9SEc_srt" {
     S9SEc_srt:
         const Data.Typeable.Internal.sameTypeRep_closure;
         const GHC.IO.Exception.$fExceptionIOException4_closure;
         const System.IO.Error.tryIOError2_closure;
         const System.IO.Error.tryIOError1_closure;
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const System.IO.Error.modifyIOError2_closure;
         const System.IO.Error.modifyIOError1_closure;
         const System.IO.Error.catchIOError1_closure;
         const GHC.IO.Exception.$w$cshowsPrec4_closure;
         const System.IO.Error.ioeGetErrorString_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.882106352 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:04:58.883795332 UTC

[section ""data" . System.IO.Error.tryIOError2_closure" {
     System.IO.Error.tryIOError2_closure:
         const System.IO.Error.tryIOError2_info;
         const 0;
 },
 System.IO.Error.tryIOError2_entry() //  [R2]
         { info_tbl: [(c9TrJ,
                       label: System.IO.Error.tryIOError2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TrJ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9TrN; else goto c9TrO;
       c9TrN: // global
           R2 = R2;
           R1 = System.IO.Error.tryIOError2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TrO: // global
           I64[Sp - 8] = block_c9TrG_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Ts9; else goto c9TrH;
       u9Ts9: // global
           call _c9TrG(R1) args: 0, res: 0, upd: 0;
       c9TrH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TrG() //  [R1]
         { info_tbl: [(c9TrG,
                       label: block_c9TrG_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TrG: // global
           I64[Sp - 16] = block_c9TrM_info;
           R2 = P64[R1 + 7];
           P64[Sp - 8] = P64[R1 + 15];
           P64[Sp] = R1;
           Sp = Sp - 16;
           call GHC.Exception.$p1Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9TrM() //  [R1]
         { info_tbl: [(c9TrM,
                       label: block_c9TrM_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TrM: // global
           I64[Sp] = block_c9TrT_info;
           R3 = GHC.IO.Exception.$fExceptionIOException4_closure;
           R2 = R1;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9TrT() //  [R1]
         { info_tbl: [(c9TrT,
                       label: block_c9TrT_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TrT: // global
           if (R1 & 7 == 1) goto c9Ts0; else goto c9Ts4;
       c9Ts0: // global
           R1 = P64[Sp + 16];
           Sp = Sp + 24;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
       c9Ts4: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9Ts7; else goto c9Ts6;
       c9Ts7: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9Ts6: // global
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.89338143 UTC

[section ""data" . System.IO.Error.tryIOError1_closure" {
     System.IO.Error.tryIOError1_closure:
         const System.IO.Error.tryIOError1_info;
         const 0;
 },
 sat_s9Tou_entry() //  [R1]
         { info_tbl: [(c9TsL,
                       label: sat_s9Tou_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TsL: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9TsM; else goto c9TsN;
       c9TsM: // global
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9TsN: // global
           I64[Sp - 8] = block_c9TsI_info;
           R1 = P64[R1 + 7];
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TsI() //  [R1]
         { info_tbl: [(c9TsI,
                       label: block_c9TsI_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TsI: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9TsQ; else goto c9TsP;
       c9TsQ: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9TsP: // global
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.IO.Error.tryIOError1_entry() //  [R2]
         { info_tbl: [(c9TsR,
                       label: System.IO.Error.tryIOError1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TsR: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9TsV; else goto c9TsU;
       c9TsV: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = System.IO.Error.tryIOError1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TsU: // global
           I64[Hp - 8] = sat_s9Tou_info;
           P64[Hp] = R2;
           R2 = System.IO.Error.tryIOError2_closure+2;
           R1 = Hp - 7;
           call stg_catch#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.902619685 UTC

[section ""data" . System.IO.Error.tryIOError_closure" {
     System.IO.Error.tryIOError_closure:
         const System.IO.Error.tryIOError_info;
         const 0;
 },
 System.IO.Error.tryIOError_entry() //  [R2]
         { info_tbl: [(c9Ttf,
                       label: System.IO.Error.tryIOError_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Ttf: // global
           R2 = R2;
           call System.IO.Error.tryIOError1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.905966687 UTC

[section ""data" . System.IO.Error.mkIOError_closure" {
     System.IO.Error.mkIOError_closure:
         const System.IO.Error.mkIOError_info;
 },
 System.IO.Error.mkIOError_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c9Ttr,
                       label: System.IO.Error.mkIOError_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Ttr: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9Ttv; else goto c9Ttu;
       c9Ttv: // global
           HpAlloc = 56;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.mkIOError_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9Ttu: // global
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = R4;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           P64[Hp - 16] = GHC.Types.[]_closure+1;
           P64[Hp - 8] = GHC.Base.Nothing_closure+1;
           P64[Hp] = R5;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.910061191 UTC

[section ""data" . System.IO.Error.alreadyExistsErrorType_closure" {
     System.IO.Error.alreadyExistsErrorType_closure:
         const GHC.IO.Exception.AlreadyExists_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.911672178 UTC

[section ""data" . System.IO.Error.doesNotExistErrorType_closure" {
     System.IO.Error.doesNotExistErrorType_closure:
         const GHC.IO.Exception.NoSuchThing_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.913296245 UTC

[section ""data" . System.IO.Error.alreadyInUseErrorType_closure" {
     System.IO.Error.alreadyInUseErrorType_closure:
         const GHC.IO.Exception.ResourceBusy_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.914980491 UTC

[section ""data" . System.IO.Error.fullErrorType_closure" {
     System.IO.Error.fullErrorType_closure:
         const GHC.IO.Exception.ResourceExhausted_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.916557097 UTC

[section ""data" . System.IO.Error.eofErrorType_closure" {
     System.IO.Error.eofErrorType_closure:
         const GHC.IO.Exception.EOF_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.918245414 UTC

[section ""data" . System.IO.Error.illegalOperationErrorType_closure" {
     System.IO.Error.illegalOperationErrorType_closure:
         const GHC.IO.Exception.IllegalOperation_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.919904021 UTC

[section ""data" . System.IO.Error.permissionErrorType_closure" {
     System.IO.Error.permissionErrorType_closure:
         const GHC.IO.Exception.PermissionDenied_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.921984015 UTC

[section ""data" . System.IO.Error.userErrorType_closure" {
     System.IO.Error.userErrorType_closure:
         const GHC.IO.Exception.UserError_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.924063888 UTC

[section ""data" . System.IO.Error.isAlreadyExistsErrorType_closure" {
     System.IO.Error.isAlreadyExistsErrorType_closure:
         const System.IO.Error.isAlreadyExistsErrorType_info;
 },
 System.IO.Error.isAlreadyExistsErrorType_entry() //  [R2]
         { info_tbl: [(c9TtZ,
                       label: System.IO.Error.isAlreadyExistsErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TtZ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9Tu0; else goto c9Tu1;
       c9Tu0: // global
           R2 = R2;
           R1 = System.IO.Error.isAlreadyExistsErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9Tu1: // global
           I64[Sp - 8] = block_c9TtS_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Tu8; else goto c9TtT;
       u9Tu8: // global
           call _c9TtS(R1) args: 0, res: 0, upd: 0;
       c9TtT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TtS() //  [R1]
         { info_tbl: [(c9TtS,
                       label: block_c9TtS_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TtS: // global
           if (I32[I64[R1 - 1] + 20] == 0 :: W32) goto c9TtX; else goto c9TtW;
       c9TtX: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9TtW: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.930364334 UTC

[section ""data" . System.IO.Error.isDoesNotExistErrorType_closure" {
     System.IO.Error.isDoesNotExistErrorType_closure:
         const System.IO.Error.isDoesNotExistErrorType_info;
 },
 System.IO.Error.isDoesNotExistErrorType_entry() //  [R2]
         { info_tbl: [(c9Tuz,
                       label: System.IO.Error.isDoesNotExistErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tuz: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9TuA; else goto c9TuB;
       c9TuA: // global
           R2 = R2;
           R1 = System.IO.Error.isDoesNotExistErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TuB: // global
           I64[Sp - 8] = block_c9Tus_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9TuI; else goto c9Tut;
       u9TuI: // global
           call _c9Tus(R1) args: 0, res: 0, upd: 0;
       c9Tut: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9Tus() //  [R1]
         { info_tbl: [(c9Tus,
                       label: block_c9Tus_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tus: // global
           if (I32[I64[R1 - 1] + 20] == 1 :: W32) goto c9Tux; else goto c9Tuw;
       c9Tux: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9Tuw: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.936398931 UTC

[section ""data" . System.IO.Error.isAlreadyInUseErrorType_closure" {
     System.IO.Error.isAlreadyInUseErrorType_closure:
         const System.IO.Error.isAlreadyInUseErrorType_info;
 },
 System.IO.Error.isAlreadyInUseErrorType_entry() //  [R2]
         { info_tbl: [(c9Tv9,
                       label: System.IO.Error.isAlreadyInUseErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tv9: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9Tva; else goto c9Tvb;
       c9Tva: // global
           R2 = R2;
           R1 = System.IO.Error.isAlreadyInUseErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9Tvb: // global
           I64[Sp - 8] = block_c9Tv2_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Tvi; else goto c9Tv3;
       u9Tvi: // global
           call _c9Tv2(R1) args: 0, res: 0, upd: 0;
       c9Tv3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9Tv2() //  [R1]
         { info_tbl: [(c9Tv2,
                       label: block_c9Tv2_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tv2: // global
           if (I32[I64[R1 - 1] + 20] == 2 :: W32) goto c9Tv7; else goto c9Tv6;
       c9Tv7: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9Tv6: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.942144378 UTC

[section ""data" . System.IO.Error.isFullErrorType_closure" {
     System.IO.Error.isFullErrorType_closure:
         const System.IO.Error.isFullErrorType_info;
 },
 System.IO.Error.isFullErrorType_entry() //  [R2]
         { info_tbl: [(c9TvJ,
                       label: System.IO.Error.isFullErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TvJ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9TvK; else goto c9TvL;
       c9TvK: // global
           R2 = R2;
           R1 = System.IO.Error.isFullErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TvL: // global
           I64[Sp - 8] = block_c9TvC_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9TvS; else goto c9TvD;
       u9TvS: // global
           call _c9TvC(R1) args: 0, res: 0, upd: 0;
       c9TvD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TvC() //  [R1]
         { info_tbl: [(c9TvC,
                       label: block_c9TvC_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TvC: // global
           if (I32[I64[R1 - 1] + 20] == 3 :: W32) goto c9TvH; else goto c9TvG;
       c9TvH: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9TvG: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.947913488 UTC

[section ""data" . System.IO.Error.isEOFErrorType_closure" {
     System.IO.Error.isEOFErrorType_closure:
         const System.IO.Error.isEOFErrorType_info;
 },
 System.IO.Error.isEOFErrorType_entry() //  [R2]
         { info_tbl: [(c9Twj,
                       label: System.IO.Error.isEOFErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Twj: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9Twk; else goto c9Twl;
       c9Twk: // global
           R2 = R2;
           R1 = System.IO.Error.isEOFErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9Twl: // global
           I64[Sp - 8] = block_c9Twc_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Tws; else goto c9Twd;
       u9Tws: // global
           call _c9Twc(R1) args: 0, res: 0, upd: 0;
       c9Twd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9Twc() //  [R1]
         { info_tbl: [(c9Twc,
                       label: block_c9Twc_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Twc: // global
           if (I32[I64[R1 - 1] + 20] == 4 :: W32) goto c9Twh; else goto c9Twg;
       c9Twh: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9Twg: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.953579096 UTC

[section ""data" . System.IO.Error.isIllegalOperationErrorType_closure" {
     System.IO.Error.isIllegalOperationErrorType_closure:
         const System.IO.Error.isIllegalOperationErrorType_info;
 },
 System.IO.Error.isIllegalOperationErrorType_entry() //  [R2]
         { info_tbl: [(c9TwT,
                       label: System.IO.Error.isIllegalOperationErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TwT: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9TwU; else goto c9TwV;
       c9TwU: // global
           R2 = R2;
           R1 = System.IO.Error.isIllegalOperationErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TwV: // global
           I64[Sp - 8] = block_c9TwM_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Tx2; else goto c9TwN;
       u9Tx2: // global
           call _c9TwM(R1) args: 0, res: 0, upd: 0;
       c9TwN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TwM() //  [R1]
         { info_tbl: [(c9TwM,
                       label: block_c9TwM_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TwM: // global
           if (I32[I64[R1 - 1] + 20] == 5 :: W32) goto c9TwR; else goto c9TwQ;
       c9TwR: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9TwQ: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.959445846 UTC

[section ""data" . System.IO.Error.isPermissionErrorType_closure" {
     System.IO.Error.isPermissionErrorType_closure:
         const System.IO.Error.isPermissionErrorType_info;
 },
 System.IO.Error.isPermissionErrorType_entry() //  [R2]
         { info_tbl: [(c9Txt,
                       label: System.IO.Error.isPermissionErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Txt: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9Txu; else goto c9Txv;
       c9Txu: // global
           R2 = R2;
           R1 = System.IO.Error.isPermissionErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9Txv: // global
           I64[Sp - 8] = block_c9Txm_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9TxC; else goto c9Txn;
       u9TxC: // global
           call _c9Txm(R1) args: 0, res: 0, upd: 0;
       c9Txn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9Txm() //  [R1]
         { info_tbl: [(c9Txm,
                       label: block_c9Txm_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Txm: // global
           if (I32[I64[R1 - 1] + 20] == 6 :: W32) goto c9Txr; else goto c9Txq;
       c9Txr: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9Txq: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.965682828 UTC

[section ""data" . System.IO.Error.isUserErrorType_closure" {
     System.IO.Error.isUserErrorType_closure:
         const System.IO.Error.isUserErrorType_info;
 },
 System.IO.Error.isUserErrorType_entry() //  [R2]
         { info_tbl: [(c9Ty3,
                       label: System.IO.Error.isUserErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Ty3: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9Ty4; else goto c9Ty5;
       c9Ty4: // global
           R2 = R2;
           R1 = System.IO.Error.isUserErrorType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9Ty5: // global
           I64[Sp - 8] = block_c9TxW_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Tyc; else goto c9TxX;
       u9Tyc: // global
           call _c9TxW(R1) args: 0, res: 0, upd: 0;
       c9TxX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TxW() //  [R1]
         { info_tbl: [(c9TxW,
                       label: block_c9TxW_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TxW: // global
           if (I32[I64[R1 - 1] + 20] == 7 :: W32) goto c9Ty1; else goto c9Ty0;
       c9Ty1: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9Ty0: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.97134164 UTC

[section ""data" . System.IO.Error.ioeGetErrorType_closure" {
     System.IO.Error.ioeGetErrorType_closure:
         const System.IO.Error.ioeGetErrorType_info;
 },
 System.IO.Error.ioeGetErrorType_entry() //  [R2]
         { info_tbl: [(c9Tyw,
                       label: System.IO.Error.ioeGetErrorType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tyw: // global
           R2 = R2;
           call GHC.IO.Exception.ioe_type_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.974742498 UTC

[section ""data" . System.IO.Error.isUserError_closure" {
     System.IO.Error.isUserError_closure:
         const System.IO.Error.isUserError_info;
 },
 System.IO.Error.isUserError_entry() //  [R2]
         { info_tbl: [(c9TyK,
                       label: System.IO.Error.isUserError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TyK: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9TyL; else goto c9TyM;
       c9TyL: // global
           R2 = R2;
           R1 = System.IO.Error.isUserError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TyM: // global
           I64[Sp - 8] = block_c9TyH_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Tz4; else goto c9TyI;
       u9Tz4: // global
           call _c9TyH(R1) args: 0, res: 0, upd: 0;
       c9TyI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TyH() //  [R1]
         { info_tbl: [(c9TyH,
                       label: block_c9TyH_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TyH: // global
           I64[Sp] = block_c9TyP_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9Tz3; else goto c9TyR;
       u9Tz3: // global
           call _c9TyP(R1) args: 0, res: 0, upd: 0;
       c9TyR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TyP() //  [R1]
         { info_tbl: [(c9TyP,
                       label: block_c9TyP_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TyP: // global
           if (I32[I64[R1 - 1] + 20] == 7 :: W32) goto c9Tz1; else goto c9TyX;
       c9Tz1: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9TyX: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.982458021 UTC

[section ""data" . System.IO.Error.isPermissionError_closure" {
     System.IO.Error.isPermissionError_closure:
         const System.IO.Error.isPermissionError_info;
 },
 System.IO.Error.isPermissionError_entry() //  [R2]
         { info_tbl: [(c9Tzw,
                       label: System.IO.Error.isPermissionError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tzw: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9Tzx; else goto c9Tzy;
       c9Tzx: // global
           R2 = R2;
           R1 = System.IO.Error.isPermissionError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9Tzy: // global
           I64[Sp - 8] = block_c9Tzt_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9TzQ; else goto c9Tzu;
       u9TzQ: // global
           call _c9Tzt(R1) args: 0, res: 0, upd: 0;
       c9Tzu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9Tzt() //  [R1]
         { info_tbl: [(c9Tzt,
                       label: block_c9Tzt_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Tzt: // global
           I64[Sp] = block_c9TzB_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9TzP; else goto c9TzD;
       u9TzP: // global
           call _c9TzB(R1) args: 0, res: 0, upd: 0;
       c9TzD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TzB() //  [R1]
         { info_tbl: [(c9TzB,
                       label: block_c9TzB_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TzB: // global
           if (I32[I64[R1 - 1] + 20] == 6 :: W32) goto c9TzN; else goto c9TzJ;
       c9TzN: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9TzJ: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.989816639 UTC

[section ""data" . System.IO.Error.isIllegalOperation_closure" {
     System.IO.Error.isIllegalOperation_closure:
         const System.IO.Error.isIllegalOperation_info;
 },
 System.IO.Error.isIllegalOperation_entry() //  [R2]
         { info_tbl: [(c9TAi,
                       label: System.IO.Error.isIllegalOperation_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TAi: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9TAj; else goto c9TAk;
       c9TAj: // global
           R2 = R2;
           R1 = System.IO.Error.isIllegalOperation_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TAk: // global
           I64[Sp - 8] = block_c9TAf_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9TAC; else goto c9TAg;
       u9TAC: // global
           call _c9TAf(R1) args: 0, res: 0, upd: 0;
       c9TAg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TAf() //  [R1]
         { info_tbl: [(c9TAf,
                       label: block_c9TAf_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TAf: // global
           I64[Sp] = block_c9TAn_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9TAB; else goto c9TAp;
       u9TAB: // global
           call _c9TAn(R1) args: 0, res: 0, upd: 0;
       c9TAp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TAn() //  [R1]
         { info_tbl: [(c9TAn,
                       label: block_c9TAn_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TAn: // global
           if (I32[I64[R1 - 1] + 20] == 5 :: W32) goto c9TAz; else goto c9TAv;
       c9TAz: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9TAv: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:58.998094202 UTC

[section ""data" . System.IO.Error.isEOFError_closure" {
     System.IO.Error.isEOFError_closure:
         const System.IO.Error.isEOFError_info;
 },
 System.IO.Error.isEOFError_entry() //  [R2]
         { info_tbl: [(c9TB4,
                       label: System.IO.Error.isEOFError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TB4: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9TB5; else goto c9TB6;
       c9TB5: // global
           R2 = R2;
           R1 = System.IO.Error.isEOFError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TB6: // global
           I64[Sp - 8] = block_c9TB1_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9TBo; else goto c9TB2;
       u9TBo: // global
           call _c9TB1(R1) args: 0, res: 0, upd: 0;
       c9TB2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TB1() //  [R1]
         { info_tbl: [(c9TB1,
                       label: block_c9TB1_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TB1: // global
           I64[Sp] = block_c9TB9_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9TBn; else goto c9TBb;
       u9TBn: // global
           call _c9TB9(R1) args: 0, res: 0, upd: 0;
       c9TBb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TB9() //  [R1]
         { info_tbl: [(c9TB9,
                       label: block_c9TB9_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TB9: // global
           if (I32[I64[R1 - 1] + 20] == 4 :: W32) goto c9TBl; else goto c9TBh;
       c9TBl: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9TBh: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.005050403 UTC

[section ""data" . System.IO.Error.isFullError_closure" {
     System.IO.Error.isFullError_closure:
         const System.IO.Error.isFullError_info;
 },
 System.IO.Error.isFullError_entry() //  [R2]
         { info_tbl: [(c9TBQ,
                       label: System.IO.Error.isFullError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TBQ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9TBR; else goto c9TBS;
       c9TBR: // global
           R2 = R2;
           R1 = System.IO.Error.isFullError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TBS: // global
           I64[Sp - 8] = block_c9TBN_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9TCa; else goto c9TBO;
       u9TCa: // global
           call _c9TBN(R1) args: 0, res: 0, upd: 0;
       c9TBO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TBN() //  [R1]
         { info_tbl: [(c9TBN,
                       label: block_c9TBN_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TBN: // global
           I64[Sp] = block_c9TBV_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9TC9; else goto c9TBX;
       u9TC9: // global
           call _c9TBV(R1) args: 0, res: 0, upd: 0;
       c9TBX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TBV() //  [R1]
         { info_tbl: [(c9TBV,
                       label: block_c9TBV_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TBV: // global
           if (I32[I64[R1 - 1] + 20] == 3 :: W32) goto c9TC7; else goto c9TC3;
       c9TC7: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9TC3: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.012471968 UTC

[section ""data" . System.IO.Error.isAlreadyInUseError_closure" {
     System.IO.Error.isAlreadyInUseError_closure:
         const System.IO.Error.isAlreadyInUseError_info;
 },
 System.IO.Error.isAlreadyInUseError_entry() //  [R2]
         { info_tbl: [(c9TCC,
                       label: System.IO.Error.isAlreadyInUseError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TCC: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9TCD; else goto c9TCE;
       c9TCD: // global
           R2 = R2;
           R1 = System.IO.Error.isAlreadyInUseError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TCE: // global
           I64[Sp - 8] = block_c9TCz_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9TCW; else goto c9TCA;
       u9TCW: // global
           call _c9TCz(R1) args: 0, res: 0, upd: 0;
       c9TCA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TCz() //  [R1]
         { info_tbl: [(c9TCz,
                       label: block_c9TCz_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TCz: // global
           I64[Sp] = block_c9TCH_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9TCV; else goto c9TCJ;
       u9TCV: // global
           call _c9TCH(R1) args: 0, res: 0, upd: 0;
       c9TCJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TCH() //  [R1]
         { info_tbl: [(c9TCH,
                       label: block_c9TCH_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TCH: // global
           if (I32[I64[R1 - 1] + 20] == 2 :: W32) goto c9TCT; else goto c9TCP;
       c9TCT: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9TCP: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.019784649 UTC

[section ""data" . System.IO.Error.isDoesNotExistError_closure" {
     System.IO.Error.isDoesNotExistError_closure:
         const System.IO.Error.isDoesNotExistError_info;
 },
 System.IO.Error.isDoesNotExistError_entry() //  [R2]
         { info_tbl: [(c9TDo,
                       label: System.IO.Error.isDoesNotExistError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TDo: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9TDp; else goto c9TDq;
       c9TDp: // global
           R2 = R2;
           R1 = System.IO.Error.isDoesNotExistError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TDq: // global
           I64[Sp - 8] = block_c9TDl_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9TDI; else goto c9TDm;
       u9TDI: // global
           call _c9TDl(R1) args: 0, res: 0, upd: 0;
       c9TDm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TDl() //  [R1]
         { info_tbl: [(c9TDl,
                       label: block_c9TDl_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TDl: // global
           I64[Sp] = block_c9TDt_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9TDH; else goto c9TDv;
       u9TDH: // global
           call _c9TDt(R1) args: 0, res: 0, upd: 0;
       c9TDv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TDt() //  [R1]
         { info_tbl: [(c9TDt,
                       label: block_c9TDt_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TDt: // global
           if (I32[I64[R1 - 1] + 20] == 1 :: W32) goto c9TDF; else goto c9TDB;
       c9TDF: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9TDB: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.02705966 UTC

[section ""data" . System.IO.Error.isAlreadyExistsError_closure" {
     System.IO.Error.isAlreadyExistsError_closure:
         const System.IO.Error.isAlreadyExistsError_info;
 },
 System.IO.Error.isAlreadyExistsError_entry() //  [R2]
         { info_tbl: [(c9TEa,
                       label: System.IO.Error.isAlreadyExistsError_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TEa: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9TEb; else goto c9TEc;
       c9TEb: // global
           R2 = R2;
           R1 = System.IO.Error.isAlreadyExistsError_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TEc: // global
           I64[Sp - 8] = block_c9TE7_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9TEu; else goto c9TE8;
       u9TEu: // global
           call _c9TE7(R1) args: 0, res: 0, upd: 0;
       c9TE8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TE7() //  [R1]
         { info_tbl: [(c9TE7,
                       label: block_c9TE7_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TE7: // global
           I64[Sp] = block_c9TEf_info;
           R1 = P64[R1 + 15];
           if (R1 & 7 != 0) goto u9TEt; else goto c9TEh;
       u9TEt: // global
           call _c9TEf(R1) args: 0, res: 0, upd: 0;
       c9TEh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TEf() //  [R1]
         { info_tbl: [(c9TEf,
                       label: block_c9TEf_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TEf: // global
           if (I32[I64[R1 - 1] + 20] == 0 :: W32) goto c9TEr; else goto c9TEn;
       c9TEr: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9TEn: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.034668935 UTC

[section ""data" . System.IO.Error.ioeGetLocation_closure" {
     System.IO.Error.ioeGetLocation_closure:
         const System.IO.Error.ioeGetLocation_info;
 },
 System.IO.Error.ioeGetLocation_entry() //  [R2]
         { info_tbl: [(c9TET,
                       label: System.IO.Error.ioeGetLocation_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TET: // global
           R2 = R2;
           call GHC.IO.Exception.ioe_location_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.038103528 UTC

[section ""data" . System.IO.Error.ioeGetHandle_closure" {
     System.IO.Error.ioeGetHandle_closure:
         const System.IO.Error.ioeGetHandle_info;
 },
 System.IO.Error.ioeGetHandle_entry() //  [R2]
         { info_tbl: [(c9TF4,
                       label: System.IO.Error.ioeGetHandle_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TF4: // global
           R2 = R2;
           call GHC.IO.Exception.ioe_handle_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.041375214 UTC

[section ""data" . System.IO.Error.ioeGetFileName_closure" {
     System.IO.Error.ioeGetFileName_closure:
         const System.IO.Error.ioeGetFileName_info;
 },
 System.IO.Error.ioeGetFileName_entry() //  [R2]
         { info_tbl: [(c9TFf,
                       label: System.IO.Error.ioeGetFileName_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TFf: // global
           R2 = R2;
           call GHC.IO.Exception.ioe_filename_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.044736521 UTC

[section ""data" . System.IO.Error.ioeSetErrorType_closure" {
     System.IO.Error.ioeSetErrorType_closure:
         const System.IO.Error.ioeSetErrorType_info;
 },
 System.IO.Error.ioeSetErrorType_entry() //  [R2, R3]
         { info_tbl: [(c9TFt,
                       label: System.IO.Error.ioeSetErrorType_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TFt: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9TFx; else goto c9TFy;
       c9TFx: // global
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.ioeSetErrorType_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9TFy: // global
           I64[Sp - 16] = block_c9TFq_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9TFC; else goto c9TFr;
       u9TFC: // global
           call _c9TFq(R1) args: 0, res: 0, upd: 0;
       c9TFr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TFq() //  [R1]
         { info_tbl: [(c9TFq,
                       label: block_c9TFq_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TFq: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9TFB; else goto c9TFA;
       c9TFB: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9TFA: // global
           _s9Tq2::P64 = P64[R1 + 7];
           _s9Tq4::P64 = P64[R1 + 23];
           _s9Tq5::P64 = P64[R1 + 31];
           _s9Tq6::P64 = P64[R1 + 39];
           _s9Tq7::P64 = P64[R1 + 47];
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = _s9Tq2::P64;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s9Tq4::P64;
           P64[Hp - 16] = _s9Tq5::P64;
           P64[Hp - 8] = _s9Tq6::P64;
           P64[Hp] = _s9Tq7::P64;
           R1 = Hp - 47;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.05143604 UTC

[section ""data" . System.IO.Error.ioeSetErrorString_closure" {
     System.IO.Error.ioeSetErrorString_closure:
         const System.IO.Error.ioeSetErrorString_info;
 },
 System.IO.Error.ioeSetErrorString_entry() //  [R2, R3]
         { info_tbl: [(c9TFX,
                       label: System.IO.Error.ioeSetErrorString_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TFX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9TG1; else goto c9TG2;
       c9TG1: // global
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.ioeSetErrorString_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9TG2: // global
           I64[Sp - 16] = block_c9TFU_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9TG6; else goto c9TFV;
       u9TG6: // global
           call _c9TFU(R1) args: 0, res: 0, upd: 0;
       c9TFV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TFU() //  [R1]
         { info_tbl: [(c9TFU,
                       label: block_c9TFU_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TFU: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9TG5; else goto c9TG4;
       c9TG5: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9TG4: // global
           _s9Tqb::P64 = P64[R1 + 7];
           _s9Tqc::P64 = P64[R1 + 15];
           _s9Tqd::P64 = P64[R1 + 23];
           _s9Tqf::P64 = P64[R1 + 39];
           _s9Tqg::P64 = P64[R1 + 47];
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = _s9Tqb::P64;
           P64[Hp - 32] = _s9Tqc::P64;
           P64[Hp - 24] = _s9Tqd::P64;
           P64[Hp - 16] = P64[Sp + 8];
           P64[Hp - 8] = _s9Tqf::P64;
           P64[Hp] = _s9Tqg::P64;
           R1 = Hp - 47;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.057614137 UTC

[section ""data" . System.IO.Error.ioeSetLocation_closure" {
     System.IO.Error.ioeSetLocation_closure:
         const System.IO.Error.ioeSetLocation_info;
 },
 System.IO.Error.ioeSetLocation_entry() //  [R2, R3]
         { info_tbl: [(c9TGr,
                       label: System.IO.Error.ioeSetLocation_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TGr: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9TGv; else goto c9TGw;
       c9TGv: // global
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.ioeSetLocation_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9TGw: // global
           I64[Sp - 16] = block_c9TGo_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9TGA; else goto c9TGp;
       u9TGA: // global
           call _c9TGo(R1) args: 0, res: 0, upd: 0;
       c9TGp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TGo() //  [R1]
         { info_tbl: [(c9TGo,
                       label: block_c9TGo_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TGo: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9TGz; else goto c9TGy;
       c9TGz: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9TGy: // global
           _s9Tqk::P64 = P64[R1 + 7];
           _s9Tql::P64 = P64[R1 + 15];
           _s9Tqn::P64 = P64[R1 + 31];
           _s9Tqo::P64 = P64[R1 + 39];
           _s9Tqp::P64 = P64[R1 + 47];
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = _s9Tqk::P64;
           P64[Hp - 32] = _s9Tql::P64;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _s9Tqn::P64;
           P64[Hp - 8] = _s9Tqo::P64;
           P64[Hp] = _s9Tqp::P64;
           R1 = Hp - 47;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.064093153 UTC

[section ""data" . System.IO.Error.ioeSetHandle_closure" {
     System.IO.Error.ioeSetHandle_closure:
         const System.IO.Error.ioeSetHandle_info;
 },
 System.IO.Error.ioeSetHandle_entry() //  [R2, R3]
         { info_tbl: [(c9TGV,
                       label: System.IO.Error.ioeSetHandle_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TGV: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9TH0; else goto c9TH1;
       c9TH0: // global
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.ioeSetHandle_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9TH1: // global
           I64[Sp - 16] = block_c9TGS_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9TH5; else goto c9TGT;
       u9TH5: // global
           call _c9TGS(R1) args: 0, res: 0, upd: 0;
       c9TGT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TGS() //  [R1]
         { info_tbl: [(c9TGS,
                       label: block_c9TGS_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TGS: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c9TH4; else goto c9TH3;
       c9TH4: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9TH3: // global
           _s9Tqu::P64 = P64[R1 + 15];
           _s9Tqv::P64 = P64[R1 + 23];
           _s9Tqw::P64 = P64[R1 + 31];
           _s9Tqx::P64 = P64[R1 + 39];
           _s9Tqy::P64 = P64[R1 + 47];
           I64[Hp - 64] = GHC.Base.Just_con_info;
           P64[Hp - 56] = P64[Sp + 8];
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = Hp - 62;
           P64[Hp - 32] = _s9Tqu::P64;
           P64[Hp - 24] = _s9Tqv::P64;
           P64[Hp - 16] = _s9Tqw::P64;
           P64[Hp - 8] = _s9Tqx::P64;
           P64[Hp] = _s9Tqy::P64;
           R1 = Hp - 47;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.070835974 UTC

[section ""data" . System.IO.Error.ioeSetFileName_closure" {
     System.IO.Error.ioeSetFileName_closure:
         const System.IO.Error.ioeSetFileName_info;
 },
 System.IO.Error.ioeSetFileName_entry() //  [R2, R3]
         { info_tbl: [(c9THs,
                       label: System.IO.Error.ioeSetFileName_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9THs: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9THx; else goto c9THy;
       c9THx: // global
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.ioeSetFileName_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9THy: // global
           I64[Sp - 16] = block_c9THp_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9THC; else goto c9THq;
       u9THC: // global
           call _c9THp(R1) args: 0, res: 0, upd: 0;
       c9THq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9THp() //  [R1]
         { info_tbl: [(c9THp,
                       label: block_c9THp_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9THp: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c9THB; else goto c9THA;
       c9THB: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9THA: // global
           _s9TqD::P64 = P64[R1 + 7];
           _s9TqE::P64 = P64[R1 + 15];
           _s9TqF::P64 = P64[R1 + 23];
           _s9TqG::P64 = P64[R1 + 31];
           _s9TqH::P64 = P64[R1 + 39];
           I64[Hp - 64] = GHC.Base.Just_con_info;
           P64[Hp - 56] = P64[Sp + 8];
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = _s9TqD::P64;
           P64[Hp - 32] = _s9TqE::P64;
           P64[Hp - 24] = _s9TqF::P64;
           P64[Hp - 16] = _s9TqG::P64;
           P64[Hp - 8] = _s9TqH::P64;
           P64[Hp] = Hp - 62;
           R1 = Hp - 47;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.077236684 UTC

[section ""data" . System.IO.Error.modifyIOError2_closure" {
     System.IO.Error.modifyIOError2_closure:
         const System.IO.Error.modifyIOError2_info;
         const 0;
 },
 sat_s9TqO_entry() //  [R1]
         { info_tbl: [(c9TI1,
                       label: sat_s9TqO_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TI1: // global
           _s9TqO::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9TI2; else goto c9TI3;
       c9TI3: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9TI5; else goto c9TI4;
       c9TI5: // global
           HpAlloc = 32;
           goto c9TI2;
       c9TI2: // global
           R1 = _s9TqO::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9TI4: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9TqO::P64;
           _s9TqK::P64 = P64[_s9TqO::P64 + 16];
           _s9TqL::P64 = P64[_s9TqO::P64 + 24];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _s9TqL::P64;
           P64[Hp] = _s9TqK::P64;
           R2 = Hp - 24;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 System.IO.Error.modifyIOError2_entry() //  [R2, R3]
         { info_tbl: [(c9TI6,
                       label: System.IO.Error.modifyIOError2_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TI6: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9TIa; else goto c9TI9;
       c9TIa: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.modifyIOError2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9TI9: // global
           I64[Hp - 24] = sat_s9TqO_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 24;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.083780588 UTC

[section ""data" . System.IO.Error.modifyIOError1_closure" {
     System.IO.Error.modifyIOError1_closure:
         const System.IO.Error.modifyIOError1_info;
         const 0;
 },
 sat_s9TqY_entry() //  [R1]
         { info_tbl: [(c9TIN,
                       label: sat_s9TqY_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TIN: // global
           R1 = P64[R1 + 7];
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9Tr0_entry() //  [R1, R2]
         { info_tbl: [(c9TIQ,
                       label: sat_s9Tr0_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TIQ: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9TIR; else goto c9TIS;
       c9TIR: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TIS: // global
           I64[Sp - 16] = block_c9TIv_info;
           _s9TqP::P64 = P64[R1 + 7];
           R1 = R2;
           P64[Sp - 8] = _s9TqP::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9TJ5; else goto c9TIw;
       u9TJ5: // global
           call _c9TIv(R1) args: 0, res: 0, upd: 0;
       c9TIw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TIv() //  [R1]
         { info_tbl: [(c9TIv,
                       label: block_c9TIv_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TIv: // global
           I64[Sp - 16] = block_c9TIA_info;
           R2 = P64[R1 + 7];
           P64[Sp - 8] = P64[R1 + 15];
           P64[Sp] = R1;
           Sp = Sp - 16;
           call GHC.Exception.$p1Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9TIA() //  [R1]
         { info_tbl: [(c9TIA,
                       label: block_c9TIA_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TIA: // global
           I64[Sp] = block_c9TIE_info;
           R3 = GHC.IO.Exception.$fExceptionIOException4_closure;
           R2 = R1;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9TIE() //  [R1]
         { info_tbl: [(c9TIE,
                       label: block_c9TIE_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TIE: // global
           if (R1 & 7 == 1) goto c9TIW; else goto c9TJ3;
       c9TIW: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9TIZ; else goto c9TIY;
       c9TIZ: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9TIY: // global
           I64[Hp - 8] = sat_s9TqY_info;
           P64[Hp] = P64[Sp + 16];
           R1 = Hp - 7;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9TJ3: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 8];
           R1 = System.IO.Error.modifyIOError2_closure+3;
           Sp = Sp + 32;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 System.IO.Error.modifyIOError1_entry() //  [R2, R3]
         { info_tbl: [(c9TJ6,
                       label: System.IO.Error.modifyIOError1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TJ6: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9TJa; else goto c9TJ9;
       c9TJa: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.modifyIOError1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9TJ9: // global
           I64[Hp - 8] = sat_s9Tr0_info;
           P64[Hp] = R2;
           R2 = Hp - 7;
           R1 = R3;
           call stg_catch#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.096421855 UTC

[section ""data" . System.IO.Error.modifyIOError_closure" {
     System.IO.Error.modifyIOError_closure:
         const System.IO.Error.modifyIOError_info;
         const 0;
 },
 System.IO.Error.modifyIOError_entry() //  [R2, R3]
         { info_tbl: [(c9TJK,
                       label: System.IO.Error.modifyIOError_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TJK: // global
           R3 = R3;
           R2 = R2;
           call System.IO.Error.modifyIOError1_entry(R3,
                                                     R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.100919069 UTC

[section ""data" . System.IO.Error.catchIOError1_closure" {
     System.IO.Error.catchIOError1_closure:
         const System.IO.Error.catchIOError1_info;
         const 0;
 },
 sat_s9Tra_entry() //  [R1]
         { info_tbl: [(c9TKi,
                       label: sat_s9Tra_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TKi: // global
           R1 = P64[R1 + 7];
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9Trb_entry() //  [R1, R2]
         { info_tbl: [(c9TKl,
                       label: sat_s9Trb_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TKl: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9TKm; else goto c9TKn;
       c9TKm: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TKn: // global
           I64[Sp - 16] = block_c9TK0_info;
           _s9Tr2::P64 = P64[R1 + 7];
           R1 = R2;
           P64[Sp - 8] = _s9Tr2::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9TKA; else goto c9TK1;
       u9TKA: // global
           call _c9TK0(R1) args: 0, res: 0, upd: 0;
       c9TK1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TK0() //  [R1]
         { info_tbl: [(c9TK0,
                       label: block_c9TK0_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TK0: // global
           I64[Sp - 16] = block_c9TK5_info;
           R2 = P64[R1 + 7];
           P64[Sp - 8] = P64[R1 + 15];
           P64[Sp] = R1;
           Sp = Sp - 16;
           call GHC.Exception.$p1Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9TK5() //  [R1]
         { info_tbl: [(c9TK5,
                       label: block_c9TK5_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TK5: // global
           I64[Sp] = block_c9TK9_info;
           R3 = GHC.IO.Exception.$fExceptionIOException4_closure;
           R2 = R1;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9TK9() //  [R1]
         { info_tbl: [(c9TK9,
                       label: block_c9TK9_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TK9: // global
           if (R1 & 7 == 1) goto c9TKr; else goto c9TKy;
       c9TKr: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9TKu; else goto c9TKt;
       c9TKu: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9TKt: // global
           I64[Hp - 8] = sat_s9Tra_info;
           P64[Hp] = P64[Sp + 16];
           R1 = Hp - 7;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9TKy: // global
           R2 = P64[Sp + 8];
           R1 = P64[Sp + 24];
           Sp = Sp + 32;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 System.IO.Error.catchIOError1_entry() //  [R2, R3]
         { info_tbl: [(c9TKB,
                       label: System.IO.Error.catchIOError1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TKB: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9TKF; else goto c9TKE;
       c9TKF: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.catchIOError1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9TKE: // global
           I64[Hp - 8] = sat_s9Trb_info;
           P64[Hp] = R3;
           _s9Tr1::P64 = R2;
           R2 = Hp - 7;
           R1 = _s9Tr1::P64;
           call stg_catch#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.114290407 UTC

[section ""data" . System.IO.Error.catchIOError_closure" {
     System.IO.Error.catchIOError_closure:
         const System.IO.Error.catchIOError_info;
         const 0;
 },
 System.IO.Error.catchIOError_entry() //  [R2, R3]
         { info_tbl: [(c9TLf,
                       label: System.IO.Error.catchIOError_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TLf: // global
           R3 = R3;
           R2 = R2;
           call System.IO.Error.catchIOError1_entry(R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.117509224 UTC

[section ""cstring" . System.IO.Error.$trModule4_bytes" {
     System.IO.Error.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.1191032 UTC

[section ""data" . System.IO.Error.$trModule3_closure" {
     System.IO.Error.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.IO.Error.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.120679765 UTC

[section ""cstring" . System.IO.Error.$trModule2_bytes" {
     System.IO.Error.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,73,79,46,69,114,114,111,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.122548982 UTC

[section ""data" . System.IO.Error.$trModule1_closure" {
     System.IO.Error.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.IO.Error.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.124199576 UTC

[section ""data" . System.IO.Error.$trModule_closure" {
     System.IO.Error.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.IO.Error.$trModule3_closure+1;
         const System.IO.Error.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.126372344 UTC

[section ""data" . System.IO.Error.ioeGetErrorString_closure" {
     System.IO.Error.ioeGetErrorString_closure:
         const System.IO.Error.ioeGetErrorString_info;
         const 0;
 },
 System.IO.Error.ioeGetErrorString_entry() //  [R2]
         { info_tbl: [(c9TLy,
                       label: System.IO.Error.ioeGetErrorString_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TLy: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9TLz; else goto c9TLA;
       c9TLz: // global
           R2 = R2;
           R1 = System.IO.Error.ioeGetErrorString_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TLA: // global
           I64[Sp - 8] = block_c9TLv_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9TLS; else goto c9TLw;
       u9TLS: // global
           call _c9TLv(R1) args: 0, res: 0, upd: 0;
       c9TLw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TLv() //  [R1]
         { info_tbl: [(c9TLv,
                       label: block_c9TLv_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TLv: // global
           I64[Sp - 8] = block_c9TLD_info;
           _s9Trh::P64 = P64[R1 + 31];
           R1 = P64[R1 + 15];
           P64[Sp] = _s9Trh::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9TLR; else goto c9TLF;
       u9TLR: // global
           call _c9TLD(R1) args: 0, res: 0, upd: 0;
       c9TLF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TLD() //  [R1]
         { info_tbl: [(c9TLD,
                       label: block_c9TLD_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TLD: // global
           if (I32[I64[R1 - 1] + 20] == 7 :: W32) goto c9TLP; else goto c9TLL;
       c9TLP: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9TLL: // global
           R3 = GHC.Types.[]_closure+1;
           R2 = R1;
           Sp = Sp + 16;
           call GHC.IO.Exception.$w$cshowsPrec4_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.135054898 UTC

[section ""data" . System.IO.Error.annotateIOError_closure" {
     System.IO.Error.annotateIOError_closure:
         const System.IO.Error.annotateIOError_info;
 },
 sat_s9TrB_entry() //  [R1]
         { info_tbl: [(c9TMw,
                       label: sat_s9TrB_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TMw: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9TMx; else goto c9TMy;
       c9TMx: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9TMy: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c9TMp_info;
           _s9Trv::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s9Trv::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9TMF; else goto c9TMq;
       u9TMF: // global
           call _c9TMp(R1) args: 0, res: 0, upd: 0;
       c9TMq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9TMp() //  [R1]
         { info_tbl: [(c9TMp,
                       label: block_c9TMp_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TMp: // global
           if (R1 & 7 == 1) goto c9TMt; else goto c9TMu;
       c9TMt: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
       c9TMu: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9Try_entry() //  [R1]
         { info_tbl: [(c9TMR,
                       label: sat_s9Try_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TMR: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9TMS; else goto c9TMT;
       c9TMS: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9TMT: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c9TMK_info;
           _s9Trq::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s9Trq::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9TN0; else goto c9TML;
       u9TN0: // global
           call _c9TMK(R1) args: 0, res: 0, upd: 0;
       c9TML: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9TMK() //  [R1]
         { info_tbl: [(c9TMK,
                       label: block_c9TMK_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TMK: // global
           if (R1 & 7 == 1) goto c9TMO; else goto c9TMP;
       c9TMO: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
       c9TMP: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 System.IO.Error.annotateIOError_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c9TN1,
                       label: System.IO.Error.annotateIOError_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TN1: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9TN3; else goto c9TN4;
       c9TN3: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = System.IO.Error.annotateIOError_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9TN4: // global
           I64[Sp - 32] = block_c9TMg_info;
           R1 = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9TN8; else goto c9TMh;
       u9TN8: // global
           call _c9TMg(R1) args: 0, res: 0, upd: 0;
       c9TMh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TMg() //  [R1]
         { info_tbl: [(c9TMg,
                       label: block_c9TMg_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TMg: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto c9TN7; else goto c9TN6;
       c9TN7: // global
           HpAlloc = 120;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9TN6: // global
           _s9Trq::P64 = P64[R1 + 7];
           _s9Trr::P64 = P64[R1 + 15];
           _s9Trt::P64 = P64[R1 + 31];
           _s9Tru::P64 = P64[R1 + 39];
           _s9Trv::P64 = P64[R1 + 47];
           I64[Hp - 112] = sat_s9TrB_info;
           P64[Hp - 96] = P64[Sp + 24];
           P64[Hp - 88] = _s9Trv::P64;
           I64[Hp - 80] = sat_s9Try_info;
           P64[Hp - 64] = P64[Sp + 16];
           P64[Hp - 56] = _s9Trq::P64;
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = Hp - 80;
           P64[Hp - 32] = _s9Trr::P64;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _s9Trt::P64;
           P64[Hp - 8] = _s9Tru::P64;
           P64[Hp] = Hp - 112;
           R1 = Hp - 47;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.149442186 UTC

[section ""relreadonly" . S9Tsa_srt" {
     S9Tsa_srt:
         const Data.Typeable.Internal.sameTypeRep_closure;
         const GHC.IO.Exception.$fExceptionIOException4_closure;
         const System.IO.Error.tryIOError2_closure;
         const System.IO.Error.tryIOError1_closure;
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const System.IO.Error.modifyIOError2_closure;
         const System.IO.Error.modifyIOError1_closure;
         const System.IO.Error.catchIOError1_closure;
         const GHC.IO.Exception.$w$cshowsPrec4_closure;
         const System.IO.Error.ioeGetErrorString_closure;
 }]

