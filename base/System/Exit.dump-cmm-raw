
==================== Raw Cmm ====================
2018-03-16 16:07:16.013341329 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:07:16.015023031 UTC

[section ""data" . lvl_rcmP9_closure" {
     lvl_rcmP9_closure:
         const lvl_rcmP9_info;
         const 0;
         const 0;
         const 0;
 },
 lvl_rcmP9_entry() //  [R1]
         { []
         }
     {offset
       ccmV2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmV3; else goto ccmV4;
       ccmV3: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmV4: // global
           (_ccmUZ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmUZ::I64 == 0) goto ccmV1; else goto ccmV0;
       ccmV1: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmV0: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmUZ::I64;
           R2 = GHC.IO.Exception.ExitSuccess_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionExitCode_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl_rcmP9_info" {
     lvl_rcmP9_info:
         const lvl_rcmP9_entry;
         const 0;
         const 4294967317;
         const ScmPO_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.018988479 UTC

[section ""data" . System.Exit.exitSuccess1_closure" {
     System.Exit.exitSuccess1_closure:
         const System.Exit.exitSuccess1_info;
         const 0;
 },
 System.Exit.exitSuccess1_entry() //  []
         { []
         }
     {offset
       ccmVg: // global
           R1 = lvl_rcmP9_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Exit.exitSuccess1_info" {
     System.Exit.exitSuccess1_info:
         const System.Exit.exitSuccess1_entry;
         const 0;
         const 4294967310;
         const 4294967299;
         const ScmPO_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.022185434 UTC

[section ""cstring" . lvl1_rcmPa_bytes" {
     lvl1_rcmPa_bytes:
         I8[] [101,120,105,116,87,105,116,104]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.02436515 UTC

[section ""data" . lvl2_rcmPb_closure" {
     lvl2_rcmPb_closure:
         const lvl2_rcmPb_info;
         const 0;
         const 0;
         const 0;
 },
 lvl2_rcmPb_entry() //  [R1]
         { []
         }
     {offset
       ccmVu: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmVv; else goto ccmVw;
       ccmVv: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmVw: // global
           (_ccmVr::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmVr::I64 == 0) goto ccmVt; else goto ccmVs;
       ccmVt: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmVs: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmVr::I64;
           R2 = lvl1_rcmPa_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl2_rcmPb_info" {
     lvl2_rcmPb_info:
         const lvl2_rcmPb_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.02784963 UTC

[section ""cstring" . lvl3_rcmPc_bytes" {
     lvl3_rcmPc_bytes:
         I8[] [69,120,105,116,70,97,105,108,117,114,101,32,48]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.030107878 UTC

[section ""data" . lvl4_rcmPd_closure" {
     lvl4_rcmPd_closure:
         const lvl4_rcmPd_info;
         const 0;
         const 0;
         const 0;
 },
 lvl4_rcmPd_entry() //  [R1]
         { []
         }
     {offset
       ccmVL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmVM; else goto ccmVN;
       ccmVM: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmVN: // global
           (_ccmVI::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmVI::I64 == 0) goto ccmVK; else goto ccmVJ;
       ccmVK: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmVJ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmVI::I64;
           R2 = lvl3_rcmPc_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl4_rcmPd_info" {
     lvl4_rcmPd_info:
         const lvl4_rcmPd_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.034590538 UTC

[section ""data" . lvl5_rcmPe_closure" {
     lvl5_rcmPe_closure:
         const GHC.IO.Exception.IOError_con_info;
         const GHC.Base.Nothing_closure+1;
         const GHC.IO.Exception.InvalidArgument_closure+1;
         const lvl2_rcmPb_closure;
         const lvl4_rcmPd_closure;
         const GHC.Base.Nothing_closure+1;
         const GHC.Base.Nothing_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.036943786 UTC

[section ""data" . lvl6_rcmPf_closure" {
     lvl6_rcmPf_closure:
         const lvl6_rcmPf_info;
         const 0;
         const 0;
         const 0;
 },
 lvl6_rcmPf_entry() //  [R1]
         { []
         }
     {offset
       ccmW2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmW3; else goto ccmW4;
       ccmW3: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmW4: // global
           (_ccmVZ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmVZ::I64 == 0) goto ccmW1; else goto ccmW0;
       ccmW1: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmW0: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmVZ::I64;
           R2 = lvl5_rcmPe_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl6_rcmPf_info" {
     lvl6_rcmPf_info:
         const lvl6_rcmPf_entry;
         const 0;
         const 12884901909;
         const ScmPO_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.041038349 UTC

[section ""data" . System.Exit.exitWith1_closure" {
     System.Exit.exitWith1_closure:
         const System.Exit.exitWith1_info;
         const 0;
 },
 System.Exit.exitWith1_entry() //  []
         { []
         }
     {offset
       ccmWg: // global
           R1 = lvl6_rcmPf_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Exit.exitWith1_info" {
     System.Exit.exitWith1_info:
         const System.Exit.exitWith1_entry;
         const 0;
         const 4294967310;
         const 4294967299;
         const ScmPO_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.046271405 UTC

[section ""data" . System.Exit.exitWith_closure" {
     System.Exit.exitWith_closure:
         const System.Exit.exitWith_info;
         const 0;
 },
 sat_scmPv_entry() //  [R1]
         { []
         }
     {offset
       ccmWN: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmWO; else goto ccmWP;
       ccmWO: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmWP: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionExitCode_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_scmPv_info" {
     sat_scmPv_info:
         const sat_scmPv_entry;
         const 1;
         const 4294967312;
         const ScmPO_srt;
 },
 sat_scmPw_entry() //  [R1]
         { []
         }
     {offset
       ccmWQ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto ccmWU; else goto ccmWT;
       ccmWU: // global
           HpAlloc = 24;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       ccmWT: // global
           _scmPp::P64 = P64[R1 + 7];
           I64[Hp - 16] = sat_scmPv_info;
           P64[Hp] = _scmPp::P64;
           R1 = Hp - 16;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_scmPw_info" {
     sat_scmPw_info:
         const sat_scmPw_entry;
         const 1;
         const 4294967305;
         const 4294967299;
         const ScmPO_srt;
 },
 System.Exit.exitWith_entry() //  [R2]
         { []
         }
     {offset
       ccmWZ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmX0; else goto ccmX1;
       ccmX0: // global
           R2 = R2;
           R1 = System.Exit.exitWith_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccmX1: // global
           I64[Sp - 8] = block_ccmWr_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucmXc; else goto ccmWs;
       ucmXc: // global
           call _ccmWr(R1) args: 0, res: 0, upd: 0;
       ccmWs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Exit.exitWith_info" {
     System.Exit.exitWith_info:
         const System.Exit.exitWith_entry;
         const 0;
         const 966367641614;
         const 4294967301;
         const ScmPO_srt;
 },
 _ccmWr() //  [R1]
         { []
         }
     {offset
       ccmWr: // global
           if (R1 & 7 == 1) goto ccmWW; else goto ccmWX;
       ccmWW: // global
           R1 = System.Exit.exitSuccess1_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       ccmWX: // global
           I64[Sp - 8] = block_ccmWx_info;
           _scmPp::P64 = R1;
           R1 = P64[R1 + 6];
           P64[Sp] = _scmPp::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucmXb; else goto ccmWy;
       ucmXb: // global
           call _ccmWx(R1) args: 0, res: 0, upd: 0;
       ccmWy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_ccmWr_info" {
     block_ccmWr_info:
         const _ccmWr;
         const 0;
         const 828928688158;
         const ScmPO_srt;
 },
 _ccmWx() //  [R1]
         { []
         }
     {offset
       ccmWx: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccmX7; else goto ccmX6;
       ccmX7: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccmX6: // global
           if (I64[R1 + 7] == 0) goto ccmXa; else goto ccmX9;
       ccmXa: // global
           Hp = Hp - 16;
           R1 = System.Exit.exitWith1_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       ccmX9: // global
           I64[Hp - 8] = sat_scmPw_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccmWx_info" {
     block_ccmWx_info:
         const _ccmWx;
         const 1;
         const 554050781214;
         const ScmPO_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.056851378 UTC

[section ""data" . lvl7_rcmPg_closure" {
     lvl7_rcmPg_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.058604465 UTC

[section ""data" . lvl8_rcmPh_closure" {
     lvl8_rcmPh_closure:
         const GHC.IO.Exception.ExitFailure_con_info;
         const lvl7_rcmPg_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.061099634 UTC

[section ""data" . lvl9_rcmPi_closure" {
     lvl9_rcmPi_closure:
         const lvl9_rcmPi_info;
         const 0;
         const 0;
         const 0;
 },
 lvl9_rcmPi_entry() //  [R1]
         { []
         }
     {offset
       ccmXL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmXM; else goto ccmXN;
       ccmXM: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmXN: // global
           (_ccmXI::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmXI::I64 == 0) goto ccmXK; else goto ccmXJ;
       ccmXK: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmXJ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmXI::I64;
           R2 = lvl8_rcmPh_closure+2;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionExitCode_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl9_rcmPi_info" {
     lvl9_rcmPi_info:
         const lvl9_rcmPi_entry;
         const 0;
         const 4294967317;
         const ScmPO_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.064935532 UTC

[section ""data" . System.Exit.exitFailure1_closure" {
     System.Exit.exitFailure1_closure:
         const System.Exit.exitFailure1_info;
         const 0;
 },
 System.Exit.exitFailure1_entry() //  []
         { []
         }
     {offset
       ccmXZ: // global
           R1 = lvl9_rcmPi_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Exit.exitFailure1_info" {
     System.Exit.exitFailure1_info:
         const System.Exit.exitFailure1_entry;
         const 0;
         const 4294967310;
         const 4294967299;
         const ScmPO_srt+64;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.06922163 UTC

[section ""data" . exitFailure2_rcmPj_closure" {
     exitFailure2_rcmPj_closure:
         const exitFailure2_rcmPj_info;
         const 0;
 },
 exitFailure2_rcmPj_entry() //  []
         { []
         }
     {offset
       ccmYa: // global
           R1 = lvl9_rcmPi_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . exitFailure2_rcmPj_info" {
     exitFailure2_rcmPj_info:
         const exitFailure2_rcmPj_entry;
         const 0;
         const 4294967310;
         const 4294967299;
         const ScmPO_srt+64;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.072527024 UTC

[section ""data" . System.Exit.exitFailure_closure" {
     System.Exit.exitFailure_closure:
         const System.Exit.exitFailure_info;
         const 0;
 },
 System.Exit.exitFailure_entry() //  []
         { []
         }
     {offset
       ccmYl: // global
           call exitFailure2_rcmPj_entry() args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Exit.exitFailure_info" {
     System.Exit.exitFailure_info:
         const System.Exit.exitFailure_entry;
         const 0;
         const 4294967310;
         const 4294967299;
         const ScmPO_srt+72;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.076183919 UTC

[section ""data" . System.Exit.die1_closure" {
     System.Exit.die1_closure:
         const System.Exit.die1_info;
         const 0;
 },
 System.Exit.die1_entry() //  [R2]
         { []
         }
     {offset
       ccmYy: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccmYz; else goto ccmYA;
       ccmYz: // global
           R2 = R2;
           R1 = System.Exit.die1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccmYA: // global
           I64[Sp - 8] = block_ccmYw_info;
           R4 = GHC.Types.True_closure+2;
           R3 = R2;
           R2 = GHC.IO.Handle.FD.stderr_closure;
           Sp = Sp - 8;
           call GHC.IO.Handle.Text.hPutStr'_entry(R4,
                                                  R3,
                                                  R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Exit.die1_info" {
     System.Exit.die1_info:
         const System.Exit.die1_entry;
         const 0;
         const 124554051598;
         const 8589934597;
         const ScmPO_srt+64;
 },
 _ccmYw() //  []
         { []
         }
     {offset
       ccmYw: // global
           R1 = lvl9_rcmPi_closure;
           Sp = Sp + 8;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccmYw_info" {
     block_ccmYw_info:
         const _ccmYw;
         const 0;
         const 4294967326;
         const ScmPO_srt+64;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.081605518 UTC

[section ""data" . System.Exit.die_closure" {
     System.Exit.die_closure:
         const System.Exit.die_info;
         const 0;
 },
 System.Exit.die_entry() //  [R2]
         { []
         }
     {offset
       ccmYO: // global
           R2 = R2;
           call System.Exit.die1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Exit.die_info" {
     System.Exit.die_info:
         const System.Exit.die_entry;
         const 0;
         const 4294967310;
         const 8589934597;
         const ScmPO_srt+96;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.084934801 UTC

[section ""data" . exitSuccess2_rcmPk_closure" {
     exitSuccess2_rcmPk_closure:
         const exitSuccess2_rcmPk_info;
         const 0;
 },
 exitSuccess2_rcmPk_entry() //  []
         { []
         }
     {offset
       ccmYZ: // global
           R1 = lvl_rcmP9_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . exitSuccess2_rcmPk_info" {
     exitSuccess2_rcmPk_info:
         const exitSuccess2_rcmPk_entry;
         const 0;
         const 4294967310;
         const 4294967299;
         const ScmPO_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.08824136 UTC

[section ""data" . System.Exit.exitSuccess_closure" {
     System.Exit.exitSuccess_closure:
         const System.Exit.exitSuccess_info;
         const 0;
 },
 System.Exit.exitSuccess_entry() //  []
         { []
         }
     {offset
       ccmZa: // global
           call exitSuccess2_rcmPk_entry() args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Exit.exitSuccess_info" {
     System.Exit.exitSuccess_info:
         const System.Exit.exitSuccess_entry;
         const 0;
         const 4294967310;
         const 4294967299;
         const ScmPO_srt+104;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.091597321 UTC

[section ""cstring" . System.Exit.$trModule4_bytes" {
     System.Exit.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.09340496 UTC

[section ""data" . System.Exit.$trModule3_closure" {
     System.Exit.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Exit.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.095149971 UTC

[section ""cstring" . System.Exit.$trModule2_bytes" {
     System.Exit.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,69,120,105,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.096901443 UTC

[section ""data" . System.Exit.$trModule1_closure" {
     System.Exit.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Exit.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.099158129 UTC

[section ""data" . System.Exit.$trModule_closure" {
     System.Exit.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.Exit.$trModule3_closure+1;
         const System.Exit.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.100988482 UTC

[section ""relreadonly" . ScmPO_srt" {
     ScmPO_srt:
         const GHC.IO.Exception.$fExceptionExitCode_$ctoException_closure;
         const lvl_rcmP9_closure;
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const lvl5_rcmPe_closure;
         const lvl6_rcmPf_closure;
         const System.Exit.exitWith_closure;
         const System.Exit.exitSuccess1_closure;
         const System.Exit.exitWith1_closure;
         const lvl9_rcmPi_closure;
         const exitFailure2_rcmPj_closure;
         const GHC.IO.Handle.Text.hPutStr'_closure;
         const GHC.IO.Handle.FD.stderr_closure;
         const System.Exit.die1_closure;
         const exitSuccess2_rcmPk_closure;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.20168218 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:07:16.203459543 UTC

[section ""data" . lvl_rcmP9_closure" {
     lvl_rcmP9_closure:
         const lvl_rcmP9_info;
         const 0;
         const 0;
         const 0;
 },
 lvl_rcmP9_entry() //  [R1]
         { []
         }
     {offset
       ccmZM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmZN; else goto ccmZO;
       ccmZN: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmZO: // global
           (_ccmZJ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmZJ::I64 == 0) goto ccmZL; else goto ccmZK;
       ccmZL: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmZK: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmZJ::I64;
           R2 = GHC.IO.Exception.ExitSuccess_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionExitCode_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl_rcmP9_info" {
     lvl_rcmP9_info:
         const lvl_rcmP9_entry;
         const 0;
         const 4294967317;
         const ScmZP_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.207559155 UTC

[section ""data" . System.Exit.exitSuccess1_closure" {
     System.Exit.exitSuccess1_closure:
         const System.Exit.exitSuccess1_info;
         const 0;
 },
 System.Exit.exitSuccess1_entry() //  []
         { []
         }
     {offset
       ccn03: // global
           R1 = lvl_rcmP9_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Exit.exitSuccess1_info" {
     System.Exit.exitSuccess1_info:
         const System.Exit.exitSuccess1_entry;
         const 0;
         const 4294967310;
         const 4294967299;
         const ScmZP_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.210715804 UTC

[section ""cstring" . lvl1_rcmPa_bytes" {
     lvl1_rcmPa_bytes:
         I8[] [101,120,105,116,87,105,116,104]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.212993786 UTC

[section ""data" . lvl2_rcmPb_closure" {
     lvl2_rcmPb_closure:
         const lvl2_rcmPb_info;
         const 0;
         const 0;
         const 0;
 },
 lvl2_rcmPb_entry() //  [R1]
         { []
         }
     {offset
       ccn0h: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccn0i; else goto ccn0j;
       ccn0i: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccn0j: // global
           (_ccn0e::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccn0e::I64 == 0) goto ccn0g; else goto ccn0f;
       ccn0g: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccn0f: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccn0e::I64;
           R2 = lvl1_rcmPa_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl2_rcmPb_info" {
     lvl2_rcmPb_info:
         const lvl2_rcmPb_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.216605568 UTC

[section ""cstring" . lvl3_rcmPc_bytes" {
     lvl3_rcmPc_bytes:
         I8[] [69,120,105,116,70,97,105,108,117,114,101,32,48]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.218857086 UTC

[section ""data" . lvl4_rcmPd_closure" {
     lvl4_rcmPd_closure:
         const lvl4_rcmPd_info;
         const 0;
         const 0;
         const 0;
 },
 lvl4_rcmPd_entry() //  [R1]
         { []
         }
     {offset
       ccn0z: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccn0A; else goto ccn0B;
       ccn0A: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccn0B: // global
           (_ccn0w::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccn0w::I64 == 0) goto ccn0y; else goto ccn0x;
       ccn0y: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccn0x: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccn0w::I64;
           R2 = lvl3_rcmPc_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl4_rcmPd_info" {
     lvl4_rcmPd_info:
         const lvl4_rcmPd_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.222878265 UTC

[section ""data" . lvl5_rcmPe_closure" {
     lvl5_rcmPe_closure:
         const GHC.IO.Exception.IOError_con_info;
         const GHC.Base.Nothing_closure+1;
         const GHC.IO.Exception.InvalidArgument_closure+1;
         const lvl2_rcmPb_closure;
         const lvl4_rcmPd_closure;
         const GHC.Base.Nothing_closure+1;
         const GHC.Base.Nothing_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.22523289 UTC

[section ""data" . lvl6_rcmPf_closure" {
     lvl6_rcmPf_closure:
         const lvl6_rcmPf_info;
         const 0;
         const 0;
         const 0;
 },
 lvl6_rcmPf_entry() //  [R1]
         { []
         }
     {offset
       ccn0R: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccn0S; else goto ccn0T;
       ccn0S: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccn0T: // global
           (_ccn0O::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccn0O::I64 == 0) goto ccn0Q; else goto ccn0P;
       ccn0Q: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccn0P: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccn0O::I64;
           R2 = lvl5_rcmPe_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl6_rcmPf_info" {
     lvl6_rcmPf_info:
         const lvl6_rcmPf_entry;
         const 0;
         const 12884901909;
         const ScmZP_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.229150858 UTC

[section ""data" . System.Exit.exitWith1_closure" {
     System.Exit.exitWith1_closure:
         const System.Exit.exitWith1_info;
         const 0;
 },
 System.Exit.exitWith1_entry() //  []
         { []
         }
     {offset
       ccn16: // global
           R1 = lvl6_rcmPf_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Exit.exitWith1_info" {
     System.Exit.exitWith1_info:
         const System.Exit.exitWith1_entry;
         const 0;
         const 4294967310;
         const 4294967299;
         const ScmZP_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.235599171 UTC

[section ""data" . System.Exit.exitWith_closure" {
     System.Exit.exitWith_closure:
         const System.Exit.exitWith_info;
         const 0;
 },
 sat_scmZw_entry() //  [R1]
         { []
         }
     {offset
       ccn1D: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccn1E; else goto ccn1F;
       ccn1E: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccn1F: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionExitCode_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_scmZw_info" {
     sat_scmZw_info:
         const sat_scmZw_entry;
         const 1;
         const 4294967312;
         const ScmZP_srt;
 },
 sat_scmZx_entry() //  [R1]
         { []
         }
     {offset
       ccn1G: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto ccn1K; else goto ccn1J;
       ccn1K: // global
           HpAlloc = 24;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       ccn1J: // global
           _scmZq::P64 = P64[R1 + 7];
           I64[Hp - 16] = sat_scmZw_info;
           P64[Hp] = _scmZq::P64;
           R1 = Hp - 16;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_scmZx_info" {
     sat_scmZx_info:
         const sat_scmZx_entry;
         const 1;
         const 4294967305;
         const 4294967299;
         const ScmZP_srt;
 },
 System.Exit.exitWith_entry() //  [R2]
         { []
         }
     {offset
       ccn1P: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccn1Q; else goto ccn1R;
       ccn1Q: // global
           R2 = R2;
           R1 = System.Exit.exitWith_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccn1R: // global
           I64[Sp - 8] = block_ccn1h_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucn22; else goto ccn1i;
       ucn22: // global
           call _ccn1h(R1) args: 0, res: 0, upd: 0;
       ccn1i: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Exit.exitWith_info" {
     System.Exit.exitWith_info:
         const System.Exit.exitWith_entry;
         const 0;
         const 966367641614;
         const 4294967301;
         const ScmZP_srt;
 },
 _ccn1h() //  [R1]
         { []
         }
     {offset
       ccn1h: // global
           if (R1 & 7 == 1) goto ccn1M; else goto ccn1N;
       ccn1M: // global
           R1 = System.Exit.exitSuccess1_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       ccn1N: // global
           I64[Sp - 8] = block_ccn1n_info;
           _scmZq::P64 = R1;
           R1 = P64[R1 + 6];
           P64[Sp] = _scmZq::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucn21; else goto ccn1o;
       ucn21: // global
           call _ccn1n(R1) args: 0, res: 0, upd: 0;
       ccn1o: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_ccn1h_info" {
     block_ccn1h_info:
         const _ccn1h;
         const 0;
         const 828928688158;
         const ScmZP_srt;
 },
 _ccn1n() //  [R1]
         { []
         }
     {offset
       ccn1n: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccn1X; else goto ccn1W;
       ccn1X: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccn1W: // global
           if (I64[R1 + 7] == 0) goto ccn20; else goto ccn1Z;
       ccn20: // global
           Hp = Hp - 16;
           R1 = System.Exit.exitWith1_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       ccn1Z: // global
           I64[Hp - 8] = sat_scmZx_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccn1n_info" {
     block_ccn1n_info:
         const _ccn1n;
         const 1;
         const 554050781214;
         const ScmZP_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.246378861 UTC

[section ""data" . lvl7_rcmPg_closure" {
     lvl7_rcmPg_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.248045817 UTC

[section ""data" . lvl8_rcmPh_closure" {
     lvl8_rcmPh_closure:
         const GHC.IO.Exception.ExitFailure_con_info;
         const lvl7_rcmPg_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.250422075 UTC

[section ""data" . lvl9_rcmPi_closure" {
     lvl9_rcmPi_closure:
         const lvl9_rcmPi_info;
         const 0;
         const 0;
         const 0;
 },
 lvl9_rcmPi_entry() //  [R1]
         { []
         }
     {offset
       ccn2G: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccn2H; else goto ccn2I;
       ccn2H: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccn2I: // global
           (_ccn2D::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccn2D::I64 == 0) goto ccn2F; else goto ccn2E;
       ccn2F: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccn2E: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccn2D::I64;
           R2 = lvl8_rcmPh_closure+2;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionExitCode_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl9_rcmPi_info" {
     lvl9_rcmPi_info:
         const lvl9_rcmPi_entry;
         const 0;
         const 4294967317;
         const ScmZP_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.25420333 UTC

[section ""data" . System.Exit.exitFailure1_closure" {
     System.Exit.exitFailure1_closure:
         const System.Exit.exitFailure1_info;
         const 0;
 },
 System.Exit.exitFailure1_entry() //  []
         { []
         }
     {offset
       ccn2V: // global
           R1 = lvl9_rcmPi_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Exit.exitFailure1_info" {
     System.Exit.exitFailure1_info:
         const System.Exit.exitFailure1_entry;
         const 0;
         const 4294967310;
         const 4294967299;
         const ScmZP_srt+64;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.257747144 UTC

[section ""data" . exitFailure2_rcmPj_closure" {
     exitFailure2_rcmPj_closure:
         const exitFailure2_rcmPj_info;
         const 0;
 },
 exitFailure2_rcmPj_entry() //  []
         { []
         }
     {offset
       ccn36: // global
           R1 = lvl9_rcmPi_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . exitFailure2_rcmPj_info" {
     exitFailure2_rcmPj_info:
         const exitFailure2_rcmPj_entry;
         const 0;
         const 4294967310;
         const 4294967299;
         const ScmZP_srt+64;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.261162106 UTC

[section ""data" . System.Exit.exitFailure_closure" {
     System.Exit.exitFailure_closure:
         const System.Exit.exitFailure_info;
         const 0;
 },
 System.Exit.exitFailure_entry() //  []
         { []
         }
     {offset
       ccn3h: // global
           call exitFailure2_rcmPj_entry() args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Exit.exitFailure_info" {
     System.Exit.exitFailure_info:
         const System.Exit.exitFailure_entry;
         const 0;
         const 4294967310;
         const 4294967299;
         const ScmZP_srt+72;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.265031123 UTC

[section ""data" . System.Exit.die1_closure" {
     System.Exit.die1_closure:
         const System.Exit.die1_info;
         const 0;
 },
 System.Exit.die1_entry() //  [R2]
         { []
         }
     {offset
       ccn3u: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccn3v; else goto ccn3w;
       ccn3v: // global
           R2 = R2;
           R1 = System.Exit.die1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccn3w: // global
           I64[Sp - 8] = block_ccn3s_info;
           R4 = GHC.Types.True_closure+2;
           R3 = R2;
           R2 = GHC.IO.Handle.FD.stderr_closure;
           Sp = Sp - 8;
           call GHC.IO.Handle.Text.hPutStr'_entry(R4,
                                                  R3,
                                                  R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Exit.die1_info" {
     System.Exit.die1_info:
         const System.Exit.die1_entry;
         const 0;
         const 124554051598;
         const 8589934597;
         const ScmZP_srt+64;
 },
 _ccn3s() //  []
         { []
         }
     {offset
       ccn3s: // global
           R1 = lvl9_rcmPi_closure;
           Sp = Sp + 8;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccn3s_info" {
     block_ccn3s_info:
         const _ccn3s;
         const 0;
         const 4294967326;
         const ScmZP_srt+64;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.271271768 UTC

[section ""data" . System.Exit.die_closure" {
     System.Exit.die_closure:
         const System.Exit.die_info;
         const 0;
 },
 System.Exit.die_entry() //  [R2]
         { []
         }
     {offset
       ccn3M: // global
           R2 = R2;
           call System.Exit.die1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Exit.die_info" {
     System.Exit.die_info:
         const System.Exit.die_entry;
         const 0;
         const 4294967310;
         const 8589934597;
         const ScmZP_srt+96;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.274497031 UTC

[section ""data" . exitSuccess2_rcmPk_closure" {
     exitSuccess2_rcmPk_closure:
         const exitSuccess2_rcmPk_info;
         const 0;
 },
 exitSuccess2_rcmPk_entry() //  []
         { []
         }
     {offset
       ccn3X: // global
           R1 = lvl_rcmP9_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . exitSuccess2_rcmPk_info" {
     exitSuccess2_rcmPk_info:
         const exitSuccess2_rcmPk_entry;
         const 0;
         const 4294967310;
         const 4294967299;
         const ScmZP_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.278093456 UTC

[section ""data" . System.Exit.exitSuccess_closure" {
     System.Exit.exitSuccess_closure:
         const System.Exit.exitSuccess_info;
         const 0;
 },
 System.Exit.exitSuccess_entry() //  []
         { []
         }
     {offset
       ccn48: // global
           call exitSuccess2_rcmPk_entry() args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Exit.exitSuccess_info" {
     System.Exit.exitSuccess_info:
         const System.Exit.exitSuccess_entry;
         const 0;
         const 4294967310;
         const 4294967299;
         const ScmZP_srt+104;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.281101699 UTC

[section ""cstring" . System.Exit.$trModule4_bytes" {
     System.Exit.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.282886284 UTC

[section ""data" . System.Exit.$trModule3_closure" {
     System.Exit.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Exit.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.284649861 UTC

[section ""cstring" . System.Exit.$trModule2_bytes" {
     System.Exit.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,69,120,105,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.286340735 UTC

[section ""data" . System.Exit.$trModule1_closure" {
     System.Exit.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Exit.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.287975232 UTC

[section ""data" . System.Exit.$trModule_closure" {
     System.Exit.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.Exit.$trModule3_closure+1;
         const System.Exit.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:16.290117613 UTC

[section ""relreadonly" . ScmZP_srt" {
     ScmZP_srt:
         const GHC.IO.Exception.$fExceptionExitCode_$ctoException_closure;
         const lvl_rcmP9_closure;
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const lvl5_rcmPe_closure;
         const lvl6_rcmPf_closure;
         const System.Exit.exitWith_closure;
         const System.Exit.exitSuccess1_closure;
         const System.Exit.exitWith1_closure;
         const lvl9_rcmPi_closure;
         const exitFailure2_rcmPj_closure;
         const GHC.IO.Handle.Text.hPutStr'_closure;
         const GHC.IO.Handle.FD.stderr_closure;
         const System.Exit.die1_closure;
         const exitSuccess2_rcmPk_closure;
 }]

