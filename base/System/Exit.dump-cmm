
==================== Output Cmm ====================
2018-03-16 16:07:15.961898127 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:15.962897244 UTC

[section ""data" . lvl_rcmP9_closure" {
     lvl_rcmP9_closure:
         const lvl_rcmP9_info;
         const 0;
         const 0;
         const 0;
 },
 lvl_rcmP9_entry() //  [R1]
         { info_tbl: [(ccmPL,
                       label: lvl_rcmP9_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmPL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmPM; else goto ccmPN;
       ccmPM: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmPN: // global
           (_ccmPI::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmPI::I64 == 0) goto ccmPK; else goto ccmPJ;
       ccmPK: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmPJ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmPI::I64;
           R2 = GHC.IO.Exception.ExitSuccess_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionExitCode_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.964018253 UTC

[section ""data" . System.Exit.exitSuccess1_closure" {
     System.Exit.exitSuccess1_closure:
         const System.Exit.exitSuccess1_info;
         const 0;
 },
 System.Exit.exitSuccess1_entry() //  []
         { info_tbl: [(ccmPT,
                       label: System.Exit.exitSuccess1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmPT: // global
           R1 = lvl_rcmP9_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.964785409 UTC

[section ""cstring" . lvl1_rcmPa_bytes" {
     lvl1_rcmPa_bytes:
         I8[] [101,120,105,116,87,105,116,104]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.965584722 UTC

[section ""data" . lvl2_rcmPb_closure" {
     lvl2_rcmPb_closure:
         const lvl2_rcmPb_info;
         const 0;
         const 0;
         const 0;
 },
 lvl2_rcmPb_entry() //  [R1]
         { info_tbl: [(ccmQ2,
                       label: lvl2_rcmPb_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmQ2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmQ3; else goto ccmQ4;
       ccmQ3: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmQ4: // global
           (_ccmPZ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmPZ::I64 == 0) goto ccmQ1; else goto ccmQ0;
       ccmQ1: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmQ0: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmPZ::I64;
           R2 = lvl1_rcmPa_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.96647462 UTC

[section ""cstring" . lvl3_rcmPc_bytes" {
     lvl3_rcmPc_bytes:
         I8[] [69,120,105,116,70,97,105,108,117,114,101,32,48]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.967183075 UTC

[section ""data" . lvl4_rcmPd_closure" {
     lvl4_rcmPd_closure:
         const lvl4_rcmPd_info;
         const 0;
         const 0;
         const 0;
 },
 lvl4_rcmPd_entry() //  [R1]
         { info_tbl: [(ccmQb,
                       label: lvl4_rcmPd_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmQb: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmQc; else goto ccmQd;
       ccmQc: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmQd: // global
           (_ccmQ8::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmQ8::I64 == 0) goto ccmQa; else goto ccmQ9;
       ccmQa: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmQ9: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmQ8::I64;
           R2 = lvl3_rcmPc_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.968142708 UTC

[section ""data" . lvl5_rcmPe_closure" {
     lvl5_rcmPe_closure:
         const GHC.IO.Exception.IOError_con_info;
         const GHC.Base.Nothing_closure+1;
         const GHC.IO.Exception.InvalidArgument_closure+1;
         const lvl2_rcmPb_closure;
         const lvl4_rcmPd_closure;
         const GHC.Base.Nothing_closure+1;
         const GHC.Base.Nothing_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.96902993 UTC

[section ""data" . lvl6_rcmPf_closure" {
     lvl6_rcmPf_closure:
         const lvl6_rcmPf_info;
         const 0;
         const 0;
         const 0;
 },
 lvl6_rcmPf_entry() //  [R1]
         { info_tbl: [(ccmQk,
                       label: lvl6_rcmPf_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmQk: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmQl; else goto ccmQm;
       ccmQl: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmQm: // global
           (_ccmQh::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmQh::I64 == 0) goto ccmQj; else goto ccmQi;
       ccmQj: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmQi: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmQh::I64;
           R2 = lvl5_rcmPe_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.970123268 UTC

[section ""data" . System.Exit.exitWith1_closure" {
     System.Exit.exitWith1_closure:
         const System.Exit.exitWith1_info;
         const 0;
 },
 System.Exit.exitWith1_entry() //  []
         { info_tbl: [(ccmQr,
                       label: System.Exit.exitWith1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmQr: // global
           R1 = lvl6_rcmPf_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.971727558 UTC

[section ""data" . System.Exit.exitWith_closure" {
     System.Exit.exitWith_closure:
         const System.Exit.exitWith_info;
         const 0;
 },
 sat_scmPv_entry() //  [R1]
         { info_tbl: [(ccmQU,
                       label: sat_scmPv_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmQU: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmQV; else goto ccmQW;
       ccmQV: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmQW: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionExitCode_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_scmPw_entry() //  [R1]
         { info_tbl: [(ccmQX,
                       label: sat_scmPw_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmQX: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto ccmR1; else goto ccmR0;
       ccmR1: // global
           HpAlloc = 24;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       ccmR0: // global
           _scmPp::P64 = P64[R1 + 7];
           I64[Hp - 16] = sat_scmPv_info;
           P64[Hp] = _scmPp::P64;
           R1 = Hp - 16;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Exit.exitWith_entry() //  [R2]
         { info_tbl: [(ccmR6,
                       label: System.Exit.exitWith_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmR6: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmR7; else goto ccmR8;
       ccmR7: // global
           R2 = R2;
           R1 = System.Exit.exitWith_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccmR8: // global
           I64[Sp - 8] = block_ccmQy_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucmRj; else goto ccmQz;
       ucmRj: // global
           call _ccmQy(R1) args: 0, res: 0, upd: 0;
       ccmQz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccmQy() //  [R1]
         { info_tbl: [(ccmQy,
                       label: block_ccmQy_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmQy: // global
           if (R1 & 7 == 1) goto ccmR3; else goto ccmR4;
       ccmR3: // global
           R1 = System.Exit.exitSuccess1_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       ccmR4: // global
           I64[Sp - 8] = block_ccmQE_info;
           _scmPp::P64 = R1;
           R1 = P64[R1 + 6];
           P64[Sp] = _scmPp::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucmRi; else goto ccmQF;
       ucmRi: // global
           call _ccmQE(R1) args: 0, res: 0, upd: 0;
       ccmQF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccmQE() //  [R1]
         { info_tbl: [(ccmQE,
                       label: block_ccmQE_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmQE: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccmRe; else goto ccmRd;
       ccmRe: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccmRd: // global
           if (I64[R1 + 7] == 0) goto ccmRh; else goto ccmRg;
       ccmRh: // global
           Hp = Hp - 16;
           R1 = System.Exit.exitWith1_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       ccmRg: // global
           I64[Hp - 8] = sat_scmPw_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.973859396 UTC

[section ""data" . lvl7_rcmPg_closure" {
     lvl7_rcmPg_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.974458651 UTC

[section ""data" . lvl8_rcmPh_closure" {
     lvl8_rcmPh_closure:
         const GHC.IO.Exception.ExitFailure_con_info;
         const lvl7_rcmPg_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.97530538 UTC

[section ""data" . lvl9_rcmPi_closure" {
     lvl9_rcmPi_closure:
         const lvl9_rcmPi_info;
         const 0;
         const 0;
         const 0;
 },
 lvl9_rcmPi_entry() //  [R1]
         { info_tbl: [(ccmRq,
                       label: lvl9_rcmPi_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmRq: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmRr; else goto ccmRs;
       ccmRr: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmRs: // global
           (_ccmRn::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmRn::I64 == 0) goto ccmRp; else goto ccmRo;
       ccmRp: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmRo: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmRn::I64;
           R2 = lvl8_rcmPh_closure+2;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionExitCode_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.976380491 UTC

[section ""data" . System.Exit.exitFailure1_closure" {
     System.Exit.exitFailure1_closure:
         const System.Exit.exitFailure1_info;
         const 0;
 },
 System.Exit.exitFailure1_entry() //  []
         { info_tbl: [(ccmRx,
                       label: System.Exit.exitFailure1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmRx: // global
           R1 = lvl9_rcmPi_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.977229823 UTC

[section ""data" . exitFailure2_rcmPj_closure" {
     exitFailure2_rcmPj_closure:
         const exitFailure2_rcmPj_info;
         const 0;
 },
 exitFailure2_rcmPj_entry() //  []
         { info_tbl: [(ccmRE,
                       label: exitFailure2_rcmPj_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmRE: // global
           R1 = lvl9_rcmPi_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.978175057 UTC

[section ""data" . System.Exit.exitFailure_closure" {
     System.Exit.exitFailure_closure:
         const System.Exit.exitFailure_info;
         const 0;
 },
 System.Exit.exitFailure_entry() //  []
         { info_tbl: [(ccmRL,
                       label: System.Exit.exitFailure_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmRL: // global
           call exitFailure2_rcmPj_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.979145227 UTC

[section ""data" . System.Exit.die1_closure" {
     System.Exit.die1_closure:
         const System.Exit.die1_info;
         const 0;
 },
 System.Exit.die1_entry() //  [R2]
         { info_tbl: [(ccmRU,
                       label: System.Exit.die1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmRU: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccmRV; else goto ccmRW;
       ccmRV: // global
           R2 = R2;
           R1 = System.Exit.die1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccmRW: // global
           I64[Sp - 8] = block_ccmRS_info;
           R4 = GHC.Types.True_closure+2;
           R3 = R2;
           R2 = GHC.IO.Handle.FD.stderr_closure;
           Sp = Sp - 8;
           call GHC.IO.Handle.Text.hPutStr'_entry(R4,
                                                  R3,
                                                  R2) args: 8, res: 8, upd: 8;
     }
 },
 _ccmRS() //  []
         { info_tbl: [(ccmRS,
                       label: block_ccmRS_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmRS: // global
           R1 = lvl9_rcmPi_closure;
           Sp = Sp + 8;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.980331264 UTC

[section ""data" . System.Exit.die_closure" {
     System.Exit.die_closure:
         const System.Exit.die_info;
         const 0;
 },
 System.Exit.die_entry() //  [R2]
         { info_tbl: [(ccmS2,
                       label: System.Exit.die_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmS2: // global
           R2 = R2;
           call System.Exit.die1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.981142095 UTC

[section ""data" . exitSuccess2_rcmPk_closure" {
     exitSuccess2_rcmPk_closure:
         const exitSuccess2_rcmPk_info;
         const 0;
 },
 exitSuccess2_rcmPk_entry() //  []
         { info_tbl: [(ccmS9,
                       label: exitSuccess2_rcmPk_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmS9: // global
           R1 = lvl_rcmP9_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.982004636 UTC

[section ""data" . System.Exit.exitSuccess_closure" {
     System.Exit.exitSuccess_closure:
         const System.Exit.exitSuccess_info;
         const 0;
 },
 System.Exit.exitSuccess_entry() //  []
         { info_tbl: [(ccmSg,
                       label: System.Exit.exitSuccess_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmSg: // global
           call exitSuccess2_rcmPk_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.982756915 UTC

[section ""cstring" . System.Exit.$trModule4_bytes" {
     System.Exit.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.983346232 UTC

[section ""data" . System.Exit.$trModule3_closure" {
     System.Exit.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Exit.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.983953701 UTC

[section ""cstring" . System.Exit.$trModule2_bytes" {
     System.Exit.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,69,120,105,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.984586251 UTC

[section ""data" . System.Exit.$trModule1_closure" {
     System.Exit.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Exit.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.985190393 UTC

[section ""data" . System.Exit.$trModule_closure" {
     System.Exit.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.Exit.$trModule3_closure+1;
         const System.Exit.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.985878417 UTC

[section ""relreadonly" . ScmPO_srt" {
     ScmPO_srt:
         const GHC.IO.Exception.$fExceptionExitCode_$ctoException_closure;
         const lvl_rcmP9_closure;
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const lvl5_rcmPe_closure;
         const lvl6_rcmPf_closure;
         const System.Exit.exitWith_closure;
         const System.Exit.exitSuccess1_closure;
         const System.Exit.exitWith1_closure;
         const lvl9_rcmPi_closure;
         const exitFailure2_rcmPj_closure;
         const GHC.IO.Handle.Text.hPutStr'_closure;
         const GHC.IO.Handle.FD.stderr_closure;
         const System.Exit.die1_closure;
         const exitSuccess2_rcmPk_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.986643129 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:15.987496305 UTC

[section ""data" . lvl_rcmP9_closure" {
     lvl_rcmP9_closure:
         const lvl_rcmP9_info;
         const 0;
         const 0;
         const 0;
 },
 lvl_rcmP9_entry() //  [R1]
         { info_tbl: [(ccmSp,
                       label: lvl_rcmP9_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmSp: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmSq; else goto ccmSr;
       ccmSq: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmSr: // global
           (_ccmSm::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmSm::I64 == 0) goto ccmSo; else goto ccmSn;
       ccmSo: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmSn: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmSm::I64;
           R2 = GHC.IO.Exception.ExitSuccess_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionExitCode_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.988618128 UTC

[section ""data" . System.Exit.exitSuccess1_closure" {
     System.Exit.exitSuccess1_closure:
         const System.Exit.exitSuccess1_info;
         const 0;
 },
 System.Exit.exitSuccess1_entry() //  []
         { info_tbl: [(ccmSw,
                       label: System.Exit.exitSuccess1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmSw: // global
           R1 = lvl_rcmP9_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.989705255 UTC

[section ""cstring" . lvl1_rcmPa_bytes" {
     lvl1_rcmPa_bytes:
         I8[] [101,120,105,116,87,105,116,104]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.990484117 UTC

[section ""data" . lvl2_rcmPb_closure" {
     lvl2_rcmPb_closure:
         const lvl2_rcmPb_info;
         const 0;
         const 0;
         const 0;
 },
 lvl2_rcmPb_entry() //  [R1]
         { info_tbl: [(ccmSF,
                       label: lvl2_rcmPb_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmSF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmSG; else goto ccmSH;
       ccmSG: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmSH: // global
           (_ccmSC::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmSC::I64 == 0) goto ccmSE; else goto ccmSD;
       ccmSE: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmSD: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmSC::I64;
           R2 = lvl1_rcmPa_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.991462629 UTC

[section ""cstring" . lvl3_rcmPc_bytes" {
     lvl3_rcmPc_bytes:
         I8[] [69,120,105,116,70,97,105,108,117,114,101,32,48]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.992232268 UTC

[section ""data" . lvl4_rcmPd_closure" {
     lvl4_rcmPd_closure:
         const lvl4_rcmPd_info;
         const 0;
         const 0;
         const 0;
 },
 lvl4_rcmPd_entry() //  [R1]
         { info_tbl: [(ccmSO,
                       label: lvl4_rcmPd_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmSO: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmSP; else goto ccmSQ;
       ccmSP: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmSQ: // global
           (_ccmSL::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmSL::I64 == 0) goto ccmSN; else goto ccmSM;
       ccmSN: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmSM: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmSL::I64;
           R2 = lvl3_rcmPc_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.993218498 UTC

[section ""data" . lvl5_rcmPe_closure" {
     lvl5_rcmPe_closure:
         const GHC.IO.Exception.IOError_con_info;
         const GHC.Base.Nothing_closure+1;
         const GHC.IO.Exception.InvalidArgument_closure+1;
         const lvl2_rcmPb_closure;
         const lvl4_rcmPd_closure;
         const GHC.Base.Nothing_closure+1;
         const GHC.Base.Nothing_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.994112579 UTC

[section ""data" . lvl6_rcmPf_closure" {
     lvl6_rcmPf_closure:
         const lvl6_rcmPf_info;
         const 0;
         const 0;
         const 0;
 },
 lvl6_rcmPf_entry() //  [R1]
         { info_tbl: [(ccmSX,
                       label: lvl6_rcmPf_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmSX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmSY; else goto ccmSZ;
       ccmSY: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmSZ: // global
           (_ccmSU::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmSU::I64 == 0) goto ccmSW; else goto ccmSV;
       ccmSW: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmSV: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmSU::I64;
           R2 = lvl5_rcmPe_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.995161513 UTC

[section ""data" . System.Exit.exitWith1_closure" {
     System.Exit.exitWith1_closure:
         const System.Exit.exitWith1_info;
         const 0;
 },
 System.Exit.exitWith1_entry() //  []
         { info_tbl: [(ccmT4,
                       label: System.Exit.exitWith1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmT4: // global
           R1 = lvl6_rcmPf_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.996830438 UTC

[section ""data" . System.Exit.exitWith_closure" {
     System.Exit.exitWith_closure:
         const System.Exit.exitWith_info;
         const 0;
 },
 sat_scmPv_entry() //  [R1]
         { info_tbl: [(ccmTx,
                       label: sat_scmPv_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmTx: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmTy; else goto ccmTz;
       ccmTy: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmTz: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionExitCode_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_scmPw_entry() //  [R1]
         { info_tbl: [(ccmTA,
                       label: sat_scmPw_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmTA: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto ccmTE; else goto ccmTD;
       ccmTE: // global
           HpAlloc = 24;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       ccmTD: // global
           _scmPp::P64 = P64[R1 + 7];
           I64[Hp - 16] = sat_scmPv_info;
           P64[Hp] = _scmPp::P64;
           R1 = Hp - 16;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Exit.exitWith_entry() //  [R2]
         { info_tbl: [(ccmTJ,
                       label: System.Exit.exitWith_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmTJ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmTK; else goto ccmTL;
       ccmTK: // global
           R2 = R2;
           R1 = System.Exit.exitWith_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccmTL: // global
           I64[Sp - 8] = block_ccmTb_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucmTW; else goto ccmTc;
       ucmTW: // global
           call _ccmTb(R1) args: 0, res: 0, upd: 0;
       ccmTc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccmTb() //  [R1]
         { info_tbl: [(ccmTb,
                       label: block_ccmTb_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmTb: // global
           if (R1 & 7 == 1) goto ccmTG; else goto ccmTH;
       ccmTG: // global
           R1 = System.Exit.exitSuccess1_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       ccmTH: // global
           I64[Sp - 8] = block_ccmTh_info;
           _scmPp::P64 = R1;
           R1 = P64[R1 + 6];
           P64[Sp] = _scmPp::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucmTV; else goto ccmTi;
       ucmTV: // global
           call _ccmTh(R1) args: 0, res: 0, upd: 0;
       ccmTi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccmTh() //  [R1]
         { info_tbl: [(ccmTh,
                       label: block_ccmTh_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmTh: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccmTR; else goto ccmTQ;
       ccmTR: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccmTQ: // global
           if (I64[R1 + 7] == 0) goto ccmTU; else goto ccmTT;
       ccmTU: // global
           Hp = Hp - 16;
           R1 = System.Exit.exitWith1_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       ccmTT: // global
           I64[Hp - 8] = sat_scmPw_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.998917501 UTC

[section ""data" . lvl7_rcmPg_closure" {
     lvl7_rcmPg_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.999539411 UTC

[section ""data" . lvl8_rcmPh_closure" {
     lvl8_rcmPh_closure:
         const GHC.IO.Exception.ExitFailure_con_info;
         const lvl7_rcmPg_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.001610661 UTC

[section ""data" . lvl9_rcmPi_closure" {
     lvl9_rcmPi_closure:
         const lvl9_rcmPi_info;
         const 0;
         const 0;
         const 0;
 },
 lvl9_rcmPi_entry() //  [R1]
         { info_tbl: [(ccmU3,
                       label: lvl9_rcmPi_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmU3: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmU4; else goto ccmU5;
       ccmU4: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmU5: // global
           (_ccmU0::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmU0::I64 == 0) goto ccmU2; else goto ccmU1;
       ccmU2: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmU1: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmU0::I64;
           R2 = lvl8_rcmPh_closure+2;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionExitCode_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.002707704 UTC

[section ""data" . System.Exit.exitFailure1_closure" {
     System.Exit.exitFailure1_closure:
         const System.Exit.exitFailure1_info;
         const 0;
 },
 System.Exit.exitFailure1_entry() //  []
         { info_tbl: [(ccmUa,
                       label: System.Exit.exitFailure1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmUa: // global
           R1 = lvl9_rcmPi_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.003545855 UTC

[section ""data" . exitFailure2_rcmPj_closure" {
     exitFailure2_rcmPj_closure:
         const exitFailure2_rcmPj_info;
         const 0;
 },
 exitFailure2_rcmPj_entry() //  []
         { info_tbl: [(ccmUh,
                       label: exitFailure2_rcmPj_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmUh: // global
           R1 = lvl9_rcmPi_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.004466005 UTC

[section ""data" . System.Exit.exitFailure_closure" {
     System.Exit.exitFailure_closure:
         const System.Exit.exitFailure_info;
         const 0;
 },
 System.Exit.exitFailure_entry() //  []
         { info_tbl: [(ccmUo,
                       label: System.Exit.exitFailure_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmUo: // global
           call exitFailure2_rcmPj_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.005648835 UTC

[section ""data" . System.Exit.die1_closure" {
     System.Exit.die1_closure:
         const System.Exit.die1_info;
         const 0;
 },
 System.Exit.die1_entry() //  [R2]
         { info_tbl: [(ccmUx,
                       label: System.Exit.die1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmUx: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccmUy; else goto ccmUz;
       ccmUy: // global
           R2 = R2;
           R1 = System.Exit.die1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccmUz: // global
           I64[Sp - 8] = block_ccmUv_info;
           R4 = GHC.Types.True_closure+2;
           R3 = R2;
           R2 = GHC.IO.Handle.FD.stderr_closure;
           Sp = Sp - 8;
           call GHC.IO.Handle.Text.hPutStr'_entry(R4,
                                                  R3,
                                                  R2) args: 8, res: 8, upd: 8;
     }
 },
 _ccmUv() //  []
         { info_tbl: [(ccmUv,
                       label: block_ccmUv_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmUv: // global
           R1 = lvl9_rcmPi_closure;
           Sp = Sp + 8;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.006833411 UTC

[section ""data" . System.Exit.die_closure" {
     System.Exit.die_closure:
         const System.Exit.die_info;
         const 0;
 },
 System.Exit.die_entry() //  [R2]
         { info_tbl: [(ccmUF,
                       label: System.Exit.die_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmUF: // global
           R2 = R2;
           call System.Exit.die1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.007617758 UTC

[section ""data" . exitSuccess2_rcmPk_closure" {
     exitSuccess2_rcmPk_closure:
         const exitSuccess2_rcmPk_info;
         const 0;
 },
 exitSuccess2_rcmPk_entry() //  []
         { info_tbl: [(ccmUM,
                       label: exitSuccess2_rcmPk_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmUM: // global
           R1 = lvl_rcmP9_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.008380685 UTC

[section ""data" . System.Exit.exitSuccess_closure" {
     System.Exit.exitSuccess_closure:
         const System.Exit.exitSuccess_info;
         const 0;
 },
 System.Exit.exitSuccess_entry() //  []
         { info_tbl: [(ccmUT,
                       label: System.Exit.exitSuccess_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmUT: // global
           call exitSuccess2_rcmPk_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.009050568 UTC

[section ""cstring" . System.Exit.$trModule4_bytes" {
     System.Exit.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.009625766 UTC

[section ""data" . System.Exit.$trModule3_closure" {
     System.Exit.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Exit.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.010191032 UTC

[section ""cstring" . System.Exit.$trModule2_bytes" {
     System.Exit.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,69,120,105,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.010717062 UTC

[section ""data" . System.Exit.$trModule1_closure" {
     System.Exit.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Exit.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.011309204 UTC

[section ""data" . System.Exit.$trModule_closure" {
     System.Exit.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.Exit.$trModule3_closure+1;
         const System.Exit.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.011892093 UTC

[section ""relreadonly" . ScmPO_srt" {
     ScmPO_srt:
         const GHC.IO.Exception.$fExceptionExitCode_$ctoException_closure;
         const lvl_rcmP9_closure;
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const lvl5_rcmPe_closure;
         const lvl6_rcmPf_closure;
         const System.Exit.exitWith_closure;
         const System.Exit.exitSuccess1_closure;
         const System.Exit.exitWith1_closure;
         const lvl9_rcmPi_closure;
         const exitFailure2_rcmPj_closure;
         const GHC.IO.Handle.Text.hPutStr'_closure;
         const GHC.IO.Handle.FD.stderr_closure;
         const System.Exit.die1_closure;
         const exitSuccess2_rcmPk_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.012756334 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:16.014125431 UTC

[section ""data" . lvl_rcmP9_closure" {
     lvl_rcmP9_closure:
         const lvl_rcmP9_info;
         const 0;
         const 0;
         const 0;
 },
 lvl_rcmP9_entry() //  [R1]
         { info_tbl: [(ccmV2,
                       label: lvl_rcmP9_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmV2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmV3; else goto ccmV4;
       ccmV3: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmV4: // global
           (_ccmUZ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmUZ::I64 == 0) goto ccmV1; else goto ccmV0;
       ccmV1: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmV0: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmUZ::I64;
           R2 = GHC.IO.Exception.ExitSuccess_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionExitCode_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.018258038 UTC

[section ""data" . System.Exit.exitSuccess1_closure" {
     System.Exit.exitSuccess1_closure:
         const System.Exit.exitSuccess1_info;
         const 0;
 },
 System.Exit.exitSuccess1_entry() //  []
         { info_tbl: [(ccmVg,
                       label: System.Exit.exitSuccess1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmVg: // global
           R1 = lvl_rcmP9_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.021612737 UTC

[section ""cstring" . lvl1_rcmPa_bytes" {
     lvl1_rcmPa_bytes:
         I8[] [101,120,105,116,87,105,116,104]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.02345257 UTC

[section ""data" . lvl2_rcmPb_closure" {
     lvl2_rcmPb_closure:
         const lvl2_rcmPb_info;
         const 0;
         const 0;
         const 0;
 },
 lvl2_rcmPb_entry() //  [R1]
         { info_tbl: [(ccmVu,
                       label: lvl2_rcmPb_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmVu: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmVv; else goto ccmVw;
       ccmVv: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmVw: // global
           (_ccmVr::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmVr::I64 == 0) goto ccmVt; else goto ccmVs;
       ccmVt: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmVs: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmVr::I64;
           R2 = lvl1_rcmPa_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.027308208 UTC

[section ""cstring" . lvl3_rcmPc_bytes" {
     lvl3_rcmPc_bytes:
         I8[] [69,120,105,116,70,97,105,108,117,114,101,32,48]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.029160045 UTC

[section ""data" . lvl4_rcmPd_closure" {
     lvl4_rcmPd_closure:
         const lvl4_rcmPd_info;
         const 0;
         const 0;
         const 0;
 },
 lvl4_rcmPd_entry() //  [R1]
         { info_tbl: [(ccmVL,
                       label: lvl4_rcmPd_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmVL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmVM; else goto ccmVN;
       ccmVM: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmVN: // global
           (_ccmVI::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmVI::I64 == 0) goto ccmVK; else goto ccmVJ;
       ccmVK: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmVJ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmVI::I64;
           R2 = lvl3_rcmPc_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.033981575 UTC

[section ""data" . lvl5_rcmPe_closure" {
     lvl5_rcmPe_closure:
         const GHC.IO.Exception.IOError_con_info;
         const GHC.Base.Nothing_closure+1;
         const GHC.IO.Exception.InvalidArgument_closure+1;
         const lvl2_rcmPb_closure;
         const lvl4_rcmPd_closure;
         const GHC.Base.Nothing_closure+1;
         const GHC.Base.Nothing_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.035987843 UTC

[section ""data" . lvl6_rcmPf_closure" {
     lvl6_rcmPf_closure:
         const lvl6_rcmPf_info;
         const 0;
         const 0;
         const 0;
 },
 lvl6_rcmPf_entry() //  [R1]
         { info_tbl: [(ccmW2,
                       label: lvl6_rcmPf_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmW2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmW3; else goto ccmW4;
       ccmW3: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmW4: // global
           (_ccmVZ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmVZ::I64 == 0) goto ccmW1; else goto ccmW0;
       ccmW1: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmW0: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmVZ::I64;
           R2 = lvl5_rcmPe_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.040366955 UTC

[section ""data" . System.Exit.exitWith1_closure" {
     System.Exit.exitWith1_closure:
         const System.Exit.exitWith1_info;
         const 0;
 },
 System.Exit.exitWith1_entry() //  []
         { info_tbl: [(ccmWg,
                       label: System.Exit.exitWith1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmWg: // global
           R1 = lvl6_rcmPf_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.044331111 UTC

[section ""data" . System.Exit.exitWith_closure" {
     System.Exit.exitWith_closure:
         const System.Exit.exitWith_info;
         const 0;
 },
 sat_scmPv_entry() //  [R1]
         { info_tbl: [(ccmWN,
                       label: sat_scmPv_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmWN: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmWO; else goto ccmWP;
       ccmWO: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmWP: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionExitCode_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_scmPw_entry() //  [R1]
         { info_tbl: [(ccmWQ,
                       label: sat_scmPw_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmWQ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto ccmWU; else goto ccmWT;
       ccmWU: // global
           HpAlloc = 24;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       ccmWT: // global
           _scmPp::P64 = P64[R1 + 7];
           I64[Hp - 16] = sat_scmPv_info;
           P64[Hp] = _scmPp::P64;
           R1 = Hp - 16;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Exit.exitWith_entry() //  [R2]
         { info_tbl: [(ccmWZ,
                       label: System.Exit.exitWith_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmWZ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmX0; else goto ccmX1;
       ccmX0: // global
           R2 = R2;
           R1 = System.Exit.exitWith_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccmX1: // global
           I64[Sp - 8] = block_ccmWr_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucmXc; else goto ccmWs;
       ucmXc: // global
           call _ccmWr(R1) args: 0, res: 0, upd: 0;
       ccmWs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccmWr() //  [R1]
         { info_tbl: [(ccmWr,
                       label: block_ccmWr_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmWr: // global
           if (R1 & 7 == 1) goto ccmWW; else goto ccmWX;
       ccmWW: // global
           R1 = System.Exit.exitSuccess1_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       ccmWX: // global
           I64[Sp - 8] = block_ccmWx_info;
           _scmPp::P64 = R1;
           R1 = P64[R1 + 6];
           P64[Sp] = _scmPp::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucmXb; else goto ccmWy;
       ucmXb: // global
           call _ccmWx(R1) args: 0, res: 0, upd: 0;
       ccmWy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccmWx() //  [R1]
         { info_tbl: [(ccmWx,
                       label: block_ccmWx_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmWx: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccmX7; else goto ccmX6;
       ccmX7: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccmX6: // global
           if (I64[R1 + 7] == 0) goto ccmXa; else goto ccmX9;
       ccmXa: // global
           Hp = Hp - 16;
           R1 = System.Exit.exitWith1_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       ccmX9: // global
           I64[Hp - 8] = sat_scmPw_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.056294692 UTC

[section ""data" . lvl7_rcmPg_closure" {
     lvl7_rcmPg_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.058028244 UTC

[section ""data" . lvl8_rcmPh_closure" {
     lvl8_rcmPh_closure:
         const GHC.IO.Exception.ExitFailure_con_info;
         const lvl7_rcmPg_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.060104298 UTC

[section ""data" . lvl9_rcmPi_closure" {
     lvl9_rcmPi_closure:
         const lvl9_rcmPi_info;
         const 0;
         const 0;
         const 0;
 },
 lvl9_rcmPi_entry() //  [R1]
         { info_tbl: [(ccmXL,
                       label: lvl9_rcmPi_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmXL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmXM; else goto ccmXN;
       ccmXM: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmXN: // global
           (_ccmXI::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmXI::I64 == 0) goto ccmXK; else goto ccmXJ;
       ccmXK: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmXJ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmXI::I64;
           R2 = lvl8_rcmPh_closure+2;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionExitCode_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.064182822 UTC

[section ""data" . System.Exit.exitFailure1_closure" {
     System.Exit.exitFailure1_closure:
         const System.Exit.exitFailure1_info;
         const 0;
 },
 System.Exit.exitFailure1_entry() //  []
         { info_tbl: [(ccmXZ,
                       label: System.Exit.exitFailure1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmXZ: // global
           R1 = lvl9_rcmPi_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.068485935 UTC

[section ""data" . exitFailure2_rcmPj_closure" {
     exitFailure2_rcmPj_closure:
         const exitFailure2_rcmPj_info;
         const 0;
 },
 exitFailure2_rcmPj_entry() //  []
         { info_tbl: [(ccmYa,
                       label: exitFailure2_rcmPj_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmYa: // global
           R1 = lvl9_rcmPi_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.071848201 UTC

[section ""data" . System.Exit.exitFailure_closure" {
     System.Exit.exitFailure_closure:
         const System.Exit.exitFailure_info;
         const 0;
 },
 System.Exit.exitFailure_entry() //  []
         { info_tbl: [(ccmYl,
                       label: System.Exit.exitFailure_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmYl: // global
           call exitFailure2_rcmPj_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.075195097 UTC

[section ""data" . System.Exit.die1_closure" {
     System.Exit.die1_closure:
         const System.Exit.die1_info;
         const 0;
 },
 System.Exit.die1_entry() //  [R2]
         { info_tbl: [(ccmYy,
                       label: System.Exit.die1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmYy: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccmYz; else goto ccmYA;
       ccmYz: // global
           R2 = R2;
           R1 = System.Exit.die1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccmYA: // global
           I64[Sp - 8] = block_ccmYw_info;
           R4 = GHC.Types.True_closure+2;
           R3 = R2;
           R2 = GHC.IO.Handle.FD.stderr_closure;
           Sp = Sp - 8;
           call GHC.IO.Handle.Text.hPutStr'_entry(R4,
                                                  R3,
                                                  R2) args: 8, res: 8, upd: 8;
     }
 },
 _ccmYw() //  []
         { info_tbl: [(ccmYw,
                       label: block_ccmYw_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmYw: // global
           R1 = lvl9_rcmPi_closure;
           Sp = Sp + 8;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.080847965 UTC

[section ""data" . System.Exit.die_closure" {
     System.Exit.die_closure:
         const System.Exit.die_info;
         const 0;
 },
 System.Exit.die_entry() //  [R2]
         { info_tbl: [(ccmYO,
                       label: System.Exit.die_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmYO: // global
           R2 = R2;
           call System.Exit.die1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.084235682 UTC

[section ""data" . exitSuccess2_rcmPk_closure" {
     exitSuccess2_rcmPk_closure:
         const exitSuccess2_rcmPk_info;
         const 0;
 },
 exitSuccess2_rcmPk_entry() //  []
         { info_tbl: [(ccmYZ,
                       label: exitSuccess2_rcmPk_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmYZ: // global
           R1 = lvl_rcmP9_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.087529312 UTC

[section ""data" . System.Exit.exitSuccess_closure" {
     System.Exit.exitSuccess_closure:
         const System.Exit.exitSuccess_info;
         const 0;
 },
 System.Exit.exitSuccess_entry() //  []
         { info_tbl: [(ccmZa,
                       label: System.Exit.exitSuccess_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmZa: // global
           call exitSuccess2_rcmPk_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.091004853 UTC

[section ""cstring" . System.Exit.$trModule4_bytes" {
     System.Exit.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.09279397 UTC

[section ""data" . System.Exit.$trModule3_closure" {
     System.Exit.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Exit.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.094566116 UTC

[section ""cstring" . System.Exit.$trModule2_bytes" {
     System.Exit.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,69,120,105,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.096328717 UTC

[section ""data" . System.Exit.$trModule1_closure" {
     System.Exit.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Exit.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.098585536 UTC

[section ""data" . System.Exit.$trModule_closure" {
     System.Exit.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.Exit.$trModule3_closure+1;
         const System.Exit.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.100379507 UTC

[section ""relreadonly" . ScmPO_srt" {
     ScmPO_srt:
         const GHC.IO.Exception.$fExceptionExitCode_$ctoException_closure;
         const lvl_rcmP9_closure;
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const lvl5_rcmPe_closure;
         const lvl6_rcmPf_closure;
         const System.Exit.exitWith_closure;
         const System.Exit.exitSuccess1_closure;
         const System.Exit.exitWith1_closure;
         const lvl9_rcmPi_closure;
         const exitFailure2_rcmPj_closure;
         const GHC.IO.Handle.Text.hPutStr'_closure;
         const GHC.IO.Handle.FD.stderr_closure;
         const System.Exit.die1_closure;
         const exitSuccess2_rcmPk_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.201099239 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:16.202510688 UTC

[section ""data" . lvl_rcmP9_closure" {
     lvl_rcmP9_closure:
         const lvl_rcmP9_info;
         const 0;
         const 0;
         const 0;
 },
 lvl_rcmP9_entry() //  [R1]
         { info_tbl: [(ccmZM,
                       label: lvl_rcmP9_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmZM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmZN; else goto ccmZO;
       ccmZN: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmZO: // global
           (_ccmZJ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmZJ::I64 == 0) goto ccmZL; else goto ccmZK;
       ccmZL: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmZK: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmZJ::I64;
           R2 = GHC.IO.Exception.ExitSuccess_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionExitCode_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.206807841 UTC

[section ""data" . System.Exit.exitSuccess1_closure" {
     System.Exit.exitSuccess1_closure:
         const System.Exit.exitSuccess1_info;
         const 0;
 },
 System.Exit.exitSuccess1_entry() //  []
         { info_tbl: [(ccn03,
                       label: System.Exit.exitSuccess1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccn03: // global
           R1 = lvl_rcmP9_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.210125326 UTC

[section ""cstring" . lvl1_rcmPa_bytes" {
     lvl1_rcmPa_bytes:
         I8[] [101,120,105,116,87,105,116,104]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.212088738 UTC

[section ""data" . lvl2_rcmPb_closure" {
     lvl2_rcmPb_closure:
         const lvl2_rcmPb_info;
         const 0;
         const 0;
         const 0;
 },
 lvl2_rcmPb_entry() //  [R1]
         { info_tbl: [(ccn0h,
                       label: lvl2_rcmPb_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccn0h: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccn0i; else goto ccn0j;
       ccn0i: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccn0j: // global
           (_ccn0e::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccn0e::I64 == 0) goto ccn0g; else goto ccn0f;
       ccn0g: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccn0f: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccn0e::I64;
           R2 = lvl1_rcmPa_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.216031485 UTC

[section ""cstring" . lvl3_rcmPc_bytes" {
     lvl3_rcmPc_bytes:
         I8[] [69,120,105,116,70,97,105,108,117,114,101,32,48]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.217936378 UTC

[section ""data" . lvl4_rcmPd_closure" {
     lvl4_rcmPd_closure:
         const lvl4_rcmPd_info;
         const 0;
         const 0;
         const 0;
 },
 lvl4_rcmPd_entry() //  [R1]
         { info_tbl: [(ccn0z,
                       label: lvl4_rcmPd_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccn0z: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccn0A; else goto ccn0B;
       ccn0A: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccn0B: // global
           (_ccn0w::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccn0w::I64 == 0) goto ccn0y; else goto ccn0x;
       ccn0y: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccn0x: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccn0w::I64;
           R2 = lvl3_rcmPc_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.222232483 UTC

[section ""data" . lvl5_rcmPe_closure" {
     lvl5_rcmPe_closure:
         const GHC.IO.Exception.IOError_con_info;
         const GHC.Base.Nothing_closure+1;
         const GHC.IO.Exception.InvalidArgument_closure+1;
         const lvl2_rcmPb_closure;
         const lvl4_rcmPd_closure;
         const GHC.Base.Nothing_closure+1;
         const GHC.Base.Nothing_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.224272333 UTC

[section ""data" . lvl6_rcmPf_closure" {
     lvl6_rcmPf_closure:
         const lvl6_rcmPf_info;
         const 0;
         const 0;
         const 0;
 },
 lvl6_rcmPf_entry() //  [R1]
         { info_tbl: [(ccn0R,
                       label: lvl6_rcmPf_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccn0R: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccn0S; else goto ccn0T;
       ccn0S: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccn0T: // global
           (_ccn0O::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccn0O::I64 == 0) goto ccn0Q; else goto ccn0P;
       ccn0Q: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccn0P: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccn0O::I64;
           R2 = lvl5_rcmPe_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.228430105 UTC

[section ""data" . System.Exit.exitWith1_closure" {
     System.Exit.exitWith1_closure:
         const System.Exit.exitWith1_info;
         const 0;
 },
 System.Exit.exitWith1_entry() //  []
         { info_tbl: [(ccn16,
                       label: System.Exit.exitWith1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccn16: // global
           R1 = lvl6_rcmPf_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.233177099 UTC

[section ""data" . System.Exit.exitWith_closure" {
     System.Exit.exitWith_closure:
         const System.Exit.exitWith_info;
         const 0;
 },
 sat_scmZw_entry() //  [R1]
         { info_tbl: [(ccn1D,
                       label: sat_scmZw_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccn1D: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccn1E; else goto ccn1F;
       ccn1E: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccn1F: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionExitCode_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_scmZx_entry() //  [R1]
         { info_tbl: [(ccn1G,
                       label: sat_scmZx_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccn1G: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto ccn1K; else goto ccn1J;
       ccn1K: // global
           HpAlloc = 24;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       ccn1J: // global
           _scmZq::P64 = P64[R1 + 7];
           I64[Hp - 16] = sat_scmZw_info;
           P64[Hp] = _scmZq::P64;
           R1 = Hp - 16;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Exit.exitWith_entry() //  [R2]
         { info_tbl: [(ccn1P,
                       label: System.Exit.exitWith_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccn1P: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccn1Q; else goto ccn1R;
       ccn1Q: // global
           R2 = R2;
           R1 = System.Exit.exitWith_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccn1R: // global
           I64[Sp - 8] = block_ccn1h_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucn22; else goto ccn1i;
       ucn22: // global
           call _ccn1h(R1) args: 0, res: 0, upd: 0;
       ccn1i: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccn1h() //  [R1]
         { info_tbl: [(ccn1h,
                       label: block_ccn1h_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccn1h: // global
           if (R1 & 7 == 1) goto ccn1M; else goto ccn1N;
       ccn1M: // global
           R1 = System.Exit.exitSuccess1_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       ccn1N: // global
           I64[Sp - 8] = block_ccn1n_info;
           _scmZq::P64 = R1;
           R1 = P64[R1 + 6];
           P64[Sp] = _scmZq::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucn21; else goto ccn1o;
       ucn21: // global
           call _ccn1n(R1) args: 0, res: 0, upd: 0;
       ccn1o: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccn1n() //  [R1]
         { info_tbl: [(ccn1n,
                       label: block_ccn1n_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccn1n: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccn1X; else goto ccn1W;
       ccn1X: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccn1W: // global
           if (I64[R1 + 7] == 0) goto ccn20; else goto ccn1Z;
       ccn20: // global
           Hp = Hp - 16;
           R1 = System.Exit.exitWith1_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       ccn1Z: // global
           I64[Hp - 8] = sat_scmZx_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.245819237 UTC

[section ""data" . lvl7_rcmPg_closure" {
     lvl7_rcmPg_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.247476404 UTC

[section ""data" . lvl8_rcmPh_closure" {
     lvl8_rcmPh_closure:
         const GHC.IO.Exception.ExitFailure_con_info;
         const lvl7_rcmPg_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.249516768 UTC

[section ""data" . lvl9_rcmPi_closure" {
     lvl9_rcmPi_closure:
         const lvl9_rcmPi_info;
         const 0;
         const 0;
         const 0;
 },
 lvl9_rcmPi_entry() //  [R1]
         { info_tbl: [(ccn2G,
                       label: lvl9_rcmPi_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccn2G: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccn2H; else goto ccn2I;
       ccn2H: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccn2I: // global
           (_ccn2D::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccn2D::I64 == 0) goto ccn2F; else goto ccn2E;
       ccn2F: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccn2E: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccn2D::I64;
           R2 = lvl8_rcmPh_closure+2;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionExitCode_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.253472677 UTC

[section ""data" . System.Exit.exitFailure1_closure" {
     System.Exit.exitFailure1_closure:
         const System.Exit.exitFailure1_info;
         const 0;
 },
 System.Exit.exitFailure1_entry() //  []
         { info_tbl: [(ccn2V,
                       label: System.Exit.exitFailure1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccn2V: // global
           R1 = lvl9_rcmPi_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.256727089 UTC

[section ""data" . exitFailure2_rcmPj_closure" {
     exitFailure2_rcmPj_closure:
         const exitFailure2_rcmPj_info;
         const 0;
 },
 exitFailure2_rcmPj_entry() //  []
         { info_tbl: [(ccn36,
                       label: exitFailure2_rcmPj_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccn36: // global
           R1 = lvl9_rcmPi_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.260407302 UTC

[section ""data" . System.Exit.exitFailure_closure" {
     System.Exit.exitFailure_closure:
         const System.Exit.exitFailure_info;
         const 0;
 },
 System.Exit.exitFailure_entry() //  []
         { info_tbl: [(ccn3h,
                       label: System.Exit.exitFailure_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccn3h: // global
           call exitFailure2_rcmPj_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.263978115 UTC

[section ""data" . System.Exit.die1_closure" {
     System.Exit.die1_closure:
         const System.Exit.die1_info;
         const 0;
 },
 System.Exit.die1_entry() //  [R2]
         { info_tbl: [(ccn3u,
                       label: System.Exit.die1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccn3u: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccn3v; else goto ccn3w;
       ccn3v: // global
           R2 = R2;
           R1 = System.Exit.die1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccn3w: // global
           I64[Sp - 8] = block_ccn3s_info;
           R4 = GHC.Types.True_closure+2;
           R3 = R2;
           R2 = GHC.IO.Handle.FD.stderr_closure;
           Sp = Sp - 8;
           call GHC.IO.Handle.Text.hPutStr'_entry(R4,
                                                  R3,
                                                  R2) args: 8, res: 8, upd: 8;
     }
 },
 _ccn3s() //  []
         { info_tbl: [(ccn3s,
                       label: block_ccn3s_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccn3s: // global
           R1 = lvl9_rcmPi_closure;
           Sp = Sp + 8;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.270546674 UTC

[section ""data" . System.Exit.die_closure" {
     System.Exit.die_closure:
         const System.Exit.die_info;
         const 0;
 },
 System.Exit.die_entry() //  [R2]
         { info_tbl: [(ccn3M,
                       label: System.Exit.die_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccn3M: // global
           R2 = R2;
           call System.Exit.die1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.273777304 UTC

[section ""data" . exitSuccess2_rcmPk_closure" {
     exitSuccess2_rcmPk_closure:
         const exitSuccess2_rcmPk_info;
         const 0;
 },
 exitSuccess2_rcmPk_entry() //  []
         { info_tbl: [(ccn3X,
                       label: exitSuccess2_rcmPk_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccn3X: // global
           R1 = lvl_rcmP9_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.277093764 UTC

[section ""data" . System.Exit.exitSuccess_closure" {
     System.Exit.exitSuccess_closure:
         const System.Exit.exitSuccess_info;
         const 0;
 },
 System.Exit.exitSuccess_entry() //  []
         { info_tbl: [(ccn48,
                       label: System.Exit.exitSuccess_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccn48: // global
           call exitSuccess2_rcmPk_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.28056042 UTC

[section ""cstring" . System.Exit.$trModule4_bytes" {
     System.Exit.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.282298036 UTC

[section ""data" . System.Exit.$trModule3_closure" {
     System.Exit.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Exit.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.284084501 UTC

[section ""cstring" . System.Exit.$trModule2_bytes" {
     System.Exit.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,69,120,105,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.285804187 UTC

[section ""data" . System.Exit.$trModule1_closure" {
     System.Exit.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Exit.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.287396453 UTC

[section ""data" . System.Exit.$trModule_closure" {
     System.Exit.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.Exit.$trModule3_closure+1;
         const System.Exit.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:16.289092566 UTC

[section ""relreadonly" . ScmZP_srt" {
     ScmZP_srt:
         const GHC.IO.Exception.$fExceptionExitCode_$ctoException_closure;
         const lvl_rcmP9_closure;
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const lvl5_rcmPe_closure;
         const lvl6_rcmPf_closure;
         const System.Exit.exitWith_closure;
         const System.Exit.exitSuccess1_closure;
         const System.Exit.exitWith1_closure;
         const lvl9_rcmPi_closure;
         const exitFailure2_rcmPj_closure;
         const GHC.IO.Handle.Text.hPutStr'_closure;
         const GHC.IO.Handle.FD.stderr_closure;
         const System.Exit.die1_closure;
         const exitSuccess2_rcmPk_closure;
 }]

