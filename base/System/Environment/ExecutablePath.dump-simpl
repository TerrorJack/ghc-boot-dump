
==================== Tidy Core ====================
2018-03-16 16:07:16.321101623 UTC

Result size of Tidy Core
  = {terms: 102, types: 128, coercions: 11, joins: 0/2}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Environment.ExecutablePath.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
System.Environment.ExecutablePath.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Environment.ExecutablePath.$trModule3 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Environment.ExecutablePath.$trModule3
  = GHC.Types.TrNameS System.Environment.ExecutablePath.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Environment.ExecutablePath.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 100 0}]
System.Environment.ExecutablePath.$trModule2
  = "System.Environment.ExecutablePath"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Environment.ExecutablePath.$trModule1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Environment.ExecutablePath.$trModule1
  = GHC.Types.TrNameS System.Environment.ExecutablePath.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
System.Environment.ExecutablePath.$trModule :: GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
System.Environment.ExecutablePath.$trModule
  = GHC.Types.Module
      System.Environment.ExecutablePath.$trModule3
      System.Environment.ExecutablePath.$trModule1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Environment.ExecutablePath.getExecutablePath4
  :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
System.Environment.ExecutablePath.getExecutablePath4
  = "/proc/self/exe"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Environment.ExecutablePath.getExecutablePath_file
  :: FilePath
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
System.Environment.ExecutablePath.getExecutablePath_file
  = GHC.CString.unpackCString#
      System.Environment.ExecutablePath.getExecutablePath4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Environment.ExecutablePath.getExecutablePath3
  :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
System.Environment.ExecutablePath.getExecutablePath3
  = "readSymbolicLink"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Environment.ExecutablePath.getExecutablePath2 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
System.Environment.ExecutablePath.getExecutablePath2
  = GHC.CString.unpackCString#
      System.Environment.ExecutablePath.getExecutablePath3

-- RHS size: {terms: 75, types: 106, coercions: 8, joins: 0/2}
System.Environment.ExecutablePath.getExecutablePath1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, FilePath #)
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 327 30}]
System.Environment.ExecutablePath.getExecutablePath1
  = \ (eta1_icn6F :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case GHC.Prim.newAlignedPinnedByteArray#
             @ GHC.Prim.RealWorld 4097# 1# eta1_icn6F
      of
      { (# ipv_icn6U, ipv1_icn6V #) ->
      case GHC.Prim.unsafeFreezeByteArray#
             @ GHC.Prim.RealWorld ipv1_icn6V ipv_icn6U
      of
      { (# ipv2_icn6Z, ipv3_icn70 #) ->
      case ((GHC.Magic.noinline
               @ (IO GHC.IO.Encoding.Types.TextEncoding)
               GHC.IO.Encoding.getFileSystemEncoding)
            `cast` (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R
                    :: (IO GHC.IO.Encoding.Types.TextEncoding :: *)
                       ~R# (GHC.Prim.State# GHC.Prim.RealWorld
                            -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                  GHC.IO.Encoding.Types.TextEncoding #) :: *)))
             ipv2_icn6Z
      of
      { (# ipv4_icn7i, ipv5_icn7j #) ->
      let {
        buf_scn86 :: GHC.Prim.Addr#
        [LclId]
        buf_scn86 = GHC.Prim.byteArrayContents# ipv3_icn70 } in
      let {
        buf1_scn85 [Dmd=<L,U(U)>] :: GHC.Ptr.Ptr CChar
        [LclId, Unf=OtherCon []]
        buf1_scn85 = GHC.Ptr.Ptr @ CChar buf_scn86 } in
      case GHC.Foreign.charIsRepresentable3
             @ FilePath
             ipv5_icn7j
             System.Environment.ExecutablePath.getExecutablePath_file
             ((\ (s_acn4q :: CString)
                 (s1_i7IAv [OS=OneShot] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case s_acn4q of { GHC.Ptr.Ptr ds4_dcn68 ->
                 case {__pkg_ccall base-4.11.0.0 Addr#
                           -> Addr#
                           -> Word#
                           -> State# RealWorld
                           -> (# State# RealWorld, Int# #)}_dcn6g
                        ds4_dcn68 buf_scn86 4096## s1_i7IAv
                 of
                 { (# ds5_dcn6e, ds6_dcn6d #) ->
                 case GHC.Prim.narrow32Int# ds6_dcn6d of wild1_XW {
                   __DEFAULT ->
                     System.Posix.Internals.peekFilePathLen1
                       (buf1_scn85, GHC.Types.I# wild1_XW) ds5_dcn6e;
                   -1# ->
                     case Foreign.C.Error.throwErrnoPath1
                            @ CInt
                            System.Environment.ExecutablePath.getExecutablePath2
                            System.Environment.ExecutablePath.getExecutablePath_file
                            ds5_dcn6e
                     of
                     { (# ipv6_i7IAy, ipv7_i7IAz #) ->
                     System.Posix.Internals.peekFilePathLen1
                       (buf1_scn85,
                        case ipv7_i7IAz
                             `cast` (Foreign.C.Types.N:CInt[0]
                                     :: (CInt :: *) ~R# (GHC.Int.Int32 :: *))
                        of
                        { GHC.Int.I32# x#_i7O0N ->
                        GHC.Types.I# x#_i7O0N
                        })
                       ipv6_i7IAy
                     }
                 }
                 }
                 })
              `cast` (<CString>_R ->_R Sym (GHC.Types.N:IO[0] <FilePath>_R)
                      :: (CString
                          -> GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, FilePath #) :: *)
                         ~R# (CString -> IO FilePath :: *)))
             ipv4_icn7i
      of
      { (# ipv6_icn74, ipv7_icn75 #) ->
      case GHC.Prim.touch#
             @ 'GHC.Types.UnliftedRep
             @ GHC.Prim.ByteArray#
             ipv3_icn70
             ipv6_icn74
      of s4_icn77
      { __DEFAULT ->
      (# s4_icn77, ipv7_icn75 #)
      }
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
getExecutablePath :: IO FilePath
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= System.Environment.ExecutablePath.getExecutablePath1
               `cast` (Sym (GHC.Types.N:IO[0] <FilePath>_R)
                       :: (GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, FilePath #) :: *)
                          ~R# (IO FilePath :: *))}]
getExecutablePath
  = System.Environment.ExecutablePath.getExecutablePath1
    `cast` (Sym (GHC.Types.N:IO[0] <FilePath>_R)
            :: (GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, FilePath #) :: *)
               ~R# (IO FilePath :: *))


