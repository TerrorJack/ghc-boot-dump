
==================== Raw Cmm ====================
2018-03-16 16:07:19.16083561 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:07:19.162315599 UTC

[section ""data" . System.Environment.Blank.getEnv_closure" {
     System.Environment.Blank.getEnv_closure:
         const System.Environment.Blank.getEnv_info;
         const 0;
 },
 System.Environment.Blank.getEnv_entry() //  [R2]
         { []
         }
     {offset
       ccqqi: // global
           R2 = R2;
           call System.Environment.lookupEnv1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.getEnv_info" {
     System.Environment.Blank.getEnv_info:
         const System.Environment.Blank.getEnv_entry;
         const 0;
         const 4294967310;
         const 8589934597;
         const Scqg4_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.165841483 UTC

[section ""cstring" . System.Environment.Blank.$trModule4_bytes" {
     System.Environment.Blank.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.167473608 UTC

[section ""data" . System.Environment.Blank.$trModule3_closure" {
     System.Environment.Blank.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Environment.Blank.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.169122817 UTC

[section ""cstring" . System.Environment.Blank.$trModule2_bytes" {
     System.Environment.Blank.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,69,110,118,105,114,111,110,109,101,110,116,46,66,108,97,110,107]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.170803232 UTC

[section ""data" . System.Environment.Blank.$trModule1_closure" {
     System.Environment.Blank.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Environment.Blank.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.172512823 UTC

[section ""data" . System.Environment.Blank.$trModule_closure" {
     System.Environment.Blank.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.Environment.Blank.$trModule3_closure+1;
         const System.Environment.Blank.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.175944874 UTC

[section ""data" . System.Environment.Blank.getEnvDefault1_closure" {
     System.Environment.Blank.getEnvDefault1_closure:
         const System.Environment.Blank.getEnvDefault1_info;
         const 0;
 },
 sat_scqeH_entry() //  [R1]
         { []
         }
     {offset
       ccqqG: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccqqH; else goto ccqqI;
       ccqqH: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccqqI: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Maybe.fromMaybe_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_scqeH_info" {
     sat_scqeH_info:
         const sat_scqeH_entry;
         const 2;
         const 18;
 },
 System.Environment.Blank.getEnvDefault1_entry() //  [R2, R3]
         { []
         }
     {offset
       ccqqJ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto ccqqK; else goto ccqqL;
       ccqqK: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Environment.Blank.getEnvDefault1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccqqL: // global
           I64[Sp - 24] = block_ccqqy_info;
           R1 = GHC.IO.Encoding.getForeignEncoding_closure;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.getEnvDefault1_info" {
     System.Environment.Blank.getEnvDefault1_info:
         const System.Environment.Blank.getEnvDefault1_entry;
         const 0;
         const 30064771086;
         const 12884901903;
         const Scqg4_srt+8;
 },
 _ccqqy() //  [R1]
         { []
         }
     {offset
       ccqqy: // global
           _scqey::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_ccqqA_info;
           R4 = System.Environment.getEnv3_closure+2;
           R3 = _scqey::P64;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Foreign.charIsRepresentable3_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqqy_info" {
     block_ccqqy_info:
         const _ccqqy;
         const 2;
         const 4294967326;
         const Scqg4_srt+16;
 },
 _ccqqA() //  [R1]
         { []
         }
     {offset
       ccqqA: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto ccqqP; else goto ccqqO;
       ccqqP: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccqqO: // global
           I64[Hp - 24] = sat_scqeH_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = R1;
           R1 = Hp - 24;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqqA_info" {
     block_ccqqA_info:
         const _ccqqA;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.185867663 UTC

[section ""data" . System.Environment.Blank.getEnvDefault_closure" {
     System.Environment.Blank.getEnvDefault_closure:
         const System.Environment.Blank.getEnvDefault_info;
         const 0;
 },
 System.Environment.Blank.getEnvDefault_entry() //  [R2, R3]
         { []
         }
     {offset
       ccqrb: // global
           R3 = R3;
           R2 = R2;
           call System.Environment.Blank.getEnvDefault1_entry(R3,
                                                              R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.getEnvDefault_info" {
     System.Environment.Blank.getEnvDefault_info:
         const System.Environment.Blank.getEnvDefault_entry;
         const 0;
         const 4294967310;
         const 12884901903;
         const Scqg4_srt+24;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.18886549 UTC

[section ""cstring" . lvl_rcqet_bytes" {
     lvl_rcqet_bytes:
         I8[] [117,110,115,101,116,101,110,118]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.191112659 UTC

[section ""data" . lvl1_rcqeu_closure" {
     lvl1_rcqeu_closure:
         const lvl1_rcqeu_info;
         const 0;
         const 0;
         const 0;
 },
 lvl1_rcqeu_entry() //  [R1]
         { []
         }
     {offset
       ccqrp: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccqrq; else goto ccqrr;
       ccqrq: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccqrr: // global
           (_ccqrm::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccqrm::I64 == 0) goto ccqro; else goto ccqrn;
       ccqro: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccqrn: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccqrm::I64;
           R2 = lvl_rcqet_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl1_rcqeu_info" {
     lvl1_rcqeu_info:
         const lvl1_rcqeu_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.195354029 UTC

[section ""data" . System.Environment.Blank.unsetEnv3_closure" {
     System.Environment.Blank.unsetEnv3_closure:
         const System.Environment.Blank.unsetEnv3_info;
         const 0;
 },
 System.Environment.Blank.unsetEnv3_entry() //  [R2]
         { []
         }
     {offset
       ccqrF: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl1_rcqeu_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.unsetEnv3_info" {
     System.Environment.Blank.unsetEnv3_info:
         const System.Environment.Blank.unsetEnv3_entry;
         const 0;
         const 12884901902;
         const 8589934596;
         const Scqg4_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.199393286 UTC

[section ""data" . System.Environment.Blank.unsetEnv2_closure" {
     System.Environment.Blank.unsetEnv2_closure:
         const System.Environment.Blank.unsetEnv2_info;
         const 0;
 },
 System.Environment.Blank.unsetEnv2_entry() //  [R2]
         { []
         }
     {offset
       ccqrT: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccqrU; else goto ccqrV;
       ccqrU: // global
           R2 = R2;
           R1 = System.Environment.Blank.unsetEnv2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccqrV: // global
           I64[Sp - 8] = block_ccqrQ_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucqsh; else goto ccqrR;
       ucqsh: // global
           call _ccqrQ(R1) args: 0, res: 0, upd: 0;
       ccqrR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.unsetEnv2_info" {
     System.Environment.Blank.unsetEnv2_info:
         const System.Environment.Blank.unsetEnv2_entry;
         const 0;
         const 12884901902;
         const 8589934597;
         const Scqg4_srt+48;
 },
 _ccqrQ() //  [R1]
         { []
         }
     {offset
       ccqrQ: // global
           (_scqeS::I64) = call "capi" arg hints:  [PtrHint]  result hints:  [‘signed’] ghczuwrapperZC0ZCbaseZCSystemziEnvironmentziBlankZCunsetenv(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_scqeS::I64) == (-1) :: W32) goto ccqsc; else goto ccqs6;
       ccqsc: // global
           (_scqeX::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _scqeX::I64;
           Sp = Sp + 8;
           call System.Environment.Blank.unsetEnv3_entry(R2) args: 8, res: 0, upd: 8;
       ccqs6: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqrQ_info" {
     block_ccqrQ_info:
         const _ccqrQ;
         const 0;
         const 4294967326;
         const Scqg4_srt+56;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.205098772 UTC

[section ""data" . System.Environment.Blank.unsetEnv1_closure" {
     System.Environment.Blank.unsetEnv1_closure:
         const System.Environment.Blank.unsetEnv1_info;
         const 0;
 },
 System.Environment.Blank.unsetEnv1_entry() //  [R2]
         { []
         }
     {offset
       ccqsy: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccqsz; else goto ccqsA;
       ccqsz: // global
           R2 = R2;
           R1 = System.Environment.Blank.unsetEnv1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccqsA: // global
           I64[Sp - 16] = block_ccqsw_info;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.unsetEnv1_info" {
     System.Environment.Blank.unsetEnv1_info:
         const System.Environment.Blank.unsetEnv1_entry;
         const 0;
         const 55834574862;
         const 8589934597;
         const Scqg4_srt+48;
 },
 _ccqsw() //  [R1]
         { []
         }
     {offset
       ccqsw: // global
           R4 = System.Environment.Blank.unsetEnv2_closure+2;
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 16;
           call GHC.Foreign.charIsRepresentable3_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqsw_info" {
     block_ccqsw_info:
         const _ccqsw;
         const 1;
         const 4294967326;
         const Scqg4_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.210714096 UTC

[section ""data" . System.Environment.Blank.unsetEnv_closure" {
     System.Environment.Blank.unsetEnv_closure:
         const System.Environment.Blank.unsetEnv_info;
         const 0;
 },
 System.Environment.Blank.unsetEnv_entry() //  [R2]
         { []
         }
     {offset
       ccqsO: // global
           R2 = R2;
           call System.Environment.Blank.unsetEnv1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.unsetEnv_info" {
     System.Environment.Blank.unsetEnv_info:
         const System.Environment.Blank.unsetEnv_entry;
         const 0;
         const 4294967310;
         const 8589934597;
         const Scqg4_srt+72;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.214363526 UTC

[section ""cstring" . lvl2_rcqev_bytes" {
     lvl2_rcqev_bytes:
         I8[] [115,101,116,101,110,118]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.21657013 UTC

[section ""data" . lvl3_rcqew_closure" {
     lvl3_rcqew_closure:
         const lvl3_rcqew_info;
         const 0;
         const 0;
         const 0;
 },
 lvl3_rcqew_entry() //  [R1]
         { []
         }
     {offset
       ccqt2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccqt3; else goto ccqt4;
       ccqt3: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccqt4: // global
           (_ccqsZ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccqsZ::I64 == 0) goto ccqt1; else goto ccqt0;
       ccqt1: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccqt0: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccqsZ::I64;
           R2 = lvl2_rcqev_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl3_rcqew_info" {
     lvl3_rcqew_info:
         const lvl3_rcqew_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.220490789 UTC

[section ""data" . System.Environment.Blank.setEnv3_closure" {
     System.Environment.Blank.setEnv3_closure:
         const System.Environment.Blank.setEnv3_info;
         const 0;
 },
 System.Environment.Blank.setEnv3_entry() //  [R2]
         { []
         }
     {offset
       ccqti: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl3_rcqew_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.setEnv3_info" {
     System.Environment.Blank.setEnv3_info:
         const System.Environment.Blank.setEnv3_entry;
         const 0;
         const 279172874254;
         const 8589934596;
         const Scqg4_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.226513149 UTC

[section ""data" . System.Environment.Blank.setEnv2_closure" {
     System.Environment.Blank.setEnv2_closure:
         const System.Environment.Blank.setEnv2_info;
         const 0;
 },
 sat_scqfy_entry() //  [R1, R2]
         { []
         }
     {offset
       ccqtK: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccqtO; else goto ccqtP;
       ccqtO: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccqtP: // global
           I64[Sp - 16] = block_ccqtH_info;
           R1 = P64[R1 + 6];
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto ucquh; else goto ccqtI;
       ucquh: // global
           call _ccqtH(R1) args: 0, res: 0, upd: 0;
       ccqtI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_scqfy_info" {
     sat_scqfy_info:
         const sat_scqfy_entry;
         const 1;
         const 4294967305;
         const 8589934597;
         const Scqg4_srt+88;
 },
 _ccqtH() //  [R1]
         { []
         }
     {offset
       ccqtH: // global
           I64[Sp] = block_ccqtN_info;
           _scqfl::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _scqfl::I64;
           if (R1 & 7 != 0) goto ucqug; else goto ccqtR;
       ucqug: // global
           call _ccqtN(R1) args: 0, res: 0, upd: 0;
       ccqtR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqtH_info" {
     block_ccqtH_info:
         const _ccqtH;
         const 1;
         const 4294967326;
         const Scqg4_srt+88;
 },
 _ccqtN() //  [R1]
         { []
         }
     {offset
       ccqtN: // global
           (_scqfr::I64) = call "ccall" arg hints:  [PtrHint, PtrHint,
                                                     ‘signed’]  result hints:  [‘signed’] setenv(I64[Sp + 8], I64[R1 + 7], 1);
           if (%MO_SS_Conv_W64_W32(_scqfr::I64) == (-1) :: W32) goto ccqub; else goto ccqu5;
       ccqub: // global
           (_scqfw::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _scqfw::I64;
           Sp = Sp + 16;
           call System.Environment.Blank.setEnv3_entry(R2) args: 8, res: 0, upd: 8;
       ccqu5: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqtN_info" {
     block_ccqtN_info:
         const _ccqtN;
         const 65;
         const 4294967326;
         const Scqg4_srt+88;
 },
 sat_scqfz_entry() //  [R1, R2]
         { []
         }
     {offset
       ccqui: // global
           if ((Sp + -24) < SpLim) (likely: False) goto ccquj; else goto ccquk;
       ccquj: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccquk: // global
           I64[Sp - 24] = block_ccqtA_info;
           _scqf8::P64 = P64[R1 + 6];
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp - 16] = _scqf8::P64;
           P64[Sp - 8] = R2;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_scqfz_info" {
     sat_scqfz_info:
         const sat_scqfz_entry;
         const 1;
         const 38654705673;
         const 8589934597;
         const Scqg4_srt+64;
 },
 _ccqtA() //  [R1]
         { []
         }
     {offset
       ccqtA: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccqun; else goto ccqum;
       ccqun: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccqum: // global
           I64[Hp - 8] = sat_scqfy_info;
           P64[Hp] = P64[Sp + 16];
           R4 = Hp - 6;
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 24;
           call GHC.Foreign.charIsRepresentable3_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqtA_info" {
     block_ccqtA_info:
         const _ccqtA;
         const 2;
         const 4294967326;
         const Scqg4_srt+88;
 },
 System.Environment.Blank.setEnv2_entry() //  [R2, R3]
         { []
         }
     {offset
       ccquo: // global
           if ((Sp + -24) < SpLim) (likely: False) goto ccqup; else goto ccquq;
       ccqup: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Environment.Blank.setEnv2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccquq: // global
           I64[Sp - 24] = block_ccqtt_info;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.setEnv2_info" {
     System.Environment.Blank.setEnv2_info:
         const System.Environment.Blank.setEnv2_entry;
         const 0;
         const 107374182414;
         const 12884901903;
         const Scqg4_srt+64;
 },
 _ccqtt() //  [R1]
         { []
         }
     {offset
       ccqtt: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccqut; else goto ccqus;
       ccqut: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccqus: // global
           I64[Hp - 8] = sat_scqfz_info;
           P64[Hp] = P64[Sp + 16];
           R4 = Hp - 6;
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 24;
           call GHC.Foreign.charIsRepresentable3_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqtt_info" {
     block_ccqtt_info:
         const _ccqtt;
         const 2;
         const 38654705694;
         const Scqg4_srt+64;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.241019402 UTC

[section ""data" . System.Environment.Blank.setEnv9_closure" {
     System.Environment.Blank.setEnv9_closure:
         const System.Environment.Blank.setEnv9_info;
 },
 System.Environment.Blank.setEnv9_entry() //  [R2]
         { []
         }
     {offset
       ccqv5: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccqv6; else goto ccqv7;
       ccqv6: // global
           R2 = R2;
           R1 = System.Environment.Blank.setEnv9_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccqv7: // global
           I64[Sp - 8] = block_ccqv2_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucqvf; else goto ccqv3;
       ucqvf: // global
           call _ccqv2(R1) args: 0, res: 0, upd: 0;
       ccqv3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.setEnv9_info" {
     System.Environment.Blank.setEnv9_info:
         const System.Environment.Blank.setEnv9_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _ccqv2() //  [R1]
         { []
         }
     {offset
       ccqv2: // global
           if (I64[R1 + 7] == 0) goto ccqve; else goto ccqvd;
       ccqve: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       ccqvd: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqv2_info" {
     block_ccqv2_info:
         const _ccqv2;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.24633798 UTC

[section ""cstring" . System.Environment.Blank.setEnv8_bytes" {
     System.Environment.Blank.setEnv8_bytes:
         I8[] [115,101,116,69,110,118]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.249116667 UTC

[section ""data" . System.Environment.Blank.setEnv7_closure" {
     System.Environment.Blank.setEnv7_closure:
         const System.Environment.Blank.setEnv7_info;
         const 0;
         const 0;
         const 0;
 },
 System.Environment.Blank.setEnv7_entry() //  [R1]
         { []
         }
     {offset
       ccqvy: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccqvz; else goto ccqvA;
       ccqvz: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccqvA: // global
           (_ccqvv::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccqvv::I64 == 0) goto ccqvx; else goto ccqvw;
       ccqvx: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccqvw: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccqvv::I64;
           R2 = System.Environment.Blank.setEnv8_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . System.Environment.Blank.setEnv7_info" {
     System.Environment.Blank.setEnv7_info:
         const System.Environment.Blank.setEnv7_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.252695131 UTC

[section ""data" . System.Environment.Blank.setEnv6_closure" {
     System.Environment.Blank.setEnv6_closure:
         const GHC.IO.Exception.IOError_con_info;
         const GHC.Base.Nothing_closure+1;
         const GHC.IO.Exception.InvalidArgument_closure+1;
         const System.Environment.Blank.setEnv7_closure;
         const GHC.Types.[]_closure+1;
         const GHC.Base.Nothing_closure+1;
         const GHC.Base.Nothing_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.255119087 UTC

[section ""data" . System.Environment.Blank.setEnv5_closure" {
     System.Environment.Blank.setEnv5_closure:
         const System.Environment.Blank.setEnv5_info;
         const 0;
         const 0;
         const 0;
 },
 System.Environment.Blank.setEnv5_entry() //  [R1]
         { []
         }
     {offset
       ccqvP: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccqvQ; else goto ccqvR;
       ccqvQ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccqvR: // global
           (_ccqvM::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccqvM::I64 == 0) goto ccqvO; else goto ccqvN;
       ccqvO: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccqvN: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccqvM::I64;
           R2 = System.Environment.Blank.setEnv6_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . System.Environment.Blank.setEnv5_info" {
     System.Environment.Blank.setEnv5_info:
         const System.Environment.Blank.setEnv5_entry;
         const 0;
         const 12884901909;
         const Scqg4_srt+104;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.259229224 UTC

[section ""data" . System.Environment.Blank.setEnv4_closure" {
     System.Environment.Blank.setEnv4_closure:
         const GHC.Types.C#_con_info;
         const 61;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.264414705 UTC

[section ""data" . System.Environment.Blank.setEnv1_closure" {
     System.Environment.Blank.setEnv1_closure:
         const System.Environment.Blank.setEnv1_info;
         const 0;
 },
 sat_scqfU_entry() //  [R1]
         { []
         }
     {offset
       ccqwv: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccqww; else goto ccqwx;
       ccqww: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccqwx: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = System.Environment.Blank.setEnv9_closure+1;
           Sp = Sp - 16;
           call GHC.List.takeWhile_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_scqfU_info" {
     sat_scqfU_info:
         const sat_scqfU_entry;
         const 1;
         const 16;
 },
 sat_scqfW_entry() //  [R1]
         { []
         }
     {offset
       ccqwE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccqwF; else goto ccqwG;
       ccqwF: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccqwG: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = System.Environment.Blank.setEnv9_closure+1;
           Sp = Sp - 16;
           call GHC.List.takeWhile_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_scqfW_info" {
     sat_scqfW_info:
         const sat_scqfW_entry;
         const 1;
         const 16;
 },
 System.Environment.Blank.setEnv1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       ccqwL: // global
           if ((Sp + -32) < SpLim) (likely: False) goto ccqwM; else goto ccqwN;
       ccqwM: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = System.Environment.Blank.setEnv1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       ccqwN: // global
           I64[Sp - 24] = block_ccqw4_info;
           _scqfF::P64 = R3;
           R3 = R2;
           R2 = System.Environment.Blank.setEnv9_closure+1;
           P64[Sp - 16] = _scqfF::P64;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call GHC.List.takeWhile_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.setEnv1_info" {
     System.Environment.Blank.setEnv1_info:
         const System.Environment.Blank.setEnv1_entry;
         const 0;
         const 219915210457102;
         const 17179869207;
         const Scqg4_srt+8;
 },
 _ccqw4() //  [R1]
         { []
         }
     {offset
       ccqw4: // global
           if (R1 & 7 == 1) goto ucqxj; else goto ccqwJ;
       ucqxj: // global
           Sp = Sp + 24;
           call _ccqxf() args: 0, res: 0, upd: 0;
       ccqwJ: // global
           I64[Sp - 8] = block_ccqw9_info;
           R4 = R1;
           R3 = System.Environment.Blank.setEnv4_closure+1;
           R2 = GHC.Classes.$fEqChar_closure;
           P64[Sp] = R1;
           Sp = Sp - 8;
           call GHC.List.elem_entry(R4, R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqw4_info" {
     block_ccqw4_info:
         const _ccqw4;
         const 2;
         const 149546466279454;
         const Scqg4_srt+8;
 },
 _ccqw9() //  [R1]
         { []
         }
     {offset
       ccqw9: // global
           if (R1 & 7 == 1) goto ccqwT; else goto ucqxk;
       ccqwT: // global
           I64[Sp] = block_ccqwd_info;
           R1 = P64[Sp + 24];
           if (R1 & 7 != 0) goto ucqxm; else goto ccqwe;
       ucqxm: // global
           call _ccqwd(R1) args: 0, res: 0, upd: 0;
       ccqwe: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       ucqxk: // global
           Sp = Sp + 32;
           call _ccqxf() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_ccqw9_info" {
     block_ccqw9_info:
         const _ccqw9;
         const 3;
         const 149546466279454;
         const Scqg4_srt+8;
 },
 _ccqwd() //  [R1]
         { []
         }
     {offset
       ccqwd: // global
           if (R1 & 7 == 1) goto ccqwW; else goto ccqx8;
       ccqwW: // global
           I64[Sp] = block_ccqwi_info;
           R1 = GHC.IO.Encoding.getForeignEncoding_closure;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
       ccqx8: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto ccqxb; else goto ccqxa;
       ccqxb: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccqxa: // global
           I64[Hp - 16] = sat_scqfW_info;
           P64[Hp] = P64[Sp + 16];
           R3 = Hp - 16;
           R2 = P64[Sp + 8];
           Sp = Sp + 32;
           call System.Environment.Blank.setEnv2_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqwd_info" {
     block_ccqwd_info:
         const _ccqwd;
         const 259;
         const 8808977924126;
         const Scqg4_srt+8;
 },
 _ccqwi() //  [R1]
         { []
         }
     {offset
       ccqwi: // global
           I64[Sp] = block_ccqwk_info;
           R4 = System.Environment.getEnv3_closure+2;
           R3 = P64[Sp + 8];
           R2 = R1;
           call GHC.Foreign.charIsRepresentable3_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqwi_info" {
     block_ccqwi_info:
         const _ccqwi;
         const 259;
         const 4402341478430;
         const Scqg4_srt+16;
 },
 _ccqwk() //  [R1]
         { []
         }
     {offset
       ccqwk: // global
           I64[Sp] = block_ccqwm_info;
           R1 = R1;
           if (R1 & 7 != 0) goto ucqxo; else goto ccqwn;
       ucqxo: // global
           call _ccqwm(R1) args: 0, res: 0, upd: 0;
       ccqwn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqwk_info" {
     block_ccqwk_info:
         const _ccqwk;
         const 259;
         const 4294967326;
         const Scqg4_srt+96;
 },
 _ccqwm() //  [R1]
         { []
         }
     {offset
       ccqwm: // global
           if (R1 & 7 == 1) goto ccqx0; else goto ccqx7;
       ccqx0: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto ccqx3; else goto ccqx2;
       ccqx3: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccqx2: // global
           I64[Hp - 16] = sat_scqfU_info;
           P64[Hp] = P64[Sp + 16];
           R3 = Hp - 16;
           R2 = P64[Sp + 8];
           Sp = Sp + 32;
           call System.Environment.Blank.setEnv2_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
       ccqx7: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqwm_info" {
     block_ccqwm_info:
         const _ccqwm;
         const 259;
         const 4294967326;
         const Scqg4_srt+96;
 },
 _ccqxf() //  []
         { []
         }
     {offset
       ccqxf: // global
           R1 = System.Environment.Blank.setEnv5_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.282437076 UTC

[section ""data" . System.Environment.Blank.setEnv_closure" {
     System.Environment.Blank.setEnv_closure:
         const System.Environment.Blank.setEnv_info;
         const 0;
 },
 System.Environment.Blank.setEnv_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       ccqyd: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call System.Environment.Blank.setEnv1_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.setEnv_info" {
     System.Environment.Blank.setEnv_info:
         const System.Environment.Blank.setEnv_entry;
         const 0;
         const 4294967310;
         const 17179869207;
         const Scqg4_srt+120;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.286211321 UTC

[section ""relreadonly" . Scqg4_srt" {
     Scqg4_srt:
         const System.Environment.lookupEnv1_closure;
         const GHC.IO.Encoding.getForeignEncoding_closure;
         const System.Environment.getEnv3_closure;
         const System.Environment.Blank.getEnvDefault1_closure;
         const Foreign.C.Error.$wlvl_closure;
         const lvl1_rcqeu_closure;
         const System.Environment.Blank.unsetEnv2_closure;
         const System.Environment.Blank.unsetEnv3_closure;
         const GHC.IO.Encoding.getFileSystemEncoding_closure;
         const System.Environment.Blank.unsetEnv1_closure;
         const lvl3_rcqew_closure;
         const System.Environment.Blank.setEnv3_closure;
         const System.Environment.Blank.setEnv2_closure;
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const System.Environment.Blank.setEnv6_closure;
         const System.Environment.Blank.setEnv1_closure;
         const System.Environment.Blank.setEnv5_closure;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.553777725 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:07:19.555374593 UTC

[section ""data" . System.Environment.Blank.getEnv_closure" {
     System.Environment.Blank.getEnv_closure:
         const System.Environment.Blank.getEnv_info;
         const 0;
 },
 System.Environment.Blank.getEnv_entry() //  [R2]
         { []
         }
     {offset
       ccqzO: // global
           R2 = R2;
           call System.Environment.lookupEnv1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.getEnv_info" {
     System.Environment.Blank.getEnv_info:
         const System.Environment.Blank.getEnv_entry;
         const 0;
         const 4294967310;
         const 8589934597;
         const ScqzR_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.558639081 UTC

[section ""cstring" . System.Environment.Blank.$trModule4_bytes" {
     System.Environment.Blank.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.560425149 UTC

[section ""data" . System.Environment.Blank.$trModule3_closure" {
     System.Environment.Blank.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Environment.Blank.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.562200166 UTC

[section ""cstring" . System.Environment.Blank.$trModule2_bytes" {
     System.Environment.Blank.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,69,110,118,105,114,111,110,109,101,110,116,46,66,108,97,110,107]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.56397333 UTC

[section ""data" . System.Environment.Blank.$trModule1_closure" {
     System.Environment.Blank.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Environment.Blank.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.565760936 UTC

[section ""data" . System.Environment.Blank.$trModule_closure" {
     System.Environment.Blank.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.Environment.Blank.$trModule3_closure+1;
         const System.Environment.Blank.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.569110929 UTC

[section ""data" . System.Environment.Blank.getEnvDefault1_closure" {
     System.Environment.Blank.getEnvDefault1_closure:
         const System.Environment.Blank.getEnvDefault1_info;
         const 0;
 },
 sat_scqyu_entry() //  [R1]
         { []
         }
     {offset
       ccqAd: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccqAe; else goto ccqAf;
       ccqAe: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccqAf: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Maybe.fromMaybe_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_scqyu_info" {
     sat_scqyu_info:
         const sat_scqyu_entry;
         const 2;
         const 18;
 },
 System.Environment.Blank.getEnvDefault1_entry() //  [R2, R3]
         { []
         }
     {offset
       ccqAg: // global
           if ((Sp + -24) < SpLim) (likely: False) goto ccqAh; else goto ccqAi;
       ccqAh: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Environment.Blank.getEnvDefault1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccqAi: // global
           I64[Sp - 24] = block_ccqA5_info;
           R1 = GHC.IO.Encoding.getForeignEncoding_closure;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.getEnvDefault1_info" {
     System.Environment.Blank.getEnvDefault1_info:
         const System.Environment.Blank.getEnvDefault1_entry;
         const 0;
         const 30064771086;
         const 12884901903;
         const ScqzR_srt+8;
 },
 _ccqA5() //  [R1]
         { []
         }
     {offset
       ccqA5: // global
           _scqyl::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_ccqA7_info;
           R4 = System.Environment.getEnv3_closure+2;
           R3 = _scqyl::P64;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Foreign.charIsRepresentable3_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqA5_info" {
     block_ccqA5_info:
         const _ccqA5;
         const 2;
         const 4294967326;
         const ScqzR_srt+16;
 },
 _ccqA7() //  [R1]
         { []
         }
     {offset
       ccqA7: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto ccqAm; else goto ccqAl;
       ccqAm: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccqAl: // global
           I64[Hp - 24] = sat_scqyu_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = R1;
           R1 = Hp - 24;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqA7_info" {
     block_ccqA7_info:
         const _ccqA7;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.578721053 UTC

[section ""data" . System.Environment.Blank.getEnvDefault_closure" {
     System.Environment.Blank.getEnvDefault_closure:
         const System.Environment.Blank.getEnvDefault_info;
         const 0;
 },
 System.Environment.Blank.getEnvDefault_entry() //  [R2, R3]
         { []
         }
     {offset
       ccqAN: // global
           R3 = R3;
           R2 = R2;
           call System.Environment.Blank.getEnvDefault1_entry(R3,
                                                              R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.getEnvDefault_info" {
     System.Environment.Blank.getEnvDefault_info:
         const System.Environment.Blank.getEnvDefault_entry;
         const 0;
         const 4294967310;
         const 12884901903;
         const ScqzR_srt+24;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.581962174 UTC

[section ""cstring" . lvl_rcqet_bytes" {
     lvl_rcqet_bytes:
         I8[] [117,110,115,101,116,101,110,118]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.584257217 UTC

[section ""data" . lvl1_rcqeu_closure" {
     lvl1_rcqeu_closure:
         const lvl1_rcqeu_info;
         const 0;
         const 0;
         const 0;
 },
 lvl1_rcqeu_entry() //  [R1]
         { []
         }
     {offset
       ccqB1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccqB2; else goto ccqB3;
       ccqB2: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccqB3: // global
           (_ccqAY::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccqAY::I64 == 0) goto ccqB0; else goto ccqAZ;
       ccqB0: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccqAZ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccqAY::I64;
           R2 = lvl_rcqet_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl1_rcqeu_info" {
     lvl1_rcqeu_info:
         const lvl1_rcqeu_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.588480528 UTC

[section ""data" . System.Environment.Blank.unsetEnv3_closure" {
     System.Environment.Blank.unsetEnv3_closure:
         const System.Environment.Blank.unsetEnv3_info;
         const 0;
 },
 System.Environment.Blank.unsetEnv3_entry() //  [R2]
         { []
         }
     {offset
       ccqBi: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl1_rcqeu_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.unsetEnv3_info" {
     System.Environment.Blank.unsetEnv3_info:
         const System.Environment.Blank.unsetEnv3_entry;
         const 0;
         const 12884901902;
         const 8589934596;
         const ScqzR_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.593587576 UTC

[section ""data" . System.Environment.Blank.unsetEnv2_closure" {
     System.Environment.Blank.unsetEnv2_closure:
         const System.Environment.Blank.unsetEnv2_info;
         const 0;
 },
 System.Environment.Blank.unsetEnv2_entry() //  [R2]
         { []
         }
     {offset
       ccqBw: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccqBx; else goto ccqBy;
       ccqBx: // global
           R2 = R2;
           R1 = System.Environment.Blank.unsetEnv2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccqBy: // global
           I64[Sp - 8] = block_ccqBt_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucqBU; else goto ccqBu;
       ucqBU: // global
           call _ccqBt(R1) args: 0, res: 0, upd: 0;
       ccqBu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.unsetEnv2_info" {
     System.Environment.Blank.unsetEnv2_info:
         const System.Environment.Blank.unsetEnv2_entry;
         const 0;
         const 12884901902;
         const 8589934597;
         const ScqzR_srt+48;
 },
 _ccqBt() //  [R1]
         { []
         }
     {offset
       ccqBt: // global
           (_scqyF::I64) = call "capi" arg hints:  [PtrHint]  result hints:  [‘signed’] ghczuwrapperZC0ZCbaseZCSystemziEnvironmentziBlankZCunsetenv(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_scqyF::I64) == (-1) :: W32) goto ccqBP; else goto ccqBJ;
       ccqBP: // global
           (_scqyK::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _scqyK::I64;
           Sp = Sp + 8;
           call System.Environment.Blank.unsetEnv3_entry(R2) args: 8, res: 0, upd: 8;
       ccqBJ: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqBt_info" {
     block_ccqBt_info:
         const _ccqBt;
         const 0;
         const 4294967326;
         const ScqzR_srt+56;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.599615018 UTC

[section ""data" . System.Environment.Blank.unsetEnv1_closure" {
     System.Environment.Blank.unsetEnv1_closure:
         const System.Environment.Blank.unsetEnv1_info;
         const 0;
 },
 System.Environment.Blank.unsetEnv1_entry() //  [R2]
         { []
         }
     {offset
       ccqCd: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccqCe; else goto ccqCf;
       ccqCe: // global
           R2 = R2;
           R1 = System.Environment.Blank.unsetEnv1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccqCf: // global
           I64[Sp - 16] = block_ccqCb_info;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.unsetEnv1_info" {
     System.Environment.Blank.unsetEnv1_info:
         const System.Environment.Blank.unsetEnv1_entry;
         const 0;
         const 55834574862;
         const 8589934597;
         const ScqzR_srt+48;
 },
 _ccqCb() //  [R1]
         { []
         }
     {offset
       ccqCb: // global
           R4 = System.Environment.Blank.unsetEnv2_closure+2;
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 16;
           call GHC.Foreign.charIsRepresentable3_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqCb_info" {
     block_ccqCb_info:
         const _ccqCb;
         const 1;
         const 4294967326;
         const ScqzR_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.605385846 UTC

[section ""data" . System.Environment.Blank.unsetEnv_closure" {
     System.Environment.Blank.unsetEnv_closure:
         const System.Environment.Blank.unsetEnv_info;
         const 0;
 },
 System.Environment.Blank.unsetEnv_entry() //  [R2]
         { []
         }
     {offset
       ccqCu: // global
           R2 = R2;
           call System.Environment.Blank.unsetEnv1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.unsetEnv_info" {
     System.Environment.Blank.unsetEnv_info:
         const System.Environment.Blank.unsetEnv_entry;
         const 0;
         const 4294967310;
         const 8589934597;
         const ScqzR_srt+72;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.609189235 UTC

[section ""cstring" . lvl2_rcqev_bytes" {
     lvl2_rcqev_bytes:
         I8[] [115,101,116,101,110,118]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.611506785 UTC

[section ""data" . lvl3_rcqew_closure" {
     lvl3_rcqew_closure:
         const lvl3_rcqew_info;
         const 0;
         const 0;
         const 0;
 },
 lvl3_rcqew_entry() //  [R1]
         { []
         }
     {offset
       ccqCI: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccqCJ; else goto ccqCK;
       ccqCJ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccqCK: // global
           (_ccqCF::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccqCF::I64 == 0) goto ccqCH; else goto ccqCG;
       ccqCH: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccqCG: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccqCF::I64;
           R2 = lvl2_rcqev_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl3_rcqew_info" {
     lvl3_rcqew_info:
         const lvl3_rcqew_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.615597734 UTC

[section ""data" . System.Environment.Blank.setEnv3_closure" {
     System.Environment.Blank.setEnv3_closure:
         const System.Environment.Blank.setEnv3_info;
         const 0;
 },
 System.Environment.Blank.setEnv3_entry() //  [R2]
         { []
         }
     {offset
       ccqCZ: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl3_rcqew_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.setEnv3_info" {
     System.Environment.Blank.setEnv3_info:
         const System.Environment.Blank.setEnv3_entry;
         const 0;
         const 279172874254;
         const 8589934596;
         const ScqzR_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.621612345 UTC

[section ""data" . System.Environment.Blank.setEnv2_closure" {
     System.Environment.Blank.setEnv2_closure:
         const System.Environment.Blank.setEnv2_info;
         const 0;
 },
 sat_scqzl_entry() //  [R1, R2]
         { []
         }
     {offset
       ccqDr: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccqDv; else goto ccqDw;
       ccqDv: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccqDw: // global
           I64[Sp - 16] = block_ccqDo_info;
           R1 = P64[R1 + 6];
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto ucqDY; else goto ccqDp;
       ucqDY: // global
           call _ccqDo(R1) args: 0, res: 0, upd: 0;
       ccqDp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_scqzl_info" {
     sat_scqzl_info:
         const sat_scqzl_entry;
         const 1;
         const 4294967305;
         const 8589934597;
         const ScqzR_srt+88;
 },
 _ccqDo() //  [R1]
         { []
         }
     {offset
       ccqDo: // global
           I64[Sp] = block_ccqDu_info;
           _scqz8::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _scqz8::I64;
           if (R1 & 7 != 0) goto ucqDX; else goto ccqDy;
       ucqDX: // global
           call _ccqDu(R1) args: 0, res: 0, upd: 0;
       ccqDy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqDo_info" {
     block_ccqDo_info:
         const _ccqDo;
         const 1;
         const 4294967326;
         const ScqzR_srt+88;
 },
 _ccqDu() //  [R1]
         { []
         }
     {offset
       ccqDu: // global
           (_scqze::I64) = call "ccall" arg hints:  [PtrHint, PtrHint,
                                                     ‘signed’]  result hints:  [‘signed’] setenv(I64[Sp + 8], I64[R1 + 7], 1);
           if (%MO_SS_Conv_W64_W32(_scqze::I64) == (-1) :: W32) goto ccqDS; else goto ccqDM;
       ccqDS: // global
           (_scqzj::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _scqzj::I64;
           Sp = Sp + 16;
           call System.Environment.Blank.setEnv3_entry(R2) args: 8, res: 0, upd: 8;
       ccqDM: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqDu_info" {
     block_ccqDu_info:
         const _ccqDu;
         const 65;
         const 4294967326;
         const ScqzR_srt+88;
 },
 sat_scqzm_entry() //  [R1, R2]
         { []
         }
     {offset
       ccqDZ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto ccqE0; else goto ccqE1;
       ccqE0: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccqE1: // global
           I64[Sp - 24] = block_ccqDh_info;
           _scqyV::P64 = P64[R1 + 6];
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp - 16] = _scqyV::P64;
           P64[Sp - 8] = R2;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_scqzm_info" {
     sat_scqzm_info:
         const sat_scqzm_entry;
         const 1;
         const 38654705673;
         const 8589934597;
         const ScqzR_srt+64;
 },
 _ccqDh() //  [R1]
         { []
         }
     {offset
       ccqDh: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccqE4; else goto ccqE3;
       ccqE4: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccqE3: // global
           I64[Hp - 8] = sat_scqzl_info;
           P64[Hp] = P64[Sp + 16];
           R4 = Hp - 6;
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 24;
           call GHC.Foreign.charIsRepresentable3_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqDh_info" {
     block_ccqDh_info:
         const _ccqDh;
         const 2;
         const 4294967326;
         const ScqzR_srt+88;
 },
 System.Environment.Blank.setEnv2_entry() //  [R2, R3]
         { []
         }
     {offset
       ccqE5: // global
           if ((Sp + -24) < SpLim) (likely: False) goto ccqE6; else goto ccqE7;
       ccqE6: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Environment.Blank.setEnv2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccqE7: // global
           I64[Sp - 24] = block_ccqDa_info;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.setEnv2_info" {
     System.Environment.Blank.setEnv2_info:
         const System.Environment.Blank.setEnv2_entry;
         const 0;
         const 107374182414;
         const 12884901903;
         const ScqzR_srt+64;
 },
 _ccqDa() //  [R1]
         { []
         }
     {offset
       ccqDa: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto ccqEa; else goto ccqE9;
       ccqEa: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccqE9: // global
           I64[Hp - 8] = sat_scqzm_info;
           P64[Hp] = P64[Sp + 16];
           R4 = Hp - 6;
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 24;
           call GHC.Foreign.charIsRepresentable3_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqDa_info" {
     block_ccqDa_info:
         const _ccqDa;
         const 2;
         const 38654705694;
         const ScqzR_srt+64;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.636941599 UTC

[section ""data" . System.Environment.Blank.setEnv9_closure" {
     System.Environment.Blank.setEnv9_closure:
         const System.Environment.Blank.setEnv9_info;
 },
 System.Environment.Blank.setEnv9_entry() //  [R2]
         { []
         }
     {offset
       ccqET: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccqEU; else goto ccqEV;
       ccqEU: // global
           R2 = R2;
           R1 = System.Environment.Blank.setEnv9_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccqEV: // global
           I64[Sp - 8] = block_ccqEQ_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucqF3; else goto ccqER;
       ucqF3: // global
           call _ccqEQ(R1) args: 0, res: 0, upd: 0;
       ccqER: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.setEnv9_info" {
     System.Environment.Blank.setEnv9_info:
         const System.Environment.Blank.setEnv9_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _ccqEQ() //  [R1]
         { []
         }
     {offset
       ccqEQ: // global
           if (I64[R1 + 7] == 0) goto ccqF2; else goto ccqF1;
       ccqF2: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       ccqF1: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqEQ_info" {
     block_ccqEQ_info:
         const _ccqEQ;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.642229403 UTC

[section ""cstring" . System.Environment.Blank.setEnv8_bytes" {
     System.Environment.Blank.setEnv8_bytes:
         I8[] [115,101,116,69,110,118]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.644539485 UTC

[section ""data" . System.Environment.Blank.setEnv7_closure" {
     System.Environment.Blank.setEnv7_closure:
         const System.Environment.Blank.setEnv7_info;
         const 0;
         const 0;
         const 0;
 },
 System.Environment.Blank.setEnv7_entry() //  [R1]
         { []
         }
     {offset
       ccqFp: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccqFq; else goto ccqFr;
       ccqFq: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccqFr: // global
           (_ccqFm::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccqFm::I64 == 0) goto ccqFo; else goto ccqFn;
       ccqFo: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccqFn: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccqFm::I64;
           R2 = System.Environment.Blank.setEnv8_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . System.Environment.Blank.setEnv7_info" {
     System.Environment.Blank.setEnv7_info:
         const System.Environment.Blank.setEnv7_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.648886893 UTC

[section ""data" . System.Environment.Blank.setEnv6_closure" {
     System.Environment.Blank.setEnv6_closure:
         const GHC.IO.Exception.IOError_con_info;
         const GHC.Base.Nothing_closure+1;
         const GHC.IO.Exception.InvalidArgument_closure+1;
         const System.Environment.Blank.setEnv7_closure;
         const GHC.Types.[]_closure+1;
         const GHC.Base.Nothing_closure+1;
         const GHC.Base.Nothing_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.651431756 UTC

[section ""data" . System.Environment.Blank.setEnv5_closure" {
     System.Environment.Blank.setEnv5_closure:
         const System.Environment.Blank.setEnv5_info;
         const 0;
         const 0;
         const 0;
 },
 System.Environment.Blank.setEnv5_entry() //  [R1]
         { []
         }
     {offset
       ccqFH: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccqFI; else goto ccqFJ;
       ccqFI: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccqFJ: // global
           (_ccqFE::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccqFE::I64 == 0) goto ccqFG; else goto ccqFF;
       ccqFG: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccqFF: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccqFE::I64;
           R2 = System.Environment.Blank.setEnv6_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . System.Environment.Blank.setEnv5_info" {
     System.Environment.Blank.setEnv5_info:
         const System.Environment.Blank.setEnv5_entry;
         const 0;
         const 12884901909;
         const ScqzR_srt+104;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.655699143 UTC

[section ""data" . System.Environment.Blank.setEnv4_closure" {
     System.Environment.Blank.setEnv4_closure:
         const GHC.Types.C#_con_info;
         const 61;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.661013735 UTC

[section ""data" . System.Environment.Blank.setEnv1_closure" {
     System.Environment.Blank.setEnv1_closure:
         const System.Environment.Blank.setEnv1_info;
         const 0;
 },
 sat_scqzH_entry() //  [R1]
         { []
         }
     {offset
       ccqGo: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccqGp; else goto ccqGq;
       ccqGp: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccqGq: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = System.Environment.Blank.setEnv9_closure+1;
           Sp = Sp - 16;
           call GHC.List.takeWhile_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_scqzH_info" {
     sat_scqzH_info:
         const sat_scqzH_entry;
         const 1;
         const 16;
 },
 sat_scqzJ_entry() //  [R1]
         { []
         }
     {offset
       ccqGx: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccqGy; else goto ccqGz;
       ccqGy: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccqGz: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = System.Environment.Blank.setEnv9_closure+1;
           Sp = Sp - 16;
           call GHC.List.takeWhile_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_scqzJ_info" {
     sat_scqzJ_info:
         const sat_scqzJ_entry;
         const 1;
         const 16;
 },
 System.Environment.Blank.setEnv1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       ccqGE: // global
           if ((Sp + -32) < SpLim) (likely: False) goto ccqGF; else goto ccqGG;
       ccqGF: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = System.Environment.Blank.setEnv1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       ccqGG: // global
           I64[Sp - 24] = block_ccqFX_info;
           _scqzs::P64 = R3;
           R3 = R2;
           R2 = System.Environment.Blank.setEnv9_closure+1;
           P64[Sp - 16] = _scqzs::P64;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call GHC.List.takeWhile_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.setEnv1_info" {
     System.Environment.Blank.setEnv1_info:
         const System.Environment.Blank.setEnv1_entry;
         const 0;
         const 219915210457102;
         const 17179869207;
         const ScqzR_srt+8;
 },
 _ccqFX() //  [R1]
         { []
         }
     {offset
       ccqFX: // global
           if (R1 & 7 == 1) goto ucqHc; else goto ccqGC;
       ucqHc: // global
           Sp = Sp + 24;
           call _ccqH8() args: 0, res: 0, upd: 0;
       ccqGC: // global
           I64[Sp - 8] = block_ccqG2_info;
           R4 = R1;
           R3 = System.Environment.Blank.setEnv4_closure+1;
           R2 = GHC.Classes.$fEqChar_closure;
           P64[Sp] = R1;
           Sp = Sp - 8;
           call GHC.List.elem_entry(R4, R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqFX_info" {
     block_ccqFX_info:
         const _ccqFX;
         const 2;
         const 149546466279454;
         const ScqzR_srt+8;
 },
 _ccqG2() //  [R1]
         { []
         }
     {offset
       ccqG2: // global
           if (R1 & 7 == 1) goto ccqGM; else goto ucqHd;
       ccqGM: // global
           I64[Sp] = block_ccqG6_info;
           R1 = P64[Sp + 24];
           if (R1 & 7 != 0) goto ucqHf; else goto ccqG7;
       ucqHf: // global
           call _ccqG6(R1) args: 0, res: 0, upd: 0;
       ccqG7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       ucqHd: // global
           Sp = Sp + 32;
           call _ccqH8() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_ccqG2_info" {
     block_ccqG2_info:
         const _ccqG2;
         const 3;
         const 149546466279454;
         const ScqzR_srt+8;
 },
 _ccqG6() //  [R1]
         { []
         }
     {offset
       ccqG6: // global
           if (R1 & 7 == 1) goto ccqGP; else goto ccqH1;
       ccqGP: // global
           I64[Sp] = block_ccqGb_info;
           R1 = GHC.IO.Encoding.getForeignEncoding_closure;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
       ccqH1: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto ccqH4; else goto ccqH3;
       ccqH4: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccqH3: // global
           I64[Hp - 16] = sat_scqzJ_info;
           P64[Hp] = P64[Sp + 16];
           R3 = Hp - 16;
           R2 = P64[Sp + 8];
           Sp = Sp + 32;
           call System.Environment.Blank.setEnv2_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqG6_info" {
     block_ccqG6_info:
         const _ccqG6;
         const 259;
         const 8808977924126;
         const ScqzR_srt+8;
 },
 _ccqGb() //  [R1]
         { []
         }
     {offset
       ccqGb: // global
           I64[Sp] = block_ccqGd_info;
           R4 = System.Environment.getEnv3_closure+2;
           R3 = P64[Sp + 8];
           R2 = R1;
           call GHC.Foreign.charIsRepresentable3_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqGb_info" {
     block_ccqGb_info:
         const _ccqGb;
         const 259;
         const 4402341478430;
         const ScqzR_srt+16;
 },
 _ccqGd() //  [R1]
         { []
         }
     {offset
       ccqGd: // global
           I64[Sp] = block_ccqGf_info;
           R1 = R1;
           if (R1 & 7 != 0) goto ucqHh; else goto ccqGg;
       ucqHh: // global
           call _ccqGf(R1) args: 0, res: 0, upd: 0;
       ccqGg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqGd_info" {
     block_ccqGd_info:
         const _ccqGd;
         const 259;
         const 4294967326;
         const ScqzR_srt+96;
 },
 _ccqGf() //  [R1]
         { []
         }
     {offset
       ccqGf: // global
           if (R1 & 7 == 1) goto ccqGT; else goto ccqH0;
       ccqGT: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto ccqGW; else goto ccqGV;
       ccqGW: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccqGV: // global
           I64[Hp - 16] = sat_scqzH_info;
           P64[Hp] = P64[Sp + 16];
           R3 = Hp - 16;
           R2 = P64[Sp + 8];
           Sp = Sp + 32;
           call System.Environment.Blank.setEnv2_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
       ccqH0: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccqGf_info" {
     block_ccqGf_info:
         const _ccqGf;
         const 259;
         const 4294967326;
         const ScqzR_srt+96;
 },
 _ccqH8() //  []
         { []
         }
     {offset
       ccqH8: // global
           R1 = System.Environment.Blank.setEnv5_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.679501631 UTC

[section ""data" . System.Environment.Blank.setEnv_closure" {
     System.Environment.Blank.setEnv_closure:
         const System.Environment.Blank.setEnv_info;
         const 0;
 },
 System.Environment.Blank.setEnv_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       ccqIi: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call System.Environment.Blank.setEnv1_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . System.Environment.Blank.setEnv_info" {
     System.Environment.Blank.setEnv_info:
         const System.Environment.Blank.setEnv_entry;
         const 0;
         const 4294967310;
         const 17179869207;
         const ScqzR_srt+120;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:19.682896718 UTC

[section ""relreadonly" . ScqzR_srt" {
     ScqzR_srt:
         const System.Environment.lookupEnv1_closure;
         const GHC.IO.Encoding.getForeignEncoding_closure;
         const System.Environment.getEnv3_closure;
         const System.Environment.Blank.getEnvDefault1_closure;
         const Foreign.C.Error.$wlvl_closure;
         const lvl1_rcqeu_closure;
         const System.Environment.Blank.unsetEnv2_closure;
         const System.Environment.Blank.unsetEnv3_closure;
         const GHC.IO.Encoding.getFileSystemEncoding_closure;
         const System.Environment.Blank.unsetEnv1_closure;
         const lvl3_rcqew_closure;
         const System.Environment.Blank.setEnv3_closure;
         const System.Environment.Blank.setEnv2_closure;
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const System.Environment.Blank.setEnv6_closure;
         const System.Environment.Blank.setEnv1_closure;
         const System.Environment.Blank.setEnv5_closure;
 }]

