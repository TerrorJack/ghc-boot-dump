
==================== Pre unarise: ====================
2018-03-16 16:07:15.725530843 UTC

System.Info.os1 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "linux"#;

System.Info.os :: GHC.Base.String
[GblId] =
    [] \u [] GHC.CString.unpackCString# System.Info.os1;

System.Info.arch1 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "x86_64"#;

System.Info.arch :: GHC.Base.String
[GblId] =
    [] \u [] GHC.CString.unpackCString# System.Info.arch1;

System.Info.compilerName1 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ghc"#;

System.Info.compilerName :: GHC.Base.String
[GblId] =
    [] \u [] GHC.CString.unpackCString# System.Info.compilerName1;

System.Info.compilerVersion4 :: (GHC.Types.Int, GHC.Types.Int)
[GblId] =
    [] \u []
        case quotRemInt# [805# 100#] of {
          (#,#) ipv_scmCT [Occ=Once] ipv1_scmCU [Occ=Once] ->
              let {
                sat_scmCW [Occ=Once] :: GHC.Types.Int
                [LclId] =
                    CCCS GHC.Types.I#! [ipv1_scmCU]; } in
              let {
                sat_scmCV [Occ=Once] :: GHC.Types.Int
                [LclId] =
                    CCCS GHC.Types.I#! [ipv_scmCT];
              } in  (,) [sat_scmCV sat_scmCW];
        };

System.Info.compilerVersion5 :: GHC.Types.Int
[GblId] =
    [] \u []
        case System.Info.compilerVersion4 of {
          (,) major_scmCY [Occ=Once] _ [Occ=Dead] -> major_scmCY;
        };

System.Info.compilerVersion3 :: GHC.Types.Int
[GblId] =
    [] \u []
        case System.Info.compilerVersion4 of {
          (,) _ [Occ=Dead] minor_scmD2 [Occ=Once] -> minor_scmD2;
        };

System.Info.compilerVersion2 :: [GHC.Types.Int]
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [System.Info.compilerVersion3 GHC.Types.[]];

System.Info.compilerVersion1 :: [GHC.Types.Int]
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [System.Info.compilerVersion5
                      System.Info.compilerVersion2];

System.Info.compilerVersion :: Data.Version.Version
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE Data.Version.Version! [System.Info.compilerVersion1
                                         GHC.Types.[]];

System.Info.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

System.Info.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Info.$trModule4];

System.Info.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "System.Info"#;

System.Info.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Info.$trModule2];

System.Info.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [System.Info.$trModule3
                                     System.Info.$trModule1];


==================== STG syntax: ====================
2018-03-16 16:07:15.727198486 UTC

System.Info.os1 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "linux"#;

System.Info.os :: GHC.Base.String
[GblId] =
    [] \u [] GHC.CString.unpackCString# System.Info.os1;

System.Info.arch1 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "x86_64"#;

System.Info.arch :: GHC.Base.String
[GblId] =
    [] \u [] GHC.CString.unpackCString# System.Info.arch1;

System.Info.compilerName1 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ghc"#;

System.Info.compilerName :: GHC.Base.String
[GblId] =
    [] \u [] GHC.CString.unpackCString# System.Info.compilerName1;

System.Info.compilerVersion4 :: (GHC.Types.Int, GHC.Types.Int)
[GblId] =
    [] \u []
        case quotRemInt# [805# 100#] of {
          (#,#) ipv_scmCT [Occ=Once] ipv1_scmCU [Occ=Once] ->
              let {
                sat_scmCW [Occ=Once] :: GHC.Types.Int
                [LclId] =
                    CCCS GHC.Types.I#! [ipv1_scmCU]; } in
              let {
                sat_scmCV [Occ=Once] :: GHC.Types.Int
                [LclId] =
                    CCCS GHC.Types.I#! [ipv_scmCT];
              } in  (,) [sat_scmCV sat_scmCW];
        };

System.Info.compilerVersion5 :: GHC.Types.Int
[GblId] =
    [] \u []
        case System.Info.compilerVersion4 of {
          (,) major_scmCY [Occ=Once] _ [Occ=Dead] -> major_scmCY;
        };

System.Info.compilerVersion3 :: GHC.Types.Int
[GblId] =
    [] \u []
        case System.Info.compilerVersion4 of {
          (,) _ [Occ=Dead] minor_scmD2 [Occ=Once] -> minor_scmD2;
        };

System.Info.compilerVersion2 :: [GHC.Types.Int]
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [System.Info.compilerVersion3 GHC.Types.[]];

System.Info.compilerVersion1 :: [GHC.Types.Int]
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [System.Info.compilerVersion5
                      System.Info.compilerVersion2];

System.Info.compilerVersion :: Data.Version.Version
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE Data.Version.Version! [System.Info.compilerVersion1
                                         GHC.Types.[]];

System.Info.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

System.Info.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Info.$trModule4];

System.Info.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "System.Info"#;

System.Info.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Info.$trModule2];

System.Info.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [System.Info.$trModule3
                                     System.Info.$trModule1];


==================== Pre unarise: ====================
2018-03-16 16:07:15.862564027 UTC

System.Info.os1 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "linux"#;

System.Info.os :: GHC.Base.String
[GblId] =
    [] \u [] GHC.CString.unpackCString# System.Info.os1;

System.Info.arch1 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "x86_64"#;

System.Info.arch :: GHC.Base.String
[GblId] =
    [] \u [] GHC.CString.unpackCString# System.Info.arch1;

System.Info.compilerName1 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ghc"#;

System.Info.compilerName :: GHC.Base.String
[GblId] =
    [] \u [] GHC.CString.unpackCString# System.Info.compilerName1;

System.Info.compilerVersion4 :: (GHC.Types.Int, GHC.Types.Int)
[GblId] =
    [] \u []
        case quotRemInt# [805# 100#] of {
          (#,#) ipv_scmHK [Occ=Once] ipv1_scmHL [Occ=Once] ->
              let {
                sat_scmHN [Occ=Once] :: GHC.Types.Int
                [LclId] =
                    CCCS GHC.Types.I#! [ipv1_scmHL]; } in
              let {
                sat_scmHM [Occ=Once] :: GHC.Types.Int
                [LclId] =
                    CCCS GHC.Types.I#! [ipv_scmHK];
              } in  (,) [sat_scmHM sat_scmHN];
        };

System.Info.compilerVersion5 :: GHC.Types.Int
[GblId] =
    [] \u []
        case System.Info.compilerVersion4 of {
          (,) major_scmHP [Occ=Once] _ [Occ=Dead] -> major_scmHP;
        };

System.Info.compilerVersion3 :: GHC.Types.Int
[GblId] =
    [] \u []
        case System.Info.compilerVersion4 of {
          (,) _ [Occ=Dead] minor_scmHT [Occ=Once] -> minor_scmHT;
        };

System.Info.compilerVersion2 :: [GHC.Types.Int]
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [System.Info.compilerVersion3 GHC.Types.[]];

System.Info.compilerVersion1 :: [GHC.Types.Int]
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [System.Info.compilerVersion5
                      System.Info.compilerVersion2];

System.Info.compilerVersion :: Data.Version.Version
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE Data.Version.Version! [System.Info.compilerVersion1
                                         GHC.Types.[]];

System.Info.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

System.Info.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Info.$trModule4];

System.Info.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "System.Info"#;

System.Info.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Info.$trModule2];

System.Info.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [System.Info.$trModule3
                                     System.Info.$trModule1];


==================== STG syntax: ====================
2018-03-16 16:07:15.864361523 UTC

System.Info.os1 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "linux"#;

System.Info.os :: GHC.Base.String
[GblId] =
    [] \u [] GHC.CString.unpackCString# System.Info.os1;

System.Info.arch1 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "x86_64"#;

System.Info.arch :: GHC.Base.String
[GblId] =
    [] \u [] GHC.CString.unpackCString# System.Info.arch1;

System.Info.compilerName1 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ghc"#;

System.Info.compilerName :: GHC.Base.String
[GblId] =
    [] \u [] GHC.CString.unpackCString# System.Info.compilerName1;

System.Info.compilerVersion4 :: (GHC.Types.Int, GHC.Types.Int)
[GblId] =
    [] \u []
        case quotRemInt# [805# 100#] of {
          (#,#) ipv_scmHK [Occ=Once] ipv1_scmHL [Occ=Once] ->
              let {
                sat_scmHN [Occ=Once] :: GHC.Types.Int
                [LclId] =
                    CCCS GHC.Types.I#! [ipv1_scmHL]; } in
              let {
                sat_scmHM [Occ=Once] :: GHC.Types.Int
                [LclId] =
                    CCCS GHC.Types.I#! [ipv_scmHK];
              } in  (,) [sat_scmHM sat_scmHN];
        };

System.Info.compilerVersion5 :: GHC.Types.Int
[GblId] =
    [] \u []
        case System.Info.compilerVersion4 of {
          (,) major_scmHP [Occ=Once] _ [Occ=Dead] -> major_scmHP;
        };

System.Info.compilerVersion3 :: GHC.Types.Int
[GblId] =
    [] \u []
        case System.Info.compilerVersion4 of {
          (,) _ [Occ=Dead] minor_scmHT [Occ=Once] -> minor_scmHT;
        };

System.Info.compilerVersion2 :: [GHC.Types.Int]
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [System.Info.compilerVersion3 GHC.Types.[]];

System.Info.compilerVersion1 :: [GHC.Types.Int]
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [System.Info.compilerVersion5
                      System.Info.compilerVersion2];

System.Info.compilerVersion :: Data.Version.Version
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE Data.Version.Version! [System.Info.compilerVersion1
                                         GHC.Types.[]];

System.Info.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

System.Info.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Info.$trModule4];

System.Info.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "System.Info"#;

System.Info.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.Info.$trModule2];

System.Info.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [System.Info.$trModule3
                                     System.Info.$trModule1];

