
==================== Output Cmm ====================
2018-03-16 16:07:02.528533523 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:02.529079042 UTC

[section ""cstring" . Text.Show.Functions.$fShow(->)4_bytes" {
     Text.Show.Functions.$fShow(->)4_bytes:
         I8[] [60,102,117,110,99,116,105,111,110,62]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.529924021 UTC

[section ""data" . Text.Show.Functions.$fShow(->)3_closure" {
     Text.Show.Functions.$fShow(->)3_closure:
         const Text.Show.Functions.$fShow(->)3_info;
         const 0;
         const 0;
         const 0;
 },
 Text.Show.Functions.$fShow(->)3_entry() //  [R1]
         { info_tbl: [(cc8lr,
                       label: Text.Show.Functions.$fShow(->)3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8lr: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cc8ls; else goto cc8lt;
       cc8ls: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cc8lt: // global
           (_cc8lo::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_cc8lo::I64 == 0) goto cc8lq; else goto cc8lp;
       cc8lq: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       cc8lp: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _cc8lo::I64;
           R2 = Text.Show.Functions.$fShow(->)4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.530908713 UTC

[section ""data" . Text.Show.Functions.$fShow(->)2_closure" {
     Text.Show.Functions.$fShow(->)2_closure:
         const Text.Show.Functions.$fShow(->)2_info;
         const 0;
 },
 Text.Show.Functions.$fShow(->)2_entry() //  [R2]
         { info_tbl: [(cc8ly,
                       label: Text.Show.Functions.$fShow(->)2_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8ly: // global
           R3 = R2;
           R2 = Text.Show.Functions.$fShow(->)3_closure;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.53174584 UTC

[section ""data" . Text.Show.Functions.$fShow(->)_$cshowsPrec_closure" {
     Text.Show.Functions.$fShow(->)_$cshowsPrec_closure:
         const Text.Show.Functions.$fShow(->)_$cshowsPrec_info;
         const 0;
 },
 Text.Show.Functions.$fShow(->)_$cshowsPrec_entry() //  [R4]
         { info_tbl: [(cc8lG,
                       label: Text.Show.Functions.$fShow(->)_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8lG: // global
           R2 = R4;
           call Text.Show.Functions.$fShow(->)2_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.532536407 UTC

[section ""data" . Text.Show.Functions.$fShow(->)_$cshow_closure" {
     Text.Show.Functions.$fShow(->)_$cshow_closure:
         const Text.Show.Functions.$fShow(->)_$cshow_info;
         const 0;
 },
 Text.Show.Functions.$fShow(->)_$cshow_entry() //  []
         { info_tbl: [(cc8lN,
                       label: Text.Show.Functions.$fShow(->)_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8lN: // global
           R1 = Text.Show.Functions.$fShow(->)3_closure;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.533452466 UTC

[section ""data" . Text.Show.Functions.$fShow(->)1_closure" {
     Text.Show.Functions.$fShow(->)1_closure:
         const Text.Show.Functions.$fShow(->)1_info;
         const 0;
 },
 Text.Show.Functions.$fShow(->)1_entry() //  [R3]
         { info_tbl: [(cc8lU,
                       label: Text.Show.Functions.$fShow(->)1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8lU: // global
           R2 = R3;
           call Text.Show.Functions.$fShow(->)2_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.53431339 UTC

[section ""data" . Text.Show.Functions.$fShow(->)_$cshowList_closure" {
     Text.Show.Functions.$fShow(->)_$cshowList_closure:
         const Text.Show.Functions.$fShow(->)_$cshowList_info;
         const 0;
 },
 Text.Show.Functions.$fShow(->)_$cshowList_entry() //  [R2, R3]
         { info_tbl: [(cc8m1,
                       label: Text.Show.Functions.$fShow(->)_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8m1: // global
           R4 = R3;
           R3 = R2;
           R2 = Text.Show.Functions.$fShow(->)1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.535058167 UTC

[section ""data" . Text.Show.Functions.$fShow(->)_closure" {
     Text.Show.Functions.$fShow(->)_closure:
         const GHC.Show.C:Show_con_info;
         const Text.Show.Functions.$fShow(->)_$cshowsPrec_closure+3;
         const Text.Show.Functions.$fShow(->)_$cshow_closure+1;
         const Text.Show.Functions.$fShow(->)_$cshowList_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.535655062 UTC

[section ""cstring" . Text.Show.Functions.$trModule4_bytes" {
     Text.Show.Functions.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.536167102 UTC

[section ""data" . Text.Show.Functions.$trModule3_closure" {
     Text.Show.Functions.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Text.Show.Functions.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.536770018 UTC

[section ""cstring" . Text.Show.Functions.$trModule2_bytes" {
     Text.Show.Functions.$trModule2_bytes:
         I8[] [84,101,120,116,46,83,104,111,119,46,70,117,110,99,116,105,111,110,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.537361696 UTC

[section ""data" . Text.Show.Functions.$trModule1_closure" {
     Text.Show.Functions.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Text.Show.Functions.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.53795808 UTC

[section ""data" . Text.Show.Functions.$trModule_closure" {
     Text.Show.Functions.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Text.Show.Functions.$trModule3_closure+1;
         const Text.Show.Functions.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.538505937 UTC

[section ""relreadonly" . Sc8lB_srt" {
     Sc8lB_srt:
         const Text.Show.Functions.$fShow(->)3_closure;
         const Text.Show.Functions.$fShow(->)2_closure;
         const Text.Show.Functions.$fShow(->)1_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.5391005 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:02.539604671 UTC

[section ""cstring" . Text.Show.Functions.$fShow(->)4_bytes" {
     Text.Show.Functions.$fShow(->)4_bytes:
         I8[] [60,102,117,110,99,116,105,111,110,62]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.540366199 UTC

[section ""data" . Text.Show.Functions.$fShow(->)3_closure" {
     Text.Show.Functions.$fShow(->)3_closure:
         const Text.Show.Functions.$fShow(->)3_info;
         const 0;
         const 0;
         const 0;
 },
 Text.Show.Functions.$fShow(->)3_entry() //  [R1]
         { info_tbl: [(cc8ma,
                       label: Text.Show.Functions.$fShow(->)3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8ma: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cc8mb; else goto cc8mc;
       cc8mb: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cc8mc: // global
           (_cc8m7::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_cc8m7::I64 == 0) goto cc8m9; else goto cc8m8;
       cc8m9: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       cc8m8: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _cc8m7::I64;
           R2 = Text.Show.Functions.$fShow(->)4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.541456208 UTC

[section ""data" . Text.Show.Functions.$fShow(->)2_closure" {
     Text.Show.Functions.$fShow(->)2_closure:
         const Text.Show.Functions.$fShow(->)2_info;
         const 0;
 },
 Text.Show.Functions.$fShow(->)2_entry() //  [R2]
         { info_tbl: [(cc8mh,
                       label: Text.Show.Functions.$fShow(->)2_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8mh: // global
           R3 = R2;
           R2 = Text.Show.Functions.$fShow(->)3_closure;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.542308246 UTC

[section ""data" . Text.Show.Functions.$fShow(->)_$cshowsPrec_closure" {
     Text.Show.Functions.$fShow(->)_$cshowsPrec_closure:
         const Text.Show.Functions.$fShow(->)_$cshowsPrec_info;
         const 0;
 },
 Text.Show.Functions.$fShow(->)_$cshowsPrec_entry() //  [R4]
         { info_tbl: [(cc8mo,
                       label: Text.Show.Functions.$fShow(->)_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8mo: // global
           R2 = R4;
           call Text.Show.Functions.$fShow(->)2_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.543111436 UTC

[section ""data" . Text.Show.Functions.$fShow(->)_$cshow_closure" {
     Text.Show.Functions.$fShow(->)_$cshow_closure:
         const Text.Show.Functions.$fShow(->)_$cshow_info;
         const 0;
 },
 Text.Show.Functions.$fShow(->)_$cshow_entry() //  []
         { info_tbl: [(cc8mv,
                       label: Text.Show.Functions.$fShow(->)_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8mv: // global
           R1 = Text.Show.Functions.$fShow(->)3_closure;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.543959582 UTC

[section ""data" . Text.Show.Functions.$fShow(->)1_closure" {
     Text.Show.Functions.$fShow(->)1_closure:
         const Text.Show.Functions.$fShow(->)1_info;
         const 0;
 },
 Text.Show.Functions.$fShow(->)1_entry() //  [R3]
         { info_tbl: [(cc8mC,
                       label: Text.Show.Functions.$fShow(->)1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8mC: // global
           R2 = R3;
           call Text.Show.Functions.$fShow(->)2_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.544813501 UTC

[section ""data" . Text.Show.Functions.$fShow(->)_$cshowList_closure" {
     Text.Show.Functions.$fShow(->)_$cshowList_closure:
         const Text.Show.Functions.$fShow(->)_$cshowList_info;
         const 0;
 },
 Text.Show.Functions.$fShow(->)_$cshowList_entry() //  [R2, R3]
         { info_tbl: [(cc8mJ,
                       label: Text.Show.Functions.$fShow(->)_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8mJ: // global
           R4 = R3;
           R3 = R2;
           R2 = Text.Show.Functions.$fShow(->)1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.545716155 UTC

[section ""data" . Text.Show.Functions.$fShow(->)_closure" {
     Text.Show.Functions.$fShow(->)_closure:
         const GHC.Show.C:Show_con_info;
         const Text.Show.Functions.$fShow(->)_$cshowsPrec_closure+3;
         const Text.Show.Functions.$fShow(->)_$cshow_closure+1;
         const Text.Show.Functions.$fShow(->)_$cshowList_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.546314089 UTC

[section ""cstring" . Text.Show.Functions.$trModule4_bytes" {
     Text.Show.Functions.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.546890662 UTC

[section ""data" . Text.Show.Functions.$trModule3_closure" {
     Text.Show.Functions.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Text.Show.Functions.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.547448498 UTC

[section ""cstring" . Text.Show.Functions.$trModule2_bytes" {
     Text.Show.Functions.$trModule2_bytes:
         I8[] [84,101,120,116,46,83,104,111,119,46,70,117,110,99,116,105,111,110,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.547985803 UTC

[section ""data" . Text.Show.Functions.$trModule1_closure" {
     Text.Show.Functions.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Text.Show.Functions.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.548583463 UTC

[section ""data" . Text.Show.Functions.$trModule_closure" {
     Text.Show.Functions.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Text.Show.Functions.$trModule3_closure+1;
         const Text.Show.Functions.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.549205516 UTC

[section ""relreadonly" . Sc8lB_srt" {
     Sc8lB_srt:
         const Text.Show.Functions.$fShow(->)3_closure;
         const Text.Show.Functions.$fShow(->)2_closure;
         const Text.Show.Functions.$fShow(->)1_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.550072244 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:02.55123284 UTC

[section ""cstring" . Text.Show.Functions.$fShow(->)4_bytes" {
     Text.Show.Functions.$fShow(->)4_bytes:
         I8[] [60,102,117,110,99,116,105,111,110,62]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.553395919 UTC

[section ""data" . Text.Show.Functions.$fShow(->)3_closure" {
     Text.Show.Functions.$fShow(->)3_closure:
         const Text.Show.Functions.$fShow(->)3_info;
         const 0;
         const 0;
         const 0;
 },
 Text.Show.Functions.$fShow(->)3_entry() //  [R1]
         { info_tbl: [(cc8mT,
                       label: Text.Show.Functions.$fShow(->)3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8mT: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cc8mU; else goto cc8mV;
       cc8mU: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cc8mV: // global
           (_cc8mQ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_cc8mQ::I64 == 0) goto cc8mS; else goto cc8mR;
       cc8mS: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       cc8mR: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _cc8mQ::I64;
           R2 = Text.Show.Functions.$fShow(->)4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.558299337 UTC

[section ""data" . Text.Show.Functions.$fShow(->)2_closure" {
     Text.Show.Functions.$fShow(->)2_closure:
         const Text.Show.Functions.$fShow(->)2_info;
         const 0;
 },
 Text.Show.Functions.$fShow(->)2_entry() //  [R2]
         { info_tbl: [(cc8n7,
                       label: Text.Show.Functions.$fShow(->)2_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8n7: // global
           R3 = R2;
           R2 = Text.Show.Functions.$fShow(->)3_closure;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.561763966 UTC

[section ""data" . Text.Show.Functions.$fShow(->)_$cshowsPrec_closure" {
     Text.Show.Functions.$fShow(->)_$cshowsPrec_closure:
         const Text.Show.Functions.$fShow(->)_$cshowsPrec_info;
         const 0;
 },
 Text.Show.Functions.$fShow(->)_$cshowsPrec_entry() //  [R4]
         { info_tbl: [(cc8ni,
                       label: Text.Show.Functions.$fShow(->)_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8ni: // global
           R2 = R4;
           call Text.Show.Functions.$fShow(->)2_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.565142263 UTC

[section ""data" . Text.Show.Functions.$fShow(->)_$cshow_closure" {
     Text.Show.Functions.$fShow(->)_$cshow_closure:
         const Text.Show.Functions.$fShow(->)_$cshow_info;
         const 0;
 },
 Text.Show.Functions.$fShow(->)_$cshow_entry() //  []
         { info_tbl: [(cc8nt,
                       label: Text.Show.Functions.$fShow(->)_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8nt: // global
           R1 = Text.Show.Functions.$fShow(->)3_closure;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.5690801 UTC

[section ""data" . Text.Show.Functions.$fShow(->)1_closure" {
     Text.Show.Functions.$fShow(->)1_closure:
         const Text.Show.Functions.$fShow(->)1_info;
         const 0;
 },
 Text.Show.Functions.$fShow(->)1_entry() //  [R3]
         { info_tbl: [(cc8nF,
                       label: Text.Show.Functions.$fShow(->)1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8nF: // global
           R2 = R3;
           call Text.Show.Functions.$fShow(->)2_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.572388121 UTC

[section ""data" . Text.Show.Functions.$fShow(->)_$cshowList_closure" {
     Text.Show.Functions.$fShow(->)_$cshowList_closure:
         const Text.Show.Functions.$fShow(->)_$cshowList_info;
         const 0;
 },
 Text.Show.Functions.$fShow(->)_$cshowList_entry() //  [R2, R3]
         { info_tbl: [(cc8nQ,
                       label: Text.Show.Functions.$fShow(->)_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8nQ: // global
           R4 = R3;
           R3 = R2;
           R2 = Text.Show.Functions.$fShow(->)1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.57580794 UTC

[section ""data" . Text.Show.Functions.$fShow(->)_closure" {
     Text.Show.Functions.$fShow(->)_closure:
         const GHC.Show.C:Show_con_info;
         const Text.Show.Functions.$fShow(->)_$cshowsPrec_closure+3;
         const Text.Show.Functions.$fShow(->)_$cshow_closure+1;
         const Text.Show.Functions.$fShow(->)_$cshowList_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.578130157 UTC

[section ""cstring" . Text.Show.Functions.$trModule4_bytes" {
     Text.Show.Functions.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.579822574 UTC

[section ""data" . Text.Show.Functions.$trModule3_closure" {
     Text.Show.Functions.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Text.Show.Functions.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.581579741 UTC

[section ""cstring" . Text.Show.Functions.$trModule2_bytes" {
     Text.Show.Functions.$trModule2_bytes:
         I8[] [84,101,120,116,46,83,104,111,119,46,70,117,110,99,116,105,111,110,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.583287979 UTC

[section ""data" . Text.Show.Functions.$trModule1_closure" {
     Text.Show.Functions.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Text.Show.Functions.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.58499741 UTC

[section ""data" . Text.Show.Functions.$trModule_closure" {
     Text.Show.Functions.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Text.Show.Functions.$trModule3_closure+1;
         const Text.Show.Functions.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.587485528 UTC

[section ""relreadonly" . Sc8lB_srt" {
     Sc8lB_srt:
         const Text.Show.Functions.$fShow(->)3_closure;
         const Text.Show.Functions.$fShow(->)2_closure;
         const Text.Show.Functions.$fShow(->)1_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.617068608 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:02.618113083 UTC

[section ""cstring" . Text.Show.Functions.$fShow(->)4_bytes" {
     Text.Show.Functions.$fShow(->)4_bytes:
         I8[] [60,102,117,110,99,116,105,111,110,62]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.620195373 UTC

[section ""data" . Text.Show.Functions.$fShow(->)3_closure" {
     Text.Show.Functions.$fShow(->)3_closure:
         const Text.Show.Functions.$fShow(->)3_info;
         const 0;
         const 0;
         const 0;
 },
 Text.Show.Functions.$fShow(->)3_entry() //  [R1]
         { info_tbl: [(cc8oh,
                       label: Text.Show.Functions.$fShow(->)3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8oh: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cc8oi; else goto cc8oj;
       cc8oi: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cc8oj: // global
           (_cc8oe::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_cc8oe::I64 == 0) goto cc8og; else goto cc8of;
       cc8og: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       cc8of: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _cc8oe::I64;
           R2 = Text.Show.Functions.$fShow(->)4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.624525001 UTC

[section ""data" . Text.Show.Functions.$fShow(->)2_closure" {
     Text.Show.Functions.$fShow(->)2_closure:
         const Text.Show.Functions.$fShow(->)2_info;
         const 0;
 },
 Text.Show.Functions.$fShow(->)2_entry() //  [R2]
         { info_tbl: [(cc8ow,
                       label: Text.Show.Functions.$fShow(->)2_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8ow: // global
           R3 = R2;
           R2 = Text.Show.Functions.$fShow(->)3_closure;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.627955533 UTC

[section ""data" . Text.Show.Functions.$fShow(->)_$cshowsPrec_closure" {
     Text.Show.Functions.$fShow(->)_$cshowsPrec_closure:
         const Text.Show.Functions.$fShow(->)_$cshowsPrec_info;
         const 0;
 },
 Text.Show.Functions.$fShow(->)_$cshowsPrec_entry() //  [R4]
         { info_tbl: [(cc8oI,
                       label: Text.Show.Functions.$fShow(->)_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8oI: // global
           R2 = R4;
           call Text.Show.Functions.$fShow(->)2_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.631504357 UTC

[section ""data" . Text.Show.Functions.$fShow(->)_$cshow_closure" {
     Text.Show.Functions.$fShow(->)_$cshow_closure:
         const Text.Show.Functions.$fShow(->)_$cshow_info;
         const 0;
 },
 Text.Show.Functions.$fShow(->)_$cshow_entry() //  []
         { info_tbl: [(cc8oT,
                       label: Text.Show.Functions.$fShow(->)_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8oT: // global
           R1 = Text.Show.Functions.$fShow(->)3_closure;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.635112348 UTC

[section ""data" . Text.Show.Functions.$fShow(->)1_closure" {
     Text.Show.Functions.$fShow(->)1_closure:
         const Text.Show.Functions.$fShow(->)1_info;
         const 0;
 },
 Text.Show.Functions.$fShow(->)1_entry() //  [R3]
         { info_tbl: [(cc8p5,
                       label: Text.Show.Functions.$fShow(->)1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8p5: // global
           R2 = R3;
           call Text.Show.Functions.$fShow(->)2_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.639105794 UTC

[section ""data" . Text.Show.Functions.$fShow(->)_$cshowList_closure" {
     Text.Show.Functions.$fShow(->)_$cshowList_closure:
         const Text.Show.Functions.$fShow(->)_$cshowList_info;
         const 0;
 },
 Text.Show.Functions.$fShow(->)_$cshowList_entry() //  [R2, R3]
         { info_tbl: [(cc8pg,
                       label: Text.Show.Functions.$fShow(->)_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cc8pg: // global
           R4 = R3;
           R3 = R2;
           R2 = Text.Show.Functions.$fShow(->)1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.642519952 UTC

[section ""data" . Text.Show.Functions.$fShow(->)_closure" {
     Text.Show.Functions.$fShow(->)_closure:
         const GHC.Show.C:Show_con_info;
         const Text.Show.Functions.$fShow(->)_$cshowsPrec_closure+3;
         const Text.Show.Functions.$fShow(->)_$cshow_closure+1;
         const Text.Show.Functions.$fShow(->)_$cshowList_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.644305932 UTC

[section ""cstring" . Text.Show.Functions.$trModule4_bytes" {
     Text.Show.Functions.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.646364795 UTC

[section ""data" . Text.Show.Functions.$trModule3_closure" {
     Text.Show.Functions.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Text.Show.Functions.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.648026113 UTC

[section ""cstring" . Text.Show.Functions.$trModule2_bytes" {
     Text.Show.Functions.$trModule2_bytes:
         I8[] [84,101,120,116,46,83,104,111,119,46,70,117,110,99,116,105,111,110,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.649761774 UTC

[section ""data" . Text.Show.Functions.$trModule1_closure" {
     Text.Show.Functions.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Text.Show.Functions.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.65143591 UTC

[section ""data" . Text.Show.Functions.$trModule_closure" {
     Text.Show.Functions.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Text.Show.Functions.$trModule3_closure+1;
         const Text.Show.Functions.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:02.65328579 UTC

[section ""relreadonly" . Sc8oz_srt" {
     Sc8oz_srt:
         const Text.Show.Functions.$fShow(->)3_closure;
         const Text.Show.Functions.$fShow(->)2_closure;
         const Text.Show.Functions.$fShow(->)1_closure;
 }]

