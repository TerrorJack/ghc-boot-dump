
==================== Raw Cmm ====================
2018-03-16 15:58:07.344850736 UTC

[]


==================== Raw Cmm ====================
2018-03-16 15:58:07.347575989 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fFunctorReadPrec2_closure" {
     Text.ParserCombinators.ReadPrec.$fFunctorReadPrec2_closure:
         const Text.ParserCombinators.ReadPrec.$fFunctorReadPrec2_info;
 },
 sat_s3tB5_entry() //  [R1, R2]
         { []
         }
     {offset
       c3u3t: // global
           R4 = R2;
           R3 = P64[R1 + 7];
           R2 = P64[R1 + 15];
           call GHC.Base.._entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tB5_info" {
     sat_s3tB5_info:
         const sat_s3tB5_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_s3tB6_entry() //  [R1, R2]
         { []
         }
     {offset
       c3u3w: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c3u3A; else goto c3u3z;
       c3u3A: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3u3z: // global
           _s3tB0::P64 = P64[R1 + 7];
           _s3tB3::P64 = P64[R1 + 15];
           I64[Hp - 16] = sat_s3tB5_info;
           P64[Hp - 8] = _s3tB0::P64;
           P64[Hp] = R2;
           R2 = Hp - 15;
           R1 = _s3tB3::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tB6_info" {
     sat_s3tB6_info:
         const sat_s3tB6_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 Text.ParserCombinators.ReadPrec.$fFunctorReadPrec2_entry() //  [R2,
                                                                 R3, R4]
         { []
         }
     {offset
       c3u3B: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c3u3F; else goto c3u3E;
       c3u3F: // global
           HpAlloc = 56;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.$fFunctorReadPrec2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c3u3E: // global
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = sat_s3tB6_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 48;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fFunctorReadPrec2_info" {
     Text.ParserCombinators.ReadPrec.$fFunctorReadPrec2_info:
         const Text.ParserCombinators.ReadPrec.$fFunctorReadPrec2_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.356388842 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fFunctorReadPrec1_closure" {
     Text.ParserCombinators.ReadPrec.$fFunctorReadPrec1_closure:
         const Text.ParserCombinators.ReadPrec.$fFunctorReadPrec1_info;
 },
 sat_s3tBe_entry() //  [R1]
         { []
         }
     {offset
       c3u48: // global
           R1 = P64[R1 + 7] & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tBe_info" {
     sat_s3tBe_info:
         const sat_s3tBe_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_s3tBf_entry() //  [R1, R2]
         { []
         }
     {offset
       c3u4b: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c3u4f; else goto c3u4e;
       c3u4f: // global
           HpAlloc = 48;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3u4e: // global
           _s3tB7::P64 = P64[R1 + 7];
           _s3tBa::P64 = P64[R1 + 15];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = _s3tB7::P64;
           I64[Hp - 8] = sat_s3tBe_info;
           P64[Hp] = Hp - 40;
           R2 = Hp - 7;
           R1 = _s3tBa::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tBf_info" {
     sat_s3tBf_info:
         const sat_s3tBf_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 Text.ParserCombinators.ReadPrec.$fFunctorReadPrec1_entry() //  [R2,
                                                                 R3, R4]
         { []
         }
     {offset
       c3u4g: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c3u4k; else goto c3u4j;
       c3u4k: // global
           HpAlloc = 56;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.$fFunctorReadPrec1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c3u4j: // global
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = sat_s3tBf_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 48;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fFunctorReadPrec1_info" {
     Text.ParserCombinators.ReadPrec.$fFunctorReadPrec1_info:
         const Text.ParserCombinators.ReadPrec.$fFunctorReadPrec1_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.364187248 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fFunctorReadPrec_closure" {
     Text.ParserCombinators.ReadPrec.$fFunctorReadPrec_closure:
         const GHC.Base.C:Functor_con_info;
         const Text.ParserCombinators.ReadPrec.$fFunctorReadPrec2_closure+3;
         const Text.ParserCombinators.ReadPrec.$fFunctorReadPrec1_closure+3;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.36644042 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec5_closure" {
     Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec5_closure:
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec5_info;
 },
 Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec5_entry() //  [R2,
                                                                     R4]
         { []
         }
     {offset
       c3u4F: // global
           R2 = R2;
           R1 = R4;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec5_info" {
     Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec5_info:
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec5_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.369997187 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fMonadFailReadPrec1_closure" {
     Text.ParserCombinators.ReadPrec.$fMonadFailReadPrec1_closure:
         const Text.ParserCombinators.ReadPrec.$fMonadFailReadPrec1_info;
 },
 Text.ParserCombinators.ReadPrec.$fMonadFailReadPrec1_entry() //  []
         { []
         }
     {offset
       c3u4Q: // global
           R1 = Text.ParserCombinators.ReadP.Fail_closure+3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fMonadFailReadPrec1_info" {
     Text.ParserCombinators.ReadPrec.$fMonadFailReadPrec1_info:
         const Text.ParserCombinators.ReadPrec.$fMonadFailReadPrec1_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.374753902 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fMonadReadPrec1_closure" {
     Text.ParserCombinators.ReadPrec.$fMonadReadPrec1_closure:
         const Text.ParserCombinators.ReadPrec.$fMonadReadPrec1_info;
 },
 sat_s3tBs_entry() //  [R1, R2]
         { []
         }
     {offset
       c3u5d: // global
           R4 = P64[R1 + 23];
           R3 = P64[R1 + 15];
           R2 = R2;
           R1 = P64[R1 + 7];
           call stg_ap_ppp_fast(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tBs_info" {
     sat_s3tBs_info:
         const sat_s3tBs_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 sat_s3tBt_entry() //  [R1, R2]
         { []
         }
     {offset
       c3u5g: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c3u5k; else goto c3u5j;
       c3u5k: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3u5j: // global
           _s3tBn::P64 = P64[R1 + 7];
           _s3tBo::P64 = P64[R1 + 15];
           _s3tBp::P64 = P64[R1 + 23];
           I64[Hp - 24] = sat_s3tBs_info;
           P64[Hp - 16] = _s3tBn::P64;
           P64[Hp - 8] = _s3tBo::P64;
           P64[Hp] = R2;
           R2 = Hp - 23;
           R1 = _s3tBp::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tBt_info" {
     sat_s3tBt_info:
         const sat_s3tBt_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 Text.ParserCombinators.ReadPrec.$fMonadReadPrec1_entry() //  [R2,
                                                               R3, R4]
         { []
         }
     {offset
       c3u5l: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c3u5p; else goto c3u5o;
       c3u5p: // global
           HpAlloc = 64;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.$fMonadReadPrec1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c3u5o: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = R2;
           P64[Hp - 32] = R4;
           I64[Hp - 24] = sat_s3tBt_info;
           P64[Hp - 16] = R3;
           P64[Hp - 8] = R4;
           P64[Hp] = Hp - 56;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fMonadReadPrec1_info" {
     Text.ParserCombinators.ReadPrec.$fMonadReadPrec1_info:
         const Text.ParserCombinators.ReadPrec.$fMonadReadPrec1_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.384199707 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec3_closure" {
     Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec3_closure:
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec3_info;
 },
 sat_s3tBD_entry() //  [R1, R2]
         { []
         }
     {offset
       c3u5X: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c3u61; else goto c3u60;
       c3u61: // global
           HpAlloc = 40;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3u60: // global
           _s3tBu::P64 = P64[R1 + 7];
           _s3tBz::P64 = P64[R1 + 15];
           _s3tBA::P64 = P64[R1 + 23];
           I64[Hp - 32] = stg_ap_3_upd_info;
           P64[Hp - 16] = _s3tBu::P64;
           P64[Hp - 8] = _s3tBA::P64;
           P64[Hp] = R2;
           R2 = Hp - 32;
           R1 = _s3tBz::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tBD_info" {
     sat_s3tBD_info:
         const sat_s3tBD_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 sat_s3tBE_entry() //  [R1, R2]
         { []
         }
     {offset
       c3u62: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c3u66; else goto c3u65;
       c3u66: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3u65: // global
           _s3tBu::P64 = P64[R1 + 7];
           _s3tBw::P64 = P64[R1 + 15];
           _s3tBx::P64 = P64[R1 + 23];
           _s3tBz::P64 = P64[R1 + 31];
           I64[Hp - 24] = sat_s3tBD_info;
           P64[Hp - 16] = _s3tBu::P64;
           P64[Hp - 8] = _s3tBz::P64;
           P64[Hp] = R2;
           R3 = Hp - 23;
           R2 = _s3tBx::P64;
           R1 = _s3tBw::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tBE_info" {
     sat_s3tBE_info:
         const sat_s3tBE_entry;
         const 4;
         const 8;
         const 4294967301;
 },
 sat_s3tBF_entry() //  [R1, R2]
         { []
         }
     {offset
       c3u67: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c3u6b; else goto c3u6a;
       c3u6b: // global
           HpAlloc = 40;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3u6a: // global
           _s3tBu::P64 = P64[R1 + 7];
           _s3tBw::P64 = P64[R1 + 15];
           _s3tBx::P64 = P64[R1 + 23];
           _s3tBy::P64 = P64[R1 + 31];
           I64[Hp - 32] = sat_s3tBE_info;
           P64[Hp - 24] = _s3tBu::P64;
           P64[Hp - 16] = _s3tBw::P64;
           P64[Hp - 8] = _s3tBx::P64;
           P64[Hp] = R2;
           R2 = Hp - 31;
           R1 = _s3tBy::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tBF_info" {
     sat_s3tBF_info:
         const sat_s3tBF_entry;
         const 4;
         const 8;
         const 4294967301;
 },
 Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec3_entry() //  [R2,
                                                                     R3, R4, R5]
         { []
         }
     {offset
       c3u6c: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c3u6g; else goto c3u6f;
       c3u6g: // global
           HpAlloc = 72;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec3_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c3u6f: // global
           I64[Hp - 64] = stg_ap_2_upd_info;
           P64[Hp - 48] = R3;
           P64[Hp - 40] = R5;
           I64[Hp - 32] = sat_s3tBF_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = R4;
           P64[Hp - 8] = R5;
           P64[Hp] = Hp - 64;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec3_info" {
     Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec3_info:
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec3_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.396259473 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec1_closure" {
     Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec1_closure:
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec1_info;
 },
 sat_s3tBO_entry() //  [R1]
         { []
         }
     {offset
       c3u6R: // global
           R1 = P64[R1 + 7] & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tBO_info" {
     sat_s3tBO_info:
         const sat_s3tBO_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_s3tBP_entry() //  [R1, R2]
         { []
         }
     {offset
       c3u6U: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c3u6Y; else goto c3u6X;
       c3u6Y: // global
           HpAlloc = 48;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3u6X: // global
           _s3tBH::P64 = P64[R1 + 7];
           _s3tBI::P64 = P64[R1 + 15];
           _s3tBK::P64 = P64[R1 + 23];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = _s3tBK::P64;
           P64[Hp - 16] = R2;
           I64[Hp - 8] = sat_s3tBO_info;
           P64[Hp] = Hp - 40;
           R3 = Hp - 7;
           R2 = _s3tBI::P64;
           R1 = _s3tBH::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tBP_info" {
     sat_s3tBP_info:
         const sat_s3tBP_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 sat_s3tBQ_entry() //  [R1, R2]
         { []
         }
     {offset
       c3u6Z: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c3u73; else goto c3u72;
       c3u73: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3u72: // global
           _s3tBH::P64 = P64[R1 + 7];
           _s3tBI::P64 = P64[R1 + 15];
           _s3tBJ::P64 = P64[R1 + 23];
           I64[Hp - 24] = sat_s3tBP_info;
           P64[Hp - 16] = _s3tBH::P64;
           P64[Hp - 8] = _s3tBI::P64;
           P64[Hp] = R2;
           R2 = Hp - 23;
           R1 = _s3tBJ::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tBQ_info" {
     sat_s3tBQ_info:
         const sat_s3tBQ_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec1_entry() //  [R2,
                                                                     R3, R4]
         { []
         }
     {offset
       c3u74: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c3u78; else goto c3u77;
       c3u78: // global
           HpAlloc = 64;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c3u77: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = R2;
           P64[Hp - 32] = R4;
           I64[Hp - 24] = sat_s3tBQ_info;
           P64[Hp - 16] = R3;
           P64[Hp - 8] = R4;
           P64[Hp] = Hp - 56;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec1_info" {
     Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec1_info:
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec1_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.408497157 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec4_closure" {
     Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec4_closure:
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec4_info;
 },
 sat_s3tBZ_entry() //  [R1, R2]
         { []
         }
     {offset
       c3u7M: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c3u7Q; else goto c3u7P;
       c3u7Q: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3u7P: // global
           _s3tBV::P64 = P64[R1 + 7];
           _s3tBW::P64 = P64[R1 + 15];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _s3tBW::P64;
           P64[Hp] = R2;
           R2 = Hp - 24;
           R1 = _s3tBV::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tBZ_info" {
     sat_s3tBZ_info:
         const sat_s3tBZ_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_s3tC0_entry() //  [R1, R2]
         { []
         }
     {offset
       c3u7R: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c3u7V; else goto c3u7U;
       c3u7V: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3u7U: // global
           _s3tBS::P64 = P64[R1 + 7];
           _s3tBT::P64 = P64[R1 + 15];
           _s3tBV::P64 = P64[R1 + 23];
           I64[Hp - 16] = sat_s3tBZ_info;
           P64[Hp - 8] = _s3tBV::P64;
           P64[Hp] = R2;
           R3 = Hp - 15;
           R2 = _s3tBT::P64;
           R1 = _s3tBS::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tC0_info" {
     sat_s3tC0_info:
         const sat_s3tC0_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 sat_s3tC1_entry() //  [R1, R2]
         { []
         }
     {offset
       c3u7W: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c3u80; else goto c3u7Z;
       c3u80: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3u7Z: // global
           _s3tBS::P64 = P64[R1 + 7];
           _s3tBT::P64 = P64[R1 + 15];
           _s3tBU::P64 = P64[R1 + 23];
           I64[Hp - 24] = sat_s3tC0_info;
           P64[Hp - 16] = _s3tBS::P64;
           P64[Hp - 8] = _s3tBT::P64;
           P64[Hp] = R2;
           R2 = Hp - 23;
           R1 = _s3tBU::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tC1_info" {
     sat_s3tC1_info:
         const sat_s3tC1_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec4_entry() //  [R2,
                                                                     R3, R4]
         { []
         }
     {offset
       c3u81: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c3u85; else goto c3u84;
       c3u85: // global
           HpAlloc = 64;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec4_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c3u84: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = R2;
           P64[Hp - 32] = R4;
           I64[Hp - 24] = sat_s3tC1_info;
           P64[Hp - 16] = R3;
           P64[Hp - 8] = R4;
           P64[Hp] = Hp - 56;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec4_info" {
     Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec4_info:
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec4_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.419554847 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec2_closure" {
     Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec2_closure:
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec2_info;
 },
 sat_s3tC9_entry() //  [R1, R2]
         { []
         }
     {offset
       c3u8E: // global
           R2 = R2;
           R1 = P64[R1 + 7];
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tC9_info" {
     sat_s3tC9_info:
         const sat_s3tC9_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 lvl1_s3tC7_entry() //  [R1]
         { []
         }
     {offset
       c3u8H: // global
           _s3tC7::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c3u8I; else goto c3u8J;
       c3u8J: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c3u8L; else goto c3u8K;
       c3u8L: // global
           HpAlloc = 16;
           goto c3u8I;
       c3u8I: // global
           R1 = _s3tC7::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c3u8K: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s3tC7::P64;
           _s3tC3::P64 = P64[_s3tC7::P64 + 16];
           _s3tC4::P64 = P64[_s3tC7::P64 + 24];
           _s3tC6::P64 = P64[_s3tC7::P64 + 32];
           I64[Hp - 8] = sat_s3tC9_info;
           P64[Hp] = _s3tC6::P64;
           R3 = Hp - 7;
           R2 = _s3tC4::P64;
           R1 = _s3tC3::P64;
           Sp = Sp - 16;
           call stg_ap_pp_fast(R3, R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl1_s3tC7_info" {
     lvl1_s3tC7_info:
         const lvl1_s3tC7_entry;
         const 3;
         const 15;
 },
 sat_s3tCb_entry() //  [R1]
         { []
         }
     {offset
       c3u8R: // global
           R1 = P64[R1 + 7] & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tCb_info" {
     sat_s3tCb_info:
         const sat_s3tCb_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_s3tCc_entry() //  [R1, R2]
         { []
         }
     {offset
       c3u8U: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c3u8Y; else goto c3u8X;
       c3u8Y: // global
           HpAlloc = 56;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3u8X: // global
           _s3tC3::P64 = P64[R1 + 7];
           _s3tC4::P64 = P64[R1 + 15];
           _s3tC5::P64 = P64[R1 + 23];
           I64[Hp - 48] = lvl1_s3tC7_info;
           P64[Hp - 32] = _s3tC3::P64;
           P64[Hp - 24] = _s3tC4::P64;
           P64[Hp - 16] = R2;
           I64[Hp - 8] = sat_s3tCb_info;
           P64[Hp] = Hp - 48;
           R2 = Hp - 7;
           R1 = _s3tC5::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tCc_info" {
     sat_s3tCc_info:
         const sat_s3tCc_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec2_entry() //  [R2,
                                                                     R3, R4]
         { []
         }
     {offset
       c3u8Z: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c3u93; else goto c3u92;
       c3u93: // global
           HpAlloc = 64;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c3u92: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = R2;
           P64[Hp - 32] = R4;
           I64[Hp - 24] = sat_s3tCc_info;
           P64[Hp - 16] = R3;
           P64[Hp - 8] = R4;
           P64[Hp] = Hp - 56;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec2_info" {
     Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec2_info:
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec2_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.431420521 UTC

[section ""data" . $c>>_r3tAR_closure" {
     $c>>_r3tAR_closure:
         const $c>>_r3tAR_info;
 },
 sat_s3tCk_entry() //  [R1]
         { []
         }
     {offset
       c3u9G: // global
           R1 = P64[R1 + 7] & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tCk_info" {
     sat_s3tCk_info:
         const sat_s3tCk_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_s3tCl_entry() //  [R1, R2]
         { []
         }
     {offset
       c3u9J: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c3u9N; else goto c3u9M;
       c3u9N: // global
           HpAlloc = 56;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3u9M: // global
           _s3tCe::P64 = P64[R1 + 7];
           _s3tCf::P64 = P64[R1 + 15];
           _s3tCg::P64 = P64[R1 + 23];
           I64[Hp - 48] = stg_ap_3_upd_info;
           P64[Hp - 32] = _s3tCe::P64;
           P64[Hp - 24] = _s3tCf::P64;
           P64[Hp - 16] = R2;
           I64[Hp - 8] = sat_s3tCk_info;
           P64[Hp] = Hp - 48;
           R2 = Hp - 7;
           R1 = _s3tCg::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tCl_info" {
     sat_s3tCl_info:
         const sat_s3tCl_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 $c>>_r3tAR_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c3u9O: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c3u9S; else goto c3u9R;
       c3u9S: // global
           HpAlloc = 64;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = $c>>_r3tAR_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c3u9R: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = R2;
           P64[Hp - 32] = R4;
           I64[Hp - 24] = sat_s3tCl_info;
           P64[Hp - 16] = R3;
           P64[Hp - 8] = R4;
           P64[Hp] = Hp - 56;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . $c>>_r3tAR_info" {
     $c>>_r3tAR_info:
         const $c>>_r3tAR_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.438972989 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fMonadReadPrec_$c>>_closure" {
     Text.ParserCombinators.ReadPrec.$fMonadReadPrec_$c>>_closure:
         const Text.ParserCombinators.ReadPrec.$fMonadReadPrec_$c>>_info;
 },
 Text.ParserCombinators.ReadPrec.$fMonadReadPrec_$c>>_entry() //  [R2,
                                                                   R3, R4]
         { []
         }
     {offset
       c3uac: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call $c>>_r3tAR_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fMonadReadPrec_$c>>_info" {
     Text.ParserCombinators.ReadPrec.$fMonadReadPrec_$c>>_info:
         const Text.ParserCombinators.ReadPrec.$fMonadReadPrec_$c>>_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.442345378 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec_closure" {
     Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec_closure:
         const GHC.Base.C:Applicative_con_info;
         const Text.ParserCombinators.ReadPrec.$fFunctorReadPrec_closure+1;
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec5_closure+3;
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec4_closure+3;
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec3_closure+4;
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec2_closure+3;
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec1_closure+3;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.444856063 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fMonadReadPrec_closure" {
     Text.ParserCombinators.ReadPrec.$fMonadReadPrec_closure:
         const GHC.Base.C:Monad_con_info;
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec_closure+1;
         const Text.ParserCombinators.ReadPrec.$fMonadReadPrec1_closure+3;
         const Text.ParserCombinators.ReadPrec.$fMonadReadPrec_$c>>_closure+3;
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec5_closure+3;
         const Text.ParserCombinators.ReadPrec.$fMonadFailReadPrec1_closure+3;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.446710869 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fMonadFailReadPrec_closure" {
     Text.ParserCombinators.ReadPrec.$fMonadFailReadPrec_closure:
         const Control.Monad.Fail.C:MonadFail_con_info;
         const Text.ParserCombinators.ReadPrec.$fMonadReadPrec_closure+1;
         const Text.ParserCombinators.ReadPrec.$fMonadFailReadPrec1_closure+3;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.448465674 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.minPrec_closure" {
     Text.ParserCombinators.ReadPrec.minPrec_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.450684064 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.reset1_closure" {
     Text.ParserCombinators.ReadPrec.reset1_closure:
         const Text.ParserCombinators.ReadPrec.reset1_info;
 },
 Text.ParserCombinators.ReadPrec.reset1_entry() //  [R2]
         { []
         }
     {offset
       c3uar: // global
           _s3tCm::P64 = R2;
           R2 = Text.ParserCombinators.ReadPrec.minPrec_closure+1;
           R1 = _s3tCm::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.reset1_info" {
     Text.ParserCombinators.ReadPrec.reset1_info:
         const Text.ParserCombinators.ReadPrec.reset1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.454870684 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.reset_closure" {
     Text.ParserCombinators.ReadPrec.reset_closure:
         const Text.ParserCombinators.ReadPrec.reset_info;
 },
 Text.ParserCombinators.ReadPrec.reset_entry() //  [R2, R3]
         { []
         }
     {offset
       c3uaC: // global
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.reset1_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.reset_info" {
     Text.ParserCombinators.ReadPrec.reset_info:
         const Text.ParserCombinators.ReadPrec.reset_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.458455683 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.lift1_closure" {
     Text.ParserCombinators.ReadPrec.lift1_closure:
         const Text.ParserCombinators.ReadPrec.lift1_info;
 },
 Text.ParserCombinators.ReadPrec.lift1_entry() //  [R2]
         { []
         }
     {offset
       c3uaN: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.lift1_info" {
     Text.ParserCombinators.ReadPrec.lift1_info:
         const Text.ParserCombinators.ReadPrec.lift1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.462101741 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.lift_closure" {
     Text.ParserCombinators.ReadPrec.lift_closure:
         const Text.ParserCombinators.ReadPrec.lift_info;
 },
 Text.ParserCombinators.ReadPrec.lift_entry() //  [R2, R3]
         { []
         }
     {offset
       c3uaY: // global
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.lift1_entry(R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.lift_info" {
     Text.ParserCombinators.ReadPrec.lift_info:
         const Text.ParserCombinators.ReadPrec.lift_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.465910057 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.get1_closure" {
     Text.ParserCombinators.ReadPrec.get1_closure:
         const Text.ParserCombinators.ReadPrec.get1_info;
 },
 Text.ParserCombinators.ReadPrec.get1_entry() //  [R2, R3]
         { []
         }
     {offset
       c3uba: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c3ube; else goto c3ubd;
       c3ube: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.get1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c3ubd: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Get_con_info;
           P64[Hp] = R3;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.get1_info" {
     Text.ParserCombinators.ReadPrec.get1_info:
         const Text.ParserCombinators.ReadPrec.get1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.469910368 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.get_closure" {
     Text.ParserCombinators.ReadPrec.get_closure:
         const Text.ParserCombinators.ReadPrec.get_info;
 },
 Text.ParserCombinators.ReadPrec.get_entry() //  [R2, R3]
         { []
         }
     {offset
       c3ubo: // global
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.get1_entry(R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.get_info" {
     Text.ParserCombinators.ReadPrec.get_info:
         const Text.ParserCombinators.ReadPrec.get_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.473811885 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.look1_closure" {
     Text.ParserCombinators.ReadPrec.look1_closure:
         const Text.ParserCombinators.ReadPrec.look1_info;
 },
 Text.ParserCombinators.ReadPrec.look1_entry() //  [R2, R3]
         { []
         }
     {offset
       c3ubA: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c3ubE; else goto c3ubD;
       c3ubE: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.look1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c3ubD: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R3;
           R1 = Hp - 6;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.look1_info" {
     Text.ParserCombinators.ReadPrec.look1_info:
         const Text.ParserCombinators.ReadPrec.look1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.478385653 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.look_closure" {
     Text.ParserCombinators.ReadPrec.look_closure:
         const Text.ParserCombinators.ReadPrec.look_info;
 },
 Text.ParserCombinators.ReadPrec.look_entry() //  [R2, R3]
         { []
         }
     {offset
       c3ubO: // global
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.look1_entry(R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.look_info" {
     Text.ParserCombinators.ReadPrec.look_info:
         const Text.ParserCombinators.ReadPrec.look_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.481676214 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec4_closure" {
     Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec4_closure:
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec4_info;
 },
 Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec4_entry() //  []
         { []
         }
     {offset
       c3ubZ: // global
           R1 = Text.ParserCombinators.ReadP.Fail_closure+3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec4_info" {
     Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec4_info:
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec4_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.484998173 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.pfail_closure" {
     Text.ParserCombinators.ReadPrec.pfail_closure:
         const Text.ParserCombinators.ReadPrec.pfail_info;
 },
 Text.ParserCombinators.ReadPrec.pfail_entry() //  [R2, R3]
         { []
         }
     {offset
       c3ucb: // global
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec4_entry(R3,
                                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.pfail_info" {
     Text.ParserCombinators.ReadPrec.pfail_info:
         const Text.ParserCombinators.ReadPrec.pfail_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.490285283 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.step1_closure" {
     Text.ParserCombinators.ReadPrec.step1_closure:
         const Text.ParserCombinators.ReadPrec.step1_info;
 },
 sat_s3tCB_entry() //  [R1]
         { []
         }
     {offset
       c3uct: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c3ucA; else goto c3ucB;
       c3ucA: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c3ucB: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c3ucq_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u3ucF; else goto c3ucr;
       u3ucF: // global
           call _c3ucq(R1) args: 0, res: 0, upd: 0;
       c3ucr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s3tCB_info" {
     sat_s3tCB_info:
         const sat_s3tCB_entry;
         const 1;
         const 16;
 },
 _c3ucq() //  [R1]
         { []
         }
     {offset
       c3ucq: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c3ucE; else goto c3ucD;
       c3ucE: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c3ucD: // global
           _s3tCA::I64 = I64[R1 + 7] + 1;
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s3tCA::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c3ucq_info" {
     block_c3ucq_info:
         const _c3ucq;
         const 0;
         const 30;
 },
 Text.ParserCombinators.ReadPrec.step1_entry() //  [R2, R3]
         { []
         }
     {offset
       c3ucG: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c3ucK; else goto c3ucJ;
       c3ucK: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.step1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c3ucJ: // global
           I64[Hp - 16] = sat_s3tCB_info;
           P64[Hp] = R3;
           _s3tCw::P64 = R2;
           R2 = Hp - 16;
           R1 = _s3tCw::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.step1_info" {
     Text.ParserCombinators.ReadPrec.step1_info:
         const Text.ParserCombinators.ReadPrec.step1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.497431749 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.step_closure" {
     Text.ParserCombinators.ReadPrec.step_closure:
         const Text.ParserCombinators.ReadPrec.step_info;
 },
 Text.ParserCombinators.ReadPrec.step_entry() //  [R2, R3]
         { []
         }
     {offset
       c3ud3: // global
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.step1_entry(R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.step_info" {
     Text.ParserCombinators.ReadPrec.step_info:
         const Text.ParserCombinators.ReadPrec.step_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.501711269 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.prec1_closure" {
     Text.ParserCombinators.ReadPrec.prec1_closure:
         const Text.ParserCombinators.ReadPrec.prec1_info;
 },
 Text.ParserCombinators.ReadPrec.prec1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c3udh: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c3udl; else goto c3udm;
       c3udl: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.prec1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c3udm: // global
           I64[Sp - 24] = block_c3ude_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u3udz; else goto c3udf;
       u3udz: // global
           call _c3ude(R1) args: 0, res: 0, upd: 0;
       c3udf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.prec1_info" {
     Text.ParserCombinators.ReadPrec.prec1_info:
         const Text.ParserCombinators.ReadPrec.prec1_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c3ude() //  [R1]
         { []
         }
     {offset
       c3ude: // global
           I64[Sp] = block_c3udk_info;
           _s3tCG::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s3tCG::I64;
           if (R1 & 7 != 0) goto u3udy; else goto c3udo;
       u3udy: // global
           call _c3udk(R1) args: 0, res: 0, upd: 0;
       c3udo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c3ude_info" {
     block_c3ude_info:
         const _c3ude;
         const 2;
         const 30;
 },
 _c3udk() //  [R1]
         { []
         }
     {offset
       c3udk: // global
           if (%MO_S_Gt_W64(I64[Sp + 8],
                            I64[R1 + 7])) goto c3udw; else goto c3udx;
       c3udw: // global
           R1 = Text.ParserCombinators.ReadP.$fAlternativeReadP4_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c3udx: // global
           R2 = R1;
           R1 = P64[Sp + 16];
           Sp = Sp + 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c3udk_info" {
     block_c3udk_info:
         const _c3udk;
         const 66;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.508898881 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.prec_closure" {
     Text.ParserCombinators.ReadPrec.prec_closure:
         const Text.ParserCombinators.ReadPrec.prec_info;
 },
 Text.ParserCombinators.ReadPrec.prec_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c3udT: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.prec1_entry(R4,
                                                            R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.prec_info" {
     Text.ParserCombinators.ReadPrec.prec_info:
         const Text.ParserCombinators.ReadPrec.prec_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.514608386 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_closure" {
     Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_closure:
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_info;
         const 0;
 },
 sat_s3tCS_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uee: // global
           _s3tCP::P64 = R2;
           _s3tCS::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c3uef; else goto c3ueg;
       c3ueg: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c3uei; else goto c3ueh;
       c3uei: // global
           HpAlloc = 32;
           goto c3uef;
       c3uef: // global
           R2 = _s3tCP::P64;
           R1 = _s3tCS::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3ueh: // global
           _s3tCN::P64 = P64[_s3tCS::P64 + 7];
           _s3tCO::P64 = P64[_s3tCS::P64 + 15];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _s3tCO::P64;
           P64[Hp] = _s3tCP::P64;
           I64[Sp - 16] = block_c3uec_info;
           R2 = _s3tCP::P64;
           R1 = _s3tCN::P64;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tCS_info" {
     sat_s3tCS_info:
         const sat_s3tCS_entry;
         const 2;
         const 4294967307;
         const 4294967301;
         const S3tLy_srt;
 },
 _c3uec() //  [R1]
         { []
         }
     {offset
       c3uec: // global
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 16;
           call Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_entry(R3,
                                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c3uec_info" {
     block_c3uec_info:
         const _c3uec;
         const 1;
         const 4294967326;
         const S3tLy_srt;
 },
 Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_entry() //  [R2,
                                                                     R3, R4]
         { []
         }
     {offset
       c3uem: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto c3ueq; else goto c3uep;
       c3ueq: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c3uep: // global
           I64[Hp - 80] = stg_ap_2_upd_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = sat_s3tCS_info;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 48;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_info" {
     Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_info:
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S3tLy_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.522195525 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.+++_closure" {
     Text.ParserCombinators.ReadPrec.+++_closure:
         const Text.ParserCombinators.ReadPrec.+++_info;
         const 0;
 },
 Text.ParserCombinators.ReadPrec.+++_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c3ueK: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_entry(R4,
                                                                             R3,
                                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.+++_info" {
     Text.ParserCombinators.ReadPrec.+++_info:
         const Text.ParserCombinators.ReadPrec.+++_entry;
         const 0;
         const 4294967310;
         const 12884901911;
         const S3tLy_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.526038614 UTC

[section ""data" . lvl_r3tAS_closure" {
     lvl_r3tAS_closure:
         const lvl_r3tAS_info;
 },
 lvl_r3tAS_entry() //  []
         { []
         }
     {offset
       c3ueV: // global
           R1 = Text.ParserCombinators.ReadP.Fail_closure+3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . lvl_r3tAS_info" {
     lvl_r3tAS_info:
         const lvl_r3tAS_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.531531098 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.choice2_closure" {
     Text.ParserCombinators.ReadPrec.choice2_closure:
         const Text.ParserCombinators.ReadPrec.choice2_info;
         const 0;
 },
 ds2_s3tD0_entry() //  [R1]
         { []
         }
     {offset
       c3ufi: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c3ufj; else goto c3ufk;
       c3ufj: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c3ufk: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = P64[R1 + 24];
           Sp = Sp - 16;
           call Text.ParserCombinators.ReadPrec.choice2_entry(R3,
                                                              R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds2_s3tD0_info" {
     ds2_s3tD0_info:
         const ds2_s3tD0_entry;
         const 2;
         const 4294967314;
         const S3tLy_srt+16;
 },
 sat_s3tD4_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uft: // global
           _s3tD1::P64 = R2;
           _s3tD4::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c3ufu; else goto c3ufv;
       c3ufv: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c3ufx; else goto c3ufw;
       c3ufx: // global
           HpAlloc = 32;
           goto c3ufu;
       c3ufu: // global
           R2 = _s3tD1::P64;
           R1 = _s3tD4::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3ufw: // global
           _s3tCZ::P64 = P64[_s3tD4::P64 + 7];
           _s3tD0::P64 = P64[_s3tD4::P64 + 15];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _s3tD0::P64;
           P64[Hp] = _s3tD1::P64;
           I64[Sp - 16] = block_c3ufr_info;
           R2 = _s3tD1::P64;
           R1 = _s3tCZ::P64;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tD4_info" {
     sat_s3tD4_info:
         const sat_s3tD4_entry;
         const 2;
         const 4294967307;
         const 4294967301;
         const S3tLy_srt;
 },
 _c3ufr() //  [R1]
         { []
         }
     {offset
       c3ufr: // global
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 16;
           call Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_entry(R3,
                                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c3ufr_info" {
     block_c3ufr_info:
         const _c3ufr;
         const 1;
         const 4294967326;
         const S3tLy_srt;
 },
 Text.ParserCombinators.ReadPrec.choice2_entry() //  [R2, R3]
         { []
         }
     {offset
       c3ufF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c3ufG; else goto c3ufH;
       c3ufG: // global
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.choice2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c3ufH: // global
           I64[Sp - 16] = block_c3uf7_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u3ufN; else goto c3uf8;
       u3ufN: // global
           call _c3uf7(R1) args: 0, res: 0, upd: 0;
       c3uf8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.choice2_info" {
     Text.ParserCombinators.ReadPrec.choice2_info:
         const Text.ParserCombinators.ReadPrec.choice2_entry;
         const 0;
         const 21474836494;
         const 8589934607;
         const S3tLy_srt;
 },
 _c3uf7() //  [R1]
         { []
         }
     {offset
       c3uf7: // global
           if (R1 & 7 == 1) goto c3ufC; else goto c3ufD;
       c3ufC: // global
           R1 = lvl_r3tAS_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c3ufD: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto c3ufM; else goto c3ufL;
       c3ufM: // global
           HpAlloc = 88;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c3ufL: // global
           _s3tCX::P64 = P64[R1 + 6];
           _s3tCY::P64 = P64[R1 + 14];
           I64[Hp - 80] = stg_ap_2_upd_info;
           P64[Hp - 64] = _s3tCX::P64;
           _s3tCV::P64 = P64[Sp + 8];
           P64[Hp - 56] = _s3tCV::P64;
           I64[Hp - 48] = ds2_s3tD0_info;
           P64[Hp - 32] = _s3tCV::P64;
           P64[Hp - 24] = _s3tCY::P64;
           I64[Hp - 16] = sat_s3tD4_info;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 48;
           R1 = Hp - 15;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c3uf7_info" {
     block_c3uf7_info:
         const _c3uf7;
         const 1;
         const 21474836510;
         const S3tLy_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.542558395 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.choice1_closure" {
     Text.ParserCombinators.ReadPrec.choice1_closure:
         const Text.ParserCombinators.ReadPrec.choice1_info;
         const 0;
 },
 Text.ParserCombinators.ReadPrec.choice1_entry() //  [R2, R3]
         { []
         }
     {offset
       c3ugj: // global
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.choice2_entry(R3,
                                                              R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.choice1_info" {
     Text.ParserCombinators.ReadPrec.choice1_info:
         const Text.ParserCombinators.ReadPrec.choice1_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S3tLy_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.546298378 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.choice_closure" {
     Text.ParserCombinators.ReadPrec.choice_closure:
         const Text.ParserCombinators.ReadPrec.choice_info;
         const 0;
 },
 Text.ParserCombinators.ReadPrec.choice_entry() //  [R2, R3]
         { []
         }
     {offset
       c3ugu: // global
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.choice1_entry(R3,
                                                              R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.choice_info" {
     Text.ParserCombinators.ReadPrec.choice_info:
         const Text.ParserCombinators.ReadPrec.choice_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S3tLy_srt+24;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.556205789 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec2_closure" {
     Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec2_closure:
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec2_info;
         const 0;
 },
 sat_s3tDj_entry() //  [R1]
         { []
         }
     {offset
       c3uh0: // global
           _s3tDj::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c3uh1; else goto c3uh2;
       c3uh2: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c3uh4; else goto c3uh3;
       c3uh4: // global
           HpAlloc = 24;
           goto c3uh1;
       c3uh1: // global
           R1 = _s3tDj::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c3uh3: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s3tDj::P64;
           _s3tDc::P64 = P64[_s3tDj::P64 + 16];
           _s3tDd::P64 = P64[_s3tDj::P64 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s3tDd::P64;
           P64[Hp] = GHC.Types.[]_closure+1;
           R2 = Hp - 14;
           R1 = _s3tDc::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s3tDj_info" {
     sat_s3tDj_info:
         const sat_s3tDj_entry;
         const 2;
         const 18;
 },
 sat_s3tDg_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uhb: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c3uhf; else goto c3uhe;
       c3uhf: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uhe: // global
           _s3tDc::P64 = P64[R1 + 7];
           _s3tDd::P64 = P64[R1 + 15];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s3tDd::P64;
           P64[Hp] = R2;
           R2 = Hp - 14;
           R1 = _s3tDc::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tDg_info" {
     sat_s3tDg_info:
         const sat_s3tDg_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_s3tDk_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uhi: // global
           _s3tDd::P64 = R2;
           _s3tDk::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c3uhj; else goto c3uhk;
       c3uhk: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c3uhm; else goto c3uhl;
       c3uhm: // global
           HpAlloc = 56;
           goto c3uhj;
       c3uhj: // global
           R2 = _s3tDd::P64;
           R1 = _s3tDk::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uhl: // global
           _s3tD9::P64 = P64[_s3tDk::P64 + 7];
           _s3tDa::P64 = P64[_s3tDk::P64 + 15];
           _s3tDc::P64 = P64[_s3tDk::P64 + 23];
           I64[Hp - 48] = sat_s3tDj_info;
           P64[Hp - 32] = _s3tDc::P64;
           P64[Hp - 24] = _s3tDd::P64;
           I64[Hp - 16] = sat_s3tDg_info;
           P64[Hp - 8] = _s3tDc::P64;
           P64[Hp] = _s3tDd::P64;
           I64[Sp - 16] = block_c3uhg_info;
           R2 = _s3tDa::P64;
           R1 = _s3tD9::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 15;
           P64[Sp - 8] = Hp - 48;
           Sp = Sp - 32;
           call some_v_s3tD9_entry(R2, R1) args: 24, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tDk_info" {
     sat_s3tDk_info:
         const sat_s3tDk_entry;
         const 3;
         const 4294967304;
         const 4294967301;
         const S3tLy_srt;
 },
 _c3uhg() //  [R1]
         { []
         }
     {offset
       c3uhg: // global
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 16;
           call Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_entry(R3,
                                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c3uhg_info" {
     block_c3uhg_info:
         const _c3uhg;
         const 1;
         const 4294967326;
         const S3tLy_srt;
 },
 sat_s3tDl_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uhq: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c3uhu; else goto c3uht;
       c3uhu: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uht: // global
           _s3tD9::P64 = P64[R1 + 7];
           _s3tDa::P64 = P64[R1 + 15];
           _s3tDb::P64 = P64[R1 + 23];
           I64[Hp - 24] = sat_s3tDk_info;
           P64[Hp - 16] = _s3tD9::P64;
           P64[Hp - 8] = _s3tDa::P64;
           P64[Hp] = R2;
           R2 = Hp - 23;
           R1 = _s3tDb::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tDl_info" {
     sat_s3tDl_info:
         const sat_s3tDl_entry;
         const 3;
         const 4294967304;
         const 4294967301;
         const S3tLy_srt;
 },
 some_v_s3tD9_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uhv: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c3uhz; else goto c3uhy;
       c3uhz: // global
           HpAlloc = 64;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uhy: // global
           _s3tD7::P64 = P64[R1 + 7];
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = _s3tD7::P64;
           P64[Hp - 32] = R2;
           I64[Hp - 24] = sat_s3tDl_info;
           P64[Hp - 16] = R1;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 56;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . some_v_s3tD9_info" {
     some_v_s3tD9_info:
         const some_v_s3tD9_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S3tLy_srt;
 },
 Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec2_entry() //  [R2,
                                                                     R3]
         { []
         }
     {offset
       c3uhA: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c3uhE; else goto c3uhD;
       c3uhE: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c3uhD: // global
           I64[Hp - 8] = some_v_s3tD9_info;
           P64[Hp] = R2;
           R2 = R3;
           R1 = Hp - 7;
           call some_v_s3tD9_entry(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec2_info" {
     Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec2_info:
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec2_entry;
         const 0;
         const 73014444046;
         const 8589934607;
         const S3tLy_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.585059275 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec1_closure" {
     Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec1_closure:
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec1_info;
         const 0;
 },
 sat_s3tDy_entry() //  [R1]
         { []
         }
     {offset
       c3uiq: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c3uir; else goto c3uis;
       c3uir: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c3uis: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = GHC.Types.[]_closure+1;
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s3tDy_info" {
     sat_s3tDy_info:
         const sat_s3tDy_entry;
         const 1;
         const 16;
 },
 sat_s3tDv_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uiE: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c3uiI; else goto c3uiH;
       c3uiI: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uiH: // global
           _s3tDr::P64 = P64[R1 + 7];
           _s3tDs::P64 = P64[R1 + 15];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s3tDs::P64;
           P64[Hp] = R2;
           R2 = Hp - 14;
           R1 = _s3tDr::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tDv_info" {
     sat_s3tDv_info:
         const sat_s3tDv_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_s3tDw_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uiJ: // global
           _s3tDs::P64 = R2;
           _s3tDw::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c3uiK; else goto c3uiL;
       c3uiL: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c3uiN; else goto c3uiM;
       c3uiN: // global
           HpAlloc = 24;
           goto c3uiK;
       c3uiK: // global
           R2 = _s3tDs::P64;
           R1 = _s3tDw::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uiM: // global
           _s3tDo::P64 = P64[_s3tDw::P64 + 7];
           _s3tDp::P64 = P64[_s3tDw::P64 + 15];
           _s3tDr::P64 = P64[_s3tDw::P64 + 23];
           I64[Hp - 16] = sat_s3tDv_info;
           P64[Hp - 8] = _s3tDr::P64;
           P64[Hp] = _s3tDs::P64;
           R2 = _s3tDp::P64;
           R1 = _s3tDo::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 15;
           Sp = Sp - 16;
           call many_v_s3tDo_entry(R2, R1) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tDw_info" {
     sat_s3tDw_info:
         const sat_s3tDw_entry;
         const 3;
         const 4294967304;
         const 4294967301;
         const S3tLy_srt;
 },
 sat_s3tDz_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uiQ: // global
           _s3tDr::P64 = R2;
           _s3tDz::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c3uiR; else goto c3uiS;
       c3uiS: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c3uiU; else goto c3uiT;
       c3uiU: // global
           HpAlloc = 56;
           goto c3uiR;
       c3uiR: // global
           R2 = _s3tDr::P64;
           R1 = _s3tDz::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uiT: // global
           _s3tDo::P64 = P64[_s3tDz::P64 + 7];
           _s3tDp::P64 = P64[_s3tDz::P64 + 15];
           _s3tDq::P64 = P64[_s3tDz::P64 + 23];
           I64[Hp - 48] = sat_s3tDy_info;
           P64[Hp - 32] = _s3tDr::P64;
           I64[Hp - 24] = sat_s3tDw_info;
           P64[Hp - 16] = _s3tDo::P64;
           P64[Hp - 8] = _s3tDp::P64;
           P64[Hp] = _s3tDr::P64;
           I64[Sp - 16] = block_c3uiO_info;
           R2 = Hp - 23;
           R1 = _s3tDq::P64;
           P64[Sp - 8] = Hp - 48;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tDz_info" {
     sat_s3tDz_info:
         const sat_s3tDz_entry;
         const 3;
         const 4294967304;
         const 4294967301;
         const S3tLy_srt;
 },
 _c3uiO() //  [R1]
         { []
         }
     {offset
       c3uiO: // global
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 16;
           call Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_entry(R3,
                                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c3uiO_info" {
     block_c3uiO_info:
         const _c3uiO;
         const 1;
         const 4294967326;
         const S3tLy_srt;
 },
 many_v_s3tDo_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uiY: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c3uj2; else goto c3uj1;
       c3uj2: // global
           HpAlloc = 64;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uj1: // global
           _s3tDm::P64 = P64[R1 + 7];
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = _s3tDm::P64;
           P64[Hp - 32] = R2;
           I64[Hp - 24] = sat_s3tDz_info;
           P64[Hp - 16] = R1;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 56;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . many_v_s3tDo_info" {
     many_v_s3tDo_info:
         const many_v_s3tDo_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S3tLy_srt;
 },
 Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec1_entry() //  [R2,
                                                                     R3]
         { []
         }
     {offset
       c3uj3: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c3uj7; else goto c3uj6;
       c3uj7: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c3uj6: // global
           I64[Hp - 8] = many_v_s3tDo_info;
           P64[Hp] = R2;
           R2 = R3;
           R1 = Hp - 7;
           call many_v_s3tDo_entry(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec1_info" {
     Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec1_info:
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec1_entry;
         const 0;
         const 141733920782;
         const 8589934607;
         const S3tLy_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.608155532 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec_closure" {
     Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec_closure:
         const GHC.Base.C:Alternative_con_info;
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec_closure+1;
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec4_closure+2;
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_closure+3;
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec2_closure+2;
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec1_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.610573889 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fMonadPlusReadPrec_closure" {
     Text.ParserCombinators.ReadPrec.$fMonadPlusReadPrec_closure:
         const GHC.Base.C:MonadPlus_con_info;
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec_closure+1;
         const Text.ParserCombinators.ReadPrec.$fMonadReadPrec_closure+1;
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec4_closure+2;
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_closure+3;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.614774748 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.<++1_closure" {
     Text.ParserCombinators.ReadPrec.<++1_closure:
         const Text.ParserCombinators.ReadPrec.<++1_info;
         const 0;
 },
 sat_s3tDI_entry() //  [R1, R2]
         { []
         }
     {offset
       c3ujR: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c3ujS; else goto c3ujT;
       c3ujS: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3ujT: // global
           I64[Sp - 8] = block_c3ujO_info;
           R4 = R2;
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp - 8;
           call Text.ParserCombinators.ReadP.$w<++_entry(R4,
                                                         R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tDI_info" {
     sat_s3tDI_info:
         const sat_s3tDI_entry;
         const 2;
         const 4294967307;
         const 4294967301;
         const S3tLy_srt+48;
 },
 _c3ujO() //  [R1]
         { []
         }
     {offset
       c3ujO: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c3ujW; else goto c3ujV;
       c3ujW: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c3ujV: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c3ujO_info" {
     block_c3ujO_info:
         const _c3ujO;
         const 0;
         const 30;
 },
 Text.ParserCombinators.ReadPrec.<++1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c3ujX: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto c3uk1; else goto c3uk0;
       c3uk1: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.<++1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c3uk0: // global
           I64[Hp - 80] = stg_ap_2_upd_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = sat_s3tDI_info;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 48;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.<++1_info" {
     Text.ParserCombinators.ReadPrec.<++1_info:
         const Text.ParserCombinators.ReadPrec.<++1_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S3tLy_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.622422656 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.<++_closure" {
     Text.ParserCombinators.ReadPrec.<++_closure:
         const Text.ParserCombinators.ReadPrec.<++_info;
         const 0;
 },
 Text.ParserCombinators.ReadPrec.<++_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c3ukl: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.<++1_entry(R4,
                                                           R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.<++_info" {
     Text.ParserCombinators.ReadPrec.<++_info:
         const Text.ParserCombinators.ReadPrec.<++_entry;
         const 0;
         const 4294967310;
         const 12884901911;
         const S3tLy_srt+56;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.626289745 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.readPrec_to_P1_closure" {
     Text.ParserCombinators.ReadPrec.readPrec_to_P1_closure:
         const Text.ParserCombinators.ReadPrec.readPrec_to_P1_info;
 },
 Text.ParserCombinators.ReadPrec.readPrec_to_P1_entry() //  [R2]
         { []
         }
     {offset
       c3ukw: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.readPrec_to_P1_info" {
     Text.ParserCombinators.ReadPrec.readPrec_to_P1_info:
         const Text.ParserCombinators.ReadPrec.readPrec_to_P1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.629863344 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.readPrec_to_P_closure" {
     Text.ParserCombinators.ReadPrec.readPrec_to_P_closure:
         const Text.ParserCombinators.ReadPrec.readPrec_to_P_info;
 },
 Text.ParserCombinators.ReadPrec.readPrec_to_P_entry() //  [R2]
         { []
         }
     {offset
       c3ukH: // global
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.readPrec_to_P1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.readPrec_to_P_info" {
     Text.ParserCombinators.ReadPrec.readPrec_to_P_info:
         const Text.ParserCombinators.ReadPrec.readPrec_to_P_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.63344164 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.readP_to_Prec1_closure" {
     Text.ParserCombinators.ReadPrec.readP_to_Prec1_closure:
         const Text.ParserCombinators.ReadPrec.readP_to_Prec1_info;
 },
 Text.ParserCombinators.ReadPrec.readP_to_Prec1_entry() //  [R2]
         { []
         }
     {offset
       c3ukS: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.readP_to_Prec1_info" {
     Text.ParserCombinators.ReadPrec.readP_to_Prec1_info:
         const Text.ParserCombinators.ReadPrec.readP_to_Prec1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.637011945 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.readP_to_Prec_closure" {
     Text.ParserCombinators.ReadPrec.readP_to_Prec_closure:
         const Text.ParserCombinators.ReadPrec.readP_to_Prec_info;
 },
 Text.ParserCombinators.ReadPrec.readP_to_Prec_entry() //  [R2]
         { []
         }
     {offset
       c3ul3: // global
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.readP_to_Prec1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.readP_to_Prec_info" {
     Text.ParserCombinators.ReadPrec.readP_to_Prec_info:
         const Text.ParserCombinators.ReadPrec.readP_to_Prec_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.641578895 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.readPrec_to_S_closure" {
     Text.ParserCombinators.ReadPrec.readPrec_to_S_closure:
         const Text.ParserCombinators.ReadPrec.readPrec_to_S_info;
 },
 sat_s3tDN_entry() //  [R1]
         { []
         }
     {offset
       c3uli: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c3ulj; else goto c3ulk;
       c3ulj: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c3ulk: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           R2 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call stg_ap_pp_fast(R3, R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s3tDN_info" {
     sat_s3tDN_info:
         const sat_s3tDN_entry;
         const 2;
         const 18;
 },
 Text.ParserCombinators.ReadPrec.readPrec_to_S_entry() //  [R2, R3]
         { []
         }
     {offset
       c3ull: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c3ulp; else goto c3ulo;
       c3ulp: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.readPrec_to_S_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c3ulo: // global
           I64[Hp - 24] = sat_s3tDN_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R2 = Hp - 24;
           R1 = Text.ParserCombinators.ReadP.run_closure+2;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.readPrec_to_S_info" {
     Text.ParserCombinators.ReadPrec.readPrec_to_S_info:
         const Text.ParserCombinators.ReadPrec.readPrec_to_S_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.648901568 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.readS_to_Prec1_closure" {
     Text.ParserCombinators.ReadPrec.readS_to_Prec1_closure:
         const Text.ParserCombinators.ReadPrec.readS_to_Prec1_info;
 },
 sat_s3tDU_entry() //  [R1, R2]
         { []
         }
     {offset
       c3ulL: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c3ulM; else goto c3ulN;
       c3ulM: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3ulN: // global
           I64[Sp - 8] = block_c3ulI_info;
           R3 = R2;
           R2 = P64[R1 + 7];
           Sp = Sp - 8;
           call Text.ParserCombinators.ReadP.$wreadS_to_P_entry(R3,
                                                                R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3tDU_info" {
     sat_s3tDU_info:
         const sat_s3tDU_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c3ulI() //  [R1]
         { []
         }
     {offset
       c3ulI: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c3ulQ; else goto c3ulP;
       c3ulQ: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c3ulP: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c3ulI_info" {
     block_c3ulI_info:
         const _c3ulI;
         const 0;
         const 30;
 },
 Text.ParserCombinators.ReadPrec.readS_to_Prec1_entry() //  [R2, R3]
         { []
         }
     {offset
       c3ulR: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c3ulV; else goto c3ulU;
       c3ulV: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.readS_to_Prec1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c3ulU: // global
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = R3;
           I64[Hp - 8] = sat_s3tDU_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.readS_to_Prec1_info" {
     Text.ParserCombinators.ReadPrec.readS_to_Prec1_info:
         const Text.ParserCombinators.ReadPrec.readS_to_Prec1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.656668627 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.readS_to_Prec_closure" {
     Text.ParserCombinators.ReadPrec.readS_to_Prec_closure:
         const Text.ParserCombinators.ReadPrec.readS_to_Prec_info;
 },
 Text.ParserCombinators.ReadPrec.readS_to_Prec_entry() //  [R2, R3]
         { []
         }
     {offset
       c3ume: // global
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.readS_to_Prec1_entry(R3,
                                                                     R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.readS_to_Prec_info" {
     Text.ParserCombinators.ReadPrec.readS_to_Prec_info:
         const Text.ParserCombinators.ReadPrec.readS_to_Prec_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.659739063 UTC

[section ""cstring" . Text.ParserCombinators.ReadPrec.$trModule4_bytes" {
     Text.ParserCombinators.ReadPrec.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.661509759 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$trModule3_closure" {
     Text.ParserCombinators.ReadPrec.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Text.ParserCombinators.ReadPrec.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.66330543 UTC

[section ""cstring" . Text.ParserCombinators.ReadPrec.$trModule2_bytes" {
     Text.ParserCombinators.ReadPrec.$trModule2_bytes:
         I8[] [84,101,120,116,46,80,97,114,115,101,114,67,111,109,98,105,110,97,116,111,114,115,46,82,101,97,100,80,114,101,99]
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.665061444 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$trModule1_closure" {
     Text.ParserCombinators.ReadPrec.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Text.ParserCombinators.ReadPrec.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.66690492 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$trModule_closure" {
     Text.ParserCombinators.ReadPrec.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Text.ParserCombinators.ReadPrec.$trModule3_closure+1;
         const Text.ParserCombinators.ReadPrec.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.668694654 UTC

[section ""data" . $krep_r3tAT_closure" {
     $krep_r3tAT_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcInt_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.670544085 UTC

[section ""data" . $krep1_r3tAU_closure" {
     $krep1_r3tAU_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.672276489 UTC

[section ""data" . $krep2_r3tAV_closure" {
     $krep2_r3tAV_closure:
         const :_con_info;
         const $krep1_r3tAU_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.674142027 UTC

[section ""data" . $krep3_r3tAW_closure" {
     $krep3_r3tAW_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Text.ParserCombinators.ReadP.$tcReadP_closure;
         const $krep2_r3tAV_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.676007239 UTC

[section ""data" . $krep4_r3tAX_closure" {
     $krep4_r3tAX_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r3tAT_closure+1;
         const $krep3_r3tAW_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.678450246 UTC

[section ""cstring" . Text.ParserCombinators.ReadPrec.$tcReadPrec2_bytes" {
     Text.ParserCombinators.ReadPrec.$tcReadPrec2_bytes:
         I8[] [82,101,97,100,80,114,101,99]
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.680269273 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$tcReadPrec1_closure" {
     Text.ParserCombinators.ReadPrec.$tcReadPrec1_closure:
         const GHC.Types.TrNameS_con_info;
         const Text.ParserCombinators.ReadPrec.$tcReadPrec2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.682689094 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$tcReadPrec_closure" {
     Text.ParserCombinators.ReadPrec.$tcReadPrec_closure:
         const GHC.Types.TyCon_con_info;
         const Text.ParserCombinators.ReadPrec.$trModule_closure+1;
         const Text.ParserCombinators.ReadPrec.$tcReadPrec1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 17656447446138014199;
         const 97878223355588575;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.68455295 UTC

[section ""data" . $krep5_r3tAY_closure" {
     $krep5_r3tAY_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Text.ParserCombinators.ReadPrec.$tcReadPrec_closure+1;
         const $krep2_r3tAV_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.686311129 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$tc'P1_closure" {
     Text.ParserCombinators.ReadPrec.$tc'P1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r3tAX_closure+4;
         const $krep5_r3tAY_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.687978579 UTC

[section ""cstring" . Text.ParserCombinators.ReadPrec.$tc'P3_bytes" {
     Text.ParserCombinators.ReadPrec.$tc'P3_bytes:
         I8[] [39,80]
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.689789827 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$tc'P2_closure" {
     Text.ParserCombinators.ReadPrec.$tc'P2_closure:
         const GHC.Types.TrNameS_con_info;
         const Text.ParserCombinators.ReadPrec.$tc'P3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.691543189 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$tc'P_closure" {
     Text.ParserCombinators.ReadPrec.$tc'P_closure:
         const GHC.Types.TyCon_con_info;
         const Text.ParserCombinators.ReadPrec.$trModule_closure+1;
         const Text.ParserCombinators.ReadPrec.$tc'P2_closure+1;
         const Text.ParserCombinators.ReadPrec.$tc'P1_closure+4;
         const 14970691021354513070;
         const 16104245447600145137;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:07.693392638 UTC

[section ""relreadonly" . S3tLy_srt" {
     S3tLy_srt:
         const Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_closure;
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_closure;
         const Text.ParserCombinators.ReadPrec.choice2_closure;
         const Text.ParserCombinators.ReadPrec.choice1_closure;
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec2_closure;
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec1_closure;
         const Text.ParserCombinators.ReadP.$w<++_closure;
         const Text.ParserCombinators.ReadPrec.<++1_closure;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.402851829 UTC

[]


==================== Raw Cmm ====================
2018-03-16 15:58:08.405647519 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fFunctorReadPrec2_closure" {
     Text.ParserCombinators.ReadPrec.$fFunctorReadPrec2_closure:
         const Text.ParserCombinators.ReadPrec.$fFunctorReadPrec2_info;
 },
 sat_s3umJ_entry() //  [R1, R2]
         { []
         }
     {offset
       c3upO: // global
           R4 = R2;
           R3 = P64[R1 + 7];
           R2 = P64[R1 + 15];
           call GHC.Base.._entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3umJ_info" {
     sat_s3umJ_info:
         const sat_s3umJ_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_s3umK_entry() //  [R1, R2]
         { []
         }
     {offset
       c3upR: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c3upV; else goto c3upU;
       c3upV: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3upU: // global
           _s3umE::P64 = P64[R1 + 7];
           _s3umH::P64 = P64[R1 + 15];
           I64[Hp - 16] = sat_s3umJ_info;
           P64[Hp - 8] = _s3umE::P64;
           P64[Hp] = R2;
           R2 = Hp - 15;
           R1 = _s3umH::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3umK_info" {
     sat_s3umK_info:
         const sat_s3umK_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 Text.ParserCombinators.ReadPrec.$fFunctorReadPrec2_entry() //  [R2,
                                                                 R3, R4]
         { []
         }
     {offset
       c3upW: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c3uq0; else goto c3upZ;
       c3uq0: // global
           HpAlloc = 56;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.$fFunctorReadPrec2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c3upZ: // global
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = sat_s3umK_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 48;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fFunctorReadPrec2_info" {
     Text.ParserCombinators.ReadPrec.$fFunctorReadPrec2_info:
         const Text.ParserCombinators.ReadPrec.$fFunctorReadPrec2_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.413974538 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fFunctorReadPrec1_closure" {
     Text.ParserCombinators.ReadPrec.$fFunctorReadPrec1_closure:
         const Text.ParserCombinators.ReadPrec.$fFunctorReadPrec1_info;
 },
 sat_s3umS_entry() //  [R1]
         { []
         }
     {offset
       c3uqw: // global
           R1 = P64[R1 + 7] & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3umS_info" {
     sat_s3umS_info:
         const sat_s3umS_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_s3umT_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uqz: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c3uqD; else goto c3uqC;
       c3uqD: // global
           HpAlloc = 48;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uqC: // global
           _s3umL::P64 = P64[R1 + 7];
           _s3umO::P64 = P64[R1 + 15];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = _s3umL::P64;
           I64[Hp - 8] = sat_s3umS_info;
           P64[Hp] = Hp - 40;
           R2 = Hp - 7;
           R1 = _s3umO::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3umT_info" {
     sat_s3umT_info:
         const sat_s3umT_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 Text.ParserCombinators.ReadPrec.$fFunctorReadPrec1_entry() //  [R2,
                                                                 R3, R4]
         { []
         }
     {offset
       c3uqE: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c3uqI; else goto c3uqH;
       c3uqI: // global
           HpAlloc = 56;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.$fFunctorReadPrec1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c3uqH: // global
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = sat_s3umT_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 48;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fFunctorReadPrec1_info" {
     Text.ParserCombinators.ReadPrec.$fFunctorReadPrec1_info:
         const Text.ParserCombinators.ReadPrec.$fFunctorReadPrec1_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.420825538 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fFunctorReadPrec_closure" {
     Text.ParserCombinators.ReadPrec.$fFunctorReadPrec_closure:
         const GHC.Base.C:Functor_con_info;
         const Text.ParserCombinators.ReadPrec.$fFunctorReadPrec2_closure+3;
         const Text.ParserCombinators.ReadPrec.$fFunctorReadPrec1_closure+3;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.423201922 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec5_closure" {
     Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec5_closure:
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec5_info;
 },
 Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec5_entry() //  [R2,
                                                                     R4]
         { []
         }
     {offset
       c3ur7: // global
           R2 = R2;
           R1 = R4;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec5_info" {
     Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec5_info:
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec5_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.426546707 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fMonadFailReadPrec1_closure" {
     Text.ParserCombinators.ReadPrec.$fMonadFailReadPrec1_closure:
         const Text.ParserCombinators.ReadPrec.$fMonadFailReadPrec1_info;
 },
 Text.ParserCombinators.ReadPrec.$fMonadFailReadPrec1_entry() //  []
         { []
         }
     {offset
       c3uri: // global
           R1 = Text.ParserCombinators.ReadP.Fail_closure+3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fMonadFailReadPrec1_info" {
     Text.ParserCombinators.ReadPrec.$fMonadFailReadPrec1_info:
         const Text.ParserCombinators.ReadPrec.$fMonadFailReadPrec1_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.431329374 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fMonadReadPrec1_closure" {
     Text.ParserCombinators.ReadPrec.$fMonadReadPrec1_closure:
         const Text.ParserCombinators.ReadPrec.$fMonadReadPrec1_info;
 },
 sat_s3un6_entry() //  [R1, R2]
         { []
         }
     {offset
       c3urG: // global
           R4 = P64[R1 + 23];
           R3 = P64[R1 + 15];
           R2 = R2;
           R1 = P64[R1 + 7];
           call stg_ap_ppp_fast(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3un6_info" {
     sat_s3un6_info:
         const sat_s3un6_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 sat_s3un7_entry() //  [R1, R2]
         { []
         }
     {offset
       c3urJ: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c3urN; else goto c3urM;
       c3urN: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3urM: // global
           _s3un1::P64 = P64[R1 + 7];
           _s3un2::P64 = P64[R1 + 15];
           _s3un3::P64 = P64[R1 + 23];
           I64[Hp - 24] = sat_s3un6_info;
           P64[Hp - 16] = _s3un1::P64;
           P64[Hp - 8] = _s3un2::P64;
           P64[Hp] = R2;
           R2 = Hp - 23;
           R1 = _s3un3::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3un7_info" {
     sat_s3un7_info:
         const sat_s3un7_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 Text.ParserCombinators.ReadPrec.$fMonadReadPrec1_entry() //  [R2,
                                                               R3, R4]
         { []
         }
     {offset
       c3urO: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c3urS; else goto c3urR;
       c3urS: // global
           HpAlloc = 64;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.$fMonadReadPrec1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c3urR: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = R2;
           P64[Hp - 32] = R4;
           I64[Hp - 24] = sat_s3un7_info;
           P64[Hp - 16] = R3;
           P64[Hp - 8] = R4;
           P64[Hp] = Hp - 56;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fMonadReadPrec1_info" {
     Text.ParserCombinators.ReadPrec.$fMonadReadPrec1_info:
         const Text.ParserCombinators.ReadPrec.$fMonadReadPrec1_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.440501545 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec3_closure" {
     Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec3_closure:
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec3_info;
 },
 sat_s3unh_entry() //  [R1, R2]
         { []
         }
     {offset
       c3ust: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c3usx; else goto c3usw;
       c3usx: // global
           HpAlloc = 40;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3usw: // global
           _s3un8::P64 = P64[R1 + 7];
           _s3und::P64 = P64[R1 + 15];
           _s3une::P64 = P64[R1 + 23];
           I64[Hp - 32] = stg_ap_3_upd_info;
           P64[Hp - 16] = _s3un8::P64;
           P64[Hp - 8] = _s3une::P64;
           P64[Hp] = R2;
           R2 = Hp - 32;
           R1 = _s3und::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3unh_info" {
     sat_s3unh_info:
         const sat_s3unh_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 sat_s3uni_entry() //  [R1, R2]
         { []
         }
     {offset
       c3usy: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c3usC; else goto c3usB;
       c3usC: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3usB: // global
           _s3un8::P64 = P64[R1 + 7];
           _s3una::P64 = P64[R1 + 15];
           _s3unb::P64 = P64[R1 + 23];
           _s3und::P64 = P64[R1 + 31];
           I64[Hp - 24] = sat_s3unh_info;
           P64[Hp - 16] = _s3un8::P64;
           P64[Hp - 8] = _s3und::P64;
           P64[Hp] = R2;
           R3 = Hp - 23;
           R2 = _s3unb::P64;
           R1 = _s3una::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3uni_info" {
     sat_s3uni_info:
         const sat_s3uni_entry;
         const 4;
         const 8;
         const 4294967301;
 },
 sat_s3unj_entry() //  [R1, R2]
         { []
         }
     {offset
       c3usD: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c3usH; else goto c3usG;
       c3usH: // global
           HpAlloc = 40;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3usG: // global
           _s3un8::P64 = P64[R1 + 7];
           _s3una::P64 = P64[R1 + 15];
           _s3unb::P64 = P64[R1 + 23];
           _s3unc::P64 = P64[R1 + 31];
           I64[Hp - 32] = sat_s3uni_info;
           P64[Hp - 24] = _s3un8::P64;
           P64[Hp - 16] = _s3una::P64;
           P64[Hp - 8] = _s3unb::P64;
           P64[Hp] = R2;
           R2 = Hp - 31;
           R1 = _s3unc::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3unj_info" {
     sat_s3unj_info:
         const sat_s3unj_entry;
         const 4;
         const 8;
         const 4294967301;
 },
 Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec3_entry() //  [R2,
                                                                     R3, R4, R5]
         { []
         }
     {offset
       c3usI: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c3usM; else goto c3usL;
       c3usM: // global
           HpAlloc = 72;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec3_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c3usL: // global
           I64[Hp - 64] = stg_ap_2_upd_info;
           P64[Hp - 48] = R3;
           P64[Hp - 40] = R5;
           I64[Hp - 32] = sat_s3unj_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = R4;
           P64[Hp - 8] = R5;
           P64[Hp] = Hp - 64;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec3_info" {
     Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec3_info:
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec3_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.451798753 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec1_closure" {
     Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec1_closure:
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec1_info;
 },
 sat_s3uns_entry() //  [R1]
         { []
         }
     {offset
       c3uts: // global
           R1 = P64[R1 + 7] & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3uns_info" {
     sat_s3uns_info:
         const sat_s3uns_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_s3unt_entry() //  [R1, R2]
         { []
         }
     {offset
       c3utv: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c3utz; else goto c3uty;
       c3utz: // global
           HpAlloc = 48;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uty: // global
           _s3unl::P64 = P64[R1 + 7];
           _s3unm::P64 = P64[R1 + 15];
           _s3uno::P64 = P64[R1 + 23];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = _s3uno::P64;
           P64[Hp - 16] = R2;
           I64[Hp - 8] = sat_s3uns_info;
           P64[Hp] = Hp - 40;
           R3 = Hp - 7;
           R2 = _s3unm::P64;
           R1 = _s3unl::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3unt_info" {
     sat_s3unt_info:
         const sat_s3unt_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 sat_s3unu_entry() //  [R1, R2]
         { []
         }
     {offset
       c3utA: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c3utE; else goto c3utD;
       c3utE: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3utD: // global
           _s3unl::P64 = P64[R1 + 7];
           _s3unm::P64 = P64[R1 + 15];
           _s3unn::P64 = P64[R1 + 23];
           I64[Hp - 24] = sat_s3unt_info;
           P64[Hp - 16] = _s3unl::P64;
           P64[Hp - 8] = _s3unm::P64;
           P64[Hp] = R2;
           R2 = Hp - 23;
           R1 = _s3unn::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3unu_info" {
     sat_s3unu_info:
         const sat_s3unu_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec1_entry() //  [R2,
                                                                     R3, R4]
         { []
         }
     {offset
       c3utF: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c3utJ; else goto c3utI;
       c3utJ: // global
           HpAlloc = 64;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c3utI: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = R2;
           P64[Hp - 32] = R4;
           I64[Hp - 24] = sat_s3unu_info;
           P64[Hp - 16] = R3;
           P64[Hp - 8] = R4;
           P64[Hp] = Hp - 56;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec1_info" {
     Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec1_info:
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec1_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.462073101 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec4_closure" {
     Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec4_closure:
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec4_info;
 },
 sat_s3unD_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uus: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c3uuw; else goto c3uuv;
       c3uuw: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uuv: // global
           _s3unz::P64 = P64[R1 + 7];
           _s3unA::P64 = P64[R1 + 15];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _s3unA::P64;
           P64[Hp] = R2;
           R2 = Hp - 24;
           R1 = _s3unz::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3unD_info" {
     sat_s3unD_info:
         const sat_s3unD_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_s3unE_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uux: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c3uuB; else goto c3uuA;
       c3uuB: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uuA: // global
           _s3unw::P64 = P64[R1 + 7];
           _s3unx::P64 = P64[R1 + 15];
           _s3unz::P64 = P64[R1 + 23];
           I64[Hp - 16] = sat_s3unD_info;
           P64[Hp - 8] = _s3unz::P64;
           P64[Hp] = R2;
           R3 = Hp - 15;
           R2 = _s3unx::P64;
           R1 = _s3unw::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3unE_info" {
     sat_s3unE_info:
         const sat_s3unE_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 sat_s3unF_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uuC: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c3uuG; else goto c3uuF;
       c3uuG: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uuF: // global
           _s3unw::P64 = P64[R1 + 7];
           _s3unx::P64 = P64[R1 + 15];
           _s3uny::P64 = P64[R1 + 23];
           I64[Hp - 24] = sat_s3unE_info;
           P64[Hp - 16] = _s3unw::P64;
           P64[Hp - 8] = _s3unx::P64;
           P64[Hp] = R2;
           R2 = Hp - 23;
           R1 = _s3uny::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3unF_info" {
     sat_s3unF_info:
         const sat_s3unF_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec4_entry() //  [R2,
                                                                     R3, R4]
         { []
         }
     {offset
       c3uuH: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c3uuL; else goto c3uuK;
       c3uuL: // global
           HpAlloc = 64;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec4_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c3uuK: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = R2;
           P64[Hp - 32] = R4;
           I64[Hp - 24] = sat_s3unF_info;
           P64[Hp - 16] = R3;
           P64[Hp - 8] = R4;
           P64[Hp] = Hp - 56;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec4_info" {
     Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec4_info:
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec4_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.473737579 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec2_closure" {
     Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec2_closure:
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec2_info;
 },
 sat_s3unN_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uvp: // global
           R2 = R2;
           R1 = P64[R1 + 7];
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3unN_info" {
     sat_s3unN_info:
         const sat_s3unN_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 lvl1_s3unL_entry() //  [R1]
         { []
         }
     {offset
       c3uvs: // global
           _s3unL::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c3uvt; else goto c3uvu;
       c3uvu: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c3uvw; else goto c3uvv;
       c3uvw: // global
           HpAlloc = 16;
           goto c3uvt;
       c3uvt: // global
           R1 = _s3unL::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c3uvv: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s3unL::P64;
           _s3unH::P64 = P64[_s3unL::P64 + 16];
           _s3unI::P64 = P64[_s3unL::P64 + 24];
           _s3unK::P64 = P64[_s3unL::P64 + 32];
           I64[Hp - 8] = sat_s3unN_info;
           P64[Hp] = _s3unK::P64;
           R3 = Hp - 7;
           R2 = _s3unI::P64;
           R1 = _s3unH::P64;
           Sp = Sp - 16;
           call stg_ap_pp_fast(R3, R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl1_s3unL_info" {
     lvl1_s3unL_info:
         const lvl1_s3unL_entry;
         const 3;
         const 15;
 },
 sat_s3unP_entry() //  [R1]
         { []
         }
     {offset
       c3uvC: // global
           R1 = P64[R1 + 7] & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3unP_info" {
     sat_s3unP_info:
         const sat_s3unP_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_s3unQ_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uvF: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c3uvJ; else goto c3uvI;
       c3uvJ: // global
           HpAlloc = 56;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uvI: // global
           _s3unH::P64 = P64[R1 + 7];
           _s3unI::P64 = P64[R1 + 15];
           _s3unJ::P64 = P64[R1 + 23];
           I64[Hp - 48] = lvl1_s3unL_info;
           P64[Hp - 32] = _s3unH::P64;
           P64[Hp - 24] = _s3unI::P64;
           P64[Hp - 16] = R2;
           I64[Hp - 8] = sat_s3unP_info;
           P64[Hp] = Hp - 48;
           R2 = Hp - 7;
           R1 = _s3unJ::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3unQ_info" {
     sat_s3unQ_info:
         const sat_s3unQ_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec2_entry() //  [R2,
                                                                     R3, R4]
         { []
         }
     {offset
       c3uvK: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c3uvO; else goto c3uvN;
       c3uvO: // global
           HpAlloc = 64;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c3uvN: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = R2;
           P64[Hp - 32] = R4;
           I64[Hp - 24] = sat_s3unQ_info;
           P64[Hp - 16] = R3;
           P64[Hp - 8] = R4;
           P64[Hp] = Hp - 56;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec2_info" {
     Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec2_info:
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec2_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.485170796 UTC

[section ""data" . $c>>_r3tAR_closure" {
     $c>>_r3tAR_closure:
         const $c>>_r3tAR_info;
 },
 sat_s3unY_entry() //  [R1]
         { []
         }
     {offset
       c3uwx: // global
           R1 = P64[R1 + 7] & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3unY_info" {
     sat_s3unY_info:
         const sat_s3unY_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_s3unZ_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uwA: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c3uwE; else goto c3uwD;
       c3uwE: // global
           HpAlloc = 56;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uwD: // global
           _s3unS::P64 = P64[R1 + 7];
           _s3unT::P64 = P64[R1 + 15];
           _s3unU::P64 = P64[R1 + 23];
           I64[Hp - 48] = stg_ap_3_upd_info;
           P64[Hp - 32] = _s3unS::P64;
           P64[Hp - 24] = _s3unT::P64;
           P64[Hp - 16] = R2;
           I64[Hp - 8] = sat_s3unY_info;
           P64[Hp] = Hp - 48;
           R2 = Hp - 7;
           R1 = _s3unU::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3unZ_info" {
     sat_s3unZ_info:
         const sat_s3unZ_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 $c>>_r3tAR_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c3uwF: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c3uwJ; else goto c3uwI;
       c3uwJ: // global
           HpAlloc = 64;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = $c>>_r3tAR_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c3uwI: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = R2;
           P64[Hp - 32] = R4;
           I64[Hp - 24] = sat_s3unZ_info;
           P64[Hp - 16] = R3;
           P64[Hp - 8] = R4;
           P64[Hp] = Hp - 56;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . $c>>_r3tAR_info" {
     $c>>_r3tAR_info:
         const $c>>_r3tAR_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.492290849 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fMonadReadPrec_$c>>_closure" {
     Text.ParserCombinators.ReadPrec.$fMonadReadPrec_$c>>_closure:
         const Text.ParserCombinators.ReadPrec.$fMonadReadPrec_$c>>_info;
 },
 Text.ParserCombinators.ReadPrec.$fMonadReadPrec_$c>>_entry() //  [R2,
                                                                   R3, R4]
         { []
         }
     {offset
       c3ux7: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call $c>>_r3tAR_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fMonadReadPrec_$c>>_info" {
     Text.ParserCombinators.ReadPrec.$fMonadReadPrec_$c>>_info:
         const Text.ParserCombinators.ReadPrec.$fMonadReadPrec_$c>>_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.495533467 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec_closure" {
     Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec_closure:
         const GHC.Base.C:Applicative_con_info;
         const Text.ParserCombinators.ReadPrec.$fFunctorReadPrec_closure+1;
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec5_closure+3;
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec4_closure+3;
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec3_closure+4;
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec2_closure+3;
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec1_closure+3;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.497500643 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fMonadReadPrec_closure" {
     Text.ParserCombinators.ReadPrec.$fMonadReadPrec_closure:
         const GHC.Base.C:Monad_con_info;
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec_closure+1;
         const Text.ParserCombinators.ReadPrec.$fMonadReadPrec1_closure+3;
         const Text.ParserCombinators.ReadPrec.$fMonadReadPrec_$c>>_closure+3;
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec5_closure+3;
         const Text.ParserCombinators.ReadPrec.$fMonadFailReadPrec1_closure+3;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.499257322 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fMonadFailReadPrec_closure" {
     Text.ParserCombinators.ReadPrec.$fMonadFailReadPrec_closure:
         const Control.Monad.Fail.C:MonadFail_con_info;
         const Text.ParserCombinators.ReadPrec.$fMonadReadPrec_closure+1;
         const Text.ParserCombinators.ReadPrec.$fMonadFailReadPrec1_closure+3;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.500894676 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.minPrec_closure" {
     Text.ParserCombinators.ReadPrec.minPrec_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.503094868 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.reset1_closure" {
     Text.ParserCombinators.ReadPrec.reset1_closure:
         const Text.ParserCombinators.ReadPrec.reset1_info;
 },
 Text.ParserCombinators.ReadPrec.reset1_entry() //  [R2]
         { []
         }
     {offset
       c3uxm: // global
           _s3uo0::P64 = R2;
           R2 = Text.ParserCombinators.ReadPrec.minPrec_closure+1;
           R1 = _s3uo0::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.reset1_info" {
     Text.ParserCombinators.ReadPrec.reset1_info:
         const Text.ParserCombinators.ReadPrec.reset1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.506644685 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.reset_closure" {
     Text.ParserCombinators.ReadPrec.reset_closure:
         const Text.ParserCombinators.ReadPrec.reset_info;
 },
 Text.ParserCombinators.ReadPrec.reset_entry() //  [R2, R3]
         { []
         }
     {offset
       c3uxx: // global
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.reset1_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.reset_info" {
     Text.ParserCombinators.ReadPrec.reset_info:
         const Text.ParserCombinators.ReadPrec.reset_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.509938808 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.lift1_closure" {
     Text.ParserCombinators.ReadPrec.lift1_closure:
         const Text.ParserCombinators.ReadPrec.lift1_info;
 },
 Text.ParserCombinators.ReadPrec.lift1_entry() //  [R2]
         { []
         }
     {offset
       c3uxI: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.lift1_info" {
     Text.ParserCombinators.ReadPrec.lift1_info:
         const Text.ParserCombinators.ReadPrec.lift1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.514305444 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.lift_closure" {
     Text.ParserCombinators.ReadPrec.lift_closure:
         const Text.ParserCombinators.ReadPrec.lift_info;
 },
 Text.ParserCombinators.ReadPrec.lift_entry() //  [R2, R3]
         { []
         }
     {offset
       c3uxT: // global
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.lift1_entry(R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.lift_info" {
     Text.ParserCombinators.ReadPrec.lift_info:
         const Text.ParserCombinators.ReadPrec.lift_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.517854749 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.get1_closure" {
     Text.ParserCombinators.ReadPrec.get1_closure:
         const Text.ParserCombinators.ReadPrec.get1_info;
 },
 Text.ParserCombinators.ReadPrec.get1_entry() //  [R2, R3]
         { []
         }
     {offset
       c3uy5: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c3uy9; else goto c3uy8;
       c3uy9: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.get1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c3uy8: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Get_con_info;
           P64[Hp] = R3;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.get1_info" {
     Text.ParserCombinators.ReadPrec.get1_info:
         const Text.ParserCombinators.ReadPrec.get1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.521531516 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.get_closure" {
     Text.ParserCombinators.ReadPrec.get_closure:
         const Text.ParserCombinators.ReadPrec.get_info;
 },
 Text.ParserCombinators.ReadPrec.get_entry() //  [R2, R3]
         { []
         }
     {offset
       c3uyk: // global
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.get1_entry(R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.get_info" {
     Text.ParserCombinators.ReadPrec.get_info:
         const Text.ParserCombinators.ReadPrec.get_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.525180591 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.look1_closure" {
     Text.ParserCombinators.ReadPrec.look1_closure:
         const Text.ParserCombinators.ReadPrec.look1_info;
 },
 Text.ParserCombinators.ReadPrec.look1_entry() //  [R2, R3]
         { []
         }
     {offset
       c3uyw: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c3uyA; else goto c3uyz;
       c3uyA: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.look1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c3uyz: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R3;
           R1 = Hp - 6;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.look1_info" {
     Text.ParserCombinators.ReadPrec.look1_info:
         const Text.ParserCombinators.ReadPrec.look1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.529032569 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.look_closure" {
     Text.ParserCombinators.ReadPrec.look_closure:
         const Text.ParserCombinators.ReadPrec.look_info;
 },
 Text.ParserCombinators.ReadPrec.look_entry() //  [R2, R3]
         { []
         }
     {offset
       c3uyL: // global
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.look1_entry(R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.look_info" {
     Text.ParserCombinators.ReadPrec.look_info:
         const Text.ParserCombinators.ReadPrec.look_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.533056091 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec4_closure" {
     Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec4_closure:
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec4_info;
 },
 Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec4_entry() //  []
         { []
         }
     {offset
       c3uyW: // global
           R1 = Text.ParserCombinators.ReadP.Fail_closure+3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec4_info" {
     Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec4_info:
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec4_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.536639028 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.pfail_closure" {
     Text.ParserCombinators.ReadPrec.pfail_closure:
         const Text.ParserCombinators.ReadPrec.pfail_info;
 },
 Text.ParserCombinators.ReadPrec.pfail_entry() //  [R2, R3]
         { []
         }
     {offset
       c3uz9: // global
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec4_entry(R3,
                                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.pfail_info" {
     Text.ParserCombinators.ReadPrec.pfail_info:
         const Text.ParserCombinators.ReadPrec.pfail_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.540926985 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.step1_closure" {
     Text.ParserCombinators.ReadPrec.step1_closure:
         const Text.ParserCombinators.ReadPrec.step1_info;
 },
 sat_s3uof_entry() //  [R1]
         { []
         }
     {offset
       c3uzr: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c3uzy; else goto c3uzz;
       c3uzy: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c3uzz: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c3uzo_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u3uzD; else goto c3uzp;
       u3uzD: // global
           call _c3uzo(R1) args: 0, res: 0, upd: 0;
       c3uzp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s3uof_info" {
     sat_s3uof_info:
         const sat_s3uof_entry;
         const 1;
         const 16;
 },
 _c3uzo() //  [R1]
         { []
         }
     {offset
       c3uzo: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c3uzC; else goto c3uzB;
       c3uzC: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c3uzB: // global
           _s3uoe::I64 = I64[R1 + 7] + 1;
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s3uoe::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c3uzo_info" {
     block_c3uzo_info:
         const _c3uzo;
         const 0;
         const 30;
 },
 Text.ParserCombinators.ReadPrec.step1_entry() //  [R2, R3]
         { []
         }
     {offset
       c3uzE: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c3uzI; else goto c3uzH;
       c3uzI: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.step1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c3uzH: // global
           I64[Hp - 16] = sat_s3uof_info;
           P64[Hp] = R3;
           _s3uoa::P64 = R2;
           R2 = Hp - 16;
           R1 = _s3uoa::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.step1_info" {
     Text.ParserCombinators.ReadPrec.step1_info:
         const Text.ParserCombinators.ReadPrec.step1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.547936417 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.step_closure" {
     Text.ParserCombinators.ReadPrec.step_closure:
         const Text.ParserCombinators.ReadPrec.step_info;
 },
 Text.ParserCombinators.ReadPrec.step_entry() //  [R2, R3]
         { []
         }
     {offset
       c3uA5: // global
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.step1_entry(R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.step_info" {
     Text.ParserCombinators.ReadPrec.step_info:
         const Text.ParserCombinators.ReadPrec.step_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.552329967 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.prec1_closure" {
     Text.ParserCombinators.ReadPrec.prec1_closure:
         const Text.ParserCombinators.ReadPrec.prec1_info;
 },
 Text.ParserCombinators.ReadPrec.prec1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c3uAj: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c3uAn; else goto c3uAo;
       c3uAn: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.prec1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c3uAo: // global
           I64[Sp - 24] = block_c3uAg_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u3uAB; else goto c3uAh;
       u3uAB: // global
           call _c3uAg(R1) args: 0, res: 0, upd: 0;
       c3uAh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.prec1_info" {
     Text.ParserCombinators.ReadPrec.prec1_info:
         const Text.ParserCombinators.ReadPrec.prec1_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c3uAg() //  [R1]
         { []
         }
     {offset
       c3uAg: // global
           I64[Sp] = block_c3uAm_info;
           _s3uok::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s3uok::I64;
           if (R1 & 7 != 0) goto u3uAA; else goto c3uAq;
       u3uAA: // global
           call _c3uAm(R1) args: 0, res: 0, upd: 0;
       c3uAq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c3uAg_info" {
     block_c3uAg_info:
         const _c3uAg;
         const 2;
         const 30;
 },
 _c3uAm() //  [R1]
         { []
         }
     {offset
       c3uAm: // global
           if (%MO_S_Gt_W64(I64[Sp + 8],
                            I64[R1 + 7])) goto c3uAy; else goto c3uAz;
       c3uAy: // global
           R1 = Text.ParserCombinators.ReadP.$fAlternativeReadP4_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c3uAz: // global
           R2 = R1;
           R1 = P64[Sp + 16];
           Sp = Sp + 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c3uAm_info" {
     block_c3uAm_info:
         const _c3uAm;
         const 66;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.55935571 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.prec_closure" {
     Text.ParserCombinators.ReadPrec.prec_closure:
         const Text.ParserCombinators.ReadPrec.prec_info;
 },
 Text.ParserCombinators.ReadPrec.prec_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c3uAY: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.prec1_entry(R4,
                                                            R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.prec_info" {
     Text.ParserCombinators.ReadPrec.prec_info:
         const Text.ParserCombinators.ReadPrec.prec_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.566309598 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_closure" {
     Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_closure:
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_info;
         const 0;
 },
 sat_s3uow_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uBj: // global
           _s3uot::P64 = R2;
           _s3uow::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c3uBk; else goto c3uBl;
       c3uBl: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c3uBn; else goto c3uBm;
       c3uBn: // global
           HpAlloc = 32;
           goto c3uBk;
       c3uBk: // global
           R2 = _s3uot::P64;
           R1 = _s3uow::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uBm: // global
           _s3uor::P64 = P64[_s3uow::P64 + 7];
           _s3uos::P64 = P64[_s3uow::P64 + 15];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _s3uos::P64;
           P64[Hp] = _s3uot::P64;
           I64[Sp - 16] = block_c3uBh_info;
           R2 = _s3uot::P64;
           R1 = _s3uor::P64;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3uow_info" {
     sat_s3uow_info:
         const sat_s3uow_entry;
         const 2;
         const 4294967307;
         const 4294967301;
         const S3uBw_srt;
 },
 _c3uBh() //  [R1]
         { []
         }
     {offset
       c3uBh: // global
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 16;
           call Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_entry(R3,
                                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c3uBh_info" {
     block_c3uBh_info:
         const _c3uBh;
         const 1;
         const 4294967326;
         const S3uBw_srt;
 },
 Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_entry() //  [R2,
                                                                     R3, R4]
         { []
         }
     {offset
       c3uBr: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto c3uBv; else goto c3uBu;
       c3uBv: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c3uBu: // global
           I64[Hp - 80] = stg_ap_2_upd_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = sat_s3uow_info;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 48;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_info" {
     Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_info:
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S3uBw_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.574364552 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.+++_closure" {
     Text.ParserCombinators.ReadPrec.+++_closure:
         const Text.ParserCombinators.ReadPrec.+++_info;
         const 0;
 },
 Text.ParserCombinators.ReadPrec.+++_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c3uBV: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_entry(R4,
                                                                             R3,
                                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.+++_info" {
     Text.ParserCombinators.ReadPrec.+++_info:
         const Text.ParserCombinators.ReadPrec.+++_entry;
         const 0;
         const 4294967310;
         const 12884901911;
         const S3uBw_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.577883787 UTC

[section ""data" . lvl_r3tAS_closure" {
     lvl_r3tAS_closure:
         const lvl_r3tAS_info;
 },
 lvl_r3tAS_entry() //  []
         { []
         }
     {offset
       c3uC6: // global
           R1 = Text.ParserCombinators.ReadP.Fail_closure+3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . lvl_r3tAS_info" {
     lvl_r3tAS_info:
         const lvl_r3tAS_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.583706101 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.choice2_closure" {
     Text.ParserCombinators.ReadPrec.choice2_closure:
         const Text.ParserCombinators.ReadPrec.choice2_info;
         const 0;
 },
 ds2_s3uoE_entry() //  [R1]
         { []
         }
     {offset
       c3uCu: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c3uCv; else goto c3uCw;
       c3uCv: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c3uCw: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = P64[R1 + 24];
           Sp = Sp - 16;
           call Text.ParserCombinators.ReadPrec.choice2_entry(R3,
                                                              R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds2_s3uoE_info" {
     ds2_s3uoE_info:
         const ds2_s3uoE_entry;
         const 2;
         const 4294967314;
         const S3uBw_srt+16;
 },
 sat_s3uoI_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uCF: // global
           _s3uoF::P64 = R2;
           _s3uoI::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c3uCG; else goto c3uCH;
       c3uCH: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c3uCJ; else goto c3uCI;
       c3uCJ: // global
           HpAlloc = 32;
           goto c3uCG;
       c3uCG: // global
           R2 = _s3uoF::P64;
           R1 = _s3uoI::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uCI: // global
           _s3uoD::P64 = P64[_s3uoI::P64 + 7];
           _s3uoE::P64 = P64[_s3uoI::P64 + 15];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _s3uoE::P64;
           P64[Hp] = _s3uoF::P64;
           I64[Sp - 16] = block_c3uCD_info;
           R2 = _s3uoF::P64;
           R1 = _s3uoD::P64;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3uoI_info" {
     sat_s3uoI_info:
         const sat_s3uoI_entry;
         const 2;
         const 4294967307;
         const 4294967301;
         const S3uBw_srt;
 },
 _c3uCD() //  [R1]
         { []
         }
     {offset
       c3uCD: // global
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 16;
           call Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_entry(R3,
                                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c3uCD_info" {
     block_c3uCD_info:
         const _c3uCD;
         const 1;
         const 4294967326;
         const S3uBw_srt;
 },
 Text.ParserCombinators.ReadPrec.choice2_entry() //  [R2, R3]
         { []
         }
     {offset
       c3uCR: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c3uCS; else goto c3uCT;
       c3uCS: // global
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.choice2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c3uCT: // global
           I64[Sp - 16] = block_c3uCj_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u3uCZ; else goto c3uCk;
       u3uCZ: // global
           call _c3uCj(R1) args: 0, res: 0, upd: 0;
       c3uCk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.choice2_info" {
     Text.ParserCombinators.ReadPrec.choice2_info:
         const Text.ParserCombinators.ReadPrec.choice2_entry;
         const 0;
         const 21474836494;
         const 8589934607;
         const S3uBw_srt;
 },
 _c3uCj() //  [R1]
         { []
         }
     {offset
       c3uCj: // global
           if (R1 & 7 == 1) goto c3uCO; else goto c3uCP;
       c3uCO: // global
           R1 = lvl_r3tAS_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c3uCP: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto c3uCY; else goto c3uCX;
       c3uCY: // global
           HpAlloc = 88;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c3uCX: // global
           _s3uoB::P64 = P64[R1 + 6];
           _s3uoC::P64 = P64[R1 + 14];
           I64[Hp - 80] = stg_ap_2_upd_info;
           P64[Hp - 64] = _s3uoB::P64;
           _s3uoz::P64 = P64[Sp + 8];
           P64[Hp - 56] = _s3uoz::P64;
           I64[Hp - 48] = ds2_s3uoE_info;
           P64[Hp - 32] = _s3uoz::P64;
           P64[Hp - 24] = _s3uoC::P64;
           I64[Hp - 16] = sat_s3uoI_info;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 48;
           R1 = Hp - 15;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c3uCj_info" {
     block_c3uCj_info:
         const _c3uCj;
         const 1;
         const 21474836510;
         const S3uBw_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.595169435 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.choice1_closure" {
     Text.ParserCombinators.ReadPrec.choice1_closure:
         const Text.ParserCombinators.ReadPrec.choice1_info;
         const 0;
 },
 Text.ParserCombinators.ReadPrec.choice1_entry() //  [R2, R3]
         { []
         }
     {offset
       c3uDC: // global
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.choice2_entry(R3,
                                                              R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.choice1_info" {
     Text.ParserCombinators.ReadPrec.choice1_info:
         const Text.ParserCombinators.ReadPrec.choice1_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S3uBw_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.59883073 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.choice_closure" {
     Text.ParserCombinators.ReadPrec.choice_closure:
         const Text.ParserCombinators.ReadPrec.choice_info;
         const 0;
 },
 Text.ParserCombinators.ReadPrec.choice_entry() //  [R2, R3]
         { []
         }
     {offset
       c3uDN: // global
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.choice1_entry(R3,
                                                              R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.choice_info" {
     Text.ParserCombinators.ReadPrec.choice_info:
         const Text.ParserCombinators.ReadPrec.choice_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S3uBw_srt+24;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.606202329 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec2_closure" {
     Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec2_closure:
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec2_info;
         const 0;
 },
 sat_s3uoX_entry() //  [R1]
         { []
         }
     {offset
       c3uEj: // global
           _s3uoX::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c3uEk; else goto c3uEl;
       c3uEl: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c3uEn; else goto c3uEm;
       c3uEn: // global
           HpAlloc = 24;
           goto c3uEk;
       c3uEk: // global
           R1 = _s3uoX::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c3uEm: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s3uoX::P64;
           _s3uoQ::P64 = P64[_s3uoX::P64 + 16];
           _s3uoR::P64 = P64[_s3uoX::P64 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s3uoR::P64;
           P64[Hp] = GHC.Types.[]_closure+1;
           R2 = Hp - 14;
           R1 = _s3uoQ::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s3uoX_info" {
     sat_s3uoX_info:
         const sat_s3uoX_entry;
         const 2;
         const 18;
 },
 sat_s3uoU_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uEu: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c3uEy; else goto c3uEx;
       c3uEy: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uEx: // global
           _s3uoQ::P64 = P64[R1 + 7];
           _s3uoR::P64 = P64[R1 + 15];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s3uoR::P64;
           P64[Hp] = R2;
           R2 = Hp - 14;
           R1 = _s3uoQ::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3uoU_info" {
     sat_s3uoU_info:
         const sat_s3uoU_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_s3uoY_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uEB: // global
           _s3uoR::P64 = R2;
           _s3uoY::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c3uEC; else goto c3uED;
       c3uED: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c3uEF; else goto c3uEE;
       c3uEF: // global
           HpAlloc = 56;
           goto c3uEC;
       c3uEC: // global
           R2 = _s3uoR::P64;
           R1 = _s3uoY::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uEE: // global
           _s3uoN::P64 = P64[_s3uoY::P64 + 7];
           _s3uoO::P64 = P64[_s3uoY::P64 + 15];
           _s3uoQ::P64 = P64[_s3uoY::P64 + 23];
           I64[Hp - 48] = sat_s3uoX_info;
           P64[Hp - 32] = _s3uoQ::P64;
           P64[Hp - 24] = _s3uoR::P64;
           I64[Hp - 16] = sat_s3uoU_info;
           P64[Hp - 8] = _s3uoQ::P64;
           P64[Hp] = _s3uoR::P64;
           I64[Sp - 16] = block_c3uEz_info;
           R2 = _s3uoO::P64;
           R1 = _s3uoN::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 15;
           P64[Sp - 8] = Hp - 48;
           Sp = Sp - 32;
           call some_v_s3uoN_entry(R2, R1) args: 24, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3uoY_info" {
     sat_s3uoY_info:
         const sat_s3uoY_entry;
         const 3;
         const 4294967304;
         const 4294967301;
         const S3uBw_srt;
 },
 _c3uEz() //  [R1]
         { []
         }
     {offset
       c3uEz: // global
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 16;
           call Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_entry(R3,
                                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c3uEz_info" {
     block_c3uEz_info:
         const _c3uEz;
         const 1;
         const 4294967326;
         const S3uBw_srt;
 },
 sat_s3uoZ_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uEJ: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c3uEN; else goto c3uEM;
       c3uEN: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uEM: // global
           _s3uoN::P64 = P64[R1 + 7];
           _s3uoO::P64 = P64[R1 + 15];
           _s3uoP::P64 = P64[R1 + 23];
           I64[Hp - 24] = sat_s3uoY_info;
           P64[Hp - 16] = _s3uoN::P64;
           P64[Hp - 8] = _s3uoO::P64;
           P64[Hp] = R2;
           R2 = Hp - 23;
           R1 = _s3uoP::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3uoZ_info" {
     sat_s3uoZ_info:
         const sat_s3uoZ_entry;
         const 3;
         const 4294967304;
         const 4294967301;
         const S3uBw_srt;
 },
 some_v_s3uoN_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uEO: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c3uES; else goto c3uER;
       c3uES: // global
           HpAlloc = 64;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uER: // global
           _s3uoL::P64 = P64[R1 + 7];
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = _s3uoL::P64;
           P64[Hp - 32] = R2;
           I64[Hp - 24] = sat_s3uoZ_info;
           P64[Hp - 16] = R1;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 56;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . some_v_s3uoN_info" {
     some_v_s3uoN_info:
         const some_v_s3uoN_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S3uBw_srt;
 },
 Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec2_entry() //  [R2,
                                                                     R3]
         { []
         }
     {offset
       c3uET: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c3uEX; else goto c3uEW;
       c3uEX: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c3uEW: // global
           I64[Hp - 8] = some_v_s3uoN_info;
           P64[Hp] = R2;
           R2 = R3;
           R1 = Hp - 7;
           call some_v_s3uoN_entry(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec2_info" {
     Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec2_info:
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec2_entry;
         const 0;
         const 73014444046;
         const 8589934607;
         const S3uBw_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.625114299 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec1_closure" {
     Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec1_closure:
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec1_info;
         const 0;
 },
 sat_s3upc_entry() //  [R1]
         { []
         }
     {offset
       c3uFW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c3uFX; else goto c3uFY;
       c3uFX: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c3uFY: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = GHC.Types.[]_closure+1;
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s3upc_info" {
     sat_s3upc_info:
         const sat_s3upc_entry;
         const 1;
         const 16;
 },
 sat_s3up9_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uGa: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c3uGe; else goto c3uGd;
       c3uGe: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uGd: // global
           _s3up5::P64 = P64[R1 + 7];
           _s3up6::P64 = P64[R1 + 15];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s3up6::P64;
           P64[Hp] = R2;
           R2 = Hp - 14;
           R1 = _s3up5::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3up9_info" {
     sat_s3up9_info:
         const sat_s3up9_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_s3upa_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uGf: // global
           _s3up6::P64 = R2;
           _s3upa::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c3uGg; else goto c3uGh;
       c3uGh: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c3uGj; else goto c3uGi;
       c3uGj: // global
           HpAlloc = 24;
           goto c3uGg;
       c3uGg: // global
           R2 = _s3up6::P64;
           R1 = _s3upa::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uGi: // global
           _s3up2::P64 = P64[_s3upa::P64 + 7];
           _s3up3::P64 = P64[_s3upa::P64 + 15];
           _s3up5::P64 = P64[_s3upa::P64 + 23];
           I64[Hp - 16] = sat_s3up9_info;
           P64[Hp - 8] = _s3up5::P64;
           P64[Hp] = _s3up6::P64;
           R2 = _s3up3::P64;
           R1 = _s3up2::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 15;
           Sp = Sp - 16;
           call many_v_s3up2_entry(R2, R1) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3upa_info" {
     sat_s3upa_info:
         const sat_s3upa_entry;
         const 3;
         const 4294967304;
         const 4294967301;
         const S3uBw_srt;
 },
 sat_s3upd_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uGm: // global
           _s3up5::P64 = R2;
           _s3upd::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c3uGn; else goto c3uGo;
       c3uGo: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c3uGq; else goto c3uGp;
       c3uGq: // global
           HpAlloc = 56;
           goto c3uGn;
       c3uGn: // global
           R2 = _s3up5::P64;
           R1 = _s3upd::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uGp: // global
           _s3up2::P64 = P64[_s3upd::P64 + 7];
           _s3up3::P64 = P64[_s3upd::P64 + 15];
           _s3up4::P64 = P64[_s3upd::P64 + 23];
           I64[Hp - 48] = sat_s3upc_info;
           P64[Hp - 32] = _s3up5::P64;
           I64[Hp - 24] = sat_s3upa_info;
           P64[Hp - 16] = _s3up2::P64;
           P64[Hp - 8] = _s3up3::P64;
           P64[Hp] = _s3up5::P64;
           I64[Sp - 16] = block_c3uGk_info;
           R2 = Hp - 23;
           R1 = _s3up4::P64;
           P64[Sp - 8] = Hp - 48;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3upd_info" {
     sat_s3upd_info:
         const sat_s3upd_entry;
         const 3;
         const 4294967304;
         const 4294967301;
         const S3uBw_srt;
 },
 _c3uGk() //  [R1]
         { []
         }
     {offset
       c3uGk: // global
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 16;
           call Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_entry(R3,
                                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c3uGk_info" {
     block_c3uGk_info:
         const _c3uGk;
         const 1;
         const 4294967326;
         const S3uBw_srt;
 },
 many_v_s3up2_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uGu: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c3uGy; else goto c3uGx;
       c3uGy: // global
           HpAlloc = 64;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uGx: // global
           _s3up0::P64 = P64[R1 + 7];
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = _s3up0::P64;
           P64[Hp - 32] = R2;
           I64[Hp - 24] = sat_s3upd_info;
           P64[Hp - 16] = R1;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 56;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . many_v_s3up2_info" {
     many_v_s3up2_info:
         const many_v_s3up2_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S3uBw_srt;
 },
 Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec1_entry() //  [R2,
                                                                     R3]
         { []
         }
     {offset
       c3uGz: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c3uGD; else goto c3uGC;
       c3uGD: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c3uGC: // global
           I64[Hp - 8] = many_v_s3up2_info;
           P64[Hp] = R2;
           R2 = R3;
           R1 = Hp - 7;
           call many_v_s3up2_entry(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec1_info" {
     Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec1_info:
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec1_entry;
         const 0;
         const 141733920782;
         const 8589934607;
         const S3uBw_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.639559778 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec_closure" {
     Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec_closure:
         const GHC.Base.C:Alternative_con_info;
         const Text.ParserCombinators.ReadPrec.$fApplicativeReadPrec_closure+1;
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec4_closure+2;
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_closure+3;
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec2_closure+2;
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec1_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.641584897 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$fMonadPlusReadPrec_closure" {
     Text.ParserCombinators.ReadPrec.$fMonadPlusReadPrec_closure:
         const GHC.Base.C:MonadPlus_con_info;
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec_closure+1;
         const Text.ParserCombinators.ReadPrec.$fMonadReadPrec_closure+1;
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec4_closure+2;
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_closure+3;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.645048714 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.<++1_closure" {
     Text.ParserCombinators.ReadPrec.<++1_closure:
         const Text.ParserCombinators.ReadPrec.<++1_info;
         const 0;
 },
 sat_s3upm_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uHy: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c3uHz; else goto c3uHA;
       c3uHz: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uHA: // global
           I64[Sp - 8] = block_c3uHv_info;
           R4 = R2;
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp - 8;
           call Text.ParserCombinators.ReadP.$w<++_entry(R4,
                                                         R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3upm_info" {
     sat_s3upm_info:
         const sat_s3upm_entry;
         const 2;
         const 4294967307;
         const 4294967301;
         const S3uBw_srt+48;
 },
 _c3uHv() //  [R1]
         { []
         }
     {offset
       c3uHv: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c3uHD; else goto c3uHC;
       c3uHD: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c3uHC: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c3uHv_info" {
     block_c3uHv_info:
         const _c3uHv;
         const 0;
         const 30;
 },
 Text.ParserCombinators.ReadPrec.<++1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c3uHE: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto c3uHI; else goto c3uHH;
       c3uHI: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.<++1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c3uHH: // global
           I64[Hp - 80] = stg_ap_2_upd_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = sat_s3upm_info;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 48;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.<++1_info" {
     Text.ParserCombinators.ReadPrec.<++1_info:
         const Text.ParserCombinators.ReadPrec.<++1_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S3uBw_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.653318098 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.<++_closure" {
     Text.ParserCombinators.ReadPrec.<++_closure:
         const Text.ParserCombinators.ReadPrec.<++_info;
         const 0;
 },
 Text.ParserCombinators.ReadPrec.<++_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c3uI7: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.<++1_entry(R4,
                                                           R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.<++_info" {
     Text.ParserCombinators.ReadPrec.<++_info:
         const Text.ParserCombinators.ReadPrec.<++_entry;
         const 0;
         const 4294967310;
         const 12884901911;
         const S3uBw_srt+56;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.657121049 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.readPrec_to_P1_closure" {
     Text.ParserCombinators.ReadPrec.readPrec_to_P1_closure:
         const Text.ParserCombinators.ReadPrec.readPrec_to_P1_info;
 },
 Text.ParserCombinators.ReadPrec.readPrec_to_P1_entry() //  [R2]
         { []
         }
     {offset
       c3uIi: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.readPrec_to_P1_info" {
     Text.ParserCombinators.ReadPrec.readPrec_to_P1_info:
         const Text.ParserCombinators.ReadPrec.readPrec_to_P1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.660679372 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.readPrec_to_P_closure" {
     Text.ParserCombinators.ReadPrec.readPrec_to_P_closure:
         const Text.ParserCombinators.ReadPrec.readPrec_to_P_info;
 },
 Text.ParserCombinators.ReadPrec.readPrec_to_P_entry() //  [R2]
         { []
         }
     {offset
       c3uIt: // global
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.readPrec_to_P1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.readPrec_to_P_info" {
     Text.ParserCombinators.ReadPrec.readPrec_to_P_info:
         const Text.ParserCombinators.ReadPrec.readPrec_to_P_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.664568925 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.readP_to_Prec1_closure" {
     Text.ParserCombinators.ReadPrec.readP_to_Prec1_closure:
         const Text.ParserCombinators.ReadPrec.readP_to_Prec1_info;
 },
 Text.ParserCombinators.ReadPrec.readP_to_Prec1_entry() //  [R2]
         { []
         }
     {offset
       c3uIE: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.readP_to_Prec1_info" {
     Text.ParserCombinators.ReadPrec.readP_to_Prec1_info:
         const Text.ParserCombinators.ReadPrec.readP_to_Prec1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.668217257 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.readP_to_Prec_closure" {
     Text.ParserCombinators.ReadPrec.readP_to_Prec_closure:
         const Text.ParserCombinators.ReadPrec.readP_to_Prec_info;
 },
 Text.ParserCombinators.ReadPrec.readP_to_Prec_entry() //  [R2]
         { []
         }
     {offset
       c3uIP: // global
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.readP_to_Prec1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.readP_to_Prec_info" {
     Text.ParserCombinators.ReadPrec.readP_to_Prec_info:
         const Text.ParserCombinators.ReadPrec.readP_to_Prec_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.672548494 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.readPrec_to_S_closure" {
     Text.ParserCombinators.ReadPrec.readPrec_to_S_closure:
         const Text.ParserCombinators.ReadPrec.readPrec_to_S_info;
 },
 sat_s3upr_entry() //  [R1]
         { []
         }
     {offset
       c3uJ4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c3uJ5; else goto c3uJ6;
       c3uJ5: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c3uJ6: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           R2 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call stg_ap_pp_fast(R3, R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s3upr_info" {
     sat_s3upr_info:
         const sat_s3upr_entry;
         const 2;
         const 18;
 },
 Text.ParserCombinators.ReadPrec.readPrec_to_S_entry() //  [R2, R3]
         { []
         }
     {offset
       c3uJ7: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c3uJb; else goto c3uJa;
       c3uJb: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.readPrec_to_S_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c3uJa: // global
           I64[Hp - 24] = sat_s3upr_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R2 = Hp - 24;
           R1 = Text.ParserCombinators.ReadP.run_closure+2;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.readPrec_to_S_info" {
     Text.ParserCombinators.ReadPrec.readPrec_to_S_info:
         const Text.ParserCombinators.ReadPrec.readPrec_to_S_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.679488362 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.readS_to_Prec1_closure" {
     Text.ParserCombinators.ReadPrec.readS_to_Prec1_closure:
         const Text.ParserCombinators.ReadPrec.readS_to_Prec1_info;
 },
 sat_s3upy_entry() //  [R1, R2]
         { []
         }
     {offset
       c3uJB: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c3uJC; else goto c3uJD;
       c3uJC: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c3uJD: // global
           I64[Sp - 8] = block_c3uJy_info;
           R3 = R2;
           R2 = P64[R1 + 7];
           Sp = Sp - 8;
           call Text.ParserCombinators.ReadP.$wreadS_to_P_entry(R3,
                                                                R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s3upy_info" {
     sat_s3upy_info:
         const sat_s3upy_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c3uJy() //  [R1]
         { []
         }
     {offset
       c3uJy: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c3uJG; else goto c3uJF;
       c3uJG: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c3uJF: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c3uJy_info" {
     block_c3uJy_info:
         const _c3uJy;
         const 0;
         const 30;
 },
 Text.ParserCombinators.ReadPrec.readS_to_Prec1_entry() //  [R2, R3]
         { []
         }
     {offset
       c3uJH: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c3uJL; else goto c3uJK;
       c3uJL: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Text.ParserCombinators.ReadPrec.readS_to_Prec1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c3uJK: // global
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = R3;
           I64[Hp - 8] = sat_s3upy_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.readS_to_Prec1_info" {
     Text.ParserCombinators.ReadPrec.readS_to_Prec1_info:
         const Text.ParserCombinators.ReadPrec.readS_to_Prec1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.686988728 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.readS_to_Prec_closure" {
     Text.ParserCombinators.ReadPrec.readS_to_Prec_closure:
         const Text.ParserCombinators.ReadPrec.readS_to_Prec_info;
 },
 Text.ParserCombinators.ReadPrec.readS_to_Prec_entry() //  [R2, R3]
         { []
         }
     {offset
       c3uK8: // global
           R3 = R3;
           R2 = R2;
           call Text.ParserCombinators.ReadPrec.readS_to_Prec1_entry(R3,
                                                                     R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.ParserCombinators.ReadPrec.readS_to_Prec_info" {
     Text.ParserCombinators.ReadPrec.readS_to_Prec_info:
         const Text.ParserCombinators.ReadPrec.readS_to_Prec_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.690329368 UTC

[section ""cstring" . Text.ParserCombinators.ReadPrec.$trModule4_bytes" {
     Text.ParserCombinators.ReadPrec.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.692020613 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$trModule3_closure" {
     Text.ParserCombinators.ReadPrec.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Text.ParserCombinators.ReadPrec.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.6938674 UTC

[section ""cstring" . Text.ParserCombinators.ReadPrec.$trModule2_bytes" {
     Text.ParserCombinators.ReadPrec.$trModule2_bytes:
         I8[] [84,101,120,116,46,80,97,114,115,101,114,67,111,109,98,105,110,97,116,111,114,115,46,82,101,97,100,80,114,101,99]
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.69565511 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$trModule1_closure" {
     Text.ParserCombinators.ReadPrec.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Text.ParserCombinators.ReadPrec.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.697517507 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$trModule_closure" {
     Text.ParserCombinators.ReadPrec.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Text.ParserCombinators.ReadPrec.$trModule3_closure+1;
         const Text.ParserCombinators.ReadPrec.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.699408107 UTC

[section ""data" . $krep_r3tAT_closure" {
     $krep_r3tAT_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcInt_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.701294163 UTC

[section ""data" . $krep1_r3tAU_closure" {
     $krep1_r3tAU_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.703208755 UTC

[section ""data" . $krep2_r3tAV_closure" {
     $krep2_r3tAV_closure:
         const :_con_info;
         const $krep1_r3tAU_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.705057465 UTC

[section ""data" . $krep3_r3tAW_closure" {
     $krep3_r3tAW_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Text.ParserCombinators.ReadP.$tcReadP_closure;
         const $krep2_r3tAV_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.707365529 UTC

[section ""data" . $krep4_r3tAX_closure" {
     $krep4_r3tAX_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r3tAT_closure+1;
         const $krep3_r3tAW_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.709215155 UTC

[section ""cstring" . Text.ParserCombinators.ReadPrec.$tcReadPrec2_bytes" {
     Text.ParserCombinators.ReadPrec.$tcReadPrec2_bytes:
         I8[] [82,101,97,100,80,114,101,99]
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.710970639 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$tcReadPrec1_closure" {
     Text.ParserCombinators.ReadPrec.$tcReadPrec1_closure:
         const GHC.Types.TrNameS_con_info;
         const Text.ParserCombinators.ReadPrec.$tcReadPrec2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.712879045 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$tcReadPrec_closure" {
     Text.ParserCombinators.ReadPrec.$tcReadPrec_closure:
         const GHC.Types.TyCon_con_info;
         const Text.ParserCombinators.ReadPrec.$trModule_closure+1;
         const Text.ParserCombinators.ReadPrec.$tcReadPrec1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 17656447446138014199;
         const 97878223355588575;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.714765767 UTC

[section ""data" . $krep5_r3tAY_closure" {
     $krep5_r3tAY_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Text.ParserCombinators.ReadPrec.$tcReadPrec_closure+1;
         const $krep2_r3tAV_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.716681847 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$tc'P1_closure" {
     Text.ParserCombinators.ReadPrec.$tc'P1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r3tAX_closure+4;
         const $krep5_r3tAY_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.718621968 UTC

[section ""cstring" . Text.ParserCombinators.ReadPrec.$tc'P3_bytes" {
     Text.ParserCombinators.ReadPrec.$tc'P3_bytes:
         I8[] [39,80]
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.720452955 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$tc'P2_closure" {
     Text.ParserCombinators.ReadPrec.$tc'P2_closure:
         const GHC.Types.TrNameS_con_info;
         const Text.ParserCombinators.ReadPrec.$tc'P3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.723068559 UTC

[section ""data" . Text.ParserCombinators.ReadPrec.$tc'P_closure" {
     Text.ParserCombinators.ReadPrec.$tc'P_closure:
         const GHC.Types.TyCon_con_info;
         const Text.ParserCombinators.ReadPrec.$trModule_closure+1;
         const Text.ParserCombinators.ReadPrec.$tc'P2_closure+1;
         const Text.ParserCombinators.ReadPrec.$tc'P1_closure+4;
         const 14970691021354513070;
         const 16104245447600145137;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:58:08.725182653 UTC

[section ""relreadonly" . S3uBw_srt" {
     S3uBw_srt:
         const Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_closure;
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec3_closure;
         const Text.ParserCombinators.ReadPrec.choice2_closure;
         const Text.ParserCombinators.ReadPrec.choice1_closure;
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec2_closure;
         const Text.ParserCombinators.ReadPrec.$fAlternativeReadPrec1_closure;
         const Text.ParserCombinators.ReadP.$w<++_closure;
         const Text.ParserCombinators.ReadPrec.<++1_closure;
 }]

