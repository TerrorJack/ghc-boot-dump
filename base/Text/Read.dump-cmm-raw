
==================== Raw Cmm ====================
2018-03-16 16:00:16.869326778 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:00:16.871682691 UTC

[section ""data" . Text.Read.reads_closure" {
     Text.Read.reads_closure:
         const Text.Read.reads_info;
 },
 Text.Read.reads_entry() //  [R2]
         { []
         }
     {offset
       c5huc: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5hud; else goto c5hue;
       c5hud: // global
           R2 = R2;
           R1 = Text.Read.reads_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5hue: // global
           R2 = R2;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Text.ParserCombinators.ReadPrec.minPrec_closure;
           Sp = Sp - 16;
           call GHC.Read.readsPrec_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.Read.reads_info" {
     Text.Read.reads_info:
         const Text.Read.reads_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.87548695 UTC

[section ""cstring" . Text.Read.readEither6_bytes" {
     Text.Read.readEither6_bytes:
         I8[] [80,114,101,108,117,100,101,46,114,101,97,100,58,32,110,111,32,112,97,114,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.878098961 UTC

[section ""data" . Text.Read.readEither5_closure" {
     Text.Read.readEither5_closure:
         const Text.Read.readEither5_info;
         const 0;
         const 0;
         const 0;
 },
 Text.Read.readEither5_entry() //  [R1]
         { []
         }
     {offset
       c5hur: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5hus; else goto c5hut;
       c5hus: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5hut: // global
           (_c5huo::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5huo::I64 == 0) goto c5huq; else goto c5hup;
       c5huq: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5hup: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5huo::I64;
           R2 = Text.Read.readEither6_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Text.Read.readEither5_info" {
     Text.Read.readEither5_info:
         const Text.Read.readEither5_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.882500652 UTC

[section ""data" . Text.Read.readEither4_closure" {
     Text.Read.readEither4_closure:
         const Data.Either.Left_con_info;
         const Text.Read.readEither5_closure;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.88423306 UTC

[section ""cstring" . Text.Read.readEither3_bytes" {
     Text.Read.readEither3_bytes:
         I8[] [80,114,101,108,117,100,101,46,114,101,97,100,58,32,97,109,98,105,103,117,111,117,115,32,112,97,114,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.886725677 UTC

[section ""data" . Text.Read.readEither2_closure" {
     Text.Read.readEither2_closure:
         const Text.Read.readEither2_info;
         const 0;
         const 0;
         const 0;
 },
 Text.Read.readEither2_entry() //  [R1]
         { []
         }
     {offset
       c5huJ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5huK; else goto c5huL;
       c5huK: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5huL: // global
           (_c5huG::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5huG::I64 == 0) goto c5huI; else goto c5huH;
       c5huI: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5huH: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5huG::I64;
           R2 = Text.Read.readEither3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Text.Read.readEither2_info" {
     Text.Read.readEither2_info:
         const Text.Read.readEither2_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.890457817 UTC

[section ""data" . Text.Read.readEither1_closure" {
     Text.Read.readEither1_closure:
         const Data.Either.Left_con_info;
         const Text.Read.readEither2_closure;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.893518956 UTC

[section ""data" . Text.Read.readEither7_closure" {
     Text.Read.readEither7_closure:
         const Text.Read.readEither7_info;
 },
 k_s5hng_entry() //  [R1]
         { []
         }
     {offset
       c5hv4: // global
           R1 = P64[R1 + 7];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . k_s5hng_info" {
     k_s5hng_info:
         const k_s5hng_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_s5hnj_entry() //  [R1, R2]
         { []
         }
     {offset
       c5hvc: // global
           R3 = P64[R1 + 7];
           R2 = R2;
           call Text.ParserCombinators.ReadP.skipSpaces2_entry(R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5hnj_info" {
     sat_s5hnj_info:
         const sat_s5hnj_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Text.Read.readEither7_entry() //  [R2]
         { []
         }
     {offset
       c5hvg: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c5hvk; else goto c5hvj;
       c5hvk: // global
           HpAlloc = 72;
           R2 = R2;
           R1 = Text.Read.readEither7_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5hvj: // global
           I64[Hp - 64] = Text.ParserCombinators.ReadP.Result_con_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = Text.ParserCombinators.ReadP.Fail_closure+3;
           I64[Hp - 40] = k_s5hng_info;
           P64[Hp - 32] = Hp - 60;
           I64[Hp - 24] = sat_s5hnj_info;
           P64[Hp - 16] = Hp - 39;
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 6;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.Read.readEither7_info" {
     Text.Read.readEither7_info:
         const Text.Read.readEither7_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.903437555 UTC

[section ""data" . Text.Read.readEither8_closure" {
     Text.Read.readEither8_closure:
         const Text.Read.readEither8_info;
 },
 sat_s5hns_entry() //  [R1]
         { []
         }
     {offset
       c5hvY: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5hvZ; else goto c5hw0;
       c5hvZ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5hw0: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Text.Read.readEither8_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5hns_info" {
     sat_s5hns_info:
         const sat_s5hns_entry;
         const 1;
         const 16;
 },
 Text.Read.readEither8_entry() //  [R2]
         { []
         }
     {offset
       c5hw5: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5hw6; else goto u5hwn;
       c5hw6: // global
           R2 = R2;
           R1 = Text.Read.readEither8_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       u5hwn: // global
           P64[Sp - 8] = R2;
           Sp = Sp - 8;
           call _c5hvB() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Text.Read.readEither8_info" {
     Text.Read.readEither8_info:
         const Text.Read.readEither8_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5hvB() //  []
         { []
         }
     {offset
       c5hvB: // global
           _s5hnk::P64 = P64[Sp];
           I64[Sp] = block_c5hvE_info;
           R1 = _s5hnk::P64;
           if (R1 & 7 != 0) goto u5hwp; else goto c5hvF;
       u5hwp: // global
           call _c5hvE(R1) args: 0, res: 0, upd: 0;
       c5hvF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5hvE() //  [R1]
         { []
         }
     {offset
       c5hvE: // global
           if (R1 & 7 == 1) goto c5hw2; else goto c5hw3;
       c5hw2: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5hw3: // global
           I64[Sp - 8] = block_c5hvK_info;
           _s5hnn::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5hnn::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5hwq; else goto c5hvL;
       u5hwq: // global
           call _c5hvK(R1) args: 0, res: 0, upd: 0;
       c5hvL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5hvE_info" {
     block_c5hvE_info:
         const _c5hvE;
         const 0;
         const 30;
 },
 _c5hvK() //  [R1]
         { []
         }
     {offset
       c5hvK: // global
           I64[Sp - 8] = block_c5hvP_info;
           _s5hnp::P64 = P64[R1 + 7];
           R1 = P64[R1 + 15];
           P64[Sp] = _s5hnp::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5hwr; else goto c5hvQ;
       u5hwr: // global
           call _c5hvP(R1) args: 0, res: 0, upd: 0;
       c5hvQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5hvK_info" {
     block_c5hvK_info:
         const _c5hvK;
         const 1;
         const 30;
 },
 _c5hvP() //  [R1]
         { []
         }
     {offset
       c5hvP: // global
           _s5hnn::P64 = P64[Sp + 16];
           if (R1 & 7 == 1) goto c5hwe; else goto c5hwl;
       c5hwe: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5hwh; else goto c5hwg;
       c5hwh: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5hwg: // global
           I64[Hp - 40] = sat_s5hns_info;
           P64[Hp - 24] = _s5hnn::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5hwl: // global
           P64[Sp + 16] = _s5hnn::P64;
           Sp = Sp + 16;
           call _c5hvB() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5hvP_info" {
     block_c5hvP_info:
         const _c5hvP;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.916612689 UTC

[section ""data" . Text.Read.readEither_closure" {
     Text.Read.readEither_closure:
         const Text.Read.readEither_info;
         const 0;
 },
 Text.Read.readEither_entry() //  [R2, R3]
         { []
         }
     {offset
       c5hx5: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5hx9; else goto c5hxa;
       c5hx9: // global
           R3 = R3;
           R2 = R2;
           R1 = Text.Read.readEither_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5hxa: // global
           I64[Sp - 16] = block_c5hx3_info;
           R2 = R2;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Text.ParserCombinators.ReadPrec.minPrec_closure;
           P64[Sp - 24] = Text.Read.readEither7_closure+1;
           P64[Sp - 8] = R3;
           Sp = Sp - 40;
           call GHC.Read.readPrec_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Text.Read.readEither_info" {
     Text.Read.readEither_info:
         const Text.Read.readEither_entry;
         const 0;
         const 30064771086;
         const 8589934607;
         const S5hqj_srt;
 },
 _c5hx3() //  [R1]
         { []
         }
     {offset
       c5hx3: // global
           _s5hnw::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5hx8_info;
           R3 = _s5hnw::P64;
           R2 = R1;
           Sp = Sp + 8;
           call Text.ParserCombinators.ReadP.run_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5hx3_info" {
     block_c5hx3_info:
         const _c5hx3;
         const 1;
         const 12884901918;
         const S5hqj_srt+8;
 },
 _c5hx8() //  [R1]
         { []
         }
     {offset
       c5hx8: // global
           I64[Sp] = block_c5hxf_info;
           R2 = R1;
           call Text.Read.readEither8_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5hx8_info" {
     block_c5hx8_info:
         const _c5hx8;
         const 0;
         const 12884901918;
         const S5hqj_srt+8;
 },
 _c5hxf() //  [R1]
         { []
         }
     {offset
       c5hxf: // global
           if (R1 & 7 == 1) goto c5hxm; else goto c5hxr;
       c5hxm: // global
           R1 = Text.Read.readEither4_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5hxr: // global
           I64[Sp - 8] = block_c5hxp_info;
           _s5hnA::P64 = P64[R1 + 6];
           R1 = P64[R1 + 14];
           P64[Sp] = _s5hnA::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5hxI; else goto c5hxs;
       u5hxI: // global
           call _c5hxp(R1) args: 0, res: 0, upd: 0;
       c5hxs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5hxf_info" {
     block_c5hxf_info:
         const _c5hxf;
         const 0;
         const 12884901918;
         const S5hqj_srt+8;
 },
 _c5hxp() //  [R1]
         { []
         }
     {offset
       c5hxp: // global
           if (R1 & 7 == 1) goto c5hxy; else goto c5hxF;
       c5hxy: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5hxB; else goto c5hxA;
       c5hxB: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5hxA: // global
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5hxF: // global
           R1 = Text.Read.readEither1_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5hxp_info" {
     block_c5hxp_info:
         const _c5hxp;
         const 1;
         const 4294967326;
         const S5hqj_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.928740628 UTC

[section ""data" . Text.Read.readMaybe_closure" {
     Text.Read.readMaybe_closure:
         const Text.Read.readMaybe_info;
         const 0;
 },
 Text.Read.readMaybe_entry() //  [R2, R3]
         { []
         }
     {offset
       c5hyj: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5hyk; else goto c5hyl;
       c5hyk: // global
           R3 = R3;
           R2 = R2;
           R1 = Text.Read.readMaybe_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5hyl: // global
           I64[Sp - 8] = block_c5hyd_info;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Text.Read.readEither_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Text.Read.readMaybe_info" {
     Text.Read.readMaybe_info:
         const Text.Read.readMaybe_entry;
         const 0;
         const 38654705678;
         const 8589934607;
         const S5hqj_srt;
 },
 _c5hyd() //  [R1]
         { []
         }
     {offset
       c5hyd: // global
           if (R1 & 7 == 1) goto c5hyg; else goto c5hyh;
       c5hyg: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5hyh: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5hyu; else goto c5hyt;
       c5hyu: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5hyt: // global
           _s5hnJ::P64 = P64[R1 + 6];
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = _s5hnJ::P64;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5hyd_info" {
     block_c5hyd_info:
         const _c5hyd;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.935248185 UTC

[section ""data" . Text.Read.read_closure" {
     Text.Read.read_closure:
         const Text.Read.read_info;
         const 0;
 },
 Text.Read.read_entry() //  [R2, R3]
         { []
         }
     {offset
       c5hyR: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5hyS; else goto c5hyT;
       c5hyS: // global
           R3 = R3;
           R2 = R2;
           R1 = Text.Read.read_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5hyT: // global
           I64[Sp - 8] = block_c5hyL_info;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Text.Read.readEither_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Text.Read.read_info" {
     Text.Read.read_info:
         const Text.Read.read_entry;
         const 0;
         const 210453397518;
         const 8589934607;
         const S5hqj_srt;
 },
 _c5hyL() //  [R1]
         { []
         }
     {offset
       c5hyL: // global
           if (R1 & 7 == 1) goto c5hyO; else goto c5hyP;
       c5hyO: // global
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 8, res: 0, upd: 8;
       c5hyP: // global
           R1 = P64[R1 + 6];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5hyL_info" {
     block_c5hyL_info:
         const _c5hyL;
         const 0;
         const 4294967326;
         const S5hqj_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.941021363 UTC

[section ""cstring" . Text.Read.$trModule4_bytes" {
     Text.Read.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.9427819 UTC

[section ""data" . Text.Read.$trModule3_closure" {
     Text.Read.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Text.Read.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.944537609 UTC

[section ""cstring" . Text.Read.$trModule2_bytes" {
     Text.Read.$trModule2_bytes:
         I8[] [84,101,120,116,46,82,101,97,100]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.946955736 UTC

[section ""data" . Text.Read.$trModule1_closure" {
     Text.Read.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Text.Read.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.948587929 UTC

[section ""data" . Text.Read.$trModule_closure" {
     Text.Read.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Text.Read.$trModule3_closure+1;
         const Text.Read.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.950435471 UTC

[section ""relreadonly" . S5hqj_srt" {
     S5hqj_srt:
         const Text.Read.readEither_closure;
         const Text.Read.readEither1_closure;
         const Text.Read.readEither4_closure;
         const Text.Read.readMaybe_closure;
         const GHC.Err.errorWithoutStackTrace_closure;
         const Text.Read.read_closure;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:17.105815571 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:00:17.109206364 UTC

[section ""data" . Text.Read.reads_closure" {
     Text.Read.reads_closure:
         const Text.Read.reads_info;
 },
 Text.Read.reads_entry() //  [R2]
         { []
         }
     {offset
       c5hzW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5hzX; else goto c5hzY;
       c5hzX: // global
           R2 = R2;
           R1 = Text.Read.reads_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5hzY: // global
           R2 = R2;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Text.ParserCombinators.ReadPrec.minPrec_closure;
           Sp = Sp - 16;
           call GHC.Read.readsPrec_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.Read.reads_info" {
     Text.Read.reads_info:
         const Text.Read.reads_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:17.116338842 UTC

[section ""cstring" . Text.Read.readEither6_bytes" {
     Text.Read.readEither6_bytes:
         I8[] [80,114,101,108,117,100,101,46,114,101,97,100,58,32,110,111,32,112,97,114,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:17.120018145 UTC

[section ""data" . Text.Read.readEither5_closure" {
     Text.Read.readEither5_closure:
         const Text.Read.readEither5_info;
         const 0;
         const 0;
         const 0;
 },
 Text.Read.readEither5_entry() //  [R1]
         { []
         }
     {offset
       c5hAd: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5hAe; else goto c5hAf;
       c5hAe: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5hAf: // global
           (_c5hAa::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5hAa::I64 == 0) goto c5hAc; else goto c5hAb;
       c5hAc: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5hAb: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5hAa::I64;
           R2 = Text.Read.readEither6_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Text.Read.readEither5_info" {
     Text.Read.readEither5_info:
         const Text.Read.readEither5_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:17.125565496 UTC

[section ""data" . Text.Read.readEither4_closure" {
     Text.Read.readEither4_closure:
         const Data.Either.Left_con_info;
         const Text.Read.readEither5_closure;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:17.127517022 UTC

[section ""cstring" . Text.Read.readEither3_bytes" {
     Text.Read.readEither3_bytes:
         I8[] [80,114,101,108,117,100,101,46,114,101,97,100,58,32,97,109,98,105,103,117,111,117,115,32,112,97,114,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:17.130650126 UTC

[section ""data" . Text.Read.readEither2_closure" {
     Text.Read.readEither2_closure:
         const Text.Read.readEither2_info;
         const 0;
         const 0;
         const 0;
 },
 Text.Read.readEither2_entry() //  [R1]
         { []
         }
     {offset
       c5hAw: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5hAx; else goto c5hAy;
       c5hAx: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5hAy: // global
           (_c5hAt::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5hAt::I64 == 0) goto c5hAv; else goto c5hAu;
       c5hAv: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5hAu: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5hAt::I64;
           R2 = Text.Read.readEither3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Text.Read.readEither2_info" {
     Text.Read.readEither2_info:
         const Text.Read.readEither2_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:17.137089154 UTC

[section ""data" . Text.Read.readEither1_closure" {
     Text.Read.readEither1_closure:
         const Data.Either.Left_con_info;
         const Text.Read.readEither2_closure;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:17.142975812 UTC

[section ""data" . Text.Read.readEither7_closure" {
     Text.Read.readEither7_closure:
         const Text.Read.readEither7_info;
 },
 k_s5hzj_entry() //  [R1]
         { []
         }
     {offset
       c5hAS: // global
           R1 = P64[R1 + 7];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . k_s5hzj_info" {
     k_s5hzj_info:
         const k_s5hzj_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_s5hzm_entry() //  [R1, R2]
         { []
         }
     {offset
       c5hB0: // global
           R3 = P64[R1 + 7];
           R2 = R2;
           call Text.ParserCombinators.ReadP.skipSpaces2_entry(R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5hzm_info" {
     sat_s5hzm_info:
         const sat_s5hzm_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Text.Read.readEither7_entry() //  [R2]
         { []
         }
     {offset
       c5hB4: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c5hB8; else goto c5hB7;
       c5hB8: // global
           HpAlloc = 72;
           R2 = R2;
           R1 = Text.Read.readEither7_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5hB7: // global
           I64[Hp - 64] = Text.ParserCombinators.ReadP.Result_con_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = Text.ParserCombinators.ReadP.Fail_closure+3;
           I64[Hp - 40] = k_s5hzj_info;
           P64[Hp - 32] = Hp - 60;
           I64[Hp - 24] = sat_s5hzm_info;
           P64[Hp - 16] = Hp - 39;
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 6;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Text.Read.readEither7_info" {
     Text.Read.readEither7_info:
         const Text.Read.readEither7_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:17.157607852 UTC

[section ""data" . Text.Read.readEither8_closure" {
     Text.Read.readEither8_closure:
         const Text.Read.readEither8_info;
 },
 sat_s5hzv_entry() //  [R1]
         { []
         }
     {offset
       c5hBS: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5hBT; else goto c5hBU;
       c5hBT: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5hBU: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Text.Read.readEither8_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5hzv_info" {
     sat_s5hzv_info:
         const sat_s5hzv_entry;
         const 1;
         const 16;
 },
 Text.Read.readEither8_entry() //  [R2]
         { []
         }
     {offset
       c5hBZ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5hC0; else goto u5hCh;
       c5hC0: // global
           R2 = R2;
           R1 = Text.Read.readEither8_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       u5hCh: // global
           P64[Sp - 8] = R2;
           Sp = Sp - 8;
           call _c5hBv() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Text.Read.readEither8_info" {
     Text.Read.readEither8_info:
         const Text.Read.readEither8_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5hBv() //  []
         { []
         }
     {offset
       c5hBv: // global
           _s5hzn::P64 = P64[Sp];
           I64[Sp] = block_c5hBy_info;
           R1 = _s5hzn::P64;
           if (R1 & 7 != 0) goto u5hCj; else goto c5hBz;
       u5hCj: // global
           call _c5hBy(R1) args: 0, res: 0, upd: 0;
       c5hBz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5hBy() //  [R1]
         { []
         }
     {offset
       c5hBy: // global
           if (R1 & 7 == 1) goto c5hBW; else goto c5hBX;
       c5hBW: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5hBX: // global
           I64[Sp - 8] = block_c5hBE_info;
           _s5hzq::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5hzq::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5hCk; else goto c5hBF;
       u5hCk: // global
           call _c5hBE(R1) args: 0, res: 0, upd: 0;
       c5hBF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5hBy_info" {
     block_c5hBy_info:
         const _c5hBy;
         const 0;
         const 30;
 },
 _c5hBE() //  [R1]
         { []
         }
     {offset
       c5hBE: // global
           I64[Sp - 8] = block_c5hBJ_info;
           _s5hzs::P64 = P64[R1 + 7];
           R1 = P64[R1 + 15];
           P64[Sp] = _s5hzs::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5hCl; else goto c5hBK;
       u5hCl: // global
           call _c5hBJ(R1) args: 0, res: 0, upd: 0;
       c5hBK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5hBE_info" {
     block_c5hBE_info:
         const _c5hBE;
         const 1;
         const 30;
 },
 _c5hBJ() //  [R1]
         { []
         }
     {offset
       c5hBJ: // global
           _s5hzq::P64 = P64[Sp + 16];
           if (R1 & 7 == 1) goto c5hC8; else goto c5hCf;
       c5hC8: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5hCb; else goto c5hCa;
       c5hCb: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5hCa: // global
           I64[Hp - 40] = sat_s5hzv_info;
           P64[Hp - 24] = _s5hzq::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5hCf: // global
           P64[Sp + 16] = _s5hzq::P64;
           Sp = Sp + 16;
           call _c5hBv() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5hBJ_info" {
     block_c5hBJ_info:
         const _c5hBJ;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:17.180007205 UTC

[section ""data" . Text.Read.readEither_closure" {
     Text.Read.readEither_closure:
         const Text.Read.readEither_info;
         const 0;
 },
 Text.Read.readEither_entry() //  [R2, R3]
         { []
         }
     {offset
       c5hD6: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5hDa; else goto c5hDb;
       c5hDa: // global
           R3 = R3;
           R2 = R2;
           R1 = Text.Read.readEither_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5hDb: // global
           I64[Sp - 16] = block_c5hD4_info;
           R2 = R2;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Text.ParserCombinators.ReadPrec.minPrec_closure;
           P64[Sp - 24] = Text.Read.readEither7_closure+1;
           P64[Sp - 8] = R3;
           Sp = Sp - 40;
           call GHC.Read.readPrec_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Text.Read.readEither_info" {
     Text.Read.readEither_info:
         const Text.Read.readEither_entry;
         const 0;
         const 30064771086;
         const 8589934607;
         const S5hDK_srt;
 },
 _c5hD4() //  [R1]
         { []
         }
     {offset
       c5hD4: // global
           _s5hzz::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5hD9_info;
           R3 = _s5hzz::P64;
           R2 = R1;
           Sp = Sp + 8;
           call Text.ParserCombinators.ReadP.run_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5hD4_info" {
     block_c5hD4_info:
         const _c5hD4;
         const 1;
         const 12884901918;
         const S5hDK_srt+8;
 },
 _c5hD9() //  [R1]
         { []
         }
     {offset
       c5hD9: // global
           I64[Sp] = block_c5hDg_info;
           R2 = R1;
           call Text.Read.readEither8_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5hD9_info" {
     block_c5hD9_info:
         const _c5hD9;
         const 0;
         const 12884901918;
         const S5hDK_srt+8;
 },
 _c5hDg() //  [R1]
         { []
         }
     {offset
       c5hDg: // global
           if (R1 & 7 == 1) goto c5hDn; else goto c5hDs;
       c5hDn: // global
           R1 = Text.Read.readEither4_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5hDs: // global
           I64[Sp - 8] = block_c5hDq_info;
           _s5hzD::P64 = P64[R1 + 6];
           R1 = P64[R1 + 14];
           P64[Sp] = _s5hzD::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5hDJ; else goto c5hDt;
       u5hDJ: // global
           call _c5hDq(R1) args: 0, res: 0, upd: 0;
       c5hDt: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5hDg_info" {
     block_c5hDg_info:
         const _c5hDg;
         const 0;
         const 12884901918;
         const S5hDK_srt+8;
 },
 _c5hDq() //  [R1]
         { []
         }
     {offset
       c5hDq: // global
           if (R1 & 7 == 1) goto c5hDz; else goto c5hDG;
       c5hDz: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5hDC; else goto c5hDB;
       c5hDC: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5hDB: // global
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5hDG: // global
           R1 = Text.Read.readEither1_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5hDq_info" {
     block_c5hDq_info:
         const _c5hDq;
         const 1;
         const 4294967326;
         const S5hDK_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:17.192086495 UTC

[section ""data" . Text.Read.readMaybe_closure" {
     Text.Read.readMaybe_closure:
         const Text.Read.readMaybe_info;
         const 0;
 },
 Text.Read.readMaybe_entry() //  [R2, R3]
         { []
         }
     {offset
       c5hEt: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5hEu; else goto c5hEv;
       c5hEu: // global
           R3 = R3;
           R2 = R2;
           R1 = Text.Read.readMaybe_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5hEv: // global
           I64[Sp - 8] = block_c5hEn_info;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Text.Read.readEither_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Text.Read.readMaybe_info" {
     Text.Read.readMaybe_info:
         const Text.Read.readMaybe_entry;
         const 0;
         const 38654705678;
         const 8589934607;
         const S5hDK_srt;
 },
 _c5hEn() //  [R1]
         { []
         }
     {offset
       c5hEn: // global
           if (R1 & 7 == 1) goto c5hEq; else goto c5hEr;
       c5hEq: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5hEr: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5hEE; else goto c5hED;
       c5hEE: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5hED: // global
           _s5hzM::P64 = P64[R1 + 6];
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = _s5hzM::P64;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5hEn_info" {
     block_c5hEn_info:
         const _c5hEn;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:17.198249785 UTC

[section ""data" . Text.Read.read_closure" {
     Text.Read.read_closure:
         const Text.Read.read_info;
         const 0;
 },
 Text.Read.read_entry() //  [R2, R3]
         { []
         }
     {offset
       c5hF4: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5hF5; else goto c5hF6;
       c5hF5: // global
           R3 = R3;
           R2 = R2;
           R1 = Text.Read.read_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5hF6: // global
           I64[Sp - 8] = block_c5hEY_info;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Text.Read.readEither_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Text.Read.read_info" {
     Text.Read.read_info:
         const Text.Read.read_entry;
         const 0;
         const 210453397518;
         const 8589934607;
         const S5hDK_srt;
 },
 _c5hEY() //  [R1]
         { []
         }
     {offset
       c5hEY: // global
           if (R1 & 7 == 1) goto c5hF1; else goto c5hF2;
       c5hF1: // global
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 8, res: 0, upd: 8;
       c5hF2: // global
           R1 = P64[R1 + 6];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5hEY_info" {
     block_c5hEY_info:
         const _c5hEY;
         const 0;
         const 4294967326;
         const S5hDK_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:17.203265737 UTC

[section ""cstring" . Text.Read.$trModule4_bytes" {
     Text.Read.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:17.204946426 UTC

[section ""data" . Text.Read.$trModule3_closure" {
     Text.Read.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Text.Read.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:17.206631912 UTC

[section ""cstring" . Text.Read.$trModule2_bytes" {
     Text.Read.$trModule2_bytes:
         I8[] [84,101,120,116,46,82,101,97,100]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:17.20880156 UTC

[section ""data" . Text.Read.$trModule1_closure" {
     Text.Read.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Text.Read.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:17.210576897 UTC

[section ""data" . Text.Read.$trModule_closure" {
     Text.Read.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Text.Read.$trModule3_closure+1;
         const Text.Read.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:17.212347455 UTC

[section ""relreadonly" . S5hDK_srt" {
     S5hDK_srt:
         const Text.Read.readEither_closure;
         const Text.Read.readEither1_closure;
         const Text.Read.readEither4_closure;
         const Text.Read.readMaybe_closure;
         const GHC.Err.errorWithoutStackTrace_closure;
         const Text.Read.read_closure;
 }]

