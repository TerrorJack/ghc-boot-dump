
==================== Asm code ====================
2018-03-16 15:58:56.394152617 UTC

.section .data
.align 8
.align 1
.globl Numeric.readInt_closure
.type Numeric.readInt_closure, @object
Numeric.readInt_closure:
	.quad	Numeric.readInt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.395114654 UTC

.section .text
.align 8
sat_s43P9_entry:
_c451g:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c451h
_c451i:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c451d_info,-24(%rbp)
	movl $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,%r9d
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp Text.Read.Lex.$wreadIntP_entry
_c451h:
	jmp *-16(%r13)
	.size sat_s43P9_entry, .-sat_s43P9_entry


==================== Asm code ====================
2018-03-16 15:58:56.395860327 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43P9_info:
	.quad	sat_s43P9_entry
	.quad	4
	.quad	4294967311
	.quad	S43WU_srt


==================== Asm code ====================
2018-03-16 15:58:56.396584829 UTC

.section .text
.align 8
_c451d:
_c451d:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c451l
_c451k:
	movq $Text.ParserCombinators.ReadP.Get_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c451l:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c451d, .-_c451d


==================== Asm code ====================
2018-03-16 15:58:56.397526564 UTC

.section .data.rel.ro
.align 8
.align 1
block_c451d_info:
	.quad	_c451d
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.398297821 UTC

.section .text
.align 8
.globl Numeric.readInt_entry
.type Numeric.readInt_entry, @object
Numeric.readInt_entry:
_c451m:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c451q
_c451p:
	movq $sat_s43P9_info,-40(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	leaq -40(%r12),%r14
	movl $Text.ParserCombinators.ReadP.run_closure+2,%ebx
	jmp stg_ap_p_fast
_c451q:
	movq $48,904(%r13)
	movl $Numeric.readInt_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.readInt_entry, .-Numeric.readInt_entry


==================== Asm code ====================
2018-03-16 15:58:56.398994371 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.readInt_info
.type Numeric.readInt_info, @object
Numeric.readInt_info:
	.quad	Numeric.readInt_entry
	.quad	0
	.quad	12884901902
	.quad	17179869208
	.quad	S43WU_srt


==================== Asm code ====================
2018-03-16 15:58:56.403776016 UTC

.section .data
.align 8
.align 1
.globl Numeric.readOct_closure
.type Numeric.readOct_closure, @object
Numeric.readOct_closure:
	.quad	Numeric.readOct_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.404582902 UTC

.section .text
.align 8
sat_s43Pc_entry:
_c451P:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c451Q
_c451R:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $Text.Read.Lex.readDecP4_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c451Q:
	jmp *-16(%r13)
	.size sat_s43Pc_entry, .-sat_s43Pc_entry


==================== Asm code ====================
2018-03-16 15:58:56.405202746 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43Pc_info:
	.quad	sat_s43Pc_entry
	.quad	1
	.quad	4294967312
	.quad	S43WU_srt+16


==================== Asm code ====================
2018-03-16 15:58:56.406077919 UTC

.section .text
.align 8
sat_s43Pf_entry:
_c451V:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c451W
_c451X:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c451Z
_c451Y:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s43Pc_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c451S_info,-24(%rbp)
	movl $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,%r8d
	leaq -16(%r12),%rdi
	movq %rbx,%rsi
	movq %rax,%r14
	addq $-24,%rbp
	jmp Text.Read.Lex.$wreadIntP'_entry
_c451Z:
	movq $24,904(%r13)
_c451W:
	jmp *-16(%r13)
	.size sat_s43Pf_entry, .-sat_s43Pf_entry


==================== Asm code ====================
2018-03-16 15:58:56.40679118 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43Pf_info:
	.quad	sat_s43Pf_entry
	.quad	2
	.quad	12884901906
	.quad	S43WU_srt+16


==================== Asm code ====================
2018-03-16 15:58:56.407465089 UTC

.section .text
.align 8
_c451S:
_c451S:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4522
_c4521:
	movq $Text.ParserCombinators.ReadP.Get_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4522:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c451S, .-_c451S


==================== Asm code ====================
2018-03-16 15:58:56.408133575 UTC

.section .data.rel.ro
.align 8
.align 1
block_c451S_info:
	.quad	_c451S
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.408854122 UTC

.section .text
.align 8
.globl Numeric.readOct_entry
.type Numeric.readOct_entry, @object
Numeric.readOct_entry:
_c4523:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c4527
_c4526:
	movq $sat_s43Pf_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movl $Text.ParserCombinators.ReadP.run_closure+2,%ebx
	jmp stg_ap_p_fast
_c4527:
	movq $32,904(%r13)
	movl $Numeric.readOct_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.readOct_entry, .-Numeric.readOct_entry


==================== Asm code ====================
2018-03-16 15:58:56.409606055 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.readOct_info
.type Numeric.readOct_info, @object
Numeric.readOct_info:
	.quad	Numeric.readOct_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	S43WU_srt+16


==================== Asm code ====================
2018-03-16 15:58:56.415148715 UTC

.section .data
.align 8
.align 1
.globl Numeric.readDec_closure
.type Numeric.readDec_closure, @object
Numeric.readDec_closure:
	.quad	Numeric.readDec_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.416091957 UTC

.section .text
.align 8
sat_s43Pi_entry:
_c452A:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c452B
_c452C:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $Text.Read.Lex.numberToFixed1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c452B:
	jmp *-16(%r13)
	.size sat_s43Pi_entry, .-sat_s43Pi_entry


==================== Asm code ====================
2018-03-16 15:58:56.416872081 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43Pi_info:
	.quad	sat_s43Pi_entry
	.quad	1
	.quad	4294967312
	.quad	S43WU_srt+40


==================== Asm code ====================
2018-03-16 15:58:56.417713285 UTC

.section .text
.align 8
sat_s43Pl_entry:
_c452G:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c452H
_c452I:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c452K
_c452J:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s43Pi_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c452D_info,-24(%rbp)
	movl $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,%r8d
	leaq -16(%r12),%rdi
	movq %rbx,%rsi
	movq %rax,%r14
	addq $-24,%rbp
	jmp Text.Read.Lex.$wreadIntP'_entry
_c452K:
	movq $24,904(%r13)
_c452H:
	jmp *-16(%r13)
	.size sat_s43Pl_entry, .-sat_s43Pl_entry


==================== Asm code ====================
2018-03-16 15:58:56.418368623 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43Pl_info:
	.quad	sat_s43Pl_entry
	.quad	2
	.quad	21474836498
	.quad	S43WU_srt+24


==================== Asm code ====================
2018-03-16 15:58:56.419081775 UTC

.section .text
.align 8
_c452D:
_c452D:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c452N
_c452M:
	movq $Text.ParserCombinators.ReadP.Get_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c452N:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c452D, .-_c452D


==================== Asm code ====================
2018-03-16 15:58:56.419708679 UTC

.section .data.rel.ro
.align 8
.align 1
block_c452D_info:
	.quad	_c452D
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.420576148 UTC

.section .text
.align 8
.globl Numeric.readDec_entry
.type Numeric.readDec_entry, @object
Numeric.readDec_entry:
_c452O:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c452S
_c452R:
	movq $sat_s43Pl_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movl $Text.ParserCombinators.ReadP.run_closure+2,%ebx
	jmp stg_ap_p_fast
_c452S:
	movq $32,904(%r13)
	movl $Numeric.readDec_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.readDec_entry, .-Numeric.readDec_entry


==================== Asm code ====================
2018-03-16 15:58:56.421450557 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.readDec_info
.type Numeric.readDec_info, @object
Numeric.readDec_info:
	.quad	Numeric.readDec_entry
	.quad	0
	.quad	55834574862
	.quad	8589934607
	.quad	S43WU_srt+24


==================== Asm code ====================
2018-03-16 15:58:56.426627564 UTC

.section .data
.align 8
.align 1
.globl Numeric.readHex_closure
.type Numeric.readHex_closure, @object
Numeric.readHex_closure:
	.quad	Numeric.readHex_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.427456308 UTC

.section .text
.align 8
sat_s43Po_entry:
_c453l:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c453m
_c453n:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $Text.Read.Lex.readDecP3_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c453m:
	jmp *-16(%r13)
	.size sat_s43Po_entry, .-sat_s43Po_entry


==================== Asm code ====================
2018-03-16 15:58:56.428114971 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43Po_info:
	.quad	sat_s43Po_entry
	.quad	1
	.quad	4294967312
	.quad	S43WU_srt+56


==================== Asm code ====================
2018-03-16 15:58:56.428897718 UTC

.section .text
.align 8
sat_s43Pr_entry:
_c453r:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c453s
_c453t:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c453v
_c453u:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s43Po_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c453o_info,-24(%rbp)
	movl $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,%r8d
	leaq -16(%r12),%rdi
	movq %rbx,%rsi
	movq %rax,%r14
	addq $-24,%rbp
	jmp Text.Read.Lex.$wreadIntP'_entry
_c453v:
	movq $24,904(%r13)
_c453s:
	jmp *-16(%r13)
	.size sat_s43Pr_entry, .-sat_s43Pr_entry


==================== Asm code ====================
2018-03-16 15:58:56.429686719 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43Pr_info:
	.quad	sat_s43Pr_entry
	.quad	2
	.quad	73014444050
	.quad	S43WU_srt+24


==================== Asm code ====================
2018-03-16 15:58:56.430430872 UTC

.section .text
.align 8
_c453o:
_c453o:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c453y
_c453x:
	movq $Text.ParserCombinators.ReadP.Get_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c453y:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c453o, .-_c453o


==================== Asm code ====================
2018-03-16 15:58:56.431062709 UTC

.section .data.rel.ro
.align 8
.align 1
block_c453o_info:
	.quad	_c453o
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.431911656 UTC

.section .text
.align 8
.globl Numeric.readHex_entry
.type Numeric.readHex_entry, @object
Numeric.readHex_entry:
_c453z:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c453D
_c453C:
	movq $sat_s43Pr_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movl $Text.ParserCombinators.ReadP.run_closure+2,%ebx
	jmp stg_ap_p_fast
_c453D:
	movq $32,904(%r13)
	movl $Numeric.readHex_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.readHex_entry, .-Numeric.readHex_entry


==================== Asm code ====================
2018-03-16 15:58:56.432868316 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.readHex_info
.type Numeric.readHex_info, @object
Numeric.readHex_info:
	.quad	Numeric.readHex_entry
	.quad	0
	.quad	210453397518
	.quad	8589934607
	.quad	S43WU_srt+24


==================== Asm code ====================
2018-03-16 15:58:56.437018889 UTC

.section .data
.align 8
.align 1
.globl Numeric.readFloat2_closure
.type Numeric.readFloat2_closure, @object
Numeric.readFloat2_closure:
	.quad	Numeric.readFloat2_info


==================== Asm code ====================
2018-03-16 15:58:56.438067444 UTC

.section .text
.align 8
.globl Numeric.readFloat2_entry
.type Numeric.readFloat2_entry, @object
Numeric.readFloat2_entry:
_c4541:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4542
_c4543:
	movq $block_c453Y_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c453Y
_c453Z:
	movq (%rbx),%rax
	jmp *(%rax)
_c4542:
	movl $Numeric.readFloat2_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.readFloat2_entry, .-Numeric.readFloat2_entry


==================== Asm code ====================
2018-03-16 15:58:56.43880299 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.readFloat2_info
.type Numeric.readFloat2_info, @object
Numeric.readFloat2_info:
	.quad	Numeric.readFloat2_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:58:56.439465014 UTC

.section .text
.align 8
_c453Y:
_c453Y:
	movl $Text.ParserCombinators.ReadP.Fail_closure+3,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c453Y, .-_c453Y


==================== Asm code ====================
2018-03-16 15:58:56.440099525 UTC

.section .data.rel.ro
.align 8
.align 1
block_c453Y_info:
	.quad	_c453Y
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.441998884 UTC

.section .data
.align 8
.align 1
.globl Numeric.readFloat1_closure
.type Numeric.readFloat1_closure, @object
Numeric.readFloat1_closure:
	.quad	Text.ParserCombinators.ReadP.Look_con_info
	.quad	Numeric.readFloat2_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:58:56.455109711 UTC

.section .data
.align 8
.align 1
.globl Numeric.readFloat_closure
.type Numeric.readFloat_closure, @object
Numeric.readFloat_closure:
	.quad	Numeric.readFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.455953615 UTC

.section .text
.align 8
$dFractional_s43Pw_entry:
_c454z:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c454A
_c454B:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p2RealFrac_entry
_c454A:
	jmp *-16(%r13)
	.size $dFractional_s43Pw_entry, .-$dFractional_s43Pw_entry


==================== Asm code ====================
2018-03-16 15:58:56.456525377 UTC

.section .data.rel.ro
.align 8
.align 1
$dFractional_s43Pw_info:
	.quad	$dFractional_s43Pw_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:58:56.45735072 UTC

.section .text
.align 8
sat_s43PD_entry:
_c454Y:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c454Z
_c4550:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c454V_info,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp Text.Read.Lex.$wnumberToRational_entry
_c454Z:
	jmp *-16(%r13)
	.size sat_s43PD_entry, .-sat_s43PD_entry


==================== Asm code ====================
2018-03-16 15:58:56.45792544 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43PD_info:
	.quad	sat_s43PD_entry
	.quad	1
	.quad	4294967312
	.quad	S43WU_srt+72


==================== Asm code ====================
2018-03-16 15:58:56.458585533 UTC

.section .text
.align 8
_c454V:
_c454V:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4553
_c4552:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4553:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c454V, .-_c454V


==================== Asm code ====================
2018-03-16 15:58:56.459221645 UTC

.section .data.rel.ro
.align 8
.align 1
block_c454V_info:
	.quad	_c454V
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.460023751 UTC

.section .text
.align 8
sat_s43PE_entry:
_c4554:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c4555
_c4556:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4558
_c4557:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s43PD_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-32(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.fromRational_entry
_c4558:
	movq $24,904(%r13)
_c4555:
	jmp *-16(%r13)
	.size sat_s43PE_entry, .-sat_s43PE_entry


==================== Asm code ====================
2018-03-16 15:58:56.460705821 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43PE_info:
	.quad	sat_s43PE_entry
	.quad	2
	.quad	4294967314
	.quad	S43WU_srt+72


==================== Asm code ====================
2018-03-16 15:58:56.461641784 UTC

.section .text
.align 8
sat_s43PF_entry:
_c455d:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c455e
_c455f:
	movq $block_c454H_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c454H
_c454I:
	movq (%rbx),%rax
	jmp *(%rax)
_c455e:
	jmp *-8(%r13)
	.size sat_s43PF_entry, .-sat_s43PF_entry


==================== Asm code ====================
2018-03-16 15:58:56.462255995 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43PF_info:
	.quad	sat_s43PF_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S43WU_srt+72


==================== Asm code ====================
2018-03-16 15:58:56.463033299 UTC

.section .text
.align 8
_c454H:
_c454H:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $6,%rax
	je _c455b
_c455a:
	movl $Text.ParserCombinators.ReadP.Fail_closure+3,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c455l:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_c455b:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c455l
_c455k:
	movq 2(%rbx),%rax
	movq $sat_s43PE_info,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $Text.ParserCombinators.ReadP.Result_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	movq $Text.ParserCombinators.ReadP.Fail_closure+3,(%r12)
	leaq -12(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c454H, .-_c454H


==================== Asm code ====================
2018-03-16 15:58:56.463799793 UTC

.section .data.rel.ro
.align 8
.align 1
block_c454H_info:
	.quad	_c454H
	.quad	1
	.quad	4294967326
	.quad	S43WU_srt+72


==================== Asm code ====================
2018-03-16 15:58:56.464705065 UTC

.section .text
.align 8
sat_s43PG_entry:
_c455n:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c455o
_c455p:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c455r
_c455q:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $$dFractional_s43Pw_info,-32(%r12)
	movq %rax,-16(%r12)
	movq $sat_s43PF_info,-8(%r12)
	leaq -32(%r12),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%r14
	addq $-16,%rbp
	jmp Text.Read.Lex.expect2_entry
_c455r:
	movq $40,904(%r13)
_c455o:
	jmp *-16(%r13)
	.size sat_s43PG_entry, .-sat_s43PG_entry


==================== Asm code ====================
2018-03-16 15:58:56.465645114 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43PG_info:
	.quad	sat_s43PG_entry
	.quad	1
	.quad	12884901904
	.quad	S43WU_srt+72


==================== Asm code ====================
2018-03-16 15:58:56.466409988 UTC

.section .text
.align 8
lvl116_s43Pv_entry:
_c455s:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c455t
_c455u:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c455w
_c455v:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $sat_s43PG_info,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	movl $Numeric.readFloat1_closure+2,%r14d
	addq $-16,%rbp
	jmp Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_entry
_c455w:
	movq $24,904(%r13)
_c455t:
	jmp *-16(%r13)
	.size lvl116_s43Pv_entry, .-lvl116_s43Pv_entry


==================== Asm code ====================
2018-03-16 15:58:56.467070254 UTC

.section .data.rel.ro
.align 8
.align 1
lvl116_s43Pv_info:
	.quad	lvl116_s43Pv_entry
	.quad	1
	.quad	30064771088
	.quad	S43WU_srt+72


==================== Asm code ====================
2018-03-16 15:58:56.467694233 UTC

.section .text
.align 8
k_s43PH_entry:
_c455C:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size k_s43PH_entry, .-k_s43PH_entry


==================== Asm code ====================
2018-03-16 15:58:56.468303177 UTC

.section .data.rel.ro
.align 8
.align 1
k_s43PH_info:
	.quad	k_s43PH_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:58:56.468940291 UTC

.section .text
.align 8
sat_s43PK_entry:
_c455K:
	movq 7(%rbx),%rsi
	jmp Text.ParserCombinators.ReadP.skipSpaces2_entry
	.size sat_s43PK_entry, .-sat_s43PK_entry


==================== Asm code ====================
2018-03-16 15:58:56.469571085 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43PK_info:
	.quad	sat_s43PK_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:58:56.47036556 UTC

.section .text
.align 8
.globl Numeric.readFloat_entry
.type Numeric.readFloat_entry, @object
Numeric.readFloat_entry:
_c455O:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c455S
_c455R:
	movq $lvl116_s43Pv_info,-64(%r12)
	movq %r14,-48(%r12)
	movq $k_s43PH_info,-40(%r12)
	leaq -64(%r12),%rax
	movq %rax,-32(%r12)
	movq $sat_s43PK_info,-24(%r12)
	leaq -39(%r12),%rax
	movq %rax,-16(%r12)
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	leaq -23(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%r14
	movl $Text.ParserCombinators.ReadP.run_closure+2,%ebx
	jmp stg_ap_p_fast
_c455S:
	movq $72,904(%r13)
	movl $Numeric.readFloat_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.readFloat_entry, .-Numeric.readFloat_entry


==================== Asm code ====================
2018-03-16 15:58:56.471058151 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.readFloat_info
.type Numeric.readFloat_info, @object
Numeric.readFloat_info:
	.quad	Numeric.readFloat_entry
	.quad	0
	.quad	64424509454
	.quad	4294967301
	.quad	S43WU_srt+72


==================== Asm code ====================
2018-03-16 15:58:56.492728493 UTC

.section .data
.align 8
.align 1
.globl Numeric.readSigned_closure
.type Numeric.readSigned_closure, @object
Numeric.readSigned_closure:
	.quad	Numeric.readSigned_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.493631621 UTC

.section .text
.align 8
$dNum_s43PP_entry:
_c456U:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c456V
_c456W:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c456V:
	jmp *-16(%r13)
	.size $dNum_s43PP_entry, .-$dNum_s43PP_entry


==================== Asm code ====================
2018-03-16 15:58:56.494176027 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s43PP_info:
	.quad	$dNum_s43PP_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:58:56.494833519 UTC

.section .text
.align 8
go1_s43PZ_entry:
_c457q:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c457r
_u457X:
	movq %rbx,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp _c457g
_c457r:
	jmp *-8(%r13)
	.size go1_s43PZ_entry, .-go1_s43PZ_entry


==================== Asm code ====================
2018-03-16 15:58:56.495367422 UTC

.section .data.rel.ro
.align 8
.align 1
go1_s43PZ_info:
	.quad	go1_s43PZ_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:58:56.496029723 UTC

.section .text
.align 8
_c457g:
_c457g:
	movq $block_c457j_info,-16(%rbp)
	movq 8(%rbp),%rbx
	movq (%rbp),%rax
	movq 15(%rax),%rcx
	movq %rcx,-8(%rbp)
	movq 7(%rax),%rax
	movq %rax,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c457j
_c457k:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c457g, .-_c457g


==================== Asm code ====================
2018-03-16 15:58:56.496836823 UTC

.section .text
.align 8
_c457j:
_c457j:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c457n
_c457o:
	movq $block_c457y_info,(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c457y
_c457A:
	movq (%rbx),%rax
	jmp *(%rax)
_c457n:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c457j, .-_c457j


==================== Asm code ====================
2018-03-16 15:58:56.497567894 UTC

.section .data.rel.ro
.align 8
.align 1
block_c457j_info:
	.quad	_c457j
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.498240207 UTC

.section .text
.align 8
_c457y:
_c457y:
	movq $block_c457E_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c457E
_c457G:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c457y, .-_c457y


==================== Asm code ====================
2018-03-16 15:58:56.498820296 UTC

.section .data.rel.ro
.align 8
.align 1
block_c457y_info:
	.quad	_c457y
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.499638374 UTC

.section .text
.align 8
_c457E:
_c457E:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c457O
_c457V:
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp _c457g
_c457R:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
_c457O:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c457R
_c457Q:
	movq $stg_ap_2_upd_info,-72(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq $(,)_con_info,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movq 32(%rbp),%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c457E, .-_c457E


==================== Asm code ====================
2018-03-16 15:58:56.500366075 UTC

.section .data.rel.ro
.align 8
.align 1
block_c457E_info:
	.quad	_c457E
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.5010758 UTC

.section .text
.align 8
go_s43PQ_entry:
_c4588:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c4589
_c458a:
	movq $block_c4572_info,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4572
_c4573:
	movq (%rbx),%rax
	jmp *(%rax)
_c4589:
	jmp *-8(%r13)
	.size go_s43PQ_entry, .-go_s43PQ_entry


==================== Asm code ====================
2018-03-16 15:58:56.502026484 UTC

.section .data.rel.ro
.align 8
.align 1
go_s43PQ_info:
	.quad	go_s43PQ_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:58:56.50273919 UTC

.section .text
.align 8
_c4572:
_c4572:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c4585
_c4586:
	movq $block_c4578_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4578
_c4579:
	movq (%rbx),%rax
	jmp *(%rax)
_c4585:
	movl $[]_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4572, .-_c4572


==================== Asm code ====================
2018-03-16 15:58:56.503356846 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4572_info:
	.quad	_c4572
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.504118296 UTC

.section .text
.align 8
_c4578:
_c4578:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c458h
_c458g:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $stg_ap_2_upd_info,-48(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-32(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq $go1_s43PZ_info,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -48(%r12),%rbx
	movq %rbx,(%r12)
	movq 16(%rbp),%rbx
	movq $block_c458d_info,16(%rbp)
	movq %rax,%r14
	leaq -15(%r12),%rax
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp stg_ap_p_fast
_c458h:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4578, .-_c4578


==================== Asm code ====================
2018-03-16 15:58:56.504774004 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4578_info:
	.quad	_c4578
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.505428478 UTC

.section .text
.align 8
_c458d:
_c458d:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go1_s43PZ_entry
	.size _c458d, .-_c458d


==================== Asm code ====================
2018-03-16 15:58:56.50598986 UTC

.section .data.rel.ro
.align 8
.align 1
block_c458d_info:
	.quad	_c458d
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.506735461 UTC

.section .text
.align 8
sat_s43QB_entry:
_c459j:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c459k
_c459l:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.negate_entry
_c459k:
	jmp *-16(%r13)
	.size sat_s43QB_entry, .-sat_s43QB_entry


==================== Asm code ====================
2018-03-16 15:58:56.507383505 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43QB_info:
	.quad	sat_s43QB_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:58:56.508171919 UTC

.section .text
.align 8
go2_s43Qt_entry:
_c459q:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c459r
_c459s:
	movq $block_c4593_info,-32(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c4593
_c4594:
	movq (%rbx),%rax
	jmp *(%rax)
_c459r:
	jmp *-8(%r13)
	.size go2_s43Qt_entry, .-go2_s43Qt_entry


==================== Asm code ====================
2018-03-16 15:58:56.50882259 UTC

.section .data.rel.ro
.align 8
.align 1
go2_s43Qt_info:
	.quad	go2_s43Qt_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:58:56.509645933 UTC

.section .text
.align 8
_c4593:
_c4593:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c459n
_c459o:
	movq $block_c4599_info,(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4599
_c459a:
	movq (%rbx),%rax
	jmp *(%rax)
_c459n:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4593, .-_c4593


==================== Asm code ====================
2018-03-16 15:58:56.5103145 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4593_info:
	.quad	_c4593
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.511103141 UTC

.section .text
.align 8
_c4599:
_c4599:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c459A
_c459z:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $stg_ap_2_upd_info,-104(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-88(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq $sat_s43QB_info,-72(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-56(%r12)
	movq %rax,-48(%r12)
	movq $(,)_con_info,-40(%r12)
	leaq -72(%r12),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -104(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c459A:
	movq $112,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4599, .-_c4599


==================== Asm code ====================
2018-03-16 15:58:56.511805414 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4599_info:
	.quad	_c4599
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.512472246 UTC

.section .text
.align 8
go1_s43Qd_entry:
_c459H:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c459I
_u45aj:
	movq %rbx,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp _c458q
_c459I:
	jmp *-8(%r13)
	.size go1_s43Qd_entry, .-go1_s43Qd_entry


==================== Asm code ====================
2018-03-16 15:58:56.513102691 UTC

.section .data.rel.ro
.align 8
.align 1
go1_s43Qd_info:
	.quad	go1_s43Qd_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	S43WU_srt+104


==================== Asm code ====================
2018-03-16 15:58:56.51398927 UTC

.section .text
.align 8
_c458q:
_c458q:
	movq $block_c458t_info,-16(%rbp)
	movq 8(%rbp),%rbx
	movq (%rbp),%rax
	movq 15(%rax),%rcx
	movq %rcx,-8(%rbp)
	movq 7(%rax),%rax
	movq %rax,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c458t
_c458u:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c458q, .-_c458q


==================== Asm code ====================
2018-03-16 15:58:56.514860929 UTC

.section .text
.align 8
_c458t:
_c458t:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c459E
_c459F:
	movq $block_c458z_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c458z
_c458A:
	movq (%rbx),%rax
	jmp *(%rax)
_c459E:
	movl $[]_closure+1,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c458t, .-_c458t


==================== Asm code ====================
2018-03-16 15:58:56.515595935 UTC

.section .data.rel.ro
.align 8
.align 1
block_c458t_info:
	.quad	_c458t
	.quad	3
	.quad	4294967326
	.quad	S43WU_srt+104


==================== Asm code ====================
2018-03-16 15:58:56.516966803 UTC

.section .text
.align 8
_c458z:
_c458z:
	movq $block_c458E_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c458E
_c458F:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c458z, .-_c458z


==================== Asm code ====================
2018-03-16 15:58:56.51768474 UTC

.section .data.rel.ro
.align 8
.align 1
block_c458z_info:
	.quad	_c458z
	.quad	4
	.quad	4294967326
	.quad	S43WU_srt+104


==================== Asm code ====================
2018-03-16 15:58:56.518440076 UTC

.section .text
.align 8
_c458E:
_c458E:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u45ak
_c459T:
	movq $block_c458K_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c458K
_c458L:
	movq (%rbx),%rax
	jmp *(%rax)
_u45ak:
	addq $16,%rbp
	jmp _c45ag
	.size _c458E, .-_c458E


==================== Asm code ====================
2018-03-16 15:58:56.51910791 UTC

.section .data.rel.ro
.align 8
.align 1
block_c458E_info:
	.quad	_c458E
	.quad	5
	.quad	4294967326
	.quad	S43WU_srt+104


==================== Asm code ====================
2018-03-16 15:58:56.519820794 UTC

.section .text
.align 8
_c458K:
_c458K:
	cmpq $45,7(%rbx)
	je _c459X
_u45al:
	addq $24,%rbp
	jmp _c45ag
_c459X:
	movq 8(%rbp),%rax
	movq $block_c458S_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c458S
_c458T:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c458K, .-_c458K


==================== Asm code ====================
2018-03-16 15:58:56.520444912 UTC

.section .data.rel.ro
.align 8
.align 1
block_c458K_info:
	.quad	_c458K
	.quad	6
	.quad	4294967326
	.quad	S43WU_srt+104


==================== Asm code ====================
2018-03-16 15:58:56.521333873 UTC

.section .text
.align 8
_c458S:
_c458S:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c45a4
_u45am:
	addq $16,%rbp
	jmp _c45ag
_c45a7:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_c45a4:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c45a7
_c45a6:
	movq $stg_ap_2_upd_info,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq $go2_s43Qt_info,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	movq $block_c459Y_info,16(%rbp)
	movq 8(%rbp),%rsi
	movl $GHC.Read.lex1_closure,%r14d
	leaq -15(%r12),%rax
	movq %rax,40(%rbp)
	addq $16,%rbp
	jmp Text.ParserCombinators.ReadP.run_entry
	.size _c458S, .-_c458S


==================== Asm code ====================
2018-03-16 15:58:56.52206777 UTC

.section .data.rel.ro
.align 8
.align 1
block_c458S_info:
	.quad	_c458S
	.quad	5
	.quad	4294967326
	.quad	S43WU_srt+104


==================== Asm code ====================
2018-03-16 15:58:56.522694595 UTC

.section .text
.align 8
_c459Y:
_c459Y:
	movq $block_c45a2_info,16(%rbp)
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s43PQ_entry
	.size _c459Y, .-_c459Y


==================== Asm code ====================
2018-03-16 15:58:56.523275712 UTC

.section .data.rel.ro
.align 8
.align 1
block_c459Y_info:
	.quad	_c459Y
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.523847157 UTC

.section .text
.align 8
_c45a2:
_c45a2:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go2_s43Qt_entry
	.size _c45a2, .-_c45a2


==================== Asm code ====================
2018-03-16 15:58:56.524419255 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45a2_info:
	.quad	_c45a2
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.525077108 UTC

.section .text
.align 8
_c45ag:
_c45ag:
	movq (%rbp),%rax
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp _c458q
	.size _c45ag, .-_c45ag


==================== Asm code ====================
2018-03-16 15:58:56.526042982 UTC

.section .text
.align 8
sat_s43QM_entry:
_c45aJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45aK
_c45aL:
	movq $block_c45aH_info,-16(%rbp)
	movq 24(%rbx),%rsi
	movl $GHC.Read.lex1_closure,%r14d
	movq 16(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp Text.ParserCombinators.ReadP.run_entry
_c45aK:
	jmp *-16(%r13)
	.size sat_s43QM_entry, .-sat_s43QM_entry


==================== Asm code ====================
2018-03-16 15:58:56.526694164 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43QM_info:
	.quad	sat_s43QM_entry
	.quad	2
	.quad	4294967314
	.quad	S43WU_srt+104


==================== Asm code ====================
2018-03-16 15:58:56.527329321 UTC

.section .text
.align 8
_c45aH:
_c45aH:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go1_s43Qd_entry
	.size _c45aH, .-_c45aH


==================== Asm code ====================
2018-03-16 15:58:56.527928805 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45aH_info:
	.quad	_c45aH
	.quad	1
	.quad	4294967326
	.quad	S43WU_srt+104


==================== Asm code ====================
2018-03-16 15:58:56.528753325 UTC

.section .text
.align 8
sat_s43QN_entry:
_c45aR:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c45aV
_c45aW:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c45aY
_c45aX:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s43QM_info,-24(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_c45aP_info,-24(%rbp)
	movq %r14,%rsi
	movl $GHC.Read.lex1_closure,%r14d
	leaq -24(%r12),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp Text.ParserCombinators.ReadP.run_entry
_c45aY:
	movq $32,904(%r13)
_c45aV:
	jmp *-8(%r13)
	.size sat_s43QN_entry, .-sat_s43QN_entry


==================== Asm code ====================
2018-03-16 15:58:56.529516814 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43QN_info:
	.quad	sat_s43QN_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	S43WU_srt+104


==================== Asm code ====================
2018-03-16 15:58:56.530164646 UTC

.section .text
.align 8
_c45aP:
_c45aP:
	movq $block_c45aU_info,(%rbp)
	movq %rbx,%r14
	movq 16(%rbp),%rbx
	jmp go_s43PQ_entry
	.size _c45aP, .-_c45aP


==================== Asm code ====================
2018-03-16 15:58:56.53073985 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45aP_info:
	.quad	_c45aP
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.531363421 UTC

.section .text
.align 8
_c45aU:
_c45aU:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $24,%rbp
	jmp GHC.Base.++_entry
	.size _c45aU, .-_c45aU


==================== Asm code ====================
2018-03-16 15:58:56.531925066 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45aU_info:
	.quad	_c45aU
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.532768732 UTC

.section .text
.align 8
.globl Numeric.readSigned_entry
.type Numeric.readSigned_entry, @object
Numeric.readSigned_entry:
_c45b4:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c45b8
_c45b7:
	movq $$dNum_s43PP_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $go_s43PQ_info,-56(%r12)
	movq %rsi,-48(%r12)
	movq $go1_s43Qd_info,-40(%r12)
	leaq -80(%r12),%rax
	movq %rax,-32(%r12)
	leaq -55(%r12),%rax
	movq %rax,-24(%r12)
	movq $sat_s43QN_info,-16(%r12)
	movq %rax,-8(%r12)
	leaq -39(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rsi
	movl $GHC.Types.False_closure+1,%r14d
	jmp GHC.Read.readParen_entry
_c45b8:
	movq $88,904(%r13)
	movl $Numeric.readSigned_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.readSigned_entry, .-Numeric.readSigned_entry


==================== Asm code ====================
2018-03-16 15:58:56.533891734 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.readSigned_info
.type Numeric.readSigned_info, @object
Numeric.readSigned_info:
	.quad	Numeric.readSigned_entry
	.quad	0
	.quad	30064771086
	.quad	12884901911
	.quad	S43WU_srt+104


==================== Asm code ====================
2018-03-16 15:58:56.536248817 UTC

.section .data
.align 8
.align 1
sat_s43QO_closure:
	.quad	GHC.Types.I#_con_info
	.quad	10


==================== Asm code ====================
2018-03-16 15:58:56.538369129 UTC

.section .data
.align 8
.align 1
sat_s43QP_closure:
	.quad	:_con_info
	.quad	sat_s43QO_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.5422988 UTC

.section .data
.align 8
.align 1
.globl Numeric.showInt2_closure
.type Numeric.showInt2_closure, @object
Numeric.showInt2_closure:
	.quad	Numeric.showInt2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.543639896 UTC

.section .text
.align 8
.globl Numeric.showInt2_entry
.type Numeric.showInt2_entry, @object
Numeric.showInt2_entry:
_c45dR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45dS
_c45dT:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c45dQ
_c45dP:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $sat_s43QP_closure+2,%esi
	movl $GHC.Types.True_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_c45dS:
	jmp *-16(%r13)
_c45dQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showInt2_entry, .-Numeric.showInt2_entry


==================== Asm code ====================
2018-03-16 15:58:56.544724149 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showInt2_info
.type Numeric.showInt2_info, @object
Numeric.showInt2_info:
	.quad	Numeric.showInt2_entry
	.quad	0
	.quad	4294967317
	.quad	S43WU_srt+128


==================== Asm code ====================
2018-03-16 15:58:56.547457184 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl_r43OH_bytes:
	.asciz "Numeric.showInt: can't show negative numbers"


==================== Asm code ====================
2018-03-16 15:58:56.551483369 UTC

.section .data
.align 8
.align 1
.globl Numeric.showInt1_closure
.type Numeric.showInt1_closure, @object
Numeric.showInt1_closure:
	.quad	Numeric.showInt1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.5530855 UTC

.section .text
.align 8
.globl Numeric.showInt1_entry
.type Numeric.showInt1_entry, @object
Numeric.showInt1_entry:
_c45ea:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c45eb
_c45ec:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c45e7
_c45e6:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_c45e8_info,-24(%rbp)
	movl $lvl_r43OH_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_c45eb:
	jmp *-16(%r13)
_c45e7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showInt1_entry, .-Numeric.showInt1_entry


==================== Asm code ====================
2018-03-16 15:58:56.554364355 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showInt1_info
.type Numeric.showInt1_info, @object
Numeric.showInt1_info:
	.quad	Numeric.showInt1_entry
	.quad	0
	.quad	4294967317
	.quad	S43WU_srt+136


==================== Asm code ====================
2018-03-16 15:58:56.555113992 UTC

.section .text
.align 8
_c45e8:
_c45e8:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size _c45e8, .-_c45e8


==================== Asm code ====================
2018-03-16 15:58:56.555672367 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45e8_info:
	.quad	_c45e8
	.quad	0
	.quad	4294967326
	.quad	S43WU_srt+136


==================== Asm code ====================
2018-03-16 15:58:56.558555667 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat16_closure
.type Numeric.showHFloat16_closure, @object
Numeric.showHFloat16_closure:
	.quad	Numeric.showHFloat16_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.55943802 UTC

.section .text
.align 8
.globl Numeric.showHFloat16_entry
.type Numeric.showHFloat16_entry, @object
Numeric.showHFloat16_entry:
_c45ew:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45ex
_c45ey:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c45ev
_c45eu:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Types.[]_closure+1,%esi
	movl $GHC.Types.True_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_c45ex:
	jmp *-16(%r13)
_c45ev:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showHFloat16_entry, .-Numeric.showHFloat16_entry


==================== Asm code ====================
2018-03-16 15:58:56.560169096 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat16_info
.type Numeric.showHFloat16_info, @object
Numeric.showHFloat16_info:
	.quad	Numeric.showHFloat16_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:58:56.579391134 UTC

.section .data
.align 8
.align 1
.globl Numeric.showInt_closure
.type Numeric.showInt_closure, @object
Numeric.showInt_closure:
	.quad	Numeric.showInt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.580632824 UTC

.section .text
.align 8
sat_s43QX_entry:
_c45fD:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45fE
_c45fF:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c45fB_info,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$p1Real_entry
_c45fE:
	jmp *-16(%r13)
	.size sat_s43QX_entry, .-sat_s43QX_entry


==================== Asm code ====================
2018-03-16 15:58:56.581732587 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43QX_info:
	.quad	sat_s43QX_entry
	.quad	1
	.quad	4294967312
	.quad	S43WU_srt+144


==================== Asm code ====================
2018-03-16 15:58:56.582803687 UTC

.section .text
.align 8
_c45fB:
_c45fB:
	movq %rbx,%r14
	movq $stg_ap_p_info,-8(%rbp)
	movq $Numeric.showHFloat16_closure,(%rbp)
	addq $-8,%rbp
	jmp GHC.Num.fromInteger_entry
	.size _c45fB, .-_c45fB


==================== Asm code ====================
2018-03-16 15:58:56.583677039 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45fB_info:
	.quad	_c45fB
	.quad	0
	.quad	4294967326
	.quad	S43WU_srt+144


==================== Asm code ====================
2018-03-16 15:58:56.584600769 UTC

.section .text
.align 8
lvl5_s43QZ_entry:
_c45fN:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45fO
_c45fP:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c45fL_info,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$p1Real_entry
_c45fO:
	jmp *-16(%r13)
	.size lvl5_s43QZ_entry, .-lvl5_s43QZ_entry


==================== Asm code ====================
2018-03-16 15:58:56.585687787 UTC

.section .data.rel.ro
.align 8
.align 1
lvl5_s43QZ_info:
	.quad	lvl5_s43QZ_entry
	.quad	1
	.quad	4294967312
	.quad	S43WU_srt+152


==================== Asm code ====================
2018-03-16 15:58:56.586759739 UTC

.section .text
.align 8
_c45fL:
_c45fL:
	movq %rbx,%r14
	movq $stg_ap_p_info,-8(%rbp)
	movq $Numeric.showInt2_closure,(%rbp)
	addq $-8,%rbp
	jmp GHC.Num.fromInteger_entry
	.size _c45fL, .-_c45fL


==================== Asm code ====================
2018-03-16 15:58:56.587667266 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45fL_info:
	.quad	_c45fL
	.quad	0
	.quad	4294967326
	.quad	S43WU_srt+152


==================== Asm code ====================
2018-03-16 15:58:56.588815179 UTC

.section .text
.align 8
ds_s43Re_entry:
_c45fV:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c45fW
_c45fX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.quotRem_entry
_c45fW:
	jmp *-16(%r13)
	.size ds_s43Re_entry, .-ds_s43Re_entry


==================== Asm code ====================
2018-03-16 15:58:56.589916791 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s43Re_info:
	.quad	ds_s43Re_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:58:56.590841912 UTC

.section .text
.align 8
.globl Numeric.showInt_entry
.type Numeric.showInt_entry, @object
Numeric.showInt_entry:
_c45fY:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c45fZ
_c45g0:
	movq $block_c45eK_info,-32(%rbp)
	movq %r14,%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.$p1Integral_entry
_c45fZ:
	movl $Numeric.showInt_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.showInt_entry, .-Numeric.showInt_entry


==================== Asm code ====================
2018-03-16 15:58:56.591498488 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showInt_info
.type Numeric.showInt_info, @object
Numeric.showInt_info:
	.quad	Numeric.showInt_entry
	.quad	0
	.quad	64424509454
	.quad	12884901911
	.quad	S43WU_srt+144


==================== Asm code ====================
2018-03-16 15:58:56.592245611 UTC

.section .text
.align 8
_c45eK:
_c45eK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c45g3
_c45g2:
	movq $sat_s43QX_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c45eQ_info,-16(%rbp)
	movq %rbx,%r14
	movq %rbx,-8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$p2Real_entry
_c45g3:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c45eK, .-_c45eK


==================== Asm code ====================
2018-03-16 15:58:56.592922518 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45eK_info:
	.quad	_c45eK
	.quad	3
	.quad	47244640286
	.quad	S43WU_srt+144


==================== Asm code ====================
2018-03-16 15:58:56.593687127 UTC

.section .text
.align 8
_c45eQ:
_c45eQ:
	movq $block_c45eU_info,(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.<_entry
	.size _c45eQ, .-_c45eQ


==================== Asm code ====================
2018-03-16 15:58:56.594350882 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45eQ_info:
	.quad	_c45eQ
	.quad	5
	.quad	21474836510
	.quad	S43WU_srt+152


==================== Asm code ====================
2018-03-16 15:58:56.595154081 UTC

.section .text
.align 8
_c45eU:
_c45eU:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c45g6
_c45gQ:
	movl $Numeric.showInt1_closure,%ebx
	addq $48,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c45g9:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c45g6:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c45g9
_c45g8:
	movq $lvl5_s43QZ_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c45f0_info,8(%rbp)
	movq %rax,%r14
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp GHC.Real.$p2Real_entry
	.size _c45eU, .-_c45eU


==================== Asm code ====================
2018-03-16 15:58:56.595844631 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45eU_info:
	.quad	_c45eU
	.quad	133
	.quad	21474836510
	.quad	S43WU_srt+152


==================== Asm code ====================
2018-03-16 15:58:56.596511477 UTC

.section .text
.align 8
_c45f0:
_c45f0:
	movq 32(%rbp),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rax
	movq %rax,24(%rbp)
	movq %rbx,32(%rbp)
	jmp _c45f9
	.size _c45f0, .-_c45f0


==================== Asm code ====================
2018-03-16 15:58:56.597113725 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45f0_info:
	.quad	_c45f0
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.598047734 UTC

.section .text
.align 8
_c45f9:
_c45f9:
	movq $block_c45fb_info,-8(%rbp)
	movq 32(%rbp),%r14
	movq $stg_ap_pp_info,-32(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-24(%rbp)
	movq 8(%rbp),%rax
	movq %rax,-16(%rbp)
	addq $-32,%rbp
	jmp GHC.Classes.<_entry
	.size _c45f9, .-_c45f9


==================== Asm code ====================
2018-03-16 15:58:56.598997668 UTC

.section .text
.align 8
_c45fb:
_c45fb:
	movq 24(%rbp),%rax
	movq 32(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c45gB
_c45gM:
	movq $block_c45ge_info,32(%rbp)
	movq %rax,%r14
	movq $stg_ap_p_info,16(%rbp)
	movq %rcx,24(%rbp)
	movq 8(%rbp),%rax
	movq %rax,40(%rbp)
	addq $16,%rbp
	jmp GHC.Real.toInteger_entry
_c45gE:
	movq $64,904(%r13)
	jmp stg_gc_unpt_r1
_c45gB:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c45gE
_c45gD:
	movq $ds_s43Re_info,-56(%r12)
	movq %rax,-40(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rcx,-24(%r12)
	movq $stg_sel_1_upd_info,-16(%r12)
	leaq -56(%r12),%rbx
	movq %rbx,(%r12)
	movq $block_c45fi_info,(%rbp)
	movq %rax,%r14
	movq $stg_ap_p_info,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	movq %rbx,32(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.toInteger_entry
	.size _c45fb, .-_c45fb


==================== Asm code ====================
2018-03-16 15:58:56.599784147 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45fb_info:
	.quad	_c45fb
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.600439696 UTC

.section .text
.align 8
_c45fi:
_c45fi:
	movq $block_c45fm_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.integerToInt_entry
	.size _c45fi, .-_c45fi


==================== Asm code ====================
2018-03-16 15:58:56.601025765 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45fi_info:
	.quad	_c45fi
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.601959023 UTC

.section .text
.align 8
_c45fm:
_c45fm:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c45gI
_c45gH:
	movq $GHC.Types.C#_con_info,-56(%r12)
	leaq 48(%rbx),%rax
	movq %rax,-48(%r12)
	movq $:_con_info,-40(%r12)
	leaq -55(%r12),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq $stg_sel_0_upd_info,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq -16(%r12),%rax
	movq %rax,32(%rbp)
	leaq -38(%r12),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _c45f9
_c45gI:
	movq $64,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c45fm, .-_c45fm


==================== Asm code ====================
2018-03-16 15:58:56.602713685 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45fm_info:
	.quad	_c45fm
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.603969157 UTC

.section .text
.align 8
_c45ge:
_c45ge:
	movq $block_c45gi_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.integerToInt_entry
	.size _c45ge, .-_c45ge


==================== Asm code ====================
2018-03-16 15:58:56.604534746 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45ge_info:
	.quad	_c45ge
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.60533126 UTC

.section .text
.align 8
_c45gi:
_c45gi:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c45gy
_c45gx:
	movq $GHC.Types.C#_con_info,-32(%r12)
	leaq 48(%rbx),%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c45gy:
	movq $40,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c45gi, .-_c45gi


==================== Asm code ====================
2018-03-16 15:58:56.605970709 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45gi_info:
	.quad	_c45gi
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.609533698 UTC

.section .data
.align 8
.align 1
.globl Numeric.showFFloatAlt_closure
.type Numeric.showFFloatAlt_closure, @object
Numeric.showFFloatAlt_closure:
	.quad	Numeric.showFFloatAlt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.610403703 UTC

.section .text
.align 8
sat_s43Rw_entry:
_c45in:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45io
_c45ip:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r9
	movl $GHC.Types.True_closure+2,%r8d
	movq 24(%rbx),%rdi
	movl $GHC.Float.FFFixed_closure+2,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.formatRealFloatAlt_entry
_c45io:
	jmp *-16(%r13)
	.size sat_s43Rw_entry, .-sat_s43Rw_entry


==================== Asm code ====================
2018-03-16 15:58:56.611079385 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43Rw_info:
	.quad	sat_s43Rw_entry
	.quad	3
	.quad	4294967311
	.quad	S43WU_srt+176


==================== Asm code ====================
2018-03-16 15:58:56.611770082 UTC

.section .text
.align 8
.globl Numeric.showFFloatAlt_entry
.type Numeric.showFFloatAlt_entry, @object
Numeric.showFFloatAlt_entry:
_c45iq:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c45iu
_c45it:
	movq $sat_s43Rw_info,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -32(%r12),%r14
	movl $GHC.Base.++_closure+2,%ebx
	jmp stg_ap_p_fast
_c45iu:
	movq $40,904(%r13)
	movl $Numeric.showFFloatAlt_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.showFFloatAlt_entry, .-Numeric.showFFloatAlt_entry


==================== Asm code ====================
2018-03-16 15:58:56.612428346 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showFFloatAlt_info
.type Numeric.showFFloatAlt_info, @object
Numeric.showFFloatAlt_info:
	.quad	Numeric.showFFloatAlt_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S43WU_srt+176


==================== Asm code ====================
2018-03-16 15:58:56.615938519 UTC

.section .data
.align 8
.align 1
.globl Numeric.showGFloatAlt_closure
.type Numeric.showGFloatAlt_closure, @object
Numeric.showGFloatAlt_closure:
	.quad	Numeric.showGFloatAlt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.616794261 UTC

.section .text
.align 8
sat_s43RA_entry:
_c45iL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45iM
_c45iN:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r9
	movl $GHC.Types.True_closure+2,%r8d
	movq 24(%rbx),%rdi
	movl $GHC.Float.FFGeneric_closure+3,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.formatRealFloatAlt_entry
_c45iM:
	jmp *-16(%r13)
	.size sat_s43RA_entry, .-sat_s43RA_entry


==================== Asm code ====================
2018-03-16 15:58:56.617978979 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43RA_info:
	.quad	sat_s43RA_entry
	.quad	3
	.quad	4294967311
	.quad	S43WU_srt+176


==================== Asm code ====================
2018-03-16 15:58:56.618720648 UTC

.section .text
.align 8
.globl Numeric.showGFloatAlt_entry
.type Numeric.showGFloatAlt_entry, @object
Numeric.showGFloatAlt_entry:
_c45iO:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c45iS
_c45iR:
	movq $sat_s43RA_info,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -32(%r12),%r14
	movl $GHC.Base.++_closure+2,%ebx
	jmp stg_ap_p_fast
_c45iS:
	movq $40,904(%r13)
	movl $Numeric.showGFloatAlt_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.showGFloatAlt_entry, .-Numeric.showGFloatAlt_entry


==================== Asm code ====================
2018-03-16 15:58:56.619390028 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showGFloatAlt_info
.type Numeric.showGFloatAlt_info, @object
Numeric.showGFloatAlt_info:
	.quad	Numeric.showGFloatAlt_entry
	.quad	0
	.quad	21474836494
	.quad	12884901911
	.quad	S43WU_srt+176


==================== Asm code ====================
2018-03-16 15:58:56.621084707 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl1_r43OI_bytes:
	.asciz "Numeric.showIntAtBase: applied to negative number "


==================== Asm code ====================
2018-03-16 15:58:56.625500159 UTC

.section .data
.align 8
.align 1
.globl Numeric.$wlvl_closure
.type Numeric.$wlvl_closure, @object
Numeric.$wlvl_closure:
	.quad	Numeric.$wlvl_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.626341701 UTC

.section .text
.align 8
sat_s43RF_entry:
_c45jd:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c45je
_c45jf:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c45ja_info,-24(%rbp)
	movl $GHC.Types.[]_closure+1,%edi
	movq 16(%rbx),%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
_c45je:
	jmp *-16(%r13)
	.size sat_s43RF_entry, .-sat_s43RF_entry


==================== Asm code ====================
2018-03-16 15:58:56.626982163 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43RF_info:
	.quad	sat_s43RF_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:58:56.627685779 UTC

.section .text
.align 8
_c45ja:
_c45ja:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c45ji
_c45jh:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c45ji:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c45ja, .-_c45ja


==================== Asm code ====================
2018-03-16 15:58:56.628327385 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45ja_info:
	.quad	_c45ja
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.629114692 UTC

.section .text
.align 8
.globl Numeric.$wlvl_entry
.type Numeric.$wlvl_entry, @object
Numeric.$wlvl_entry:
_c45jl:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c45jm
_c45jn:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c45jp
_c45jo:
	movq $sat_s43RF_info,-16(%r12)
	movq %r14,(%r12)
	movq $block_c45jj_info,-8(%rbp)
	leaq -16(%r12),%rsi
	movl $lvl1_r43OI_bytes,%r14d
	addq $-8,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_c45jp:
	movq $24,904(%r13)
_c45jm:
	movl $Numeric.$wlvl_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.$wlvl_entry, .-Numeric.$wlvl_entry


==================== Asm code ====================
2018-03-16 15:58:56.629926202 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.$wlvl_info
.type Numeric.$wlvl_info, @object
Numeric.$wlvl_info:
	.quad	Numeric.$wlvl_entry
	.quad	0
	.quad	1103806595086
	.quad	4294967300
	.quad	S43WU_srt+136


==================== Asm code ====================
2018-03-16 15:58:56.630613647 UTC

.section .text
.align 8
_c45jj:
_c45jj:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size _c45jj, .-_c45jj


==================== Asm code ====================
2018-03-16 15:58:56.631199721 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45jj_info:
	.quad	_c45jj
	.quad	0
	.quad	4294967326
	.quad	S43WU_srt+136


==================== Asm code ====================
2018-03-16 15:58:56.632866159 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl2_r43OJ_bytes:
	.asciz "Numeric.showIntAtBase: applied to unsupported base "


==================== Asm code ====================
2018-03-16 15:58:56.636735754 UTC

.section .data
.align 8
.align 1
.globl Numeric.showIntAtBase2_closure
.type Numeric.showIntAtBase2_closure, @object
Numeric.showIntAtBase2_closure:
	.quad	Numeric.showIntAtBase2_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.637596758 UTC

.section .text
.align 8
sat_s43RJ_entry:
_c45jS:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45jT
_c45jU:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Show.show_entry
_c45jT:
	jmp *-16(%r13)
	.size sat_s43RJ_entry, .-sat_s43RJ_entry


==================== Asm code ====================
2018-03-16 15:58:56.638248371 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43RJ_info:
	.quad	sat_s43RJ_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:58:56.639096018 UTC

.section .text
.align 8
.globl Numeric.showIntAtBase2_entry
.type Numeric.showIntAtBase2_entry, @object
Numeric.showIntAtBase2_entry:
_c45jX:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c45jY
_c45jZ:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c45k1
_c45k0:
	movq $sat_s43RJ_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq $block_c45jV_info,-8(%rbp)
	leaq -24(%r12),%rsi
	movl $lvl1_r43OI_bytes,%r14d
	addq $-8,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_c45k1:
	movq $32,904(%r13)
_c45jY:
	movl $Numeric.showIntAtBase2_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.showIntAtBase2_entry, .-Numeric.showIntAtBase2_entry


==================== Asm code ====================
2018-03-16 15:58:56.639832485 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showIntAtBase2_info
.type Numeric.showIntAtBase2_info, @object
Numeric.showIntAtBase2_info:
	.quad	Numeric.showIntAtBase2_entry
	.quad	0
	.quad	2203318222862
	.quad	8589934607
	.quad	S43WU_srt+136


==================== Asm code ====================
2018-03-16 15:58:56.640981607 UTC

.section .text
.align 8
_c45jV:
_c45jV:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size _c45jV, .-_c45jV


==================== Asm code ====================
2018-03-16 15:58:56.641704463 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45jV_info:
	.quad	_c45jV
	.quad	0
	.quad	4294967326
	.quad	S43WU_srt+136


==================== Asm code ====================
2018-03-16 15:58:56.645534392 UTC

.section .data
.align 8
.align 1
.globl Numeric.showIntAtBase1_closure
.type Numeric.showIntAtBase1_closure, @object
Numeric.showIntAtBase1_closure:
	.quad	Numeric.showIntAtBase1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.646323466 UTC

.section .text
.align 8
sat_s43RN_entry:
_c45kq:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45kr
_c45ks:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Show.show_entry
_c45kr:
	jmp *-16(%r13)
	.size sat_s43RN_entry, .-sat_s43RN_entry


==================== Asm code ====================
2018-03-16 15:58:56.646954826 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43RN_info:
	.quad	sat_s43RN_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:58:56.647750878 UTC

.section .text
.align 8
.globl Numeric.showIntAtBase1_entry
.type Numeric.showIntAtBase1_entry, @object
Numeric.showIntAtBase1_entry:
_c45kv:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c45kw
_c45kx:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c45kz
_c45ky:
	movq $sat_s43RN_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq $block_c45kt_info,-8(%rbp)
	leaq -24(%r12),%rsi
	movl $lvl2_r43OJ_bytes,%r14d
	addq $-8,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_c45kz:
	movq $32,904(%r13)
_c45kw:
	movl $Numeric.showIntAtBase1_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.showIntAtBase1_entry, .-Numeric.showIntAtBase1_entry


==================== Asm code ====================
2018-03-16 15:58:56.648429335 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showIntAtBase1_info
.type Numeric.showIntAtBase1_info, @object
Numeric.showIntAtBase1_info:
	.quad	Numeric.showIntAtBase1_entry
	.quad	0
	.quad	4402341478414
	.quad	8589934607
	.quad	S43WU_srt+136


==================== Asm code ====================
2018-03-16 15:58:56.649040848 UTC

.section .text
.align 8
_c45kt:
_c45kt:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size _c45kt, .-_c45kt


==================== Asm code ====================
2018-03-16 15:58:56.649878783 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45kt_info:
	.quad	_c45kt
	.quad	0
	.quad	4294967326
	.quad	S43WU_srt+136


==================== Asm code ====================
2018-03-16 15:58:56.651622652 UTC

.section .data
.align 8
.align 1
sat_s43RP_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:58:56.653382135 UTC

.section .data
.align 8
.align 1
sat_s43RQ_closure:
	.quad	:_con_info
	.quad	sat_s43RP_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.656140929 UTC

.section .data
.align 8
.align 1
.globl Numeric.showIntAtBase3_closure
.type Numeric.showIntAtBase3_closure, @object
Numeric.showIntAtBase3_closure:
	.quad	Numeric.showIntAtBase3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.657055898 UTC

.section .text
.align 8
.globl Numeric.showIntAtBase3_entry
.type Numeric.showIntAtBase3_entry, @object
Numeric.showIntAtBase3_entry:
_c45kY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45kZ
_c45l0:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c45kX
_c45kW:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $sat_s43RQ_closure+2,%esi
	movl $GHC.Types.True_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_c45kZ:
	jmp *-16(%r13)
_c45kX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showIntAtBase3_entry, .-Numeric.showIntAtBase3_entry


==================== Asm code ====================
2018-03-16 15:58:56.657878502 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showIntAtBase3_info
.type Numeric.showIntAtBase3_info, @object
Numeric.showIntAtBase3_info:
	.quad	Numeric.showIntAtBase3_entry
	.quad	0
	.quad	4294967317
	.quad	S43WU_srt+224


==================== Asm code ====================
2018-03-16 15:58:56.671793558 UTC

.section .data
.align 8
.align 1
.globl Numeric.showIntAtBase_closure
.type Numeric.showIntAtBase_closure, @object
Numeric.showIntAtBase_closure:
	.quad	Numeric.showIntAtBase_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.672643255 UTC

.section .text
.align 8
$dNum_s43RY_entry:
_c45m4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45m5
_c45m6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c45m5:
	jmp *-16(%r13)
	.size $dNum_s43RY_entry, .-$dNum_s43RY_entry


==================== Asm code ====================
2018-03-16 15:58:56.673308248 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s43RY_info:
	.quad	$dNum_s43RY_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:58:56.674051788 UTC

.section .text
.align 8
sat_s43S0_entry:
_c45m9:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45ma
_c45mb:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $Numeric.showIntAtBase3_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c45ma:
	jmp *-16(%r13)
	.size sat_s43S0_entry, .-sat_s43S0_entry


==================== Asm code ====================
2018-03-16 15:58:56.674689398 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43S0_info:
	.quad	sat_s43S0_entry
	.quad	1
	.quad	4294967312
	.quad	S43WU_srt+232


==================== Asm code ====================
2018-03-16 15:58:56.675380321 UTC

.section .text
.align 8
sat_s43S2_entry:
_c45me:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45mf
_c45mg:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $Numeric.showHFloat16_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c45mf:
	jmp *-16(%r13)
	.size sat_s43S2_entry, .-sat_s43S2_entry


==================== Asm code ====================
2018-03-16 15:58:56.676037628 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43S2_info:
	.quad	sat_s43S2_entry
	.quad	1
	.quad	4294967312
	.quad	S43WU_srt+144


==================== Asm code ====================
2018-03-16 15:58:56.676716193 UTC

.section .text
.align 8
lvl5_s43S7_entry:
_c45mj:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45mk
_c45ml:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $Numeric.showHFloat16_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c45mk:
	jmp *-16(%r13)
	.size lvl5_s43S7_entry, .-lvl5_s43S7_entry


==================== Asm code ====================
2018-03-16 15:58:56.677533253 UTC

.section .data.rel.ro
.align 8
.align 1
lvl5_s43S7_info:
	.quad	lvl5_s43S7_entry
	.quad	1
	.quad	4294967312
	.quad	S43WU_srt+144


==================== Asm code ====================
2018-03-16 15:58:56.678295691 UTC

.section .text
.align 8
sat_s43Sf_entry:
_c45mq:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c45my
_c45mz:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c45mo_info,-24(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.toInteger_entry
_c45my:
	jmp *-16(%r13)
	.size sat_s43Sf_entry, .-sat_s43Sf_entry


==================== Asm code ====================
2018-03-16 15:58:56.679730999 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43Sf_info:
	.quad	sat_s43Sf_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:58:56.680473404 UTC

.section .text
.align 8
_c45mo:
_c45mo:
	movq $block_c45mt_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.integerToInt_entry
	.size _c45mo, .-_c45mo


==================== Asm code ====================
2018-03-16 15:58:56.681003559 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45mo_info:
	.quad	_c45mo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.681819584 UTC

.section .text
.align 8
_c45mt:
_c45mt:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c45mD
_c45mC:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c45mD:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c45mt, .-_c45mt


==================== Asm code ====================
2018-03-16 15:58:56.682365077 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45mt_info:
	.quad	_c45mt
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.68317391 UTC

.section .text
.align 8
.globl Numeric.showIntAtBase_entry
.type Numeric.showIntAtBase_entry, @object
Numeric.showIntAtBase_entry:
_c45mE:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _c45mF
_c45mG:
	movq $block_c45lc_info,-48(%rbp)
	movq %r14,%rax
	movq %rax,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.$p1Integral_entry
_c45mF:
	movl $Numeric.showIntAtBase_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.showIntAtBase_entry, .-Numeric.showIntAtBase_entry


==================== Asm code ====================
2018-03-16 15:58:56.683835171 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showIntAtBase_info
.type Numeric.showIntAtBase_info, @object
Numeric.showIntAtBase_info:
	.quad	Numeric.showIntAtBase_entry
	.quad	0
	.quad	29691108917262
	.quad	25769803802
	.quad	S43WU_srt+144


==================== Asm code ====================
2018-03-16 15:58:56.684588025 UTC

.section .text
.align 8
_c45lc:
_c45lc:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c45mJ
_c45mI:
	movq $$dNum_s43RY_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c45li_info,-8(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p2Real_entry
_c45mJ:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c45lc, .-_c45lc


==================== Asm code ====================
2018-03-16 15:58:56.685194815 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45lc_info:
	.quad	_c45lc
	.quad	6
	.quad	12098922872862
	.quad	S43WU_srt+144


==================== Asm code ====================
2018-03-16 15:58:56.686291218 UTC

.section .text
.align 8
_c45li:
_c45li:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c45mM
_c45mL:
	movq $sat_s43S0_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c45lo_info,-8(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-32(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-24(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rbx,(%rbp)
	addq $-32,%rbp
	jmp GHC.Classes.<=_entry
_c45mM:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c45li, .-_c45li


==================== Asm code ====================
2018-03-16 15:58:56.686929046 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45li_info:
	.quad	_c45li
	.quad	7
	.quad	12098922872862
	.quad	S43WU_srt+144


==================== Asm code ====================
2018-03-16 15:58:56.687741836 UTC

.section .text
.align 8
_c45lo:
_c45lo:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c45mO
_c45nn:
	movq 40(%rbp),%rsi
	movq 32(%rbp),%r14
	addq $72,%rbp
	jmp Numeric.showIntAtBase1_entry
_c45mR:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c45mO:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c45mR
_c45mQ:
	movq $sat_s43S2_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c45lu_info,(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.<_entry
	.size _c45lo, .-_c45lo


==================== Asm code ====================
2018-03-16 15:58:56.688414078 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45lo_info:
	.quad	_c45lo
	.quad	8
	.quad	3302829850654
	.quad	S43WU_srt+144


==================== Asm code ====================
2018-03-16 15:58:56.689200574 UTC

.section .text
.align 8
_c45lu:
_c45lu:
	movq 56(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c45mU
_c45nj:
	movq %rax,%rsi
	movq 32(%rbp),%r14
	addq $72,%rbp
	jmp Numeric.showIntAtBase2_entry
_c45mU:
	movq $block_c45ly_info,(%rbp)
	movq 24(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rax,-16(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.quotRem_entry
	.size _c45lu, .-_c45lu


==================== Asm code ====================
2018-03-16 15:58:56.689944395 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45lu_info:
	.quad	_c45lu
	.quad	8
	.quad	1103806595102
	.quad	S43WU_srt+144


==================== Asm code ====================
2018-03-16 15:58:56.690787549 UTC

.section .text
.align 8
_c45ly:
_c45ly:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c45mX
_c45mW:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $lvl5_s43S7_info,-16(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,(%r12)
	movq 8(%rbp),%rcx
	movq $block_c45lE_info,8(%rbp)
	movq %rcx,%r14
	movq %rbx,16(%rbp)
	movq %rax,32(%rbp)
	leaq -16(%r12),%rax
	movq %rax,56(%rbp)
	addq $8,%rbp
	jmp GHC.Classes.$p1Ord_entry
_c45mX:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c45ly, .-_c45ly


==================== Asm code ====================
2018-03-16 15:58:56.691502533 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45ly_info:
	.quad	_c45ly
	.quad	4616
	.quad	4294967326
	.quad	S43WU_srt+144


==================== Asm code ====================
2018-03-16 15:58:56.692127823 UTC

.section .text
.align 8
_c45lE:
_c45lE:
	movq 56(%rbp),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	movq 24(%rbp),%rax
	movq %rax,24(%rbp)
	movq %rbx,56(%rbp)
	jmp _c45lL
	.size _c45lE, .-_c45lE


==================== Asm code ====================
2018-03-16 15:58:56.692675696 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45lE_info:
	.quad	_c45lE
	.quad	7
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.693515338 UTC

.section .text
.align 8
_c45lL:
_c45lL:
	addq $32,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c45n1
_c45n0:
	movq $sat_s43Sf_info,-24(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	movq $block_c45lP_info,-8(%rbp)
	leaq -24(%r12),%r14
	movq 40(%rbp),%rbx
	addq $-8,%rbp
	jmp stg_ap_p_fast
_c45n1:
	movq $32,904(%r13)
	movq $block_c45lK_info,8(%rbp)
	movq (%rbp),%rsi
	movq %rax,%r14
	movq 24(%rbp),%rbx
	addq $8,%rbp
	jmp stg_gc_ppp
	.size _c45lL, .-_c45lL


==================== Asm code ====================
2018-03-16 15:58:56.69423481 UTC

.section .text
.align 8
_c45lK:
_c45lK:
	movq %rbx,16(%rbp)
	movq %r14,(%rbp)
	movq %rsi,-8(%rbp)
	addq $-8,%rbp
	jmp _c45lL
	.size _c45lK, .-_c45lK


==================== Asm code ====================
2018-03-16 15:58:56.694798168 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45lK_info:
	.quad	_c45lK
	.quad	134
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.695487797 UTC

.section .text
.align 8
_c45lP:
_c45lP:
	movq $block_c45lT_info,(%rbp)
	movq 64(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,16(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.==_entry
	.size _c45lP, .-_c45lP


==================== Asm code ====================
2018-03-16 15:58:56.696127332 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45lP_info:
	.quad	_c45lP
	.quad	136
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.696952509 UTC

.section .text
.align 8
_c45lT:
_c45lT:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c45n5
_c45nc:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c45nf
_c45ne:
	movq $:_con_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c45nf:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c45n5:
	movq $block_c45lX_info,(%rbp)
	movq 24(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.quotRem_entry
	.size _c45lT, .-_c45lT


==================== Asm code ====================
2018-03-16 15:58:56.697783475 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45lT_info:
	.quad	_c45lT
	.quad	8
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.698496095 UTC

.section .text
.align 8
_c45lX:
_c45lX:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c45n8
_c45n7:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $:_con_info,-16(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,(%r12)
	movq %rax,32(%rbp)
	movq %rbx,16(%rbp)
	leaq -14(%r12),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _c45lL
_c45n8:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c45lX, .-_c45lX


==================== Asm code ====================
2018-03-16 15:58:56.699168046 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45lX_info:
	.quad	_c45lX
	.quad	520
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.70084505 UTC

.section .data
.align 8
.align 1
sat_s43Sn_closure:
	.quad	GHC.Types.I#_con_info
	.quad	16


==================== Asm code ====================
2018-03-16 15:58:56.703000514 UTC

.section .data
.align 8
.align 1
sat_s43So_closure:
	.quad	:_con_info
	.quad	sat_s43Sn_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.70590497 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHex1_closure
.type Numeric.showHex1_closure, @object
Numeric.showHex1_closure:
	.quad	Numeric.showHex1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.706863501 UTC

.section .text
.align 8
.globl Numeric.showHex1_entry
.type Numeric.showHex1_entry, @object
Numeric.showHex1_entry:
_c45pc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45pd
_c45pe:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c45pb
_c45pa:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $sat_s43So_closure+2,%esi
	movl $GHC.Types.True_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_c45pd:
	jmp *-16(%r13)
_c45pb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showHex1_entry, .-Numeric.showHex1_entry


==================== Asm code ====================
2018-03-16 15:58:56.707572831 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHex1_info
.type Numeric.showHex1_info, @object
Numeric.showHex1_info:
	.quad	Numeric.showHex1_entry
	.quad	0
	.quad	4294967317
	.quad	S43WU_srt+248


==================== Asm code ====================
2018-03-16 15:58:56.711624545 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHex_closure
.type Numeric.showHex_closure, @object
Numeric.showHex_closure:
	.quad	Numeric.showHex_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.713158162 UTC

.section .text
.align 8
sat_s43St_entry:
_c45pw:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45pA
_c45pB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c45pu_info,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$p1Integral_entry
_c45pA:
	jmp *-16(%r13)
	.size sat_s43St_entry, .-sat_s43St_entry


==================== Asm code ====================
2018-03-16 15:58:56.714351902 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43St_info:
	.quad	sat_s43St_entry
	.quad	1
	.quad	4294967312
	.quad	S43WU_srt+256


==================== Asm code ====================
2018-03-16 15:58:56.715487844 UTC

.section .text
.align 8
_c45pu:
_c45pu:
	movq $block_c45pz_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c45pu, .-_c45pu


==================== Asm code ====================
2018-03-16 15:58:56.716347799 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45pu_info:
	.quad	_c45pu
	.quad	0
	.quad	4294967326
	.quad	S43WU_srt+256


==================== Asm code ====================
2018-03-16 15:58:56.717451539 UTC

.section .text
.align 8
_c45pz:
_c45pz:
	movq %rbx,%r14
	movq $stg_ap_p_info,-8(%rbp)
	movq $Numeric.showHex1_closure,(%rbp)
	addq $-8,%rbp
	jmp GHC.Num.fromInteger_entry
	.size _c45pz, .-_c45pz


==================== Asm code ====================
2018-03-16 15:58:56.718397156 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45pz_info:
	.quad	_c45pz
	.quad	0
	.quad	4294967326
	.quad	S43WU_srt+256


==================== Asm code ====================
2018-03-16 15:58:56.719632349 UTC

.section .text
.align 8
.globl Numeric.showHex_entry
.type Numeric.showHex_entry, @object
Numeric.showHex_entry:
_c45pH:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c45pL
_c45pK:
	movq $sat_s43St_info,-16(%r12)
	movq %r14,(%r12)
	movl $GHC.Show.intToDigit_closure+1,%r8d
	leaq -16(%r12),%rdi
	movl $Numeric.showIntAtBase_closure+6,%ebx
	jmp stg_ap_pppp_fast
_c45pL:
	movq $24,904(%r13)
	movl $Numeric.showHex_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.showHex_entry, .-Numeric.showHex_entry


==================== Asm code ====================
2018-03-16 15:58:56.720718961 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHex_info
.type Numeric.showHex_info, @object
Numeric.showHex_info:
	.quad	Numeric.showHex_entry
	.quad	0
	.quad	124554051598
	.quad	8589934607
	.quad	S43WU_srt+240


==================== Asm code ====================
2018-03-16 15:58:56.723509091 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Numeric.$trModule4_bytes
.type Numeric.$trModule4_bytes, @object
Numeric.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 15:58:56.727709251 UTC

.section .data
.align 8
.align 1
loc_r43OK_closure:
	.quad	loc_r43OK_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.729020957 UTC

.section .text
.align 8
loc_r43OK_entry:
_c45q7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45q8
_c45q9:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c45q6
_c45q5:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Numeric.$trModule4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c45q8:
	jmp *-16(%r13)
_c45q6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size loc_r43OK_entry, .-loc_r43OK_entry


==================== Asm code ====================
2018-03-16 15:58:56.729989436 UTC

.section .data.rel.ro
.align 8
.align 1
loc_r43OK_info:
	.quad	loc_r43OK_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:58:56.732024268 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Numeric.$trModule2_bytes
.type Numeric.$trModule2_bytes, @object
Numeric.$trModule2_bytes:
	.asciz "Numeric"


==================== Asm code ====================
2018-03-16 15:58:56.736407099 UTC

.section .data
.align 8
.align 1
loc1_r43OL_closure:
	.quad	loc1_r43OL_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.737969543 UTC

.section .text
.align 8
loc1_r43OL_entry:
_c45qo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45qp
_c45qq:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c45qn
_c45qm:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Numeric.$trModule2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c45qp:
	jmp *-16(%r13)
_c45qn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size loc1_r43OL_entry, .-loc1_r43OL_entry


==================== Asm code ====================
2018-03-16 15:58:56.739142314 UTC

.section .data.rel.ro
.align 8
.align 1
loc1_r43OL_info:
	.quad	loc1_r43OL_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:58:56.741588983 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
loc2_r43OM_bytes:
	.asciz "Numeric.hs"


==================== Asm code ====================
2018-03-16 15:58:56.7460662 UTC

.section .data
.align 8
.align 1
loc3_r43ON_closure:
	.quad	loc3_r43ON_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.747520981 UTC

.section .text
.align 8
loc3_r43ON_entry:
_c45qF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45qG
_c45qH:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c45qE
_c45qD:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $loc2_r43OM_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c45qG:
	jmp *-16(%r13)
_c45qE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size loc3_r43ON_entry, .-loc3_r43ON_entry


==================== Asm code ====================
2018-03-16 15:58:56.748510509 UTC

.section .data.rel.ro
.align 8
.align 1
loc3_r43ON_info:
	.quad	loc3_r43ON_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:58:56.751235635 UTC

.section .data
.align 8
.align 1
loc4_r43OO_closure:
	.quad	GHC.Types.I#_con_info
	.quad	241


==================== Asm code ====================
2018-03-16 15:58:56.753909557 UTC

.section .data
.align 8
.align 1
loc5_r43OP_closure:
	.quad	GHC.Types.I#_con_info
	.quad	22


==================== Asm code ====================
2018-03-16 15:58:56.756621163 UTC

.section .data
.align 8
.align 1
loc6_r43OQ_closure:
	.quad	GHC.Types.I#_con_info
	.quad	75


==================== Asm code ====================
2018-03-16 15:58:56.759843635 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
$dIP_r43OR_bytes:
	.asciz "error"


==================== Asm code ====================
2018-03-16 15:58:56.764193065 UTC

.section .data
.align 8
.align 1
$dIP1_r43OS_closure:
	.quad	$dIP1_r43OS_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.765601306 UTC

.section .text
.align 8
$dIP1_r43OS_entry:
_c45qZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45r0
_c45r1:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c45qY
_c45qX:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $$dIP_r43OR_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c45r0:
	jmp *-16(%r13)
_c45qY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size $dIP1_r43OS_entry, .-$dIP1_r43OS_entry


==================== Asm code ====================
2018-03-16 15:58:56.766642929 UTC

.section .data.rel.ro
.align 8
.align 1
$dIP1_r43OS_info:
	.quad	$dIP1_r43OS_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:58:56.769420997 UTC

.section .data
.align 8
.align 1
$dIP2_r43OT_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	loc_r43OK_closure
	.quad	loc1_r43OL_closure
	.quad	loc3_r43ON_closure
	.quad	loc4_r43OO_closure+1
	.quad	loc5_r43OP_closure+1
	.quad	loc4_r43OO_closure+1
	.quad	loc6_r43OQ_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.772168425 UTC

.section .data
.align 8
.align 1
$dIP3_r43OU_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	$dIP1_r43OS_closure
	.quad	$dIP2_r43OT_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.774641319 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl3_r43OV_bytes:
	.asciz "Impossible happened: showHFloat: "


==================== Asm code ====================
2018-03-16 15:58:56.777414302 UTC

.section .data
.align 8
.align 1
lvl4_r43OW_closure:
	.quad	:_con_info
	.quad	GHC.Show.$fShow(,)2_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:58:56.786969717 UTC

.section .data
.align 8
.align 1
$wlvl2_r43OX_closure:
	.quad	$wlvl2_r43OX_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.788087827 UTC

.section .text
.align 8
sat_s43SB_entry:
_c45rt:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c45ru
_c45rv:
	movq $block_c45rq_info,-8(%rbp)
	movq %r14,%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	addq $-8,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
_c45ru:
	jmp *-8(%r13)
	.size sat_s43SB_entry, .-sat_s43SB_entry


==================== Asm code ====================
2018-03-16 15:58:56.788901221 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43SB_info:
	.quad	sat_s43SB_entry
	.quad	4294967296
	.quad	10
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:58:56.789897375 UTC

.section .text
.align 8
_c45rq:
_c45rq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c45ry
_c45rx:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c45ry:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c45rq, .-_c45rq


==================== Asm code ====================
2018-03-16 15:58:56.790824804 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45rq_info:
	.quad	_c45rq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.79173243 UTC

.section .text
.align 8
sat_s43Sw_entry:
_c45rF:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Show.$fShowInt_$cshowList_entry
	.size sat_s43Sw_entry, .-sat_s43Sw_entry


==================== Asm code ====================
2018-03-16 15:58:56.79253083 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43Sw_info:
	.quad	sat_s43Sw_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:58:56.793701137 UTC

.section .text
.align 8
sat_s43SE_entry:
_c45rJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45rK
_c45rL:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c45rN
_c45rM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s43SB_info,-72(%r12)
	movq %rbx,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -71(%r12),%rbx
	movq %rbx,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	movq $sat_s43Sw_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -54(%r12),%rax
	movq %rax,(%r12)
	movl $lvl4_r43OW_closure+2,%esi
	leaq -14(%r12),%r14
	addq $-16,%rbp
	jmp GHC.Show.$fShow(,)_go1_entry
_c45rN:
	movq $80,904(%r13)
_c45rK:
	jmp *-16(%r13)
	.size sat_s43SE_entry, .-sat_s43SE_entry


==================== Asm code ====================
2018-03-16 15:58:56.794480196 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43SE_info:
	.quad	sat_s43SE_entry
	.quad	4294967297
	.quad	4294967315
	.quad	S43WU_srt+280


==================== Asm code ====================
2018-03-16 15:58:56.795340255 UTC

.section .text
.align 8
$wlvl2_r43OX_entry:
_c45rR:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c45rS
_c45rT:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c45rV
_c45rU:
	movq $sat_s43SE_info,-48(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)4_closure,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	movq $block_c45rP_info,-8(%rbp)
	leaq -14(%r12),%rsi
	movl $lvl3_r43OV_bytes,%r14d
	addq $-8,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_c45rV:
	movq $56,904(%r13)
_c45rS:
	movl $$wlvl2_r43OX_closure,%ebx
	jmp *-8(%r13)
	.size $wlvl2_r43OX_entry, .-$wlvl2_r43OX_entry


==================== Asm code ====================
2018-03-16 15:58:56.796080248 UTC

.section .data.rel.ro
.align 8
.align 1
$wlvl2_r43OX_info:
	.quad	$wlvl2_r43OX_entry
	.quad	0
	.quad	64424509454
	.quad	8589934606
	.quad	S43WU_srt+280


==================== Asm code ====================
2018-03-16 15:58:56.796755347 UTC

.section .text
.align 8
_c45rP:
_c45rP:
	movq %rbx,%rsi
	movl $$dIP3_r43OU_closure+2,%r14d
	addq $8,%rbp
	jmp GHC.Err.error_entry
	.size _c45rP, .-_c45rP


==================== Asm code ====================
2018-03-16 15:58:56.797428122 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45rP_info:
	.quad	_c45rP
	.quad	0
	.quad	12884901918
	.quad	S43WU_srt+288


==================== Asm code ====================
2018-03-16 15:58:56.801538379 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat_allZ_closure
.type Numeric.showHFloat_allZ_closure, @object
Numeric.showHFloat_allZ_closure:
	.quad	Numeric.showHFloat_allZ_info


==================== Asm code ====================
2018-03-16 15:58:56.802344726 UTC

.section .text
.align 8
.globl Numeric.showHFloat_allZ_entry
.type Numeric.showHFloat_allZ_entry, @object
Numeric.showHFloat_allZ_entry:
_c45sB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45sC
_u45sU:
	movq %r14,-8(%rbp)
	addq $-8,%rbp
	jmp _c45sr
_c45sC:
	movl $Numeric.showHFloat_allZ_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.showHFloat_allZ_entry, .-Numeric.showHFloat_allZ_entry


==================== Asm code ====================
2018-03-16 15:58:56.802995893 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat_allZ_info
.type Numeric.showHFloat_allZ_info, @object
Numeric.showHFloat_allZ_info:
	.quad	Numeric.showHFloat_allZ_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:58:56.803683348 UTC

.section .text
.align 8
_c45sr:
_c45sr:
	movq (%rbp),%rax
	movq $block_c45su_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c45su
_c45sv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c45sr, .-_c45sr


==================== Asm code ====================
2018-03-16 15:58:56.804472761 UTC

.section .text
.align 8
_c45su:
_c45su:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c45sy
_c45sz:
	movq $block_c45sJ_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c45sJ
_c45sL:
	movq (%rbx),%rax
	jmp *(%rax)
_c45sy:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c45su, .-_c45su


==================== Asm code ====================
2018-03-16 15:58:56.805161421 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45su_info:
	.quad	_c45su
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.805974176 UTC

.section .text
.align 8
_c45sJ:
_c45sJ:
	cmpq $0,7(%rbx)
	je _c45sT
_c45sS:
	movl $GHC.Types.False_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c45sT:
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _c45sr
	.size _c45sJ, .-_c45sJ


==================== Asm code ====================
2018-03-16 15:58:56.806598596 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45sJ_info:
	.quad	_c45sJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.812388006 UTC

.section .data
.align 8
.align 1
$wshowIt1_r43OY_closure:
	.quad	$wshowIt1_r43OY_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.813306389 UTC

.section .text
.align 8
$wshowIt1_r43OY_entry:
_c45tC:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45tD
_u45tP:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp _c45tl
_c45tD:
	movl $$wshowIt1_r43OY_closure,%ebx
	jmp *-8(%r13)
	.size $wshowIt1_r43OY_entry, .-$wshowIt1_r43OY_entry


==================== Asm code ====================
2018-03-16 15:58:56.813899389 UTC

.section .data.rel.ro
.align 8
.align 1
$wshowIt1_r43OY_info:
	.quad	$wshowIt1_r43OY_entry
	.quad	0
	.quad	12884901902
	.quad	12884901907
	.quad	S43WU_srt+312


==================== Asm code ====================
2018-03-16 15:58:56.814576666 UTC

.section .text
.align 8
_c45tl:
_c45tl:
	movq $block_c45to_info,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c45to
_c45tp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c45tl, .-_c45tl


==================== Asm code ====================
2018-03-16 15:58:56.815239522 UTC

.section .text
.align 8
_c45to:
_c45to:
	movq $block_c45tt_info,(%rbp)
	movq 7(%rbx),%r14
	jmp GHC.Show.$wintToDigit_entry
	.size _c45to, .-_c45to


==================== Asm code ====================
2018-03-16 15:58:56.815834761 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45to_info:
	.quad	_c45to
	.quad	195
	.quad	4294967326
	.quad	S43WU_srt+312


==================== Asm code ====================
2018-03-16 15:58:56.816970137 UTC

.section .text
.align 8
_c45tt:
_c45tt:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c45tI
_c45tH:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	testq %rcx,%rcx
	je _c45tO
_c45tK:
	movl $16,%edx
	movq %rax,%rsi
	movq %rcx,%rax
	movq %rdx,%rcx
	cqto
	idivq %rcx
	movq $GHC.Types.C#_con_info,-48(%r12)
	movq %rbx,-40(%r12)
	movq $:_con_info,-32(%r12)
	leaq -47(%r12),%rbx
	movq %rbx,-24(%r12)
	movq %rsi,-16(%r12)
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rdx,(%r12)
	movq %rax,8(%rbp)
	leaq -7(%r12),%rax
	movq %rax,16(%rbp)
	leaq -30(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c45tl
_c45tO:
	movq $GHC.Types.C#_con_info,-48(%r12)
	movq %rbx,-40(%r12)
	movq $:_con_info,-32(%r12)
	leaq -47(%r12),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq -30(%r12),%rax
	addq $-16,%r12
	movq %rax,%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c45tI:
	movq $56,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c45tt, .-_c45tt


==================== Asm code ====================
2018-03-16 15:58:56.81836133 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45tt_info:
	.quad	_c45tt
	.quad	195
	.quad	4294967326
	.quad	S43WU_srt+312


==================== Asm code ====================
2018-03-16 15:58:56.825816576 UTC

.section .data
.align 8
.align 1
$wshowIt2_r43OZ_closure:
	.quad	$wshowIt2_r43OZ_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.82657652 UTC

.section .text
.align 8
$wshowIt2_r43OZ_entry:
_c45uw:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45ux
_u45uJ:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp _c45uf
_c45ux:
	movl $$wshowIt2_r43OZ_closure,%ebx
	jmp *-8(%r13)
	.size $wshowIt2_r43OZ_entry, .-$wshowIt2_r43OZ_entry


==================== Asm code ====================
2018-03-16 15:58:56.827185045 UTC

.section .data.rel.ro
.align 8
.align 1
$wshowIt2_r43OZ_info:
	.quad	$wshowIt2_r43OZ_entry
	.quad	0
	.quad	21474836494
	.quad	12884901907
	.quad	S43WU_srt+312


==================== Asm code ====================
2018-03-16 15:58:56.827841639 UTC

.section .text
.align 8
_c45uf:
_c45uf:
	movq $block_c45ui_info,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c45ui
_c45uj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c45uf, .-_c45uf


==================== Asm code ====================
2018-03-16 15:58:56.828467092 UTC

.section .text
.align 8
_c45ui:
_c45ui:
	movq $block_c45un_info,(%rbp)
	movq 7(%rbx),%r14
	jmp GHC.Show.$wintToDigit_entry
	.size _c45ui, .-_c45ui


==================== Asm code ====================
2018-03-16 15:58:56.82900506 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45ui_info:
	.quad	_c45ui
	.quad	195
	.quad	4294967326
	.quad	S43WU_srt+312


==================== Asm code ====================
2018-03-16 15:58:56.830264129 UTC

.section .text
.align 8
_c45un:
_c45un:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c45uC
_c45uB:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	testq %rcx,%rcx
	je _c45uI
_c45uE:
	movl $16,%edx
	movq %rax,%rsi
	movq %rcx,%rax
	movq %rdx,%rcx
	cqto
	idivq %rcx
	movq $GHC.Types.C#_con_info,-48(%r12)
	movq %rbx,-40(%r12)
	movq $:_con_info,-32(%r12)
	leaq -47(%r12),%rbx
	movq %rbx,-24(%r12)
	movq %rsi,-16(%r12)
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rdx,(%r12)
	movq %rax,8(%rbp)
	leaq -7(%r12),%rax
	movq %rax,16(%rbp)
	leaq -30(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c45uf
_c45uI:
	movq $GHC.Types.C#_con_info,-48(%r12)
	movq %rbx,-40(%r12)
	movq $:_con_info,-32(%r12)
	leaq -47(%r12),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq -30(%r12),%rax
	addq $-16,%r12
	movq %rax,%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c45uC:
	movq $56,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c45un, .-_c45un


==================== Asm code ====================
2018-03-16 15:58:56.831580971 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45un_info:
	.quad	_c45un
	.quad	195
	.quad	4294967326
	.quad	S43WU_srt+312


==================== Asm code ====================
2018-03-16 15:58:56.839550991 UTC

.section .data
.align 8
.align 1
$wshowIt3_r43P0_closure:
	.quad	$wshowIt3_r43P0_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.840747731 UTC

.section .text
.align 8
$wshowIt3_r43P0_entry:
_c45vq:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45vr
_u45vD:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp _c45v9
_c45vr:
	movl $$wshowIt3_r43P0_closure,%ebx
	jmp *-8(%r13)
	.size $wshowIt3_r43P0_entry, .-$wshowIt3_r43P0_entry


==================== Asm code ====================
2018-03-16 15:58:56.84181059 UTC

.section .data.rel.ro
.align 8
.align 1
$wshowIt3_r43P0_info:
	.quad	$wshowIt3_r43P0_entry
	.quad	0
	.quad	38654705678
	.quad	12884901907
	.quad	S43WU_srt+312


==================== Asm code ====================
2018-03-16 15:58:56.842940123 UTC

.section .text
.align 8
_c45v9:
_c45v9:
	movq $block_c45vc_info,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c45vc
_c45vd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c45v9, .-_c45v9


==================== Asm code ====================
2018-03-16 15:58:56.843912506 UTC

.section .text
.align 8
_c45vc:
_c45vc:
	movq $block_c45vh_info,(%rbp)
	movq 7(%rbx),%r14
	jmp GHC.Show.$wintToDigit_entry
	.size _c45vc, .-_c45vc


==================== Asm code ====================
2018-03-16 15:58:56.844790312 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45vc_info:
	.quad	_c45vc
	.quad	195
	.quad	4294967326
	.quad	S43WU_srt+312


==================== Asm code ====================
2018-03-16 15:58:56.846375951 UTC

.section .text
.align 8
_c45vh:
_c45vh:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c45vw
_c45vv:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	testq %rcx,%rcx
	je _c45vC
_c45vy:
	movl $16,%edx
	movq %rax,%rsi
	movq %rcx,%rax
	movq %rdx,%rcx
	cqto
	idivq %rcx
	movq $GHC.Types.C#_con_info,-48(%r12)
	movq %rbx,-40(%r12)
	movq $:_con_info,-32(%r12)
	leaq -47(%r12),%rbx
	movq %rbx,-24(%r12)
	movq %rsi,-16(%r12)
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rdx,(%r12)
	movq %rax,8(%rbp)
	leaq -7(%r12),%rax
	movq %rax,16(%rbp)
	leaq -30(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c45v9
_c45vC:
	movq $GHC.Types.C#_con_info,-48(%r12)
	movq %rbx,-40(%r12)
	movq $:_con_info,-32(%r12)
	leaq -47(%r12),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq -30(%r12),%rax
	addq $-16,%r12
	movq %rax,%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c45vw:
	movq $56,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c45vh, .-_c45vh


==================== Asm code ====================
2018-03-16 15:58:56.847657601 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45vh_info:
	.quad	_c45vh
	.quad	195
	.quad	4294967326
	.quad	S43WU_srt+312


==================== Asm code ====================
2018-03-16 15:58:56.85467676 UTC

.section .data
.align 8
.align 1
$wshowIt4_r43P1_closure:
	.quad	$wshowIt4_r43P1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.855570509 UTC

.section .text
.align 8
$wshowIt4_r43P1_entry:
_c45wk:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45wl
_u45wx:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp _c45w3
_c45wl:
	movl $$wshowIt4_r43P1_closure,%ebx
	jmp *-8(%r13)
	.size $wshowIt4_r43P1_entry, .-$wshowIt4_r43P1_entry


==================== Asm code ====================
2018-03-16 15:58:56.85624022 UTC

.section .data.rel.ro
.align 8
.align 1
$wshowIt4_r43P1_info:
	.quad	$wshowIt4_r43P1_entry
	.quad	0
	.quad	73014444046
	.quad	12884901907
	.quad	S43WU_srt+312


==================== Asm code ====================
2018-03-16 15:58:56.856932912 UTC

.section .text
.align 8
_c45w3:
_c45w3:
	movq $block_c45w6_info,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c45w6
_c45w7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c45w3, .-_c45w3


==================== Asm code ====================
2018-03-16 15:58:56.857656359 UTC

.section .text
.align 8
_c45w6:
_c45w6:
	movq $block_c45wb_info,(%rbp)
	movq 7(%rbx),%r14
	jmp GHC.Show.$wintToDigit_entry
	.size _c45w6, .-_c45w6


==================== Asm code ====================
2018-03-16 15:58:56.858265073 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45w6_info:
	.quad	_c45w6
	.quad	195
	.quad	4294967326
	.quad	S43WU_srt+312


==================== Asm code ====================
2018-03-16 15:58:56.859200965 UTC

.section .text
.align 8
_c45wb:
_c45wb:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c45wq
_c45wp:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	testq %rcx,%rcx
	je _c45ww
_c45ws:
	movl $16,%edx
	movq %rax,%rsi
	movq %rcx,%rax
	movq %rdx,%rcx
	cqto
	idivq %rcx
	movq $GHC.Types.C#_con_info,-48(%r12)
	movq %rbx,-40(%r12)
	movq $:_con_info,-32(%r12)
	leaq -47(%r12),%rbx
	movq %rbx,-24(%r12)
	movq %rsi,-16(%r12)
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rdx,(%r12)
	movq %rax,8(%rbp)
	leaq -7(%r12),%rax
	movq %rax,16(%rbp)
	leaq -30(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c45w3
_c45ww:
	movq $GHC.Types.C#_con_info,-48(%r12)
	movq %rbx,-40(%r12)
	movq $:_con_info,-32(%r12)
	leaq -47(%r12),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq -30(%r12),%rax
	addq $-16,%r12
	movq %rax,%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c45wq:
	movq $56,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c45wb, .-_c45wb


==================== Asm code ====================
2018-03-16 15:58:56.860769916 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45wb_info:
	.quad	_c45wb
	.quad	195
	.quad	4294967326
	.quad	S43WU_srt+312


==================== Asm code ====================
2018-03-16 15:58:56.875155247 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat_hex_closure
.type Numeric.showHFloat_hex_closure, @object
Numeric.showHFloat_hex_closure:
	.quad	Numeric.showHFloat_hex_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.876037737 UTC

.section .text
.align 8
sat_s43UO_entry:
_c45y7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45y8
_c45y9:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Numeric.showHFloat_hex_entry
_c45y8:
	jmp *-16(%r13)
	.size sat_s43UO_entry, .-sat_s43UO_entry


==================== Asm code ====================
2018-03-16 15:58:56.876660518 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43UO_info:
	.quad	sat_s43UO_entry
	.quad	1
	.quad	4294967312
	.quad	S43WU_srt+352


==================== Asm code ====================
2018-03-16 15:58:56.877468192 UTC

.section .text
.align 8
.globl Numeric.showHFloat_hex_entry
.type Numeric.showHFloat_hex_entry, @object
Numeric.showHFloat_hex_entry:
_c45ye:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c45yf
_c45yg:
	movq $block_c45x0_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c45x0
_c45x1:
	movq (%rbx),%rax
	jmp *(%rax)
_c45yf:
	movl $Numeric.showHFloat_hex_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.showHFloat_hex_entry, .-Numeric.showHFloat_hex_entry


==================== Asm code ====================
2018-03-16 15:58:56.878088908 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat_hex_info
.type Numeric.showHFloat_hex_info, @object
Numeric.showHFloat_hex_info:
	.quad	Numeric.showHFloat_hex_entry
	.quad	0
	.quad	4362866433982478
	.quad	4294967301
	.quad	S43WU_srt+200


==================== Asm code ====================
2018-03-16 15:58:56.8788493 UTC

.section .text
.align 8
_c45x0:
_c45x0:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c45yb
_c45yc:
	movq $block_c45x6_info,-8(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c45x6
_c45x7:
	movq (%rbx),%rax
	jmp *(%rax)
_c45yb:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c45x0, .-_c45x0


==================== Asm code ====================
2018-03-16 15:58:56.879459699 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45x0_info:
	.quad	_c45x0
	.quad	0
	.quad	4362866433982494
	.quad	S43WU_srt+200


==================== Asm code ====================
2018-03-16 15:58:56.88026718 UTC

.section .text
.align 8
_c45x6:
_c45x6:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c45yo
_c45yH:
	movq $block_c45xc_info,-8(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c45xc
_c45xd:
	movq (%rbx),%rax
	jmp *(%rax)
_c45yo:
	movq 8(%rbp),%rax
	movq $block_c45yl_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c45yl
_c45yp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c45x6, .-_c45x6


==================== Asm code ====================
2018-03-16 15:58:56.880924192 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45x6_info:
	.quad	_c45x6
	.quad	1
	.quad	4362866433982494
	.quad	S43WU_srt+200


==================== Asm code ====================
2018-03-16 15:58:56.881787538 UTC

.section .text
.align 8
_c45yl:
_c45yl:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c45yv
_c45yu:
	movq 7(%rbx),%rax
	shlq $3,%rax
	testq %rax,%rax
	jge _c45yE
_c45yF:
	addq $-16,%r12
	movq %rax,%r14
	addq $8,%rbp
	jmp Numeric.$wlvl_entry
_c45yE:
	movl $16,%ebx
	cqto
	idivq %rbx
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rdx,(%r12)
	movl $GHC.Types.[]_closure+1,%edi
	leaq -7(%r12),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp $wshowIt4_r43P1_entry
_c45yv:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c45yl, .-_c45yl


==================== Asm code ====================
2018-03-16 15:58:56.882482087 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45yl_info:
	.quad	_c45yl
	.quad	0
	.quad	1125904201809950
	.quad	S43WU_srt+200


==================== Asm code ====================
2018-03-16 15:58:56.883320768 UTC

.section .text
.align 8
_c45xc:
_c45xc:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c45yR
_c45zh:
	movq $block_c45xi_info,-8(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c45xi
_c45xj:
	movq (%rbx),%rax
	jmp *(%rax)
_c45yR:
	movq $block_c45yJ_info,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _c45yJ
_c45yK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c45xc, .-_c45xc


==================== Asm code ====================
2018-03-16 15:58:56.88394767 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45xc_info:
	.quad	_c45xc
	.quad	2
	.quad	3236966527139870
	.quad	S43WU_srt+200


==================== Asm code ====================
2018-03-16 15:58:56.884688362 UTC

.section .text
.align 8
_c45yJ:
_c45yJ:
	movq 8(%rbp),%rax
	movq $block_c45yO_info,8(%rbp)
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c45yO
_c45yT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c45yJ, .-_c45yJ


==================== Asm code ====================
2018-03-16 15:58:56.885365275 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45yJ_info:
	.quad	_c45yJ
	.quad	130
	.quad	562954248388638
	.quad	S43WU_srt+200


==================== Asm code ====================
2018-03-16 15:58:56.886250082 UTC

.section .text
.align 8
_c45yO:
_c45yO:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c45yZ
_c45yY:
	movq 7(%rbx),%rax
	shlq $2,%rax
	movq 8(%rbp),%rbx
	shlq $3,%rbx
	addq %rax,%rbx
	testq %rbx,%rbx
	jge _c45ze
_c45zf:
	addq $-16,%r12
	movq %rbx,%r14
	addq $16,%rbp
	jmp Numeric.$wlvl_entry
_c45ze:
	movl $16,%eax
	movq %rax,%rcx
	movq %rbx,%rax
	cqto
	idivq %rcx
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rdx,(%r12)
	movl $GHC.Types.[]_closure+1,%edi
	leaq -7(%r12),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp $wshowIt3_r43P0_entry
_c45yZ:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c45yO, .-_c45yO


==================== Asm code ====================
2018-03-16 15:58:56.886976182 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45yO_info:
	.quad	_c45yO
	.quad	65
	.quad	562954248388638
	.quad	S43WU_srt+200


==================== Asm code ====================
2018-03-16 15:58:56.887826709 UTC

.section .text
.align 8
_c45xi:
_c45xi:
	movq 24(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c45zw
_c45A3:
	movq $block_c45xo_info,-8(%rbp)
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c45xo
_c45xp:
	movq (%rbx),%rax
	jmp *(%rax)
_c45zw:
	movq $block_c45zj_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c45zj
_c45zk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c45xi, .-_c45xi


==================== Asm code ====================
2018-03-16 15:58:56.888546913 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45xi_info:
	.quad	_c45xi
	.quad	3
	.quad	2674016573718558
	.quad	S43WU_srt+200


==================== Asm code ====================
2018-03-16 15:58:56.889295678 UTC

.section .text
.align 8
_c45zj:
_c45zj:
	movq $block_c45zo_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _c45zo
_c45zp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c45zj, .-_c45zj


==================== Asm code ====================
2018-03-16 15:58:56.889907563 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45zj_info:
	.quad	_c45zj
	.quad	259
	.quad	281479271677982
	.quad	S43WU_srt+200


==================== Asm code ====================
2018-03-16 15:58:56.890652639 UTC

.section .text
.align 8
_c45zo:
_c45zo:
	movq 8(%rbp),%rax
	movq $block_c45zt_info,8(%rbp)
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c45zt
_c45zz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c45zo, .-_c45zo


==================== Asm code ====================
2018-03-16 15:58:56.891256877 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45zo_info:
	.quad	_c45zo
	.quad	387
	.quad	281479271677982
	.quad	S43WU_srt+200


==================== Asm code ====================
2018-03-16 15:58:56.892148235 UTC

.section .text
.align 8
_c45zt:
_c45zt:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c45zF
_c45zE:
	movq 7(%rbx),%rax
	shlq $1,%rax
	movq 8(%rbp),%rbx
	shlq $2,%rbx
	addq %rax,%rbx
	movq 16(%rbp),%rax
	shlq $3,%rax
	addq %rbx,%rax
	testq %rax,%rax
	jge _c45A0
_c45A1:
	addq $-16,%r12
	movq %rax,%r14
	addq $24,%rbp
	jmp Numeric.$wlvl_entry
_c45A0:
	movl $16,%ebx
	cqto
	idivq %rbx
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rdx,(%r12)
	movl $GHC.Types.[]_closure+1,%edi
	leaq -7(%r12),%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp $wshowIt2_r43OZ_entry
_c45zF:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c45zt, .-_c45zt


==================== Asm code ====================
2018-03-16 15:58:56.892876171 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45zt_info:
	.quad	_c45zt
	.quad	194
	.quad	281479271677982
	.quad	S43WU_srt+200


==================== Asm code ====================
2018-03-16 15:58:56.89367087 UTC

.section .text
.align 8
_c45xo:
_c45xo:
	movq $block_c45xt_info,(%rbp)
	movq 7(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _c45xt
_c45xu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c45xo, .-_c45xo


==================== Asm code ====================
2018-03-16 15:58:56.894239466 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45xo_info:
	.quad	_c45xo
	.quad	4
	.quad	2392541597007902
	.quad	S43WU_srt+200


==================== Asm code ====================
2018-03-16 15:58:56.894950548 UTC

.section .text
.align 8
_c45xt:
_c45xt:
	movq $block_c45xy_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c45xy
_c45xz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c45xt, .-_c45xt


==================== Asm code ====================
2018-03-16 15:58:56.895546697 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45xt_info:
	.quad	_c45xt
	.quad	260
	.quad	2392541597007902
	.quad	S43WU_srt+200


==================== Asm code ====================
2018-03-16 15:58:56.896288047 UTC

.section .text
.align 8
_c45xy:
_c45xy:
	movq $block_c45xD_info,(%rbp)
	movq 7(%rbx),%rax
	movq 32(%rbp),%rbx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _c45xD
_c45xE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c45xy, .-_c45xy


==================== Asm code ====================
2018-03-16 15:58:56.896927423 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45xy_info:
	.quad	_c45xy
	.quad	388
	.quad	2392541597007902
	.quad	S43WU_srt+200


==================== Asm code ====================
2018-03-16 15:58:56.89874699 UTC

.section .text
.align 8
_c45xD:
_c45xD:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c45A9
_c45A8:
	leaq 7(%rbx),%rax
	movq 32(%rbp),%rbx
	shlq $1,%rbx
	addq (%rax),%rbx
	movq 16(%rbp),%rax
	shlq $2,%rax
	addq %rbx,%rax
	movq 24(%rbp),%rbx
	shlq $3,%rbx
	addq %rax,%rbx
	testq %rbx,%rbx
	jge _c45Ac
_c45Ad:
	addq $-40,%r12
	movq %rbx,%r14
	addq $40,%rbp
	jmp Numeric.$wlvl_entry
_c45Ac:
	movq 8(%rbp),%rax
	movl $16,%ecx
	movq %rax,%rdx
	movq %rbx,%rax
	movq %rdx,%rbx
	cqto
	idivq %rcx
	movq $sat_s43UO_info,-32(%r12)
	movq %rbx,-16(%r12)
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rdx,(%r12)
	leaq -32(%r12),%rdi
	leaq -7(%r12),%rsi
	movq %rax,%r14
	addq $40,%rbp
	jmp $wshowIt1_r43OY_entry
_c45A9:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c45xD, .-_c45xD


==================== Asm code ====================
2018-03-16 15:58:56.900787861 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45xD_info:
	.quad	_c45xD
	.quad	900
	.quad	2392541597007902
	.quad	S43WU_srt+200


==================== Asm code ====================
2018-03-16 15:58:56.90357458 UTC

.section .data
.align 8
.align 1
sat_s43UP_closure:
	.quad	GHC.Types.I#_con_info
	.quad	2


==================== Asm code ====================
2018-03-16 15:58:56.905426577 UTC

.section .data
.align 8
.align 1
sat_s43UQ_closure:
	.quad	:_con_info
	.quad	sat_s43UP_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.909443855 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat15_closure
.type Numeric.showHFloat15_closure, @object
Numeric.showHFloat15_closure:
	.quad	Numeric.showHFloat15_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.910699725 UTC

.section .text
.align 8
.globl Numeric.showHFloat15_entry
.type Numeric.showHFloat15_entry, @object
Numeric.showHFloat15_entry:
_c45C5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45C6
_c45C7:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c45C4
_c45C3:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $sat_s43UQ_closure+2,%esi
	movl $GHC.Types.True_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_c45C6:
	jmp *-16(%r13)
_c45C4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showHFloat15_entry, .-Numeric.showHFloat15_entry


==================== Asm code ====================
2018-03-16 15:58:56.911646268 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat15_info
.type Numeric.showHFloat15_info, @object
Numeric.showHFloat15_info:
	.quad	Numeric.showHFloat15_entry
	.quad	0
	.quad	4294967317
	.quad	S43WU_srt+360


==================== Asm code ====================
2018-03-16 15:58:56.913929347 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Numeric.showHFloat10_bytes
.type Numeric.showHFloat10_bytes, @object
Numeric.showHFloat10_bytes:
	.asciz "0x0p+0"


==================== Asm code ====================
2018-03-16 15:58:56.917846376 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat9_closure
.type Numeric.showHFloat9_closure, @object
Numeric.showHFloat9_closure:
	.quad	Numeric.showHFloat9_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.919112699 UTC

.section .text
.align 8
.globl Numeric.showHFloat9_entry
.type Numeric.showHFloat9_entry, @object
Numeric.showHFloat9_entry:
_c45Cm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45Cn
_c45Co:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c45Cl
_c45Ck:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Numeric.showHFloat10_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c45Cn:
	jmp *-16(%r13)
_c45Cl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showHFloat9_entry, .-Numeric.showHFloat9_entry


==================== Asm code ====================
2018-03-16 15:58:56.920115676 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat9_info
.type Numeric.showHFloat9_info, @object
Numeric.showHFloat9_info:
	.quad	Numeric.showHFloat9_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:58:56.923290395 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat14_closure
.type Numeric.showHFloat14_closure, @object
Numeric.showHFloat14_closure:
	.quad	Numeric.showHFloat14_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.924259849 UTC

.section .text
.align 8
.globl Numeric.showHFloat14_entry
.type Numeric.showHFloat14_entry, @object
Numeric.showHFloat14_entry:
_c45CA:
	movq %r14,%rsi
	movl $GHC.Types.[]_closure+1,%r14d
	jmp $wlvl2_r43OX_entry
	.size Numeric.showHFloat14_entry, .-Numeric.showHFloat14_entry


==================== Asm code ====================
2018-03-16 15:58:56.925093217 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat14_info
.type Numeric.showHFloat14_info, @object
Numeric.showHFloat14_info:
	.quad	Numeric.showHFloat14_entry
	.quad	0
	.quad	4294967310
	.quad	4294967300
	.quad	S43WU_srt+304


==================== Asm code ====================
2018-03-16 15:58:56.926877248 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Numeric.showHFloat13_bytes
.type Numeric.showHFloat13_bytes, @object
Numeric.showHFloat13_bytes:
	.asciz "0x"


==================== Asm code ====================
2018-03-16 15:58:56.928479509 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Numeric.showHFloat12_bytes
.type Numeric.showHFloat12_bytes, @object
Numeric.showHFloat12_bytes:
	.asciz "p"


==================== Asm code ====================
2018-03-16 15:58:56.930355654 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Numeric.showHFloat11_bytes
.type Numeric.showHFloat11_bytes, @object
Numeric.showHFloat11_bytes:
	.asciz "."


==================== Asm code ====================
2018-03-16 15:58:56.947406064 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat_cvt_closure
.type Numeric.showHFloat_cvt_closure, @object
Numeric.showHFloat_cvt_closure:
	.quad	Numeric.showHFloat_cvt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.948391757 UTC

.section .text
.align 8
sat_s43UZ_entry:
_c45D2:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45D3
_c45D4:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c45D0_info,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$p1Real_entry
_c45D3:
	jmp *-16(%r13)
	.size sat_s43UZ_entry, .-sat_s43UZ_entry


==================== Asm code ====================
2018-03-16 15:58:56.949086481 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43UZ_info:
	.quad	sat_s43UZ_entry
	.quad	1
	.quad	4294967312
	.quad	S43WU_srt+144


==================== Asm code ====================
2018-03-16 15:58:56.949781716 UTC

.section .text
.align 8
_c45D0:
_c45D0:
	movq %rbx,%r14
	movq $stg_ap_p_info,-8(%rbp)
	movq $Numeric.showHFloat16_closure,(%rbp)
	addq $-8,%rbp
	jmp GHC.Num.fromInteger_entry
	.size _c45D0, .-_c45D0


==================== Asm code ====================
2018-03-16 15:58:56.950325538 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45D0_info:
	.quad	_c45D0
	.quad	0
	.quad	4294967326
	.quad	S43WU_srt+144


==================== Asm code ====================
2018-03-16 15:58:56.951063081 UTC

.section .text
.align 8
sat_s43Vm_entry:
_c45DS:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c45E1
_c45E2:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c45DP_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c45DP
_c45DQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c45E1:
	jmp *-16(%r13)
	.size sat_s43Vm_entry, .-sat_s43Vm_entry


==================== Asm code ====================
2018-03-16 15:58:56.951730865 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43Vm_info:
	.quad	sat_s43Vm_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:58:56.952351863 UTC

.section .text
.align 8
_c45DP:
_c45DP:
	movq $block_c45DY_info,(%rbp)
	movl $GHC.Types.[]_closure+1,%edi
	movq 7(%rbx),%rax
	leaq -1(%rax),%rsi
	xorl %r14d,%r14d
	jmp GHC.Show.$wshowSignedInt_entry
	.size _c45DP, .-_c45DP


==================== Asm code ====================
2018-03-16 15:58:56.952903655 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45DP_info:
	.quad	_c45DP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.95403093 UTC

.section .text
.align 8
_c45DY:
_c45DY:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c45E6
_c45E5:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c45E6:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c45DY, .-_c45DY


==================== Asm code ====================
2018-03-16 15:58:56.954686351 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45DY_info:
	.quad	_c45DY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.955446387 UTC

.section .text
.align 8
n_s43Vf_entry:
_c45E8:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c45Ec
_c45Eb:
	movq 16(%rbx),%rax
	movq $sat_s43Vm_info,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	movl $Numeric.showHFloat12_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_c45Ec:
	movq $24,904(%r13)
	jmp *-16(%r13)
	.size n_s43Vf_entry, .-n_s43Vf_entry


==================== Asm code ====================
2018-03-16 15:58:56.95608092 UTC

.section .data.rel.ro
.align 8
.align 1
n_s43Vf_info:
	.quad	n_s43Vf_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:58:56.956819201 UTC

.section .text
.align 8
sat_s43Vp_entry:
_c45En:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45Eo
_c45Ep:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c45El_info,-32(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp Numeric.showHFloat_hex_entry
_c45Eo:
	jmp *-16(%r13)
	.size sat_s43Vp_entry, .-sat_s43Vp_entry


==================== Asm code ====================
2018-03-16 15:58:56.957506926 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43Vp_info:
	.quad	sat_s43Vp_entry
	.quad	2
	.quad	4294967314
	.quad	S43WU_srt+352


==================== Asm code ====================
2018-03-16 15:58:56.958161682 UTC

.section .text
.align 8
_c45El:
_c45El:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Base.++_entry
	.size _c45El, .-_c45El


==================== Asm code ====================
2018-03-16 15:58:56.958725285 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45El_info:
	.quad	_c45El
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:56.95954179 UTC

.section .text
.align 8
sat_s43Vq_entry:
_c45Ex:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c45Ey
_c45Ez:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c45EB
_c45EA:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $n_s43Vf_info,-16(%r12)
	movq %rax,(%r12)
	movq $block_c45Ed_info,-24(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-24,%rbp
	jmp Numeric.showHFloat_allZ_entry
_c45EB:
	movq $24,904(%r13)
_c45Ey:
	jmp *-16(%r13)
	.size sat_s43Vq_entry, .-sat_s43Vq_entry


==================== Asm code ====================
2018-03-16 15:58:56.960310079 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43Vq_info:
	.quad	sat_s43Vq_entry
	.quad	2
	.quad	4294967314
	.quad	S43WU_srt+352


==================== Asm code ====================
2018-03-16 15:58:56.961132009 UTC

.section .text
.align 8
_c45Ed:
_c45Ed:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c45Eu
_c45Ev:
	movq %rax,%rbx
	addq $24,%rbp
	jmp n_s43Vf_entry
_c45EE:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_c45Eu:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c45EE
_c45ED:
	movq $sat_s43Vp_info,-24(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -24(%r12),%rsi
	movl $Numeric.showHFloat11_bytes,%r14d
	addq $24,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
	.size _c45Ed, .-_c45Ed


==================== Asm code ====================
2018-03-16 15:58:56.961873519 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45Ed_info:
	.quad	_c45Ed
	.quad	2
	.quad	4294967326
	.quad	S43WU_srt+352


==================== Asm code ====================
2018-03-16 15:58:56.962614753 UTC

.section .text
.align 8
sat_s43Vr_entry:
_c45EI:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c45EK
_c45EL:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c45Dw_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 24(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c45Dw
_c45Dx:
	movq (%rbx),%rax
	jmp *(%rax)
_c45EK:
	jmp *-16(%r13)
	.size sat_s43Vr_entry, .-sat_s43Vr_entry


==================== Asm code ====================
2018-03-16 15:58:56.963319694 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43Vr_info:
	.quad	sat_s43Vr_entry
	.quad	3
	.quad	4294967311
	.quad	S43WU_srt+352


==================== Asm code ====================
2018-03-16 15:58:56.964060228 UTC

.section .text
.align 8
_c45Dw:
_c45Dw:
	movq $block_c45DB_info,(%rbp)
	movl $GHC.Types.[]_closure+1,%edi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp GHC.Show.$wshowSignedInt_entry
	.size _c45Dw, .-_c45Dw


==================== Asm code ====================
2018-03-16 15:58:56.964658109 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45Dw_info:
	.quad	_c45Dw
	.quad	2
	.quad	4294967326
	.quad	S43WU_srt+352


==================== Asm code ====================
2018-03-16 15:58:56.965540625 UTC

.section .text
.align 8
_c45DB:
_c45DB:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c45EP
_c45EO:
	movq $sat_s43Vq_info,-48(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -48(%r12),%rsi
	leaq -14(%r12),%r14
	addq $24,%rbp
	jmp GHC.Base.++_entry
_c45EP:
	movq $56,904(%r13)
	jmp stg_gc_pp
	.size _c45DB, .-_c45DB


==================== Asm code ====================
2018-03-16 15:58:56.966189382 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45DB_info:
	.quad	_c45DB
	.quad	2
	.quad	4294967326
	.quad	S43WU_srt+352


==================== Asm code ====================
2018-03-16 15:58:56.96675908 UTC

.section .data.rel.ro
.align 8
.align 1
u45Fq_srtd:
	.quad	S43WU_srt+144
	.quad	33
	.quad	8388608001


==================== Asm code ====================
2018-03-16 15:58:56.967490809 UTC

.section .text
.align 8
.globl Numeric.showHFloat_cvt_entry
.type Numeric.showHFloat_cvt_entry, @object
Numeric.showHFloat_cvt_entry:
_c45ER:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c45ES
_c45ET:
	movq $block_c45CO_info,-24(%rbp)
	movq %r14,%rax
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.$p1RealFloat_entry
_c45ES:
	movl $Numeric.showHFloat_cvt_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.showHFloat_cvt_entry, .-Numeric.showHFloat_cvt_entry


==================== Asm code ====================
2018-03-16 15:58:56.968138595 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat_cvt_info
.type Numeric.showHFloat_cvt_info, @object
Numeric.showHFloat_cvt_info:
	.quad	Numeric.showHFloat_cvt_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934607
	.quad	u45Fq_srtd


==================== Asm code ====================
2018-03-16 15:58:56.968704942 UTC

.section .data.rel.ro
.align 8
.align 1
u45Fr_srtd:
	.quad	S43WU_srt+144
	.quad	33
	.quad	7851737089


==================== Asm code ====================
2018-03-16 15:58:56.96950083 UTC

.section .text
.align 8
_c45CO:
_c45CO:
	movq $block_c45CS_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1RealFrac_entry
	.size _c45CO, .-_c45CO


==================== Asm code ====================
2018-03-16 15:58:56.970074596 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45CO_info:
	.quad	_c45CO
	.quad	2
	.quad	-4294967266
	.quad	u45Fr_srtd


==================== Asm code ====================
2018-03-16 15:58:56.970577635 UTC

.section .data.rel.ro
.align 8
.align 1
u45Fs_srtd:
	.quad	S43WU_srt+144
	.quad	33
	.quad	7851737089


==================== Asm code ====================
2018-03-16 15:58:56.971330089 UTC

.section .text
.align 8
_c45CS:
_c45CS:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c45EX
_c45EW:
	movq $sat_s43UZ_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c45D8_info,-8(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p2Real_entry
_c45EX:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c45CS, .-_c45CS


==================== Asm code ====================
2018-03-16 15:58:56.971956125 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45CS_info:
	.quad	_c45CS
	.quad	2
	.quad	-4294967266
	.quad	u45Fs_srtd


==================== Asm code ====================
2018-03-16 15:58:56.972558891 UTC

.section .text
.align 8
_c45D8:
_c45D8:
	movq $block_c45Dc_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Classes.$p1Ord_entry
	.size _c45D8, .-_c45D8


==================== Asm code ====================
2018-03-16 15:58:56.973185255 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45D8_info:
	.quad	_c45D8
	.quad	3
	.quad	502511173662
	.quad	S43WU_srt+352


==================== Asm code ====================
2018-03-16 15:58:56.973990527 UTC

.section .text
.align 8
_c45Dc:
_c45Dc:
	movq 8(%rbp),%rax
	movq $block_c45Dg_info,8(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-16(%rbp)
	movq 24(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Classes.==_entry
	.size _c45Dc, .-_c45Dc


==================== Asm code ====================
2018-03-16 15:58:56.974603512 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45Dc_info:
	.quad	_c45Dc
	.quad	3
	.quad	502511173662
	.quad	S43WU_srt+352


==================== Asm code ====================
2018-03-16 15:58:56.975380426 UTC

.section .text
.align 8
_c45Dg:
_c45Dg:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c45F2
_c45Fl:
	movl $Numeric.showHFloat9_closure,%ebx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c45F2:
	movq 16(%rbp),%rax
	movq $block_c45Dk_info,16(%rbp)
	movq %rax,%rdi
	movl $Numeric.showHFloat15_closure,%esi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$wfloatToDigits_entry
	.size _c45Dg, .-_c45Dg


==================== Asm code ====================
2018-03-16 15:58:56.976041701 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45Dg_info:
	.quad	_c45Dg
	.quad	2
	.quad	502511173662
	.quad	S43WU_srt+352


==================== Asm code ====================
2018-03-16 15:58:56.977538533 UTC

.section .text
.align 8
_c45Dk:
_c45Dk:
	movq $block_c45Dm_info,-8(%rbp)
	movq %r14,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c45Dm
_c45Dn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c45Dk, .-_c45Dk


==================== Asm code ====================
2018-03-16 15:58:56.978306944 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45Dk_info:
	.quad	_c45Dk
	.quad	0
	.quad	141733920798
	.quad	S43WU_srt+352


==================== Asm code ====================
2018-03-16 15:58:56.979206938 UTC

.section .text
.align 8
_c45Dm:
_c45Dm:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c45F8
_c45Fe:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c45Fh
_c45Fg:
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq $sat_s43Vr_info,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rsi
	movl $Numeric.showHFloat13_bytes,%r14d
	addq $16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_c45Fh:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
_c45F8:
	movq $block_c45F5_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c45F5
_c45F9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c45Dm, .-_c45Dm


==================== Asm code ====================
2018-03-16 15:58:56.979935261 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45Dm_info:
	.quad	_c45Dm
	.quad	1
	.quad	141733920798
	.quad	S43WU_srt+352


==================== Asm code ====================
2018-03-16 15:58:56.980574421 UTC

.section .text
.align 8
_c45F5:
_c45F5:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp Numeric.showHFloat14_entry
	.size _c45F5, .-_c45F5


==================== Asm code ====================
2018-03-16 15:58:56.981125557 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45F5_info:
	.quad	_c45F5
	.quad	0
	.quad	4294967326
	.quad	S43WU_srt+392


==================== Asm code ====================
2018-03-16 15:58:56.98286648 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat8_closure
.type Numeric.showHFloat8_closure, @object
Numeric.showHFloat8_closure:
	.quad	GHC.Types.C#_con_info
	.quad	45


==================== Asm code ====================
2018-03-16 15:58:56.9844538 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Numeric.showHFloat5_bytes
.type Numeric.showHFloat5_bytes, @object
Numeric.showHFloat5_bytes:
	.asciz "Infinity"


==================== Asm code ====================
2018-03-16 15:58:56.986057018 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Numeric.showHFloat7_bytes
.type Numeric.showHFloat7_bytes, @object
Numeric.showHFloat7_bytes:
	.asciz "-"


==================== Asm code ====================
2018-03-16 15:58:56.988766385 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat6_closure
.type Numeric.showHFloat6_closure, @object
Numeric.showHFloat6_closure:
	.quad	Numeric.showHFloat6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.989719213 UTC

.section .text
.align 8
.globl Numeric.showHFloat6_entry
.type Numeric.showHFloat6_entry, @object
Numeric.showHFloat6_entry:
_c45Ha:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45Hb
_c45Hc:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c45H9
_c45H8:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Numeric.showHFloat7_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c45Hb:
	jmp *-16(%r13)
_c45H9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showHFloat6_entry, .-Numeric.showHFloat6_entry


==================== Asm code ====================
2018-03-16 15:58:56.990437148 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat6_info
.type Numeric.showHFloat6_info, @object
Numeric.showHFloat6_info:
	.quad	Numeric.showHFloat6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:58:56.992098045 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Numeric.showHFloat2_bytes
.type Numeric.showHFloat2_bytes, @object
Numeric.showHFloat2_bytes:
	.asciz "NaN"


==================== Asm code ====================
2018-03-16 15:58:56.995234791 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat1_closure
.type Numeric.showHFloat1_closure, @object
Numeric.showHFloat1_closure:
	.quad	Numeric.showHFloat1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:56.99620246 UTC

.section .text
.align 8
.globl Numeric.showHFloat1_entry
.type Numeric.showHFloat1_entry, @object
Numeric.showHFloat1_entry:
_c45Hr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45Hs
_c45Ht:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c45Hq
_c45Hp:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Numeric.showHFloat2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c45Hs:
	jmp *-16(%r13)
_c45Hq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showHFloat1_entry, .-Numeric.showHFloat1_entry


==================== Asm code ====================
2018-03-16 15:58:56.996860932 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat1_info
.type Numeric.showHFloat1_info, @object
Numeric.showHFloat1_info:
	.quad	Numeric.showHFloat1_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:58:56.999605214 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat4_closure
.type Numeric.showHFloat4_closure, @object
Numeric.showHFloat4_closure:
	.quad	Numeric.showHFloat4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:57.000651863 UTC

.section .text
.align 8
.globl Numeric.showHFloat4_entry
.type Numeric.showHFloat4_entry, @object
Numeric.showHFloat4_entry:
_c45HH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45HI
_c45HJ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c45HG
_c45HF:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Numeric.showHFloat5_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c45HI:
	jmp *-16(%r13)
_c45HG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showHFloat4_entry, .-Numeric.showHFloat4_entry


==================== Asm code ====================
2018-03-16 15:58:57.00156374 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat4_info
.type Numeric.showHFloat4_info, @object
Numeric.showHFloat4_info:
	.quad	Numeric.showHFloat4_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:58:57.004270728 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat3_closure
.type Numeric.showHFloat3_closure, @object
Numeric.showHFloat3_closure:
	.quad	Numeric.showHFloat3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:57.005182052 UTC

.section .text
.align 8
.globl Numeric.showHFloat3_entry
.type Numeric.showHFloat3_entry, @object
Numeric.showHFloat3_entry:
_c45HX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45HY
_c45HZ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c45HW
_c45HV:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Numeric.showHFloat4_closure,%esi
	movl $Numeric.showHFloat6_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_c45HY:
	jmp *-16(%r13)
_c45HW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showHFloat3_entry, .-Numeric.showHFloat3_entry


==================== Asm code ====================
2018-03-16 15:58:57.006217603 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat3_info
.type Numeric.showHFloat3_info, @object
Numeric.showHFloat3_info:
	.quad	Numeric.showHFloat3_entry
	.quad	0
	.quad	12884901909
	.quad	S43WU_srt+408


==================== Asm code ====================
2018-03-16 15:58:57.02260152 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat_closure
.type Numeric.showHFloat_closure, @object
Numeric.showHFloat_closure:
	.quad	Numeric.showHFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:57.023469669 UTC

.section .text
.align 8
$dNum_s43Vx_entry:
_c45Iv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45Iw
_c45Ix:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c45Iw:
	jmp *-16(%r13)
	.size $dNum_s43Vx_entry, .-$dNum_s43Vx_entry


==================== Asm code ====================
2018-03-16 15:58:57.024090548 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s43Vx_info:
	.quad	$dNum_s43Vx_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:58:57.024775577 UTC

.section .text
.align 8
sat_s43VA_entry:
_c45IG:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45IH
_c45II:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $Numeric.showHFloat16_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c45IH:
	jmp *-16(%r13)
	.size sat_s43VA_entry, .-sat_s43VA_entry


==================== Asm code ====================
2018-03-16 15:58:57.025527522 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43VA_info:
	.quad	sat_s43VA_entry
	.quad	1
	.quad	4294967312
	.quad	S43WU_srt+424


==================== Asm code ====================
2018-03-16 15:58:57.02624979 UTC

.section .text
.align 8
sat_s43VD_entry:
_c45J4:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45J5
_c45J6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.negate_entry
_c45J5:
	jmp *-16(%r13)
	.size sat_s43VD_entry, .-sat_s43VD_entry


==================== Asm code ====================
2018-03-16 15:58:57.026892699 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43VD_info:
	.quad	sat_s43VD_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:58:57.027713742 UTC

.section .text
.align 8
sat_s43VE_entry:
_c45J7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45J8
_c45J9:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c45Jb
_c45Ja:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_s43VD_info,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp Numeric.showHFloat_cvt_entry
_c45Jb:
	movq $32,904(%r13)
_c45J8:
	jmp *-16(%r13)
	.size sat_s43VE_entry, .-sat_s43VE_entry


==================== Asm code ====================
2018-03-16 15:58:57.02839615 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43VE_info:
	.quad	sat_s43VE_entry
	.quad	3
	.quad	4294967311
	.quad	S43WU_srt+376


==================== Asm code ====================
2018-03-16 15:58:57.029087751 UTC

.section .text
.align 8
sat_s43VF_entry:
_c45Jm:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45Jn
_c45Jo:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.negate_entry
_c45Jn:
	jmp *-16(%r13)
	.size sat_s43VF_entry, .-sat_s43VF_entry


==================== Asm code ====================
2018-03-16 15:58:57.029793824 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43VF_info:
	.quad	sat_s43VF_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:58:57.030577633 UTC

.section .text
.align 8
sat_s43VG_entry:
_c45Jp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45Jq
_c45Jr:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c45Jt
_c45Js:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_s43VF_info,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp Numeric.showHFloat_cvt_entry
_c45Jt:
	movq $32,904(%r13)
_c45Jq:
	jmp *-16(%r13)
	.size sat_s43VG_entry, .-sat_s43VG_entry


==================== Asm code ====================
2018-03-16 15:58:57.031269363 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43VG_info:
	.quad	sat_s43VG_entry
	.quad	3
	.quad	4294967311
	.quad	S43WU_srt+376


==================== Asm code ====================
2018-03-16 15:58:57.031983267 UTC

.section .text
.align 8
sat_s43VI_entry:
_c45JA:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45JB
_c45JC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $Numeric.showHFloat16_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c45JB:
	jmp *-16(%r13)
	.size sat_s43VI_entry, .-sat_s43VI_entry


==================== Asm code ====================
2018-03-16 15:58:57.032637812 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43VI_info:
	.quad	sat_s43VI_entry
	.quad	1
	.quad	4294967312
	.quad	S43WU_srt+424


==================== Asm code ====================
2018-03-16 15:58:57.033773778 UTC

.section .text
.align 8
sat_s43VK_entry:
_c45JH:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c45JI
_c45JJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c45If_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,%r14
	movq $stg_ap_p_info,-56(%rbp)
	movq 24(%rbx),%rbx
	movq %rbx,-48(%rbp)
	movq %rax,-32(%rbp)
	movq %rbx,-24(%rbp)
	addq $-56,%rbp
	jmp GHC.Float.isNaN_entry
_c45JI:
	jmp *-16(%r13)
	.size sat_s43VK_entry, .-sat_s43VK_entry


==================== Asm code ====================
2018-03-16 15:58:57.034425432 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43VK_info:
	.quad	sat_s43VK_entry
	.quad	2
	.quad	1997159792658
	.quad	S43WU_srt+376


==================== Asm code ====================
2018-03-16 15:58:57.035119326 UTC

.section .text
.align 8
_c45If:
_c45If:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c45JE
_c45JF:
	movl $Numeric.showHFloat1_closure,%ebx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c45JE:
	movq $block_c45Ij_info,(%rbp)
	movq 8(%rbp),%r14
	jmp GHC.Float.$p1RealFloat_entry
	.size _c45If, .-_c45If


==================== Asm code ====================
2018-03-16 15:58:57.035762119 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45If_info:
	.quad	_c45If
	.quad	2
	.quad	1997159792670
	.quad	S43WU_srt+376


==================== Asm code ====================
2018-03-16 15:58:57.036443049 UTC

.section .text
.align 8
_c45Ij:
_c45Ij:
	movq $block_c45In_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1RealFrac_entry
	.size _c45Ij, .-_c45Ij


==================== Asm code ====================
2018-03-16 15:58:57.037023505 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45Ij_info:
	.quad	_c45Ij
	.quad	2
	.quad	1447403978782
	.quad	S43WU_srt+376


==================== Asm code ====================
2018-03-16 15:58:57.037798301 UTC

.section .text
.align 8
_c45In:
_c45In:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c45JO
_c45JN:
	movq $$dNum_s43Vx_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c45Iy_info,-16(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-24(%rbp)
	movq %rbx,-8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.isInfinite_entry
_c45JO:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c45In, .-_c45In


==================== Asm code ====================
2018-03-16 15:58:57.038488596 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45In_info:
	.quad	_c45In
	.quad	2
	.quad	1447403978782
	.quad	S43WU_srt+376


==================== Asm code ====================
2018-03-16 15:58:57.039337943 UTC

.section .text
.align 8
_c45Iy:
_c45Iy:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c45JQ
_c45Kd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c45Kg
_c45Kf:
	movq $sat_s43VI_info,-16(%r12)
	movq %rax,(%r12)
	movq $block_c45Kc_info,16(%rbp)
	movq %rcx,%r14
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp GHC.Real.$p2Real_entry
_c45Kg:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c45JQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c45Kg
_c45JS:
	movq $sat_s43VA_info,-16(%r12)
	movq %rax,(%r12)
	movq $block_c45IJ_info,(%rbp)
	movq %rcx,%r14
	leaq -16(%r12),%rax
	movq %rax,8(%rbp)
	jmp GHC.Real.$p2Real_entry
	.size _c45Iy, .-_c45Iy


==================== Asm code ====================
2018-03-16 15:58:57.040065601 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45Iy_info:
	.quad	_c45Iy
	.quad	4
	.quad	1447403978782
	.quad	S43WU_srt+376


==================== Asm code ====================
2018-03-16 15:58:57.040734851 UTC

.section .text
.align 8
_c45IJ:
_c45IJ:
	movq 8(%rbp),%rax
	movq $block_c45IN_info,8(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-16(%rbp)
	movq 32(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Classes.<_entry
	.size _c45IJ, .-_c45IJ


==================== Asm code ====================
2018-03-16 15:58:57.041431585 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45IJ_info:
	.quad	_c45IJ
	.quad	4
	.quad	4294967326
	.quad	S43WU_srt+376


==================== Asm code ====================
2018-03-16 15:58:57.042310398 UTC

.section .text
.align 8
_c45IN:
_c45IN:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c45JX
_c45K8:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c45Kb
_c45Ka:
	movq $sat_s43VG_info,-56(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $Numeric.showHFloat8_closure+1,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c45Kb:
	movq $64,904(%r13)
	jmp stg_gc_unpt_r1
_c45JX:
	movq $block_c45IR_info,(%rbp)
	movq %rax,%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.isNegativeZero_entry
	.size _c45IN, .-_c45IN


==================== Asm code ====================
2018-03-16 15:58:57.043060357 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45IN_info:
	.quad	_c45IN
	.quad	3
	.quad	4294967326
	.quad	S43WU_srt+376


==================== Asm code ====================
2018-03-16 15:58:57.043955936 UTC

.section .text
.align 8
_c45IR:
_c45IR:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c45K1
_c45K3:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c45K6
_c45K5:
	movq $sat_s43VE_info,-56(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $Numeric.showHFloat8_closure+1,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c45K6:
	movq $64,904(%r13)
	jmp stg_gc_unpt_r1
_c45K1:
	movq %rcx,%rsi
	movq %rax,%r14
	addq $32,%rbp
	jmp Numeric.showHFloat_cvt_entry
	.size _c45IR, .-_c45IR


==================== Asm code ====================
2018-03-16 15:58:57.044638889 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45IR_info:
	.quad	_c45IR
	.quad	3
	.quad	4294967326
	.quad	S43WU_srt+376


==================== Asm code ====================
2018-03-16 15:58:57.045388436 UTC

.section .text
.align 8
_c45Kc:
_c45Kc:
	movq 16(%rbp),%rax
	movq $block_c45Kk_info,16(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-8(%rbp)
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Classes.<_entry
	.size _c45Kc, .-_c45Kc


==================== Asm code ====================
2018-03-16 15:58:57.046028748 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45Kc_info:
	.quad	_c45Kc
	.quad	2
	.quad	73014444062
	.quad	S43WU_srt+408


==================== Asm code ====================
2018-03-16 15:58:57.046740622 UTC

.section .text
.align 8
_c45Kk:
_c45Kk:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c45Kr
_c45Kv:
	movl $Numeric.showHFloat3_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c45Kr:
	movl $Numeric.showHFloat4_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c45Kk, .-_c45Kk


==================== Asm code ====================
2018-03-16 15:58:57.047365865 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45Kk_info:
	.quad	_c45Kk
	.quad	0
	.quad	73014444062
	.quad	S43WU_srt+408


==================== Asm code ====================
2018-03-16 15:58:57.048108203 UTC

.section .text
.align 8
.globl Numeric.showHFloat_entry
.type Numeric.showHFloat_entry, @object
Numeric.showHFloat_entry:
_c45KD:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c45KH
_c45KG:
	movq $sat_s43VK_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movl $GHC.Base.++_closure+2,%ebx
	jmp stg_ap_p_fast
_c45KH:
	movq $32,904(%r13)
	movl $Numeric.showHFloat_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.showHFloat_entry, .-Numeric.showHFloat_entry


==================== Asm code ====================
2018-03-16 15:58:57.048780338 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat_info
.type Numeric.showHFloat_info, @object
Numeric.showHFloat_info:
	.quad	Numeric.showHFloat_entry
	.quad	0
	.quad	4196183048206
	.quad	8589934607
	.quad	S43WU_srt+376


==================== Asm code ====================
2018-03-16 15:58:57.050462116 UTC

.section .data
.align 8
.align 1
sat_s43VL_closure:
	.quad	GHC.Types.I#_con_info
	.quad	8


==================== Asm code ====================
2018-03-16 15:58:57.052666236 UTC

.section .data
.align 8
.align 1
sat_s43VM_closure:
	.quad	:_con_info
	.quad	sat_s43VL_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:57.056488202 UTC

.section .data
.align 8
.align 1
.globl Numeric.showOct1_closure
.type Numeric.showOct1_closure, @object
Numeric.showOct1_closure:
	.quad	Numeric.showOct1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:57.057849896 UTC

.section .text
.align 8
.globl Numeric.showOct1_entry
.type Numeric.showOct1_entry, @object
Numeric.showOct1_entry:
_c45Mh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45Mi
_c45Mj:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c45Mg
_c45Mf:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $sat_s43VM_closure+2,%esi
	movl $GHC.Types.True_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_c45Mi:
	jmp *-16(%r13)
_c45Mg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showOct1_entry, .-Numeric.showOct1_entry


==================== Asm code ====================
2018-03-16 15:58:57.058834221 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showOct1_info
.type Numeric.showOct1_info, @object
Numeric.showOct1_info:
	.quad	Numeric.showOct1_entry
	.quad	0
	.quad	4294967317
	.quad	S43WU_srt+456


==================== Asm code ====================
2018-03-16 15:58:57.064521693 UTC

.section .data
.align 8
.align 1
.globl Numeric.showOct_closure
.type Numeric.showOct_closure, @object
Numeric.showOct_closure:
	.quad	Numeric.showOct_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:57.066107776 UTC

.section .text
.align 8
sat_s43VR_entry:
_c45MB:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45MF
_c45MG:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c45Mz_info,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$p1Integral_entry
_c45MF:
	jmp *-16(%r13)
	.size sat_s43VR_entry, .-sat_s43VR_entry


==================== Asm code ====================
2018-03-16 15:58:57.066902169 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43VR_info:
	.quad	sat_s43VR_entry
	.quad	1
	.quad	4294967312
	.quad	S43WU_srt+464


==================== Asm code ====================
2018-03-16 15:58:57.067723897 UTC

.section .text
.align 8
_c45Mz:
_c45Mz:
	movq $block_c45ME_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c45Mz, .-_c45Mz


==================== Asm code ====================
2018-03-16 15:58:57.068462737 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45Mz_info:
	.quad	_c45Mz
	.quad	0
	.quad	4294967326
	.quad	S43WU_srt+464


==================== Asm code ====================
2018-03-16 15:58:57.069447504 UTC

.section .text
.align 8
_c45ME:
_c45ME:
	movq %rbx,%r14
	movq $stg_ap_p_info,-8(%rbp)
	movq $Numeric.showOct1_closure,(%rbp)
	addq $-8,%rbp
	jmp GHC.Num.fromInteger_entry
	.size _c45ME, .-_c45ME


==================== Asm code ====================
2018-03-16 15:58:57.070172665 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45ME_info:
	.quad	_c45ME
	.quad	0
	.quad	4294967326
	.quad	S43WU_srt+464


==================== Asm code ====================
2018-03-16 15:58:57.071230594 UTC

.section .text
.align 8
.globl Numeric.showOct_entry
.type Numeric.showOct_entry, @object
Numeric.showOct_entry:
_c45MM:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c45MQ
_c45MP:
	movq $sat_s43VR_info,-16(%r12)
	movq %r14,(%r12)
	movl $GHC.Show.intToDigit_closure+1,%r8d
	leaq -16(%r12),%rdi
	movl $Numeric.showIntAtBase_closure+6,%ebx
	jmp stg_ap_pppp_fast
_c45MQ:
	movq $24,904(%r13)
	movl $Numeric.showOct_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.showOct_entry, .-Numeric.showOct_entry


==================== Asm code ====================
2018-03-16 15:58:57.07211735 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showOct_info
.type Numeric.showOct_info, @object
Numeric.showOct_info:
	.quad	Numeric.showOct_entry
	.quad	0
	.quad	3458764552475246606
	.quad	8589934607
	.quad	S43WU_srt+240


==================== Asm code ====================
2018-03-16 15:58:57.074361262 UTC

.section .data
.align 8
.align 1
.globl Numeric.$trModule3_closure
.type Numeric.$trModule3_closure, @object
Numeric.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Numeric.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:58:57.076603557 UTC

.section .data
.align 8
.align 1
.globl Numeric.$trModule1_closure
.type Numeric.$trModule1_closure, @object
Numeric.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Numeric.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:58:57.079052553 UTC

.section .data
.align 8
.align 1
.globl Numeric.$trModule_closure
.type Numeric.$trModule_closure, @object
Numeric.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	Numeric.$trModule3_closure+1
	.quad	Numeric.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:58:57.084672616 UTC

.section .data
.align 8
.align 1
.globl Numeric.showGFloat_$sshowGFloat_closure
.type Numeric.showGFloat_$sshowGFloat_closure, @object
Numeric.showGFloat_$sshowGFloat_closure:
	.quad	Numeric.showGFloat_$sshowGFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:57.085899384 UTC

.section .text
.align 8
sat_s43VW_entry:
_c45Nj:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45Nk
_c45Nl:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c45Ng_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c45Ng
_c45Nh:
	movq (%rbx),%rax
	jmp *(%rax)
_c45Nk:
	jmp *-16(%r13)
	.size sat_s43VW_entry, .-sat_s43VW_entry


==================== Asm code ====================
2018-03-16 15:58:57.086770244 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43VW_info:
	.quad	sat_s43VW_entry
	.quad	2
	.quad	4294967314
	.quad	S43WU_srt+480


==================== Asm code ====================
2018-03-16 15:58:57.087706142 UTC

.section .text
.align 8
_c45Ng:
_c45Ng:
	movss 7(%rbx),%xmm1
	movl $GHC.Types.False_closure+1,%edi
	movq 8(%rbp),%rsi
	movl $GHC.Float.FFGeneric_closure+3,%r14d
	addq $16,%rbp
	jmp GHC.Float.$w$sformatRealFloatAlt1_entry
	.size _c45Ng, .-_c45Ng


==================== Asm code ====================
2018-03-16 15:58:57.088498289 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45Ng_info:
	.quad	_c45Ng
	.quad	1
	.quad	4294967326
	.quad	S43WU_srt+480


==================== Asm code ====================
2018-03-16 15:58:57.089621199 UTC

.section .text
.align 8
.globl Numeric.showGFloat_$sshowGFloat_entry
.type Numeric.showGFloat_$sshowGFloat_entry, @object
Numeric.showGFloat_$sshowGFloat_entry:
_c45Nq:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c45Nu
_c45Nt:
	movq $sat_s43VW_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movl $GHC.Base.++_closure+2,%ebx
	jmp stg_ap_p_fast
_c45Nu:
	movq $32,904(%r13)
	movl $Numeric.showGFloat_$sshowGFloat_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.showGFloat_$sshowGFloat_entry, .-Numeric.showGFloat_$sshowGFloat_entry


==================== Asm code ====================
2018-03-16 15:58:57.090554451 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showGFloat_$sshowGFloat_info
.type Numeric.showGFloat_$sshowGFloat_info, @object
Numeric.showGFloat_$sshowGFloat_info:
	.quad	Numeric.showGFloat_$sshowGFloat_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S43WU_srt+480


==================== Asm code ====================
2018-03-16 15:58:57.096160398 UTC

.section .data
.align 8
.align 1
.globl Numeric.showFFloat_$sshowFFloat_closure
.type Numeric.showFFloat_$sshowFFloat_closure, @object
Numeric.showFFloat_$sshowFFloat_closure:
	.quad	Numeric.showFFloat_$sshowFFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:57.097443908 UTC

.section .text
.align 8
sat_s43W1_entry:
_c45NS:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45NT
_c45NU:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c45NP_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c45NP
_c45NQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c45NT:
	jmp *-16(%r13)
	.size sat_s43W1_entry, .-sat_s43W1_entry


==================== Asm code ====================
2018-03-16 15:58:57.098377361 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43W1_info:
	.quad	sat_s43W1_entry
	.quad	2
	.quad	4294967314
	.quad	S43WU_srt+480


==================== Asm code ====================
2018-03-16 15:58:57.099412772 UTC

.section .text
.align 8
_c45NP:
_c45NP:
	movss 7(%rbx),%xmm1
	movl $GHC.Types.False_closure+1,%edi
	movq 8(%rbp),%rsi
	movl $GHC.Float.FFFixed_closure+2,%r14d
	addq $16,%rbp
	jmp GHC.Float.$w$sformatRealFloatAlt1_entry
	.size _c45NP, .-_c45NP


==================== Asm code ====================
2018-03-16 15:58:57.100226924 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45NP_info:
	.quad	_c45NP
	.quad	1
	.quad	4294967326
	.quad	S43WU_srt+480


==================== Asm code ====================
2018-03-16 15:58:57.101374538 UTC

.section .text
.align 8
.globl Numeric.showFFloat_$sshowFFloat_entry
.type Numeric.showFFloat_$sshowFFloat_entry, @object
Numeric.showFFloat_$sshowFFloat_entry:
_c45NZ:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c45O3
_c45O2:
	movq $sat_s43W1_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movl $GHC.Base.++_closure+2,%ebx
	jmp stg_ap_p_fast
_c45O3:
	movq $32,904(%r13)
	movl $Numeric.showFFloat_$sshowFFloat_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.showFFloat_$sshowFFloat_entry, .-Numeric.showFFloat_$sshowFFloat_entry


==================== Asm code ====================
2018-03-16 15:58:57.103056765 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showFFloat_$sshowFFloat_info
.type Numeric.showFFloat_$sshowFFloat_info, @object
Numeric.showFFloat_$sshowFFloat_info:
	.quad	Numeric.showFFloat_$sshowFFloat_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S43WU_srt+480


==================== Asm code ====================
2018-03-16 15:58:57.109153759 UTC

.section .data
.align 8
.align 1
.globl Numeric.showEFloat_$sshowEFloat_closure
.type Numeric.showEFloat_$sshowEFloat_closure, @object
Numeric.showEFloat_$sshowEFloat_closure:
	.quad	Numeric.showEFloat_$sshowEFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:57.11040486 UTC

.section .text
.align 8
sat_s43W6_entry:
_c45Or:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45Os
_c45Ot:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c45Oo_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c45Oo
_c45Op:
	movq (%rbx),%rax
	jmp *(%rax)
_c45Os:
	jmp *-16(%r13)
	.size sat_s43W6_entry, .-sat_s43W6_entry


==================== Asm code ====================
2018-03-16 15:58:57.111310341 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43W6_info:
	.quad	sat_s43W6_entry
	.quad	2
	.quad	4294967314
	.quad	S43WU_srt+480


==================== Asm code ====================
2018-03-16 15:58:57.112269982 UTC

.section .text
.align 8
_c45Oo:
_c45Oo:
	movss 7(%rbx),%xmm1
	movl $GHC.Types.False_closure+1,%edi
	movq 8(%rbp),%rsi
	movl $GHC.Float.FFExponent_closure+1,%r14d
	addq $16,%rbp
	jmp GHC.Float.$w$sformatRealFloatAlt1_entry
	.size _c45Oo, .-_c45Oo


==================== Asm code ====================
2018-03-16 15:58:57.113184593 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45Oo_info:
	.quad	_c45Oo
	.quad	1
	.quad	4294967326
	.quad	S43WU_srt+480


==================== Asm code ====================
2018-03-16 15:58:57.114316026 UTC

.section .text
.align 8
.globl Numeric.showEFloat_$sshowEFloat_entry
.type Numeric.showEFloat_$sshowEFloat_entry, @object
Numeric.showEFloat_$sshowEFloat_entry:
_c45Oy:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c45OC
_c45OB:
	movq $sat_s43W6_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movl $GHC.Base.++_closure+2,%ebx
	jmp stg_ap_p_fast
_c45OC:
	movq $32,904(%r13)
	movl $Numeric.showEFloat_$sshowEFloat_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.showEFloat_$sshowEFloat_entry, .-Numeric.showEFloat_$sshowEFloat_entry


==================== Asm code ====================
2018-03-16 15:58:57.115279133 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showEFloat_$sshowEFloat_info
.type Numeric.showEFloat_$sshowEFloat_info, @object
Numeric.showEFloat_$sshowEFloat_info:
	.quad	Numeric.showEFloat_$sshowEFloat_entry
	.quad	0
	.quad	38654705678
	.quad	8589934607
	.quad	S43WU_srt+480


==================== Asm code ====================
2018-03-16 15:58:57.121401818 UTC

.section .data
.align 8
.align 1
.globl Numeric.showGFloat_$sshowGFloat1_closure
.type Numeric.showGFloat_$sshowGFloat1_closure, @object
Numeric.showGFloat_$sshowGFloat1_closure:
	.quad	Numeric.showGFloat_$sshowGFloat1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:57.122261306 UTC

.section .text
.align 8
sat_s43Wb_entry:
_c45P0:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45P1
_c45P2:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c45OX_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c45OX
_c45OY:
	movq (%rbx),%rax
	jmp *(%rax)
_c45P1:
	jmp *-16(%r13)
	.size sat_s43Wb_entry, .-sat_s43Wb_entry


==================== Asm code ====================
2018-03-16 15:58:57.122914118 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43Wb_info:
	.quad	sat_s43Wb_entry
	.quad	2
	.quad	4294967314
	.quad	S43WU_srt+512


==================== Asm code ====================
2018-03-16 15:58:57.123566061 UTC

.section .text
.align 8
_c45OX:
_c45OX:
	movsd 7(%rbx),%xmm1
	movl $GHC.Types.False_closure+1,%edi
	movq 8(%rbp),%rsi
	movl $GHC.Float.FFGeneric_closure+3,%r14d
	addq $16,%rbp
	jmp GHC.Float.$w$sformatRealFloatAlt_entry
	.size _c45OX, .-_c45OX


==================== Asm code ====================
2018-03-16 15:58:57.12414017 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45OX_info:
	.quad	_c45OX
	.quad	1
	.quad	4294967326
	.quad	S43WU_srt+512


==================== Asm code ====================
2018-03-16 15:58:57.1247925 UTC

.section .text
.align 8
.globl Numeric.showGFloat_$sshowGFloat1_entry
.type Numeric.showGFloat_$sshowGFloat1_entry, @object
Numeric.showGFloat_$sshowGFloat1_entry:
_c45P7:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c45Pb
_c45Pa:
	movq $sat_s43Wb_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movl $GHC.Base.++_closure+2,%ebx
	jmp stg_ap_p_fast
_c45Pb:
	movq $32,904(%r13)
	movl $Numeric.showGFloat_$sshowGFloat1_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.showGFloat_$sshowGFloat1_entry, .-Numeric.showGFloat_$sshowGFloat1_entry


==================== Asm code ====================
2018-03-16 15:58:57.12539662 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showGFloat_$sshowGFloat1_info
.type Numeric.showGFloat_$sshowGFloat1_info, @object
Numeric.showGFloat_$sshowGFloat1_info:
	.quad	Numeric.showGFloat_$sshowGFloat1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S43WU_srt+512


==================== Asm code ====================
2018-03-16 15:58:57.128671645 UTC

.section .data
.align 8
.align 1
.globl Numeric.showGFloat_closure
.type Numeric.showGFloat_closure, @object
Numeric.showGFloat_closure:
	.quad	Numeric.showGFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:57.129548571 UTC

.section .text
.align 8
sat_s43Wf_entry:
_c45Pw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45Px
_c45Py:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r9
	movl $GHC.Types.False_closure+1,%r8d
	movq 24(%rbx),%rdi
	movl $GHC.Float.FFGeneric_closure+3,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.formatRealFloatAlt_entry
_c45Px:
	jmp *-16(%r13)
	.size sat_s43Wf_entry, .-sat_s43Wf_entry


==================== Asm code ====================
2018-03-16 15:58:57.130461372 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43Wf_info:
	.quad	sat_s43Wf_entry
	.quad	3
	.quad	4294967311
	.quad	S43WU_srt+528


==================== Asm code ====================
2018-03-16 15:58:57.131447478 UTC

.section .text
.align 8
.globl Numeric.showGFloat_entry
.type Numeric.showGFloat_entry, @object
Numeric.showGFloat_entry:
_c45Pz:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c45PD
_c45PC:
	movq $sat_s43Wf_info,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -32(%r12),%r14
	movl $GHC.Base.++_closure+2,%ebx
	jmp stg_ap_p_fast
_c45PD:
	movq $40,904(%r13)
	movl $Numeric.showGFloat_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.showGFloat_entry, .-Numeric.showGFloat_entry


==================== Asm code ====================
2018-03-16 15:58:57.132413134 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showGFloat_info
.type Numeric.showGFloat_info, @object
Numeric.showGFloat_info:
	.quad	Numeric.showGFloat_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S43WU_srt+528


==================== Asm code ====================
2018-03-16 15:58:57.138614918 UTC

.section .data
.align 8
.align 1
.globl Numeric.showFFloat_$sshowFFloat1_closure
.type Numeric.showFFloat_$sshowFFloat1_closure, @object
Numeric.showFFloat_$sshowFFloat1_closure:
	.quad	Numeric.showFFloat_$sshowFFloat1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:57.139782813 UTC

.section .text
.align 8
sat_s43Wk_entry:
_c45PX:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45PY
_c45PZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c45PU_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c45PU
_c45PV:
	movq (%rbx),%rax
	jmp *(%rax)
_c45PY:
	jmp *-16(%r13)
	.size sat_s43Wk_entry, .-sat_s43Wk_entry


==================== Asm code ====================
2018-03-16 15:58:57.140777387 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43Wk_info:
	.quad	sat_s43Wk_entry
	.quad	2
	.quad	4294967314
	.quad	S43WU_srt+512


==================== Asm code ====================
2018-03-16 15:58:57.141752388 UTC

.section .text
.align 8
_c45PU:
_c45PU:
	movsd 7(%rbx),%xmm1
	movl $GHC.Types.False_closure+1,%edi
	movq 8(%rbp),%rsi
	movl $GHC.Float.FFFixed_closure+2,%r14d
	addq $16,%rbp
	jmp GHC.Float.$w$sformatRealFloatAlt_entry
	.size _c45PU, .-_c45PU


==================== Asm code ====================
2018-03-16 15:58:57.142506152 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45PU_info:
	.quad	_c45PU
	.quad	1
	.quad	4294967326
	.quad	S43WU_srt+512


==================== Asm code ====================
2018-03-16 15:58:57.143495261 UTC

.section .text
.align 8
.globl Numeric.showFFloat_$sshowFFloat1_entry
.type Numeric.showFFloat_$sshowFFloat1_entry, @object
Numeric.showFFloat_$sshowFFloat1_entry:
_c45Q4:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c45Q8
_c45Q7:
	movq $sat_s43Wk_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movl $GHC.Base.++_closure+2,%ebx
	jmp stg_ap_p_fast
_c45Q8:
	movq $32,904(%r13)
	movl $Numeric.showFFloat_$sshowFFloat1_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.showFFloat_$sshowFFloat1_entry, .-Numeric.showFFloat_$sshowFFloat1_entry


==================== Asm code ====================
2018-03-16 15:58:57.144481328 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showFFloat_$sshowFFloat1_info
.type Numeric.showFFloat_$sshowFFloat1_info, @object
Numeric.showFFloat_$sshowFFloat1_info:
	.quad	Numeric.showFFloat_$sshowFFloat1_entry
	.quad	0
	.quad	73014444046
	.quad	8589934607
	.quad	S43WU_srt+512


==================== Asm code ====================
2018-03-16 15:58:57.149802534 UTC

.section .data
.align 8
.align 1
.globl Numeric.showFFloat_closure
.type Numeric.showFFloat_closure, @object
Numeric.showFFloat_closure:
	.quad	Numeric.showFFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:57.151032799 UTC

.section .text
.align 8
sat_s43Wo_entry:
_c45Qt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45Qu
_c45Qv:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r9
	movl $GHC.Types.False_closure+1,%r8d
	movq 24(%rbx),%rdi
	movl $GHC.Float.FFFixed_closure+2,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.formatRealFloatAlt_entry
_c45Qu:
	jmp *-16(%r13)
	.size sat_s43Wo_entry, .-sat_s43Wo_entry


==================== Asm code ====================
2018-03-16 15:58:57.152024545 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43Wo_info:
	.quad	sat_s43Wo_entry
	.quad	3
	.quad	4294967311
	.quad	S43WU_srt+528


==================== Asm code ====================
2018-03-16 15:58:57.153156004 UTC

.section .text
.align 8
.globl Numeric.showFFloat_entry
.type Numeric.showFFloat_entry, @object
Numeric.showFFloat_entry:
_c45Qw:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c45QA
_c45Qz:
	movq $sat_s43Wo_info,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -32(%r12),%r14
	movl $GHC.Base.++_closure+2,%ebx
	jmp stg_ap_p_fast
_c45QA:
	movq $40,904(%r13)
	movl $Numeric.showFFloat_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.showFFloat_entry, .-Numeric.showFFloat_entry


==================== Asm code ====================
2018-03-16 15:58:57.155370024 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showFFloat_info
.type Numeric.showFFloat_info, @object
Numeric.showFFloat_info:
	.quad	Numeric.showFFloat_entry
	.quad	0
	.quad	38654705678
	.quad	12884901911
	.quad	S43WU_srt+528


==================== Asm code ====================
2018-03-16 15:58:57.167944425 UTC

.section .data
.align 8
.align 1
.globl Numeric.showEFloat_$sshowEFloat1_closure
.type Numeric.showEFloat_$sshowEFloat1_closure, @object
Numeric.showEFloat_$sshowEFloat1_closure:
	.quad	Numeric.showEFloat_$sshowEFloat1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:57.168963104 UTC

.section .text
.align 8
sat_s43Wt_entry:
_c45QU:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c45QV
_c45QW:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c45QR_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c45QR
_c45QS:
	movq (%rbx),%rax
	jmp *(%rax)
_c45QV:
	jmp *-16(%r13)
	.size sat_s43Wt_entry, .-sat_s43Wt_entry


==================== Asm code ====================
2018-03-16 15:58:57.169758043 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43Wt_info:
	.quad	sat_s43Wt_entry
	.quad	2
	.quad	4294967314
	.quad	S43WU_srt+512


==================== Asm code ====================
2018-03-16 15:58:57.170554824 UTC

.section .text
.align 8
_c45QR:
_c45QR:
	movsd 7(%rbx),%xmm1
	movl $GHC.Types.False_closure+1,%edi
	movq 8(%rbp),%rsi
	movl $GHC.Float.FFExponent_closure+1,%r14d
	addq $16,%rbp
	jmp GHC.Float.$w$sformatRealFloatAlt_entry
	.size _c45QR, .-_c45QR


==================== Asm code ====================
2018-03-16 15:58:57.171335932 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45QR_info:
	.quad	_c45QR
	.quad	1
	.quad	4294967326
	.quad	S43WU_srt+512


==================== Asm code ====================
2018-03-16 15:58:57.172178612 UTC

.section .text
.align 8
.globl Numeric.showEFloat_$sshowEFloat1_entry
.type Numeric.showEFloat_$sshowEFloat1_entry, @object
Numeric.showEFloat_$sshowEFloat1_entry:
_c45R1:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c45R5
_c45R4:
	movq $sat_s43Wt_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movl $GHC.Base.++_closure+2,%ebx
	jmp stg_ap_p_fast
_c45R5:
	movq $32,904(%r13)
	movl $Numeric.showEFloat_$sshowEFloat1_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.showEFloat_$sshowEFloat1_entry, .-Numeric.showEFloat_$sshowEFloat1_entry


==================== Asm code ====================
2018-03-16 15:58:57.173049189 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showEFloat_$sshowEFloat1_info
.type Numeric.showEFloat_$sshowEFloat1_info, @object
Numeric.showEFloat_$sshowEFloat1_info:
	.quad	Numeric.showEFloat_$sshowEFloat1_entry
	.quad	0
	.quad	279172874254
	.quad	8589934607
	.quad	S43WU_srt+512


==================== Asm code ====================
2018-03-16 15:58:57.177811516 UTC

.section .data
.align 8
.align 1
.globl Numeric.showEFloat_closure
.type Numeric.showEFloat_closure, @object
Numeric.showEFloat_closure:
	.quad	Numeric.showEFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:57.178876375 UTC

.section .text
.align 8
sat_s43Wx_entry:
_c45Rq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c45Rr
_c45Rs:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r9
	movl $GHC.Types.False_closure+1,%r8d
	movq 24(%rbx),%rdi
	movl $GHC.Float.FFExponent_closure+1,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.formatRealFloatAlt_entry
_c45Rr:
	jmp *-16(%r13)
	.size sat_s43Wx_entry, .-sat_s43Wx_entry


==================== Asm code ====================
2018-03-16 15:58:57.179637032 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s43Wx_info:
	.quad	sat_s43Wx_entry
	.quad	3
	.quad	4294967311
	.quad	S43WU_srt+528


==================== Asm code ====================
2018-03-16 15:58:57.180601393 UTC

.section .text
.align 8
.globl Numeric.showEFloat_entry
.type Numeric.showEFloat_entry, @object
Numeric.showEFloat_entry:
_c45Rt:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c45Rx
_c45Rw:
	movq $sat_s43Wx_info,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -32(%r12),%r14
	movl $GHC.Base.++_closure+2,%ebx
	jmp stg_ap_p_fast
_c45Rx:
	movq $40,904(%r13)
	movl $Numeric.showEFloat_closure,%ebx
	jmp *-8(%r13)
	.size Numeric.showEFloat_entry, .-Numeric.showEFloat_entry


==================== Asm code ====================
2018-03-16 15:58:57.181696889 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showEFloat_info
.type Numeric.showEFloat_info, @object
Numeric.showEFloat_info:
	.quad	Numeric.showEFloat_entry
	.quad	0
	.quad	141733920782
	.quad	12884901911
	.quad	S43WU_srt+528


==================== Asm code ====================
2018-03-16 15:58:57.185210328 UTC

.section .data.rel.ro
.align 8
.align 1
S43WU_srt:
	.quad	Text.Read.Lex.$wreadIntP_closure
	.quad	Numeric.readInt_closure
	.quad	Text.Read.Lex.readDecP4_closure
	.quad	Text.Read.Lex.$wreadIntP'_closure
	.quad	Numeric.readOct_closure
	.quad	Text.Read.Lex.numberToFixed1_closure
	.quad	Numeric.readDec_closure
	.quad	Text.Read.Lex.readDecP3_closure
	.quad	Numeric.readHex_closure
	.quad	Text.Read.Lex.$wnumberToRational_closure
	.quad	Text.Read.Lex.expect2_closure
	.quad	Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_closure
	.quad	Numeric.readFloat_closure
	.quad	GHC.Read.lex1_closure
	.quad	GHC.Read.readParen_closure
	.quad	Numeric.readSigned_closure
	.quad	sat_s43QP_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	Numeric.showHFloat16_closure
	.quad	Numeric.showInt2_closure
	.quad	Numeric.showInt_closure
	.quad	Numeric.showInt1_closure
	.quad	GHC.Float.formatRealFloatAlt_closure
	.quad	Numeric.showFFloatAlt_closure
	.quad	Numeric.showGFloatAlt_closure
	.quad	Numeric.$wlvl_closure
	.quad	Numeric.showIntAtBase2_closure
	.quad	Numeric.showIntAtBase1_closure
	.quad	sat_s43RQ_closure
	.quad	Numeric.showIntAtBase3_closure
	.quad	Numeric.showIntAtBase_closure
	.quad	sat_s43So_closure
	.quad	Numeric.showHex1_closure
	.quad	GHC.Show.intToDigit_closure
	.quad	Numeric.showHex_closure
	.quad	GHC.Show.$fShow(,)_go1_closure
	.quad	GHC.Err.error_closure
	.quad	$dIP3_r43OU_closure
	.quad	$wlvl2_r43OX_closure
	.quad	GHC.Show.$wintToDigit_closure
	.quad	$wshowIt1_r43OY_closure
	.quad	$wshowIt2_r43OZ_closure
	.quad	$wshowIt3_r43P0_closure
	.quad	$wshowIt4_r43P1_closure
	.quad	Numeric.showHFloat_hex_closure
	.quad	sat_s43UQ_closure
	.quad	GHC.Float.$wfloatToDigits_closure
	.quad	Numeric.showHFloat_cvt_closure
	.quad	Numeric.showHFloat9_closure
	.quad	Numeric.showHFloat14_closure
	.quad	Numeric.showHFloat15_closure
	.quad	Numeric.showHFloat4_closure
	.quad	Numeric.showHFloat6_closure
	.quad	Numeric.showHFloat16_closure
	.quad	Numeric.showHFloat1_closure
	.quad	Numeric.showHFloat3_closure
	.quad	Numeric.showHFloat_closure
	.quad	sat_s43VM_closure
	.quad	Numeric.showOct1_closure
	.quad	Numeric.showOct_closure
	.quad	GHC.Float.$w$sformatRealFloatAlt1_closure
	.quad	Numeric.showGFloat_$sshowGFloat_closure
	.quad	Numeric.showFFloat_$sshowFFloat_closure
	.quad	Numeric.showEFloat_$sshowEFloat_closure
	.quad	GHC.Float.$w$sformatRealFloatAlt_closure
	.quad	Numeric.showGFloat_$sshowGFloat1_closure
	.quad	GHC.Float.formatRealFloatAlt_closure
	.quad	Numeric.showGFloat_closure
	.quad	Numeric.showFFloat_$sshowFFloat1_closure
	.quad	Numeric.showFFloat_closure
	.quad	Numeric.showEFloat_$sshowEFloat1_closure
	.quad	Numeric.showEFloat_closure


==================== Asm code ====================
2018-03-16 15:58:59.218689555 UTC

.section .data
.align 8
.align 1
.globl Numeric.readInt_closure
.type Numeric.readInt_closure, @object
Numeric.readInt_closure:
	.quad	Numeric.readInt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.219516167 UTC

.section .text
.align 8
sat_s45RN_entry:
_c45Zn:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c45Zo
_c45Zp:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c45Zk_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r9
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp *Text.Read.Lex.$wreadIntP_entry@gotpcrel(%rip)
_c45Zo:
	jmp *-16(%r13)
	.size sat_s45RN_entry, .-sat_s45RN_entry


==================== Asm code ====================
2018-03-16 15:58:59.220341617 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45RN_info:
	.quad	sat_s45RN_entry
	.quad	4
	.quad	4294967311
	.quad	S45Zy_srt


==================== Asm code ====================
2018-03-16 15:58:59.221020726 UTC

.section .text
.align 8
_c45Zk:
_c45Zk:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c45Zs
_c45Zr:
	movq Text.ParserCombinators.ReadP.Get_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c45Zs:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c45Zk, .-_c45Zk


==================== Asm code ====================
2018-03-16 15:58:59.221677226 UTC

.section .data.rel.ro
.align 8
.align 1
block_c45Zk_info:
	.quad	_c45Zk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.222530773 UTC

.section .text
.align 8
.globl Numeric.readInt_entry
.type Numeric.readInt_entry, @object
Numeric.readInt_entry:
_c45Zt:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c45Zx
_c45Zw:
	leaq sat_s45RN_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	leaq -40(%r12),%r14
	movq Text.ParserCombinators.ReadP.run_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c45Zx:
	movq $48,904(%r13)
	leaq Numeric.readInt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.readInt_entry, .-Numeric.readInt_entry


==================== Asm code ====================
2018-03-16 15:58:59.22313823 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.readInt_info
.type Numeric.readInt_info, @object
Numeric.readInt_info:
	.quad	Numeric.readInt_entry
	.quad	0
	.quad	12884901902
	.quad	17179869208
	.quad	S45Zy_srt


==================== Asm code ====================
2018-03-16 15:58:59.227936529 UTC

.section .data
.align 8
.align 1
.globl Numeric.readOct_closure
.type Numeric.readOct_closure, @object
Numeric.readOct_closure:
	.quad	Numeric.readOct_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.228648961 UTC

.section .text
.align 8
sat_s45RQ_entry:
_c4603:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c4604
_c4605:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq Text.Read.Lex.readDecP4_closure@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c4604:
	jmp *-16(%r13)
	.size sat_s45RQ_entry, .-sat_s45RQ_entry


==================== Asm code ====================
2018-03-16 15:58:59.229301785 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45RQ_info:
	.quad	sat_s45RQ_entry
	.quad	1
	.quad	4294967312
	.quad	S45Zy_srt+16


==================== Asm code ====================
2018-03-16 15:58:59.230039935 UTC

.section .text
.align 8
sat_s45RT_entry:
_c4609:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c460a
_c460b:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c460d
_c460c:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s45RQ_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c4606_info(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rcx
	leaq 1(%rcx),%r8
	leaq -16(%r12),%rdi
	movq %rbx,%rsi
	movq %rax,%r14
	addq $-24,%rbp
	jmp *Text.Read.Lex.$wreadIntP'_entry@gotpcrel(%rip)
_c460d:
	movq $24,904(%r13)
_c460a:
	jmp *-16(%r13)
	.size sat_s45RT_entry, .-sat_s45RT_entry


==================== Asm code ====================
2018-03-16 15:58:59.230913479 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45RT_info:
	.quad	sat_s45RT_entry
	.quad	2
	.quad	12884901906
	.quad	S45Zy_srt+16


==================== Asm code ====================
2018-03-16 15:58:59.23156069 UTC

.section .text
.align 8
_c4606:
_c4606:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c460g
_c460f:
	movq Text.ParserCombinators.ReadP.Get_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c460g:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4606, .-_c4606


==================== Asm code ====================
2018-03-16 15:58:59.232136625 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4606_info:
	.quad	_c4606
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.232910247 UTC

.section .text
.align 8
.globl Numeric.readOct_entry
.type Numeric.readOct_entry, @object
Numeric.readOct_entry:
_c460h:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c460l
_c460k:
	leaq sat_s45RT_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movq Text.ParserCombinators.ReadP.run_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c460l:
	movq $32,904(%r13)
	leaq Numeric.readOct_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.readOct_entry, .-Numeric.readOct_entry


==================== Asm code ====================
2018-03-16 15:58:59.23372657 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.readOct_info
.type Numeric.readOct_info, @object
Numeric.readOct_info:
	.quad	Numeric.readOct_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	S45Zy_srt+16


==================== Asm code ====================
2018-03-16 15:58:59.238525733 UTC

.section .data
.align 8
.align 1
.globl Numeric.readDec_closure
.type Numeric.readDec_closure, @object
Numeric.readDec_closure:
	.quad	Numeric.readDec_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.239241565 UTC

.section .text
.align 8
sat_s45RW_entry:
_c460Y:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c460Z
_c4610:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq Text.Read.Lex.numberToFixed1_closure@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c460Z:
	jmp *-16(%r13)
	.size sat_s45RW_entry, .-sat_s45RW_entry


==================== Asm code ====================
2018-03-16 15:58:59.239886646 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45RW_info:
	.quad	sat_s45RW_entry
	.quad	1
	.quad	4294967312
	.quad	S45Zy_srt+40


==================== Asm code ====================
2018-03-16 15:58:59.240806124 UTC

.section .text
.align 8
sat_s45RZ_entry:
_c4614:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4615
_c4616:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4618
_c4617:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s45RW_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c4611_info(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rcx
	leaq 1(%rcx),%r8
	leaq -16(%r12),%rdi
	movq %rbx,%rsi
	movq %rax,%r14
	addq $-24,%rbp
	jmp *Text.Read.Lex.$wreadIntP'_entry@gotpcrel(%rip)
_c4618:
	movq $24,904(%r13)
_c4615:
	jmp *-16(%r13)
	.size sat_s45RZ_entry, .-sat_s45RZ_entry


==================== Asm code ====================
2018-03-16 15:58:59.24150611 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45RZ_info:
	.quad	sat_s45RZ_entry
	.quad	2
	.quad	21474836498
	.quad	S45Zy_srt+24


==================== Asm code ====================
2018-03-16 15:58:59.24217282 UTC

.section .text
.align 8
_c4611:
_c4611:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c461b
_c461a:
	movq Text.ParserCombinators.ReadP.Get_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c461b:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4611, .-_c4611


==================== Asm code ====================
2018-03-16 15:58:59.242740076 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4611_info:
	.quad	_c4611
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.24365467 UTC

.section .text
.align 8
.globl Numeric.readDec_entry
.type Numeric.readDec_entry, @object
Numeric.readDec_entry:
_c461c:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c461g
_c461f:
	leaq sat_s45RZ_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movq Text.ParserCombinators.ReadP.run_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c461g:
	movq $32,904(%r13)
	leaq Numeric.readDec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.readDec_entry, .-Numeric.readDec_entry


==================== Asm code ====================
2018-03-16 15:58:59.244272696 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.readDec_info
.type Numeric.readDec_info, @object
Numeric.readDec_info:
	.quad	Numeric.readDec_entry
	.quad	0
	.quad	55834574862
	.quad	8589934607
	.quad	S45Zy_srt+24


==================== Asm code ====================
2018-03-16 15:58:59.249215387 UTC

.section .data
.align 8
.align 1
.globl Numeric.readHex_closure
.type Numeric.readHex_closure, @object
Numeric.readHex_closure:
	.quad	Numeric.readHex_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.250027036 UTC

.section .text
.align 8
sat_s45S2_entry:
_c461T:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c461U
_c461V:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq Text.Read.Lex.readDecP3_closure@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c461U:
	jmp *-16(%r13)
	.size sat_s45S2_entry, .-sat_s45S2_entry


==================== Asm code ====================
2018-03-16 15:58:59.250575918 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45S2_info:
	.quad	sat_s45S2_entry
	.quad	1
	.quad	4294967312
	.quad	S45Zy_srt+56


==================== Asm code ====================
2018-03-16 15:58:59.251525075 UTC

.section .text
.align 8
sat_s45S5_entry:
_c461Z:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4620
_c4621:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4623
_c4622:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s45S2_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c461W_info(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rcx
	leaq 1(%rcx),%r8
	leaq -16(%r12),%rdi
	movq %rbx,%rsi
	movq %rax,%r14
	addq $-24,%rbp
	jmp *Text.Read.Lex.$wreadIntP'_entry@gotpcrel(%rip)
_c4623:
	movq $24,904(%r13)
_c4620:
	jmp *-16(%r13)
	.size sat_s45S5_entry, .-sat_s45S5_entry


==================== Asm code ====================
2018-03-16 15:58:59.25218017 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45S5_info:
	.quad	sat_s45S5_entry
	.quad	2
	.quad	73014444050
	.quad	S45Zy_srt+24


==================== Asm code ====================
2018-03-16 15:58:59.252844345 UTC

.section .text
.align 8
_c461W:
_c461W:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4626
_c4625:
	movq Text.ParserCombinators.ReadP.Get_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4626:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c461W, .-_c461W


==================== Asm code ====================
2018-03-16 15:58:59.253680852 UTC

.section .data.rel.ro
.align 8
.align 1
block_c461W_info:
	.quad	_c461W
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.254338484 UTC

.section .text
.align 8
.globl Numeric.readHex_entry
.type Numeric.readHex_entry, @object
Numeric.readHex_entry:
_c4627:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c462b
_c462a:
	leaq sat_s45S5_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movq Text.ParserCombinators.ReadP.run_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c462b:
	movq $32,904(%r13)
	leaq Numeric.readHex_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.readHex_entry, .-Numeric.readHex_entry


==================== Asm code ====================
2018-03-16 15:58:59.254992783 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.readHex_info
.type Numeric.readHex_info, @object
Numeric.readHex_info:
	.quad	Numeric.readHex_entry
	.quad	0
	.quad	210453397518
	.quad	8589934607
	.quad	S45Zy_srt+24


==================== Asm code ====================
2018-03-16 15:58:59.258349356 UTC

.section .data
.align 8
.align 1
.globl Numeric.readFloat2_closure
.type Numeric.readFloat2_closure, @object
Numeric.readFloat2_closure:
	.quad	Numeric.readFloat2_info


==================== Asm code ====================
2018-03-16 15:58:59.259277428 UTC

.section .text
.align 8
.globl Numeric.readFloat2_entry
.type Numeric.readFloat2_entry, @object
Numeric.readFloat2_entry:
_c462J:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c462K
_c462L:
	leaq block_c462G_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c462G
_c462H:
	movq (%rbx),%rax
	jmp *(%rax)
_c462K:
	leaq Numeric.readFloat2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.readFloat2_entry, .-Numeric.readFloat2_entry


==================== Asm code ====================
2018-03-16 15:58:59.259881899 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.readFloat2_info
.type Numeric.readFloat2_info, @object
Numeric.readFloat2_info:
	.quad	Numeric.readFloat2_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:58:59.260487876 UTC

.section .text
.align 8
_c462G:
_c462G:
	movq Text.ParserCombinators.ReadP.Fail_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c462G, .-_c462G


==================== Asm code ====================
2018-03-16 15:58:59.261035789 UTC

.section .data.rel.ro
.align 8
.align 1
block_c462G_info:
	.quad	_c462G
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.262773061 UTC

.section .data
.align 8
.align 1
.globl Numeric.readFloat1_closure
.type Numeric.readFloat1_closure, @object
Numeric.readFloat1_closure:
	.quad	Text.ParserCombinators.ReadP.Look_con_info
	.quad	Numeric.readFloat2_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:58:59.271982637 UTC

.section .data
.align 8
.align 1
.globl Numeric.readFloat_closure
.type Numeric.readFloat_closure, @object
Numeric.readFloat_closure:
	.quad	Numeric.readFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.272789621 UTC

.section .text
.align 8
$dFractional_s45Sa_entry:
_c463j:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c463k
_c463l:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.$p2RealFrac_entry@gotpcrel(%rip)
_c463k:
	jmp *-16(%r13)
	.size $dFractional_s45Sa_entry, .-$dFractional_s45Sa_entry


==================== Asm code ====================
2018-03-16 15:58:59.273656574 UTC

.section .data.rel.ro
.align 8
.align 1
$dFractional_s45Sa_info:
	.quad	$dFractional_s45Sa_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:58:59.274535351 UTC

.section .text
.align 8
sat_s45Sh_entry:
_c463I:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c463J
_c463K:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c463F_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp *Text.Read.Lex.$wnumberToRational_entry@gotpcrel(%rip)
_c463J:
	jmp *-16(%r13)
	.size sat_s45Sh_entry, .-sat_s45Sh_entry


==================== Asm code ====================
2018-03-16 15:58:59.275144939 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Sh_info:
	.quad	sat_s45Sh_entry
	.quad	1
	.quad	4294967312
	.quad	S45Zy_srt+72


==================== Asm code ====================
2018-03-16 15:58:59.275841037 UTC

.section .text
.align 8
_c463F:
_c463F:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c463N
_c463M:
	movq GHC.Real.:%_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c463N:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c463F, .-_c463F


==================== Asm code ====================
2018-03-16 15:58:59.276463926 UTC

.section .data.rel.ro
.align 8
.align 1
block_c463F_info:
	.quad	_c463F
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.27738438 UTC

.section .text
.align 8
sat_s45Si_entry:
_c463O:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c463P
_c463Q:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c463S
_c463R:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s45Sh_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Real.fromRational_entry@gotpcrel(%rip)
_c463S:
	movq $24,904(%r13)
_c463P:
	jmp *-16(%r13)
	.size sat_s45Si_entry, .-sat_s45Si_entry


==================== Asm code ====================
2018-03-16 15:58:59.278034088 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Si_info:
	.quad	sat_s45Si_entry
	.quad	2
	.quad	4294967314
	.quad	S45Zy_srt+72


==================== Asm code ====================
2018-03-16 15:58:59.278720581 UTC

.section .text
.align 8
sat_s45Sj_entry:
_c463X:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c463Y
_c463Z:
	leaq block_c463r_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c463r
_c463s:
	movq (%rbx),%rax
	jmp *(%rax)
_c463Y:
	jmp *-8(%r13)
	.size sat_s45Sj_entry, .-sat_s45Sj_entry


==================== Asm code ====================
2018-03-16 15:58:59.279465129 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Sj_info:
	.quad	sat_s45Sj_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S45Zy_srt+72


==================== Asm code ====================
2018-03-16 15:58:59.280227773 UTC

.section .text
.align 8
_c463r:
_c463r:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $6,%rax
	je _c463V
_c463U:
	movq Text.ParserCombinators.ReadP.Fail_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4645:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c463V:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c4645
_c4644:
	movq 2(%rbx),%rax
	leaq sat_s45Si_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq Text.ParserCombinators.ReadP.Result_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	movq Text.ParserCombinators.ReadP.Fail_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,(%r12)
	leaq -12(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c463r, .-_c463r


==================== Asm code ====================
2018-03-16 15:58:59.28094303 UTC

.section .data.rel.ro
.align 8
.align 1
block_c463r_info:
	.quad	_c463r
	.quad	1
	.quad	4294967326
	.quad	S45Zy_srt+72


==================== Asm code ====================
2018-03-16 15:58:59.281846783 UTC

.section .text
.align 8
sat_s45Sk_entry:
_c4647:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4648
_c4649:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c464b
_c464a:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq $dFractional_s45Sa_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-16(%r12)
	leaq sat_s45Sj_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -32(%r12),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%r14
	addq $-16,%rbp
	jmp *Text.Read.Lex.expect2_entry@gotpcrel(%rip)
_c464b:
	movq $40,904(%r13)
_c4648:
	jmp *-16(%r13)
	.size sat_s45Sk_entry, .-sat_s45Sk_entry


==================== Asm code ====================
2018-03-16 15:58:59.282528407 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Sk_info:
	.quad	sat_s45Sk_entry
	.quad	1
	.quad	12884901904
	.quad	S45Zy_srt+72


==================== Asm code ====================
2018-03-16 15:58:59.283299869 UTC

.section .text
.align 8
lvl116_s45S9_entry:
_c464c:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c464d
_c464e:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c464g
_c464f:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq sat_s45Sk_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	leaq Numeric.readFloat1_closure+2(%rip),%r14
	addq $-16,%rbp
	jmp *Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_entry@gotpcrel(%rip)
_c464g:
	movq $24,904(%r13)
_c464d:
	jmp *-16(%r13)
	.size lvl116_s45S9_entry, .-lvl116_s45S9_entry


==================== Asm code ====================
2018-03-16 15:58:59.284100002 UTC

.section .data.rel.ro
.align 8
.align 1
lvl116_s45S9_info:
	.quad	lvl116_s45S9_entry
	.quad	1
	.quad	30064771088
	.quad	S45Zy_srt+72


==================== Asm code ====================
2018-03-16 15:58:59.284658529 UTC

.section .text
.align 8
k_s45Sl_entry:
_c464m:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size k_s45Sl_entry, .-k_s45Sl_entry


==================== Asm code ====================
2018-03-16 15:58:59.285170853 UTC

.section .data.rel.ro
.align 8
.align 1
k_s45Sl_info:
	.quad	k_s45Sl_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:58:59.28575394 UTC

.section .text
.align 8
sat_s45So_entry:
_c464u:
	movq 7(%rbx),%rsi
	jmp *Text.ParserCombinators.ReadP.skipSpaces2_entry@gotpcrel(%rip)
	.size sat_s45So_entry, .-sat_s45So_entry


==================== Asm code ====================
2018-03-16 15:58:59.286363481 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45So_info:
	.quad	sat_s45So_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:58:59.287059518 UTC

.section .text
.align 8
.globl Numeric.readFloat_entry
.type Numeric.readFloat_entry, @object
Numeric.readFloat_entry:
_c464y:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c464C
_c464B:
	leaq lvl116_s45S9_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-48(%r12)
	leaq k_s45Sl_info(%rip),%rax
	movq %rax,-40(%r12)
	leaq -64(%r12),%rax
	movq %rax,-32(%r12)
	leaq sat_s45So_info(%rip),%rax
	movq %rax,-24(%r12)
	leaq -39(%r12),%rax
	movq %rax,-16(%r12)
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq -23(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%r14
	movq Text.ParserCombinators.ReadP.run_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c464C:
	movq $72,904(%r13)
	leaq Numeric.readFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.readFloat_entry, .-Numeric.readFloat_entry


==================== Asm code ====================
2018-03-16 15:58:59.287762519 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.readFloat_info
.type Numeric.readFloat_info, @object
Numeric.readFloat_info:
	.quad	Numeric.readFloat_entry
	.quad	0
	.quad	64424509454
	.quad	4294967301
	.quad	S45Zy_srt+72


==================== Asm code ====================
2018-03-16 15:58:59.308241855 UTC

.section .data
.align 8
.align 1
.globl Numeric.readSigned_closure
.type Numeric.readSigned_closure, @object
Numeric.readSigned_closure:
	.quad	Numeric.readSigned_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.309077031 UTC

.section .text
.align 8
$dNum_s45St_entry:
_c4661:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4662
_c4663:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
_c4662:
	jmp *-16(%r13)
	.size $dNum_s45St_entry, .-$dNum_s45St_entry


==================== Asm code ====================
2018-03-16 15:58:59.31018166 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s45St_info:
	.quad	$dNum_s45St_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:58:59.311011381 UTC

.section .text
.align 8
go1_s45SD_entry:
_c466x:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c466y
_u4674:
	movq %rbx,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp _c466n
_c466y:
	jmp *-8(%r13)
	.size go1_s45SD_entry, .-go1_s45SD_entry


==================== Asm code ====================
2018-03-16 15:58:59.311629041 UTC

.section .data.rel.ro
.align 8
.align 1
go1_s45SD_info:
	.quad	go1_s45SD_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:58:59.312310463 UTC

.section .text
.align 8
_c466n:
_c466n:
	leaq block_c466q_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 8(%rbp),%rbx
	movq (%rbp),%rax
	movq 15(%rax),%rcx
	movq %rcx,-8(%rbp)
	movq 7(%rax),%rax
	movq %rax,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c466q
_c466r:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c466n, .-_c466n


==================== Asm code ====================
2018-03-16 15:58:59.313279376 UTC

.section .text
.align 8
_c466q:
_c466q:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c466u
_c466v:
	leaq block_c466F_info(%rip),%rax
	movq %rax,(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c466F
_c466H:
	movq (%rbx),%rax
	jmp *(%rax)
_c466u:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c466q, .-_c466q


==================== Asm code ====================
2018-03-16 15:58:59.313880848 UTC

.section .data.rel.ro
.align 8
.align 1
block_c466q_info:
	.quad	_c466q
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.314499568 UTC

.section .text
.align 8
_c466F:
_c466F:
	leaq block_c466L_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c466L
_c466N:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c466F, .-_c466F


==================== Asm code ====================
2018-03-16 15:58:59.315074559 UTC

.section .data.rel.ro
.align 8
.align 1
block_c466F_info:
	.quad	_c466F
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.3160094 UTC

.section .text
.align 8
_c466L:
_c466L:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c466V
_c4672:
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp _c466n
_c466Y:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c466V:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c466Y
_c466X:
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-72(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movq 32(%rbp),%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c466L, .-_c466L


==================== Asm code ====================
2018-03-16 15:58:59.316684669 UTC

.section .data.rel.ro
.align 8
.align 1
block_c466L_info:
	.quad	_c466L
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.317416318 UTC

.section .text
.align 8
go_s45Su_entry:
_c467f:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c467g
_c467h:
	leaq block_c4669_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4669
_c466a:
	movq (%rbx),%rax
	jmp *(%rax)
_c467g:
	jmp *-8(%r13)
	.size go_s45Su_entry, .-go_s45Su_entry


==================== Asm code ====================
2018-03-16 15:58:59.31817448 UTC

.section .data.rel.ro
.align 8
.align 1
go_s45Su_info:
	.quad	go_s45Su_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:58:59.318845147 UTC

.section .text
.align 8
_c4669:
_c4669:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c467c
_c467d:
	leaq block_c466f_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c466f
_c466g:
	movq (%rbx),%rax
	jmp *(%rax)
_c467c:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4669, .-_c4669


==================== Asm code ====================
2018-03-16 15:58:59.319432884 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4669_info:
	.quad	_c4669
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.320279807 UTC

.section .text
.align 8
_c466f:
_c466f:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c467o
_c467n:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-32(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-24(%r12)
	leaq go1_s45SD_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -48(%r12),%rbx
	movq %rbx,(%r12)
	movq 16(%rbp),%rbx
	leaq block_c467k_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rax,%r14
	leaq -15(%r12),%rax
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c467o:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c466f, .-_c466f


==================== Asm code ====================
2018-03-16 15:58:59.320940959 UTC

.section .data.rel.ro
.align 8
.align 1
block_c466f_info:
	.quad	_c466f
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.321614646 UTC

.section .text
.align 8
_c467k:
_c467k:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go1_s45SD_entry
	.size _c467k, .-_c467k


==================== Asm code ====================
2018-03-16 15:58:59.322306601 UTC

.section .data.rel.ro
.align 8
.align 1
block_c467k_info:
	.quad	_c467k
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.323040493 UTC

.section .text
.align 8
sat_s45Tf_entry:
_c468q:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c468r
_c468s:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
_c468r:
	jmp *-16(%r13)
	.size sat_s45Tf_entry, .-sat_s45Tf_entry


==================== Asm code ====================
2018-03-16 15:58:59.323659415 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Tf_info:
	.quad	sat_s45Tf_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:58:59.324530376 UTC

.section .text
.align 8
go2_s45T7_entry:
_c468x:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c468y
_c468z:
	leaq block_c468a_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c468a
_c468b:
	movq (%rbx),%rax
	jmp *(%rax)
_c468y:
	jmp *-8(%r13)
	.size go2_s45T7_entry, .-go2_s45T7_entry


==================== Asm code ====================
2018-03-16 15:58:59.3251583 UTC

.section .data.rel.ro
.align 8
.align 1
go2_s45T7_info:
	.quad	go2_s45T7_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:58:59.325898108 UTC

.section .text
.align 8
_c468a:
_c468a:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c468u
_c468v:
	leaq block_c468g_info(%rip),%rax
	movq %rax,(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c468g
_c468h:
	movq (%rbx),%rax
	jmp *(%rax)
_c468u:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c468a, .-_c468a


==================== Asm code ====================
2018-03-16 15:58:59.326650603 UTC

.section .data.rel.ro
.align 8
.align 1
block_c468a_info:
	.quad	_c468a
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.327398376 UTC

.section .text
.align 8
_c468g:
_c468g:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c468H
_c468G:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-104(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-88(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-80(%r12)
	leaq sat_s45Tf_info(%rip),%rcx
	movq %rcx,-72(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-56(%r12)
	movq %rax,-48(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq -72(%r12),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -104(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c468H:
	movq $112,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c468g, .-_c468g


==================== Asm code ====================
2018-03-16 15:58:59.328098378 UTC

.section .data.rel.ro
.align 8
.align 1
block_c468g_info:
	.quad	_c468g
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.328894805 UTC

.section .text
.align 8
go1_s45SR_entry:
_c468O:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c468P
_u469q:
	movq %rbx,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp _c467x
_c468P:
	jmp *-8(%r13)
	.size go1_s45SR_entry, .-go1_s45SR_entry


==================== Asm code ====================
2018-03-16 15:58:59.331628314 UTC

.section .data.rel.ro
.align 8
.align 1
go1_s45SR_info:
	.quad	go1_s45SR_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	S45Zy_srt+104


==================== Asm code ====================
2018-03-16 15:58:59.332364637 UTC

.section .text
.align 8
_c467x:
_c467x:
	leaq block_c467A_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 8(%rbp),%rbx
	movq (%rbp),%rax
	movq 15(%rax),%rcx
	movq %rcx,-8(%rbp)
	movq 7(%rax),%rax
	movq %rax,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c467A
_c467B:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c467x, .-_c467x


==================== Asm code ====================
2018-03-16 15:58:59.333271519 UTC

.section .text
.align 8
_c467A:
_c467A:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c468L
_c468M:
	leaq block_c467G_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c467G
_c467H:
	movq (%rbx),%rax
	jmp *(%rax)
_c468L:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c467A, .-_c467A


==================== Asm code ====================
2018-03-16 15:58:59.334231981 UTC

.section .data.rel.ro
.align 8
.align 1
block_c467A_info:
	.quad	_c467A
	.quad	3
	.quad	4294967326
	.quad	S45Zy_srt+104


==================== Asm code ====================
2018-03-16 15:58:59.334923576 UTC

.section .text
.align 8
_c467G:
_c467G:
	leaq block_c467L_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c467L
_c467M:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c467G, .-_c467G


==================== Asm code ====================
2018-03-16 15:58:59.335470625 UTC

.section .data.rel.ro
.align 8
.align 1
block_c467G_info:
	.quad	_c467G
	.quad	4
	.quad	4294967326
	.quad	S45Zy_srt+104


==================== Asm code ====================
2018-03-16 15:58:59.336236117 UTC

.section .text
.align 8
_c467L:
_c467L:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u469r
_c4690:
	leaq block_c467R_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c467R
_c467S:
	movq (%rbx),%rax
	jmp *(%rax)
_u469r:
	addq $16,%rbp
	jmp _c469n
	.size _c467L, .-_c467L


==================== Asm code ====================
2018-03-16 15:58:59.33685998 UTC

.section .data.rel.ro
.align 8
.align 1
block_c467L_info:
	.quad	_c467L
	.quad	5
	.quad	4294967326
	.quad	S45Zy_srt+104


==================== Asm code ====================
2018-03-16 15:58:59.337544826 UTC

.section .text
.align 8
_c467R:
_c467R:
	cmpq $45,7(%rbx)
	je _c4694
_u469s:
	addq $24,%rbp
	jmp _c469n
_c4694:
	movq 8(%rbp),%rax
	leaq block_c467Z_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c467Z
_c4680:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c467R, .-_c467R


==================== Asm code ====================
2018-03-16 15:58:59.338303703 UTC

.section .data.rel.ro
.align 8
.align 1
block_c467R_info:
	.quad	_c467R
	.quad	6
	.quad	4294967326
	.quad	S45Zy_srt+104


==================== Asm code ====================
2018-03-16 15:58:59.339108801 UTC

.section .text
.align 8
_c467Z:
_c467Z:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c469b
_u469t:
	addq $16,%rbp
	jmp _c469n
_c469e:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c469b:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c469e
_c469d:
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	leaq go2_s45T7_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq block_c4695_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rsi
	movq GHC.Read.lex1_closure@gotpcrel(%rip),%r14
	leaq -15(%r12),%rax
	movq %rax,40(%rbp)
	addq $16,%rbp
	jmp *Text.ParserCombinators.ReadP.run_entry@gotpcrel(%rip)
	.size _c467Z, .-_c467Z


==================== Asm code ====================
2018-03-16 15:58:59.339814667 UTC

.section .data.rel.ro
.align 8
.align 1
block_c467Z_info:
	.quad	_c467Z
	.quad	5
	.quad	4294967326
	.quad	S45Zy_srt+104


==================== Asm code ====================
2018-03-16 15:58:59.340568952 UTC

.section .text
.align 8
_c4695:
_c4695:
	leaq block_c4699_info(%rip),%rax
	movq %rax,16(%rbp)
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s45Su_entry
	.size _c4695, .-_c4695


==================== Asm code ====================
2018-03-16 15:58:59.341115834 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4695_info:
	.quad	_c4695
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.341696347 UTC

.section .text
.align 8
_c4699:
_c4699:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go2_s45T7_entry
	.size _c4699, .-_c4699


==================== Asm code ====================
2018-03-16 15:58:59.342231361 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4699_info:
	.quad	_c4699
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.342990937 UTC

.section .text
.align 8
_c469n:
_c469n:
	movq (%rbp),%rax
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp _c467x
	.size _c469n, .-_c469n


==================== Asm code ====================
2018-03-16 15:58:59.34368745 UTC

.section .text
.align 8
sat_s45Tq_entry:
_c469Q:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c469R
_c469S:
	leaq block_c469O_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 24(%rbx),%rsi
	movq GHC.Read.lex1_closure@gotpcrel(%rip),%r14
	movq 16(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *Text.ParserCombinators.ReadP.run_entry@gotpcrel(%rip)
_c469R:
	jmp *-16(%r13)
	.size sat_s45Tq_entry, .-sat_s45Tq_entry


==================== Asm code ====================
2018-03-16 15:58:59.344282594 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Tq_info:
	.quad	sat_s45Tq_entry
	.quad	2
	.quad	4294967314
	.quad	S45Zy_srt+104


==================== Asm code ====================
2018-03-16 15:58:59.345005803 UTC

.section .text
.align 8
_c469O:
_c469O:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go1_s45SR_entry
	.size _c469O, .-_c469O


==================== Asm code ====================
2018-03-16 15:58:59.346157346 UTC

.section .data.rel.ro
.align 8
.align 1
block_c469O_info:
	.quad	_c469O
	.quad	1
	.quad	4294967326
	.quad	S45Zy_srt+104


==================== Asm code ====================
2018-03-16 15:58:59.346974822 UTC

.section .text
.align 8
sat_s45Tr_entry:
_c469Y:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c46a2
_c46a3:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c46a5
_c46a4:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_s45Tq_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_c469W_info(%rip),%rbx
	movq %rbx,-24(%rbp)
	movq %r14,%rsi
	movq GHC.Read.lex1_closure@gotpcrel(%rip),%r14
	leaq -24(%r12),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *Text.ParserCombinators.ReadP.run_entry@gotpcrel(%rip)
_c46a5:
	movq $32,904(%r13)
_c46a2:
	jmp *-8(%r13)
	.size sat_s45Tr_entry, .-sat_s45Tr_entry


==================== Asm code ====================
2018-03-16 15:58:59.34785601 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Tr_info:
	.quad	sat_s45Tr_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	S45Zy_srt+104


==================== Asm code ====================
2018-03-16 15:58:59.348429943 UTC

.section .text
.align 8
_c469W:
_c469W:
	leaq block_c46a1_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	movq 16(%rbp),%rbx
	jmp go_s45Su_entry
	.size _c469W, .-_c469W


==================== Asm code ====================
2018-03-16 15:58:59.348990847 UTC

.section .data.rel.ro
.align 8
.align 1
block_c469W_info:
	.quad	_c469W
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.349824837 UTC

.section .text
.align 8
_c46a1:
_c46a1:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $24,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
	.size _c46a1, .-_c46a1


==================== Asm code ====================
2018-03-16 15:58:59.350339737 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46a1_info:
	.quad	_c46a1
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.351130292 UTC

.section .text
.align 8
.globl Numeric.readSigned_entry
.type Numeric.readSigned_entry, @object
Numeric.readSigned_entry:
_c46ab:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c46af
_c46ae:
	leaq $dNum_s45St_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	leaq go_s45Su_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %rsi,-48(%r12)
	leaq go1_s45SR_info(%rip),%rax
	movq %rax,-40(%r12)
	leaq -80(%r12),%rax
	movq %rax,-32(%r12)
	leaq -55(%r12),%rax
	movq %rax,-24(%r12)
	leaq sat_s45Tr_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	leaq -39(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rsi
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	jmp *GHC.Read.readParen_entry@gotpcrel(%rip)
_c46af:
	movq $88,904(%r13)
	leaq Numeric.readSigned_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.readSigned_entry, .-Numeric.readSigned_entry


==================== Asm code ====================
2018-03-16 15:58:59.351847764 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.readSigned_info
.type Numeric.readSigned_info, @object
Numeric.readSigned_info:
	.quad	Numeric.readSigned_entry
	.quad	0
	.quad	30064771086
	.quad	12884901911
	.quad	S45Zy_srt+104


==================== Asm code ====================
2018-03-16 15:58:59.353722335 UTC

.section .data
.align 8
.align 1
sat_s45Ts_closure:
	.quad	GHC.Types.I#_con_info
	.quad	10


==================== Asm code ====================
2018-03-16 15:58:59.355425091 UTC

.section .data
.align 8
.align 1
sat_s45Tt_closure:
	.quad	:_con_info
	.quad	sat_s45Ts_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.358610821 UTC

.section .data
.align 8
.align 1
.globl Numeric.showInt2_closure
.type Numeric.showInt2_closure, @object
Numeric.showInt2_closure:
	.quad	Numeric.showInt2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.359694901 UTC

.section .text
.align 8
.globl Numeric.showInt2_entry
.type Numeric.showInt2_entry, @object
Numeric.showInt2_entry:
_c46dC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46dD
_c46dE:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c46dB
_c46dA:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq sat_s45Tt_closure+2(%rip),%rsi
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_c46dD:
	jmp *-16(%r13)
_c46dB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showInt2_entry, .-Numeric.showInt2_entry


==================== Asm code ====================
2018-03-16 15:58:59.360355244 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showInt2_info
.type Numeric.showInt2_info, @object
Numeric.showInt2_info:
	.quad	Numeric.showInt2_entry
	.quad	0
	.quad	4294967317
	.quad	S45Zy_srt+128


==================== Asm code ====================
2018-03-16 15:58:59.362078085 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl_r43OH_bytes:
	.asciz "Numeric.showInt: can't show negative numbers"


==================== Asm code ====================
2018-03-16 15:58:59.365012171 UTC

.section .data
.align 8
.align 1
.globl Numeric.showInt1_closure
.type Numeric.showInt1_closure, @object
Numeric.showInt1_closure:
	.quad	Numeric.showInt1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.36611963 UTC

.section .text
.align 8
.globl Numeric.showInt1_entry
.type Numeric.showInt1_entry, @object
Numeric.showInt1_entry:
_c46dX:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c46dY
_c46dZ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c46dU
_c46dT:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_c46dV_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl_r43OH_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c46dY:
	jmp *-16(%r13)
_c46dU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showInt1_entry, .-Numeric.showInt1_entry


==================== Asm code ====================
2018-03-16 15:58:59.366785097 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showInt1_info
.type Numeric.showInt1_info, @object
Numeric.showInt1_info:
	.quad	Numeric.showInt1_entry
	.quad	0
	.quad	4294967317
	.quad	S45Zy_srt+136


==================== Asm code ====================
2018-03-16 15:58:59.367412381 UTC

.section .text
.align 8
_c46dV:
_c46dV:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size _c46dV, .-_c46dV


==================== Asm code ====================
2018-03-16 15:58:59.368118802 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46dV_info:
	.quad	_c46dV
	.quad	0
	.quad	4294967326
	.quad	S45Zy_srt+136


==================== Asm code ====================
2018-03-16 15:58:59.370852126 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat16_closure
.type Numeric.showHFloat16_closure, @object
Numeric.showHFloat16_closure:
	.quad	Numeric.showHFloat16_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.371716199 UTC

.section .text
.align 8
.globl Numeric.showHFloat16_entry
.type Numeric.showHFloat16_entry, @object
Numeric.showHFloat16_entry:
_c46el:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46em
_c46en:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c46ek
_c46ej:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_c46em:
	jmp *-16(%r13)
_c46ek:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showHFloat16_entry, .-Numeric.showHFloat16_entry


==================== Asm code ====================
2018-03-16 15:58:59.372407773 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat16_info
.type Numeric.showHFloat16_info, @object
Numeric.showHFloat16_info:
	.quad	Numeric.showHFloat16_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:58:59.383889503 UTC

.section .data
.align 8
.align 1
.globl Numeric.showInt_closure
.type Numeric.showInt_closure, @object
Numeric.showInt_closure:
	.quad	Numeric.showInt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.384892415 UTC

.section .text
.align 8
sat_s45TB_entry:
_c46fv:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46fw
_c46fx:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c46ft_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
_c46fw:
	jmp *-16(%r13)
	.size sat_s45TB_entry, .-sat_s45TB_entry


==================== Asm code ====================
2018-03-16 15:58:59.385556551 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45TB_info:
	.quad	sat_s45TB_entry
	.quad	1
	.quad	4294967312
	.quad	S45Zy_srt+144


==================== Asm code ====================
2018-03-16 15:58:59.386154594 UTC

.section .text
.align 8
_c46ft:
_c46ft:
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	leaq Numeric.showHFloat16_closure(%rip),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
	.size _c46ft, .-_c46ft


==================== Asm code ====================
2018-03-16 15:58:59.386743145 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46ft_info:
	.quad	_c46ft
	.quad	0
	.quad	4294967326
	.quad	S45Zy_srt+144


==================== Asm code ====================
2018-03-16 15:58:59.387590193 UTC

.section .text
.align 8
lvl5_s45TD_entry:
_c46fF:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46fG
_c46fH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c46fD_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
_c46fG:
	jmp *-16(%r13)
	.size lvl5_s45TD_entry, .-lvl5_s45TD_entry


==================== Asm code ====================
2018-03-16 15:58:59.388215671 UTC

.section .data.rel.ro
.align 8
.align 1
lvl5_s45TD_info:
	.quad	lvl5_s45TD_entry
	.quad	1
	.quad	4294967312
	.quad	S45Zy_srt+152


==================== Asm code ====================
2018-03-16 15:58:59.388847536 UTC

.section .text
.align 8
_c46fD:
_c46fD:
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	leaq Numeric.showInt2_closure(%rip),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
	.size _c46fD, .-_c46fD


==================== Asm code ====================
2018-03-16 15:58:59.389602355 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46fD_info:
	.quad	_c46fD
	.quad	0
	.quad	4294967326
	.quad	S45Zy_srt+152


==================== Asm code ====================
2018-03-16 15:58:59.390273085 UTC

.section .text
.align 8
ds_s45TS_entry:
_c46fN:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c46fO
_c46fP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Real.quotRem_entry@gotpcrel(%rip)
_c46fO:
	jmp *-16(%r13)
	.size ds_s45TS_entry, .-ds_s45TS_entry


==================== Asm code ====================
2018-03-16 15:58:59.390921911 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s45TS_info:
	.quad	ds_s45TS_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:58:59.391839867 UTC

.section .text
.align 8
.globl Numeric.showInt_entry
.type Numeric.showInt_entry, @object
Numeric.showInt_entry:
_c46fQ:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c46fR
_c46fS:
	leaq block_c46eC_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp *GHC.Real.$p1Integral_entry@gotpcrel(%rip)
_c46fR:
	leaq Numeric.showInt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.showInt_entry, .-Numeric.showInt_entry


==================== Asm code ====================
2018-03-16 15:58:59.392459565 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showInt_info
.type Numeric.showInt_info, @object
Numeric.showInt_info:
	.quad	Numeric.showInt_entry
	.quad	0
	.quad	64424509454
	.quad	12884901911
	.quad	S45Zy_srt+144


==================== Asm code ====================
2018-03-16 15:58:59.393182764 UTC

.section .text
.align 8
_c46eC:
_c46eC:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c46fV
_c46fU:
	leaq sat_s45TB_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c46eI_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%r14
	movq %rbx,-8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Real.$p2Real_entry@gotpcrel(%rip)
_c46fV:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c46eC, .-_c46eC


==================== Asm code ====================
2018-03-16 15:58:59.394025163 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46eC_info:
	.quad	_c46eC
	.quad	3
	.quad	47244640286
	.quad	S45Zy_srt+144


==================== Asm code ====================
2018-03-16 15:58:59.394651952 UTC

.section .text
.align 8
_c46eI:
_c46eI:
	leaq block_c46eM_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
	.size _c46eI, .-_c46eI


==================== Asm code ====================
2018-03-16 15:58:59.39526585 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46eI_info:
	.quad	_c46eI
	.quad	5
	.quad	21474836510
	.quad	S45Zy_srt+152


==================== Asm code ====================
2018-03-16 15:58:59.396209221 UTC

.section .text
.align 8
_c46eM:
_c46eM:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c46fY
_c46gI:
	leaq Numeric.showInt1_closure(%rip),%rbx
	addq $48,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c46g1:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c46fY:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c46g1
_c46g0:
	leaq lvl5_s45TD_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c46eS_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%r14
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp *GHC.Real.$p2Real_entry@gotpcrel(%rip)
	.size _c46eM, .-_c46eM


==================== Asm code ====================
2018-03-16 15:58:59.396866419 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46eM_info:
	.quad	_c46eM
	.quad	133
	.quad	21474836510
	.quad	S45Zy_srt+152


==================== Asm code ====================
2018-03-16 15:58:59.397435467 UTC

.section .text
.align 8
_c46eS:
_c46eS:
	movq 32(%rbp),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rax
	movq %rax,24(%rbp)
	movq %rbx,32(%rbp)
	jmp _c46f1
	.size _c46eS, .-_c46eS


==================== Asm code ====================
2018-03-16 15:58:59.398138269 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46eS_info:
	.quad	_c46eS
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.398792817 UTC

.section .text
.align 8
_c46f1:
_c46f1:
	leaq block_c46f3_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 32(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-24(%rbp)
	movq 8(%rbp),%rax
	movq %rax,-16(%rbp)
	addq $-32,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
	.size _c46f1, .-_c46f1


==================== Asm code ====================
2018-03-16 15:58:59.399979953 UTC

.section .text
.align 8
_c46f3:
_c46f3:
	movq 24(%rbp),%rax
	movq 32(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c46gt
_c46gE:
	leaq block_c46g6_info(%rip),%rbx
	movq %rbx,32(%rbp)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,16(%rbp)
	movq %rcx,24(%rbp)
	movq 8(%rbp),%rax
	movq %rax,40(%rbp)
	addq $16,%rbp
	jmp *GHC.Real.toInteger_entry@gotpcrel(%rip)
_c46gw:
	movq $64,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c46gt:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c46gw
_c46gv:
	leaq ds_s45TS_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-40(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rcx,-24(%r12)
	movq stg_sel_1_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -56(%r12),%rbx
	movq %rbx,(%r12)
	leaq block_c46fa_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	movq %rbx,32(%rbp)
	addq $-16,%rbp
	jmp *GHC.Real.toInteger_entry@gotpcrel(%rip)
	.size _c46f3, .-_c46f3


==================== Asm code ====================
2018-03-16 15:58:59.400767091 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46f3_info:
	.quad	_c46f3
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.401827827 UTC

.section .text
.align 8
_c46fa:
_c46fa:
	leaq block_c46fe_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
	.size _c46fa, .-_c46fa


==================== Asm code ====================
2018-03-16 15:58:59.4025611 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46fa_info:
	.quad	_c46fa
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.403258527 UTC

.section .text
.align 8
_c46fe:
_c46fe:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c46gA
_c46gz:
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq 48(%rbx),%rax
	movq %rax,-48(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq -55(%r12),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq -16(%r12),%rax
	movq %rax,32(%rbp)
	leaq -38(%r12),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _c46f1
_c46gA:
	movq $64,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c46fe, .-_c46fe


==================== Asm code ====================
2018-03-16 15:58:59.403925382 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46fe_info:
	.quad	_c46fe
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.40452371 UTC

.section .text
.align 8
_c46g6:
_c46g6:
	leaq block_c46ga_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
	.size _c46g6, .-_c46g6


==================== Asm code ====================
2018-03-16 15:58:59.405213703 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46g6_info:
	.quad	_c46g6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.406061536 UTC

.section .text
.align 8
_c46ga:
_c46ga:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c46gq
_c46gp:
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq 48(%rbx),%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c46gq:
	movq $40,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c46ga, .-_c46ga


==================== Asm code ====================
2018-03-16 15:58:59.406711255 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46ga_info:
	.quad	_c46ga
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.410392066 UTC

.section .data
.align 8
.align 1
.globl Numeric.showFFloatAlt_closure
.type Numeric.showFFloatAlt_closure, @object
Numeric.showFFloatAlt_closure:
	.quad	Numeric.showFFloatAlt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.411162783 UTC

.section .text
.align 8
sat_s45Ua_entry:
_c46iL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46iM
_c46iN:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r9
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r8
	movq 24(%rbx),%rdi
	movq GHC.Float.FFFixed_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.formatRealFloatAlt_entry@gotpcrel(%rip)
_c46iM:
	jmp *-16(%r13)
	.size sat_s45Ua_entry, .-sat_s45Ua_entry


==================== Asm code ====================
2018-03-16 15:58:59.41194739 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Ua_info:
	.quad	sat_s45Ua_entry
	.quad	3
	.quad	4294967311
	.quad	S45Zy_srt+176


==================== Asm code ====================
2018-03-16 15:58:59.412637635 UTC

.section .text
.align 8
.globl Numeric.showFFloatAlt_entry
.type Numeric.showFFloatAlt_entry, @object
Numeric.showFFloatAlt_entry:
_c46iO:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c46iS
_c46iR:
	leaq sat_s45Ua_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -32(%r12),%r14
	movq GHC.Base.++_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c46iS:
	movq $40,904(%r13)
	leaq Numeric.showFFloatAlt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.showFFloatAlt_entry, .-Numeric.showFFloatAlt_entry


==================== Asm code ====================
2018-03-16 15:58:59.413311773 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showFFloatAlt_info
.type Numeric.showFFloatAlt_info, @object
Numeric.showFFloatAlt_info:
	.quad	Numeric.showFFloatAlt_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S45Zy_srt+176


==================== Asm code ====================
2018-03-16 15:58:59.416661164 UTC

.section .data
.align 8
.align 1
.globl Numeric.showGFloatAlt_closure
.type Numeric.showGFloatAlt_closure, @object
Numeric.showGFloatAlt_closure:
	.quad	Numeric.showGFloatAlt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.417402548 UTC

.section .text
.align 8
sat_s45Ue_entry:
_c46je:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46jf
_c46jg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r9
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r8
	movq 24(%rbx),%rdi
	movq GHC.Float.FFGeneric_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.formatRealFloatAlt_entry@gotpcrel(%rip)
_c46jf:
	jmp *-16(%r13)
	.size sat_s45Ue_entry, .-sat_s45Ue_entry


==================== Asm code ====================
2018-03-16 15:58:59.418193255 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Ue_info:
	.quad	sat_s45Ue_entry
	.quad	3
	.quad	4294967311
	.quad	S45Zy_srt+176


==================== Asm code ====================
2018-03-16 15:58:59.418877046 UTC

.section .text
.align 8
.globl Numeric.showGFloatAlt_entry
.type Numeric.showGFloatAlt_entry, @object
Numeric.showGFloatAlt_entry:
_c46jh:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c46jl
_c46jk:
	leaq sat_s45Ue_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -32(%r12),%r14
	movq GHC.Base.++_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c46jl:
	movq $40,904(%r13)
	leaq Numeric.showGFloatAlt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.showGFloatAlt_entry, .-Numeric.showGFloatAlt_entry


==================== Asm code ====================
2018-03-16 15:58:59.419526153 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showGFloatAlt_info
.type Numeric.showGFloatAlt_info, @object
Numeric.showGFloatAlt_info:
	.quad	Numeric.showGFloatAlt_entry
	.quad	0
	.quad	21474836494
	.quad	12884901911
	.quad	S45Zy_srt+176


==================== Asm code ====================
2018-03-16 15:58:59.421235544 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl1_r43OI_bytes:
	.asciz "Numeric.showIntAtBase: applied to negative number "


==================== Asm code ====================
2018-03-16 15:58:59.425572887 UTC

.section .data
.align 8
.align 1
.globl Numeric.$wlvl_closure
.type Numeric.$wlvl_closure, @object
Numeric.$wlvl_closure:
	.quad	Numeric.$wlvl_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.426349348 UTC

.section .text
.align 8
sat_s45Uj_entry:
_c46jL:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c46jM
_c46jN:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c46jI_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 16(%rbx),%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
_c46jM:
	jmp *-16(%r13)
	.size sat_s45Uj_entry, .-sat_s45Uj_entry


==================== Asm code ====================
2018-03-16 15:58:59.427142225 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Uj_info:
	.quad	sat_s45Uj_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:58:59.427817853 UTC

.section .text
.align 8
_c46jI:
_c46jI:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c46jQ
_c46jP:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c46jQ:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c46jI, .-_c46jI


==================== Asm code ====================
2018-03-16 15:58:59.428590451 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46jI_info:
	.quad	_c46jI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.429369948 UTC

.section .text
.align 8
.globl Numeric.$wlvl_entry
.type Numeric.$wlvl_entry, @object
Numeric.$wlvl_entry:
_c46jT:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c46jU
_c46jV:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c46jX
_c46jW:
	leaq sat_s45Uj_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq block_c46jR_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -16(%r12),%rsi
	leaq lvl1_r43OI_bytes(%rip),%r14
	addq $-8,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c46jX:
	movq $24,904(%r13)
_c46jU:
	leaq Numeric.$wlvl_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.$wlvl_entry, .-Numeric.$wlvl_entry


==================== Asm code ====================
2018-03-16 15:58:59.429986251 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.$wlvl_info
.type Numeric.$wlvl_info, @object
Numeric.$wlvl_info:
	.quad	Numeric.$wlvl_entry
	.quad	0
	.quad	1103806595086
	.quad	4294967300
	.quad	S45Zy_srt+136


==================== Asm code ====================
2018-03-16 15:58:59.43067575 UTC

.section .text
.align 8
_c46jR:
_c46jR:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size _c46jR, .-_c46jR


==================== Asm code ====================
2018-03-16 15:58:59.43116194 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46jR_info:
	.quad	_c46jR
	.quad	0
	.quad	4294967326
	.quad	S45Zy_srt+136


==================== Asm code ====================
2018-03-16 15:58:59.432834095 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl2_r43OJ_bytes:
	.asciz "Numeric.showIntAtBase: applied to unsupported base "


==================== Asm code ====================
2018-03-16 15:58:59.436563502 UTC

.section .data
.align 8
.align 1
.globl Numeric.showIntAtBase2_closure
.type Numeric.showIntAtBase2_closure, @object
Numeric.showIntAtBase2_closure:
	.quad	Numeric.showIntAtBase2_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.437616754 UTC

.section .text
.align 8
sat_s45Un_entry:
_c46kw:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46kx
_c46ky:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Show.show_entry@gotpcrel(%rip)
_c46kx:
	jmp *-16(%r13)
	.size sat_s45Un_entry, .-sat_s45Un_entry


==================== Asm code ====================
2018-03-16 15:58:59.438185213 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Un_info:
	.quad	sat_s45Un_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:58:59.438924003 UTC

.section .text
.align 8
.globl Numeric.showIntAtBase2_entry
.type Numeric.showIntAtBase2_entry, @object
Numeric.showIntAtBase2_entry:
_c46kB:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c46kC
_c46kD:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c46kF
_c46kE:
	leaq sat_s45Un_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq block_c46kz_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -24(%r12),%rsi
	leaq lvl1_r43OI_bytes(%rip),%r14
	addq $-8,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c46kF:
	movq $32,904(%r13)
_c46kC:
	leaq Numeric.showIntAtBase2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.showIntAtBase2_entry, .-Numeric.showIntAtBase2_entry


==================== Asm code ====================
2018-03-16 15:58:59.439746397 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showIntAtBase2_info
.type Numeric.showIntAtBase2_info, @object
Numeric.showIntAtBase2_info:
	.quad	Numeric.showIntAtBase2_entry
	.quad	0
	.quad	2203318222862
	.quad	8589934607
	.quad	S45Zy_srt+136


==================== Asm code ====================
2018-03-16 15:58:59.440352399 UTC

.section .text
.align 8
_c46kz:
_c46kz:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size _c46kz, .-_c46kz


==================== Asm code ====================
2018-03-16 15:58:59.440883066 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46kz_info:
	.quad	_c46kz
	.quad	0
	.quad	4294967326
	.quad	S45Zy_srt+136


==================== Asm code ====================
2018-03-16 15:58:59.444546687 UTC

.section .data
.align 8
.align 1
.globl Numeric.showIntAtBase1_closure
.type Numeric.showIntAtBase1_closure, @object
Numeric.showIntAtBase1_closure:
	.quad	Numeric.showIntAtBase1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.445309663 UTC

.section .text
.align 8
sat_s45Ur_entry:
_c46l8:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46l9
_c46la:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Show.show_entry@gotpcrel(%rip)
_c46l9:
	jmp *-16(%r13)
	.size sat_s45Ur_entry, .-sat_s45Ur_entry


==================== Asm code ====================
2018-03-16 15:58:59.446076249 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Ur_info:
	.quad	sat_s45Ur_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:58:59.446797255 UTC

.section .text
.align 8
.globl Numeric.showIntAtBase1_entry
.type Numeric.showIntAtBase1_entry, @object
Numeric.showIntAtBase1_entry:
_c46ld:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c46le
_c46lf:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c46lh
_c46lg:
	leaq sat_s45Ur_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq block_c46lb_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -24(%r12),%rsi
	leaq lvl2_r43OJ_bytes(%rip),%r14
	addq $-8,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c46lh:
	movq $32,904(%r13)
_c46le:
	leaq Numeric.showIntAtBase1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.showIntAtBase1_entry, .-Numeric.showIntAtBase1_entry


==================== Asm code ====================
2018-03-16 15:58:59.44737532 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showIntAtBase1_info
.type Numeric.showIntAtBase1_info, @object
Numeric.showIntAtBase1_info:
	.quad	Numeric.showIntAtBase1_entry
	.quad	0
	.quad	4402341478414
	.quad	8589934607
	.quad	S45Zy_srt+136


==================== Asm code ====================
2018-03-16 15:58:59.448095148 UTC

.section .text
.align 8
_c46lb:
_c46lb:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size _c46lb, .-_c46lb


==================== Asm code ====================
2018-03-16 15:58:59.448604173 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46lb_info:
	.quad	_c46lb
	.quad	0
	.quad	4294967326
	.quad	S45Zy_srt+136


==================== Asm code ====================
2018-03-16 15:58:59.450320365 UTC

.section .data
.align 8
.align 1
sat_s45Ut_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:58:59.452025438 UTC

.section .data
.align 8
.align 1
sat_s45Uu_closure:
	.quad	:_con_info
	.quad	sat_s45Ut_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.455318338 UTC

.section .data
.align 8
.align 1
.globl Numeric.showIntAtBase3_closure
.type Numeric.showIntAtBase3_closure, @object
Numeric.showIntAtBase3_closure:
	.quad	Numeric.showIntAtBase3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.456348632 UTC

.section .text
.align 8
.globl Numeric.showIntAtBase3_entry
.type Numeric.showIntAtBase3_entry, @object
Numeric.showIntAtBase3_entry:
_c46lK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46lL
_c46lM:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c46lJ
_c46lI:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq sat_s45Uu_closure+2(%rip),%rsi
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_c46lL:
	jmp *-16(%r13)
_c46lJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showIntAtBase3_entry, .-Numeric.showIntAtBase3_entry


==================== Asm code ====================
2018-03-16 15:58:59.456951173 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showIntAtBase3_info
.type Numeric.showIntAtBase3_info, @object
Numeric.showIntAtBase3_info:
	.quad	Numeric.showIntAtBase3_entry
	.quad	0
	.quad	4294967317
	.quad	S45Zy_srt+224


==================== Asm code ====================
2018-03-16 15:58:59.471168679 UTC

.section .data
.align 8
.align 1
.globl Numeric.showIntAtBase_closure
.type Numeric.showIntAtBase_closure, @object
Numeric.showIntAtBase_closure:
	.quad	Numeric.showIntAtBase_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.472140047 UTC

.section .text
.align 8
$dNum_s45UC_entry:
_c46mS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46mT
_c46mU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
_c46mT:
	jmp *-16(%r13)
	.size $dNum_s45UC_entry, .-$dNum_s45UC_entry


==================== Asm code ====================
2018-03-16 15:58:59.472685611 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s45UC_info:
	.quad	$dNum_s45UC_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:58:59.473411434 UTC

.section .text
.align 8
sat_s45UE_entry:
_c46mX:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46mY
_c46mZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq Numeric.showIntAtBase3_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c46mY:
	jmp *-16(%r13)
	.size sat_s45UE_entry, .-sat_s45UE_entry


==================== Asm code ====================
2018-03-16 15:58:59.474179154 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45UE_info:
	.quad	sat_s45UE_entry
	.quad	1
	.quad	4294967312
	.quad	S45Zy_srt+232


==================== Asm code ====================
2018-03-16 15:58:59.474838587 UTC

.section .text
.align 8
sat_s45UG_entry:
_c46n2:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46n3
_c46n4:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq Numeric.showHFloat16_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c46n3:
	jmp *-16(%r13)
	.size sat_s45UG_entry, .-sat_s45UG_entry


==================== Asm code ====================
2018-03-16 15:58:59.475593975 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45UG_info:
	.quad	sat_s45UG_entry
	.quad	1
	.quad	4294967312
	.quad	S45Zy_srt+144


==================== Asm code ====================
2018-03-16 15:58:59.476238893 UTC

.section .text
.align 8
lvl5_s45UL_entry:
_c46n7:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46n8
_c46n9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq Numeric.showHFloat16_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c46n8:
	jmp *-16(%r13)
	.size lvl5_s45UL_entry, .-lvl5_s45UL_entry


==================== Asm code ====================
2018-03-16 15:58:59.476837731 UTC

.section .data.rel.ro
.align 8
.align 1
lvl5_s45UL_info:
	.quad	lvl5_s45UL_entry
	.quad	1
	.quad	4294967312
	.quad	S45Zy_srt+144


==================== Asm code ====================
2018-03-16 15:58:59.477677354 UTC

.section .text
.align 8
sat_s45UT_entry:
_c46ne:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c46nm
_c46nn:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c46nc_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	addq $-40,%rbp
	jmp *GHC.Real.toInteger_entry@gotpcrel(%rip)
_c46nm:
	jmp *-16(%r13)
	.size sat_s45UT_entry, .-sat_s45UT_entry


==================== Asm code ====================
2018-03-16 15:58:59.478277012 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45UT_info:
	.quad	sat_s45UT_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:58:59.478800031 UTC

.section .text
.align 8
_c46nc:
_c46nc:
	leaq block_c46nh_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
	.size _c46nc, .-_c46nc


==================== Asm code ====================
2018-03-16 15:58:59.479472396 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46nc_info:
	.quad	_c46nc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.480152903 UTC

.section .text
.align 8
_c46nh:
_c46nh:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c46nr
_c46nq:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c46nr:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c46nh, .-_c46nh


==================== Asm code ====================
2018-03-16 15:58:59.480718383 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46nh_info:
	.quad	_c46nh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.481637709 UTC

.section .text
.align 8
.globl Numeric.showIntAtBase_entry
.type Numeric.showIntAtBase_entry, @object
Numeric.showIntAtBase_entry:
_c46ns:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _c46nt
_c46nu:
	leaq block_c46m0_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq %r14,%rax
	movq %rax,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	jmp *GHC.Real.$p1Integral_entry@gotpcrel(%rip)
_c46nt:
	leaq Numeric.showIntAtBase_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.showIntAtBase_entry, .-Numeric.showIntAtBase_entry


==================== Asm code ====================
2018-03-16 15:58:59.482252999 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showIntAtBase_info
.type Numeric.showIntAtBase_info, @object
Numeric.showIntAtBase_info:
	.quad	Numeric.showIntAtBase_entry
	.quad	0
	.quad	29691108917262
	.quad	25769803802
	.quad	S45Zy_srt+144


==================== Asm code ====================
2018-03-16 15:58:59.482935692 UTC

.section .text
.align 8
_c46m0:
_c46m0:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c46nx
_c46nw:
	leaq $dNum_s45UC_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c46m6_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Real.$p2Real_entry@gotpcrel(%rip)
_c46nx:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c46m0, .-_c46m0


==================== Asm code ====================
2018-03-16 15:58:59.483669572 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46m0_info:
	.quad	_c46m0
	.quad	6
	.quad	12098922872862
	.quad	S45Zy_srt+144


==================== Asm code ====================
2018-03-16 15:58:59.484358304 UTC

.section .text
.align 8
_c46m6:
_c46m6:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c46nA
_c46nz:
	leaq sat_s45UE_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c46mc_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-24(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rbx,(%rbp)
	addq $-32,%rbp
	jmp *GHC.Classes.<=_entry@gotpcrel(%rip)
_c46nA:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c46m6, .-_c46m6


==================== Asm code ====================
2018-03-16 15:58:59.485125237 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46m6_info:
	.quad	_c46m6
	.quad	7
	.quad	12098922872862
	.quad	S45Zy_srt+144


==================== Asm code ====================
2018-03-16 15:58:59.485898574 UTC

.section .text
.align 8
_c46mc:
_c46mc:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c46nC
_c46ob:
	movq 40(%rbp),%rsi
	movq 32(%rbp),%r14
	addq $72,%rbp
	jmp Numeric.showIntAtBase1_entry
_c46nF:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c46nC:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c46nF
_c46nE:
	leaq sat_s45UG_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c46mi_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
	.size _c46mc, .-_c46mc


==================== Asm code ====================
2018-03-16 15:58:59.486568875 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46mc_info:
	.quad	_c46mc
	.quad	8
	.quad	3302829850654
	.quad	S45Zy_srt+144


==================== Asm code ====================
2018-03-16 15:58:59.487366867 UTC

.section .text
.align 8
_c46mi:
_c46mi:
	movq 56(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c46nI
_c46o7:
	movq %rax,%rsi
	movq 32(%rbp),%r14
	addq $72,%rbp
	jmp Numeric.showIntAtBase2_entry
_c46nI:
	leaq block_c46mm_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq 24(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Real.quotRem_entry@gotpcrel(%rip)
	.size _c46mi, .-_c46mi


==================== Asm code ====================
2018-03-16 15:58:59.487999745 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46mi_info:
	.quad	_c46mi
	.quad	8
	.quad	1103806595102
	.quad	S45Zy_srt+144


==================== Asm code ====================
2018-03-16 15:58:59.488650217 UTC

.section .text
.align 8
_c46mm:
_c46mm:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c46nL
_c46nK:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq lvl5_s45UL_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,(%r12)
	movq 8(%rbp),%rcx
	leaq block_c46ms_info(%rip),%rdx
	movq %rdx,8(%rbp)
	movq %rcx,%r14
	movq %rbx,16(%rbp)
	movq %rax,32(%rbp)
	leaq -16(%r12),%rax
	movq %rax,56(%rbp)
	addq $8,%rbp
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
_c46nL:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c46mm, .-_c46mm


==================== Asm code ====================
2018-03-16 15:58:59.489436803 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46mm_info:
	.quad	_c46mm
	.quad	4616
	.quad	4294967326
	.quad	S45Zy_srt+144


==================== Asm code ====================
2018-03-16 15:58:59.48999856 UTC

.section .text
.align 8
_c46ms:
_c46ms:
	movq 56(%rbp),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	movq 24(%rbp),%rax
	movq %rax,24(%rbp)
	movq %rbx,56(%rbp)
	jmp _c46mz
	.size _c46ms, .-_c46ms


==================== Asm code ====================
2018-03-16 15:58:59.490485473 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46ms_info:
	.quad	_c46ms
	.quad	7
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.491305408 UTC

.section .text
.align 8
_c46mz:
_c46mz:
	addq $32,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c46nP
_c46nO:
	leaq sat_s45UT_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq block_c46mD_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -24(%r12),%r14
	movq 40(%rbp),%rbx
	addq $-8,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c46nP:
	movq $32,904(%r13)
	leaq block_c46my_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq (%rbp),%rsi
	movq %rax,%r14
	movq 24(%rbp),%rbx
	addq $8,%rbp
	jmp *stg_gc_ppp@gotpcrel(%rip)
	.size _c46mz, .-_c46mz


==================== Asm code ====================
2018-03-16 15:58:59.491973199 UTC

.section .text
.align 8
_c46my:
_c46my:
	movq %rbx,16(%rbp)
	movq %r14,(%rbp)
	movq %rsi,-8(%rbp)
	addq $-8,%rbp
	jmp _c46mz
	.size _c46my, .-_c46my


==================== Asm code ====================
2018-03-16 15:58:59.492499422 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46my_info:
	.quad	_c46my
	.quad	134
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.493229637 UTC

.section .text
.align 8
_c46mD:
_c46mD:
	leaq block_c46mH_info(%rip),%rax
	movq %rax,(%rbp)
	movq 64(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,16(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _c46mD, .-_c46mD


==================== Asm code ====================
2018-03-16 15:58:59.493817552 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46mD_info:
	.quad	_c46mD
	.quad	136
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.49471768 UTC

.section .text
.align 8
_c46mH:
_c46mH:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c46nT
_c46o0:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c46o3
_c46o2:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c46o3:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c46nT:
	leaq block_c46mL_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Real.quotRem_entry@gotpcrel(%rip)
	.size _c46mH, .-_c46mH


==================== Asm code ====================
2018-03-16 15:58:59.495350364 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46mH_info:
	.quad	_c46mH
	.quad	8
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.495994361 UTC

.section .text
.align 8
_c46mL:
_c46mL:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c46nW
_c46nV:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,(%r12)
	movq %rax,32(%rbp)
	movq %rbx,16(%rbp)
	leaq -14(%r12),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _c46mz
_c46nW:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c46mL, .-_c46mL


==================== Asm code ====================
2018-03-16 15:58:59.496752201 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46mL_info:
	.quad	_c46mL
	.quad	520
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.498410367 UTC

.section .data
.align 8
.align 1
sat_s45V1_closure:
	.quad	GHC.Types.I#_con_info
	.quad	16


==================== Asm code ====================
2018-03-16 15:58:59.500105535 UTC

.section .data
.align 8
.align 1
sat_s45V2_closure:
	.quad	:_con_info
	.quad	sat_s45V1_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.502724396 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHex1_closure
.type Numeric.showHex1_closure, @object
Numeric.showHex1_closure:
	.quad	Numeric.showHex1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.503584067 UTC

.section .text
.align 8
.globl Numeric.showHex1_entry
.type Numeric.showHex1_entry, @object
Numeric.showHex1_entry:
_c46qB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46qC
_c46qD:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c46qA
_c46qz:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq sat_s45V2_closure+2(%rip),%rsi
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_c46qC:
	jmp *-16(%r13)
_c46qA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showHex1_entry, .-Numeric.showHex1_entry


==================== Asm code ====================
2018-03-16 15:58:59.504406664 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHex1_info
.type Numeric.showHex1_info, @object
Numeric.showHex1_info:
	.quad	Numeric.showHex1_entry
	.quad	0
	.quad	4294967317
	.quad	S45Zy_srt+248


==================== Asm code ====================
2018-03-16 15:58:59.5082409 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHex_closure
.type Numeric.showHex_closure, @object
Numeric.showHex_closure:
	.quad	Numeric.showHex_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.508927207 UTC

.section .text
.align 8
sat_s45V7_entry:
_c46qX:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46r1
_c46r2:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c46qV_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp *GHC.Real.$p1Integral_entry@gotpcrel(%rip)
_c46r1:
	jmp *-16(%r13)
	.size sat_s45V7_entry, .-sat_s45V7_entry


==================== Asm code ====================
2018-03-16 15:58:59.510252699 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45V7_info:
	.quad	sat_s45V7_entry
	.quad	1
	.quad	4294967312
	.quad	S45Zy_srt+256


==================== Asm code ====================
2018-03-16 15:58:59.511012657 UTC

.section .text
.align 8
_c46qV:
_c46qV:
	leaq block_c46r0_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
	.size _c46qV, .-_c46qV


==================== Asm code ====================
2018-03-16 15:58:59.511556764 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46qV_info:
	.quad	_c46qV
	.quad	0
	.quad	4294967326
	.quad	S45Zy_srt+256


==================== Asm code ====================
2018-03-16 15:58:59.512127906 UTC

.section .text
.align 8
_c46r0:
_c46r0:
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	leaq Numeric.showHex1_closure(%rip),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
	.size _c46r0, .-_c46r0


==================== Asm code ====================
2018-03-16 15:58:59.512780375 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46r0_info:
	.quad	_c46r0
	.quad	0
	.quad	4294967326
	.quad	S45Zy_srt+256


==================== Asm code ====================
2018-03-16 15:58:59.513485675 UTC

.section .text
.align 8
.globl Numeric.showHex_entry
.type Numeric.showHex_entry, @object
Numeric.showHex_entry:
_c46r8:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c46rc
_c46rb:
	leaq sat_s45V7_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r8
	leaq -16(%r12),%rdi
	leaq Numeric.showIntAtBase_closure+6(%rip),%rbx
	jmp *stg_ap_pppp_fast@gotpcrel(%rip)
_c46rc:
	movq $24,904(%r13)
	leaq Numeric.showHex_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.showHex_entry, .-Numeric.showHex_entry


==================== Asm code ====================
2018-03-16 15:58:59.514066795 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHex_info
.type Numeric.showHex_info, @object
Numeric.showHex_info:
	.quad	Numeric.showHex_entry
	.quad	0
	.quad	124554051598
	.quad	8589934607
	.quad	S45Zy_srt+240


==================== Asm code ====================
2018-03-16 15:58:59.5157581 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Numeric.$trModule4_bytes
.type Numeric.$trModule4_bytes, @object
Numeric.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 15:58:59.518426567 UTC

.section .data
.align 8
.align 1
loc_r43OK_closure:
	.quad	loc_r43OK_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.519207261 UTC

.section .text
.align 8
loc_r43OK_entry:
_c46rF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46rG
_c46rH:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c46rE
_c46rD:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Numeric.$trModule4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c46rG:
	jmp *-16(%r13)
_c46rE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size loc_r43OK_entry, .-loc_r43OK_entry


==================== Asm code ====================
2018-03-16 15:58:59.519844846 UTC

.section .data.rel.ro
.align 8
.align 1
loc_r43OK_info:
	.quad	loc_r43OK_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:58:59.521447556 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Numeric.$trModule2_bytes
.type Numeric.$trModule2_bytes, @object
Numeric.$trModule2_bytes:
	.asciz "Numeric"


==================== Asm code ====================
2018-03-16 15:58:59.524025134 UTC

.section .data
.align 8
.align 1
loc1_r43OL_closure:
	.quad	loc1_r43OL_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.524760968 UTC

.section .text
.align 8
loc1_r43OL_entry:
_c46rX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46rY
_c46rZ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c46rW
_c46rV:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Numeric.$trModule2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c46rY:
	jmp *-16(%r13)
_c46rW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size loc1_r43OL_entry, .-loc1_r43OL_entry


==================== Asm code ====================
2018-03-16 15:58:59.525693575 UTC

.section .data.rel.ro
.align 8
.align 1
loc1_r43OL_info:
	.quad	loc1_r43OL_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:58:59.527256023 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
loc2_r43OM_bytes:
	.asciz "Numeric.hs"


==================== Asm code ====================
2018-03-16 15:58:59.529817229 UTC

.section .data
.align 8
.align 1
loc3_r43ON_closure:
	.quad	loc3_r43ON_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.530613908 UTC

.section .text
.align 8
loc3_r43ON_entry:
_c46sf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46sg
_c46sh:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c46se
_c46sd:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq loc2_r43OM_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c46sg:
	jmp *-16(%r13)
_c46se:
	movq (%rbx),%rax
	jmp *(%rax)
	.size loc3_r43ON_entry, .-loc3_r43ON_entry


==================== Asm code ====================
2018-03-16 15:58:59.531348677 UTC

.section .data.rel.ro
.align 8
.align 1
loc3_r43ON_info:
	.quad	loc3_r43ON_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:58:59.532988623 UTC

.section .data
.align 8
.align 1
loc4_r43OO_closure:
	.quad	GHC.Types.I#_con_info
	.quad	241


==================== Asm code ====================
2018-03-16 15:58:59.534509097 UTC

.section .data
.align 8
.align 1
loc5_r43OP_closure:
	.quad	GHC.Types.I#_con_info
	.quad	22


==================== Asm code ====================
2018-03-16 15:58:59.536256853 UTC

.section .data
.align 8
.align 1
loc6_r43OQ_closure:
	.quad	GHC.Types.I#_con_info
	.quad	75


==================== Asm code ====================
2018-03-16 15:58:59.537758339 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
$dIP_r43OR_bytes:
	.asciz "error"


==================== Asm code ====================
2018-03-16 15:58:59.540298388 UTC

.section .data
.align 8
.align 1
$dIP1_r43OS_closure:
	.quad	$dIP1_r43OS_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.541088027 UTC

.section .text
.align 8
$dIP1_r43OS_entry:
_c46sA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46sB
_c46sC:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c46sz
_c46sy:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq $dIP_r43OR_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c46sB:
	jmp *-16(%r13)
_c46sz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size $dIP1_r43OS_entry, .-$dIP1_r43OS_entry


==================== Asm code ====================
2018-03-16 15:58:59.541945128 UTC

.section .data.rel.ro
.align 8
.align 1
$dIP1_r43OS_info:
	.quad	$dIP1_r43OS_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:58:59.543685024 UTC

.section .data
.align 8
.align 1
$dIP2_r43OT_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	loc_r43OK_closure
	.quad	loc1_r43OL_closure
	.quad	loc3_r43ON_closure
	.quad	loc4_r43OO_closure+1
	.quad	loc5_r43OP_closure+1
	.quad	loc4_r43OO_closure+1
	.quad	loc6_r43OQ_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.545392364 UTC

.section .data
.align 8
.align 1
$dIP3_r43OU_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	$dIP1_r43OS_closure
	.quad	$dIP2_r43OT_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.546973248 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl3_r43OV_bytes:
	.asciz "Impossible happened: showHFloat: "


==================== Asm code ====================
2018-03-16 15:58:59.548646645 UTC

.section .data
.align 8
.align 1
lvl4_r43OW_closure:
	.quad	:_con_info
	.quad	GHC.Show.$fShow(,)2_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:58:59.554552255 UTC

.section .data
.align 8
.align 1
$wlvl2_r43OX_closure:
	.quad	$wlvl2_r43OX_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.555304787 UTC

.section .text
.align 8
sat_s45Vf_entry:
_c46t5:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c46t6
_c46t7:
	leaq block_c46t2_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	addq $-8,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
_c46t6:
	jmp *-8(%r13)
	.size sat_s45Vf_entry, .-sat_s45Vf_entry


==================== Asm code ====================
2018-03-16 15:58:59.555854817 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Vf_info:
	.quad	sat_s45Vf_entry
	.quad	4294967296
	.quad	10
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:58:59.556612552 UTC

.section .text
.align 8
_c46t2:
_c46t2:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c46ta
_c46t9:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c46ta:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c46t2, .-_c46t2


==================== Asm code ====================
2018-03-16 15:58:59.557170554 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46t2_info:
	.quad	_c46t2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.55814071 UTC

.section .text
.align 8
sat_s45Va_entry:
_c46th:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp *GHC.Show.$fShowInt_$cshowList_entry@gotpcrel(%rip)
	.size sat_s45Va_entry, .-sat_s45Va_entry


==================== Asm code ====================
2018-03-16 15:58:59.558798726 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Va_info:
	.quad	sat_s45Va_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:58:59.559632617 UTC

.section .text
.align 8
sat_s45Vi_entry:
_c46tl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46tm
_c46tn:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c46tp
_c46to:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s45Vf_info(%rip),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-56(%r12)
	leaq -71(%r12),%rbx
	movq %rbx,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rbx,-40(%r12)
	leaq sat_s45Va_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -54(%r12),%rax
	movq %rax,(%r12)
	leaq lvl4_r43OW_closure+2(%rip),%rsi
	leaq -14(%r12),%r14
	addq $-16,%rbp
	jmp *GHC.Show.$fShow(,)_go1_entry@gotpcrel(%rip)
_c46tp:
	movq $80,904(%r13)
_c46tm:
	jmp *-16(%r13)
	.size sat_s45Vi_entry, .-sat_s45Vi_entry


==================== Asm code ====================
2018-03-16 15:58:59.560528833 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Vi_info:
	.quad	sat_s45Vi_entry
	.quad	4294967297
	.quad	4294967315
	.quad	S45Zy_srt+280


==================== Asm code ====================
2018-03-16 15:58:59.56134398 UTC

.section .text
.align 8
$wlvl2_r43OX_entry:
_c46tt:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c46tu
_c46tv:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c46tx
_c46tw:
	leaq sat_s45Vi_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Show.$fShow(,)4_closure@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq block_c46tr_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -14(%r12),%rsi
	leaq lvl3_r43OV_bytes(%rip),%r14
	addq $-8,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c46tx:
	movq $56,904(%r13)
_c46tu:
	leaq $wlvl2_r43OX_closure(%rip),%rbx
	jmp *-8(%r13)
	.size $wlvl2_r43OX_entry, .-$wlvl2_r43OX_entry


==================== Asm code ====================
2018-03-16 15:58:59.562208526 UTC

.section .data.rel.ro
.align 8
.align 1
$wlvl2_r43OX_info:
	.quad	$wlvl2_r43OX_entry
	.quad	0
	.quad	64424509454
	.quad	8589934606
	.quad	S45Zy_srt+280


==================== Asm code ====================
2018-03-16 15:58:59.562820912 UTC

.section .text
.align 8
_c46tr:
_c46tr:
	movq %rbx,%rsi
	leaq $dIP3_r43OU_closure+2(%rip),%r14
	addq $8,%rbp
	jmp *GHC.Err.error_entry@gotpcrel(%rip)
	.size _c46tr, .-_c46tr


==================== Asm code ====================
2018-03-16 15:58:59.563334087 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46tr_info:
	.quad	_c46tr
	.quad	0
	.quad	12884901918
	.quad	S45Zy_srt+288


==================== Asm code ====================
2018-03-16 15:58:59.567732533 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat_allZ_closure
.type Numeric.showHFloat_allZ_closure, @object
Numeric.showHFloat_allZ_closure:
	.quad	Numeric.showHFloat_allZ_info


==================== Asm code ====================
2018-03-16 15:58:59.568526051 UTC

.section .text
.align 8
.globl Numeric.showHFloat_allZ_entry
.type Numeric.showHFloat_allZ_entry, @object
Numeric.showHFloat_allZ_entry:
_c46uq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46ur
_u46uJ:
	movq %r14,-8(%rbp)
	addq $-8,%rbp
	jmp _c46ug
_c46ur:
	leaq Numeric.showHFloat_allZ_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.showHFloat_allZ_entry, .-Numeric.showHFloat_allZ_entry


==================== Asm code ====================
2018-03-16 15:58:59.569091103 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat_allZ_info
.type Numeric.showHFloat_allZ_info, @object
Numeric.showHFloat_allZ_info:
	.quad	Numeric.showHFloat_allZ_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:58:59.569812187 UTC

.section .text
.align 8
_c46ug:
_c46ug:
	movq (%rbp),%rax
	leaq block_c46uj_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c46uj
_c46uk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c46ug, .-_c46ug


==================== Asm code ====================
2018-03-16 15:58:59.570669147 UTC

.section .text
.align 8
_c46uj:
_c46uj:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c46un
_c46uo:
	leaq block_c46uy_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c46uy
_c46uA:
	movq (%rbx),%rax
	jmp *(%rax)
_c46un:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c46uj, .-_c46uj


==================== Asm code ====================
2018-03-16 15:58:59.571270838 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46uj_info:
	.quad	_c46uj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.572017195 UTC

.section .text
.align 8
_c46uy:
_c46uy:
	cmpq $0,7(%rbx)
	je _c46uI
_c46uH:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c46uI:
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _c46ug
	.size _c46uy, .-_c46uy


==================== Asm code ====================
2018-03-16 15:58:59.572552523 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46uy_info:
	.quad	_c46uy
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.577071177 UTC

.section .data
.align 8
.align 1
$wshowIt1_r43OY_closure:
	.quad	$wshowIt1_r43OY_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.578152214 UTC

.section .text
.align 8
$wshowIt1_r43OY_entry:
_c46vv:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46vw
_u46vI:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp _c46ve
_c46vw:
	leaq $wshowIt1_r43OY_closure(%rip),%rbx
	jmp *-8(%r13)
	.size $wshowIt1_r43OY_entry, .-$wshowIt1_r43OY_entry


==================== Asm code ====================
2018-03-16 15:58:59.578705497 UTC

.section .data.rel.ro
.align 8
.align 1
$wshowIt1_r43OY_info:
	.quad	$wshowIt1_r43OY_entry
	.quad	0
	.quad	12884901902
	.quad	12884901907
	.quad	S45Zy_srt+312


==================== Asm code ====================
2018-03-16 15:58:59.579326319 UTC

.section .text
.align 8
_c46ve:
_c46ve:
	leaq block_c46vh_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c46vh
_c46vi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c46ve, .-_c46ve


==================== Asm code ====================
2018-03-16 15:58:59.58010951 UTC

.section .text
.align 8
_c46vh:
_c46vh:
	leaq block_c46vm_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	jmp *GHC.Show.$wintToDigit_entry@gotpcrel(%rip)
	.size _c46vh, .-_c46vh


==================== Asm code ====================
2018-03-16 15:58:59.580664002 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46vh_info:
	.quad	_c46vh
	.quad	195
	.quad	4294967326
	.quad	S45Zy_srt+312


==================== Asm code ====================
2018-03-16 15:58:59.581666721 UTC

.section .text
.align 8
_c46vm:
_c46vm:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c46vB
_c46vA:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	testq %rcx,%rcx
	je _c46vH
_c46vD:
	movl $16,%edx
	movq %rax,%rsi
	movq %rcx,%rax
	movq %rdx,%rcx
	cqto
	idivq %rcx
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	movq %rbx,-40(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	leaq -47(%r12),%rbx
	movq %rbx,-24(%r12)
	movq %rsi,-16(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rdx,(%r12)
	movq %rax,8(%rbp)
	leaq -7(%r12),%rax
	movq %rax,16(%rbp)
	leaq -30(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c46ve
_c46vH:
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	movq %rbx,-40(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	leaq -47(%r12),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq -30(%r12),%rax
	addq $-16,%r12
	movq %rax,%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c46vB:
	movq $56,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c46vm, .-_c46vm


==================== Asm code ====================
2018-03-16 15:58:59.582434095 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46vm_info:
	.quad	_c46vm
	.quad	195
	.quad	4294967326
	.quad	S45Zy_srt+312


==================== Asm code ====================
2018-03-16 15:58:59.586954056 UTC

.section .data
.align 8
.align 1
$wshowIt2_r43OZ_closure:
	.quad	$wshowIt2_r43OZ_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.587585286 UTC

.section .text
.align 8
$wshowIt2_r43OZ_entry:
_c46ww:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46wx
_u46wJ:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp _c46wf
_c46wx:
	leaq $wshowIt2_r43OZ_closure(%rip),%rbx
	jmp *-8(%r13)
	.size $wshowIt2_r43OZ_entry, .-$wshowIt2_r43OZ_entry


==================== Asm code ====================
2018-03-16 15:58:59.588164068 UTC

.section .data.rel.ro
.align 8
.align 1
$wshowIt2_r43OZ_info:
	.quad	$wshowIt2_r43OZ_entry
	.quad	0
	.quad	21474836494
	.quad	12884901907
	.quad	S45Zy_srt+312


==================== Asm code ====================
2018-03-16 15:58:59.58891118 UTC

.section .text
.align 8
_c46wf:
_c46wf:
	leaq block_c46wi_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c46wi
_c46wj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c46wf, .-_c46wf


==================== Asm code ====================
2018-03-16 15:58:59.589522896 UTC

.section .text
.align 8
_c46wi:
_c46wi:
	leaq block_c46wn_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	jmp *GHC.Show.$wintToDigit_entry@gotpcrel(%rip)
	.size _c46wi, .-_c46wi


==================== Asm code ====================
2018-03-16 15:58:59.590033728 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46wi_info:
	.quad	_c46wi
	.quad	195
	.quad	4294967326
	.quad	S45Zy_srt+312


==================== Asm code ====================
2018-03-16 15:58:59.590970744 UTC

.section .text
.align 8
_c46wn:
_c46wn:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c46wC
_c46wB:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	testq %rcx,%rcx
	je _c46wI
_c46wE:
	movl $16,%edx
	movq %rax,%rsi
	movq %rcx,%rax
	movq %rdx,%rcx
	cqto
	idivq %rcx
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	movq %rbx,-40(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	leaq -47(%r12),%rbx
	movq %rbx,-24(%r12)
	movq %rsi,-16(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rdx,(%r12)
	movq %rax,8(%rbp)
	leaq -7(%r12),%rax
	movq %rax,16(%rbp)
	leaq -30(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c46wf
_c46wI:
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	movq %rbx,-40(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	leaq -47(%r12),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq -30(%r12),%rax
	addq $-16,%r12
	movq %rax,%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c46wC:
	movq $56,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c46wn, .-_c46wn


==================== Asm code ====================
2018-03-16 15:58:59.591718512 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46wn_info:
	.quad	_c46wn
	.quad	195
	.quad	4294967326
	.quad	S45Zy_srt+312


==================== Asm code ====================
2018-03-16 15:58:59.596228048 UTC

.section .data
.align 8
.align 1
$wshowIt3_r43P0_closure:
	.quad	$wshowIt3_r43P0_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.596855275 UTC

.section .text
.align 8
$wshowIt3_r43P0_entry:
_c46xx:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46xy
_u46xK:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp _c46xg
_c46xy:
	leaq $wshowIt3_r43P0_closure(%rip),%rbx
	jmp *-8(%r13)
	.size $wshowIt3_r43P0_entry, .-$wshowIt3_r43P0_entry


==================== Asm code ====================
2018-03-16 15:58:59.597413524 UTC

.section .data.rel.ro
.align 8
.align 1
$wshowIt3_r43P0_info:
	.quad	$wshowIt3_r43P0_entry
	.quad	0
	.quad	38654705678
	.quad	12884901907
	.quad	S45Zy_srt+312


==================== Asm code ====================
2018-03-16 15:58:59.598145769 UTC

.section .text
.align 8
_c46xg:
_c46xg:
	leaq block_c46xj_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c46xj
_c46xk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c46xg, .-_c46xg


==================== Asm code ====================
2018-03-16 15:58:59.598752799 UTC

.section .text
.align 8
_c46xj:
_c46xj:
	leaq block_c46xo_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	jmp *GHC.Show.$wintToDigit_entry@gotpcrel(%rip)
	.size _c46xj, .-_c46xj


==================== Asm code ====================
2018-03-16 15:58:59.599273679 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46xj_info:
	.quad	_c46xj
	.quad	195
	.quad	4294967326
	.quad	S45Zy_srt+312


==================== Asm code ====================
2018-03-16 15:58:59.600246101 UTC

.section .text
.align 8
_c46xo:
_c46xo:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c46xD
_c46xC:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	testq %rcx,%rcx
	je _c46xJ
_c46xF:
	movl $16,%edx
	movq %rax,%rsi
	movq %rcx,%rax
	movq %rdx,%rcx
	cqto
	idivq %rcx
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	movq %rbx,-40(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	leaq -47(%r12),%rbx
	movq %rbx,-24(%r12)
	movq %rsi,-16(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rdx,(%r12)
	movq %rax,8(%rbp)
	leaq -7(%r12),%rax
	movq %rax,16(%rbp)
	leaq -30(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c46xg
_c46xJ:
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	movq %rbx,-40(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	leaq -47(%r12),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq -30(%r12),%rax
	addq $-16,%r12
	movq %rax,%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c46xD:
	movq $56,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c46xo, .-_c46xo


==================== Asm code ====================
2018-03-16 15:58:59.601018236 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46xo_info:
	.quad	_c46xo
	.quad	195
	.quad	4294967326
	.quad	S45Zy_srt+312


==================== Asm code ====================
2018-03-16 15:58:59.605869887 UTC

.section .data
.align 8
.align 1
$wshowIt4_r43P1_closure:
	.quad	$wshowIt4_r43P1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.606513176 UTC

.section .text
.align 8
$wshowIt4_r43P1_entry:
_c46yy:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46yz
_u46yL:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp _c46yh
_c46yz:
	leaq $wshowIt4_r43P1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size $wshowIt4_r43P1_entry, .-$wshowIt4_r43P1_entry


==================== Asm code ====================
2018-03-16 15:58:59.607071197 UTC

.section .data.rel.ro
.align 8
.align 1
$wshowIt4_r43P1_info:
	.quad	$wshowIt4_r43P1_entry
	.quad	0
	.quad	73014444046
	.quad	12884901907
	.quad	S45Zy_srt+312


==================== Asm code ====================
2018-03-16 15:58:59.607832536 UTC

.section .text
.align 8
_c46yh:
_c46yh:
	leaq block_c46yk_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c46yk
_c46yl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c46yh, .-_c46yh


==================== Asm code ====================
2018-03-16 15:58:59.60846036 UTC

.section .text
.align 8
_c46yk:
_c46yk:
	leaq block_c46yp_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	jmp *GHC.Show.$wintToDigit_entry@gotpcrel(%rip)
	.size _c46yk, .-_c46yk


==================== Asm code ====================
2018-03-16 15:58:59.609112869 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46yk_info:
	.quad	_c46yk
	.quad	195
	.quad	4294967326
	.quad	S45Zy_srt+312


==================== Asm code ====================
2018-03-16 15:58:59.610017877 UTC

.section .text
.align 8
_c46yp:
_c46yp:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c46yE
_c46yD:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	testq %rcx,%rcx
	je _c46yK
_c46yG:
	movl $16,%edx
	movq %rax,%rsi
	movq %rcx,%rax
	movq %rdx,%rcx
	cqto
	idivq %rcx
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	movq %rbx,-40(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	leaq -47(%r12),%rbx
	movq %rbx,-24(%r12)
	movq %rsi,-16(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rdx,(%r12)
	movq %rax,8(%rbp)
	leaq -7(%r12),%rax
	movq %rax,16(%rbp)
	leaq -30(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c46yh
_c46yK:
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	movq %rbx,-40(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	leaq -47(%r12),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq -30(%r12),%rax
	addq $-16,%r12
	movq %rax,%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c46yE:
	movq $56,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c46yp, .-_c46yp


==================== Asm code ====================
2018-03-16 15:58:59.610934839 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46yp_info:
	.quad	_c46yp
	.quad	195
	.quad	4294967326
	.quad	S45Zy_srt+312


==================== Asm code ====================
2018-03-16 15:58:59.624067283 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat_hex_closure
.type Numeric.showHFloat_hex_closure, @object
Numeric.showHFloat_hex_closure:
	.quad	Numeric.showHFloat_hex_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.62495647 UTC

.section .text
.align 8
sat_s45Xs_entry:
_c46As:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46At
_c46Au:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Numeric.showHFloat_hex_entry
_c46At:
	jmp *-16(%r13)
	.size sat_s45Xs_entry, .-sat_s45Xs_entry


==================== Asm code ====================
2018-03-16 15:58:59.625552435 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Xs_info:
	.quad	sat_s45Xs_entry
	.quad	1
	.quad	4294967312
	.quad	S45Zy_srt+352


==================== Asm code ====================
2018-03-16 15:58:59.626344009 UTC

.section .text
.align 8
.globl Numeric.showHFloat_hex_entry
.type Numeric.showHFloat_hex_entry, @object
Numeric.showHFloat_hex_entry:
_c46Az:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c46AA
_c46AB:
	leaq block_c46zl_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c46zl
_c46zm:
	movq (%rbx),%rax
	jmp *(%rax)
_c46AA:
	leaq Numeric.showHFloat_hex_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.showHFloat_hex_entry, .-Numeric.showHFloat_hex_entry


==================== Asm code ====================
2018-03-16 15:58:59.626925722 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat_hex_info
.type Numeric.showHFloat_hex_info, @object
Numeric.showHFloat_hex_info:
	.quad	Numeric.showHFloat_hex_entry
	.quad	0
	.quad	4362866433982478
	.quad	4294967301
	.quad	S45Zy_srt+200


==================== Asm code ====================
2018-03-16 15:58:59.627649102 UTC

.section .text
.align 8
_c46zl:
_c46zl:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c46Aw
_c46Ax:
	leaq block_c46zr_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c46zr
_c46zs:
	movq (%rbx),%rax
	jmp *(%rax)
_c46Aw:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c46zl, .-_c46zl


==================== Asm code ====================
2018-03-16 15:58:59.628421669 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46zl_info:
	.quad	_c46zl
	.quad	0
	.quad	4362866433982494
	.quad	S45Zy_srt+200


==================== Asm code ====================
2018-03-16 15:58:59.629139441 UTC

.section .text
.align 8
_c46zr:
_c46zr:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c46AJ
_c46B2:
	leaq block_c46zx_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c46zx
_c46zy:
	movq (%rbx),%rax
	jmp *(%rax)
_c46AJ:
	movq 8(%rbp),%rax
	leaq block_c46AG_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c46AG
_c46AK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c46zr, .-_c46zr


==================== Asm code ====================
2018-03-16 15:58:59.630010537 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46zr_info:
	.quad	_c46zr
	.quad	1
	.quad	4362866433982494
	.quad	S45Zy_srt+200


==================== Asm code ====================
2018-03-16 15:58:59.630795314 UTC

.section .text
.align 8
_c46AG:
_c46AG:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c46AQ
_c46AP:
	movq 7(%rbx),%rax
	shlq $3,%rax
	testq %rax,%rax
	jge _c46AZ
_c46B0:
	addq $-16,%r12
	movq %rax,%r14
	addq $8,%rbp
	jmp Numeric.$wlvl_entry
_c46AZ:
	movl $16,%ebx
	cqto
	idivq %rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rdx,(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rbx
	leaq 1(%rbx),%rdi
	leaq -7(%r12),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp $wshowIt4_r43P1_entry
_c46AQ:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c46AG, .-_c46AG


==================== Asm code ====================
2018-03-16 15:58:59.631633042 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46AG_info:
	.quad	_c46AG
	.quad	0
	.quad	1125904201809950
	.quad	S45Zy_srt+200


==================== Asm code ====================
2018-03-16 15:58:59.632369416 UTC

.section .text
.align 8
_c46zx:
_c46zx:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c46Bc
_c46BC:
	leaq block_c46zD_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c46zD
_c46zE:
	movq (%rbx),%rax
	jmp *(%rax)
_c46Bc:
	leaq block_c46B4_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _c46B4
_c46B5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c46zx, .-_c46zx


==================== Asm code ====================
2018-03-16 15:58:59.633137856 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46zx_info:
	.quad	_c46zx
	.quad	2
	.quad	3236966527139870
	.quad	S45Zy_srt+200


==================== Asm code ====================
2018-03-16 15:58:59.634103628 UTC

.section .text
.align 8
_c46B4:
_c46B4:
	movq 8(%rbp),%rax
	leaq block_c46B9_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c46B9
_c46Be:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c46B4, .-_c46B4


==================== Asm code ====================
2018-03-16 15:58:59.634665779 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46B4_info:
	.quad	_c46B4
	.quad	130
	.quad	562954248388638
	.quad	S45Zy_srt+200


==================== Asm code ====================
2018-03-16 15:58:59.635578397 UTC

.section .text
.align 8
_c46B9:
_c46B9:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c46Bk
_c46Bj:
	movq 7(%rbx),%rax
	shlq $2,%rax
	movq 8(%rbp),%rbx
	shlq $3,%rbx
	addq %rax,%rbx
	testq %rbx,%rbx
	jge _c46Bz
_c46BA:
	addq $-16,%r12
	movq %rbx,%r14
	addq $16,%rbp
	jmp Numeric.$wlvl_entry
_c46Bz:
	movl $16,%eax
	movq %rax,%rcx
	movq %rbx,%rax
	cqto
	idivq %rcx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rdx,(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rbx
	leaq 1(%rbx),%rdi
	leaq -7(%r12),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp $wshowIt3_r43P0_entry
_c46Bk:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c46B9, .-_c46B9


==================== Asm code ====================
2018-03-16 15:58:59.636315599 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46B9_info:
	.quad	_c46B9
	.quad	65
	.quad	562954248388638
	.quad	S45Zy_srt+200


==================== Asm code ====================
2018-03-16 15:58:59.637247245 UTC

.section .text
.align 8
_c46zD:
_c46zD:
	movq 24(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c46BR
_c46Co:
	leaq block_c46zJ_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c46zJ
_c46zK:
	movq (%rbx),%rax
	jmp *(%rax)
_c46BR:
	leaq block_c46BE_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c46BE
_c46BF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c46zD, .-_c46zD


==================== Asm code ====================
2018-03-16 15:58:59.637881944 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46zD_info:
	.quad	_c46zD
	.quad	3
	.quad	2674016573718558
	.quad	S45Zy_srt+200


==================== Asm code ====================
2018-03-16 15:58:59.638663021 UTC

.section .text
.align 8
_c46BE:
_c46BE:
	leaq block_c46BJ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _c46BJ
_c46BK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c46BE, .-_c46BE


==================== Asm code ====================
2018-03-16 15:58:59.639188722 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46BE_info:
	.quad	_c46BE
	.quad	259
	.quad	281479271677982
	.quad	S45Zy_srt+200


==================== Asm code ====================
2018-03-16 15:58:59.639955156 UTC

.section .text
.align 8
_c46BJ:
_c46BJ:
	movq 8(%rbp),%rax
	leaq block_c46BO_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c46BO
_c46BU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c46BJ, .-_c46BJ


==================== Asm code ====================
2018-03-16 15:58:59.640542581 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46BJ_info:
	.quad	_c46BJ
	.quad	387
	.quad	281479271677982
	.quad	S45Zy_srt+200


==================== Asm code ====================
2018-03-16 15:58:59.641384505 UTC

.section .text
.align 8
_c46BO:
_c46BO:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c46C0
_c46BZ:
	movq 7(%rbx),%rax
	shlq $1,%rax
	movq 8(%rbp),%rbx
	shlq $2,%rbx
	addq %rax,%rbx
	movq 16(%rbp),%rax
	shlq $3,%rax
	addq %rbx,%rax
	testq %rax,%rax
	jge _c46Cl
_c46Cm:
	addq $-16,%r12
	movq %rax,%r14
	addq $24,%rbp
	jmp Numeric.$wlvl_entry
_c46Cl:
	movl $16,%ebx
	cqto
	idivq %rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rdx,(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rbx
	leaq 1(%rbx),%rdi
	leaq -7(%r12),%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp $wshowIt2_r43OZ_entry
_c46C0:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c46BO, .-_c46BO


==================== Asm code ====================
2018-03-16 15:58:59.642224214 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46BO_info:
	.quad	_c46BO
	.quad	194
	.quad	281479271677982
	.quad	S45Zy_srt+200


==================== Asm code ====================
2018-03-16 15:58:59.642893103 UTC

.section .text
.align 8
_c46zJ:
_c46zJ:
	leaq block_c46zO_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _c46zO
_c46zP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c46zJ, .-_c46zJ


==================== Asm code ====================
2018-03-16 15:58:59.643547377 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46zJ_info:
	.quad	_c46zJ
	.quad	4
	.quad	2392541597007902
	.quad	S45Zy_srt+200


==================== Asm code ====================
2018-03-16 15:58:59.644219653 UTC

.section .text
.align 8
_c46zO:
_c46zO:
	leaq block_c46zT_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c46zT
_c46zU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c46zO, .-_c46zO


==================== Asm code ====================
2018-03-16 15:58:59.644946221 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46zO_info:
	.quad	_c46zO
	.quad	260
	.quad	2392541597007902
	.quad	S45Zy_srt+200


==================== Asm code ====================
2018-03-16 15:58:59.646003508 UTC

.section .text
.align 8
_c46zT:
_c46zT:
	leaq block_c46zY_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 32(%rbp),%rbx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _c46zY
_c46zZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c46zT, .-_c46zT


==================== Asm code ====================
2018-03-16 15:58:59.646548147 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46zT_info:
	.quad	_c46zT
	.quad	388
	.quad	2392541597007902
	.quad	S45Zy_srt+200


==================== Asm code ====================
2018-03-16 15:58:59.647504938 UTC

.section .text
.align 8
_c46zY:
_c46zY:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c46Cu
_c46Ct:
	leaq 7(%rbx),%rax
	movq 32(%rbp),%rbx
	shlq $1,%rbx
	addq (%rax),%rbx
	movq 16(%rbp),%rax
	shlq $2,%rax
	addq %rbx,%rax
	movq 24(%rbp),%rbx
	shlq $3,%rbx
	addq %rax,%rbx
	testq %rbx,%rbx
	jge _c46Cx
_c46Cy:
	addq $-40,%r12
	movq %rbx,%r14
	addq $40,%rbp
	jmp Numeric.$wlvl_entry
_c46Cx:
	movq 8(%rbp),%rax
	movl $16,%ecx
	movq %rax,%rdx
	movq %rbx,%rax
	movq %rdx,%rbx
	cqto
	idivq %rcx
	leaq sat_s45Xs_info(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rbx,-16(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rdx,(%r12)
	leaq -32(%r12),%rdi
	leaq -7(%r12),%rsi
	movq %rax,%r14
	addq $40,%rbp
	jmp $wshowIt1_r43OY_entry
_c46Cu:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c46zY, .-_c46zY


==================== Asm code ====================
2018-03-16 15:58:59.648246953 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46zY_info:
	.quad	_c46zY
	.quad	900
	.quad	2392541597007902
	.quad	S45Zy_srt+200


==================== Asm code ====================
2018-03-16 15:58:59.650116645 UTC

.section .data
.align 8
.align 1
sat_s45Xt_closure:
	.quad	GHC.Types.I#_con_info
	.quad	2


==================== Asm code ====================
2018-03-16 15:58:59.651779945 UTC

.section .data
.align 8
.align 1
sat_s45Xu_closure:
	.quad	:_con_info
	.quad	sat_s45Xt_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.654528401 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat15_closure
.type Numeric.showHFloat15_closure, @object
Numeric.showHFloat15_closure:
	.quad	Numeric.showHFloat15_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.655534417 UTC

.section .text
.align 8
.globl Numeric.showHFloat15_entry
.type Numeric.showHFloat15_entry, @object
Numeric.showHFloat15_entry:
_c46EO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46EP
_c46EQ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c46EN
_c46EM:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq sat_s45Xu_closure+2(%rip),%rsi
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_c46EP:
	jmp *-16(%r13)
_c46EN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showHFloat15_entry, .-Numeric.showHFloat15_entry


==================== Asm code ====================
2018-03-16 15:58:59.656178686 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat15_info
.type Numeric.showHFloat15_info, @object
Numeric.showHFloat15_info:
	.quad	Numeric.showHFloat15_entry
	.quad	0
	.quad	4294967317
	.quad	S45Zy_srt+360


==================== Asm code ====================
2018-03-16 15:58:59.65788506 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Numeric.showHFloat10_bytes
.type Numeric.showHFloat10_bytes, @object
Numeric.showHFloat10_bytes:
	.asciz "0x0p+0"


==================== Asm code ====================
2018-03-16 15:58:59.660386254 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat9_closure
.type Numeric.showHFloat9_closure, @object
Numeric.showHFloat9_closure:
	.quad	Numeric.showHFloat9_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.66113294 UTC

.section .text
.align 8
.globl Numeric.showHFloat9_entry
.type Numeric.showHFloat9_entry, @object
Numeric.showHFloat9_entry:
_c46F7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46F8
_c46F9:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c46F6
_c46F5:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Numeric.showHFloat10_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c46F8:
	jmp *-16(%r13)
_c46F6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showHFloat9_entry, .-Numeric.showHFloat9_entry


==================== Asm code ====================
2018-03-16 15:58:59.662113876 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat9_info
.type Numeric.showHFloat9_info, @object
Numeric.showHFloat9_info:
	.quad	Numeric.showHFloat9_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:58:59.664138822 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat14_closure
.type Numeric.showHFloat14_closure, @object
Numeric.showHFloat14_closure:
	.quad	Numeric.showHFloat14_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.664883431 UTC

.section .text
.align 8
.globl Numeric.showHFloat14_entry
.type Numeric.showHFloat14_entry, @object
Numeric.showHFloat14_entry:
_c46Fm:
	movq %r14,%rsi
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	jmp $wlvl2_r43OX_entry
	.size Numeric.showHFloat14_entry, .-Numeric.showHFloat14_entry


==================== Asm code ====================
2018-03-16 15:58:59.665438359 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat14_info
.type Numeric.showHFloat14_info, @object
Numeric.showHFloat14_info:
	.quad	Numeric.showHFloat14_entry
	.quad	0
	.quad	4294967310
	.quad	4294967300
	.quad	S45Zy_srt+304


==================== Asm code ====================
2018-03-16 15:58:59.667107793 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Numeric.showHFloat13_bytes
.type Numeric.showHFloat13_bytes, @object
Numeric.showHFloat13_bytes:
	.asciz "0x"


==================== Asm code ====================
2018-03-16 15:58:59.668640559 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Numeric.showHFloat12_bytes
.type Numeric.showHFloat12_bytes, @object
Numeric.showHFloat12_bytes:
	.asciz "p"


==================== Asm code ====================
2018-03-16 15:58:59.670322206 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Numeric.showHFloat11_bytes
.type Numeric.showHFloat11_bytes, @object
Numeric.showHFloat11_bytes:
	.asciz "."


==================== Asm code ====================
2018-03-16 15:58:59.686146483 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat_cvt_closure
.type Numeric.showHFloat_cvt_closure, @object
Numeric.showHFloat_cvt_closure:
	.quad	Numeric.showHFloat_cvt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.687108987 UTC

.section .text
.align 8
sat_s45XD_entry:
_c46FP:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46FQ
_c46FR:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c46FN_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
_c46FQ:
	jmp *-16(%r13)
	.size sat_s45XD_entry, .-sat_s45XD_entry


==================== Asm code ====================
2018-03-16 15:58:59.687665703 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45XD_info:
	.quad	sat_s45XD_entry
	.quad	1
	.quad	4294967312
	.quad	S45Zy_srt+144


==================== Asm code ====================
2018-03-16 15:58:59.688286188 UTC

.section .text
.align 8
_c46FN:
_c46FN:
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	leaq Numeric.showHFloat16_closure(%rip),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
	.size _c46FN, .-_c46FN


==================== Asm code ====================
2018-03-16 15:58:59.688940766 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46FN_info:
	.quad	_c46FN
	.quad	0
	.quad	4294967326
	.quad	S45Zy_srt+144


==================== Asm code ====================
2018-03-16 15:58:59.689658512 UTC

.section .text
.align 8
sat_s45Y0_entry:
_c46GF:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c46GO
_c46GP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c46GC_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c46GC
_c46GD:
	movq (%rbx),%rax
	jmp *(%rax)
_c46GO:
	jmp *-16(%r13)
	.size sat_s45Y0_entry, .-sat_s45Y0_entry


==================== Asm code ====================
2018-03-16 15:58:59.690374064 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Y0_info:
	.quad	sat_s45Y0_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:58:59.69098222 UTC

.section .text
.align 8
_c46GC:
_c46GC:
	leaq block_c46GL_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 7(%rbx),%rax
	leaq -1(%rax),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _c46GC, .-_c46GC


==================== Asm code ====================
2018-03-16 15:58:59.691643251 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46GC_info:
	.quad	_c46GC
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.692294043 UTC

.section .text
.align 8
_c46GL:
_c46GL:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c46GT
_c46GS:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c46GT:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c46GL, .-_c46GL


==================== Asm code ====================
2018-03-16 15:58:59.692874646 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46GL_info:
	.quad	_c46GL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.693690267 UTC

.section .text
.align 8
n_s45XT_entry:
_c46GV:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c46GZ
_c46GY:
	movq 16(%rbx),%rax
	leaq sat_s45Y0_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	leaq Numeric.showHFloat12_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c46GZ:
	movq $24,904(%r13)
	jmp *-16(%r13)
	.size n_s45XT_entry, .-n_s45XT_entry


==================== Asm code ====================
2018-03-16 15:58:59.694266586 UTC

.section .data.rel.ro
.align 8
.align 1
n_s45XT_info:
	.quad	n_s45XT_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:58:59.694985059 UTC

.section .text
.align 8
sat_s45Y3_entry:
_c46Ha:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46Hb
_c46Hc:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c46H8_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp Numeric.showHFloat_hex_entry
_c46Hb:
	jmp *-16(%r13)
	.size sat_s45Y3_entry, .-sat_s45Y3_entry


==================== Asm code ====================
2018-03-16 15:58:59.695586836 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Y3_info:
	.quad	sat_s45Y3_entry
	.quad	2
	.quad	4294967314
	.quad	S45Zy_srt+352


==================== Asm code ====================
2018-03-16 15:58:59.696269386 UTC

.section .text
.align 8
_c46H8:
_c46H8:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
	.size _c46H8, .-_c46H8


==================== Asm code ====================
2018-03-16 15:58:59.696801686 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46H8_info:
	.quad	_c46H8
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:58:59.697746849 UTC

.section .text
.align 8
sat_s45Y4_entry:
_c46Hk:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c46Hl
_c46Hm:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c46Ho
_c46Hn:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq n_s45XT_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,(%r12)
	leaq block_c46H0_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-24,%rbp
	jmp Numeric.showHFloat_allZ_entry
_c46Ho:
	movq $24,904(%r13)
_c46Hl:
	jmp *-16(%r13)
	.size sat_s45Y4_entry, .-sat_s45Y4_entry


==================== Asm code ====================
2018-03-16 15:58:59.6983352 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Y4_info:
	.quad	sat_s45Y4_entry
	.quad	2
	.quad	4294967314
	.quad	S45Zy_srt+352


==================== Asm code ====================
2018-03-16 15:58:59.699161506 UTC

.section .text
.align 8
_c46H0:
_c46H0:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c46Hh
_c46Hi:
	movq %rax,%rbx
	addq $24,%rbp
	jmp n_s45XT_entry
_c46Hr:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c46Hh:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c46Hr
_c46Hq:
	leaq sat_s45Y3_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -24(%r12),%rsi
	leaq Numeric.showHFloat11_bytes(%rip),%r14
	addq $24,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
	.size _c46H0, .-_c46H0


==================== Asm code ====================
2018-03-16 15:58:59.699771652 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46H0_info:
	.quad	_c46H0
	.quad	2
	.quad	4294967326
	.quad	S45Zy_srt+352


==================== Asm code ====================
2018-03-16 15:58:59.700454536 UTC

.section .text
.align 8
sat_s45Y5_entry:
_c46Hv:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c46Hx
_c46Hy:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c46Gj_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 24(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c46Gj
_c46Gk:
	movq (%rbx),%rax
	jmp *(%rax)
_c46Hx:
	jmp *-16(%r13)
	.size sat_s45Y5_entry, .-sat_s45Y5_entry


==================== Asm code ====================
2018-03-16 15:58:59.701173376 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Y5_info:
	.quad	sat_s45Y5_entry
	.quad	3
	.quad	4294967311
	.quad	S45Zy_srt+352


==================== Asm code ====================
2018-03-16 15:58:59.70180935 UTC

.section .text
.align 8
_c46Gj:
_c46Gj:
	leaq block_c46Go_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _c46Gj, .-_c46Gj


==================== Asm code ====================
2018-03-16 15:58:59.702472495 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46Gj_info:
	.quad	_c46Gj
	.quad	2
	.quad	4294967326
	.quad	S45Zy_srt+352


==================== Asm code ====================
2018-03-16 15:58:59.7031037 UTC

.section .text
.align 8
_c46Go:
_c46Go:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c46HC
_c46HB:
	leaq sat_s45Y4_info(%rip),%rax
	movq %rax,-48(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -48(%r12),%rsi
	leaq -14(%r12),%r14
	addq $24,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c46HC:
	movq $56,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c46Go, .-_c46Go


==================== Asm code ====================
2018-03-16 15:58:59.703847552 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46Go_info:
	.quad	_c46Go
	.quad	2
	.quad	4294967326
	.quad	S45Zy_srt+352


==================== Asm code ====================
2018-03-16 15:58:59.704312417 UTC

.section .data.rel.ro
.align 8
.align 1
u46Id_srtd:
	.quad	S45Zy_srt+144
	.quad	33
	.quad	8388608001


==================== Asm code ====================
2018-03-16 15:58:59.704975244 UTC

.section .text
.align 8
.globl Numeric.showHFloat_cvt_entry
.type Numeric.showHFloat_cvt_entry, @object
Numeric.showHFloat_cvt_entry:
_c46HE:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c46HF
_c46HG:
	leaq block_c46FB_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rax
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Float.$p1RealFloat_entry@gotpcrel(%rip)
_c46HF:
	leaq Numeric.showHFloat_cvt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.showHFloat_cvt_entry, .-Numeric.showHFloat_cvt_entry


==================== Asm code ====================
2018-03-16 15:58:59.705867007 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat_cvt_info
.type Numeric.showHFloat_cvt_info, @object
Numeric.showHFloat_cvt_info:
	.quad	Numeric.showHFloat_cvt_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934607
	.quad	u46Id_srtd


==================== Asm code ====================
2018-03-16 15:58:59.7063581 UTC

.section .data.rel.ro
.align 8
.align 1
u46Ie_srtd:
	.quad	S45Zy_srt+144
	.quad	33
	.quad	7851737089


==================== Asm code ====================
2018-03-16 15:58:59.70701244 UTC

.section .text
.align 8
_c46FB:
_c46FB:
	leaq block_c46FF_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Real.$p1RealFrac_entry@gotpcrel(%rip)
	.size _c46FB, .-_c46FB


==================== Asm code ====================
2018-03-16 15:58:59.707522065 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46FB_info:
	.quad	_c46FB
	.quad	2
	.quad	-4294967266
	.quad	u46Ie_srtd


==================== Asm code ====================
2018-03-16 15:58:59.708133337 UTC

.section .data.rel.ro
.align 8
.align 1
u46If_srtd:
	.quad	S45Zy_srt+144
	.quad	33
	.quad	7851737089


==================== Asm code ====================
2018-03-16 15:58:59.708982712 UTC

.section .text
.align 8
_c46FF:
_c46FF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c46HK
_c46HJ:
	leaq sat_s45XD_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c46FV_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Real.$p2Real_entry@gotpcrel(%rip)
_c46HK:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c46FF, .-_c46FF


==================== Asm code ====================
2018-03-16 15:58:59.709725294 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46FF_info:
	.quad	_c46FF
	.quad	2
	.quad	-4294967266
	.quad	u46If_srtd


==================== Asm code ====================
2018-03-16 15:58:59.710302673 UTC

.section .text
.align 8
_c46FV:
_c46FV:
	leaq block_c46FZ_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
	.size _c46FV, .-_c46FV


==================== Asm code ====================
2018-03-16 15:58:59.71084527 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46FV_info:
	.quad	_c46FV
	.quad	3
	.quad	502511173662
	.quad	S45Zy_srt+352


==================== Asm code ====================
2018-03-16 15:58:59.711535297 UTC

.section .text
.align 8
_c46FZ:
_c46FZ:
	movq 8(%rbp),%rax
	leaq block_c46G3_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq 24(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _c46FZ, .-_c46FZ


==================== Asm code ====================
2018-03-16 15:58:59.712056304 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46FZ_info:
	.quad	_c46FZ
	.quad	3
	.quad	502511173662
	.quad	S45Zy_srt+352


==================== Asm code ====================
2018-03-16 15:58:59.712826082 UTC

.section .text
.align 8
_c46G3:
_c46G3:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c46HP
_c46I8:
	leaq Numeric.showHFloat9_closure(%rip),%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c46HP:
	movq 16(%rbp),%rax
	leaq block_c46G7_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rdi
	leaq Numeric.showHFloat15_closure(%rip),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp *GHC.Float.$wfloatToDigits_entry@gotpcrel(%rip)
	.size _c46G3, .-_c46G3


==================== Asm code ====================
2018-03-16 15:58:59.713477329 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46G3_info:
	.quad	_c46G3
	.quad	2
	.quad	502511173662
	.quad	S45Zy_srt+352


==================== Asm code ====================
2018-03-16 15:58:59.714227393 UTC

.section .text
.align 8
_c46G7:
_c46G7:
	leaq block_c46G9_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c46G9
_c46Ga:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c46G7, .-_c46G7


==================== Asm code ====================
2018-03-16 15:58:59.714722097 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46G7_info:
	.quad	_c46G7
	.quad	0
	.quad	141733920798
	.quad	S45Zy_srt+352


==================== Asm code ====================
2018-03-16 15:58:59.71550688 UTC

.section .text
.align 8
_c46G9:
_c46G9:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c46HV
_c46I1:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c46I4
_c46I3:
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	leaq sat_s45Y5_info(%rip),%rdx
	movq %rdx,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rsi
	leaq Numeric.showHFloat13_bytes(%rip),%r14
	addq $16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c46I4:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c46HV:
	leaq block_c46HS_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c46HS
_c46HW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c46G9, .-_c46G9


==================== Asm code ====================
2018-03-16 15:58:59.716283031 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46G9_info:
	.quad	_c46G9
	.quad	1
	.quad	141733920798
	.quad	S45Zy_srt+352


==================== Asm code ====================
2018-03-16 15:58:59.716872895 UTC

.section .text
.align 8
_c46HS:
_c46HS:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp Numeric.showHFloat14_entry
	.size _c46HS, .-_c46HS


==================== Asm code ====================
2018-03-16 15:58:59.71753711 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46HS_info:
	.quad	_c46HS
	.quad	0
	.quad	4294967326
	.quad	S45Zy_srt+392


==================== Asm code ====================
2018-03-16 15:58:59.719262445 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat8_closure
.type Numeric.showHFloat8_closure, @object
Numeric.showHFloat8_closure:
	.quad	GHC.Types.C#_con_info
	.quad	45


==================== Asm code ====================
2018-03-16 15:58:59.72084937 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Numeric.showHFloat5_bytes
.type Numeric.showHFloat5_bytes, @object
Numeric.showHFloat5_bytes:
	.asciz "Infinity"


==================== Asm code ====================
2018-03-16 15:58:59.72294959 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Numeric.showHFloat7_bytes
.type Numeric.showHFloat7_bytes, @object
Numeric.showHFloat7_bytes:
	.asciz "-"


==================== Asm code ====================
2018-03-16 15:58:59.725588772 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat6_closure
.type Numeric.showHFloat6_closure, @object
Numeric.showHFloat6_closure:
	.quad	Numeric.showHFloat6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.726542502 UTC

.section .text
.align 8
.globl Numeric.showHFloat6_entry
.type Numeric.showHFloat6_entry, @object
Numeric.showHFloat6_entry:
_c46Kt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46Ku
_c46Kv:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c46Ks
_c46Kr:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Numeric.showHFloat7_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c46Ku:
	jmp *-16(%r13)
_c46Ks:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showHFloat6_entry, .-Numeric.showHFloat6_entry


==================== Asm code ====================
2018-03-16 15:58:59.727202029 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat6_info
.type Numeric.showHFloat6_info, @object
Numeric.showHFloat6_info:
	.quad	Numeric.showHFloat6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:58:59.728853826 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Numeric.showHFloat2_bytes
.type Numeric.showHFloat2_bytes, @object
Numeric.showHFloat2_bytes:
	.asciz "NaN"


==================== Asm code ====================
2018-03-16 15:58:59.731253726 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat1_closure
.type Numeric.showHFloat1_closure, @object
Numeric.showHFloat1_closure:
	.quad	Numeric.showHFloat1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.732139766 UTC

.section .text
.align 8
.globl Numeric.showHFloat1_entry
.type Numeric.showHFloat1_entry, @object
Numeric.showHFloat1_entry:
_c46KL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46KM
_c46KN:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c46KK
_c46KJ:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Numeric.showHFloat2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c46KM:
	jmp *-16(%r13)
_c46KK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showHFloat1_entry, .-Numeric.showHFloat1_entry


==================== Asm code ====================
2018-03-16 15:58:59.73277328 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat1_info
.type Numeric.showHFloat1_info, @object
Numeric.showHFloat1_info:
	.quad	Numeric.showHFloat1_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:58:59.735452993 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat4_closure
.type Numeric.showHFloat4_closure, @object
Numeric.showHFloat4_closure:
	.quad	Numeric.showHFloat4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.736403832 UTC

.section .text
.align 8
.globl Numeric.showHFloat4_entry
.type Numeric.showHFloat4_entry, @object
Numeric.showHFloat4_entry:
_c46L2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46L3
_c46L4:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c46L1
_c46L0:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Numeric.showHFloat5_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c46L3:
	jmp *-16(%r13)
_c46L1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showHFloat4_entry, .-Numeric.showHFloat4_entry


==================== Asm code ====================
2018-03-16 15:58:59.7370444 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat4_info
.type Numeric.showHFloat4_info, @object
Numeric.showHFloat4_info:
	.quad	Numeric.showHFloat4_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:58:59.739614659 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat3_closure
.type Numeric.showHFloat3_closure, @object
Numeric.showHFloat3_closure:
	.quad	Numeric.showHFloat3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.740412188 UTC

.section .text
.align 8
.globl Numeric.showHFloat3_entry
.type Numeric.showHFloat3_entry, @object
Numeric.showHFloat3_entry:
_c46Lj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46Lk
_c46Ll:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c46Li
_c46Lh:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Numeric.showHFloat4_closure(%rip),%rsi
	leaq Numeric.showHFloat6_closure(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c46Lk:
	jmp *-16(%r13)
_c46Li:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showHFloat3_entry, .-Numeric.showHFloat3_entry


==================== Asm code ====================
2018-03-16 15:58:59.741205454 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat3_info
.type Numeric.showHFloat3_info, @object
Numeric.showHFloat3_info:
	.quad	Numeric.showHFloat3_entry
	.quad	0
	.quad	12884901909
	.quad	S45Zy_srt+408


==================== Asm code ====================
2018-03-16 15:58:59.755619263 UTC

.section .data
.align 8
.align 1
.globl Numeric.showHFloat_closure
.type Numeric.showHFloat_closure, @object
Numeric.showHFloat_closure:
	.quad	Numeric.showHFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.756487581 UTC

.section .text
.align 8
$dNum_s45Yb_entry:
_c46LS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46LT
_c46LU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
_c46LT:
	jmp *-16(%r13)
	.size $dNum_s45Yb_entry, .-$dNum_s45Yb_entry


==================== Asm code ====================
2018-03-16 15:58:59.757030354 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s45Yb_info:
	.quad	$dNum_s45Yb_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:58:59.757845741 UTC

.section .text
.align 8
sat_s45Ye_entry:
_c46M3:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46M4
_c46M5:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq Numeric.showHFloat16_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c46M4:
	jmp *-16(%r13)
	.size sat_s45Ye_entry, .-sat_s45Ye_entry


==================== Asm code ====================
2018-03-16 15:58:59.758456079 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Ye_info:
	.quad	sat_s45Ye_entry
	.quad	1
	.quad	4294967312
	.quad	S45Zy_srt+424


==================== Asm code ====================
2018-03-16 15:58:59.759251733 UTC

.section .text
.align 8
sat_s45Yh_entry:
_c46Mr:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46Ms
_c46Mt:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
_c46Ms:
	jmp *-16(%r13)
	.size sat_s45Yh_entry, .-sat_s45Yh_entry


==================== Asm code ====================
2018-03-16 15:58:59.759818637 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Yh_info:
	.quad	sat_s45Yh_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:58:59.760684446 UTC

.section .text
.align 8
sat_s45Yi_entry:
_c46Mu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46Mv
_c46Mw:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c46My
_c46Mx:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_s45Yh_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp Numeric.showHFloat_cvt_entry
_c46My:
	movq $32,904(%r13)
_c46Mv:
	jmp *-16(%r13)
	.size sat_s45Yi_entry, .-sat_s45Yi_entry


==================== Asm code ====================
2018-03-16 15:58:59.761458668 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Yi_info:
	.quad	sat_s45Yi_entry
	.quad	3
	.quad	4294967311
	.quad	S45Zy_srt+376


==================== Asm code ====================
2018-03-16 15:58:59.762262543 UTC

.section .text
.align 8
sat_s45Yj_entry:
_c46MJ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46MK
_c46ML:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
_c46MK:
	jmp *-16(%r13)
	.size sat_s45Yj_entry, .-sat_s45Yj_entry


==================== Asm code ====================
2018-03-16 15:58:59.762839796 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Yj_info:
	.quad	sat_s45Yj_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:58:59.763706364 UTC

.section .text
.align 8
sat_s45Yk_entry:
_c46MM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46MN
_c46MO:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c46MQ
_c46MP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_s45Yj_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp Numeric.showHFloat_cvt_entry
_c46MQ:
	movq $32,904(%r13)
_c46MN:
	jmp *-16(%r13)
	.size sat_s45Yk_entry, .-sat_s45Yk_entry


==================== Asm code ====================
2018-03-16 15:58:59.764498876 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Yk_info:
	.quad	sat_s45Yk_entry
	.quad	3
	.quad	4294967311
	.quad	S45Zy_srt+376


==================== Asm code ====================
2018-03-16 15:58:59.765116636 UTC

.section .text
.align 8
sat_s45Ym_entry:
_c46MX:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46MY
_c46MZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq Numeric.showHFloat16_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c46MY:
	jmp *-16(%r13)
	.size sat_s45Ym_entry, .-sat_s45Ym_entry


==================== Asm code ====================
2018-03-16 15:58:59.765888872 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Ym_info:
	.quad	sat_s45Ym_entry
	.quad	1
	.quad	4294967312
	.quad	S45Zy_srt+424


==================== Asm code ====================
2018-03-16 15:58:59.766570258 UTC

.section .text
.align 8
sat_s45Yo_entry:
_c46N4:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c46N5
_c46N6:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c46LC_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rcx
	movq %rcx,-56(%rbp)
	movq 24(%rbx),%rbx
	movq %rbx,-48(%rbp)
	movq %rax,-32(%rbp)
	movq %rbx,-24(%rbp)
	addq $-56,%rbp
	jmp *GHC.Float.isNaN_entry@gotpcrel(%rip)
_c46N5:
	jmp *-16(%r13)
	.size sat_s45Yo_entry, .-sat_s45Yo_entry


==================== Asm code ====================
2018-03-16 15:58:59.767306996 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Yo_info:
	.quad	sat_s45Yo_entry
	.quad	2
	.quad	1997159792658
	.quad	S45Zy_srt+376


==================== Asm code ====================
2018-03-16 15:58:59.767947262 UTC

.section .text
.align 8
_c46LC:
_c46LC:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c46N1
_c46N2:
	leaq Numeric.showHFloat1_closure(%rip),%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c46N1:
	leaq block_c46LG_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	jmp *GHC.Float.$p1RealFloat_entry@gotpcrel(%rip)
	.size _c46LC, .-_c46LC


==================== Asm code ====================
2018-03-16 15:58:59.768639894 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46LC_info:
	.quad	_c46LC
	.quad	2
	.quad	1997159792670
	.quad	S45Zy_srt+376


==================== Asm code ====================
2018-03-16 15:58:59.769212595 UTC

.section .text
.align 8
_c46LG:
_c46LG:
	leaq block_c46LK_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Real.$p1RealFrac_entry@gotpcrel(%rip)
	.size _c46LG, .-_c46LG


==================== Asm code ====================
2018-03-16 15:58:59.769915555 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46LG_info:
	.quad	_c46LG
	.quad	2
	.quad	1447403978782
	.quad	S45Zy_srt+376


==================== Asm code ====================
2018-03-16 15:58:59.770588486 UTC

.section .text
.align 8
_c46LK:
_c46LK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c46Nb
_c46Na:
	leaq $dNum_s45Yb_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c46LV_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-24(%rbp)
	movq %rbx,-8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-32,%rbp
	jmp *GHC.Float.isInfinite_entry@gotpcrel(%rip)
_c46Nb:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c46LK, .-_c46LK


==================== Asm code ====================
2018-03-16 15:58:59.771343002 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46LK_info:
	.quad	_c46LK
	.quad	2
	.quad	1447403978782
	.quad	S45Zy_srt+376


==================== Asm code ====================
2018-03-16 15:58:59.772120588 UTC

.section .text
.align 8
_c46LV:
_c46LV:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c46Nd
_c46NA:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c46ND
_c46NC:
	leaq sat_s45Ym_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq block_c46Nz_info(%rip),%rax
	movq %rax,16(%rbp)
	movq %rcx,%r14
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp *GHC.Real.$p2Real_entry@gotpcrel(%rip)
_c46ND:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c46Nd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c46ND
_c46Nf:
	leaq sat_s45Ye_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq block_c46M6_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rcx,%r14
	leaq -16(%r12),%rax
	movq %rax,8(%rbp)
	jmp *GHC.Real.$p2Real_entry@gotpcrel(%rip)
	.size _c46LV, .-_c46LV


==================== Asm code ====================
2018-03-16 15:58:59.773016789 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46LV_info:
	.quad	_c46LV
	.quad	4
	.quad	1447403978782
	.quad	S45Zy_srt+376


==================== Asm code ====================
2018-03-16 15:58:59.773672687 UTC

.section .text
.align 8
_c46M6:
_c46M6:
	movq 8(%rbp),%rax
	leaq block_c46Ma_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq 32(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
	.size _c46M6, .-_c46M6


==================== Asm code ====================
2018-03-16 15:58:59.774344746 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46M6_info:
	.quad	_c46M6
	.quad	4
	.quad	4294967326
	.quad	S45Zy_srt+376


==================== Asm code ====================
2018-03-16 15:58:59.775148994 UTC

.section .text
.align 8
_c46Ma:
_c46Ma:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c46Nk
_c46Nv:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c46Ny
_c46Nx:
	leaq sat_s45Yk_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq Numeric.showHFloat8_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c46Ny:
	movq $64,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c46Nk:
	leaq block_c46Me_info(%rip),%rdx
	movq %rdx,(%rbp)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Float.isNegativeZero_entry@gotpcrel(%rip)
	.size _c46Ma, .-_c46Ma


==================== Asm code ====================
2018-03-16 15:58:59.775999626 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46Ma_info:
	.quad	_c46Ma
	.quad	3
	.quad	4294967326
	.quad	S45Zy_srt+376


==================== Asm code ====================
2018-03-16 15:58:59.776875069 UTC

.section .text
.align 8
_c46Me:
_c46Me:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c46No
_c46Nq:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c46Nt
_c46Ns:
	leaq sat_s45Yi_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq Numeric.showHFloat8_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c46Nt:
	movq $64,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c46No:
	movq %rcx,%rsi
	movq %rax,%r14
	addq $32,%rbp
	jmp Numeric.showHFloat_cvt_entry
	.size _c46Me, .-_c46Me


==================== Asm code ====================
2018-03-16 15:58:59.777557519 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46Me_info:
	.quad	_c46Me
	.quad	3
	.quad	4294967326
	.quad	S45Zy_srt+376


==================== Asm code ====================
2018-03-16 15:58:59.778320838 UTC

.section .text
.align 8
_c46Nz:
_c46Nz:
	movq 16(%rbp),%rax
	leaq block_c46NH_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
	.size _c46Nz, .-_c46Nz


==================== Asm code ====================
2018-03-16 15:58:59.778895618 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46Nz_info:
	.quad	_c46Nz
	.quad	2
	.quad	73014444062
	.quad	S45Zy_srt+408


==================== Asm code ====================
2018-03-16 15:58:59.779677584 UTC

.section .text
.align 8
_c46NH:
_c46NH:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c46NO
_c46NS:
	leaq Numeric.showHFloat3_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c46NO:
	leaq Numeric.showHFloat4_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c46NH, .-_c46NH


==================== Asm code ====================
2018-03-16 15:58:59.780208699 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46NH_info:
	.quad	_c46NH
	.quad	0
	.quad	73014444062
	.quad	S45Zy_srt+408


==================== Asm code ====================
2018-03-16 15:58:59.780996514 UTC

.section .text
.align 8
.globl Numeric.showHFloat_entry
.type Numeric.showHFloat_entry, @object
Numeric.showHFloat_entry:
_c46O0:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c46O4
_c46O3:
	leaq sat_s45Yo_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movq GHC.Base.++_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c46O4:
	movq $32,904(%r13)
	leaq Numeric.showHFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.showHFloat_entry, .-Numeric.showHFloat_entry


==================== Asm code ====================
2018-03-16 15:58:59.78189198 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showHFloat_info
.type Numeric.showHFloat_info, @object
Numeric.showHFloat_info:
	.quad	Numeric.showHFloat_entry
	.quad	0
	.quad	4196183048206
	.quad	8589934607
	.quad	S45Zy_srt+376


==================== Asm code ====================
2018-03-16 15:58:59.783660899 UTC

.section .data
.align 8
.align 1
sat_s45Yp_closure:
	.quad	GHC.Types.I#_con_info
	.quad	8


==================== Asm code ====================
2018-03-16 15:58:59.785345297 UTC

.section .data
.align 8
.align 1
sat_s45Yq_closure:
	.quad	:_con_info
	.quad	sat_s45Yp_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.788113026 UTC

.section .data
.align 8
.align 1
.globl Numeric.showOct1_closure
.type Numeric.showOct1_closure, @object
Numeric.showOct1_closure:
	.quad	Numeric.showOct1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.789098163 UTC

.section .text
.align 8
.globl Numeric.showOct1_entry
.type Numeric.showOct1_entry, @object
Numeric.showOct1_entry:
_c46Qj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46Qk
_c46Ql:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c46Qi
_c46Qh:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq sat_s45Yq_closure+2(%rip),%rsi
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_c46Qk:
	jmp *-16(%r13)
_c46Qi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Numeric.showOct1_entry, .-Numeric.showOct1_entry


==================== Asm code ====================
2018-03-16 15:58:59.789908462 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showOct1_info
.type Numeric.showOct1_info, @object
Numeric.showOct1_info:
	.quad	Numeric.showOct1_entry
	.quad	0
	.quad	4294967317
	.quad	S45Zy_srt+456


==================== Asm code ====================
2018-03-16 15:58:59.793609133 UTC

.section .data
.align 8
.align 1
.globl Numeric.showOct_closure
.type Numeric.showOct_closure, @object
Numeric.showOct_closure:
	.quad	Numeric.showOct_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.79445148 UTC

.section .text
.align 8
sat_s45Yv_entry:
_c46QF:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46QJ
_c46QK:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c46QD_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp *GHC.Real.$p1Integral_entry@gotpcrel(%rip)
_c46QJ:
	jmp *-16(%r13)
	.size sat_s45Yv_entry, .-sat_s45Yv_entry


==================== Asm code ====================
2018-03-16 15:58:59.795031806 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Yv_info:
	.quad	sat_s45Yv_entry
	.quad	1
	.quad	4294967312
	.quad	S45Zy_srt+464


==================== Asm code ====================
2018-03-16 15:58:59.795832664 UTC

.section .text
.align 8
_c46QD:
_c46QD:
	leaq block_c46QI_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
	.size _c46QD, .-_c46QD


==================== Asm code ====================
2018-03-16 15:58:59.796353342 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46QD_info:
	.quad	_c46QD
	.quad	0
	.quad	4294967326
	.quad	S45Zy_srt+464


==================== Asm code ====================
2018-03-16 15:58:59.797061332 UTC

.section .text
.align 8
_c46QI:
_c46QI:
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	leaq Numeric.showOct1_closure(%rip),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
	.size _c46QI, .-_c46QI


==================== Asm code ====================
2018-03-16 15:58:59.797881938 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46QI_info:
	.quad	_c46QI
	.quad	0
	.quad	4294967326
	.quad	S45Zy_srt+464


==================== Asm code ====================
2018-03-16 15:58:59.798677091 UTC

.section .text
.align 8
.globl Numeric.showOct_entry
.type Numeric.showOct_entry, @object
Numeric.showOct_entry:
_c46QQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c46QU
_c46QT:
	leaq sat_s45Yv_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r8
	leaq -16(%r12),%rdi
	leaq Numeric.showIntAtBase_closure+6(%rip),%rbx
	jmp *stg_ap_pppp_fast@gotpcrel(%rip)
_c46QU:
	movq $24,904(%r13)
	leaq Numeric.showOct_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.showOct_entry, .-Numeric.showOct_entry


==================== Asm code ====================
2018-03-16 15:58:59.799287686 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showOct_info
.type Numeric.showOct_info, @object
Numeric.showOct_info:
	.quad	Numeric.showOct_entry
	.quad	0
	.quad	3458764552475246606
	.quad	8589934607
	.quad	S45Zy_srt+240


==================== Asm code ====================
2018-03-16 15:58:59.801005786 UTC

.section .data
.align 8
.align 1
.globl Numeric.$trModule3_closure
.type Numeric.$trModule3_closure, @object
Numeric.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Numeric.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:58:59.802631881 UTC

.section .data
.align 8
.align 1
.globl Numeric.$trModule1_closure
.type Numeric.$trModule1_closure, @object
Numeric.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Numeric.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:58:59.804234387 UTC

.section .data
.align 8
.align 1
.globl Numeric.$trModule_closure
.type Numeric.$trModule_closure, @object
Numeric.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	Numeric.$trModule3_closure+1
	.quad	Numeric.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:58:59.808096724 UTC

.section .data
.align 8
.align 1
.globl Numeric.showGFloat_$sshowGFloat_closure
.type Numeric.showGFloat_$sshowGFloat_closure, @object
Numeric.showGFloat_$sshowGFloat_closure:
	.quad	Numeric.showGFloat_$sshowGFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.809009203 UTC

.section .text
.align 8
sat_s45YA_entry:
_c46Ru:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46Rv
_c46Rw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c46Rr_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c46Rr
_c46Rs:
	movq (%rbx),%rax
	jmp *(%rax)
_c46Rv:
	jmp *-16(%r13)
	.size sat_s45YA_entry, .-sat_s45YA_entry


==================== Asm code ====================
2018-03-16 15:58:59.80966673 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45YA_info:
	.quad	sat_s45YA_entry
	.quad	2
	.quad	4294967314
	.quad	S45Zy_srt+480


==================== Asm code ====================
2018-03-16 15:58:59.810392297 UTC

.section .text
.align 8
_c46Rr:
_c46Rr:
	movss 7(%rbx),%xmm1
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 8(%rbp),%rsi
	movq GHC.Float.FFGeneric_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%r14
	addq $16,%rbp
	jmp *GHC.Float.$w$sformatRealFloatAlt1_entry@gotpcrel(%rip)
	.size _c46Rr, .-_c46Rr


==================== Asm code ====================
2018-03-16 15:58:59.810964842 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46Rr_info:
	.quad	_c46Rr
	.quad	1
	.quad	4294967326
	.quad	S45Zy_srt+480


==================== Asm code ====================
2018-03-16 15:58:59.811730498 UTC

.section .text
.align 8
.globl Numeric.showGFloat_$sshowGFloat_entry
.type Numeric.showGFloat_$sshowGFloat_entry, @object
Numeric.showGFloat_$sshowGFloat_entry:
_c46RB:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c46RF
_c46RE:
	leaq sat_s45YA_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movq GHC.Base.++_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c46RF:
	movq $32,904(%r13)
	leaq Numeric.showGFloat_$sshowGFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.showGFloat_$sshowGFloat_entry, .-Numeric.showGFloat_$sshowGFloat_entry


==================== Asm code ====================
2018-03-16 15:58:59.812343701 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showGFloat_$sshowGFloat_info
.type Numeric.showGFloat_$sshowGFloat_info, @object
Numeric.showGFloat_$sshowGFloat_info:
	.quad	Numeric.showGFloat_$sshowGFloat_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S45Zy_srt+480


==================== Asm code ====================
2018-03-16 15:58:59.816478981 UTC

.section .data
.align 8
.align 1
.globl Numeric.showFFloat_$sshowFFloat_closure
.type Numeric.showFFloat_$sshowFFloat_closure, @object
Numeric.showFFloat_$sshowFFloat_closure:
	.quad	Numeric.showFFloat_$sshowFFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.817390805 UTC

.section .text
.align 8
sat_s45YF_entry:
_c46S9:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46Sa
_c46Sb:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c46S6_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c46S6
_c46S7:
	movq (%rbx),%rax
	jmp *(%rax)
_c46Sa:
	jmp *-16(%r13)
	.size sat_s45YF_entry, .-sat_s45YF_entry


==================== Asm code ====================
2018-03-16 15:58:59.817967682 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45YF_info:
	.quad	sat_s45YF_entry
	.quad	2
	.quad	4294967314
	.quad	S45Zy_srt+480


==================== Asm code ====================
2018-03-16 15:58:59.818701598 UTC

.section .text
.align 8
_c46S6:
_c46S6:
	movss 7(%rbx),%xmm1
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 8(%rbp),%rsi
	movq GHC.Float.FFFixed_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $16,%rbp
	jmp *GHC.Float.$w$sformatRealFloatAlt1_entry@gotpcrel(%rip)
	.size _c46S6, .-_c46S6


==================== Asm code ====================
2018-03-16 15:58:59.819260567 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46S6_info:
	.quad	_c46S6
	.quad	1
	.quad	4294967326
	.quad	S45Zy_srt+480


==================== Asm code ====================
2018-03-16 15:58:59.820039786 UTC

.section .text
.align 8
.globl Numeric.showFFloat_$sshowFFloat_entry
.type Numeric.showFFloat_$sshowFFloat_entry, @object
Numeric.showFFloat_$sshowFFloat_entry:
_c46Sg:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c46Sk
_c46Sj:
	leaq sat_s45YF_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movq GHC.Base.++_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c46Sk:
	movq $32,904(%r13)
	leaq Numeric.showFFloat_$sshowFFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.showFFloat_$sshowFFloat_entry, .-Numeric.showFFloat_$sshowFFloat_entry


==================== Asm code ====================
2018-03-16 15:58:59.82076718 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showFFloat_$sshowFFloat_info
.type Numeric.showFFloat_$sshowFFloat_info, @object
Numeric.showFFloat_$sshowFFloat_info:
	.quad	Numeric.showFFloat_$sshowFFloat_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S45Zy_srt+480


==================== Asm code ====================
2018-03-16 15:58:59.825764703 UTC

.section .data
.align 8
.align 1
.globl Numeric.showEFloat_$sshowEFloat_closure
.type Numeric.showEFloat_$sshowEFloat_closure, @object
Numeric.showEFloat_$sshowEFloat_closure:
	.quad	Numeric.showEFloat_$sshowEFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.827160318 UTC

.section .text
.align 8
sat_s45YK_entry:
_c46SO:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46SP
_c46SQ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c46SL_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c46SL
_c46SM:
	movq (%rbx),%rax
	jmp *(%rax)
_c46SP:
	jmp *-16(%r13)
	.size sat_s45YK_entry, .-sat_s45YK_entry


==================== Asm code ====================
2018-03-16 15:58:59.828095663 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45YK_info:
	.quad	sat_s45YK_entry
	.quad	2
	.quad	4294967314
	.quad	S45Zy_srt+480


==================== Asm code ====================
2018-03-16 15:58:59.829360876 UTC

.section .text
.align 8
_c46SL:
_c46SL:
	movss 7(%rbx),%xmm1
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 8(%rbp),%rsi
	movq GHC.Float.FFExponent_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $16,%rbp
	jmp *GHC.Float.$w$sformatRealFloatAlt1_entry@gotpcrel(%rip)
	.size _c46SL, .-_c46SL


==================== Asm code ====================
2018-03-16 15:58:59.830234216 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46SL_info:
	.quad	_c46SL
	.quad	1
	.quad	4294967326
	.quad	S45Zy_srt+480


==================== Asm code ====================
2018-03-16 15:58:59.831227367 UTC

.section .text
.align 8
.globl Numeric.showEFloat_$sshowEFloat_entry
.type Numeric.showEFloat_$sshowEFloat_entry, @object
Numeric.showEFloat_$sshowEFloat_entry:
_c46SV:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c46SZ
_c46SY:
	leaq sat_s45YK_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movq GHC.Base.++_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c46SZ:
	movq $32,904(%r13)
	leaq Numeric.showEFloat_$sshowEFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.showEFloat_$sshowEFloat_entry, .-Numeric.showEFloat_$sshowEFloat_entry


==================== Asm code ====================
2018-03-16 15:58:59.832422199 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showEFloat_$sshowEFloat_info
.type Numeric.showEFloat_$sshowEFloat_info, @object
Numeric.showEFloat_$sshowEFloat_info:
	.quad	Numeric.showEFloat_$sshowEFloat_entry
	.quad	0
	.quad	38654705678
	.quad	8589934607
	.quad	S45Zy_srt+480


==================== Asm code ====================
2018-03-16 15:58:59.838134418 UTC

.section .data
.align 8
.align 1
.globl Numeric.showGFloat_$sshowGFloat1_closure
.type Numeric.showGFloat_$sshowGFloat1_closure, @object
Numeric.showGFloat_$sshowGFloat1_closure:
	.quad	Numeric.showGFloat_$sshowGFloat1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.839062327 UTC

.section .text
.align 8
sat_s45YP_entry:
_c46Tt:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46Tu
_c46Tv:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c46Tq_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c46Tq
_c46Tr:
	movq (%rbx),%rax
	jmp *(%rax)
_c46Tu:
	jmp *-16(%r13)
	.size sat_s45YP_entry, .-sat_s45YP_entry


==================== Asm code ====================
2018-03-16 15:58:59.839961967 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45YP_info:
	.quad	sat_s45YP_entry
	.quad	2
	.quad	4294967314
	.quad	S45Zy_srt+512


==================== Asm code ====================
2018-03-16 15:58:59.840586076 UTC

.section .text
.align 8
_c46Tq:
_c46Tq:
	movsd 7(%rbx),%xmm1
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 8(%rbp),%rsi
	movq GHC.Float.FFGeneric_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%r14
	addq $16,%rbp
	jmp *GHC.Float.$w$sformatRealFloatAlt_entry@gotpcrel(%rip)
	.size _c46Tq, .-_c46Tq


==================== Asm code ====================
2018-03-16 15:58:59.841323694 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46Tq_info:
	.quad	_c46Tq
	.quad	1
	.quad	4294967326
	.quad	S45Zy_srt+512


==================== Asm code ====================
2018-03-16 15:58:59.842007379 UTC

.section .text
.align 8
.globl Numeric.showGFloat_$sshowGFloat1_entry
.type Numeric.showGFloat_$sshowGFloat1_entry, @object
Numeric.showGFloat_$sshowGFloat1_entry:
_c46TA:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c46TE
_c46TD:
	leaq sat_s45YP_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movq GHC.Base.++_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c46TE:
	movq $32,904(%r13)
	leaq Numeric.showGFloat_$sshowGFloat1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.showGFloat_$sshowGFloat1_entry, .-Numeric.showGFloat_$sshowGFloat1_entry


==================== Asm code ====================
2018-03-16 15:58:59.842752688 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showGFloat_$sshowGFloat1_info
.type Numeric.showGFloat_$sshowGFloat1_info, @object
Numeric.showGFloat_$sshowGFloat1_info:
	.quad	Numeric.showGFloat_$sshowGFloat1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S45Zy_srt+512


==================== Asm code ====================
2018-03-16 15:58:59.847127655 UTC

.section .data
.align 8
.align 1
.globl Numeric.showGFloat_closure
.type Numeric.showGFloat_closure, @object
Numeric.showGFloat_closure:
	.quad	Numeric.showGFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.848232289 UTC

.section .text
.align 8
sat_s45YT_entry:
_c46U5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46U6
_c46U7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r9
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r8
	movq 24(%rbx),%rdi
	movq GHC.Float.FFGeneric_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.formatRealFloatAlt_entry@gotpcrel(%rip)
_c46U6:
	jmp *-16(%r13)
	.size sat_s45YT_entry, .-sat_s45YT_entry


==================== Asm code ====================
2018-03-16 15:58:59.849090989 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45YT_info:
	.quad	sat_s45YT_entry
	.quad	3
	.quad	4294967311
	.quad	S45Zy_srt+528


==================== Asm code ====================
2018-03-16 15:58:59.850724982 UTC

.section .text
.align 8
.globl Numeric.showGFloat_entry
.type Numeric.showGFloat_entry, @object
Numeric.showGFloat_entry:
_c46U8:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c46Uc
_c46Ub:
	leaq sat_s45YT_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -32(%r12),%r14
	movq GHC.Base.++_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c46Uc:
	movq $40,904(%r13)
	leaq Numeric.showGFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.showGFloat_entry, .-Numeric.showGFloat_entry


==================== Asm code ====================
2018-03-16 15:58:59.851703639 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showGFloat_info
.type Numeric.showGFloat_info, @object
Numeric.showGFloat_info:
	.quad	Numeric.showGFloat_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S45Zy_srt+528


==================== Asm code ====================
2018-03-16 15:58:59.85708661 UTC

.section .data
.align 8
.align 1
.globl Numeric.showFFloat_$sshowFFloat1_closure
.type Numeric.showFFloat_$sshowFFloat1_closure, @object
Numeric.showFFloat_$sshowFFloat1_closure:
	.quad	Numeric.showFFloat_$sshowFFloat1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.858152274 UTC

.section .text
.align 8
sat_s45YY_entry:
_c46UB:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46UC
_c46UD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c46Uy_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c46Uy
_c46Uz:
	movq (%rbx),%rax
	jmp *(%rax)
_c46UC:
	jmp *-16(%r13)
	.size sat_s45YY_entry, .-sat_s45YY_entry


==================== Asm code ====================
2018-03-16 15:58:59.85886548 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45YY_info:
	.quad	sat_s45YY_entry
	.quad	2
	.quad	4294967314
	.quad	S45Zy_srt+512


==================== Asm code ====================
2018-03-16 15:58:59.859477787 UTC

.section .text
.align 8
_c46Uy:
_c46Uy:
	movsd 7(%rbx),%xmm1
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 8(%rbp),%rsi
	movq GHC.Float.FFFixed_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $16,%rbp
	jmp *GHC.Float.$w$sformatRealFloatAlt_entry@gotpcrel(%rip)
	.size _c46Uy, .-_c46Uy


==================== Asm code ====================
2018-03-16 15:58:59.860153073 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46Uy_info:
	.quad	_c46Uy
	.quad	1
	.quad	4294967326
	.quad	S45Zy_srt+512


==================== Asm code ====================
2018-03-16 15:58:59.860839215 UTC

.section .text
.align 8
.globl Numeric.showFFloat_$sshowFFloat1_entry
.type Numeric.showFFloat_$sshowFFloat1_entry, @object
Numeric.showFFloat_$sshowFFloat1_entry:
_c46UI:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c46UM
_c46UL:
	leaq sat_s45YY_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movq GHC.Base.++_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c46UM:
	movq $32,904(%r13)
	leaq Numeric.showFFloat_$sshowFFloat1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.showFFloat_$sshowFFloat1_entry, .-Numeric.showFFloat_$sshowFFloat1_entry


==================== Asm code ====================
2018-03-16 15:58:59.86173742 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showFFloat_$sshowFFloat1_info
.type Numeric.showFFloat_$sshowFFloat1_info, @object
Numeric.showFFloat_$sshowFFloat1_info:
	.quad	Numeric.showFFloat_$sshowFFloat1_entry
	.quad	0
	.quad	73014444046
	.quad	8589934607
	.quad	S45Zy_srt+512


==================== Asm code ====================
2018-03-16 15:58:59.865057473 UTC

.section .data
.align 8
.align 1
.globl Numeric.showFFloat_closure
.type Numeric.showFFloat_closure, @object
Numeric.showFFloat_closure:
	.quad	Numeric.showFFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.865939476 UTC

.section .text
.align 8
sat_s45Z2_entry:
_c46Vd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46Ve
_c46Vf:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r9
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r8
	movq 24(%rbx),%rdi
	movq GHC.Float.FFFixed_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.formatRealFloatAlt_entry@gotpcrel(%rip)
_c46Ve:
	jmp *-16(%r13)
	.size sat_s45Z2_entry, .-sat_s45Z2_entry


==================== Asm code ====================
2018-03-16 15:58:59.866688995 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Z2_info:
	.quad	sat_s45Z2_entry
	.quad	3
	.quad	4294967311
	.quad	S45Zy_srt+528


==================== Asm code ====================
2018-03-16 15:58:59.867354757 UTC

.section .text
.align 8
.globl Numeric.showFFloat_entry
.type Numeric.showFFloat_entry, @object
Numeric.showFFloat_entry:
_c46Vg:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c46Vk
_c46Vj:
	leaq sat_s45Z2_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -32(%r12),%r14
	movq GHC.Base.++_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c46Vk:
	movq $40,904(%r13)
	leaq Numeric.showFFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.showFFloat_entry, .-Numeric.showFFloat_entry


==================== Asm code ====================
2018-03-16 15:58:59.868126539 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showFFloat_info
.type Numeric.showFFloat_info, @object
Numeric.showFFloat_info:
	.quad	Numeric.showFFloat_entry
	.quad	0
	.quad	38654705678
	.quad	12884901911
	.quad	S45Zy_srt+528


==================== Asm code ====================
2018-03-16 15:58:59.871823736 UTC

.section .data
.align 8
.align 1
.globl Numeric.showEFloat_$sshowEFloat1_closure
.type Numeric.showEFloat_$sshowEFloat1_closure, @object
Numeric.showEFloat_$sshowEFloat1_closure:
	.quad	Numeric.showEFloat_$sshowEFloat1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.872504556 UTC

.section .text
.align 8
sat_s45Z7_entry:
_c46VJ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c46VK
_c46VL:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c46VG_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c46VG
_c46VH:
	movq (%rbx),%rax
	jmp *(%rax)
_c46VK:
	jmp *-16(%r13)
	.size sat_s45Z7_entry, .-sat_s45Z7_entry


==================== Asm code ====================
2018-03-16 15:58:59.873457009 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Z7_info:
	.quad	sat_s45Z7_entry
	.quad	2
	.quad	4294967314
	.quad	S45Zy_srt+512


==================== Asm code ====================
2018-03-16 15:58:59.874078079 UTC

.section .text
.align 8
_c46VG:
_c46VG:
	movsd 7(%rbx),%xmm1
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 8(%rbp),%rsi
	movq GHC.Float.FFExponent_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $16,%rbp
	jmp *GHC.Float.$w$sformatRealFloatAlt_entry@gotpcrel(%rip)
	.size _c46VG, .-_c46VG


==================== Asm code ====================
2018-03-16 15:58:59.874776542 UTC

.section .data.rel.ro
.align 8
.align 1
block_c46VG_info:
	.quad	_c46VG
	.quad	1
	.quad	4294967326
	.quad	S45Zy_srt+512


==================== Asm code ====================
2018-03-16 15:58:59.875602836 UTC

.section .text
.align 8
.globl Numeric.showEFloat_$sshowEFloat1_entry
.type Numeric.showEFloat_$sshowEFloat1_entry, @object
Numeric.showEFloat_$sshowEFloat1_entry:
_c46VQ:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c46VU
_c46VT:
	leaq sat_s45Z7_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movq GHC.Base.++_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c46VU:
	movq $32,904(%r13)
	leaq Numeric.showEFloat_$sshowEFloat1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.showEFloat_$sshowEFloat1_entry, .-Numeric.showEFloat_$sshowEFloat1_entry


==================== Asm code ====================
2018-03-16 15:58:59.876179831 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showEFloat_$sshowEFloat1_info
.type Numeric.showEFloat_$sshowEFloat1_info, @object
Numeric.showEFloat_$sshowEFloat1_info:
	.quad	Numeric.showEFloat_$sshowEFloat1_entry
	.quad	0
	.quad	279172874254
	.quad	8589934607
	.quad	S45Zy_srt+512


==================== Asm code ====================
2018-03-16 15:58:59.879602378 UTC

.section .data
.align 8
.align 1
.globl Numeric.showEFloat_closure
.type Numeric.showEFloat_closure, @object
Numeric.showEFloat_closure:
	.quad	Numeric.showEFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:58:59.880348948 UTC

.section .text
.align 8
sat_s45Zb_entry:
_c46Wl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c46Wm
_c46Wn:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r9
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r8
	movq 24(%rbx),%rdi
	movq GHC.Float.FFExponent_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.formatRealFloatAlt_entry@gotpcrel(%rip)
_c46Wm:
	jmp *-16(%r13)
	.size sat_s45Zb_entry, .-sat_s45Zb_entry


==================== Asm code ====================
2018-03-16 15:58:59.88108183 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s45Zb_info:
	.quad	sat_s45Zb_entry
	.quad	3
	.quad	4294967311
	.quad	S45Zy_srt+528


==================== Asm code ====================
2018-03-16 15:58:59.881910797 UTC

.section .text
.align 8
.globl Numeric.showEFloat_entry
.type Numeric.showEFloat_entry, @object
Numeric.showEFloat_entry:
_c46Wo:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c46Ws
_c46Wr:
	leaq sat_s45Zb_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -32(%r12),%r14
	movq GHC.Base.++_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c46Ws:
	movq $40,904(%r13)
	leaq Numeric.showEFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Numeric.showEFloat_entry, .-Numeric.showEFloat_entry


==================== Asm code ====================
2018-03-16 15:58:59.88253227 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Numeric.showEFloat_info
.type Numeric.showEFloat_info, @object
Numeric.showEFloat_info:
	.quad	Numeric.showEFloat_entry
	.quad	0
	.quad	141733920782
	.quad	12884901911
	.quad	S45Zy_srt+528


==================== Asm code ====================
2018-03-16 15:58:59.885219182 UTC

.section .data.rel.ro
.align 8
.align 1
S45Zy_srt:
	.quad	Text.Read.Lex.$wreadIntP_closure
	.quad	Numeric.readInt_closure
	.quad	Text.Read.Lex.readDecP4_closure
	.quad	Text.Read.Lex.$wreadIntP'_closure
	.quad	Numeric.readOct_closure
	.quad	Text.Read.Lex.numberToFixed1_closure
	.quad	Numeric.readDec_closure
	.quad	Text.Read.Lex.readDecP3_closure
	.quad	Numeric.readHex_closure
	.quad	Text.Read.Lex.$wnumberToRational_closure
	.quad	Text.Read.Lex.expect2_closure
	.quad	Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_closure
	.quad	Numeric.readFloat_closure
	.quad	GHC.Read.lex1_closure
	.quad	GHC.Read.readParen_closure
	.quad	Numeric.readSigned_closure
	.quad	sat_s45Tt_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	Numeric.showHFloat16_closure
	.quad	Numeric.showInt2_closure
	.quad	Numeric.showInt_closure
	.quad	Numeric.showInt1_closure
	.quad	GHC.Float.formatRealFloatAlt_closure
	.quad	Numeric.showFFloatAlt_closure
	.quad	Numeric.showGFloatAlt_closure
	.quad	Numeric.$wlvl_closure
	.quad	Numeric.showIntAtBase2_closure
	.quad	Numeric.showIntAtBase1_closure
	.quad	sat_s45Uu_closure
	.quad	Numeric.showIntAtBase3_closure
	.quad	Numeric.showIntAtBase_closure
	.quad	sat_s45V2_closure
	.quad	Numeric.showHex1_closure
	.quad	GHC.Show.intToDigit_closure
	.quad	Numeric.showHex_closure
	.quad	GHC.Show.$fShow(,)_go1_closure
	.quad	GHC.Err.error_closure
	.quad	$dIP3_r43OU_closure
	.quad	$wlvl2_r43OX_closure
	.quad	GHC.Show.$wintToDigit_closure
	.quad	$wshowIt1_r43OY_closure
	.quad	$wshowIt2_r43OZ_closure
	.quad	$wshowIt3_r43P0_closure
	.quad	$wshowIt4_r43P1_closure
	.quad	Numeric.showHFloat_hex_closure
	.quad	sat_s45Xu_closure
	.quad	GHC.Float.$wfloatToDigits_closure
	.quad	Numeric.showHFloat_cvt_closure
	.quad	Numeric.showHFloat9_closure
	.quad	Numeric.showHFloat14_closure
	.quad	Numeric.showHFloat15_closure
	.quad	Numeric.showHFloat4_closure
	.quad	Numeric.showHFloat6_closure
	.quad	Numeric.showHFloat16_closure
	.quad	Numeric.showHFloat1_closure
	.quad	Numeric.showHFloat3_closure
	.quad	Numeric.showHFloat_closure
	.quad	sat_s45Yq_closure
	.quad	Numeric.showOct1_closure
	.quad	Numeric.showOct_closure
	.quad	GHC.Float.$w$sformatRealFloatAlt1_closure
	.quad	Numeric.showGFloat_$sshowGFloat_closure
	.quad	Numeric.showFFloat_$sshowFFloat_closure
	.quad	Numeric.showEFloat_$sshowEFloat_closure
	.quad	GHC.Float.$w$sformatRealFloatAlt_closure
	.quad	Numeric.showGFloat_$sshowGFloat1_closure
	.quad	GHC.Float.formatRealFloatAlt_closure
	.quad	Numeric.showGFloat_closure
	.quad	Numeric.showFFloat_$sshowFFloat1_closure
	.quad	Numeric.showFFloat_closure
	.quad	Numeric.showEFloat_$sshowEFloat1_closure
	.quad	Numeric.showEFloat_closure

