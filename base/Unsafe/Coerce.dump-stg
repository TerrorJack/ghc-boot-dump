
==================== Pre unarise: ====================
2018-03-16 16:00:27.395076089 UTC

Unsafe.Coerce.unsafeCoerce1 :: forall a b. a -> a
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [x_s5rJr] x_s5rJr;

Unsafe.Coerce.unsafeCoerce :: forall a b. a -> b
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [eta_B1] Unsafe.Coerce.unsafeCoerce1 eta_B1;

Unsafe.Coerce.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Unsafe.Coerce.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Unsafe.Coerce.$trModule4];

Unsafe.Coerce.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Unsafe.Coerce"#;

Unsafe.Coerce.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Unsafe.Coerce.$trModule2];

Unsafe.Coerce.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Unsafe.Coerce.$trModule3
                                     Unsafe.Coerce.$trModule1];


==================== STG syntax: ====================
2018-03-16 16:00:27.396097066 UTC

Unsafe.Coerce.unsafeCoerce1 :: forall a b. a -> a
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [x_s5rJr] x_s5rJr;

Unsafe.Coerce.unsafeCoerce :: forall a b. a -> b
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [eta_B1] Unsafe.Coerce.unsafeCoerce1 eta_B1;

Unsafe.Coerce.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Unsafe.Coerce.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Unsafe.Coerce.$trModule4];

Unsafe.Coerce.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Unsafe.Coerce"#;

Unsafe.Coerce.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Unsafe.Coerce.$trModule2];

Unsafe.Coerce.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Unsafe.Coerce.$trModule3
                                     Unsafe.Coerce.$trModule1];


==================== Pre unarise: ====================
2018-03-16 16:00:27.443548014 UTC

Unsafe.Coerce.unsafeCoerce1 :: forall a b. a -> a
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [x_s5rKn] x_s5rKn;

Unsafe.Coerce.unsafeCoerce :: forall a b. a -> b
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [eta_B1] Unsafe.Coerce.unsafeCoerce1 eta_B1;

Unsafe.Coerce.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Unsafe.Coerce.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Unsafe.Coerce.$trModule4];

Unsafe.Coerce.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Unsafe.Coerce"#;

Unsafe.Coerce.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Unsafe.Coerce.$trModule2];

Unsafe.Coerce.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Unsafe.Coerce.$trModule3
                                     Unsafe.Coerce.$trModule1];


==================== STG syntax: ====================
2018-03-16 16:00:27.444807085 UTC

Unsafe.Coerce.unsafeCoerce1 :: forall a b. a -> a
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [x_s5rKn] x_s5rKn;

Unsafe.Coerce.unsafeCoerce :: forall a b. a -> b
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [eta_B1] Unsafe.Coerce.unsafeCoerce1 eta_B1;

Unsafe.Coerce.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Unsafe.Coerce.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Unsafe.Coerce.$trModule4];

Unsafe.Coerce.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Unsafe.Coerce"#;

Unsafe.Coerce.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Unsafe.Coerce.$trModule2];

Unsafe.Coerce.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Unsafe.Coerce.$trModule3
                                     Unsafe.Coerce.$trModule1];

