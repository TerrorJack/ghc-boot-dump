CgGuts
  { cg_module =
      Module { moduleUnitId = base , moduleName = Unsafe.Coerce }
  , cg_tycons = []
  , cg_binds =
      [ NonRec
          (Var "base_UnsafeziCoerce_unsafeCoerce1")
          (Lam
             (Var "a5rJ2")
             (Lam (Var "a5rJ3") (Lam (Var "a5rIA") (Var (Var "a5rIA")))))
      , NonRec
          (Var "base_UnsafeziCoerce_unsafeCoerce")
          (Cast
             (Var (Var "base_UnsafeziCoerce_unsafeCoerce1"))
             (ForAllCo
                (Var "a5rJ2")
                (Refl
                   Nominal
                   (TyConApp
                      (TyCon "ghczmprim_GHCziPrim_TYPE")
                      [ TyConApp (TyCon "'ghczmprim_GHCziTypes_LiftedRep") [] ]))
                (ForAllCo
                   (Var "a5rJ3")
                   (Refl
                      Nominal
                      (TyConApp
                         (TyCon "ghczmprim_GHCziPrim_TYPE")
                         [ TyConApp (TyCon "'ghczmprim_GHCziTypes_LiftedRep") [] ]))
                   (FunCo
                      Representational
                      (Refl Representational (TyVarTy (Var "a5rJ2")))
                      (UnivCo
                         UnsafeCoerceProv
                         Representational
                         (TyVarTy (Var "a5rJ2"))
                         (TyVarTy (Var "a5rJ3")))))))
      , NonRec
          (Var "base_UnsafeziCoerce_zdtrModule4") (Lit (MachStr "base"))
      , NonRec
          (Var "base_UnsafeziCoerce_zdtrModule3")
          (App
             (Var (Var "ghczmprim_GHCziTypes_TrNameS"))
             (Var (Var "base_UnsafeziCoerce_zdtrModule4")))
      , NonRec
          (Var "base_UnsafeziCoerce_zdtrModule2")
          (Lit (MachStr "Unsafe.Coerce"))
      , NonRec
          (Var "base_UnsafeziCoerce_zdtrModule1")
          (App
             (Var (Var "ghczmprim_GHCziTypes_TrNameS"))
             (Var (Var "base_UnsafeziCoerce_zdtrModule2")))
      , NonRec
          (Var "base_UnsafeziCoerce_zdtrModule")
          (App
             (App
                (Var (Var "ghczmprim_GHCziTypes_Module"))
                (Var (Var "base_UnsafeziCoerce_zdtrModule3")))
             (Var (Var "base_UnsafeziCoerce_zdtrModule1")))
      ]
  , cg_foreign = ForeignStubs (SDoc "") (SDoc "")
  , cg_foreign_files = []
  , cg_dep_pkgs =
      [ InstalledUnitId { installedUnitIdFS = "ghc-prim" }
      , InstalledUnitId { installedUnitIdFS = "integer-simple" }
      ]
  , cg_hpc_info = NoHpcInfo { hpcUsed = False }
  , cg_modBreaks = Nothing
  , cg_spt_entries = []
  }