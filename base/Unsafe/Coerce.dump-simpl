
==================== Tidy Core ====================
2018-03-16 16:00:27.391367167 UTC

Result size of Tidy Core
  = {terms: 21, types: 22, coercions: 12, joins: 0/0}

-- RHS size: {terms: 4, types: 5, coercions: 0, joins: 0/0}
Unsafe.Coerce.unsafeCoerce1 :: forall a b. a -> a
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ a_a5rJ2) (@ b_a5rJ3) (x_a5rIA [Occ=Once] :: a_a5rJ2) ->
                 x_a5rIA}]
Unsafe.Coerce.unsafeCoerce1
  = \ (@ a_a5rJ2) (@ b_a5rJ3) (x_a5rIA :: a_a5rJ2) -> x_a5rIA

-- RHS size: {terms: 1, types: 0, coercions: 12, joins: 0/0}
unsafeCoerce :: forall a b. a -> b
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Unsafe.Coerce.unsafeCoerce1
               `cast` (forall (a :: <*>_N) (b :: <*>_N).
                       <a>_R ->_R UnsafeCo representational a b
                       :: (forall a b. a -> a :: *) ~R# (forall a b. a -> b :: *))}]
unsafeCoerce
  = Unsafe.Coerce.unsafeCoerce1
    `cast` (forall (a :: <*>_N) (b :: <*>_N).
            <a>_R ->_R UnsafeCo representational a b
            :: (forall a b. a -> a :: *) ~R# (forall a b. a -> b :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Unsafe.Coerce.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Unsafe.Coerce.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Unsafe.Coerce.$trModule3 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Unsafe.Coerce.$trModule3
  = GHC.Types.TrNameS Unsafe.Coerce.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Unsafe.Coerce.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
Unsafe.Coerce.$trModule2 = "Unsafe.Coerce"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Unsafe.Coerce.$trModule1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Unsafe.Coerce.$trModule1
  = GHC.Types.TrNameS Unsafe.Coerce.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Unsafe.Coerce.$trModule :: GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Unsafe.Coerce.$trModule
  = GHC.Types.Module
      Unsafe.Coerce.$trModule3 Unsafe.Coerce.$trModule1


