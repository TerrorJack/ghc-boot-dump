
==================== Pre unarise: ====================
2018-03-16 16:00:17.260153594 UTC

Data.Char.$wisLetter [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Types.Bool
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s5hRk]
        case GHC.Unicode.$wgeneralCategory ww_s5hRk of {
          __DEFAULT -> GHC.Types.False [];
          GHC.Unicode.UppercaseLetter -> GHC.Types.True [];
          GHC.Unicode.LowercaseLetter -> GHC.Types.True [];
          GHC.Unicode.TitlecaseLetter -> GHC.Types.True [];
          GHC.Unicode.ModifierLetter -> GHC.Types.True [];
          GHC.Unicode.OtherLetter -> GHC.Types.True [];
        };

Data.Char.isLetter [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s5hRm]
        case w_s5hRm of {
          GHC.Types.C# ww1_s5hRo [Occ=Once] ->
              Data.Char.$wisLetter ww1_s5hRo;
        };

Data.Char.isMark :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [c_s5hRp]
        case c_s5hRp of {
          GHC.Types.C# ww1_s5hRr [Occ=Once] ->
              case GHC.Unicode.$wgeneralCategory ww1_s5hRr of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Unicode.NonSpacingMark -> GHC.Types.True [];
                GHC.Unicode.SpacingCombiningMark -> GHC.Types.True [];
                GHC.Unicode.EnclosingMark -> GHC.Types.True [];
              };
        };

Data.Char.isNumber :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [c_s5hRt]
        case c_s5hRt of {
          GHC.Types.C# ww1_s5hRv [Occ=Once] ->
              case GHC.Unicode.$wgeneralCategory ww1_s5hRv of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Unicode.DecimalNumber -> GHC.Types.True [];
                GHC.Unicode.LetterNumber -> GHC.Types.True [];
                GHC.Unicode.OtherNumber -> GHC.Types.True [];
              };
        };

Data.Char.isSeparator :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [c_s5hRx]
        case c_s5hRx of {
          GHC.Types.C# ww1_s5hRz [Occ=Once] ->
              case GHC.Unicode.$wgeneralCategory ww1_s5hRz of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Unicode.Space -> GHC.Types.True [];
                GHC.Unicode.LineSeparator -> GHC.Types.True [];
                GHC.Unicode.ParagraphSeparator -> GHC.Types.True [];
              };
        };

Data.Char.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Data.Char.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Data.Char.$trModule4];

Data.Char.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Data.Char"#;

Data.Char.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Data.Char.$trModule2];

Data.Char.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Data.Char.$trModule3
                                     Data.Char.$trModule1];

lvl_r5hRh :: [GHC.Types.Char]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [GHC.Show.$fShowChar3 GHC.Types.[]];

lvl1_r5hRi :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Char.digitToInt: not a digit "#;

Data.Char.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Types.Int
[GblId, Arity=1, Str=<B,1*U>x, Unf=OtherCon []] =
    [] \r [ww_s5hRB]
        let {
          sat_s5hRE [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [ww_s5hRB] \u []
                  case ww_s5hRB of ds1_s5hRC {
                    __DEFAULT ->
                        let {
                          sat_s5hRD [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [ds1_s5hRC] \u [] GHC.Show.$wshowLitChar ds1_s5hRC lvl_r5hRh;
                        } in  : [GHC.Show.$fShowChar3 sat_s5hRD];
                    '\''# -> GHC.Show.$fShowChar1;
                  };
        } in 
          case
              GHC.CString.unpackAppendCString# lvl1_r5hRi sat_s5hRE
          of
          sat_s5hRF
          { __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_s5hRF;
          };

Data.Char.$wdigitToInt [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Prim.Int#
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s5hRG]
        case ord# [ww_s5hRG] of sat_s5hRI {
          __DEFAULT ->
              case -# [sat_s5hRI 48#] of x#_s5hRH [Dmd=<S,U>] {
                __DEFAULT ->
                    case int2Word# [x#_s5hRH] of sat_s5hRJ {
                      __DEFAULT ->
                          case leWord# [sat_s5hRJ 9##] of {
                            __DEFAULT ->
                                case ord# [ww_s5hRG] of sat_s5hRM {
                                  __DEFAULT ->
                                      case -# [sat_s5hRM 97#] of x#1_s5hRL [Dmd=<S,U>] {
                                        __DEFAULT ->
                                            case int2Word# [x#1_s5hRL] of sat_s5hRN {
                                              __DEFAULT ->
                                                  case leWord# [sat_s5hRN 5##] of {
                                                    __DEFAULT ->
                                                        case ord# [ww_s5hRG] of sat_s5hRQ {
                                                          __DEFAULT ->
                                                              case
                                                                  -# [sat_s5hRQ 65#]
                                                              of
                                                              x#2_s5hRP [Dmd=<S,U>]
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#2_s5hRP]
                                                                    of
                                                                    sat_s5hRR
                                                                    { __DEFAULT ->
                                                                          case
                                                                              leWord# [sat_s5hRR
                                                                                       5##]
                                                                          of
                                                                          { __DEFAULT ->
                                                                                Data.Char.$wlvl
                                                                                    ww_s5hRG;
                                                                            1# ->
                                                                                +# [x#2_s5hRP 10#];
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                    1# -> +# [x#1_s5hRL 10#];
                                                  };
                                            };
                                      };
                                };
                            1# -> x#_s5hRH;
                          };
                    };
              };
        };

Data.Char.digitToInt [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Int
[GblId, Arity=1, Str=<S(S),1*U(U)>m, Unf=OtherCon []] =
    [] \r [w_s5hRU]
        case w_s5hRU of {
          GHC.Types.C# ww1_s5hRW [Occ=Once] ->
              case Data.Char.$wdigitToInt ww1_s5hRW of ww2_s5hRX {
                __DEFAULT -> GHC.Types.I# [ww2_s5hRX];
              };
        };


==================== STG syntax: ====================
2018-03-16 16:00:17.265593836 UTC

Data.Char.$wisLetter [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Types.Bool
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s5hRk]
        case GHC.Unicode.$wgeneralCategory ww_s5hRk of {
          __DEFAULT -> GHC.Types.False [];
          GHC.Unicode.UppercaseLetter -> GHC.Types.True [];
          GHC.Unicode.LowercaseLetter -> GHC.Types.True [];
          GHC.Unicode.TitlecaseLetter -> GHC.Types.True [];
          GHC.Unicode.ModifierLetter -> GHC.Types.True [];
          GHC.Unicode.OtherLetter -> GHC.Types.True [];
        };

Data.Char.isLetter [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s5hRm]
        case w_s5hRm of {
          GHC.Types.C# ww1_s5hRo [Occ=Once] ->
              Data.Char.$wisLetter ww1_s5hRo;
        };

Data.Char.isMark :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [c_s5hRp]
        case c_s5hRp of {
          GHC.Types.C# ww1_s5hRr [Occ=Once] ->
              case GHC.Unicode.$wgeneralCategory ww1_s5hRr of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Unicode.NonSpacingMark -> GHC.Types.True [];
                GHC.Unicode.SpacingCombiningMark -> GHC.Types.True [];
                GHC.Unicode.EnclosingMark -> GHC.Types.True [];
              };
        };

Data.Char.isNumber :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [c_s5hRt]
        case c_s5hRt of {
          GHC.Types.C# ww1_s5hRv [Occ=Once] ->
              case GHC.Unicode.$wgeneralCategory ww1_s5hRv of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Unicode.DecimalNumber -> GHC.Types.True [];
                GHC.Unicode.LetterNumber -> GHC.Types.True [];
                GHC.Unicode.OtherNumber -> GHC.Types.True [];
              };
        };

Data.Char.isSeparator :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [c_s5hRx]
        case c_s5hRx of {
          GHC.Types.C# ww1_s5hRz [Occ=Once] ->
              case GHC.Unicode.$wgeneralCategory ww1_s5hRz of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Unicode.Space -> GHC.Types.True [];
                GHC.Unicode.LineSeparator -> GHC.Types.True [];
                GHC.Unicode.ParagraphSeparator -> GHC.Types.True [];
              };
        };

Data.Char.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Data.Char.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Data.Char.$trModule4];

Data.Char.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Data.Char"#;

Data.Char.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Data.Char.$trModule2];

Data.Char.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Data.Char.$trModule3
                                     Data.Char.$trModule1];

lvl_r5hRh :: [GHC.Types.Char]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [GHC.Show.$fShowChar3 GHC.Types.[]];

lvl1_r5hRi :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Char.digitToInt: not a digit "#;

Data.Char.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Types.Int
[GblId, Arity=1, Str=<B,1*U>x, Unf=OtherCon []] =
    [] \r [ww_s5hRB]
        let {
          sat_s5hRE [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [ww_s5hRB] \u []
                  case ww_s5hRB of ds1_s5hRC {
                    __DEFAULT ->
                        let {
                          sat_s5hRD [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [ds1_s5hRC] \u [] GHC.Show.$wshowLitChar ds1_s5hRC lvl_r5hRh;
                        } in  : [GHC.Show.$fShowChar3 sat_s5hRD];
                    '\''# -> GHC.Show.$fShowChar1;
                  };
        } in 
          case
              GHC.CString.unpackAppendCString# lvl1_r5hRi sat_s5hRE
          of
          sat_s5hRF
          { __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_s5hRF;
          };

Data.Char.$wdigitToInt [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Prim.Int#
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s5hRG]
        case ord# [ww_s5hRG] of sat_s5hRI {
          __DEFAULT ->
              case -# [sat_s5hRI 48#] of x#_s5hRH [Dmd=<S,U>] {
                __DEFAULT ->
                    case int2Word# [x#_s5hRH] of sat_s5hRJ {
                      __DEFAULT ->
                          case leWord# [sat_s5hRJ 9##] of {
                            __DEFAULT ->
                                case ord# [ww_s5hRG] of sat_s5hRM {
                                  __DEFAULT ->
                                      case -# [sat_s5hRM 97#] of x#1_s5hRL [Dmd=<S,U>] {
                                        __DEFAULT ->
                                            case int2Word# [x#1_s5hRL] of sat_s5hRN {
                                              __DEFAULT ->
                                                  case leWord# [sat_s5hRN 5##] of {
                                                    __DEFAULT ->
                                                        case ord# [ww_s5hRG] of sat_s5hRQ {
                                                          __DEFAULT ->
                                                              case
                                                                  -# [sat_s5hRQ 65#]
                                                              of
                                                              x#2_s5hRP [Dmd=<S,U>]
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#2_s5hRP]
                                                                    of
                                                                    sat_s5hRR
                                                                    { __DEFAULT ->
                                                                          case
                                                                              leWord# [sat_s5hRR
                                                                                       5##]
                                                                          of
                                                                          { __DEFAULT ->
                                                                                Data.Char.$wlvl
                                                                                    ww_s5hRG;
                                                                            1# ->
                                                                                +# [x#2_s5hRP 10#];
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                    1# -> +# [x#1_s5hRL 10#];
                                                  };
                                            };
                                      };
                                };
                            1# -> x#_s5hRH;
                          };
                    };
              };
        };

Data.Char.digitToInt [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Int
[GblId, Arity=1, Str=<S(S),1*U(U)>m, Unf=OtherCon []] =
    [] \r [w_s5hRU]
        case w_s5hRU of {
          GHC.Types.C# ww1_s5hRW [Occ=Once] ->
              case Data.Char.$wdigitToInt ww1_s5hRW of ww2_s5hRX {
                __DEFAULT -> GHC.Types.I# [ww2_s5hRX];
              };
        };


==================== Pre unarise: ====================
2018-03-16 16:00:17.51356838 UTC

Data.Char.$wisLetter [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Types.Bool
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s5i73]
        case GHC.Unicode.$wgeneralCategory ww_s5i73 of {
          __DEFAULT -> GHC.Types.False [];
          GHC.Unicode.UppercaseLetter -> GHC.Types.True [];
          GHC.Unicode.LowercaseLetter -> GHC.Types.True [];
          GHC.Unicode.TitlecaseLetter -> GHC.Types.True [];
          GHC.Unicode.ModifierLetter -> GHC.Types.True [];
          GHC.Unicode.OtherLetter -> GHC.Types.True [];
        };

Data.Char.isLetter [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s5i75]
        case w_s5i75 of {
          GHC.Types.C# ww1_s5i77 [Occ=Once] ->
              Data.Char.$wisLetter ww1_s5i77;
        };

Data.Char.isMark :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [c_s5i78]
        case c_s5i78 of {
          GHC.Types.C# ww1_s5i7a [Occ=Once] ->
              case GHC.Unicode.$wgeneralCategory ww1_s5i7a of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Unicode.NonSpacingMark -> GHC.Types.True [];
                GHC.Unicode.SpacingCombiningMark -> GHC.Types.True [];
                GHC.Unicode.EnclosingMark -> GHC.Types.True [];
              };
        };

Data.Char.isNumber :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [c_s5i7c]
        case c_s5i7c of {
          GHC.Types.C# ww1_s5i7e [Occ=Once] ->
              case GHC.Unicode.$wgeneralCategory ww1_s5i7e of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Unicode.DecimalNumber -> GHC.Types.True [];
                GHC.Unicode.LetterNumber -> GHC.Types.True [];
                GHC.Unicode.OtherNumber -> GHC.Types.True [];
              };
        };

Data.Char.isSeparator :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [c_s5i7g]
        case c_s5i7g of {
          GHC.Types.C# ww1_s5i7i [Occ=Once] ->
              case GHC.Unicode.$wgeneralCategory ww1_s5i7i of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Unicode.Space -> GHC.Types.True [];
                GHC.Unicode.LineSeparator -> GHC.Types.True [];
                GHC.Unicode.ParagraphSeparator -> GHC.Types.True [];
              };
        };

Data.Char.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Data.Char.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Data.Char.$trModule4];

Data.Char.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Data.Char"#;

Data.Char.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Data.Char.$trModule2];

Data.Char.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Data.Char.$trModule3
                                     Data.Char.$trModule1];

lvl_r5hRh :: [GHC.Types.Char]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [GHC.Show.$fShowChar3 GHC.Types.[]];

lvl1_r5hRi :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Char.digitToInt: not a digit "#;

Data.Char.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Types.Int
[GblId, Arity=1, Str=<B,1*U>x, Unf=OtherCon []] =
    [] \r [ww_s5i7k]
        let {
          sat_s5i7n [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [ww_s5i7k] \u []
                  case ww_s5i7k of ds1_s5i7l {
                    __DEFAULT ->
                        let {
                          sat_s5i7m [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [ds1_s5i7l] \u [] GHC.Show.$wshowLitChar ds1_s5i7l lvl_r5hRh;
                        } in  : [GHC.Show.$fShowChar3 sat_s5i7m];
                    '\''# -> GHC.Show.$fShowChar1;
                  };
        } in 
          case
              GHC.CString.unpackAppendCString# lvl1_r5hRi sat_s5i7n
          of
          sat_s5i7o
          { __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_s5i7o;
          };

Data.Char.$wdigitToInt [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Prim.Int#
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s5i7p]
        case ord# [ww_s5i7p] of sat_s5i7r {
          __DEFAULT ->
              case -# [sat_s5i7r 48#] of x#_s5i7q [Dmd=<S,U>] {
                __DEFAULT ->
                    case int2Word# [x#_s5i7q] of sat_s5i7s {
                      __DEFAULT ->
                          case leWord# [sat_s5i7s 9##] of {
                            __DEFAULT ->
                                case ord# [ww_s5i7p] of sat_s5i7v {
                                  __DEFAULT ->
                                      case -# [sat_s5i7v 97#] of x#1_s5i7u [Dmd=<S,U>] {
                                        __DEFAULT ->
                                            case int2Word# [x#1_s5i7u] of sat_s5i7w {
                                              __DEFAULT ->
                                                  case leWord# [sat_s5i7w 5##] of {
                                                    __DEFAULT ->
                                                        case ord# [ww_s5i7p] of sat_s5i7z {
                                                          __DEFAULT ->
                                                              case
                                                                  -# [sat_s5i7z 65#]
                                                              of
                                                              x#2_s5i7y [Dmd=<S,U>]
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#2_s5i7y]
                                                                    of
                                                                    sat_s5i7A
                                                                    { __DEFAULT ->
                                                                          case
                                                                              leWord# [sat_s5i7A
                                                                                       5##]
                                                                          of
                                                                          { __DEFAULT ->
                                                                                Data.Char.$wlvl
                                                                                    ww_s5i7p;
                                                                            1# ->
                                                                                +# [x#2_s5i7y 10#];
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                    1# -> +# [x#1_s5i7u 10#];
                                                  };
                                            };
                                      };
                                };
                            1# -> x#_s5i7q;
                          };
                    };
              };
        };

Data.Char.digitToInt [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Int
[GblId, Arity=1, Str=<S(S),1*U(U)>m, Unf=OtherCon []] =
    [] \r [w_s5i7D]
        case w_s5i7D of {
          GHC.Types.C# ww1_s5i7F [Occ=Once] ->
              case Data.Char.$wdigitToInt ww1_s5i7F of ww2_s5i7G {
                __DEFAULT -> GHC.Types.I# [ww2_s5i7G];
              };
        };


==================== STG syntax: ====================
2018-03-16 16:00:17.51916568 UTC

Data.Char.$wisLetter [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Types.Bool
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s5i73]
        case GHC.Unicode.$wgeneralCategory ww_s5i73 of {
          __DEFAULT -> GHC.Types.False [];
          GHC.Unicode.UppercaseLetter -> GHC.Types.True [];
          GHC.Unicode.LowercaseLetter -> GHC.Types.True [];
          GHC.Unicode.TitlecaseLetter -> GHC.Types.True [];
          GHC.Unicode.ModifierLetter -> GHC.Types.True [];
          GHC.Unicode.OtherLetter -> GHC.Types.True [];
        };

Data.Char.isLetter [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s5i75]
        case w_s5i75 of {
          GHC.Types.C# ww1_s5i77 [Occ=Once] ->
              Data.Char.$wisLetter ww1_s5i77;
        };

Data.Char.isMark :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [c_s5i78]
        case c_s5i78 of {
          GHC.Types.C# ww1_s5i7a [Occ=Once] ->
              case GHC.Unicode.$wgeneralCategory ww1_s5i7a of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Unicode.NonSpacingMark -> GHC.Types.True [];
                GHC.Unicode.SpacingCombiningMark -> GHC.Types.True [];
                GHC.Unicode.EnclosingMark -> GHC.Types.True [];
              };
        };

Data.Char.isNumber :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [c_s5i7c]
        case c_s5i7c of {
          GHC.Types.C# ww1_s5i7e [Occ=Once] ->
              case GHC.Unicode.$wgeneralCategory ww1_s5i7e of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Unicode.DecimalNumber -> GHC.Types.True [];
                GHC.Unicode.LetterNumber -> GHC.Types.True [];
                GHC.Unicode.OtherNumber -> GHC.Types.True [];
              };
        };

Data.Char.isSeparator :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [c_s5i7g]
        case c_s5i7g of {
          GHC.Types.C# ww1_s5i7i [Occ=Once] ->
              case GHC.Unicode.$wgeneralCategory ww1_s5i7i of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Unicode.Space -> GHC.Types.True [];
                GHC.Unicode.LineSeparator -> GHC.Types.True [];
                GHC.Unicode.ParagraphSeparator -> GHC.Types.True [];
              };
        };

Data.Char.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Data.Char.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Data.Char.$trModule4];

Data.Char.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Data.Char"#;

Data.Char.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Data.Char.$trModule2];

Data.Char.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Data.Char.$trModule3
                                     Data.Char.$trModule1];

lvl_r5hRh :: [GHC.Types.Char]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [GHC.Show.$fShowChar3 GHC.Types.[]];

lvl1_r5hRi :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Char.digitToInt: not a digit "#;

Data.Char.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Types.Int
[GblId, Arity=1, Str=<B,1*U>x, Unf=OtherCon []] =
    [] \r [ww_s5i7k]
        let {
          sat_s5i7n [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [ww_s5i7k] \u []
                  case ww_s5i7k of ds1_s5i7l {
                    __DEFAULT ->
                        let {
                          sat_s5i7m [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [ds1_s5i7l] \u [] GHC.Show.$wshowLitChar ds1_s5i7l lvl_r5hRh;
                        } in  : [GHC.Show.$fShowChar3 sat_s5i7m];
                    '\''# -> GHC.Show.$fShowChar1;
                  };
        } in 
          case
              GHC.CString.unpackAppendCString# lvl1_r5hRi sat_s5i7n
          of
          sat_s5i7o
          { __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_s5i7o;
          };

Data.Char.$wdigitToInt [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Prim.Int#
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s5i7p]
        case ord# [ww_s5i7p] of sat_s5i7r {
          __DEFAULT ->
              case -# [sat_s5i7r 48#] of x#_s5i7q [Dmd=<S,U>] {
                __DEFAULT ->
                    case int2Word# [x#_s5i7q] of sat_s5i7s {
                      __DEFAULT ->
                          case leWord# [sat_s5i7s 9##] of {
                            __DEFAULT ->
                                case ord# [ww_s5i7p] of sat_s5i7v {
                                  __DEFAULT ->
                                      case -# [sat_s5i7v 97#] of x#1_s5i7u [Dmd=<S,U>] {
                                        __DEFAULT ->
                                            case int2Word# [x#1_s5i7u] of sat_s5i7w {
                                              __DEFAULT ->
                                                  case leWord# [sat_s5i7w 5##] of {
                                                    __DEFAULT ->
                                                        case ord# [ww_s5i7p] of sat_s5i7z {
                                                          __DEFAULT ->
                                                              case
                                                                  -# [sat_s5i7z 65#]
                                                              of
                                                              x#2_s5i7y [Dmd=<S,U>]
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#2_s5i7y]
                                                                    of
                                                                    sat_s5i7A
                                                                    { __DEFAULT ->
                                                                          case
                                                                              leWord# [sat_s5i7A
                                                                                       5##]
                                                                          of
                                                                          { __DEFAULT ->
                                                                                Data.Char.$wlvl
                                                                                    ww_s5i7p;
                                                                            1# ->
                                                                                +# [x#2_s5i7y 10#];
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                    1# -> +# [x#1_s5i7u 10#];
                                                  };
                                            };
                                      };
                                };
                            1# -> x#_s5i7q;
                          };
                    };
              };
        };

Data.Char.digitToInt [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Int
[GblId, Arity=1, Str=<S(S),1*U(U)>m, Unf=OtherCon []] =
    [] \r [w_s5i7D]
        case w_s5i7D of {
          GHC.Types.C# ww1_s5i7F [Occ=Once] ->
              case Data.Char.$wdigitToInt ww1_s5i7F of ww2_s5i7G {
                __DEFAULT -> GHC.Types.I# [ww2_s5i7G];
              };
        };

