
==================== Output Cmm ====================
2018-03-16 15:56:22.047881375 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:56:22.049455986 UTC

[section ""data" . Data.Bool.bool_closure" {
     Data.Bool.bool_closure:
         const Data.Bool.bool_info;
 },
 Data.Bool.bool_entry() //  [R2, R3, R4]
         { info_tbl: [(c1zZA,
                       label: Data.Bool.bool_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1zZA: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c1zZB; else goto c1zZC;
       c1zZB: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bool.bool_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c1zZC: // global
           I64[Sp - 24] = block_c1zZt_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u1zZJ; else goto c1zZu;
       u1zZJ: // global
           call _c1zZt(R1) args: 0, res: 0, upd: 0;
       c1zZu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c1zZt() //  [R1]
         { info_tbl: [(c1zZt,
                       label: block_c1zZt_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1zZt: // global
           if (R1 & 7 == 1) goto c1zZx; else goto c1zZy;
       c1zZx: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c1zZy: // global
           R1 = P64[Sp + 16];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.051296323 UTC

[section ""cstring" . Data.Bool.$trModule4_bytes" {
     Data.Bool.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.052230512 UTC

[section ""data" . Data.Bool.$trModule3_closure" {
     Data.Bool.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bool.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.05315645 UTC

[section ""cstring" . Data.Bool.$trModule2_bytes" {
     Data.Bool.$trModule2_bytes:
         I8[] [68,97,116,97,46,66,111,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.054567591 UTC

[section ""data" . Data.Bool.$trModule1_closure" {
     Data.Bool.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bool.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.055393394 UTC

[section ""data" . Data.Bool.$trModule_closure" {
     Data.Bool.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Bool.$trModule3_closure+1;
         const Data.Bool.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.056211224 UTC

[section ""relreadonly" . S1zZK_srt" { S1zZK_srt:
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.057030306 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:56:22.058684635 UTC

[section ""data" . Data.Bool.bool_closure" {
     Data.Bool.bool_closure:
         const Data.Bool.bool_info;
 },
 Data.Bool.bool_entry() //  [R2, R3, R4]
         { info_tbl: [(c1zZW,
                       label: Data.Bool.bool_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1zZW: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c1zZX; else goto c1zZY;
       c1zZX: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bool.bool_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c1zZY: // global
           I64[Sp - 24] = block_c1zZP_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u1A05; else goto c1zZQ;
       u1A05: // global
           call _c1zZP(R1) args: 0, res: 0, upd: 0;
       c1zZQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c1zZP() //  [R1]
         { info_tbl: [(c1zZP,
                       label: block_c1zZP_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1zZP: // global
           if (R1 & 7 == 1) goto c1zZT; else goto c1zZU;
       c1zZT: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c1zZU: // global
           R1 = P64[Sp + 16];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.060406671 UTC

[section ""cstring" . Data.Bool.$trModule4_bytes" {
     Data.Bool.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.061556352 UTC

[section ""data" . Data.Bool.$trModule3_closure" {
     Data.Bool.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bool.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.0625066 UTC

[section ""cstring" . Data.Bool.$trModule2_bytes" {
     Data.Bool.$trModule2_bytes:
         I8[] [68,97,116,97,46,66,111,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.064055411 UTC

[section ""data" . Data.Bool.$trModule1_closure" {
     Data.Bool.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bool.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.06500225 UTC

[section ""data" . Data.Bool.$trModule_closure" {
     Data.Bool.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Bool.$trModule3_closure+1;
         const Data.Bool.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.065963721 UTC

[section ""relreadonly" . S1zZK_srt" { S1zZK_srt:
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.067089986 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:56:22.069707152 UTC

[section ""data" . Data.Bool.bool_closure" {
     Data.Bool.bool_closure:
         const Data.Bool.bool_info;
 },
 Data.Bool.bool_entry() //  [R2, R3, R4]
         { info_tbl: [(c1A0h,
                       label: Data.Bool.bool_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1A0h: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c1A0i; else goto c1A0j;
       c1A0i: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bool.bool_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c1A0j: // global
           I64[Sp - 24] = block_c1A0a_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u1A0q; else goto c1A0b;
       u1A0q: // global
           call _c1A0a(R1) args: 0, res: 0, upd: 0;
       c1A0b: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c1A0a() //  [R1]
         { info_tbl: [(c1A0a,
                       label: block_c1A0a_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1A0a: // global
           if (R1 & 7 == 1) goto c1A0e; else goto c1A0f;
       c1A0e: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c1A0f: // global
           R1 = P64[Sp + 16];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.077381325 UTC

[section ""cstring" . Data.Bool.$trModule4_bytes" {
     Data.Bool.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.079270503 UTC

[section ""data" . Data.Bool.$trModule3_closure" {
     Data.Bool.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bool.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.08162207 UTC

[section ""cstring" . Data.Bool.$trModule2_bytes" {
     Data.Bool.$trModule2_bytes:
         I8[] [68,97,116,97,46,66,111,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.08336905 UTC

[section ""data" . Data.Bool.$trModule1_closure" {
     Data.Bool.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bool.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.085017062 UTC

[section ""data" . Data.Bool.$trModule_closure" {
     Data.Bool.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Bool.$trModule3_closure+1;
         const Data.Bool.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.087434562 UTC

[section ""relreadonly" . S1zZK_srt" { S1zZK_srt:
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.113142757 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:56:22.11481322 UTC

[section ""data" . Data.Bool.bool_closure" {
     Data.Bool.bool_closure:
         const Data.Bool.bool_info;
 },
 Data.Bool.bool_entry() //  [R2, R3, R4]
         { info_tbl: [(c1A0X,
                       label: Data.Bool.bool_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1A0X: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c1A0Y; else goto c1A0Z;
       c1A0Y: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bool.bool_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c1A0Z: // global
           I64[Sp - 24] = block_c1A0Q_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u1A16; else goto c1A0R;
       u1A16: // global
           call _c1A0Q(R1) args: 0, res: 0, upd: 0;
       c1A0R: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c1A0Q() //  [R1]
         { info_tbl: [(c1A0Q,
                       label: block_c1A0Q_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1A0Q: // global
           if (R1 & 7 == 1) goto c1A0U; else goto c1A0V;
       c1A0U: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c1A0V: // global
           R1 = P64[Sp + 16];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.120997382 UTC

[section ""cstring" . Data.Bool.$trModule4_bytes" {
     Data.Bool.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.122957171 UTC

[section ""data" . Data.Bool.$trModule3_closure" {
     Data.Bool.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bool.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.124562004 UTC

[section ""cstring" . Data.Bool.$trModule2_bytes" {
     Data.Bool.$trModule2_bytes:
         I8[] [68,97,116,97,46,66,111,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.126170379 UTC

[section ""data" . Data.Bool.$trModule1_closure" {
     Data.Bool.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bool.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.128058596 UTC

[section ""data" . Data.Bool.$trModule_closure" {
     Data.Bool.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Bool.$trModule3_closure+1;
         const Data.Bool.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:22.129733525 UTC

[section ""relreadonly" . S1A1o_srt" { S1A1o_srt:
 }]

