
==================== Raw Cmm ====================
2018-03-16 16:08:56.573139692 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:08:56.576619576 UTC

[section ""data" . Data.Bifunctor.bimap_closure" {
     Data.Bifunctor.bimap_closure:
         const Data.Bifunctor.bimap_info;
 },
 Data.Bifunctor.bimap_entry() //  [R2]
         { []
         }
     {offset
       cdIZP: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cdIZQ; else goto cdIZR;
       cdIZQ: // global
           R2 = R2;
           R1 = Data.Bifunctor.bimap_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdIZR: // global
           I64[Sp - 8] = block_cdIZM_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto udIZV; else goto cdIZN;
       udIZV: // global
           call _cdIZM(R1) args: 0, res: 0, upd: 0;
       cdIZN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.bimap_info" {
     Data.Bifunctor.bimap_info:
         const Data.Bifunctor.bimap_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cdIZM() //  [R1]
         { []
         }
     {offset
       cdIZM: // global
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cdIZM_info" {
     block_cdIZM_info:
         const _cdIZM;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.587010745 UTC

[section ""data" . Data.Bifunctor.first_closure" {
     Data.Bifunctor.first_closure:
         const Data.Bifunctor.first_info;
 },
 Data.Bifunctor.first_entry() //  [R2]
         { []
         }
     {offset
       cdJ0c: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cdJ0d; else goto cdJ0e;
       cdJ0d: // global
           R2 = R2;
           R1 = Data.Bifunctor.first_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdJ0e: // global
           I64[Sp - 8] = block_cdJ09_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto udJ0i; else goto cdJ0a;
       udJ0i: // global
           call _cdJ09(R1) args: 0, res: 0, upd: 0;
       cdJ0a: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.first_info" {
     Data.Bifunctor.first_info:
         const Data.Bifunctor.first_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cdJ09() //  [R1]
         { []
         }
     {offset
       cdJ09: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cdJ09_info" {
     block_cdJ09_info:
         const _cdJ09;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.596940801 UTC

[section ""data" . Data.Bifunctor.second_closure" {
     Data.Bifunctor.second_closure:
         const Data.Bifunctor.second_info;
 },
 Data.Bifunctor.second_entry() //  [R2]
         { []
         }
     {offset
       cdJ0z: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cdJ0A; else goto cdJ0B;
       cdJ0A: // global
           R2 = R2;
           R1 = Data.Bifunctor.second_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdJ0B: // global
           I64[Sp - 8] = block_cdJ0w_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto udJ0F; else goto cdJ0x;
       udJ0F: // global
           call _cdJ0w(R1) args: 0, res: 0, upd: 0;
       cdJ0x: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.second_info" {
     Data.Bifunctor.second_info:
         const Data.Bifunctor.second_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cdJ0w() //  [R1]
         { []
         }
     {offset
       cdJ0w: // global
           R1 = P64[R1 + 23];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cdJ0w_info" {
     block_cdJ0w_info:
         const _cdJ0w;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.609303337 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,)_$cbimap_info;
 },
 sat_sdIsc_entry() //  [R1]
         { []
         }
     {offset
       cdJ0Y: // global
           _sdIsc::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ0Z; else goto cdJ10;
       cdJ10: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ12; else goto cdJ11;
       cdJ12: // global
           HpAlloc = 24;
           goto cdJ0Z;
       cdJ0Z: // global
           R1 = _sdIsc::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ11: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIsc::P64;
           _sdIs1::P64 = P64[_sdIsc::P64 + 16];
           _sdIs2::P64 = P64[_sdIsc::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdIs2::P64;
           R2 = Hp - 16;
           R1 = _sdIs1::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdIsc_info" {
     sat_sdIsc_info:
         const sat_sdIsc_entry;
         const 2;
         const 18;
 },
 sat_sdIs7_entry() //  [R1]
         { []
         }
     {offset
       cdJ18: // global
           _sdIs7::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ19; else goto cdJ1a;
       cdJ1a: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ1c; else goto cdJ1b;
       cdJ1c: // global
           HpAlloc = 24;
           goto cdJ19;
       cdJ19: // global
           R1 = _sdIs7::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ1b: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIs7::P64;
           _sdIs0::P64 = P64[_sdIs7::P64 + 16];
           _sdIs2::P64 = P64[_sdIs7::P64 + 24];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _sdIs2::P64;
           R2 = Hp - 16;
           R1 = _sdIs0::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdIs7_info" {
     sat_sdIs7_info:
         const sat_sdIs7_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,)_$cbimap_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cdJ1e: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cdJ1i; else goto cdJ1h;
       cdJ1i: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJ1h: // global
           I64[Hp - 80] = sat_sdIsc_info;
           P64[Hp - 64] = R3;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = sat_sdIs7_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 80;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,)_$cbimap_info" {
     Data.Bifunctor.$fBifunctor(,)_$cbimap_info:
         const Data.Bifunctor.$fBifunctor(,)_$cbimap_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.624214123 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,)_$cbimap_info;
 },
 sat_sdIsw_entry() //  [R1]
         { []
         }
     {offset
       cdJ1H: // global
           _sdIsw::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ1I; else goto cdJ1J;
       cdJ1J: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ1L; else goto cdJ1K;
       cdJ1L: // global
           HpAlloc = 24;
           goto cdJ1I;
       cdJ1I: // global
           R1 = _sdIsw::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ1K: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIsw::P64;
           _sdIse::P64 = P64[_sdIsw::P64 + 16];
           _sdIsf::P64 = P64[_sdIsw::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdIsf::P64;
           R2 = Hp - 16;
           R1 = _sdIse::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdIsw_info" {
     sat_sdIsw_info:
         const sat_sdIsw_entry;
         const 2;
         const 18;
 },
 sat_sdIsq_entry() //  [R1]
         { []
         }
     {offset
       cdJ1R: // global
           _sdIsq::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ1S; else goto cdJ1T;
       cdJ1T: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ1V; else goto cdJ1U;
       cdJ1V: // global
           HpAlloc = 24;
           goto cdJ1S;
       cdJ1S: // global
           R1 = _sdIsq::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ1U: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIsq::P64;
           _sdIsd::P64 = P64[_sdIsq::P64 + 16];
           _sdIsf::P64 = P64[_sdIsq::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdIsf::P64;
           R2 = Hp - 16;
           R1 = _sdIsd::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdIsq_info" {
     sat_sdIsq_info:
         const sat_sdIsq_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,)_$cbimap_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cdJ1Y: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto cdJ22; else goto cdJ21;
       cdJ22: // global
           HpAlloc = 120;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJ21: // global
           I64[Hp - 112] = sat_sdIsw_info;
           P64[Hp - 96] = R3;
           P64[Hp - 88] = R4;
           I64[Hp - 80] = sat_sdIsq_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = stg_sel_0_upd_info;
           P64[Hp - 32] = R4;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = Hp - 48;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 112;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,)_$cbimap_info" {
     Data.Bifunctor.$fBifunctor(,,)_$cbimap_info:
         const Data.Bifunctor.$fBifunctor(,,)_$cbimap_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.638762984 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,)_$cbimap_info;
 },
 sat_sdIsZ_entry() //  [R1]
         { []
         }
     {offset
       cdJ2s: // global
           _sdIsZ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ2t; else goto cdJ2u;
       cdJ2u: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ2w; else goto cdJ2v;
       cdJ2w: // global
           HpAlloc = 24;
           goto cdJ2t;
       cdJ2t: // global
           R1 = _sdIsZ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ2v: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIsZ::P64;
           _sdIsy::P64 = P64[_sdIsZ::P64 + 16];
           _sdIsz::P64 = P64[_sdIsZ::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdIsz::P64;
           R2 = Hp - 16;
           R1 = _sdIsy::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdIsZ_info" {
     sat_sdIsZ_info:
         const sat_sdIsZ_entry;
         const 2;
         const 18;
 },
 sat_sdIsS_entry() //  [R1]
         { []
         }
     {offset
       cdJ2C: // global
           _sdIsS::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ2D; else goto cdJ2E;
       cdJ2E: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ2G; else goto cdJ2F;
       cdJ2G: // global
           HpAlloc = 24;
           goto cdJ2D;
       cdJ2D: // global
           R1 = _sdIsS::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ2F: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIsS::P64;
           _sdIsx::P64 = P64[_sdIsS::P64 + 16];
           _sdIsz::P64 = P64[_sdIsS::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdIsz::P64;
           R2 = Hp - 16;
           R1 = _sdIsx::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdIsS_info" {
     sat_sdIsS_info:
         const sat_sdIsS_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,)_$cbimap_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cdJ2K: // global
           Hp = Hp + 152;
           if (Hp > HpLim) (likely: False) goto cdJ2O; else goto cdJ2N;
       cdJ2O: // global
           HpAlloc = 152;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJ2N: // global
           I64[Hp - 144] = sat_sdIsZ_info;
           P64[Hp - 128] = R3;
           P64[Hp - 120] = R4;
           I64[Hp - 112] = sat_sdIsS_info;
           P64[Hp - 96] = R2;
           P64[Hp - 88] = R4;
           I64[Hp - 80] = stg_sel_1_upd_info;
           P64[Hp - 64] = R4;
           I64[Hp - 56] = stg_sel_0_upd_info;
           P64[Hp - 40] = R4;
           I64[Hp - 32] = (,,,)_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 80;
           P64[Hp - 8] = Hp - 112;
           P64[Hp] = Hp - 144;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,)_$cbimap_info" {
     Data.Bifunctor.$fBifunctor(,,,)_$cbimap_info:
         const Data.Bifunctor.$fBifunctor(,,,)_$cbimap_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.652164679 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_info;
 },
 sat_sdItD_entry() //  [R1]
         { []
         }
     {offset
       cdJ3f: // global
           _sdItD::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ3g; else goto cdJ3h;
       cdJ3h: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ3j; else goto cdJ3i;
       cdJ3j: // global
           HpAlloc = 24;
           goto cdJ3g;
       cdJ3g: // global
           R1 = _sdItD::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ3i: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdItD::P64;
           _sdIt1::P64 = P64[_sdItD::P64 + 16];
           _sdIt2::P64 = P64[_sdItD::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdIt2::P64;
           R2 = Hp - 16;
           R1 = _sdIt1::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdItD_info" {
     sat_sdItD_info:
         const sat_sdItD_entry;
         const 2;
         const 18;
 },
 sat_sdItv_entry() //  [R1]
         { []
         }
     {offset
       cdJ3p: // global
           _sdItv::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ3q; else goto cdJ3r;
       cdJ3r: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ3t; else goto cdJ3s;
       cdJ3t: // global
           HpAlloc = 24;
           goto cdJ3q;
       cdJ3q: // global
           R1 = _sdItv::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ3s: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdItv::P64;
           _sdIt0::P64 = P64[_sdItv::P64 + 16];
           _sdIt2::P64 = P64[_sdItv::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdIt2::P64;
           R2 = Hp - 16;
           R1 = _sdIt0::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdItv_info" {
     sat_sdItv_info:
         const sat_sdItv_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cdJ3y: // global
           Hp = Hp + 184;
           if (Hp > HpLim) (likely: False) goto cdJ3C; else goto cdJ3B;
       cdJ3C: // global
           HpAlloc = 184;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJ3B: // global
           I64[Hp - 176] = sat_sdItD_info;
           P64[Hp - 160] = R3;
           P64[Hp - 152] = R4;
           I64[Hp - 144] = sat_sdItv_info;
           P64[Hp - 128] = R2;
           P64[Hp - 120] = R4;
           I64[Hp - 112] = stg_sel_2_upd_info;
           P64[Hp - 96] = R4;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = R4;
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = R4;
           I64[Hp - 40] = (,,,,)_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           P64[Hp - 16] = Hp - 112;
           P64[Hp - 8] = Hp - 144;
           P64[Hp] = Hp - 176;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_info" {
     Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_info:
         const Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.662738637 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_info;
 },
 sat_sdIuu_entry() //  [R1]
         { []
         }
     {offset
       cdJ44: // global
           _sdIuu::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ45; else goto cdJ46;
       cdJ46: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ48; else goto cdJ47;
       cdJ48: // global
           HpAlloc = 24;
           goto cdJ45;
       cdJ45: // global
           R1 = _sdIuu::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ47: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIuu::P64;
           _sdItF::P64 = P64[_sdIuu::P64 + 16];
           _sdItG::P64 = P64[_sdIuu::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdItG::P64;
           R2 = Hp - 16;
           R1 = _sdItF::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdIuu_info" {
     sat_sdIuu_info:
         const sat_sdIuu_entry;
         const 2;
         const 18;
 },
 sat_sdIul_entry() //  [R1]
         { []
         }
     {offset
       cdJ4e: // global
           _sdIul::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ4f; else goto cdJ4g;
       cdJ4g: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ4i; else goto cdJ4h;
       cdJ4i: // global
           HpAlloc = 24;
           goto cdJ4f;
       cdJ4f: // global
           R1 = _sdIul::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ4h: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIul::P64;
           _sdItE::P64 = P64[_sdIul::P64 + 16];
           _sdItG::P64 = P64[_sdIul::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdItG::P64;
           R2 = Hp - 16;
           R1 = _sdItE::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdIul_info" {
     sat_sdIul_info:
         const sat_sdIul_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cdJ4o: // global
           Hp = Hp + 216;
           if (Hp > HpLim) (likely: False) goto cdJ4s; else goto cdJ4r;
       cdJ4s: // global
           HpAlloc = 216;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJ4r: // global
           I64[Hp - 208] = sat_sdIuu_info;
           P64[Hp - 192] = R3;
           P64[Hp - 184] = R4;
           I64[Hp - 176] = sat_sdIul_info;
           P64[Hp - 160] = R2;
           P64[Hp - 152] = R4;
           I64[Hp - 144] = stg_sel_3_upd_info;
           P64[Hp - 128] = R4;
           I64[Hp - 120] = stg_sel_2_upd_info;
           P64[Hp - 104] = R4;
           I64[Hp - 96] = stg_sel_1_upd_info;
           P64[Hp - 80] = R4;
           I64[Hp - 72] = stg_sel_0_upd_info;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = (,,,,,)_con_info;
           P64[Hp - 40] = Hp - 72;
           P64[Hp - 32] = Hp - 96;
           P64[Hp - 24] = Hp - 120;
           P64[Hp - 16] = Hp - 144;
           P64[Hp - 8] = Hp - 176;
           P64[Hp] = Hp - 208;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_info" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_info:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.674969064 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_info;
 },
 sat_sdIvA_entry() //  [R1]
         { []
         }
     {offset
       cdJ4V: // global
           _sdIvA::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ4W; else goto cdJ4X;
       cdJ4X: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ4Z; else goto cdJ4Y;
       cdJ4Z: // global
           HpAlloc = 24;
           goto cdJ4W;
       cdJ4W: // global
           R1 = _sdIvA::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ4Y: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIvA::P64;
           _sdIuw::P64 = P64[_sdIvA::P64 + 16];
           _sdIux::P64 = P64[_sdIvA::P64 + 24];
           I64[Hp - 16] = stg_sel_6_upd_info;
           P64[Hp] = _sdIux::P64;
           R2 = Hp - 16;
           R1 = _sdIuw::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdIvA_info" {
     sat_sdIvA_info:
         const sat_sdIvA_entry;
         const 2;
         const 18;
 },
 sat_sdIvq_entry() //  [R1]
         { []
         }
     {offset
       cdJ55: // global
           _sdIvq::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ56; else goto cdJ57;
       cdJ57: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ59; else goto cdJ58;
       cdJ59: // global
           HpAlloc = 24;
           goto cdJ56;
       cdJ56: // global
           R1 = _sdIvq::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ58: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIvq::P64;
           _sdIuv::P64 = P64[_sdIvq::P64 + 16];
           _sdIux::P64 = P64[_sdIvq::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdIux::P64;
           R2 = Hp - 16;
           R1 = _sdIuv::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdIvq_info" {
     sat_sdIvq_info:
         const sat_sdIvq_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cdJ5g: // global
           Hp = Hp + 248;
           if (Hp > HpLim) (likely: False) goto cdJ5k; else goto cdJ5j;
       cdJ5k: // global
           HpAlloc = 248;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJ5j: // global
           I64[Hp - 240] = sat_sdIvA_info;
           P64[Hp - 224] = R3;
           P64[Hp - 216] = R4;
           I64[Hp - 208] = sat_sdIvq_info;
           P64[Hp - 192] = R2;
           P64[Hp - 184] = R4;
           I64[Hp - 176] = stg_sel_4_upd_info;
           P64[Hp - 160] = R4;
           I64[Hp - 152] = stg_sel_3_upd_info;
           P64[Hp - 136] = R4;
           I64[Hp - 128] = stg_sel_2_upd_info;
           P64[Hp - 112] = R4;
           I64[Hp - 104] = stg_sel_1_upd_info;
           P64[Hp - 88] = R4;
           I64[Hp - 80] = stg_sel_0_upd_info;
           P64[Hp - 64] = R4;
           I64[Hp - 56] = (,,,,,,)_con_info;
           P64[Hp - 48] = Hp - 80;
           P64[Hp - 40] = Hp - 104;
           P64[Hp - 32] = Hp - 128;
           P64[Hp - 24] = Hp - 152;
           P64[Hp - 16] = Hp - 176;
           P64[Hp - 8] = Hp - 208;
           P64[Hp] = Hp - 240;
           R1 = Hp - 55;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_info" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_info:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.685376586 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_$cbimap_closure" {
     Data.Bifunctor.$fBifunctorEither_$cbimap_closure:
         const Data.Bifunctor.$fBifunctorEither_$cbimap_info;
 },
 Data.Bifunctor.$fBifunctorEither_$cbimap_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cdJ5Q: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cdJ5R; else goto cdJ5S;
       cdJ5R: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctorEither_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJ5S: // global
           I64[Sp - 24] = block_cdJ5J_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto udJ67; else goto cdJ5K;
       udJ67: // global
           call _cdJ5J(R1) args: 0, res: 0, upd: 0;
       cdJ5K: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctorEither_$cbimap_info" {
     Data.Bifunctor.$fBifunctorEither_$cbimap_info:
         const Data.Bifunctor.$fBifunctorEither_$cbimap_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cdJ5J() //  [R1]
         { []
         }
     {offset
       cdJ5J: // global
           if (R1 & 7 == 1) goto cdJ5N; else goto cdJ5O;
       cdJ5N: // global
           Hp = Hp + 48;
           _sdIvE::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cdJ66; else goto cdJ5Y;
       cdJ5Y: // global
           _sdIvF::P64 = P64[_sdIvE::P64 + 7];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sdIvF::P64;
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cdJ5O: // global
           Hp = Hp + 48;
           _sdIvE::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cdJ66; else goto cdJ65;
       cdJ66: // global
           HpAlloc = 48;
           R1 = _sdIvE::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cdJ65: // global
           _sdIvH::P64 = P64[_sdIvE::P64 + 6];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 16];
           P64[Hp - 16] = _sdIvH::P64;
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 6;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cdJ5J_info" {
     block_cdJ5J_info:
         const _cdJ5J;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.692430896 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst3_closure" {
     Data.Bifunctor.$fBifunctorConst3_closure:
         const Data.Bifunctor.$fBifunctorConst3_info;
 },
 Data.Bifunctor.$fBifunctorConst3_entry() //  [R2, R4]
         { []
         }
     {offset
       cdJ6t: // global
           _sdIvJ::P64 = R2;
           R2 = R4;
           R1 = _sdIvJ::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctorConst3_info" {
     Data.Bifunctor.$fBifunctorConst3_info:
         const Data.Bifunctor.$fBifunctorConst3_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.696734036 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK4_closure" {
     Data.Bifunctor.$fBifunctorK4_closure:
         const Data.Bifunctor.$fBifunctorK4_info;
 },
 Data.Bifunctor.$fBifunctorK4_entry() //  [R2, R4]
         { []
         }
     {offset
       cdJ6E: // global
           _sdIvM::P64 = R2;
           R2 = R4;
           R1 = _sdIvM::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctorK4_info" {
     Data.Bifunctor.$fBifunctorK4_info:
         const Data.Bifunctor.$fBifunctorK4_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.700898503 UTC

[section ""data" . Data.Bifunctor.$dmsecond_closure" {
     Data.Bifunctor.$dmsecond_closure:
         const Data.Bifunctor.$dmsecond_info;
 },
 Data.Bifunctor.$dmsecond_entry() //  [R2]
         { []
         }
     {offset
       cdJ6P: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ6Q; else goto cdJ6R;
       cdJ6Q: // global
           R2 = R2;
           R1 = Data.Bifunctor.$dmsecond_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdJ6R: // global
           R2 = R2;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = GHC.Base.id_closure+1;
           Sp = Sp - 16;
           call Data.Bifunctor.bimap_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$dmsecond_info" {
     Data.Bifunctor.$dmsecond_info:
         const Data.Bifunctor.$dmsecond_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.70596055 UTC

[section ""data" . Data.Bifunctor.$dmfirst_closure" {
     Data.Bifunctor.$dmfirst_closure:
         const Data.Bifunctor.$dmfirst_info;
 },
 Data.Bifunctor.$dmfirst_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJ71: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cdJ72; else goto cdJ73;
       cdJ72: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$dmfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJ73: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = GHC.Base.id_closure+1;
           Sp = Sp - 24;
           call Data.Bifunctor.bimap_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$dmfirst_info" {
     Data.Bifunctor.$dmfirst_info:
         const Data.Bifunctor.$dmfirst_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.710425054 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK3_closure" {
     Data.Bifunctor.$fBifunctorK3_closure:
         const Data.Bifunctor.$fBifunctorK3_info;
 },
 Data.Bifunctor.$fBifunctorK3_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJ7d: // global
           _sdIvS::P64 = R2;
           R2 = R3;
           R1 = _sdIvS::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctorK3_info" {
     Data.Bifunctor.$fBifunctorK3_info:
         const Data.Bifunctor.$fBifunctorK3_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.714398028 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK2_closure" {
     Data.Bifunctor.$fBifunctorK2_closure:
         const Data.Bifunctor.$fBifunctorK2_info;
 },
 Data.Bifunctor.$fBifunctorK2_entry() //  [R3]
         { []
         }
     {offset
       cdJ7o: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctorK2_info" {
     Data.Bifunctor.$fBifunctorK2_info:
         const Data.Bifunctor.$fBifunctorK2_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.71893825 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK1_closure" {
     Data.Bifunctor.$fBifunctorK1_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctorK4_closure+3;
         const Data.Bifunctor.$fBifunctorK3_closure+2;
         const Data.Bifunctor.$fBifunctorK2_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.721363955 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst2_closure" {
     Data.Bifunctor.$fBifunctorConst2_closure:
         const Data.Bifunctor.$fBifunctorConst2_info;
 },
 Data.Bifunctor.$fBifunctorConst2_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJ7A: // global
           _sdIvW::P64 = R2;
           R2 = R3;
           R1 = _sdIvW::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctorConst2_info" {
     Data.Bifunctor.$fBifunctorConst2_info:
         const Data.Bifunctor.$fBifunctorConst2_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.72618639 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst1_closure" {
     Data.Bifunctor.$fBifunctorConst1_closure:
         const Data.Bifunctor.$fBifunctorConst1_info;
 },
 Data.Bifunctor.$fBifunctorConst1_entry() //  [R3]
         { []
         }
     {offset
       cdJ7L: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctorConst1_info" {
     Data.Bifunctor.$fBifunctorConst1_info:
         const Data.Bifunctor.$fBifunctorConst1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.729771692 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst_closure" {
     Data.Bifunctor.$fBifunctorConst_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctorConst3_closure+3;
         const Data.Bifunctor.$fBifunctorConst2_closure+2;
         const Data.Bifunctor.$fBifunctorConst1_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.733408565 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_$cfirst_closure" {
     Data.Bifunctor.$fBifunctorEither_$cfirst_closure:
         const Data.Bifunctor.$fBifunctorEither_$cfirst_info;
 },
 Data.Bifunctor.$fBifunctorEither_$cfirst_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJ84: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ85; else goto cdJ86;
       cdJ85: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctorEither_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJ86: // global
           I64[Sp - 16] = block_cdJ7X_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto udJ8h; else goto cdJ7Y;
       udJ8h: // global
           call _cdJ7X(R1) args: 0, res: 0, upd: 0;
       cdJ7Y: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctorEither_$cfirst_info" {
     Data.Bifunctor.$fBifunctorEither_$cfirst_info:
         const Data.Bifunctor.$fBifunctorEither_$cfirst_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _cdJ7X() //  [R1]
         { []
         }
     {offset
       cdJ7X: // global
           if (R1 & 7 == 1) goto cdJ81; else goto cdJ82;
       cdJ81: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cdJ8d; else goto cdJ8c;
       cdJ8d: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cdJ8c: // global
           _sdIw3::P64 = P64[R1 + 7];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sdIw3::P64;
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cdJ82: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cdJ7X_info" {
     block_cdJ7X_info:
         const _cdJ7X;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.741691979 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_$csecond_closure" {
     Data.Bifunctor.$fBifunctorEither_$csecond_closure:
         const Data.Bifunctor.$fBifunctorEither_$csecond_info;
 },
 Data.Bifunctor.$fBifunctorEither_$csecond_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJ8J: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ8K; else goto cdJ8L;
       cdJ8K: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctorEither_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJ8L: // global
           I64[Sp - 16] = block_cdJ8C_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto udJ8W; else goto cdJ8D;
       udJ8W: // global
           call _cdJ8C(R1) args: 0, res: 0, upd: 0;
       cdJ8D: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctorEither_$csecond_info" {
     Data.Bifunctor.$fBifunctorEither_$csecond_info:
         const Data.Bifunctor.$fBifunctorEither_$csecond_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _cdJ8C() //  [R1]
         { []
         }
     {offset
       cdJ8C: // global
           if (R1 & 7 == 1) goto cdJ8G; else goto cdJ8H;
       cdJ8G: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       cdJ8H: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cdJ8V; else goto cdJ8U;
       cdJ8V: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cdJ8U: // global
           _sdIwa::P64 = P64[R1 + 6];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sdIwa::P64;
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cdJ8C_info" {
     block_cdJ8C_info:
         const _cdJ8C;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.747900854 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_closure" {
     Data.Bifunctor.$fBifunctorEither_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctorEither_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctorEither_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctorEither_$csecond_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.75168211 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_info;
 },
 sat_sdIx6_entry() //  [R1]
         { []
         }
     {offset
       cdJ9o: // global
           _sdIx6::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ9p; else goto cdJ9q;
       cdJ9q: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ9s; else goto cdJ9r;
       cdJ9s: // global
           HpAlloc = 24;
           goto cdJ9p;
       cdJ9p: // global
           R1 = _sdIx6::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ9r: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIx6::P64;
           _sdIwc::P64 = P64[_sdIx6::P64 + 16];
           _sdIwd::P64 = P64[_sdIx6::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdIwd::P64;
           R2 = Hp - 16;
           R1 = _sdIwc::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdIx6_info" {
     sat_sdIx6_info:
         const sat_sdIx6_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJ9z: // global
           Hp = Hp + 240;
           if (Hp > HpLim) (likely: False) goto cdJ9D; else goto cdJ9C;
       cdJ9D: // global
           HpAlloc = 240;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJ9C: // global
           I64[Hp - 232] = stg_sel_6_upd_info;
           P64[Hp - 216] = R3;
           I64[Hp - 208] = sat_sdIx6_info;
           P64[Hp - 192] = R2;
           P64[Hp - 184] = R3;
           I64[Hp - 176] = stg_sel_4_upd_info;
           P64[Hp - 160] = R3;
           I64[Hp - 152] = stg_sel_3_upd_info;
           P64[Hp - 136] = R3;
           I64[Hp - 128] = stg_sel_2_upd_info;
           P64[Hp - 112] = R3;
           I64[Hp - 104] = stg_sel_1_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_0_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = (,,,,,,)_con_info;
           P64[Hp - 48] = Hp - 80;
           P64[Hp - 40] = Hp - 104;
           P64[Hp - 32] = Hp - 128;
           P64[Hp - 24] = Hp - 152;
           P64[Hp - 16] = Hp - 176;
           P64[Hp - 8] = Hp - 208;
           P64[Hp] = Hp - 232;
           R1 = Hp - 55;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_info" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_info:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.761684161 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_info;
 },
 sat_sdIyj_entry() //  [R1]
         { []
         }
     {offset
       cdJa3: // global
           _sdIyj::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJa4; else goto cdJa5;
       cdJa5: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJa7; else goto cdJa6;
       cdJa7: // global
           HpAlloc = 24;
           goto cdJa4;
       cdJa4: // global
           R1 = _sdIyj::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJa6: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIyj::P64;
           _sdIxg::P64 = P64[_sdIyj::P64 + 16];
           _sdIxh::P64 = P64[_sdIyj::P64 + 24];
           I64[Hp - 16] = stg_sel_6_upd_info;
           P64[Hp] = _sdIxh::P64;
           R2 = Hp - 16;
           R1 = _sdIxg::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdIyj_info" {
     sat_sdIyj_info:
         const sat_sdIyj_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJaf: // global
           Hp = Hp + 240;
           if (Hp > HpLim) (likely: False) goto cdJaj; else goto cdJai;
       cdJaj: // global
           HpAlloc = 240;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJai: // global
           I64[Hp - 232] = sat_sdIyj_info;
           P64[Hp - 216] = R2;
           P64[Hp - 208] = R3;
           I64[Hp - 200] = stg_sel_5_upd_info;
           P64[Hp - 184] = R3;
           I64[Hp - 176] = stg_sel_4_upd_info;
           P64[Hp - 160] = R3;
           I64[Hp - 152] = stg_sel_3_upd_info;
           P64[Hp - 136] = R3;
           I64[Hp - 128] = stg_sel_2_upd_info;
           P64[Hp - 112] = R3;
           I64[Hp - 104] = stg_sel_1_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_0_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = (,,,,,,)_con_info;
           P64[Hp - 48] = Hp - 80;
           P64[Hp - 40] = Hp - 104;
           P64[Hp - 32] = Hp - 128;
           P64[Hp - 24] = Hp - 152;
           P64[Hp - 16] = Hp - 176;
           P64[Hp - 8] = Hp - 200;
           P64[Hp] = Hp - 232;
           R1 = Hp - 55;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_info" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_info:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.768457544 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.772305631 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_info;
 },
 sat_sdIz0_entry() //  [R1]
         { []
         }
     {offset
       cdJaL: // global
           _sdIz0::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJaM; else goto cdJaN;
       cdJaN: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJaP; else goto cdJaO;
       cdJaP: // global
           HpAlloc = 24;
           goto cdJaM;
       cdJaM: // global
           R1 = _sdIz0::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJaO: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIz0::P64;
           _sdIyk::P64 = P64[_sdIz0::P64 + 16];
           _sdIyl::P64 = P64[_sdIz0::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdIyl::P64;
           R2 = Hp - 16;
           R1 = _sdIyk::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdIz0_info" {
     sat_sdIz0_info:
         const sat_sdIz0_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJaV: // global
           Hp = Hp + 208;
           if (Hp > HpLim) (likely: False) goto cdJaZ; else goto cdJaY;
       cdJaZ: // global
           HpAlloc = 208;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJaY: // global
           I64[Hp - 200] = stg_sel_5_upd_info;
           P64[Hp - 184] = R3;
           I64[Hp - 176] = sat_sdIz0_info;
           P64[Hp - 160] = R2;
           P64[Hp - 152] = R3;
           I64[Hp - 144] = stg_sel_3_upd_info;
           P64[Hp - 128] = R3;
           I64[Hp - 120] = stg_sel_2_upd_info;
           P64[Hp - 104] = R3;
           I64[Hp - 96] = stg_sel_1_upd_info;
           P64[Hp - 80] = R3;
           I64[Hp - 72] = stg_sel_0_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = (,,,,,)_con_info;
           P64[Hp - 40] = Hp - 72;
           P64[Hp - 32] = Hp - 96;
           P64[Hp - 24] = Hp - 120;
           P64[Hp - 16] = Hp - 144;
           P64[Hp - 8] = Hp - 176;
           P64[Hp] = Hp - 200;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_info" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_info:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.780946788 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_info;
 },
 sat_sdIzX_entry() //  [R1]
         { []
         }
     {offset
       cdJbo: // global
           _sdIzX::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJbp; else goto cdJbq;
       cdJbq: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJbs; else goto cdJbr;
       cdJbs: // global
           HpAlloc = 24;
           goto cdJbp;
       cdJbp: // global
           R1 = _sdIzX::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJbr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIzX::P64;
           _sdIz9::P64 = P64[_sdIzX::P64 + 16];
           _sdIza::P64 = P64[_sdIzX::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdIza::P64;
           R2 = Hp - 16;
           R1 = _sdIz9::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdIzX_info" {
     sat_sdIzX_info:
         const sat_sdIzX_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJbz: // global
           Hp = Hp + 208;
           if (Hp > HpLim) (likely: False) goto cdJbD; else goto cdJbC;
       cdJbD: // global
           HpAlloc = 208;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJbC: // global
           I64[Hp - 200] = sat_sdIzX_info;
           P64[Hp - 184] = R2;
           P64[Hp - 176] = R3;
           I64[Hp - 168] = stg_sel_4_upd_info;
           P64[Hp - 152] = R3;
           I64[Hp - 144] = stg_sel_3_upd_info;
           P64[Hp - 128] = R3;
           I64[Hp - 120] = stg_sel_2_upd_info;
           P64[Hp - 104] = R3;
           I64[Hp - 96] = stg_sel_1_upd_info;
           P64[Hp - 80] = R3;
           I64[Hp - 72] = stg_sel_0_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = (,,,,,)_con_info;
           P64[Hp - 40] = Hp - 72;
           P64[Hp - 32] = Hp - 96;
           P64[Hp - 24] = Hp - 120;
           P64[Hp - 16] = Hp - 144;
           P64[Hp - 8] = Hp - 168;
           P64[Hp] = Hp - 200;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_info" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_info:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.787625498 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.791393646 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_info;
 },
 sat_sdIAs_entry() //  [R1]
         { []
         }
     {offset
       cdJc4: // global
           _sdIAs::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJc5; else goto cdJc6;
       cdJc6: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJc8; else goto cdJc7;
       cdJc8: // global
           HpAlloc = 24;
           goto cdJc5;
       cdJc5: // global
           R1 = _sdIAs::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJc7: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIAs::P64;
           _sdIzY::P64 = P64[_sdIAs::P64 + 16];
           _sdIzZ::P64 = P64[_sdIAs::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdIzZ::P64;
           R2 = Hp - 16;
           R1 = _sdIzY::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdIAs_info" {
     sat_sdIAs_info:
         const sat_sdIAs_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJcd: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto cdJch; else goto cdJcg;
       cdJch: // global
           HpAlloc = 176;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJcg: // global
           I64[Hp - 168] = stg_sel_4_upd_info;
           P64[Hp - 152] = R3;
           I64[Hp - 144] = sat_sdIAs_info;
           P64[Hp - 128] = R2;
           P64[Hp - 120] = R3;
           I64[Hp - 112] = stg_sel_2_upd_info;
           P64[Hp - 96] = R3;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = R3;
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = (,,,,)_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           P64[Hp - 16] = Hp - 112;
           P64[Hp - 8] = Hp - 144;
           P64[Hp] = Hp - 168;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_info" {
     Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_info:
         const Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.800286633 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,,)_$csecond_info;
 },
 sat_sdIBb_entry() //  [R1]
         { []
         }
     {offset
       cdJcF: // global
           _sdIBb::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJcG; else goto cdJcH;
       cdJcH: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJcJ; else goto cdJcI;
       cdJcJ: // global
           HpAlloc = 24;
           goto cdJcG;
       cdJcG: // global
           R1 = _sdIBb::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJcI: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIBb::P64;
           _sdIAA::P64 = P64[_sdIBb::P64 + 16];
           _sdIAB::P64 = P64[_sdIBb::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdIAB::P64;
           R2 = Hp - 16;
           R1 = _sdIAA::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdIBb_info" {
     sat_sdIBb_info:
         const sat_sdIBb_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,,)_$csecond_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJcP: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto cdJcT; else goto cdJcS;
       cdJcT: // global
           HpAlloc = 176;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJcS: // global
           I64[Hp - 168] = sat_sdIBb_info;
           P64[Hp - 152] = R2;
           P64[Hp - 144] = R3;
           I64[Hp - 136] = stg_sel_3_upd_info;
           P64[Hp - 120] = R3;
           I64[Hp - 112] = stg_sel_2_upd_info;
           P64[Hp - 96] = R3;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = R3;
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = (,,,,)_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           P64[Hp - 16] = Hp - 112;
           P64[Hp - 8] = Hp - 136;
           P64[Hp] = Hp - 168;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,,)_$csecond_info" {
     Data.Bifunctor.$fBifunctor(,,,,)_$csecond_info:
         const Data.Bifunctor.$fBifunctor(,,,,)_$csecond_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.807441927 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.812059842 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,)_$cfirst_info;
 },
 sat_sdIBw_entry() //  [R1]
         { []
         }
     {offset
       cdJdj: // global
           _sdIBw::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJdk; else goto cdJdl;
       cdJdl: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJdn; else goto cdJdm;
       cdJdn: // global
           HpAlloc = 24;
           goto cdJdk;
       cdJdk: // global
           R1 = _sdIBw::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJdm: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIBw::P64;
           _sdIBc::P64 = P64[_sdIBw::P64 + 16];
           _sdIBd::P64 = P64[_sdIBw::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdIBd::P64;
           R2 = Hp - 16;
           R1 = _sdIBc::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdIBw_info" {
     sat_sdIBw_info:
         const sat_sdIBw_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,)_$cfirst_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJdr: // global
           Hp = Hp + 144;
           if (Hp > HpLim) (likely: False) goto cdJdv; else goto cdJdu;
       cdJdv: // global
           HpAlloc = 144;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJdu: // global
           I64[Hp - 136] = stg_sel_3_upd_info;
           P64[Hp - 120] = R3;
           I64[Hp - 112] = sat_sdIBw_info;
           P64[Hp - 96] = R2;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_1_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = stg_sel_0_upd_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = (,,,)_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 80;
           P64[Hp - 8] = Hp - 112;
           P64[Hp] = Hp - 136;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,)_$cfirst_info" {
     Data.Bifunctor.$fBifunctor(,,,)_$cfirst_info:
         const Data.Bifunctor.$fBifunctor(,,,)_$cfirst_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.820088084 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,)_$csecond_info;
 },
 sat_sdIC3_entry() //  [R1]
         { []
         }
     {offset
       cdJdS: // global
           _sdIC3::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJdT; else goto cdJdU;
       cdJdU: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJdW; else goto cdJdV;
       cdJdW: // global
           HpAlloc = 24;
           goto cdJdT;
       cdJdT: // global
           R1 = _sdIC3::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJdV: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIC3::P64;
           _sdIBD::P64 = P64[_sdIC3::P64 + 16];
           _sdIBE::P64 = P64[_sdIC3::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdIBE::P64;
           R2 = Hp - 16;
           R1 = _sdIBD::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdIC3_info" {
     sat_sdIC3_info:
         const sat_sdIC3_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,)_$csecond_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJe1: // global
           Hp = Hp + 144;
           if (Hp > HpLim) (likely: False) goto cdJe5; else goto cdJe4;
       cdJe5: // global
           HpAlloc = 144;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJe4: // global
           I64[Hp - 136] = sat_sdIC3_info;
           P64[Hp - 120] = R2;
           P64[Hp - 112] = R3;
           I64[Hp - 104] = stg_sel_2_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_1_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = stg_sel_0_upd_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = (,,,)_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 80;
           P64[Hp - 8] = Hp - 104;
           P64[Hp] = Hp - 136;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,)_$csecond_info" {
     Data.Bifunctor.$fBifunctor(,,,)_$csecond_info:
         const Data.Bifunctor.$fBifunctor(,,,)_$csecond_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.826694548 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.830673129 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,)_$cfirst_info;
 },
 sat_sdICg_entry() //  [R1]
         { []
         }
     {offset
       cdJeu: // global
           _sdICg::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJev; else goto cdJew;
       cdJew: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJey; else goto cdJex;
       cdJey: // global
           HpAlloc = 24;
           goto cdJev;
       cdJev: // global
           R1 = _sdICg::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJex: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdICg::P64;
           _sdIC4::P64 = P64[_sdICg::P64 + 16];
           _sdIC5::P64 = P64[_sdICg::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdIC5::P64;
           R2 = Hp - 16;
           R1 = _sdIC4::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdICg_info" {
     sat_sdICg_info:
         const sat_sdICg_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,)_$cfirst_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJeB: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto cdJeF; else goto cdJeE;
       cdJeF: // global
           HpAlloc = 112;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJeE: // global
           I64[Hp - 104] = stg_sel_2_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = sat_sdICg_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = stg_sel_0_upd_info;
           P64[Hp - 32] = R3;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = Hp - 48;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 104;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,)_$cfirst_info" {
     Data.Bifunctor.$fBifunctor(,,)_$cfirst_info:
         const Data.Bifunctor.$fBifunctor(,,)_$cfirst_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.838586595 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,)_$csecond_info;
 },
 sat_sdICD_entry() //  [R1]
         { []
         }
     {offset
       cdJf1: // global
           _sdICD::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJf2; else goto cdJf3;
       cdJf3: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJf5; else goto cdJf4;
       cdJf5: // global
           HpAlloc = 24;
           goto cdJf2;
       cdJf2: // global
           R1 = _sdICD::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJf4: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdICD::P64;
           _sdICm::P64 = P64[_sdICD::P64 + 16];
           _sdICn::P64 = P64[_sdICD::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdICn::P64;
           R2 = Hp - 16;
           R1 = _sdICm::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdICD_info" {
     sat_sdICD_info:
         const sat_sdICD_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,)_$csecond_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJf9: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto cdJfd; else goto cdJfc;
       cdJfd: // global
           HpAlloc = 112;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJfc: // global
           I64[Hp - 104] = sat_sdICD_info;
           P64[Hp - 88] = R2;
           P64[Hp - 80] = R3;
           I64[Hp - 72] = stg_sel_1_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = stg_sel_0_upd_info;
           P64[Hp - 32] = R3;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = Hp - 48;
           P64[Hp - 8] = Hp - 72;
           P64[Hp] = Hp - 104;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,)_$csecond_info" {
     Data.Bifunctor.$fBifunctor(,,)_$csecond_info:
         const Data.Bifunctor.$fBifunctor(,,)_$csecond_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.844747311 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,)_$csecond_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.848296561 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,)_$cfirst_info;
 },
 sat_sdICK_entry() //  [R1]
         { []
         }
     {offset
       cdJfB: // global
           _sdICK::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJfC; else goto cdJfD;
       cdJfD: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJfF; else goto cdJfE;
       cdJfF: // global
           HpAlloc = 24;
           goto cdJfC;
       cdJfC: // global
           R1 = _sdICK::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJfE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdICK::P64;
           _sdICE::P64 = P64[_sdICK::P64 + 16];
           _sdICF::P64 = P64[_sdICK::P64 + 24];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _sdICF::P64;
           R2 = Hp - 16;
           R1 = _sdICE::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdICK_info" {
     sat_sdICK_info:
         const sat_sdICK_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,)_$cfirst_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJfH: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cdJfL; else goto cdJfK;
       cdJfL: // global
           HpAlloc = 80;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJfK: // global
           I64[Hp - 72] = stg_sel_1_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = sat_sdICK_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 72;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,)_$cfirst_info" {
     Data.Bifunctor.$fBifunctor(,)_$cfirst_info:
         const Data.Bifunctor.$fBifunctor(,)_$cfirst_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.857451897 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,)_$csecond_info;
 },
 sat_sdICZ_entry() //  [R1]
         { []
         }
     {offset
       cdJg6: // global
           _sdICZ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJg7; else goto cdJg8;
       cdJg8: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJga; else goto cdJg9;
       cdJga: // global
           HpAlloc = 24;
           goto cdJg7;
       cdJg7: // global
           R1 = _sdICZ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJg9: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdICZ::P64;
           _sdICP::P64 = P64[_sdICZ::P64 + 16];
           _sdICQ::P64 = P64[_sdICZ::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdICQ::P64;
           R2 = Hp - 16;
           R1 = _sdICP::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdICZ_info" {
     sat_sdICZ_info:
         const sat_sdICZ_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,)_$csecond_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJgd: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cdJgh; else goto cdJgg;
       cdJgh: // global
           HpAlloc = 80;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJgg: // global
           I64[Hp - 72] = sat_sdICZ_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 72;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,)_$csecond_info" {
     Data.Bifunctor.$fBifunctor(,)_$csecond_info:
         const Data.Bifunctor.$fBifunctor(,)_$csecond_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.86371161 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_closure" {
     Data.Bifunctor.$fBifunctor(,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,)_$csecond_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.8683618 UTC

[section ""data" . Data.Bifunctor.$dmbimap_closure" {
     Data.Bifunctor.$dmbimap_closure:
         const Data.Bifunctor.$dmbimap_info;
 },
 f1_sdID3_entry() //  [R1]
         { []
         }
     {offset
       cdJgC: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cdJgD; else goto cdJgE;
       cdJgD: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJgE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Data.Bifunctor.first_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . f1_sdID3_info" {
     f1_sdID3_info:
         const f1_sdID3_entry;
         const 2;
         const 18;
 },
 g1_sdID4_entry() //  [R1]
         { []
         }
     {offset
       cdJgJ: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cdJgK; else goto cdJgL;
       cdJgK: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJgL: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Data.Bifunctor.second_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . g1_sdID4_info" {
     g1_sdID4_info:
         const g1_sdID4_entry;
         const 2;
         const 18;
 },
 sat_sdID7_entry() //  [R1, R2]
         { []
         }
     {offset
       cdJgS: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cdJgW; else goto cdJgV;
       cdJgW: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdJgV: // global
           _sdID3::P64 = P64[R1 + 7];
           _sdID4::P64 = P64[R1 + 15];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sdID4::P64;
           P64[Hp] = R2;
           R2 = Hp - 24;
           R1 = _sdID3::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sdID7_info" {
     sat_sdID7_info:
         const sat_sdID7_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 Data.Bifunctor.$dmbimap_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cdJgX: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cdJh1; else goto cdJh0;
       cdJh1: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$dmbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJh0: // global
           I64[Hp - 80] = f1_sdID3_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = g1_sdID4_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = sat_sdID7_info;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 48;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$dmbimap_info" {
     Data.Bifunctor.$dmbimap_info:
         const Data.Bifunctor.$dmbimap_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.877625797 UTC

[section ""cstring" . Data.Bifunctor.$trModule4_bytes" {
     Data.Bifunctor.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.879538682 UTC

[section ""data" . Data.Bifunctor.$trModule3_closure" {
     Data.Bifunctor.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bifunctor.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.88150455 UTC

[section ""cstring" . Data.Bifunctor.$trModule2_bytes" {
     Data.Bifunctor.$trModule2_bytes:
         I8[] [68,97,116,97,46,66,105,102,117,110,99,116,111,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.883367943 UTC

[section ""data" . Data.Bifunctor.$trModule1_closure" {
     Data.Bifunctor.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bifunctor.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.885608016 UTC

[section ""data" . Data.Bifunctor.$trModule_closure" {
     Data.Bifunctor.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Bifunctor.$trModule3_closure+1;
         const Data.Bifunctor.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.887551968 UTC

[section ""data" . $krep_rdIrJ_closure" {
     $krep_rdIrJ_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.889411506 UTC

[section ""data" . Data.Bifunctor.$tcBifunctor1_closure" {
     Data.Bifunctor.$tcBifunctor1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*->*->*_closure;
         const $krep_rdIrJ_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.89201777 UTC

[section ""cstring" . Data.Bifunctor.$tcBifunctor3_bytes" {
     Data.Bifunctor.$tcBifunctor3_bytes:
         I8[] [66,105,102,117,110,99,116,111,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.894098683 UTC

[section ""data" . Data.Bifunctor.$tcBifunctor2_closure" {
     Data.Bifunctor.$tcBifunctor2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bifunctor.$tcBifunctor3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.895934743 UTC

[section ""data" . Data.Bifunctor.$tcBifunctor_closure" {
     Data.Bifunctor.$tcBifunctor_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Bifunctor.$trModule_closure+1;
         const Data.Bifunctor.$tcBifunctor2_closure+1;
         const Data.Bifunctor.$tcBifunctor1_closure+4;
         const 15833243383698227199;
         const 9927729778853233711;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.898834001 UTC

[section ""data" . Data.Bifunctor.C:Bifunctor_closure" {
     Data.Bifunctor.C:Bifunctor_closure:
         const Data.Bifunctor.C:Bifunctor_info;
 },
 Data.Bifunctor.C:Bifunctor_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cdJhB: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cdJhF; else goto cdJhE;
       cdJhF: // global
           HpAlloc = 32;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.C:Bifunctor_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJhE: // global
           I64[Hp - 24] = Data.Bifunctor.C:Bifunctor_con_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.C:Bifunctor_info" {
     Data.Bifunctor.C:Bifunctor_info:
         const Data.Bifunctor.C:Bifunctor_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.903427496 UTC

[section ""cstring" . idIZH_str" {
     idIZH_str:
         I8[] [98,97,115,101,58,68,97,116,97,46,66,105,102,117,110,99,116,111,114,46,67,58,66,105,102,117,110,99,116,111,114]
 },
 Data.Bifunctor.C:Bifunctor_con_entry() //  [R1]
         { []
         }
     {offset
       cdJhL: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.C:Bifunctor_con_info" {
     Data.Bifunctor.C:Bifunctor_con_info:
         const Data.Bifunctor.C:Bifunctor_con_entry;
         const 3;
         const 1;
         const idIZH_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:56.906944371 UTC

[section ""relreadonly" . SdIOp_srt" { SdIOp_srt:
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.758232547 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:08:57.761907767 UTC

[section ""data" . Data.Bifunctor.bimap_closure" {
     Data.Bifunctor.bimap_closure:
         const Data.Bifunctor.bimap_info;
 },
 Data.Bifunctor.bimap_entry() //  [R2]
         { []
         }
     {offset
       cdJtm: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cdJtn; else goto cdJto;
       cdJtn: // global
           R2 = R2;
           R1 = Data.Bifunctor.bimap_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdJto: // global
           I64[Sp - 8] = block_cdJtj_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto udJts; else goto cdJtk;
       udJts: // global
           call _cdJtj(R1) args: 0, res: 0, upd: 0;
       cdJtk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.bimap_info" {
     Data.Bifunctor.bimap_info:
         const Data.Bifunctor.bimap_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cdJtj() //  [R1]
         { []
         }
     {offset
       cdJtj: // global
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cdJtj_info" {
     block_cdJtj_info:
         const _cdJtj;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.768078902 UTC

[section ""data" . Data.Bifunctor.first_closure" {
     Data.Bifunctor.first_closure:
         const Data.Bifunctor.first_info;
 },
 Data.Bifunctor.first_entry() //  [R2]
         { []
         }
     {offset
       cdJtK: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cdJtL; else goto cdJtM;
       cdJtL: // global
           R2 = R2;
           R1 = Data.Bifunctor.first_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdJtM: // global
           I64[Sp - 8] = block_cdJtH_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto udJtQ; else goto cdJtI;
       udJtQ: // global
           call _cdJtH(R1) args: 0, res: 0, upd: 0;
       cdJtI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.first_info" {
     Data.Bifunctor.first_info:
         const Data.Bifunctor.first_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cdJtH() //  [R1]
         { []
         }
     {offset
       cdJtH: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cdJtH_info" {
     block_cdJtH_info:
         const _cdJtH;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.774143577 UTC

[section ""data" . Data.Bifunctor.second_closure" {
     Data.Bifunctor.second_closure:
         const Data.Bifunctor.second_info;
 },
 Data.Bifunctor.second_entry() //  [R2]
         { []
         }
     {offset
       cdJu8: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cdJu9; else goto cdJua;
       cdJu9: // global
           R2 = R2;
           R1 = Data.Bifunctor.second_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdJua: // global
           I64[Sp - 8] = block_cdJu5_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto udJue; else goto cdJu6;
       udJue: // global
           call _cdJu5(R1) args: 0, res: 0, upd: 0;
       cdJu6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.second_info" {
     Data.Bifunctor.second_info:
         const Data.Bifunctor.second_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cdJu5() //  [R1]
         { []
         }
     {offset
       cdJu5: // global
           R1 = P64[R1 + 23];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cdJu5_info" {
     block_cdJu5_info:
         const _cdJu5;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.781020016 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,)_$cbimap_info;
 },
 sat_sdJij_entry() //  [R1]
         { []
         }
     {offset
       cdJuy: // global
           _sdJij::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJuz; else goto cdJuA;
       cdJuA: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJuC; else goto cdJuB;
       cdJuC: // global
           HpAlloc = 24;
           goto cdJuz;
       cdJuz: // global
           R1 = _sdJij::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJuB: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJij::P64;
           _sdJi8::P64 = P64[_sdJij::P64 + 16];
           _sdJi9::P64 = P64[_sdJij::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdJi9::P64;
           R2 = Hp - 16;
           R1 = _sdJi8::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJij_info" {
     sat_sdJij_info:
         const sat_sdJij_entry;
         const 2;
         const 18;
 },
 sat_sdJie_entry() //  [R1]
         { []
         }
     {offset
       cdJuI: // global
           _sdJie::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJuJ; else goto cdJuK;
       cdJuK: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJuM; else goto cdJuL;
       cdJuM: // global
           HpAlloc = 24;
           goto cdJuJ;
       cdJuJ: // global
           R1 = _sdJie::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJuL: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJie::P64;
           _sdJi7::P64 = P64[_sdJie::P64 + 16];
           _sdJi9::P64 = P64[_sdJie::P64 + 24];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _sdJi9::P64;
           R2 = Hp - 16;
           R1 = _sdJi7::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJie_info" {
     sat_sdJie_info:
         const sat_sdJie_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,)_$cbimap_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cdJuO: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cdJuS; else goto cdJuR;
       cdJuS: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJuR: // global
           I64[Hp - 80] = sat_sdJij_info;
           P64[Hp - 64] = R3;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = sat_sdJie_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 80;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,)_$cbimap_info" {
     Data.Bifunctor.$fBifunctor(,)_$cbimap_info:
         const Data.Bifunctor.$fBifunctor(,)_$cbimap_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.791406952 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,)_$cbimap_info;
 },
 sat_sdJiD_entry() //  [R1]
         { []
         }
     {offset
       cdJvo: // global
           _sdJiD::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJvp; else goto cdJvq;
       cdJvq: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJvs; else goto cdJvr;
       cdJvs: // global
           HpAlloc = 24;
           goto cdJvp;
       cdJvp: // global
           R1 = _sdJiD::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJvr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJiD::P64;
           _sdJil::P64 = P64[_sdJiD::P64 + 16];
           _sdJim::P64 = P64[_sdJiD::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdJim::P64;
           R2 = Hp - 16;
           R1 = _sdJil::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJiD_info" {
     sat_sdJiD_info:
         const sat_sdJiD_entry;
         const 2;
         const 18;
 },
 sat_sdJix_entry() //  [R1]
         { []
         }
     {offset
       cdJvy: // global
           _sdJix::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJvz; else goto cdJvA;
       cdJvA: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJvC; else goto cdJvB;
       cdJvC: // global
           HpAlloc = 24;
           goto cdJvz;
       cdJvz: // global
           R1 = _sdJix::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJvB: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJix::P64;
           _sdJik::P64 = P64[_sdJix::P64 + 16];
           _sdJim::P64 = P64[_sdJix::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdJim::P64;
           R2 = Hp - 16;
           R1 = _sdJik::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJix_info" {
     sat_sdJix_info:
         const sat_sdJix_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,)_$cbimap_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cdJvF: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto cdJvJ; else goto cdJvI;
       cdJvJ: // global
           HpAlloc = 120;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJvI: // global
           I64[Hp - 112] = sat_sdJiD_info;
           P64[Hp - 96] = R3;
           P64[Hp - 88] = R4;
           I64[Hp - 80] = sat_sdJix_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = stg_sel_0_upd_info;
           P64[Hp - 32] = R4;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = Hp - 48;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 112;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,)_$cbimap_info" {
     Data.Bifunctor.$fBifunctor(,,)_$cbimap_info:
         const Data.Bifunctor.$fBifunctor(,,)_$cbimap_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.802391617 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,)_$cbimap_info;
 },
 sat_sdJj6_entry() //  [R1]
         { []
         }
     {offset
       cdJwh: // global
           _sdJj6::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJwi; else goto cdJwj;
       cdJwj: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJwl; else goto cdJwk;
       cdJwl: // global
           HpAlloc = 24;
           goto cdJwi;
       cdJwi: // global
           R1 = _sdJj6::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJwk: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJj6::P64;
           _sdJiF::P64 = P64[_sdJj6::P64 + 16];
           _sdJiG::P64 = P64[_sdJj6::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdJiG::P64;
           R2 = Hp - 16;
           R1 = _sdJiF::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJj6_info" {
     sat_sdJj6_info:
         const sat_sdJj6_entry;
         const 2;
         const 18;
 },
 sat_sdJiZ_entry() //  [R1]
         { []
         }
     {offset
       cdJwr: // global
           _sdJiZ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJws; else goto cdJwt;
       cdJwt: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJwv; else goto cdJwu;
       cdJwv: // global
           HpAlloc = 24;
           goto cdJws;
       cdJws: // global
           R1 = _sdJiZ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJwu: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJiZ::P64;
           _sdJiE::P64 = P64[_sdJiZ::P64 + 16];
           _sdJiG::P64 = P64[_sdJiZ::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdJiG::P64;
           R2 = Hp - 16;
           R1 = _sdJiE::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJiZ_info" {
     sat_sdJiZ_info:
         const sat_sdJiZ_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,)_$cbimap_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cdJwz: // global
           Hp = Hp + 152;
           if (Hp > HpLim) (likely: False) goto cdJwD; else goto cdJwC;
       cdJwD: // global
           HpAlloc = 152;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJwC: // global
           I64[Hp - 144] = sat_sdJj6_info;
           P64[Hp - 128] = R3;
           P64[Hp - 120] = R4;
           I64[Hp - 112] = sat_sdJiZ_info;
           P64[Hp - 96] = R2;
           P64[Hp - 88] = R4;
           I64[Hp - 80] = stg_sel_1_upd_info;
           P64[Hp - 64] = R4;
           I64[Hp - 56] = stg_sel_0_upd_info;
           P64[Hp - 40] = R4;
           I64[Hp - 32] = (,,,)_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 80;
           P64[Hp - 8] = Hp - 112;
           P64[Hp] = Hp - 144;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,)_$cbimap_info" {
     Data.Bifunctor.$fBifunctor(,,,)_$cbimap_info:
         const Data.Bifunctor.$fBifunctor(,,,)_$cbimap_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.814261346 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_info;
 },
 sat_sdJjK_entry() //  [R1]
         { []
         }
     {offset
       cdJxd: // global
           _sdJjK::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJxe; else goto cdJxf;
       cdJxf: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJxh; else goto cdJxg;
       cdJxh: // global
           HpAlloc = 24;
           goto cdJxe;
       cdJxe: // global
           R1 = _sdJjK::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJxg: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJjK::P64;
           _sdJj8::P64 = P64[_sdJjK::P64 + 16];
           _sdJj9::P64 = P64[_sdJjK::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdJj9::P64;
           R2 = Hp - 16;
           R1 = _sdJj8::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJjK_info" {
     sat_sdJjK_info:
         const sat_sdJjK_entry;
         const 2;
         const 18;
 },
 sat_sdJjC_entry() //  [R1]
         { []
         }
     {offset
       cdJxn: // global
           _sdJjC::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJxo; else goto cdJxp;
       cdJxp: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJxr; else goto cdJxq;
       cdJxr: // global
           HpAlloc = 24;
           goto cdJxo;
       cdJxo: // global
           R1 = _sdJjC::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJxq: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJjC::P64;
           _sdJj7::P64 = P64[_sdJjC::P64 + 16];
           _sdJj9::P64 = P64[_sdJjC::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdJj9::P64;
           R2 = Hp - 16;
           R1 = _sdJj7::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJjC_info" {
     sat_sdJjC_info:
         const sat_sdJjC_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cdJxw: // global
           Hp = Hp + 184;
           if (Hp > HpLim) (likely: False) goto cdJxA; else goto cdJxz;
       cdJxA: // global
           HpAlloc = 184;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJxz: // global
           I64[Hp - 176] = sat_sdJjK_info;
           P64[Hp - 160] = R3;
           P64[Hp - 152] = R4;
           I64[Hp - 144] = sat_sdJjC_info;
           P64[Hp - 128] = R2;
           P64[Hp - 120] = R4;
           I64[Hp - 112] = stg_sel_2_upd_info;
           P64[Hp - 96] = R4;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = R4;
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = R4;
           I64[Hp - 40] = (,,,,)_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           P64[Hp - 16] = Hp - 112;
           P64[Hp - 8] = Hp - 144;
           P64[Hp] = Hp - 176;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_info" {
     Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_info:
         const Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.825214366 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_info;
 },
 sat_sdJkB_entry() //  [R1]
         { []
         }
     {offset
       cdJyc: // global
           _sdJkB::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJyd; else goto cdJye;
       cdJye: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJyg; else goto cdJyf;
       cdJyg: // global
           HpAlloc = 24;
           goto cdJyd;
       cdJyd: // global
           R1 = _sdJkB::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJyf: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJkB::P64;
           _sdJjM::P64 = P64[_sdJkB::P64 + 16];
           _sdJjN::P64 = P64[_sdJkB::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdJjN::P64;
           R2 = Hp - 16;
           R1 = _sdJjM::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJkB_info" {
     sat_sdJkB_info:
         const sat_sdJkB_entry;
         const 2;
         const 18;
 },
 sat_sdJks_entry() //  [R1]
         { []
         }
     {offset
       cdJym: // global
           _sdJks::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJyn; else goto cdJyo;
       cdJyo: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJyq; else goto cdJyp;
       cdJyq: // global
           HpAlloc = 24;
           goto cdJyn;
       cdJyn: // global
           R1 = _sdJks::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJyp: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJks::P64;
           _sdJjL::P64 = P64[_sdJks::P64 + 16];
           _sdJjN::P64 = P64[_sdJks::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdJjN::P64;
           R2 = Hp - 16;
           R1 = _sdJjL::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJks_info" {
     sat_sdJks_info:
         const sat_sdJks_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cdJyw: // global
           Hp = Hp + 216;
           if (Hp > HpLim) (likely: False) goto cdJyA; else goto cdJyz;
       cdJyA: // global
           HpAlloc = 216;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJyz: // global
           I64[Hp - 208] = sat_sdJkB_info;
           P64[Hp - 192] = R3;
           P64[Hp - 184] = R4;
           I64[Hp - 176] = sat_sdJks_info;
           P64[Hp - 160] = R2;
           P64[Hp - 152] = R4;
           I64[Hp - 144] = stg_sel_3_upd_info;
           P64[Hp - 128] = R4;
           I64[Hp - 120] = stg_sel_2_upd_info;
           P64[Hp - 104] = R4;
           I64[Hp - 96] = stg_sel_1_upd_info;
           P64[Hp - 80] = R4;
           I64[Hp - 72] = stg_sel_0_upd_info;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = (,,,,,)_con_info;
           P64[Hp - 40] = Hp - 72;
           P64[Hp - 32] = Hp - 96;
           P64[Hp - 24] = Hp - 120;
           P64[Hp - 16] = Hp - 144;
           P64[Hp - 8] = Hp - 176;
           P64[Hp] = Hp - 208;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_info" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_info:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.836807543 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_info;
 },
 sat_sdJlH_entry() //  [R1]
         { []
         }
     {offset
       cdJze: // global
           _sdJlH::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJzf; else goto cdJzg;
       cdJzg: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJzi; else goto cdJzh;
       cdJzi: // global
           HpAlloc = 24;
           goto cdJzf;
       cdJzf: // global
           R1 = _sdJlH::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJzh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJlH::P64;
           _sdJkD::P64 = P64[_sdJlH::P64 + 16];
           _sdJkE::P64 = P64[_sdJlH::P64 + 24];
           I64[Hp - 16] = stg_sel_6_upd_info;
           P64[Hp] = _sdJkE::P64;
           R2 = Hp - 16;
           R1 = _sdJkD::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJlH_info" {
     sat_sdJlH_info:
         const sat_sdJlH_entry;
         const 2;
         const 18;
 },
 sat_sdJlx_entry() //  [R1]
         { []
         }
     {offset
       cdJzo: // global
           _sdJlx::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJzp; else goto cdJzq;
       cdJzq: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJzs; else goto cdJzr;
       cdJzs: // global
           HpAlloc = 24;
           goto cdJzp;
       cdJzp: // global
           R1 = _sdJlx::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJzr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJlx::P64;
           _sdJkC::P64 = P64[_sdJlx::P64 + 16];
           _sdJkE::P64 = P64[_sdJlx::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdJkE::P64;
           R2 = Hp - 16;
           R1 = _sdJkC::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJlx_info" {
     sat_sdJlx_info:
         const sat_sdJlx_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cdJzz: // global
           Hp = Hp + 248;
           if (Hp > HpLim) (likely: False) goto cdJzD; else goto cdJzC;
       cdJzD: // global
           HpAlloc = 248;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJzC: // global
           I64[Hp - 240] = sat_sdJlH_info;
           P64[Hp - 224] = R3;
           P64[Hp - 216] = R4;
           I64[Hp - 208] = sat_sdJlx_info;
           P64[Hp - 192] = R2;
           P64[Hp - 184] = R4;
           I64[Hp - 176] = stg_sel_4_upd_info;
           P64[Hp - 160] = R4;
           I64[Hp - 152] = stg_sel_3_upd_info;
           P64[Hp - 136] = R4;
           I64[Hp - 128] = stg_sel_2_upd_info;
           P64[Hp - 112] = R4;
           I64[Hp - 104] = stg_sel_1_upd_info;
           P64[Hp - 88] = R4;
           I64[Hp - 80] = stg_sel_0_upd_info;
           P64[Hp - 64] = R4;
           I64[Hp - 56] = (,,,,,,)_con_info;
           P64[Hp - 48] = Hp - 80;
           P64[Hp - 40] = Hp - 104;
           P64[Hp - 32] = Hp - 128;
           P64[Hp - 24] = Hp - 152;
           P64[Hp - 16] = Hp - 176;
           P64[Hp - 8] = Hp - 208;
           P64[Hp] = Hp - 240;
           R1 = Hp - 55;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_info" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_info:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.847564772 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_$cbimap_closure" {
     Data.Bifunctor.$fBifunctorEither_$cbimap_closure:
         const Data.Bifunctor.$fBifunctorEither_$cbimap_info;
 },
 Data.Bifunctor.$fBifunctorEither_$cbimap_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cdJAl: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cdJAm; else goto cdJAn;
       cdJAm: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctorEither_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJAn: // global
           I64[Sp - 24] = block_cdJAe_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto udJAC; else goto cdJAf;
       udJAC: // global
           call _cdJAe(R1) args: 0, res: 0, upd: 0;
       cdJAf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctorEither_$cbimap_info" {
     Data.Bifunctor.$fBifunctorEither_$cbimap_info:
         const Data.Bifunctor.$fBifunctorEither_$cbimap_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cdJAe() //  [R1]
         { []
         }
     {offset
       cdJAe: // global
           if (R1 & 7 == 1) goto cdJAi; else goto cdJAj;
       cdJAi: // global
           Hp = Hp + 48;
           _sdJlL::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cdJAB; else goto cdJAt;
       cdJAt: // global
           _sdJlM::P64 = P64[_sdJlL::P64 + 7];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sdJlM::P64;
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cdJAj: // global
           Hp = Hp + 48;
           _sdJlL::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cdJAB; else goto cdJAA;
       cdJAB: // global
           HpAlloc = 48;
           R1 = _sdJlL::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cdJAA: // global
           _sdJlO::P64 = P64[_sdJlL::P64 + 6];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 16];
           P64[Hp - 16] = _sdJlO::P64;
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 6;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cdJAe_info" {
     block_cdJAe_info:
         const _cdJAe;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.855472378 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst3_closure" {
     Data.Bifunctor.$fBifunctorConst3_closure:
         const Data.Bifunctor.$fBifunctorConst3_info;
 },
 Data.Bifunctor.$fBifunctorConst3_entry() //  [R2, R4]
         { []
         }
     {offset
       cdJB3: // global
           _sdJlQ::P64 = R2;
           R2 = R4;
           R1 = _sdJlQ::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctorConst3_info" {
     Data.Bifunctor.$fBifunctorConst3_info:
         const Data.Bifunctor.$fBifunctorConst3_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.860306548 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK4_closure" {
     Data.Bifunctor.$fBifunctorK4_closure:
         const Data.Bifunctor.$fBifunctorK4_info;
 },
 Data.Bifunctor.$fBifunctorK4_entry() //  [R2, R4]
         { []
         }
     {offset
       cdJBe: // global
           _sdJlT::P64 = R2;
           R2 = R4;
           R1 = _sdJlT::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctorK4_info" {
     Data.Bifunctor.$fBifunctorK4_info:
         const Data.Bifunctor.$fBifunctorK4_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.864320881 UTC

[section ""data" . Data.Bifunctor.$dmsecond_closure" {
     Data.Bifunctor.$dmsecond_closure:
         const Data.Bifunctor.$dmsecond_info;
 },
 Data.Bifunctor.$dmsecond_entry() //  [R2]
         { []
         }
     {offset
       cdJBp: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cdJBq; else goto cdJBr;
       cdJBq: // global
           R2 = R2;
           R1 = Data.Bifunctor.$dmsecond_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdJBr: // global
           R2 = R2;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = GHC.Base.id_closure+1;
           Sp = Sp - 16;
           call Data.Bifunctor.bimap_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$dmsecond_info" {
     Data.Bifunctor.$dmsecond_info:
         const Data.Bifunctor.$dmsecond_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.868713354 UTC

[section ""data" . Data.Bifunctor.$dmfirst_closure" {
     Data.Bifunctor.$dmfirst_closure:
         const Data.Bifunctor.$dmfirst_info;
 },
 Data.Bifunctor.$dmfirst_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJBE: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cdJBF; else goto cdJBG;
       cdJBF: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$dmfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJBG: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = GHC.Base.id_closure+1;
           Sp = Sp - 24;
           call Data.Bifunctor.bimap_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$dmfirst_info" {
     Data.Bifunctor.$dmfirst_info:
         const Data.Bifunctor.$dmfirst_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.873135306 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK3_closure" {
     Data.Bifunctor.$fBifunctorK3_closure:
         const Data.Bifunctor.$fBifunctorK3_info;
 },
 Data.Bifunctor.$fBifunctorK3_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJBT: // global
           _sdJlZ::P64 = R2;
           R2 = R3;
           R1 = _sdJlZ::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctorK3_info" {
     Data.Bifunctor.$fBifunctorK3_info:
         const Data.Bifunctor.$fBifunctorK3_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.877010568 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK2_closure" {
     Data.Bifunctor.$fBifunctorK2_closure:
         const Data.Bifunctor.$fBifunctorK2_info;
 },
 Data.Bifunctor.$fBifunctorK2_entry() //  [R3]
         { []
         }
     {offset
       cdJC4: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctorK2_info" {
     Data.Bifunctor.$fBifunctorK2_info:
         const Data.Bifunctor.$fBifunctorK2_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.880626134 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK1_closure" {
     Data.Bifunctor.$fBifunctorK1_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctorK4_closure+3;
         const Data.Bifunctor.$fBifunctorK3_closure+2;
         const Data.Bifunctor.$fBifunctorK2_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.88313436 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst2_closure" {
     Data.Bifunctor.$fBifunctorConst2_closure:
         const Data.Bifunctor.$fBifunctorConst2_info;
 },
 Data.Bifunctor.$fBifunctorConst2_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJCg: // global
           _sdJm3::P64 = R2;
           R2 = R3;
           R1 = _sdJm3::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctorConst2_info" {
     Data.Bifunctor.$fBifunctorConst2_info:
         const Data.Bifunctor.$fBifunctorConst2_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.887573508 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst1_closure" {
     Data.Bifunctor.$fBifunctorConst1_closure:
         const Data.Bifunctor.$fBifunctorConst1_info;
 },
 Data.Bifunctor.$fBifunctorConst1_entry() //  [R3]
         { []
         }
     {offset
       cdJCr: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctorConst1_info" {
     Data.Bifunctor.$fBifunctorConst1_info:
         const Data.Bifunctor.$fBifunctorConst1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.891851803 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst_closure" {
     Data.Bifunctor.$fBifunctorConst_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctorConst3_closure+3;
         const Data.Bifunctor.$fBifunctorConst2_closure+2;
         const Data.Bifunctor.$fBifunctorConst1_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.895225546 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_$cfirst_closure" {
     Data.Bifunctor.$fBifunctorEither_$cfirst_closure:
         const Data.Bifunctor.$fBifunctorEither_$cfirst_info;
 },
 Data.Bifunctor.$fBifunctorEither_$cfirst_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJCK: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cdJCL; else goto cdJCM;
       cdJCL: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctorEither_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJCM: // global
           I64[Sp - 16] = block_cdJCD_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto udJCX; else goto cdJCE;
       udJCX: // global
           call _cdJCD(R1) args: 0, res: 0, upd: 0;
       cdJCE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctorEither_$cfirst_info" {
     Data.Bifunctor.$fBifunctorEither_$cfirst_info:
         const Data.Bifunctor.$fBifunctorEither_$cfirst_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _cdJCD() //  [R1]
         { []
         }
     {offset
       cdJCD: // global
           if (R1 & 7 == 1) goto cdJCH; else goto cdJCI;
       cdJCH: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cdJCT; else goto cdJCS;
       cdJCT: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cdJCS: // global
           _sdJma::P64 = P64[R1 + 7];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sdJma::P64;
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cdJCI: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cdJCD_info" {
     block_cdJCD_info:
         const _cdJCD;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.902986414 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_$csecond_closure" {
     Data.Bifunctor.$fBifunctorEither_$csecond_closure:
         const Data.Bifunctor.$fBifunctorEither_$csecond_info;
 },
 Data.Bifunctor.$fBifunctorEither_$csecond_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJDs: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cdJDt; else goto cdJDu;
       cdJDt: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctorEither_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJDu: // global
           I64[Sp - 16] = block_cdJDl_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto udJDF; else goto cdJDm;
       udJDF: // global
           call _cdJDl(R1) args: 0, res: 0, upd: 0;
       cdJDm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctorEither_$csecond_info" {
     Data.Bifunctor.$fBifunctorEither_$csecond_info:
         const Data.Bifunctor.$fBifunctorEither_$csecond_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _cdJDl() //  [R1]
         { []
         }
     {offset
       cdJDl: // global
           if (R1 & 7 == 1) goto cdJDp; else goto cdJDq;
       cdJDp: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       cdJDq: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cdJDE; else goto cdJDD;
       cdJDE: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cdJDD: // global
           _sdJmh::P64 = P64[R1 + 6];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sdJmh::P64;
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cdJDl_info" {
     block_cdJDl_info:
         const _cdJDl;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.909152935 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_closure" {
     Data.Bifunctor.$fBifunctorEither_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctorEither_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctorEither_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctorEither_$csecond_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.913106557 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_info;
 },
 sat_sdJnd_entry() //  [R1]
         { []
         }
     {offset
       cdJEa: // global
           _sdJnd::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJEb; else goto cdJEc;
       cdJEc: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJEe; else goto cdJEd;
       cdJEe: // global
           HpAlloc = 24;
           goto cdJEb;
       cdJEb: // global
           R1 = _sdJnd::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJEd: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJnd::P64;
           _sdJmj::P64 = P64[_sdJnd::P64 + 16];
           _sdJmk::P64 = P64[_sdJnd::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdJmk::P64;
           R2 = Hp - 16;
           R1 = _sdJmj::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJnd_info" {
     sat_sdJnd_info:
         const sat_sdJnd_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJEl: // global
           Hp = Hp + 240;
           if (Hp > HpLim) (likely: False) goto cdJEp; else goto cdJEo;
       cdJEp: // global
           HpAlloc = 240;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJEo: // global
           I64[Hp - 232] = stg_sel_6_upd_info;
           P64[Hp - 216] = R3;
           I64[Hp - 208] = sat_sdJnd_info;
           P64[Hp - 192] = R2;
           P64[Hp - 184] = R3;
           I64[Hp - 176] = stg_sel_4_upd_info;
           P64[Hp - 160] = R3;
           I64[Hp - 152] = stg_sel_3_upd_info;
           P64[Hp - 136] = R3;
           I64[Hp - 128] = stg_sel_2_upd_info;
           P64[Hp - 112] = R3;
           I64[Hp - 104] = stg_sel_1_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_0_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = (,,,,,,)_con_info;
           P64[Hp - 48] = Hp - 80;
           P64[Hp - 40] = Hp - 104;
           P64[Hp - 32] = Hp - 128;
           P64[Hp - 24] = Hp - 152;
           P64[Hp - 16] = Hp - 176;
           P64[Hp - 8] = Hp - 208;
           P64[Hp] = Hp - 232;
           R1 = Hp - 55;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_info" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_info:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.921018803 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_info;
 },
 sat_sdJoq_entry() //  [R1]
         { []
         }
     {offset
       cdJEZ: // global
           _sdJoq::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJF0; else goto cdJF1;
       cdJF1: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJF3; else goto cdJF2;
       cdJF3: // global
           HpAlloc = 24;
           goto cdJF0;
       cdJF0: // global
           R1 = _sdJoq::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJF2: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJoq::P64;
           _sdJnn::P64 = P64[_sdJoq::P64 + 16];
           _sdJno::P64 = P64[_sdJoq::P64 + 24];
           I64[Hp - 16] = stg_sel_6_upd_info;
           P64[Hp] = _sdJno::P64;
           R2 = Hp - 16;
           R1 = _sdJnn::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJoq_info" {
     sat_sdJoq_info:
         const sat_sdJoq_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJFb: // global
           Hp = Hp + 240;
           if (Hp > HpLim) (likely: False) goto cdJFf; else goto cdJFe;
       cdJFf: // global
           HpAlloc = 240;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJFe: // global
           I64[Hp - 232] = sat_sdJoq_info;
           P64[Hp - 216] = R2;
           P64[Hp - 208] = R3;
           I64[Hp - 200] = stg_sel_5_upd_info;
           P64[Hp - 184] = R3;
           I64[Hp - 176] = stg_sel_4_upd_info;
           P64[Hp - 160] = R3;
           I64[Hp - 152] = stg_sel_3_upd_info;
           P64[Hp - 136] = R3;
           I64[Hp - 128] = stg_sel_2_upd_info;
           P64[Hp - 112] = R3;
           I64[Hp - 104] = stg_sel_1_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_0_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = (,,,,,,)_con_info;
           P64[Hp - 48] = Hp - 80;
           P64[Hp - 40] = Hp - 104;
           P64[Hp - 32] = Hp - 128;
           P64[Hp - 24] = Hp - 152;
           P64[Hp - 16] = Hp - 176;
           P64[Hp - 8] = Hp - 200;
           P64[Hp] = Hp - 232;
           R1 = Hp - 55;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_info" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_info:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.927379892 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.930895704 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_info;
 },
 sat_sdJp7_entry() //  [R1]
         { []
         }
     {offset
       cdJFR: // global
           _sdJp7::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJFS; else goto cdJFT;
       cdJFT: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJFV; else goto cdJFU;
       cdJFV: // global
           HpAlloc = 24;
           goto cdJFS;
       cdJFS: // global
           R1 = _sdJp7::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJFU: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJp7::P64;
           _sdJor::P64 = P64[_sdJp7::P64 + 16];
           _sdJos::P64 = P64[_sdJp7::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdJos::P64;
           R2 = Hp - 16;
           R1 = _sdJor::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJp7_info" {
     sat_sdJp7_info:
         const sat_sdJp7_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJG1: // global
           Hp = Hp + 208;
           if (Hp > HpLim) (likely: False) goto cdJG5; else goto cdJG4;
       cdJG5: // global
           HpAlloc = 208;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJG4: // global
           I64[Hp - 200] = stg_sel_5_upd_info;
           P64[Hp - 184] = R3;
           I64[Hp - 176] = sat_sdJp7_info;
           P64[Hp - 160] = R2;
           P64[Hp - 152] = R3;
           I64[Hp - 144] = stg_sel_3_upd_info;
           P64[Hp - 128] = R3;
           I64[Hp - 120] = stg_sel_2_upd_info;
           P64[Hp - 104] = R3;
           I64[Hp - 96] = stg_sel_1_upd_info;
           P64[Hp - 80] = R3;
           I64[Hp - 72] = stg_sel_0_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = (,,,,,)_con_info;
           P64[Hp - 40] = Hp - 72;
           P64[Hp - 32] = Hp - 96;
           P64[Hp - 24] = Hp - 120;
           P64[Hp - 16] = Hp - 144;
           P64[Hp - 8] = Hp - 176;
           P64[Hp] = Hp - 200;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_info" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_info:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.93953543 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_info;
 },
 sat_sdJq4_entry() //  [R1]
         { []
         }
     {offset
       cdJGD: // global
           _sdJq4::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJGE; else goto cdJGF;
       cdJGF: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJGH; else goto cdJGG;
       cdJGH: // global
           HpAlloc = 24;
           goto cdJGE;
       cdJGE: // global
           R1 = _sdJq4::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJGG: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJq4::P64;
           _sdJpg::P64 = P64[_sdJq4::P64 + 16];
           _sdJph::P64 = P64[_sdJq4::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdJph::P64;
           R2 = Hp - 16;
           R1 = _sdJpg::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJq4_info" {
     sat_sdJq4_info:
         const sat_sdJq4_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJGO: // global
           Hp = Hp + 208;
           if (Hp > HpLim) (likely: False) goto cdJGS; else goto cdJGR;
       cdJGS: // global
           HpAlloc = 208;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJGR: // global
           I64[Hp - 200] = sat_sdJq4_info;
           P64[Hp - 184] = R2;
           P64[Hp - 176] = R3;
           I64[Hp - 168] = stg_sel_4_upd_info;
           P64[Hp - 152] = R3;
           I64[Hp - 144] = stg_sel_3_upd_info;
           P64[Hp - 128] = R3;
           I64[Hp - 120] = stg_sel_2_upd_info;
           P64[Hp - 104] = R3;
           I64[Hp - 96] = stg_sel_1_upd_info;
           P64[Hp - 80] = R3;
           I64[Hp - 72] = stg_sel_0_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = (,,,,,)_con_info;
           P64[Hp - 40] = Hp - 72;
           P64[Hp - 32] = Hp - 96;
           P64[Hp - 24] = Hp - 120;
           P64[Hp - 16] = Hp - 144;
           P64[Hp - 8] = Hp - 168;
           P64[Hp] = Hp - 200;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_info" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_info:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.945881833 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.949389643 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_info;
 },
 sat_sdJqz_entry() //  [R1]
         { []
         }
     {offset
       cdJHs: // global
           _sdJqz::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJHt; else goto cdJHu;
       cdJHu: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJHw; else goto cdJHv;
       cdJHw: // global
           HpAlloc = 24;
           goto cdJHt;
       cdJHt: // global
           R1 = _sdJqz::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJHv: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJqz::P64;
           _sdJq5::P64 = P64[_sdJqz::P64 + 16];
           _sdJq6::P64 = P64[_sdJqz::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdJq6::P64;
           R2 = Hp - 16;
           R1 = _sdJq5::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJqz_info" {
     sat_sdJqz_info:
         const sat_sdJqz_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJHB: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto cdJHF; else goto cdJHE;
       cdJHF: // global
           HpAlloc = 176;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJHE: // global
           I64[Hp - 168] = stg_sel_4_upd_info;
           P64[Hp - 152] = R3;
           I64[Hp - 144] = sat_sdJqz_info;
           P64[Hp - 128] = R2;
           P64[Hp - 120] = R3;
           I64[Hp - 112] = stg_sel_2_upd_info;
           P64[Hp - 96] = R3;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = R3;
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = (,,,,)_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           P64[Hp - 16] = Hp - 112;
           P64[Hp - 8] = Hp - 144;
           P64[Hp] = Hp - 168;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_info" {
     Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_info:
         const Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.956660135 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,,)_$csecond_info;
 },
 sat_sdJri_entry() //  [R1]
         { []
         }
     {offset
       cdJIb: // global
           _sdJri::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJIc; else goto cdJId;
       cdJId: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJIf; else goto cdJIe;
       cdJIf: // global
           HpAlloc = 24;
           goto cdJIc;
       cdJIc: // global
           R1 = _sdJri::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJIe: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJri::P64;
           _sdJqH::P64 = P64[_sdJri::P64 + 16];
           _sdJqI::P64 = P64[_sdJri::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdJqI::P64;
           R2 = Hp - 16;
           R1 = _sdJqH::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJri_info" {
     sat_sdJri_info:
         const sat_sdJri_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,,)_$csecond_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJIl: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto cdJIp; else goto cdJIo;
       cdJIp: // global
           HpAlloc = 176;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJIo: // global
           I64[Hp - 168] = sat_sdJri_info;
           P64[Hp - 152] = R2;
           P64[Hp - 144] = R3;
           I64[Hp - 136] = stg_sel_3_upd_info;
           P64[Hp - 120] = R3;
           I64[Hp - 112] = stg_sel_2_upd_info;
           P64[Hp - 96] = R3;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = R3;
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = (,,,,)_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           P64[Hp - 16] = Hp - 112;
           P64[Hp - 8] = Hp - 136;
           P64[Hp] = Hp - 168;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,,)_$csecond_info" {
     Data.Bifunctor.$fBifunctor(,,,,)_$csecond_info:
         const Data.Bifunctor.$fBifunctor(,,,,)_$csecond_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.962733251 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.966372054 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,)_$cfirst_info;
 },
 sat_sdJrD_entry() //  [R1]
         { []
         }
     {offset
       cdJIX: // global
           _sdJrD::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJIY; else goto cdJIZ;
       cdJIZ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJJ1; else goto cdJJ0;
       cdJJ1: // global
           HpAlloc = 24;
           goto cdJIY;
       cdJIY: // global
           R1 = _sdJrD::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJJ0: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJrD::P64;
           _sdJrj::P64 = P64[_sdJrD::P64 + 16];
           _sdJrk::P64 = P64[_sdJrD::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdJrk::P64;
           R2 = Hp - 16;
           R1 = _sdJrj::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJrD_info" {
     sat_sdJrD_info:
         const sat_sdJrD_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,)_$cfirst_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJJ5: // global
           Hp = Hp + 144;
           if (Hp > HpLim) (likely: False) goto cdJJ9; else goto cdJJ8;
       cdJJ9: // global
           HpAlloc = 144;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJJ8: // global
           I64[Hp - 136] = stg_sel_3_upd_info;
           P64[Hp - 120] = R3;
           I64[Hp - 112] = sat_sdJrD_info;
           P64[Hp - 96] = R2;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_1_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = stg_sel_0_upd_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = (,,,)_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 80;
           P64[Hp - 8] = Hp - 112;
           P64[Hp] = Hp - 136;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,)_$cfirst_info" {
     Data.Bifunctor.$fBifunctor(,,,)_$cfirst_info:
         const Data.Bifunctor.$fBifunctor(,,,)_$cfirst_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.973742066 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,)_$csecond_info;
 },
 sat_sdJsa_entry() //  [R1]
         { []
         }
     {offset
       cdJJD: // global
           _sdJsa::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJJE; else goto cdJJF;
       cdJJF: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJJH; else goto cdJJG;
       cdJJH: // global
           HpAlloc = 24;
           goto cdJJE;
       cdJJE: // global
           R1 = _sdJsa::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJJG: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJsa::P64;
           _sdJrK::P64 = P64[_sdJsa::P64 + 16];
           _sdJrL::P64 = P64[_sdJsa::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdJrL::P64;
           R2 = Hp - 16;
           R1 = _sdJrK::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJsa_info" {
     sat_sdJsa_info:
         const sat_sdJsa_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,,)_$csecond_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJJM: // global
           Hp = Hp + 144;
           if (Hp > HpLim) (likely: False) goto cdJJQ; else goto cdJJP;
       cdJJQ: // global
           HpAlloc = 144;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJJP: // global
           I64[Hp - 136] = sat_sdJsa_info;
           P64[Hp - 120] = R2;
           P64[Hp - 112] = R3;
           I64[Hp - 104] = stg_sel_2_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_1_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = stg_sel_0_upd_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = (,,,)_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 80;
           P64[Hp - 8] = Hp - 104;
           P64[Hp] = Hp - 136;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,,)_$csecond_info" {
     Data.Bifunctor.$fBifunctor(,,,)_$csecond_info:
         const Data.Bifunctor.$fBifunctor(,,,)_$csecond_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.979961262 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.984250285 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,)_$cfirst_info;
 },
 sat_sdJsn_entry() //  [R1]
         { []
         }
     {offset
       cdJKm: // global
           _sdJsn::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJKn; else goto cdJKo;
       cdJKo: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJKq; else goto cdJKp;
       cdJKq: // global
           HpAlloc = 24;
           goto cdJKn;
       cdJKn: // global
           R1 = _sdJsn::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJKp: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJsn::P64;
           _sdJsb::P64 = P64[_sdJsn::P64 + 16];
           _sdJsc::P64 = P64[_sdJsn::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdJsc::P64;
           R2 = Hp - 16;
           R1 = _sdJsb::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJsn_info" {
     sat_sdJsn_info:
         const sat_sdJsn_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,)_$cfirst_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJKt: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto cdJKx; else goto cdJKw;
       cdJKx: // global
           HpAlloc = 112;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJKw: // global
           I64[Hp - 104] = stg_sel_2_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = sat_sdJsn_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = stg_sel_0_upd_info;
           P64[Hp - 32] = R3;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = Hp - 48;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 104;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,)_$cfirst_info" {
     Data.Bifunctor.$fBifunctor(,,)_$cfirst_info:
         const Data.Bifunctor.$fBifunctor(,,)_$cfirst_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.991563254 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,)_$csecond_info;
 },
 sat_sdJsK_entry() //  [R1]
         { []
         }
     {offset
       cdJKZ: // global
           _sdJsK::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJL0; else goto cdJL1;
       cdJL1: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJL3; else goto cdJL2;
       cdJL3: // global
           HpAlloc = 24;
           goto cdJL0;
       cdJL0: // global
           R1 = _sdJsK::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJL2: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJsK::P64;
           _sdJst::P64 = P64[_sdJsK::P64 + 16];
           _sdJsu::P64 = P64[_sdJsK::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdJsu::P64;
           R2 = Hp - 16;
           R1 = _sdJst::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJsK_info" {
     sat_sdJsK_info:
         const sat_sdJsK_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,,)_$csecond_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJL7: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto cdJLb; else goto cdJLa;
       cdJLb: // global
           HpAlloc = 112;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJLa: // global
           I64[Hp - 104] = sat_sdJsK_info;
           P64[Hp - 88] = R2;
           P64[Hp - 80] = R3;
           I64[Hp - 72] = stg_sel_1_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = stg_sel_0_upd_info;
           P64[Hp - 32] = R3;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = Hp - 48;
           P64[Hp - 8] = Hp - 72;
           P64[Hp] = Hp - 104;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,,)_$csecond_info" {
     Data.Bifunctor.$fBifunctor(,,)_$csecond_info:
         const Data.Bifunctor.$fBifunctor(,,)_$csecond_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:57.997084312 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,)_$csecond_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:58.000387246 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,)_$cfirst_info;
 },
 sat_sdJsR_entry() //  [R1]
         { []
         }
     {offset
       cdJLF: // global
           _sdJsR::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJLG; else goto cdJLH;
       cdJLH: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJLJ; else goto cdJLI;
       cdJLJ: // global
           HpAlloc = 24;
           goto cdJLG;
       cdJLG: // global
           R1 = _sdJsR::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJLI: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJsR::P64;
           _sdJsL::P64 = P64[_sdJsR::P64 + 16];
           _sdJsM::P64 = P64[_sdJsR::P64 + 24];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _sdJsM::P64;
           R2 = Hp - 16;
           R1 = _sdJsL::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJsR_info" {
     sat_sdJsR_info:
         const sat_sdJsR_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,)_$cfirst_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJLL: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cdJLP; else goto cdJLO;
       cdJLP: // global
           HpAlloc = 80;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJLO: // global
           I64[Hp - 72] = stg_sel_1_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = sat_sdJsR_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 72;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,)_$cfirst_info" {
     Data.Bifunctor.$fBifunctor(,)_$cfirst_info:
         const Data.Bifunctor.$fBifunctor(,)_$cfirst_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:58.006944113 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,)_$csecond_info;
 },
 sat_sdJt6_entry() //  [R1]
         { []
         }
     {offset
       cdJMf: // global
           _sdJt6::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJMg; else goto cdJMh;
       cdJMh: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJMj; else goto cdJMi;
       cdJMj: // global
           HpAlloc = 24;
           goto cdJMg;
       cdJMg: // global
           R1 = _sdJt6::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJMi: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJt6::P64;
           _sdJsW::P64 = P64[_sdJt6::P64 + 16];
           _sdJsX::P64 = P64[_sdJt6::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdJsX::P64;
           R2 = Hp - 16;
           R1 = _sdJsW::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sdJt6_info" {
     sat_sdJt6_info:
         const sat_sdJt6_entry;
         const 2;
         const 18;
 },
 Data.Bifunctor.$fBifunctor(,)_$csecond_entry() //  [R2, R3]
         { []
         }
     {offset
       cdJMm: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cdJMq; else goto cdJMp;
       cdJMq: // global
           HpAlloc = 80;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJMp: // global
           I64[Hp - 72] = sat_sdJt6_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 72;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$fBifunctor(,)_$csecond_info" {
     Data.Bifunctor.$fBifunctor(,)_$csecond_info:
         const Data.Bifunctor.$fBifunctor(,)_$csecond_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:58.014116549 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_closure" {
     Data.Bifunctor.$fBifunctor(,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,)_$csecond_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:58.017948171 UTC

[section ""data" . Data.Bifunctor.$dmbimap_closure" {
     Data.Bifunctor.$dmbimap_closure:
         const Data.Bifunctor.$dmbimap_info;
 },
 f1_sdJta_entry() //  [R1]
         { []
         }
     {offset
       cdJMQ: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cdJMR; else goto cdJMS;
       cdJMR: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJMS: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Data.Bifunctor.first_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . f1_sdJta_info" {
     f1_sdJta_info:
         const f1_sdJta_entry;
         const 2;
         const 18;
 },
 g1_sdJtb_entry() //  [R1]
         { []
         }
     {offset
       cdJMX: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cdJMY; else goto cdJMZ;
       cdJMY: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJMZ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Data.Bifunctor.second_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . g1_sdJtb_info" {
     g1_sdJtb_info:
         const g1_sdJtb_entry;
         const 2;
         const 18;
 },
 sat_sdJte_entry() //  [R1, R2]
         { []
         }
     {offset
       cdJN6: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cdJNa; else goto cdJN9;
       cdJNa: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdJN9: // global
           _sdJta::P64 = P64[R1 + 7];
           _sdJtb::P64 = P64[R1 + 15];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sdJtb::P64;
           P64[Hp] = R2;
           R2 = Hp - 24;
           R1 = _sdJta::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sdJte_info" {
     sat_sdJte_info:
         const sat_sdJte_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 Data.Bifunctor.$dmbimap_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cdJNb: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cdJNf; else goto cdJNe;
       cdJNf: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$dmbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJNe: // global
           I64[Hp - 80] = f1_sdJta_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = g1_sdJtb_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = sat_sdJte_info;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 48;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.$dmbimap_info" {
     Data.Bifunctor.$dmbimap_info:
         const Data.Bifunctor.$dmbimap_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:58.02726056 UTC

[section ""cstring" . Data.Bifunctor.$trModule4_bytes" {
     Data.Bifunctor.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:58.029116906 UTC

[section ""data" . Data.Bifunctor.$trModule3_closure" {
     Data.Bifunctor.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bifunctor.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:58.030779489 UTC

[section ""cstring" . Data.Bifunctor.$trModule2_bytes" {
     Data.Bifunctor.$trModule2_bytes:
         I8[] [68,97,116,97,46,66,105,102,117,110,99,116,111,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:58.032374234 UTC

[section ""data" . Data.Bifunctor.$trModule1_closure" {
     Data.Bifunctor.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bifunctor.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:58.034097545 UTC

[section ""data" . Data.Bifunctor.$trModule_closure" {
     Data.Bifunctor.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Bifunctor.$trModule3_closure+1;
         const Data.Bifunctor.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:58.036007005 UTC

[section ""data" . $krep_rdIrJ_closure" {
     $krep_rdIrJ_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:58.038127685 UTC

[section ""data" . Data.Bifunctor.$tcBifunctor1_closure" {
     Data.Bifunctor.$tcBifunctor1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*->*->*_closure;
         const $krep_rdIrJ_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:58.039804255 UTC

[section ""cstring" . Data.Bifunctor.$tcBifunctor3_bytes" {
     Data.Bifunctor.$tcBifunctor3_bytes:
         I8[] [66,105,102,117,110,99,116,111,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:58.041530495 UTC

[section ""data" . Data.Bifunctor.$tcBifunctor2_closure" {
     Data.Bifunctor.$tcBifunctor2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bifunctor.$tcBifunctor3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:58.043284517 UTC

[section ""data" . Data.Bifunctor.$tcBifunctor_closure" {
     Data.Bifunctor.$tcBifunctor_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Bifunctor.$trModule_closure+1;
         const Data.Bifunctor.$tcBifunctor2_closure+1;
         const Data.Bifunctor.$tcBifunctor1_closure+4;
         const 15833243383698227199;
         const 9927729778853233711;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:58.04585416 UTC

[section ""data" . Data.Bifunctor.C:Bifunctor_closure" {
     Data.Bifunctor.C:Bifunctor_closure:
         const Data.Bifunctor.C:Bifunctor_info;
 },
 Data.Bifunctor.C:Bifunctor_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cdJNX: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cdJO1; else goto cdJO0;
       cdJO1: // global
           HpAlloc = 32;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.C:Bifunctor_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJO0: // global
           I64[Hp - 24] = Data.Bifunctor.C:Bifunctor_con_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.C:Bifunctor_info" {
     Data.Bifunctor.C:Bifunctor_info:
         const Data.Bifunctor.C:Bifunctor_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:58.04973153 UTC

[section ""cstring" . idJO9_str" {
     idJO9_str:
         I8[] [98,97,115,101,58,68,97,116,97,46,66,105,102,117,110,99,116,111,114,46,67,58,66,105,102,117,110,99,116,111,114]
 },
 Data.Bifunctor.C:Bifunctor_con_entry() //  [R1]
         { []
         }
     {offset
       cdJO8: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Bifunctor.C:Bifunctor_con_info" {
     Data.Bifunctor.C:Bifunctor_con_info:
         const Data.Bifunctor.C:Bifunctor_con_entry;
         const 3;
         const 1;
         const idJO9_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:08:58.054379066 UTC

[section ""relreadonly" . SdJOf_srt" { SdJOf_srt:
 }]

