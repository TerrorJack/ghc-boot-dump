
==================== Tidy Core ====================
2018-03-16 15:56:19.300641862 UTC

Result size of Tidy Core
  = {terms: 52, types: 123, coercions: 0, joins: 0/0}

-- RHS size: {terms: 6, types: 13, coercions: 0, joins: 0/0}
<$>
  :: forall (f :: * -> *) a b. Functor f => (a -> b) -> f a -> f b
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(1*U,A)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ (f_a1xzX :: * -> *))
                 (@ a_a1xzY)
                 (@ b_a1xzZ)
                 ($dFunctor_a1xA1 [Occ=Once] :: Functor f_a1xzX) ->
                 fmap @ f_a1xzX $dFunctor_a1xA1 @ a_a1xzY @ b_a1xzZ}]
<$>
  = \ (@ (f_a1xzX :: * -> *))
      (@ a_a1xzY)
      (@ b_a1xzZ)
      ($dFunctor_a1xA1 :: Functor f_a1xzX) ->
      fmap @ f_a1xzX $dFunctor_a1xA1 @ a_a1xzY @ b_a1xzZ

-- RHS size: {terms: 10, types: 17, coercions: 0, joins: 0/0}
<&>
  :: forall (f :: * -> *) a b. Functor f => f a -> (a -> b) -> f b
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ (f_a1xA9 :: * -> *))
                 (@ a_a1xAa)
                 (@ b_a1xAb)
                 ($dFunctor_a1xAd [Occ=Once] :: Functor f_a1xA9)
                 (as_a1xxI [Occ=Once] :: f_a1xA9 a_a1xAa)
                 (f1_a1xxJ [Occ=Once] :: a_a1xAa -> b_a1xAb) ->
                 fmap
                   @ f_a1xA9 $dFunctor_a1xAd @ a_a1xAa @ b_a1xAb f1_a1xxJ as_a1xxI}]
<&>
  = \ (@ (f_a1xA9 :: * -> *))
      (@ a_a1xAa)
      (@ b_a1xAb)
      ($dFunctor_a1xAd :: Functor f_a1xA9)
      (as_a1xxI :: f_a1xA9 a_a1xAa)
      (f1_a1xxJ :: a_a1xAa -> b_a1xAb) ->
      fmap
        @ f_a1xA9 $dFunctor_a1xAd @ a_a1xAa @ b_a1xAb f1_a1xxJ as_a1xxI

-- RHS size: {terms: 10, types: 16, coercions: 0, joins: 0/0}
$> :: forall (f :: * -> *) a b. Functor f => f a -> b -> f b
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(LC(C(S))),1*U(A,1*C1(C1(U)))><L,U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ (f_a1xzG :: * -> *))
                 (@ a_a1xzH)
                 (@ b_a1xzI)
                 ($dFunctor_a1xzK [Occ=Once] :: Functor f_a1xzG)
                 (eta_B2 [Occ=Once] :: f_a1xzG a_a1xzH)
                 (eta1_B1 [Occ=Once] :: b_a1xzI) ->
                 <$ @ f_a1xzG $dFunctor_a1xzK @ b_a1xzI @ a_a1xzH eta1_B1 eta_B2}]
$>
  = \ (@ (f_a1xzG :: * -> *))
      (@ a_a1xzH)
      (@ b_a1xzI)
      ($dFunctor_a1xzK :: Functor f_a1xzG)
      (eta_B2 :: f_a1xzG a_a1xzH)
      (eta1_B1 :: b_a1xzI) ->
      <$ @ f_a1xzG $dFunctor_a1xzK @ b_a1xzI @ a_a1xzH eta1_B1 eta_B2

-- RHS size: {terms: 8, types: 13, coercions: 0, joins: 0/0}
void :: forall (f :: * -> *) a. Functor f => f a -> f ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LC(C(S))),1*U(A,1*C1(C1(U)))><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ (f_a1xzv :: * -> *))
                 (@ a_a1xzw)
                 ($dFunctor_a1xzy [Occ=Once] :: Functor f_a1xzv)
                 (x_a1xxK [Occ=Once] :: f_a1xzv a_a1xzw) ->
                 <$ @ f_a1xzv $dFunctor_a1xzy @ () @ a_a1xzw GHC.Tuple.() x_a1xxK}]
void
  = \ (@ (f_a1xzv :: * -> *))
      (@ a_a1xzw)
      ($dFunctor_a1xzy :: Functor f_a1xzv)
      (x_a1xxK :: f_a1xzv a_a1xzw) ->
      <$ @ f_a1xzv $dFunctor_a1xzy @ () @ a_a1xzw GHC.Tuple.() x_a1xxK

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Data.Functor.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Data.Functor.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Functor.$trModule3 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Data.Functor.$trModule3 = GHC.Types.TrNameS Data.Functor.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Data.Functor.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
Data.Functor.$trModule2 = "Data.Functor"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Functor.$trModule1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Data.Functor.$trModule1 = GHC.Types.TrNameS Data.Functor.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Data.Functor.$trModule :: GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Data.Functor.$trModule
  = GHC.Types.Module Data.Functor.$trModule3 Data.Functor.$trModule1


