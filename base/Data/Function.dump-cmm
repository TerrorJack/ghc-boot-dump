
==================== Output Cmm ====================
2018-03-16 15:56:19.472572503 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:56:19.473521609 UTC

[section ""data" . Data.Function.fix_closure" {
     Data.Function.fix_closure:
         const Data.Function.fix_info;
 },
 Data.Function.fix_entry() //  [R2]
         { info_tbl: [(c1xFK,
                       label: Data.Function.fix_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xFK: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c1xFO; else goto c1xFN;
       c1xFO: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = Data.Function.fix_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c1xFN: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = R2;
           _c1xFJ::P64 = Hp - 24;
           P64[Hp] = _c1xFJ::P64;
           R1 = _c1xFJ::P64;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.47458887 UTC

[section ""data" . Data.Function.on_closure" {
     Data.Function.on_closure:
         const Data.Function.on_info;
 },
 Data.Function.on_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c1xFV,
                       label: Data.Function.on_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xFV: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c1xFZ; else goto c1xFY;
       c1xFZ: // global
           HpAlloc = 64;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Function.on_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c1xFY: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = R3;
           P64[Hp - 32] = R5;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           R3 = Hp - 56;
           _s1xFx::P64 = R2;
           R2 = Hp - 24;
           R1 = _s1xFx::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.475610958 UTC

[section ""data" . Data.Function.&_closure" {
     Data.Function.&_closure:
         const Data.Function.&_info;
 },
 Data.Function.&_entry() //  [R2, R3]
         { info_tbl: [(c1xG4,
                       label: Data.Function.&_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xG4: // global
           R2 = R2;
           R1 = R3;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.476283752 UTC

[section ""cstring" . Data.Function.$trModule4_bytes" {
     Data.Function.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.476816543 UTC

[section ""data" . Data.Function.$trModule3_closure" {
     Data.Function.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Function.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.477435401 UTC

[section ""cstring" . Data.Function.$trModule2_bytes" {
     Data.Function.$trModule2_bytes:
         I8[] [68,97,116,97,46,70,117,110,99,116,105,111,110]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.477973948 UTC

[section ""data" . Data.Function.$trModule1_closure" {
     Data.Function.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Function.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.478490488 UTC

[section ""data" . Data.Function.$trModule_closure" {
     Data.Function.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Function.$trModule3_closure+1;
         const Data.Function.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.479072374 UTC

[section ""relreadonly" . S1xG7_srt" { S1xG7_srt:
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.479577068 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:56:19.480271759 UTC

[section ""data" . Data.Function.fix_closure" {
     Data.Function.fix_closure:
         const Data.Function.fix_info;
 },
 Data.Function.fix_entry() //  [R2]
         { info_tbl: [(c1xGd,
                       label: Data.Function.fix_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xGd: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c1xGh; else goto c1xGg;
       c1xGh: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = Data.Function.fix_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c1xGg: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = R2;
           _c1xGc::P64 = Hp - 24;
           P64[Hp] = _c1xGc::P64;
           R1 = _c1xGc::P64;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.481410655 UTC

[section ""data" . Data.Function.on_closure" {
     Data.Function.on_closure:
         const Data.Function.on_info;
 },
 Data.Function.on_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c1xGo,
                       label: Data.Function.on_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xGo: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c1xGs; else goto c1xGr;
       c1xGs: // global
           HpAlloc = 64;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Function.on_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c1xGr: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = R3;
           P64[Hp - 32] = R5;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           R3 = Hp - 56;
           _s1xFx::P64 = R2;
           R2 = Hp - 24;
           R1 = _s1xFx::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.482410274 UTC

[section ""data" . Data.Function.&_closure" {
     Data.Function.&_closure:
         const Data.Function.&_info;
 },
 Data.Function.&_entry() //  [R2, R3]
         { info_tbl: [(c1xGx,
                       label: Data.Function.&_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xGx: // global
           R2 = R2;
           R1 = R3;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.4831318 UTC

[section ""cstring" . Data.Function.$trModule4_bytes" {
     Data.Function.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.483654753 UTC

[section ""data" . Data.Function.$trModule3_closure" {
     Data.Function.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Function.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.484191229 UTC

[section ""cstring" . Data.Function.$trModule2_bytes" {
     Data.Function.$trModule2_bytes:
         I8[] [68,97,116,97,46,70,117,110,99,116,105,111,110]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.484720224 UTC

[section ""data" . Data.Function.$trModule1_closure" {
     Data.Function.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Function.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.485235634 UTC

[section ""data" . Data.Function.$trModule_closure" {
     Data.Function.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Function.$trModule3_closure+1;
         const Data.Function.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.485893405 UTC

[section ""relreadonly" . S1xG7_srt" { S1xG7_srt:
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.486585603 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:56:19.487948137 UTC

[section ""data" . Data.Function.fix_closure" {
     Data.Function.fix_closure:
         const Data.Function.fix_info;
 },
 Data.Function.fix_entry() //  [R2]
         { info_tbl: [(c1xGF,
                       label: Data.Function.fix_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xGF: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c1xGJ; else goto c1xGI;
       c1xGJ: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = Data.Function.fix_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c1xGI: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = R2;
           _c1xGE::P64 = Hp - 24;
           P64[Hp] = _c1xGE::P64;
           R1 = _c1xGE::P64;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.492050416 UTC

[section ""data" . Data.Function.on_closure" {
     Data.Function.on_closure:
         const Data.Function.on_info;
 },
 Data.Function.on_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c1xGU,
                       label: Data.Function.on_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xGU: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c1xGY; else goto c1xGX;
       c1xGY: // global
           HpAlloc = 64;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Function.on_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c1xGX: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = R3;
           P64[Hp - 32] = R5;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           R3 = Hp - 56;
           _s1xFx::P64 = R2;
           R2 = Hp - 24;
           R1 = _s1xFx::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.4963542 UTC

[section ""data" . Data.Function.&_closure" {
     Data.Function.&_closure:
         const Data.Function.&_info;
 },
 Data.Function.&_entry() //  [R2, R3]
         { info_tbl: [(c1xH7,
                       label: Data.Function.&_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xH7: // global
           R2 = R2;
           R1 = R3;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.499568478 UTC

[section ""cstring" . Data.Function.$trModule4_bytes" {
     Data.Function.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.501946796 UTC

[section ""data" . Data.Function.$trModule3_closure" {
     Data.Function.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Function.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.503549776 UTC

[section ""cstring" . Data.Function.$trModule2_bytes" {
     Data.Function.$trModule2_bytes:
         I8[] [68,97,116,97,46,70,117,110,99,116,105,111,110]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.505100732 UTC

[section ""data" . Data.Function.$trModule1_closure" {
     Data.Function.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Function.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.506813113 UTC

[section ""data" . Data.Function.$trModule_closure" {
     Data.Function.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Function.$trModule3_closure+1;
         const Data.Function.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.508401793 UTC

[section ""relreadonly" . S1xG7_srt" { S1xG7_srt:
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.53419977 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:56:19.535830193 UTC

[section ""data" . Data.Function.fix_closure" {
     Data.Function.fix_closure:
         const Data.Function.fix_info;
 },
 Data.Function.fix_entry() //  [R2]
         { info_tbl: [(c1xHz,
                       label: Data.Function.fix_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xHz: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c1xHD; else goto c1xHC;
       c1xHD: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = Data.Function.fix_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c1xHC: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = R2;
           _c1xHy::P64 = Hp - 24;
           P64[Hp] = _c1xHy::P64;
           R1 = _c1xHy::P64;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.54205642 UTC

[section ""data" . Data.Function.on_closure" {
     Data.Function.on_closure:
         const Data.Function.on_info;
 },
 Data.Function.on_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c1xHP,
                       label: Data.Function.on_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xHP: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c1xHT; else goto c1xHS;
       c1xHT: // global
           HpAlloc = 64;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Function.on_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c1xHS: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = R3;
           P64[Hp - 32] = R5;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           R3 = Hp - 56;
           _s1xHm::P64 = R2;
           R2 = Hp - 24;
           R1 = _s1xHm::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.547040978 UTC

[section ""data" . Data.Function.&_closure" {
     Data.Function.&_closure:
         const Data.Function.&_info;
 },
 Data.Function.&_entry() //  [R2, R3]
         { info_tbl: [(c1xI4,
                       label: Data.Function.&_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xI4: // global
           R2 = R2;
           R1 = R3;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.550849174 UTC

[section ""cstring" . Data.Function.$trModule4_bytes" {
     Data.Function.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.552878911 UTC

[section ""data" . Data.Function.$trModule3_closure" {
     Data.Function.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Function.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.554993413 UTC

[section ""cstring" . Data.Function.$trModule2_bytes" {
     Data.Function.$trModule2_bytes:
         I8[] [68,97,116,97,46,70,117,110,99,116,105,111,110]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.556985631 UTC

[section ""data" . Data.Function.$trModule1_closure" {
     Data.Function.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Function.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.559108343 UTC

[section ""data" . Data.Function.$trModule_closure" {
     Data.Function.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Function.$trModule3_closure+1;
         const Data.Function.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.561230017 UTC

[section ""relreadonly" . S1xIg_srt" { S1xIg_srt:
 }]

