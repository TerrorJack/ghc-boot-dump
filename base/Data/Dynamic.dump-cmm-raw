
==================== Raw Cmm ====================
2018-03-16 16:04:43.235775145 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:04:43.236928377 UTC

[section ""data" . Data.Dynamic.$fExceptionDynamic3_closure" {
     Data.Dynamic.$fExceptionDynamic3_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.23924493 UTC

[section ""cstring" . Data.Dynamic.$fExceptionDynamic4_bytes" {
     Data.Dynamic.$fExceptionDynamic4_bytes:
         I8[] [60,60]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.240973677 UTC

[section ""cstring" . Data.Dynamic.$fExceptionDynamic2_bytes" {
     Data.Dynamic.$fExceptionDynamic2_bytes:
         I8[] [62,62]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.245307486 UTC

[section ""data" . Data.Dynamic.$w$cshowsPrec_closure" {
     Data.Dynamic.$w$cshowsPrec_closure:
         const Data.Dynamic.$w$cshowsPrec_info;
         const 0;
 },
 f_s9BhE_entry() //  [R1]
         { []
         }
     {offset
       c9BNa: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9BNb; else goto c9BNc;
       c9BNb: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9BNc: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = Data.Dynamic.$fExceptionDynamic3_closure+1;
           Sp = Sp - 16;
           call Data.Typeable.Internal.showTypeable_entry(R3,
                                                          R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . f_s9BhE_info" {
     f_s9BhE_info:
         const f_s9BhE_entry;
         const 1;
         const 4294967312;
         const S9Bm7_srt;
 },
 sat_s9BhG_entry() //  [R1]
         { []
         }
     {offset
       c9BNq: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9BNr; else goto c9BNs;
       c9BNr: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9BNs: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = Data.Dynamic.$fExceptionDynamic2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9BhG_info" {
     sat_s9BhG_info:
         const sat_s9BhG_entry;
         const 1;
         const 16;
 },
 sat_s9BhH_entry() //  [R1]
         { []
         }
     {offset
       c9BNt: // global
           _s9BhH::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9BNu; else goto c9BNv;
       c9BNv: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9BNx; else goto c9BNw;
       c9BNx: // global
           HpAlloc = 24;
           goto c9BNu;
       c9BNu: // global
           R1 = _s9BhH::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9BNw: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9BhH::P64;
           _s9BhE::P64 = P64[_s9BhH::P64 + 16];
           _s9BhF::P64 = P64[_s9BhH::P64 + 24];
           I64[Hp - 16] = sat_s9BhG_info;
           P64[Hp] = _s9BhF::P64;
           R2 = Hp - 16;
           R1 = _s9BhE::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9BhH_info" {
     sat_s9BhH_info:
         const sat_s9BhH_entry;
         const 2;
         const 18;
 },
 sat_s9BhI_entry() //  [R1, R2]
         { []
         }
     {offset
       c9BNy: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9BNC; else goto c9BNB;
       c9BNC: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9BNB: // global
           _s9BhE::P64 = P64[R1 + 7];
           I64[Hp - 24] = sat_s9BhH_info;
           P64[Hp - 8] = _s9BhE::P64;
           P64[Hp] = R2;
           R3 = Hp - 24;
           R2 = Data.Dynamic.$fExceptionDynamic4_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s9BhI_info" {
     sat_s9BhI_info:
         const sat_s9BhI_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Data.Dynamic.$w$cshowsPrec_entry() //  [R2]
         { []
         }
     {offset
       c9BND: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9BNE; else goto c9BNF;
       c9BNE: // global
           R2 = R2;
           R1 = Data.Dynamic.$w$cshowsPrec_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9BNF: // global
           I64[Sp - 8] = block_c9BN1_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9BNJ; else goto c9BN2;
       u9BNJ: // global
           call _c9BN1(R1) args: 0, res: 0, upd: 0;
       c9BN2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.$w$cshowsPrec_info" {
     Data.Dynamic.$w$cshowsPrec_info:
         const Data.Dynamic.$w$cshowsPrec_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const S9Bm7_srt;
 },
 _c9BN1() //  [R1]
         { []
         }
     {offset
       c9BN1: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9BNI; else goto c9BNH;
       c9BNI: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9BNH: // global
           _s9BhC::P64 = P64[R1 + 7];
           I64[Hp - 32] = f_s9BhE_info;
           P64[Hp - 16] = _s9BhC::P64;
           I64[Hp - 8] = sat_s9BhI_info;
           P64[Hp] = Hp - 32;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9BN1_info" {
     block_c9BN1_info:
         const _c9BN1;
         const 0;
         const 4294967326;
         const S9Bm7_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.259131917 UTC

[section ""data" . Data.Dynamic.$fShowDynamic_$cshowsPrec_closure" {
     Data.Dynamic.$fShowDynamic_$cshowsPrec_closure:
         const Data.Dynamic.$fShowDynamic_$cshowsPrec_info;
         const 0;
 },
 Data.Dynamic.$fShowDynamic_$cshowsPrec_entry() //  [R3]
         { []
         }
     {offset
       c9BOe: // global
           R2 = R3;
           call Data.Dynamic.$w$cshowsPrec_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.$fShowDynamic_$cshowsPrec_info" {
     Data.Dynamic.$fShowDynamic_$cshowsPrec_info:
         const Data.Dynamic.$fShowDynamic_$cshowsPrec_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S9Bm7_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.262793155 UTC

[section ""data" . Data.Dynamic.toDyn_closure" {
     Data.Dynamic.toDyn_closure:
         const Data.Dynamic.toDyn_info;
 },
 Data.Dynamic.toDyn_entry() //  [R2, R3]
         { []
         }
     {offset
       c9BOq: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9BOu; else goto c9BOt;
       c9BOu: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Data.Dynamic.toDyn_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9BOt: // global
           I64[Hp - 16] = Data.Dynamic.Dynamic_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.toDyn_info" {
     Data.Dynamic.toDyn_info:
         const Data.Dynamic.toDyn_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.267230535 UTC

[section ""data" . Data.Dynamic.fromDyn_closure" {
     Data.Dynamic.fromDyn_closure:
         const Data.Dynamic.fromDyn_info;
         const 0;
 },
 Data.Dynamic.fromDyn_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c9BOH: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9BOI; else goto c9BOJ;
       c9BOI: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Dynamic.fromDyn_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9BOJ: // global
           I64[Sp - 24] = block_c9BOE_info;
           R1 = R3;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9BOZ; else goto c9BOF;
       u9BOZ: // global
           call _c9BOE(R1) args: 0, res: 0, upd: 0;
       c9BOF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.fromDyn_info" {
     Data.Dynamic.fromDyn_info:
         const Data.Dynamic.fromDyn_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S9Bm7_srt+16;
 },
 _c9BOE() //  [R1]
         { []
         }
     {offset
       c9BOE: // global
           I64[Sp] = block_c9BOM_info;
           R3 = P64[Sp + 8];
           R2 = P64[R1 + 7];
           P64[Sp + 8] = P64[R1 + 15];
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9BOE_info" {
     block_c9BOE_info:
         const _c9BOE;
         const 2;
         const 4294967326;
         const S9Bm7_srt+16;
 },
 _c9BOM() //  [R1]
         { []
         }
     {offset
       c9BOM: // global
           if (R1 & 7 == 1) goto c9BOT; else goto c9BOX;
       c9BOT: // global
           R1 = P64[Sp + 16];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c9BOX: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9BOM_info" {
     block_c9BOM_info:
         const _c9BOM;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.27482655 UTC

[section ""data" . Data.Dynamic.fromDynamic_closure" {
     Data.Dynamic.fromDynamic_closure:
         const Data.Dynamic.fromDynamic_info;
         const 0;
 },
 Data.Dynamic.fromDynamic_entry() //  [R2, R3]
         { []
         }
     {offset
       c9BPm: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9BPn; else goto c9BPo;
       c9BPn: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Dynamic.fromDynamic_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9BPo: // global
           I64[Sp - 16] = block_c9BPj_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9BPH; else goto c9BPk;
       u9BPH: // global
           call _c9BPj(R1) args: 0, res: 0, upd: 0;
       c9BPk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.fromDynamic_info" {
     Data.Dynamic.fromDynamic_info:
         const Data.Dynamic.fromDynamic_entry;
         const 0;
         const 21474836494;
         const 8589934607;
         const S9Bm7_srt+16;
 },
 _c9BPj() //  [R1]
         { []
         }
     {offset
       c9BPj: // global
           I64[Sp] = block_c9BPr_info;
           R3 = P64[Sp + 8];
           R2 = P64[R1 + 7];
           P64[Sp + 8] = P64[R1 + 15];
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9BPj_info" {
     block_c9BPj_info:
         const _c9BPj;
         const 1;
         const 4294967326;
         const S9Bm7_srt+16;
 },
 _c9BPr() //  [R1]
         { []
         }
     {offset
       c9BPr: // global
           if (R1 & 7 == 1) goto c9BPy; else goto c9BPC;
       c9BPy: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9BPC: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9BPF; else goto c9BPE;
       c9BPF: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9BPE: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9BPr_info" {
     block_c9BPr_info:
         const _c9BPr;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.283797722 UTC

[section ""data" . lvl_r9Bhp_closure" {
     lvl_r9Bhp_closure:
         const lvl_r9Bhp_info;
         const 0;
         const 0;
         const 0;
 },
 lvl_r9Bhp_entry() //  [R1]
         { []
         }
     {offset
       c9BQg: // global
           if ((Sp + -104) < SpLim) (likely: False) goto c9BQh; else goto c9BQi;
       c9BQh: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9BQi: // global
           (_c9BQ3::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9BQ3::I64 == 0) goto c9BQ5; else goto c9BQ4;
       c9BQ5: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9BQ4: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9BQ3::I64;
           I64[Sp - 24] = block_c9BQ6_info;
           R6 = 0;
           R5 = GHC.Types.$tcTYPE2_closure;
           R4 = GHC.Types.tr$ModuleGHCPrim_closure;
           R3 = 12502576999761269576;
           R2 = 16277905407886699876;
           P64[Sp - 40] = GHC.Types.$tcTYPE1_closure;
           P64[Sp - 32] = GHC.Types.[]_closure+1;
           Sp = Sp - 40;
           call Data.Typeable.Internal.$wmkTrCon_entry(R6,
                                                       R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . lvl_r9Bhp_info" {
     lvl_r9Bhp_info:
         const lvl_r9Bhp_entry;
         const 0;
         const 12884901909;
         const S9Bm7_srt+40;
 },
 _c9BQ6() //  [R1, R2, R3, R4, R5]
         { []
         }
     {offset
       c9BQ6: // global
           I64[Sp - 40] = block_c9BQa_info;
           R6 = 0;
           _s9Bi3::P64 = R5;
           R5 = GHC.Types.$tc'LiftedRep1_closure;
           _s9Bi2::P64 = R4;
           R4 = GHC.Types.tr$ModuleGHCPrim_closure;
           _s9Bi1::P64 = R3;
           R3 = 5595830777317938557;
           _s9Bi0::I64 = R2;
           R2 = 16105171405184389724;
           P64[Sp - 56] = GHC.Types.$tc'AddrRep1_closure;
           P64[Sp - 48] = GHC.Types.[]_closure+1;
           I64[Sp - 32] = _s9Bi0::I64;
           P64[Sp - 24] = _s9Bi1::P64;
           P64[Sp - 16] = _s9Bi2::P64;
           P64[Sp - 8] = _s9Bi3::P64;
           I64[Sp] = R1;
           Sp = Sp - 56;
           call Data.Typeable.Internal.$wmkTrCon_entry(R6,
                                                       R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c9BQ6_info" {
     block_c9BQ6_info:
         const _c9BQ6;
         const 0;
         const 12884901918;
         const S9Bm7_srt+40;
 },
 _c9BQa() //  [R1, R2, R3, R4, R5]
         { []
         }
     {offset
       c9BQa: // global
           I64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           I64[Sp] = R1;
           Sp = Sp - 40;
           call _c9BQb() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9BQa_info" {
     block_c9BQa_info:
         const _c9BQa;
         const 1093;
         const 4294967326;
         const S9Bm7_srt+40;
 },
 _c9BQb() //  []
         { []
         }
     {offset
       c9BQb: // global
           Hp = Hp + 96;
           if (Hp > HpLim) (likely: False) goto c9BQm; else goto c9BQl;
       c9BQm: // global
           HpAlloc = 96;
           I64[Sp] = block_c9BQb_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 24;
       c9BQl: // global
           I64[Hp - 88] = Data.Typeable.Internal.TrTyCon_con_info;
           P64[Hp - 80] = P64[Sp + 16];
           P64[Hp - 72] = P64[Sp + 24];
           P64[Hp - 64] = P64[Sp + 32];
           I64[Hp - 56] = I64[Sp + 40];
           I64[Hp - 48] = I64[Sp + 8];
           I64[Hp - 40] = Data.Typeable.Internal.TrTyCon_con_info;
           P64[Hp - 32] = P64[Sp + 56];
           P64[Hp - 24] = P64[Sp + 64];
           P64[Hp - 16] = P64[Sp + 72];
           I64[Hp - 8] = I64[Sp + 80];
           I64[Hp] = I64[Sp + 48];
           R3 = Hp - 86;
           R2 = Hp - 38;
           Sp = Sp + 88;
           call Data.Typeable.Internal.mkTrApp_entry(R3,
                                                     R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9BQb_info" {
     block_c9BQb_info:
         const _c9BQb;
         const 35914;
         const 4294967326;
         const S9Bm7_srt+40;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.306323994 UTC

[section ""data" . Data.Dynamic.dynApply_closure" {
     Data.Dynamic.dynApply_closure:
         const Data.Dynamic.dynApply_info;
         const 0;
 },
 Data.Dynamic.dynApply_entry() //  [R2, R3]
         { []
         }
     {offset
       c9BQW: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c9BQX; else goto c9BQY;
       c9BQX: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Dynamic.dynApply_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9BQY: // global
           I64[Sp - 16] = block_c9BQT_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9BX5; else goto c9BQU;
       u9BX5: // global
           call _c9BQT(R1) args: 0, res: 0, upd: 0;
       c9BQU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.dynApply_info" {
     Data.Dynamic.dynApply_info:
         const Data.Dynamic.dynApply_entry;
         const 0;
         const 2065879269390;
         const 8589934607;
         const S9Bm7_srt+16;
 },
 _c9BQT() //  [R1]
         { []
         }
     {offset
       c9BQT: // global
           I64[Sp - 8] = block_c9BR1_info;
           _s9Big::P64 = P64[R1 + 15];
           R1 = P64[R1 + 7];
           P64[Sp] = _s9Big::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9BX4; else goto c9BR3;
       u9BX4: // global
           call _c9BR1(R1) args: 0, res: 0, upd: 0;
       c9BR3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9BQT_info" {
     block_c9BQT_info:
         const _c9BQT;
         const 1;
         const 1516123455518;
         const S9Bm7_srt+16;
 },
 _c9BR1() //  [R1]
         { []
         }
     {offset
       c9BR1: // global
           if (R1 & 7 == 4) goto c9BRe; else goto u9BWE;
       c9BRe: // global
           I64[Sp - 8] = block_c9BRc_info;
           _s9Bik::P64 = P64[R1 + 4];
           _s9Bil::P64 = P64[R1 + 12];
           R1 = P64[Sp + 16];
           P64[Sp] = _s9Bil::P64;
           P64[Sp + 16] = _s9Bik::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9BX6; else goto c9BRf;
       u9BX6: // global
           call _c9BRc(R1) args: 0, res: 0, upd: 0;
       c9BRf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       u9BWE: // global
           Sp = Sp + 24;
           call _c9BWe() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9BR1_info" {
     block_c9BR1_info:
         const _c9BR1;
         const 2;
         const 1516123455518;
         const S9Bm7_srt+16;
 },
 _c9BRc() //  [R1]
         { []
         }
     {offset
       c9BRc: // global
           I64[Sp] = block_c9BRj_info;
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 24];
           P64[Sp + 24] = P64[R1 + 15];
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9BRc_info" {
     block_c9BRc_info:
         const _c9BRc;
         const 3;
         const 1516123455518;
         const S9Bm7_srt+16;
 },
 _c9BRj() //  [R1]
         { []
         }
     {offset
       c9BRj: // global
           if (R1 & 7 == 1) goto u9BWF; else goto c9BRv;
       u9BWF: // global
           Sp = Sp + 32;
           call _c9BWe() args: 0, res: 0, upd: 0;
       c9BRv: // global
           _s9Bil::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9BRt_info;
           R1 = _s9Bil::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9BX8; else goto c9BRw;
       u9BX8: // global
           call _c9BRt(R1) args: 0, res: 0, upd: 0;
       c9BRw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9BRj_info" {
     block_c9BRj_info:
         const _c9BRj;
         const 3;
         const 1516123455518;
         const S9Bm7_srt+16;
 },
 _c9BRt() //  [R1]
         { []
         }
     {offset
       c9BRt: // global
           _c9BWq::P64 = R1 & 7;
           if (_c9BWq::P64 < 3) goto u9BWx; else goto u9BWy;
       u9BWx: // global
           if (_c9BWq::P64 < 2) goto c9BS8; else goto c9BTV;
       c9BS8: // global
           I64[Sp - 8] = block_c9BRC_info;
           _s9Biq::P64 = R1;
           R1 = lvl_r9Bhp_closure;
           P64[Sp] = _s9Biq::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9BXa; else goto c9BS9;
       u9BXa: // global
           call _c9BRC(R1) args: 0, res: 0, upd: 0;
       c9BS9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9BTV: // global
           I64[Sp - 16] = block_c9BSy_info;
           _s9Biq::P64 = R1;
           _s9BiT::P64 = P64[R1 + 22];
           R1 = lvl_r9Bhp_closure;
           P64[Sp - 8] = _s9BiT::P64;
           P64[Sp] = _s9Biq::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9BXb; else goto c9BTW;
       u9BXb: // global
           call _c9BSy(R1) args: 0, res: 0, upd: 0;
       c9BTW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       u9BWy: // global
           if (_c9BWq::P64 < 4) goto c9BVI; else goto c9BW8;
       c9BVI: // global
           I64[Sp - 16] = block_c9BUl_info;
           _s9Biq::P64 = R1;
           _s9BjF::P64 = P64[R1 + 21];
           R1 = lvl_r9Bhp_closure;
           P64[Sp - 8] = _s9BjF::P64;
           P64[Sp] = _s9Biq::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9BXc; else goto c9BVJ;
       u9BXc: // global
           call _c9BUl(R1) args: 0, res: 0, upd: 0;
       c9BVJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9BW8: // global
           I64[Sp - 8] = block_c9BW6_info;
           R3 = Data.Typeable.Internal.$mApp1_closure;
           R2 = lvl_r9Bhp_closure;
           P64[Sp] = R1;
           Sp = Sp - 8;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9BRt_info" {
     block_c9BRt_info:
         const _c9BRt;
         const 2;
         const 1516123455518;
         const S9Bm7_srt+16;
 },
 _c9BRC() //  [R1]
         { []
         }
     {offset
       c9BRC: // global
           _c9BWw::P64 = R1 & 7;
           if (_c9BWw::P64 < 3) goto u9BWz; else goto c9BSt;
       u9BWz: // global
           if (_c9BWw::P64 < 2) goto c9BSg; else goto c9BSp;
       c9BSg: // global
           I64[Sp] = block_c9BSd_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u9BXd; else goto c9BSh;
       u9BXd: // global
           call _c9BSd(R1) args: 0, res: 0, upd: 0;
       c9BSh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9BSp: // global
           I64[Sp] = I64[R1 + 30];
           I64[Sp - 8] = I64[R1 + 38];
           Sp = Sp - 8;
           goto u9BXf;
       c9BSt: // global
           I64[Sp] = I64[R1 + 29];
           I64[Sp - 8] = I64[R1 + 37];
           Sp = Sp - 8;
           goto u9BXf;
       u9BXf: // global
           call _s9Bir() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9BRC_info" {
     block_c9BRC_info:
         const _c9BRC;
         const 3;
         const 4294967326;
         const S9Bm7_srt+56;
 },
 _c9BSd() //  [R1]
         { []
         }
     {offset
       c9BSd: // global
           I64[Sp - 8] = I64[R1 + 15];
           I64[Sp] = I64[R1 + 7];
           Sp = Sp - 8;
           call _s9Bir() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9BSd_info" {
     block_c9BSd_info:
         const _c9BSd;
         const 3;
         const 4294967326;
         const S9Bm7_srt+56;
 },
 _s9Bir() //  []
         { []
         }
     {offset
       s9Bir: // global
           I64[Sp - 8] = block_c9BRH_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9BXG; else goto c9BRJ;
       u9BXG: // global
           call _c9BRH(R1) args: 0, res: 0, upd: 0;
       c9BRJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9BRH() //  [R1]
         { []
         }
     {offset
       c9BRH: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c9BRP; else goto c9BRO;
       c9BRP: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9BRO: // global
           if (I64[Sp + 16] == I64[R1 + 7]) goto c9BS6; else goto u9BWJ;
       c9BS6: // global
           if (I64[Sp + 8] == I64[R1 + 15]) goto c9BS5; else goto u9BWK;
       c9BS5: // global
           I64[Hp - 64] = stg_ap_2_upd_info;
           P64[Hp - 48] = P64[Sp + 32];
           P64[Hp - 40] = P64[Sp + 40];
           I64[Hp - 32] = Data.Dynamic.Dynamic_con_info;
           P64[Hp - 24] = P64[Sp + 24];
           P64[Hp - 16] = Hp - 64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 6;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u9BWK: // global
           Sp = Sp + 48;
           goto u9BXh;
       u9BWJ: // global
           Sp = Sp + 48;
           goto u9BXh;
       u9BXh: // global
           call _c9BVA() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9BRH_info" {
     block_c9BRH_info:
         const _c9BRH;
         const 197;
         const 30;
 },
 _c9BSy() //  [R1]
         { []
         }
     {offset
       c9BSy: // global
           _c9BWu::P64 = R1 & 7;
           if (_c9BWu::P64 < 3) goto u9BWA; else goto c9BUg;
       u9BWA: // global
           if (_c9BWu::P64 < 2) goto c9BU3; else goto c9BUc;
       c9BU3: // global
           I64[Sp] = block_c9BU0_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u9BXj; else goto c9BU4;
       u9BXj: // global
           call _c9BU0(R1) args: 0, res: 0, upd: 0;
       c9BU4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9BUc: // global
           I64[Sp] = I64[R1 + 30];
           I64[Sp - 8] = I64[R1 + 38];
           Sp = Sp - 8;
           goto u9BXl;
       c9BUg: // global
           I64[Sp] = I64[R1 + 29];
           I64[Sp - 8] = I64[R1 + 37];
           Sp = Sp - 8;
           goto u9BXl;
       u9BXl: // global
           call _s9BiU() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9BSy_info" {
     block_c9BSy_info:
         const _c9BSy;
         const 4;
         const 4294967326;
         const S9Bm7_srt+56;
 },
 _c9BU0() //  [R1]
         { []
         }
     {offset
       c9BU0: // global
           I64[Sp - 8] = I64[R1 + 15];
           I64[Sp] = I64[R1 + 7];
           Sp = Sp - 8;
           call _s9BiU() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9BU0_info" {
     block_c9BU0_info:
         const _c9BU0;
         const 4;
         const 4294967326;
         const S9Bm7_srt+56;
 },
 _s9BiU() //  []
         { []
         }
     {offset
       s9BiU: // global
           I64[Sp - 8] = block_c9BSD_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9BXH; else goto c9BSF;
       u9BXH: // global
           call _c9BSD(R1) args: 0, res: 0, upd: 0;
       c9BSF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9BSD() //  [R1]
         { []
         }
     {offset
       c9BSD: // global
           _s9Big::P64 = P64[Sp + 40];
           _s9Bio::P64 = P64[Sp + 48];
           _s9Biq::P64 = P64[Sp + 32];
           _s9BiV::I64 = I64[Sp + 16];
           _s9BiW::I64 = I64[Sp + 8];
           _c9BWv::P64 = R1 & 7;
           if (_c9BWv::P64 < 3) goto u9BWB; else goto c9BTy;
       u9BWB: // global
           if (_c9BWv::P64 < 2) goto c9BSM; else goto c9BTb;
       c9BSM: // global
           I64[Sp] = block_c9BSJ_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u9BXm; else goto c9BSN;
       u9BXm: // global
           call _c9BSJ(R1) args: 0, res: 0, upd: 0;
       c9BSN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9BTb: // global
           Hp = Hp + 72;
           _s9BiX::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c9BTD; else goto c9BTf;
       c9BTf: // global
           if (_s9BiV::I64 == I64[_s9BiX::P64 + 30]) goto c9BTx; else goto u9BWQ;
       c9BTx: // global
           if (_s9BiW::I64 == I64[_s9BiX::P64 + 38]) goto c9BTw; else goto u9BWR;
       c9BTw: // global
           I64[Hp - 64] = stg_ap_2_upd_info;
           P64[Hp - 48] = _s9Big::P64;
           P64[Hp - 40] = _s9Bio::P64;
           I64[Hp - 32] = Data.Dynamic.Dynamic_con_info;
           P64[Hp - 24] = _s9Biq::P64;
           P64[Hp - 16] = Hp - 64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 6;
           Sp = Sp + 56;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u9BWR: // global
           Sp = Sp + 56;
           goto u9BXq;
       u9BWQ: // global
           Sp = Sp + 56;
           goto u9BXq;
       c9BTy: // global
           Hp = Hp + 72;
           _s9BiX::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c9BTD; else goto c9BTC;
       c9BTD: // global
           HpAlloc = 72;
           R1 = _s9BiX::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9BTC: // global
           if (_s9BiV::I64 == I64[_s9BiX::P64 + 29]) goto c9BTU; else goto u9BWS;
       c9BTU: // global
           if (_s9BiW::I64 == I64[_s9BiX::P64 + 37]) goto c9BTT; else goto u9BWT;
       c9BTT: // global
           I64[Hp - 64] = stg_ap_2_upd_info;
           P64[Hp - 48] = _s9Big::P64;
           P64[Hp - 40] = _s9Bio::P64;
           I64[Hp - 32] = Data.Dynamic.Dynamic_con_info;
           P64[Hp - 24] = _s9Biq::P64;
           P64[Hp - 16] = Hp - 64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 6;
           Sp = Sp + 56;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u9BWT: // global
           Sp = Sp + 56;
           goto u9BXq;
       u9BWS: // global
           Sp = Sp + 56;
           goto u9BXq;
       u9BXq: // global
           call _c9BVA() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9BSD_info" {
     block_c9BSD_info:
         const _c9BSD;
         const 454;
         const 4294967326;
         const S9Bm7_srt+56;
 },
 _c9BSJ() //  [R1]
         { []
         }
     {offset
       c9BSJ: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c9BST; else goto c9BSS;
       c9BST: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9BSS: // global
           if (I64[Sp + 16] == I64[R1 + 7]) goto c9BTa; else goto u9BWO;
       c9BTa: // global
           if (I64[Sp + 8] == I64[R1 + 15]) goto c9BT9; else goto u9BWP;
       c9BT9: // global
           I64[Hp - 64] = stg_ap_2_upd_info;
           P64[Hp - 48] = P64[Sp + 40];
           P64[Hp - 40] = P64[Sp + 48];
           I64[Hp - 32] = Data.Dynamic.Dynamic_con_info;
           P64[Hp - 24] = P64[Sp + 32];
           P64[Hp - 16] = Hp - 64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 6;
           Sp = Sp + 56;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u9BWP: // global
           Sp = Sp + 56;
           goto u9BXs;
       u9BWO: // global
           Sp = Sp + 56;
           goto u9BXs;
       u9BXs: // global
           call _c9BVA() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9BSJ_info" {
     block_c9BSJ_info:
         const _c9BSJ;
         const 454;
         const 30;
 },
 _c9BUl() //  [R1]
         { []
         }
     {offset
       c9BUl: // global
           _c9BWs::P64 = R1 & 7;
           if (_c9BWs::P64 < 3) goto u9BWC; else goto c9BW3;
       u9BWC: // global
           if (_c9BWs::P64 < 2) goto c9BVQ; else goto c9BVZ;
       c9BVQ: // global
           I64[Sp] = block_c9BVN_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u9BXu; else goto c9BVR;
       u9BXu: // global
           call _c9BVN(R1) args: 0, res: 0, upd: 0;
       c9BVR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9BVZ: // global
           I64[Sp] = I64[R1 + 30];
           I64[Sp - 8] = I64[R1 + 38];
           Sp = Sp - 8;
           goto u9BXw;
       c9BW3: // global
           I64[Sp] = I64[R1 + 29];
           I64[Sp - 8] = I64[R1 + 37];
           Sp = Sp - 8;
           goto u9BXw;
       u9BXw: // global
           call _s9BjG() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9BUl_info" {
     block_c9BUl_info:
         const _c9BUl;
         const 4;
         const 4294967326;
         const S9Bm7_srt+56;
 },
 _c9BVN() //  [R1]
         { []
         }
     {offset
       c9BVN: // global
           I64[Sp - 8] = I64[R1 + 15];
           I64[Sp] = I64[R1 + 7];
           Sp = Sp - 8;
           call _s9BjG() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9BVN_info" {
     block_c9BVN_info:
         const _c9BVN;
         const 4;
         const 4294967326;
         const S9Bm7_srt+56;
 },
 _s9BjG() //  []
         { []
         }
     {offset
       s9BjG: // global
           I64[Sp - 8] = block_c9BUq_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9BXI; else goto c9BUs;
       u9BXI: // global
           call _c9BUq(R1) args: 0, res: 0, upd: 0;
       c9BUs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9BUq() //  [R1]
         { []
         }
     {offset
       c9BUq: // global
           _s9Big::P64 = P64[Sp + 40];
           _s9Bio::P64 = P64[Sp + 48];
           _s9Biq::P64 = P64[Sp + 32];
           _s9BjH::I64 = I64[Sp + 16];
           _s9BjI::I64 = I64[Sp + 8];
           _c9BWt::P64 = R1 & 7;
           if (_c9BWt::P64 < 3) goto u9BWD; else goto c9BVl;
       u9BWD: // global
           if (_c9BWt::P64 < 2) goto c9BUz; else goto c9BUY;
       c9BUz: // global
           I64[Sp] = block_c9BUw_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u9BXx; else goto c9BUA;
       u9BXx: // global
           call _c9BUw(R1) args: 0, res: 0, upd: 0;
       c9BUA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9BUY: // global
           Hp = Hp + 72;
           _s9BjJ::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c9BVq; else goto c9BV2;
       c9BV2: // global
           if (_s9BjH::I64 == I64[_s9BjJ::P64 + 30]) goto c9BVk; else goto u9BWZ;
       c9BVk: // global
           if (_s9BjI::I64 == I64[_s9BjJ::P64 + 38]) goto c9BVj; else goto u9BX0;
       c9BVj: // global
           I64[Hp - 64] = stg_ap_2_upd_info;
           P64[Hp - 48] = _s9Big::P64;
           P64[Hp - 40] = _s9Bio::P64;
           I64[Hp - 32] = Data.Dynamic.Dynamic_con_info;
           P64[Hp - 24] = _s9Biq::P64;
           P64[Hp - 16] = Hp - 64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 6;
           Sp = Sp + 56;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u9BX0: // global
           Sp = Sp + 56;
           goto u9BXB;
       u9BWZ: // global
           Sp = Sp + 56;
           goto u9BXB;
       c9BVl: // global
           Hp = Hp + 72;
           _s9BjJ::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c9BVq; else goto c9BVp;
       c9BVq: // global
           HpAlloc = 72;
           R1 = _s9BjJ::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9BVp: // global
           if (_s9BjH::I64 == I64[_s9BjJ::P64 + 29]) goto c9BVH; else goto u9BX1;
       c9BVH: // global
           if (_s9BjI::I64 == I64[_s9BjJ::P64 + 37]) goto c9BVG; else goto u9BX2;
       c9BVG: // global
           I64[Hp - 64] = stg_ap_2_upd_info;
           P64[Hp - 48] = _s9Big::P64;
           P64[Hp - 40] = _s9Bio::P64;
           I64[Hp - 32] = Data.Dynamic.Dynamic_con_info;
           P64[Hp - 24] = _s9Biq::P64;
           P64[Hp - 16] = Hp - 64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 6;
           Sp = Sp + 56;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u9BX2: // global
           Sp = Sp + 56;
           goto u9BXB;
       u9BX1: // global
           Sp = Sp + 56;
           goto u9BXB;
       u9BXB: // global
           call _c9BVA() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9BUq_info" {
     block_c9BUq_info:
         const _c9BUq;
         const 454;
         const 4294967326;
         const S9Bm7_srt+56;
 },
 _c9BUw() //  [R1]
         { []
         }
     {offset
       c9BUw: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c9BUG; else goto c9BUF;
       c9BUG: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9BUF: // global
           if (I64[Sp + 16] == I64[R1 + 7]) goto c9BUX; else goto u9BWX;
       c9BUX: // global
           if (I64[Sp + 8] == I64[R1 + 15]) goto c9BUW; else goto u9BWY;
       c9BUW: // global
           I64[Hp - 64] = stg_ap_2_upd_info;
           P64[Hp - 48] = P64[Sp + 40];
           P64[Hp - 40] = P64[Sp + 48];
           I64[Hp - 32] = Data.Dynamic.Dynamic_con_info;
           P64[Hp - 24] = P64[Sp + 32];
           P64[Hp - 16] = Hp - 64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 6;
           Sp = Sp + 56;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u9BWY: // global
           Sp = Sp + 56;
           goto u9BXD;
       u9BWX: // global
           Sp = Sp + 56;
           goto u9BXD;
       u9BXD: // global
           call _c9BVA() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9BUw_info" {
     block_c9BUw_info:
         const _c9BUw;
         const 454;
         const 30;
 },
 _c9BVA() //  []
         { []
         }
     {offset
       c9BVA: // global
           Hp = Hp - 72;
           R1 = GHC.Base.Nothing_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9BW6() //  [R1]
         { []
         }
     {offset
       c9BW6: // global
           if (R1 & 7 == 1) goto u9BX3; else goto c9BWk;
       u9BX3: // global
           Sp = Sp + 32;
           call _c9BWe() args: 0, res: 0, upd: 0;
       c9BWk: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c9BWn; else goto c9BWm;
       c9BWn: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9BWm: // global
           I64[Hp - 64] = stg_ap_2_upd_info;
           P64[Hp - 48] = P64[Sp + 16];
           P64[Hp - 40] = P64[Sp + 24];
           I64[Hp - 32] = Data.Dynamic.Dynamic_con_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = Hp - 64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 6;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9BW6_info" {
     block_c9BW6_info:
         const _c9BW6;
         const 3;
         const 30;
 },
 _c9BWe() //  []
         { []
         }
     {offset
       c9BWe: // global
           R1 = GHC.Base.Nothing_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.347386057 UTC

[section ""data" . Data.Dynamic.dynTypeRep_closure" {
     Data.Dynamic.dynTypeRep_closure:
         const Data.Dynamic.dynTypeRep_info;
 },
 Data.Dynamic.dynTypeRep_entry() //  [R2]
         { []
         }
     {offset
       c9C0m: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9C0n; else goto c9C0o;
       c9C0n: // global
           R2 = R2;
           R1 = Data.Dynamic.dynTypeRep_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9C0o: // global
           I64[Sp - 8] = block_c9C0j_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9C0s; else goto c9C0k;
       u9C0s: // global
           call _c9C0j(R1) args: 0, res: 0, upd: 0;
       c9C0k: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.dynTypeRep_info" {
     Data.Dynamic.dynTypeRep_info:
         const Data.Dynamic.dynTypeRep_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9C0j() //  [R1]
         { []
         }
     {offset
       c9C0j: // global
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call Data.Typeable.Internal.$WSomeTypeRep_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9C0j_info" {
     block_c9C0j_info:
         const _c9C0j;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.352023613 UTC

[section ""cstring" . Data.Dynamic.$trModule4_bytes" {
     Data.Dynamic.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.353709677 UTC

[section ""data" . Data.Dynamic.$trModule3_closure" {
     Data.Dynamic.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Dynamic.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.355401156 UTC

[section ""cstring" . Data.Dynamic.$trModule2_bytes" {
     Data.Dynamic.$trModule2_bytes:
         I8[] [68,97,116,97,46,68,121,110,97,109,105,99]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.35709655 UTC

[section ""data" . Data.Dynamic.$trModule1_closure" {
     Data.Dynamic.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Dynamic.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.359414699 UTC

[section ""data" . Data.Dynamic.$trModule_closure" {
     Data.Dynamic.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Dynamic.$trModule3_closure+1;
         const Data.Dynamic.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.361233715 UTC

[section ""data" . $krep_r9Bhq_closure" {
     $krep_r9Bhq_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.363437488 UTC

[section ""data" . $krep1_r9Bhr_closure" {
     $krep1_r9Bhr_closure:
         const :_con_info;
         const $krep_r9Bhq_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.365213407 UTC

[section ""data" . $krep2_r9Bhs_closure" {
     $krep2_r9Bhs_closure:
         const :_con_info;
         const GHC.Types.krep$*_closure;
         const $krep1_r9Bhr_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.36692717 UTC

[section ""data" . $krep3_r9Bht_closure" {
     $krep3_r9Bht_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Typeable.Internal.$tcTypeRep_closure;
         const $krep2_r9Bhs_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.368667398 UTC

[section ""cstring" . Data.Dynamic.$fExceptionDynamic7_bytes" {
     Data.Dynamic.$fExceptionDynamic7_bytes:
         I8[] [68,121,110,97,109,105,99]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.371974476 UTC

[section ""data" . Data.Dynamic.$fExceptionDynamic6_closure" {
     Data.Dynamic.$fExceptionDynamic6_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Dynamic.$fExceptionDynamic7_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.374392274 UTC

[section ""data" . Data.Dynamic.$tcDynamic_closure" {
     Data.Dynamic.$tcDynamic_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Dynamic.$trModule_closure+1;
         const Data.Dynamic.$fExceptionDynamic6_closure+1;
         const GHC.Types.krep$*_closure;
         const 12333845116585145369;
         const 13454739855111402131;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.376175041 UTC

[section ""data" . $krep4_r9Bhu_closure" {
     $krep4_r9Bhu_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Dynamic.$tcDynamic_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.377946117 UTC

[section ""data" . $krep5_r9Bhv_closure" {
     $krep5_r9Bhv_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r9Bhq_closure+2;
         const $krep4_r9Bhu_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.379779996 UTC

[section ""data" . Data.Dynamic.$tc'Dynamic1_closure" {
     Data.Dynamic.$tc'Dynamic1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r9Bht_closure+1;
         const $krep5_r9Bhv_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.381454615 UTC

[section ""cstring" . Data.Dynamic.$tc'Dynamic3_bytes" {
     Data.Dynamic.$tc'Dynamic3_bytes:
         I8[] [39,68,121,110,97,109,105,99]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.38318792 UTC

[section ""data" . Data.Dynamic.$tc'Dynamic2_closure" {
     Data.Dynamic.$tc'Dynamic2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Dynamic.$tc'Dynamic3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.384961949 UTC

[section ""data" . Data.Dynamic.$tc'Dynamic_closure" {
     Data.Dynamic.$tc'Dynamic_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Dynamic.$trModule_closure+1;
         const Data.Dynamic.$tc'Dynamic2_closure+1;
         const Data.Dynamic.$tc'Dynamic1_closure+4;
         const 11394777848779697579;
         const 644307381671950132;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.388941696 UTC

[section ""data" . Data.Dynamic.$fExceptionDynamic5_closure" {
     Data.Dynamic.$fExceptionDynamic5_closure:
         const Data.Dynamic.$fExceptionDynamic5_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Dynamic.$fExceptionDynamic5_entry() //  [R1]
         { []
         }
     {offset
       c9C15: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c9C16; else goto c9C17;
       c9C16: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9C17: // global
           (_c9C0X::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9C0X::I64 == 0) goto c9C0Z; else goto c9C0Y;
       c9C0Z: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9C0Y: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9C0X::I64;
           I64[Sp - 24] = block_c9C10_info;
           R6 = 0;
           R5 = Data.Dynamic.$fExceptionDynamic6_closure+1;
           R4 = Data.Dynamic.$trModule_closure+1;
           R3 = 13454739855111402131;
           R2 = 12333845116585145369;
           P64[Sp - 40] = GHC.Types.krep$*_closure;
           P64[Sp - 32] = GHC.Types.[]_closure+1;
           Sp = Sp - 40;
           call Data.Typeable.Internal.$wmkTrCon_entry(R6,
                                                       R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . Data.Dynamic.$fExceptionDynamic5_info" {
     Data.Dynamic.$fExceptionDynamic5_info:
         const Data.Dynamic.$fExceptionDynamic5_entry;
         const 0;
         const 4294967317;
         const S9Bm7_srt+48;
 },
 _c9C10() //  [R1, R2, R3, R4, R5]
         { []
         }
     {offset
       c9C10: // global
           I64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           I64[Sp] = R1;
           Sp = Sp - 40;
           call _c9C11() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9C10_info" {
     block_c9C10_info:
         const _c9C10;
         const 0;
         const 30;
 },
 _c9C11() //  []
         { []
         }
     {offset
       c9C11: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9C1a; else goto c9C19;
       c9C1a: // global
           HpAlloc = 48;
           I64[Sp] = block_c9C11_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 24;
       c9C19: // global
           I64[Hp - 40] = Data.Typeable.Internal.TrTyCon_con_info;
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = P64[Sp + 24];
           P64[Hp - 16] = P64[Sp + 32];
           I64[Hp - 8] = I64[Sp + 40];
           I64[Hp] = I64[Sp + 8];
           R1 = Hp - 38;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9C11_info" {
     block_c9C11_info:
         const _c9C11;
         const 1093;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.397347261 UTC

[section ""data" . Data.Dynamic.$fExceptionDynamic1_closure" {
     Data.Dynamic.$fExceptionDynamic1_closure:
         const Data.Dynamic.$fExceptionDynamic1_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Dynamic.$fExceptionDynamic1_entry() //  [R1]
         { []
         }
     {offset
       c9C1C: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9C1D; else goto c9C1E;
       c9C1D: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9C1E: // global
           (_c9C1z::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9C1z::I64 == 0) goto c9C1B; else goto c9C1A;
       c9C1B: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9C1A: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9C1z::I64;
           R2 = Data.Dynamic.$fExceptionDynamic2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Dynamic.$fExceptionDynamic1_info" {
     Data.Dynamic.$fExceptionDynamic1_info:
         const Data.Dynamic.$fExceptionDynamic1_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.402195164 UTC

[section ""data" . Data.Dynamic.$fExceptionDynamic_$cshow_closure" {
     Data.Dynamic.$fExceptionDynamic_$cshow_closure:
         const Data.Dynamic.$fExceptionDynamic_$cshow_info;
         const 0;
 },
 sat_s9BkI_entry() //  [R1]
         { []
         }
     {offset
       c9C1Z: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9C20; else goto c9C21;
       c9C20: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9C21: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = Data.Dynamic.$fExceptionDynamic3_closure+1;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.Dynamic.$fExceptionDynamic1_closure;
           Sp = Sp - 32;
           call Data.Typeable.Internal.showTypeable_entry(R3,
                                                          R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9BkI_info" {
     sat_s9BkI_info:
         const sat_s9BkI_entry;
         const 1;
         const 8800387989520;
         const S9Bm7_srt;
 },
 Data.Dynamic.$fExceptionDynamic_$cshow_entry() //  [R2]
         { []
         }
     {offset
       c9C22: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9C23; else goto c9C24;
       c9C23: // global
           R2 = R2;
           R1 = Data.Dynamic.$fExceptionDynamic_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9C24: // global
           I64[Sp - 8] = block_c9C1Q_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9C28; else goto c9C1R;
       u9C28: // global
           call _c9C1Q(R1) args: 0, res: 0, upd: 0;
       c9C1R: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.$fExceptionDynamic_$cshow_info" {
     Data.Dynamic.$fExceptionDynamic_$cshow_info:
         const Data.Dynamic.$fExceptionDynamic_$cshow_entry;
         const 0;
         const 26392574033934;
         const 4294967301;
         const S9Bm7_srt;
 },
 _c9C1Q() //  [R1]
         { []
         }
     {offset
       c9C1Q: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9C27; else goto c9C26;
       c9C27: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9C26: // global
           _s9BkG::P64 = P64[R1 + 7];
           I64[Hp - 16] = sat_s9BkI_info;
           P64[Hp] = _s9BkG::P64;
           R3 = Hp - 16;
           R2 = Data.Dynamic.$fExceptionDynamic4_bytes;
           Sp = Sp + 8;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9C1Q_info" {
     block_c9C1Q_info:
         const _c9C1Q;
         const 0;
         const 8800387989534;
         const S9Bm7_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.41127408 UTC

[section ""data" . Data.Dynamic.$fShowDynamic1_closure" {
     Data.Dynamic.$fShowDynamic1_closure:
         const Data.Dynamic.$fShowDynamic1_info;
         const 0;
 },
 f_s9BkN_entry() //  [R1]
         { []
         }
     {offset
       c9C2z: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9C2A; else goto c9C2B;
       c9C2A: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9C2B: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = Data.Dynamic.$fExceptionDynamic3_closure+1;
           Sp = Sp - 16;
           call Data.Typeable.Internal.showTypeable_entry(R3,
                                                          R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . f_s9BkN_info" {
     f_s9BkN_info:
         const f_s9BkN_entry;
         const 1;
         const 4294967312;
         const S9Bm7_srt;
 },
 sat_s9BkP_entry() //  [R1]
         { []
         }
     {offset
       c9C2P: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9C2Q; else goto c9C2R;
       c9C2Q: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9C2R: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = Data.Dynamic.$fExceptionDynamic2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9BkP_info" {
     sat_s9BkP_info:
         const sat_s9BkP_entry;
         const 1;
         const 16;
 },
 sat_s9BkQ_entry() //  [R1]
         { []
         }
     {offset
       c9C2S: // global
           _s9BkQ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9C2T; else goto c9C2U;
       c9C2U: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9C2W; else goto c9C2V;
       c9C2W: // global
           HpAlloc = 24;
           goto c9C2T;
       c9C2T: // global
           R1 = _s9BkQ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9C2V: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9BkQ::P64;
           _s9BkN::P64 = P64[_s9BkQ::P64 + 16];
           _s9BkO::P64 = P64[_s9BkQ::P64 + 24];
           I64[Hp - 16] = sat_s9BkP_info;
           P64[Hp] = _s9BkO::P64;
           R2 = Hp - 16;
           R1 = _s9BkN::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9BkQ_info" {
     sat_s9BkQ_info:
         const sat_s9BkQ_entry;
         const 2;
         const 18;
 },
 sat_s9BkR_entry() //  [R1, R2]
         { []
         }
     {offset
       c9C2X: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9C31; else goto c9C30;
       c9C31: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9C30: // global
           _s9BkN::P64 = P64[R1 + 7];
           I64[Hp - 24] = sat_s9BkQ_info;
           P64[Hp - 8] = _s9BkN::P64;
           P64[Hp] = R2;
           R3 = Hp - 24;
           R2 = Data.Dynamic.$fExceptionDynamic4_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s9BkR_info" {
     sat_s9BkR_info:
         const sat_s9BkR_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Data.Dynamic.$fShowDynamic1_entry() //  [R2]
         { []
         }
     {offset
       c9C32: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9C33; else goto c9C34;
       c9C33: // global
           R2 = R2;
           R1 = Data.Dynamic.$fShowDynamic1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9C34: // global
           I64[Sp - 8] = block_c9C2q_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9C38; else goto c9C2r;
       u9C38: // global
           call _c9C2q(R1) args: 0, res: 0, upd: 0;
       c9C2r: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.$fShowDynamic1_info" {
     Data.Dynamic.$fShowDynamic1_info:
         const Data.Dynamic.$fShowDynamic1_entry;
         const 0;
         const 35188667056142;
         const 4294967301;
         const S9Bm7_srt;
 },
 _c9C2q() //  [R1]
         { []
         }
     {offset
       c9C2q: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9C37; else goto c9C36;
       c9C37: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9C36: // global
           _s9BkL::P64 = P64[R1 + 7];
           I64[Hp - 32] = f_s9BkN_info;
           P64[Hp - 16] = _s9BkL::P64;
           I64[Hp - 8] = sat_s9BkR_info;
           P64[Hp] = Hp - 32;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9C2q_info" {
     block_c9C2q_info:
         const _c9C2q;
         const 0;
         const 4294967326;
         const S9Bm7_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.42412328 UTC

[section ""data" . Data.Dynamic.$fShowDynamic_$cshowList_closure" {
     Data.Dynamic.$fShowDynamic_$cshowList_closure:
         const Data.Dynamic.$fShowDynamic_$cshowList_info;
         const 0;
 },
 Data.Dynamic.$fShowDynamic_$cshowList_entry() //  [R2, R3]
         { []
         }
     {offset
       c9C3D: // global
           R4 = R3;
           R3 = R2;
           R2 = Data.Dynamic.$fShowDynamic1_closure+1;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.$fShowDynamic_$cshowList_info" {
     Data.Dynamic.$fShowDynamic_$cshowList_info:
         const Data.Dynamic.$fShowDynamic_$cshowList_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S9Bm7_srt+104;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.427383176 UTC

[section ""data" . Data.Dynamic.$fShowDynamic_closure" {
     Data.Dynamic.$fShowDynamic_closure:
         const GHC.Show.C:Show_con_info;
         const Data.Dynamic.$fShowDynamic_$cshowsPrec_closure+2;
         const Data.Dynamic.$fExceptionDynamic_$cshow_closure+1;
         const Data.Dynamic.$fShowDynamic_$cshowList_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.430573947 UTC

[section ""data" . Data.Dynamic.$fExceptionDynamic_$cfromException_closure" {
     Data.Dynamic.$fExceptionDynamic_$cfromException_closure:
         const Data.Dynamic.$fExceptionDynamic_$cfromException_info;
         const 0;
 },
 Data.Dynamic.$fExceptionDynamic_$cfromException_entry() //  [R2]
         { []
         }
     {offset
       c9C3S: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9C3W; else goto c9C3X;
       c9C3W: // global
           R2 = R2;
           R1 = Data.Dynamic.$fExceptionDynamic_$cfromException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9C3X: // global
           I64[Sp - 8] = block_c9C3P_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9C4i; else goto c9C3Q;
       u9C4i: // global
           call _c9C3P(R1) args: 0, res: 0, upd: 0;
       c9C3Q: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.$fExceptionDynamic_$cfromException_info" {
     Data.Dynamic.$fExceptionDynamic_$cfromException_info:
         const Data.Dynamic.$fExceptionDynamic_$cfromException_entry;
         const 0;
         const 52780853100558;
         const 4294967301;
         const S9Bm7_srt+16;
 },
 _c9C3P() //  [R1]
         { []
         }
     {offset
       c9C3P: // global
           I64[Sp - 8] = block_c9C3V_info;
           R2 = P64[R1 + 7];
           P64[Sp] = P64[R1 + 15];
           Sp = Sp - 8;
           call GHC.Exception.$p1Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9C3P_info" {
     block_c9C3P_info:
         const _c9C3P;
         const 0;
         const 35188667056158;
         const S9Bm7_srt+16;
 },
 _c9C3V() //  [R1]
         { []
         }
     {offset
       c9C3V: // global
           I64[Sp] = block_c9C42_info;
           R3 = Data.Dynamic.$fExceptionDynamic5_closure;
           R2 = R1;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9C3V_info" {
     block_c9C3V_info:
         const _c9C3V;
         const 1;
         const 35188667056158;
         const S9Bm7_srt+16;
 },
 _c9C42() //  [R1]
         { []
         }
     {offset
       c9C42: // global
           if (R1 & 7 == 1) goto c9C49; else goto c9C4d;
       c9C49: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9C4d: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9C4g; else goto c9C4f;
       c9C4g: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9C4f: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9C42_info" {
     block_c9C42_info:
         const _c9C42;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.440421899 UTC

[section ""data" . Data.Dynamic.$fExceptionDynamic_closure" {
     Data.Dynamic.$fExceptionDynamic_closure:
         const GHC.Exception.C:Exception_con_info;
         const Data.Dynamic.$fExceptionDynamic5_closure;
         const Data.Dynamic.$fShowDynamic_closure+1;
         const Data.Dynamic.$fExceptionDynamic_$ctoException_closure+1;
         const Data.Dynamic.$fExceptionDynamic_$cfromException_closure+1;
         const Data.Dynamic.$fExceptionDynamic_$cshow_closure+1;
         const 0;
 },
 section ""data" . Data.Dynamic.$fExceptionDynamic_$ctoException_closure" {
     Data.Dynamic.$fExceptionDynamic_$ctoException_closure:
         const Data.Dynamic.$fExceptionDynamic_$ctoException_info;
         const 0;
 },
 Data.Dynamic.$fExceptionDynamic_$ctoException_entry() //  [R2]
         { []
         }
     {offset
       c9C4J: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9C4N; else goto c9C4M;
       c9C4N: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Data.Dynamic.$fExceptionDynamic_$ctoException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9C4M: // global
           I64[Hp - 16] = GHC.Exception.SomeException_con_info;
           P64[Hp - 8] = Data.Dynamic.$fExceptionDynamic_closure+1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.$fExceptionDynamic_$ctoException_info" {
     Data.Dynamic.$fExceptionDynamic_$ctoException_info:
         const Data.Dynamic.$fExceptionDynamic_$ctoException_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const S9Bm7_srt+128;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.444479704 UTC

[section ""cstring" . lvl1_r9Bhw_bytes" {
     lvl1_r9Bhw_bytes:
         I8[] [84,121,112,101,32,101,114,114,111,114,32,105,110,32,100,121,110,97,109,105,99,32,97,112,112,108,105,99,97,116,105,111,110,46,10]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.446077004 UTC

[section ""cstring" . lvl2_r9Bhx_bytes" {
     lvl2_r9Bhx_bytes:
         I8[] [67,97,110,39,116,32,97,112,112,108,121,32,102,117,110,99,116,105,111,110,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.447670874 UTC

[section ""cstring" . lvl3_r9Bhy_bytes" {
     lvl3_r9Bhy_bytes:
         I8[] [32,116,111,32,97,114,103,117,109,101,110,116,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.454119659 UTC

[section ""data" . Data.Dynamic.dynApp1_closure" {
     Data.Dynamic.dynApp1_closure:
         const Data.Dynamic.dynApp1_info;
         const 0;
 },
 sat_s9Bl9_entry() //  [R1]
         { []
         }
     {offset
       c9C5z: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9C5A; else goto c9C5B;
       c9C5A: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9C5B: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = Data.Dynamic.$fExceptionDynamic3_closure+1;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.Dynamic.$fExceptionDynamic1_closure;
           Sp = Sp - 32;
           call Data.Typeable.Internal.showTypeable_entry(R3,
                                                          R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9Bl9_info" {
     sat_s9Bl9_info:
         const sat_s9Bl9_entry;
         const 1;
         const 8800387989520;
         const S9Bm7_srt;
 },
 sat_s9Bla_entry() //  [R1]
         { []
         }
     {offset
       c9C5C: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9C5D; else goto c9C5E;
       c9C5D: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9C5E: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9C5q_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9C5I; else goto c9C5r;
       u9C5I: // global
           call _c9C5q(R1) args: 0, res: 0, upd: 0;
       c9C5r: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9Bla_info" {
     sat_s9Bla_info:
         const sat_s9Bla_entry;
         const 1;
         const 8800387989520;
         const S9Bm7_srt;
 },
 _c9C5q() //  [R1]
         { []
         }
     {offset
       c9C5q: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9C5H; else goto c9C5G;
       c9C5H: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c9C5G: // global
           _s9Bl7::P64 = P64[R1 + 7];
           I64[Hp - 16] = sat_s9Bl9_info;
           P64[Hp] = _s9Bl7::P64;
           R3 = Hp - 16;
           R2 = Data.Dynamic.$fExceptionDynamic4_bytes;
           Sp = Sp + 8;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9C5q_info" {
     block_c9C5q_info:
         const _c9C5q;
         const 0;
         const 8800387989534;
         const S9Bm7_srt;
 },
 sat_s9Blb_entry() //  [R1]
         { []
         }
     {offset
       c9C5J: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9C5N; else goto c9C5M;
       c9C5N: // global
           HpAlloc = 24;
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9C5M: // global
           _s9Bl0::P64 = P64[R1 + 16];
           I64[Hp - 16] = sat_s9Bla_info;
           P64[Hp] = _s9Bl0::P64;
           R3 = Hp - 16;
           R2 = lvl3_r9Bhy_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s9Blb_info" {
     sat_s9Blb_info:
         const sat_s9Blb_entry;
         const 1;
         const 8800387989520;
         const S9Bm7_srt;
 },
 sat_s9Blc_entry() //  [R1]
         { []
         }
     {offset
       c9C5Q: // global
           _s9Blc::P64 = R1;
           if ((Sp + -48) < SpLim) (likely: False) goto c9C5R; else goto c9C5S;
       c9C5S: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9C5U; else goto c9C5T;
       c9C5U: // global
           HpAlloc = 24;
           goto c9C5R;
       c9C5R: // global
           R1 = _s9Blc::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9C5T: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9Blc::P64;
           _s9Bl0::P64 = P64[_s9Blc::P64 + 16];
           _s9Bl3::P64 = P64[_s9Blc::P64 + 24];
           I64[Hp - 16] = sat_s9Blb_info;
           P64[Hp] = _s9Bl0::P64;
           I64[Sp - 32] = block_c9C5O_info;
           R3 = _s9Bl3::P64;
           R2 = Data.Dynamic.$fExceptionDynamic3_closure+1;
           I64[Sp - 48] = stg_ap_p_info;
           P64[Sp - 40] = Data.Dynamic.$fExceptionDynamic1_closure;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 48;
           call Data.Typeable.Internal.showTypeable_entry(R3,
                                                          R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9Blc_info" {
     sat_s9Blc_info:
         const sat_s9Blc_entry;
         const 2;
         const 8800387989522;
         const S9Bm7_srt;
 },
 _c9C5O() //  [R1]
         { []
         }
     {offset
       c9C5O: // global
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9C5O_info" {
     block_c9C5O_info:
         const _c9C5O;
         const 1;
         const 30;
 },
 sat_s9Bld_entry() //  [R1]
         { []
         }
     {offset
       c9C5Y: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9C5Z; else goto c9C60;
       c9C5Z: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9C60: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c9C59_info;
           _s9Bl0::P64 = P64[R1 + 16];
           R1 = P64[R1 + 24];
           P64[Sp - 24] = _s9Bl0::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9C64; else goto c9C5a;
       u9C64: // global
           call _c9C59(R1) args: 0, res: 0, upd: 0;
       c9C5a: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9Bld_info" {
     sat_s9Bld_info:
         const sat_s9Bld_entry;
         const 2;
         const 8800387989522;
         const S9Bm7_srt;
 },
 _c9C59() //  [R1]
         { []
         }
     {offset
       c9C59: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9C63; else goto c9C62;
       c9C63: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c9C62: // global
           _s9Bl3::P64 = P64[R1 + 7];
           I64[Hp - 24] = sat_s9Blc_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = _s9Bl3::P64;
           R3 = Hp - 24;
           R2 = Data.Dynamic.$fExceptionDynamic4_bytes;
           Sp = Sp + 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9C59_info" {
     block_c9C59_info:
         const _c9C59;
         const 1;
         const 8800387989534;
         const S9Bm7_srt;
 },
 sat_s9Ble_entry() //  [R1]
         { []
         }
     {offset
       c9C65: // global
           _s9Ble::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9C66; else goto c9C67;
       c9C67: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9C69; else goto c9C68;
       c9C69: // global
           HpAlloc = 32;
           goto c9C66;
       c9C66: // global
           R1 = _s9Ble::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9C68: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9Ble::P64;
           _s9Bl0::P64 = P64[_s9Ble::P64 + 16];
           _s9Bl1::P64 = P64[_s9Ble::P64 + 24];
           I64[Hp - 24] = sat_s9Bld_info;
           P64[Hp - 8] = _s9Bl0::P64;
           P64[Hp] = _s9Bl1::P64;
           R3 = Hp - 24;
           R2 = lvl2_r9Bhx_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9Ble_info" {
     sat_s9Ble_info:
         const sat_s9Ble_entry;
         const 2;
         const 8800387989522;
         const S9Bm7_srt;
 },
 Data.Dynamic.dynApp1_entry() //  [R2, R3]
         { []
         }
     {offset
       c9C6c: // global
           _s9Bl1::P64 = R3;
           _s9Bl0::P64 = R2;
           if ((Sp + -8) < SpLim) (likely: False) goto c9C6d; else goto c9C6e;
       c9C6e: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9C6g; else goto c9C6f;
       c9C6g: // global
           HpAlloc = 32;
           goto c9C6d;
       c9C6d: // global
           R3 = _s9Bl1::P64;
           R2 = _s9Bl0::P64;
           R1 = Data.Dynamic.dynApp1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9C6f: // global
           I64[Hp - 24] = sat_s9Ble_info;
           P64[Hp - 8] = _s9Bl0::P64;
           P64[Hp] = _s9Bl1::P64;
           I64[Sp - 8] = block_c9C6a_info;
           R3 = Hp - 24;
           R2 = lvl1_r9Bhw_bytes;
           Sp = Sp - 8;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.dynApp1_info" {
     Data.Dynamic.dynApp1_info:
         const Data.Dynamic.dynApp1_entry;
         const 0;
         const 3386500108517390;
         const 8589934607;
         const S9Bm7_srt;
 },
 _c9C6a() //  [R1]
         { []
         }
     {offset
       c9C6a: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9C6a_info" {
     block_c9C6a_info:
         const _c9C6a;
         const 0;
         const 4294967326;
         const S9Bm7_srt+144;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.475791201 UTC

[section ""data" . Data.Dynamic.dynApp_closure" {
     Data.Dynamic.dynApp_closure:
         const Data.Dynamic.dynApp_info;
         const 0;
 },
 Data.Dynamic.dynApp_entry() //  [R2, R3]
         { []
         }
     {offset
       c9C7c: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9C7d; else goto c9C7e;
       c9C7d: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Dynamic.dynApp_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9C7e: // global
           I64[Sp - 24] = block_c9C76_info;
           _s9Blh::P64 = R3;
           R3 = R3;
           _s9Blg::P64 = R2;
           R2 = R2;
           P64[Sp - 16] = _s9Blg::P64;
           P64[Sp - 8] = _s9Blh::P64;
           Sp = Sp - 24;
           call Data.Dynamic.dynApply_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.dynApp_info" {
     Data.Dynamic.dynApp_info:
         const Data.Dynamic.dynApp_entry;
         const 0;
         const 13198434500622;
         const 8589934607;
         const S9Bm7_srt+72;
 },
 _c9C76() //  [R1]
         { []
         }
     {offset
       c9C76: // global
           if (R1 & 7 == 1) goto c9C79; else goto c9C7a;
       c9C79: // global
           R3 = P64[Sp + 8];
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call Data.Dynamic.dynApp1_entry(R3, R2) args: 8, res: 0, upd: 8;
       c9C7a: // global
           R1 = P64[R1 + 6] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9C76_info" {
     block_c9C76_info:
         const _c9C76;
         const 2;
         const 4294967326;
         const S9Bm7_srt+152;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.481670796 UTC

[section ""data" . Data.Dynamic.Dynamic_closure" {
     Data.Dynamic.Dynamic_closure:
         const Data.Dynamic.Dynamic_info;
 },
 Data.Dynamic.Dynamic_entry() //  [R2, R3]
         { []
         }
     {offset
       c9C7C: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9C7G; else goto c9C7F;
       c9C7G: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Data.Dynamic.Dynamic_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9C7F: // global
           I64[Hp - 16] = Data.Dynamic.Dynamic_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.Dynamic_info" {
     Data.Dynamic.Dynamic_info:
         const Data.Dynamic.Dynamic_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.485233284 UTC

[section ""cstring" . i9BMT_str" {
     i9BMT_str:
         I8[] [98,97,115,101,58,68,97,116,97,46,68,121,110,97,109,105,99,46,68,121,110,97,109,105,99]
 },
 Data.Dynamic.Dynamic_con_entry() //  [R1]
         { []
         }
     {offset
       c9C7M: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.Dynamic_con_info" {
     Data.Dynamic.Dynamic_con_info:
         const Data.Dynamic.Dynamic_con_entry;
         const 2;
         const 4;
         const i9BMT_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:43.488334939 UTC

[section ""relreadonly" . S9Bm7_srt" {
     S9Bm7_srt:
         const Data.Typeable.Internal.showTypeable_closure;
         const Data.Dynamic.$w$cshowsPrec_closure;
         const Data.Typeable.Internal.sameTypeRep_closure;
         const Data.Dynamic.fromDyn_closure;
         const Data.Dynamic.fromDynamic_closure;
         const Data.Typeable.Internal.mkTrApp_closure;
         const Data.Typeable.Internal.$wmkTrCon_closure;
         const Data.Typeable.Internal.fpTYPELiftedRep_closure;
         const Data.Typeable.Internal.$mApp1_closure;
         const Data.Dynamic.dynApply_closure;
         const lvl_r9Bhp_closure;
         const Data.Dynamic.$fExceptionDynamic1_closure;
         const Data.Dynamic.$fExceptionDynamic_$cshow_closure;
         const Data.Dynamic.$fShowDynamic1_closure;
         const Data.Dynamic.$fExceptionDynamic_$cfromException_closure;
         const Data.Dynamic.$fExceptionDynamic5_closure;
         const Data.Dynamic.$fExceptionDynamic_closure;
         const Data.Dynamic.$fExceptionDynamic_$ctoException_closure;
         const GHC.Err.errorWithoutStackTrace_closure;
         const Data.Dynamic.dynApp1_closure;
         const Data.Dynamic.dynApp_closure;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.132105398 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:04:44.134375426 UTC

[section ""data" . Data.Dynamic.$fExceptionDynamic3_closure" {
     Data.Dynamic.$fExceptionDynamic3_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.135939841 UTC

[section ""cstring" . Data.Dynamic.$fExceptionDynamic4_bytes" {
     Data.Dynamic.$fExceptionDynamic4_bytes:
         I8[] [60,60]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.137639466 UTC

[section ""cstring" . Data.Dynamic.$fExceptionDynamic2_bytes" {
     Data.Dynamic.$fExceptionDynamic2_bytes:
         I8[] [62,62]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.141923306 UTC

[section ""data" . Data.Dynamic.$w$cshowsPrec_closure" {
     Data.Dynamic.$w$cshowsPrec_closure:
         const Data.Dynamic.$w$cshowsPrec_info;
         const 0;
 },
 f_s9C7X_entry() //  [R1]
         { []
         }
     {offset
       c9CbT: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9CbU; else goto c9CbV;
       c9CbU: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9CbV: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = Data.Dynamic.$fExceptionDynamic3_closure+1;
           Sp = Sp - 16;
           call Data.Typeable.Internal.showTypeable_entry(R3,
                                                          R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . f_s9C7X_info" {
     f_s9C7X_info:
         const f_s9C7X_entry;
         const 1;
         const 4294967312;
         const S9Cct_srt;
 },
 sat_s9C7Z_entry() //  [R1]
         { []
         }
     {offset
       c9Cc9: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9Cca; else goto c9Ccb;
       c9Cca: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9Ccb: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = Data.Dynamic.$fExceptionDynamic2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9C7Z_info" {
     sat_s9C7Z_info:
         const sat_s9C7Z_entry;
         const 1;
         const 16;
 },
 sat_s9C80_entry() //  [R1]
         { []
         }
     {offset
       c9Ccc: // global
           _s9C80::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9Ccd; else goto c9Cce;
       c9Cce: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9Ccg; else goto c9Ccf;
       c9Ccg: // global
           HpAlloc = 24;
           goto c9Ccd;
       c9Ccd: // global
           R1 = _s9C80::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9Ccf: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9C80::P64;
           _s9C7X::P64 = P64[_s9C80::P64 + 16];
           _s9C7Y::P64 = P64[_s9C80::P64 + 24];
           I64[Hp - 16] = sat_s9C7Z_info;
           P64[Hp] = _s9C7Y::P64;
           R2 = Hp - 16;
           R1 = _s9C7X::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9C80_info" {
     sat_s9C80_info:
         const sat_s9C80_entry;
         const 2;
         const 18;
 },
 sat_s9C81_entry() //  [R1, R2]
         { []
         }
     {offset
       c9Cch: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9Ccl; else goto c9Cck;
       c9Ccl: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9Cck: // global
           _s9C7X::P64 = P64[R1 + 7];
           I64[Hp - 24] = sat_s9C80_info;
           P64[Hp - 8] = _s9C7X::P64;
           P64[Hp] = R2;
           R3 = Hp - 24;
           R2 = Data.Dynamic.$fExceptionDynamic4_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s9C81_info" {
     sat_s9C81_info:
         const sat_s9C81_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Data.Dynamic.$w$cshowsPrec_entry() //  [R2]
         { []
         }
     {offset
       c9Ccm: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9Ccn; else goto c9Cco;
       c9Ccn: // global
           R2 = R2;
           R1 = Data.Dynamic.$w$cshowsPrec_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9Cco: // global
           I64[Sp - 8] = block_c9CbK_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Ccs; else goto c9CbL;
       u9Ccs: // global
           call _c9CbK(R1) args: 0, res: 0, upd: 0;
       c9CbL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.$w$cshowsPrec_info" {
     Data.Dynamic.$w$cshowsPrec_info:
         const Data.Dynamic.$w$cshowsPrec_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const S9Cct_srt;
 },
 _c9CbK() //  [R1]
         { []
         }
     {offset
       c9CbK: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9Ccr; else goto c9Ccq;
       c9Ccr: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9Ccq: // global
           _s9C7V::P64 = P64[R1 + 7];
           I64[Hp - 32] = f_s9C7X_info;
           P64[Hp - 16] = _s9C7V::P64;
           I64[Hp - 8] = sat_s9C81_info;
           P64[Hp] = Hp - 32;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9CbK_info" {
     block_c9CbK_info:
         const _c9CbK;
         const 0;
         const 4294967326;
         const S9Cct_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.153421667 UTC

[section ""data" . Data.Dynamic.$fShowDynamic_$cshowsPrec_closure" {
     Data.Dynamic.$fShowDynamic_$cshowsPrec_closure:
         const Data.Dynamic.$fShowDynamic_$cshowsPrec_info;
         const 0;
 },
 Data.Dynamic.$fShowDynamic_$cshowsPrec_entry() //  [R3]
         { []
         }
     {offset
       c9Cd6: // global
           R2 = R3;
           call Data.Dynamic.$w$cshowsPrec_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.$fShowDynamic_$cshowsPrec_info" {
     Data.Dynamic.$fShowDynamic_$cshowsPrec_info:
         const Data.Dynamic.$fShowDynamic_$cshowsPrec_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S9Cct_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.15681362 UTC

[section ""data" . Data.Dynamic.toDyn_closure" {
     Data.Dynamic.toDyn_closure:
         const Data.Dynamic.toDyn_info;
 },
 Data.Dynamic.toDyn_entry() //  [R2, R3]
         { []
         }
     {offset
       c9Cdi: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9Cdm; else goto c9Cdl;
       c9Cdm: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Data.Dynamic.toDyn_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9Cdl: // global
           I64[Hp - 16] = Data.Dynamic.Dynamic_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.toDyn_info" {
     Data.Dynamic.toDyn_info:
         const Data.Dynamic.toDyn_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.161116389 UTC

[section ""data" . Data.Dynamic.fromDyn_closure" {
     Data.Dynamic.fromDyn_closure:
         const Data.Dynamic.fromDyn_info;
         const 0;
 },
 Data.Dynamic.fromDyn_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c9CdA: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9CdB; else goto c9CdC;
       c9CdB: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Dynamic.fromDyn_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9CdC: // global
           I64[Sp - 24] = block_c9Cdx_info;
           R1 = R3;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9CdS; else goto c9Cdy;
       u9CdS: // global
           call _c9Cdx(R1) args: 0, res: 0, upd: 0;
       c9Cdy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.fromDyn_info" {
     Data.Dynamic.fromDyn_info:
         const Data.Dynamic.fromDyn_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S9Cct_srt+16;
 },
 _c9Cdx() //  [R1]
         { []
         }
     {offset
       c9Cdx: // global
           I64[Sp] = block_c9CdF_info;
           R3 = P64[Sp + 8];
           R2 = P64[R1 + 7];
           P64[Sp + 8] = P64[R1 + 15];
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9Cdx_info" {
     block_c9Cdx_info:
         const _c9Cdx;
         const 2;
         const 4294967326;
         const S9Cct_srt+16;
 },
 _c9CdF() //  [R1]
         { []
         }
     {offset
       c9CdF: // global
           if (R1 & 7 == 1) goto c9CdM; else goto c9CdQ;
       c9CdM: // global
           R1 = P64[Sp + 16];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c9CdQ: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9CdF_info" {
     block_c9CdF_info:
         const _c9CdF;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.168264181 UTC

[section ""data" . Data.Dynamic.fromDynamic_closure" {
     Data.Dynamic.fromDynamic_closure:
         const Data.Dynamic.fromDynamic_info;
         const 0;
 },
 Data.Dynamic.fromDynamic_entry() //  [R2, R3]
         { []
         }
     {offset
       c9Ceh: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9Cei; else goto c9Cej;
       c9Cei: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Dynamic.fromDynamic_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9Cej: // global
           I64[Sp - 16] = block_c9Cee_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9CeC; else goto c9Cef;
       u9CeC: // global
           call _c9Cee(R1) args: 0, res: 0, upd: 0;
       c9Cef: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.fromDynamic_info" {
     Data.Dynamic.fromDynamic_info:
         const Data.Dynamic.fromDynamic_entry;
         const 0;
         const 21474836494;
         const 8589934607;
         const S9Cct_srt+16;
 },
 _c9Cee() //  [R1]
         { []
         }
     {offset
       c9Cee: // global
           I64[Sp] = block_c9Cem_info;
           R3 = P64[Sp + 8];
           R2 = P64[R1 + 7];
           P64[Sp + 8] = P64[R1 + 15];
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9Cee_info" {
     block_c9Cee_info:
         const _c9Cee;
         const 1;
         const 4294967326;
         const S9Cct_srt+16;
 },
 _c9Cem() //  [R1]
         { []
         }
     {offset
       c9Cem: // global
           if (R1 & 7 == 1) goto c9Cet; else goto c9Cex;
       c9Cet: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9Cex: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9CeA; else goto c9Cez;
       c9CeA: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9Cez: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9Cem_info" {
     block_c9Cem_info:
         const _c9Cem;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.176653524 UTC

[section ""data" . lvl_r9Bhp_closure" {
     lvl_r9Bhp_closure:
         const lvl_r9Bhp_info;
         const 0;
         const 0;
         const 0;
 },
 lvl_r9Bhp_entry() //  [R1]
         { []
         }
     {offset
       c9Cff: // global
           if ((Sp + -104) < SpLim) (likely: False) goto c9Cfg; else goto c9Cfh;
       c9Cfg: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9Cfh: // global
           (_c9Cf2::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9Cf2::I64 == 0) goto c9Cf4; else goto c9Cf3;
       c9Cf4: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9Cf3: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9Cf2::I64;
           I64[Sp - 24] = block_c9Cf5_info;
           R6 = 0;
           R5 = GHC.Types.$tcTYPE2_closure;
           R4 = GHC.Types.tr$ModuleGHCPrim_closure;
           R3 = 12502576999761269576;
           R2 = 16277905407886699876;
           P64[Sp - 40] = GHC.Types.$tcTYPE1_closure;
           P64[Sp - 32] = GHC.Types.[]_closure+1;
           Sp = Sp - 40;
           call Data.Typeable.Internal.$wmkTrCon_entry(R6,
                                                       R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . lvl_r9Bhp_info" {
     lvl_r9Bhp_info:
         const lvl_r9Bhp_entry;
         const 0;
         const 12884901909;
         const S9Cct_srt+40;
 },
 _c9Cf5() //  [R1, R2, R3, R4, R5]
         { []
         }
     {offset
       c9Cf5: // global
           I64[Sp - 40] = block_c9Cf9_info;
           R6 = 0;
           _s9C8m::P64 = R5;
           R5 = GHC.Types.$tc'LiftedRep1_closure;
           _s9C8l::P64 = R4;
           R4 = GHC.Types.tr$ModuleGHCPrim_closure;
           _s9C8k::P64 = R3;
           R3 = 5595830777317938557;
           _s9C8j::I64 = R2;
           R2 = 16105171405184389724;
           P64[Sp - 56] = GHC.Types.$tc'AddrRep1_closure;
           P64[Sp - 48] = GHC.Types.[]_closure+1;
           I64[Sp - 32] = _s9C8j::I64;
           P64[Sp - 24] = _s9C8k::P64;
           P64[Sp - 16] = _s9C8l::P64;
           P64[Sp - 8] = _s9C8m::P64;
           I64[Sp] = R1;
           Sp = Sp - 56;
           call Data.Typeable.Internal.$wmkTrCon_entry(R6,
                                                       R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c9Cf5_info" {
     block_c9Cf5_info:
         const _c9Cf5;
         const 0;
         const 12884901918;
         const S9Cct_srt+40;
 },
 _c9Cf9() //  [R1, R2, R3, R4, R5]
         { []
         }
     {offset
       c9Cf9: // global
           I64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           I64[Sp] = R1;
           Sp = Sp - 40;
           call _c9Cfa() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9Cf9_info" {
     block_c9Cf9_info:
         const _c9Cf9;
         const 1093;
         const 4294967326;
         const S9Cct_srt+40;
 },
 _c9Cfa() //  []
         { []
         }
     {offset
       c9Cfa: // global
           Hp = Hp + 96;
           if (Hp > HpLim) (likely: False) goto c9Cfl; else goto c9Cfk;
       c9Cfl: // global
           HpAlloc = 96;
           I64[Sp] = block_c9Cfa_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 24;
       c9Cfk: // global
           I64[Hp - 88] = Data.Typeable.Internal.TrTyCon_con_info;
           P64[Hp - 80] = P64[Sp + 16];
           P64[Hp - 72] = P64[Sp + 24];
           P64[Hp - 64] = P64[Sp + 32];
           I64[Hp - 56] = I64[Sp + 40];
           I64[Hp - 48] = I64[Sp + 8];
           I64[Hp - 40] = Data.Typeable.Internal.TrTyCon_con_info;
           P64[Hp - 32] = P64[Sp + 56];
           P64[Hp - 24] = P64[Sp + 64];
           P64[Hp - 16] = P64[Sp + 72];
           I64[Hp - 8] = I64[Sp + 80];
           I64[Hp] = I64[Sp + 48];
           R3 = Hp - 86;
           R2 = Hp - 38;
           Sp = Sp + 88;
           call Data.Typeable.Internal.mkTrApp_entry(R3,
                                                     R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9Cfa_info" {
     block_c9Cfa_info:
         const _c9Cfa;
         const 35914;
         const 4294967326;
         const S9Cct_srt+40;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.198106809 UTC

[section ""data" . Data.Dynamic.dynApply_closure" {
     Data.Dynamic.dynApply_closure:
         const Data.Dynamic.dynApply_info;
         const 0;
 },
 Data.Dynamic.dynApply_entry() //  [R2, R3]
         { []
         }
     {offset
       c9Cg7: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c9Cg8; else goto c9Cg9;
       c9Cg8: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Dynamic.dynApply_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9Cg9: // global
           I64[Sp - 16] = block_c9Cg4_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9Cmg; else goto c9Cg5;
       u9Cmg: // global
           call _c9Cg4(R1) args: 0, res: 0, upd: 0;
       c9Cg5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.dynApply_info" {
     Data.Dynamic.dynApply_info:
         const Data.Dynamic.dynApply_entry;
         const 0;
         const 2065879269390;
         const 8589934607;
         const S9Cct_srt+16;
 },
 _c9Cg4() //  [R1]
         { []
         }
     {offset
       c9Cg4: // global
           I64[Sp - 8] = block_c9Cgc_info;
           _s9C8z::P64 = P64[R1 + 15];
           R1 = P64[R1 + 7];
           P64[Sp] = _s9C8z::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Cmf; else goto c9Cge;
       u9Cmf: // global
           call _c9Cgc(R1) args: 0, res: 0, upd: 0;
       c9Cge: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9Cg4_info" {
     block_c9Cg4_info:
         const _c9Cg4;
         const 1;
         const 1516123455518;
         const S9Cct_srt+16;
 },
 _c9Cgc() //  [R1]
         { []
         }
     {offset
       c9Cgc: // global
           if (R1 & 7 == 4) goto c9Cgp; else goto u9ClP;
       c9Cgp: // global
           I64[Sp - 8] = block_c9Cgn_info;
           _s9C8D::P64 = P64[R1 + 4];
           _s9C8E::P64 = P64[R1 + 12];
           R1 = P64[Sp + 16];
           P64[Sp] = _s9C8E::P64;
           P64[Sp + 16] = _s9C8D::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Cmh; else goto c9Cgq;
       u9Cmh: // global
           call _c9Cgn(R1) args: 0, res: 0, upd: 0;
       c9Cgq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       u9ClP: // global
           Sp = Sp + 24;
           call _c9Clp() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9Cgc_info" {
     block_c9Cgc_info:
         const _c9Cgc;
         const 2;
         const 1516123455518;
         const S9Cct_srt+16;
 },
 _c9Cgn() //  [R1]
         { []
         }
     {offset
       c9Cgn: // global
           I64[Sp] = block_c9Cgu_info;
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 24];
           P64[Sp + 24] = P64[R1 + 15];
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9Cgn_info" {
     block_c9Cgn_info:
         const _c9Cgn;
         const 3;
         const 1516123455518;
         const S9Cct_srt+16;
 },
 _c9Cgu() //  [R1]
         { []
         }
     {offset
       c9Cgu: // global
           if (R1 & 7 == 1) goto u9ClQ; else goto c9CgG;
       u9ClQ: // global
           Sp = Sp + 32;
           call _c9Clp() args: 0, res: 0, upd: 0;
       c9CgG: // global
           _s9C8E::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9CgE_info;
           R1 = _s9C8E::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9Cmj; else goto c9CgH;
       u9Cmj: // global
           call _c9CgE(R1) args: 0, res: 0, upd: 0;
       c9CgH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9Cgu_info" {
     block_c9Cgu_info:
         const _c9Cgu;
         const 3;
         const 1516123455518;
         const S9Cct_srt+16;
 },
 _c9CgE() //  [R1]
         { []
         }
     {offset
       c9CgE: // global
           _c9ClB::P64 = R1 & 7;
           if (_c9ClB::P64 < 3) goto u9ClI; else goto u9ClJ;
       u9ClI: // global
           if (_c9ClB::P64 < 2) goto c9Chj; else goto c9Cj6;
       c9Chj: // global
           I64[Sp - 8] = block_c9CgN_info;
           _s9C8J::P64 = R1;
           R1 = lvl_r9Bhp_closure;
           P64[Sp] = _s9C8J::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Cml; else goto c9Chk;
       u9Cml: // global
           call _c9CgN(R1) args: 0, res: 0, upd: 0;
       c9Chk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9Cj6: // global
           I64[Sp - 16] = block_c9ChJ_info;
           _s9C8J::P64 = R1;
           _s9C9c::P64 = P64[R1 + 22];
           R1 = lvl_r9Bhp_closure;
           P64[Sp - 8] = _s9C9c::P64;
           P64[Sp] = _s9C8J::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9Cmm; else goto c9Cj7;
       u9Cmm: // global
           call _c9ChJ(R1) args: 0, res: 0, upd: 0;
       c9Cj7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       u9ClJ: // global
           if (_c9ClB::P64 < 4) goto c9CkT; else goto c9Clj;
       c9CkT: // global
           I64[Sp - 16] = block_c9Cjw_info;
           _s9C8J::P64 = R1;
           _s9C9Y::P64 = P64[R1 + 21];
           R1 = lvl_r9Bhp_closure;
           P64[Sp - 8] = _s9C9Y::P64;
           P64[Sp] = _s9C8J::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9Cmn; else goto c9CkU;
       u9Cmn: // global
           call _c9Cjw(R1) args: 0, res: 0, upd: 0;
       c9CkU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9Clj: // global
           I64[Sp - 8] = block_c9Clh_info;
           R3 = Data.Typeable.Internal.$mApp1_closure;
           R2 = lvl_r9Bhp_closure;
           P64[Sp] = R1;
           Sp = Sp - 8;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9CgE_info" {
     block_c9CgE_info:
         const _c9CgE;
         const 2;
         const 1516123455518;
         const S9Cct_srt+16;
 },
 _c9CgN() //  [R1]
         { []
         }
     {offset
       c9CgN: // global
           _c9ClH::P64 = R1 & 7;
           if (_c9ClH::P64 < 3) goto u9ClK; else goto c9ChE;
       u9ClK: // global
           if (_c9ClH::P64 < 2) goto c9Chr; else goto c9ChA;
       c9Chr: // global
           I64[Sp] = block_c9Cho_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u9Cmo; else goto c9Chs;
       u9Cmo: // global
           call _c9Cho(R1) args: 0, res: 0, upd: 0;
       c9Chs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9ChA: // global
           I64[Sp] = I64[R1 + 30];
           I64[Sp - 8] = I64[R1 + 38];
           Sp = Sp - 8;
           goto u9Cmq;
       c9ChE: // global
           I64[Sp] = I64[R1 + 29];
           I64[Sp - 8] = I64[R1 + 37];
           Sp = Sp - 8;
           goto u9Cmq;
       u9Cmq: // global
           call _s9C8K() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9CgN_info" {
     block_c9CgN_info:
         const _c9CgN;
         const 3;
         const 4294967326;
         const S9Cct_srt+56;
 },
 _c9Cho() //  [R1]
         { []
         }
     {offset
       c9Cho: // global
           I64[Sp - 8] = I64[R1 + 15];
           I64[Sp] = I64[R1 + 7];
           Sp = Sp - 8;
           call _s9C8K() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9Cho_info" {
     block_c9Cho_info:
         const _c9Cho;
         const 3;
         const 4294967326;
         const S9Cct_srt+56;
 },
 _s9C8K() //  []
         { []
         }
     {offset
       s9C8K: // global
           I64[Sp - 8] = block_c9CgS_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9CmR; else goto c9CgU;
       u9CmR: // global
           call _c9CgS(R1) args: 0, res: 0, upd: 0;
       c9CgU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9CgS() //  [R1]
         { []
         }
     {offset
       c9CgS: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c9Ch0; else goto c9CgZ;
       c9Ch0: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9CgZ: // global
           if (I64[Sp + 16] == I64[R1 + 7]) goto c9Chh; else goto u9ClU;
       c9Chh: // global
           if (I64[Sp + 8] == I64[R1 + 15]) goto c9Chg; else goto u9ClV;
       c9Chg: // global
           I64[Hp - 64] = stg_ap_2_upd_info;
           P64[Hp - 48] = P64[Sp + 32];
           P64[Hp - 40] = P64[Sp + 40];
           I64[Hp - 32] = Data.Dynamic.Dynamic_con_info;
           P64[Hp - 24] = P64[Sp + 24];
           P64[Hp - 16] = Hp - 64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 6;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u9ClV: // global
           Sp = Sp + 48;
           goto u9Cms;
       u9ClU: // global
           Sp = Sp + 48;
           goto u9Cms;
       u9Cms: // global
           call _c9CkL() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9CgS_info" {
     block_c9CgS_info:
         const _c9CgS;
         const 197;
         const 30;
 },
 _c9ChJ() //  [R1]
         { []
         }
     {offset
       c9ChJ: // global
           _c9ClF::P64 = R1 & 7;
           if (_c9ClF::P64 < 3) goto u9ClL; else goto c9Cjr;
       u9ClL: // global
           if (_c9ClF::P64 < 2) goto c9Cje; else goto c9Cjn;
       c9Cje: // global
           I64[Sp] = block_c9Cjb_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u9Cmu; else goto c9Cjf;
       u9Cmu: // global
           call _c9Cjb(R1) args: 0, res: 0, upd: 0;
       c9Cjf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9Cjn: // global
           I64[Sp] = I64[R1 + 30];
           I64[Sp - 8] = I64[R1 + 38];
           Sp = Sp - 8;
           goto u9Cmw;
       c9Cjr: // global
           I64[Sp] = I64[R1 + 29];
           I64[Sp - 8] = I64[R1 + 37];
           Sp = Sp - 8;
           goto u9Cmw;
       u9Cmw: // global
           call _s9C9d() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9ChJ_info" {
     block_c9ChJ_info:
         const _c9ChJ;
         const 4;
         const 4294967326;
         const S9Cct_srt+56;
 },
 _c9Cjb() //  [R1]
         { []
         }
     {offset
       c9Cjb: // global
           I64[Sp - 8] = I64[R1 + 15];
           I64[Sp] = I64[R1 + 7];
           Sp = Sp - 8;
           call _s9C9d() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9Cjb_info" {
     block_c9Cjb_info:
         const _c9Cjb;
         const 4;
         const 4294967326;
         const S9Cct_srt+56;
 },
 _s9C9d() //  []
         { []
         }
     {offset
       s9C9d: // global
           I64[Sp - 8] = block_c9ChO_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9CmS; else goto c9ChQ;
       u9CmS: // global
           call _c9ChO(R1) args: 0, res: 0, upd: 0;
       c9ChQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ChO() //  [R1]
         { []
         }
     {offset
       c9ChO: // global
           _s9C8z::P64 = P64[Sp + 40];
           _s9C8H::P64 = P64[Sp + 48];
           _s9C8J::P64 = P64[Sp + 32];
           _s9C9e::I64 = I64[Sp + 16];
           _s9C9f::I64 = I64[Sp + 8];
           _c9ClG::P64 = R1 & 7;
           if (_c9ClG::P64 < 3) goto u9ClM; else goto c9CiJ;
       u9ClM: // global
           if (_c9ClG::P64 < 2) goto c9ChX; else goto c9Cim;
       c9ChX: // global
           I64[Sp] = block_c9ChU_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u9Cmx; else goto c9ChY;
       u9Cmx: // global
           call _c9ChU(R1) args: 0, res: 0, upd: 0;
       c9ChY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9Cim: // global
           Hp = Hp + 72;
           _s9C9g::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c9CiO; else goto c9Ciq;
       c9Ciq: // global
           if (_s9C9e::I64 == I64[_s9C9g::P64 + 30]) goto c9CiI; else goto u9Cm1;
       c9CiI: // global
           if (_s9C9f::I64 == I64[_s9C9g::P64 + 38]) goto c9CiH; else goto u9Cm2;
       c9CiH: // global
           I64[Hp - 64] = stg_ap_2_upd_info;
           P64[Hp - 48] = _s9C8z::P64;
           P64[Hp - 40] = _s9C8H::P64;
           I64[Hp - 32] = Data.Dynamic.Dynamic_con_info;
           P64[Hp - 24] = _s9C8J::P64;
           P64[Hp - 16] = Hp - 64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 6;
           Sp = Sp + 56;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u9Cm2: // global
           Sp = Sp + 56;
           goto u9CmB;
       u9Cm1: // global
           Sp = Sp + 56;
           goto u9CmB;
       c9CiJ: // global
           Hp = Hp + 72;
           _s9C9g::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c9CiO; else goto c9CiN;
       c9CiO: // global
           HpAlloc = 72;
           R1 = _s9C9g::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9CiN: // global
           if (_s9C9e::I64 == I64[_s9C9g::P64 + 29]) goto c9Cj5; else goto u9Cm3;
       c9Cj5: // global
           if (_s9C9f::I64 == I64[_s9C9g::P64 + 37]) goto c9Cj4; else goto u9Cm4;
       c9Cj4: // global
           I64[Hp - 64] = stg_ap_2_upd_info;
           P64[Hp - 48] = _s9C8z::P64;
           P64[Hp - 40] = _s9C8H::P64;
           I64[Hp - 32] = Data.Dynamic.Dynamic_con_info;
           P64[Hp - 24] = _s9C8J::P64;
           P64[Hp - 16] = Hp - 64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 6;
           Sp = Sp + 56;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u9Cm4: // global
           Sp = Sp + 56;
           goto u9CmB;
       u9Cm3: // global
           Sp = Sp + 56;
           goto u9CmB;
       u9CmB: // global
           call _c9CkL() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9ChO_info" {
     block_c9ChO_info:
         const _c9ChO;
         const 454;
         const 4294967326;
         const S9Cct_srt+56;
 },
 _c9ChU() //  [R1]
         { []
         }
     {offset
       c9ChU: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c9Ci4; else goto c9Ci3;
       c9Ci4: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9Ci3: // global
           if (I64[Sp + 16] == I64[R1 + 7]) goto c9Cil; else goto u9ClZ;
       c9Cil: // global
           if (I64[Sp + 8] == I64[R1 + 15]) goto c9Cik; else goto u9Cm0;
       c9Cik: // global
           I64[Hp - 64] = stg_ap_2_upd_info;
           P64[Hp - 48] = P64[Sp + 40];
           P64[Hp - 40] = P64[Sp + 48];
           I64[Hp - 32] = Data.Dynamic.Dynamic_con_info;
           P64[Hp - 24] = P64[Sp + 32];
           P64[Hp - 16] = Hp - 64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 6;
           Sp = Sp + 56;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u9Cm0: // global
           Sp = Sp + 56;
           goto u9CmD;
       u9ClZ: // global
           Sp = Sp + 56;
           goto u9CmD;
       u9CmD: // global
           call _c9CkL() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9ChU_info" {
     block_c9ChU_info:
         const _c9ChU;
         const 454;
         const 30;
 },
 _c9Cjw() //  [R1]
         { []
         }
     {offset
       c9Cjw: // global
           _c9ClD::P64 = R1 & 7;
           if (_c9ClD::P64 < 3) goto u9ClN; else goto c9Cle;
       u9ClN: // global
           if (_c9ClD::P64 < 2) goto c9Cl1; else goto c9Cla;
       c9Cl1: // global
           I64[Sp] = block_c9CkY_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u9CmF; else goto c9Cl2;
       u9CmF: // global
           call _c9CkY(R1) args: 0, res: 0, upd: 0;
       c9Cl2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9Cla: // global
           I64[Sp] = I64[R1 + 30];
           I64[Sp - 8] = I64[R1 + 38];
           Sp = Sp - 8;
           goto u9CmH;
       c9Cle: // global
           I64[Sp] = I64[R1 + 29];
           I64[Sp - 8] = I64[R1 + 37];
           Sp = Sp - 8;
           goto u9CmH;
       u9CmH: // global
           call _s9C9Z() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9Cjw_info" {
     block_c9Cjw_info:
         const _c9Cjw;
         const 4;
         const 4294967326;
         const S9Cct_srt+56;
 },
 _c9CkY() //  [R1]
         { []
         }
     {offset
       c9CkY: // global
           I64[Sp - 8] = I64[R1 + 15];
           I64[Sp] = I64[R1 + 7];
           Sp = Sp - 8;
           call _s9C9Z() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9CkY_info" {
     block_c9CkY_info:
         const _c9CkY;
         const 4;
         const 4294967326;
         const S9Cct_srt+56;
 },
 _s9C9Z() //  []
         { []
         }
     {offset
       s9C9Z: // global
           I64[Sp - 8] = block_c9CjB_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9CmT; else goto c9CjD;
       u9CmT: // global
           call _c9CjB(R1) args: 0, res: 0, upd: 0;
       c9CjD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9CjB() //  [R1]
         { []
         }
     {offset
       c9CjB: // global
           _s9C8z::P64 = P64[Sp + 40];
           _s9C8H::P64 = P64[Sp + 48];
           _s9C8J::P64 = P64[Sp + 32];
           _s9Ca0::I64 = I64[Sp + 16];
           _s9Ca1::I64 = I64[Sp + 8];
           _c9ClE::P64 = R1 & 7;
           if (_c9ClE::P64 < 3) goto u9ClO; else goto c9Ckw;
       u9ClO: // global
           if (_c9ClE::P64 < 2) goto c9CjK; else goto c9Ck9;
       c9CjK: // global
           I64[Sp] = block_c9CjH_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u9CmI; else goto c9CjL;
       u9CmI: // global
           call _c9CjH(R1) args: 0, res: 0, upd: 0;
       c9CjL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9Ck9: // global
           Hp = Hp + 72;
           _s9Ca2::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c9CkB; else goto c9Ckd;
       c9Ckd: // global
           if (_s9Ca0::I64 == I64[_s9Ca2::P64 + 30]) goto c9Ckv; else goto u9Cma;
       c9Ckv: // global
           if (_s9Ca1::I64 == I64[_s9Ca2::P64 + 38]) goto c9Cku; else goto u9Cmb;
       c9Cku: // global
           I64[Hp - 64] = stg_ap_2_upd_info;
           P64[Hp - 48] = _s9C8z::P64;
           P64[Hp - 40] = _s9C8H::P64;
           I64[Hp - 32] = Data.Dynamic.Dynamic_con_info;
           P64[Hp - 24] = _s9C8J::P64;
           P64[Hp - 16] = Hp - 64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 6;
           Sp = Sp + 56;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u9Cmb: // global
           Sp = Sp + 56;
           goto u9CmM;
       u9Cma: // global
           Sp = Sp + 56;
           goto u9CmM;
       c9Ckw: // global
           Hp = Hp + 72;
           _s9Ca2::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c9CkB; else goto c9CkA;
       c9CkB: // global
           HpAlloc = 72;
           R1 = _s9Ca2::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9CkA: // global
           if (_s9Ca0::I64 == I64[_s9Ca2::P64 + 29]) goto c9CkS; else goto u9Cmc;
       c9CkS: // global
           if (_s9Ca1::I64 == I64[_s9Ca2::P64 + 37]) goto c9CkR; else goto u9Cmd;
       c9CkR: // global
           I64[Hp - 64] = stg_ap_2_upd_info;
           P64[Hp - 48] = _s9C8z::P64;
           P64[Hp - 40] = _s9C8H::P64;
           I64[Hp - 32] = Data.Dynamic.Dynamic_con_info;
           P64[Hp - 24] = _s9C8J::P64;
           P64[Hp - 16] = Hp - 64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 6;
           Sp = Sp + 56;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u9Cmd: // global
           Sp = Sp + 56;
           goto u9CmM;
       u9Cmc: // global
           Sp = Sp + 56;
           goto u9CmM;
       u9CmM: // global
           call _c9CkL() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9CjB_info" {
     block_c9CjB_info:
         const _c9CjB;
         const 454;
         const 4294967326;
         const S9Cct_srt+56;
 },
 _c9CjH() //  [R1]
         { []
         }
     {offset
       c9CjH: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c9CjR; else goto c9CjQ;
       c9CjR: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9CjQ: // global
           if (I64[Sp + 16] == I64[R1 + 7]) goto c9Ck8; else goto u9Cm8;
       c9Ck8: // global
           if (I64[Sp + 8] == I64[R1 + 15]) goto c9Ck7; else goto u9Cm9;
       c9Ck7: // global
           I64[Hp - 64] = stg_ap_2_upd_info;
           P64[Hp - 48] = P64[Sp + 40];
           P64[Hp - 40] = P64[Sp + 48];
           I64[Hp - 32] = Data.Dynamic.Dynamic_con_info;
           P64[Hp - 24] = P64[Sp + 32];
           P64[Hp - 16] = Hp - 64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 6;
           Sp = Sp + 56;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u9Cm9: // global
           Sp = Sp + 56;
           goto u9CmO;
       u9Cm8: // global
           Sp = Sp + 56;
           goto u9CmO;
       u9CmO: // global
           call _c9CkL() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9CjH_info" {
     block_c9CjH_info:
         const _c9CjH;
         const 454;
         const 30;
 },
 _c9CkL() //  []
         { []
         }
     {offset
       c9CkL: // global
           Hp = Hp - 72;
           R1 = GHC.Base.Nothing_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9Clh() //  [R1]
         { []
         }
     {offset
       c9Clh: // global
           if (R1 & 7 == 1) goto u9Cme; else goto c9Clv;
       u9Cme: // global
           Sp = Sp + 32;
           call _c9Clp() args: 0, res: 0, upd: 0;
       c9Clv: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c9Cly; else goto c9Clx;
       c9Cly: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9Clx: // global
           I64[Hp - 64] = stg_ap_2_upd_info;
           P64[Hp - 48] = P64[Sp + 16];
           P64[Hp - 40] = P64[Sp + 24];
           I64[Hp - 32] = Data.Dynamic.Dynamic_con_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = Hp - 64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 6;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9Clh_info" {
     block_c9Clh_info:
         const _c9Clh;
         const 3;
         const 30;
 },
 _c9Clp() //  []
         { []
         }
     {offset
       c9Clp: // global
           R1 = GHC.Base.Nothing_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.236712549 UTC

[section ""data" . Data.Dynamic.dynTypeRep_closure" {
     Data.Dynamic.dynTypeRep_closure:
         const Data.Dynamic.dynTypeRep_info;
 },
 Data.Dynamic.dynTypeRep_entry() //  [R2]
         { []
         }
     {offset
       c9Cqe: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9Cqf; else goto c9Cqg;
       c9Cqf: // global
           R2 = R2;
           R1 = Data.Dynamic.dynTypeRep_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9Cqg: // global
           I64[Sp - 8] = block_c9Cqb_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Cqk; else goto c9Cqc;
       u9Cqk: // global
           call _c9Cqb(R1) args: 0, res: 0, upd: 0;
       c9Cqc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.dynTypeRep_info" {
     Data.Dynamic.dynTypeRep_info:
         const Data.Dynamic.dynTypeRep_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9Cqb() //  [R1]
         { []
         }
     {offset
       c9Cqb: // global
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call Data.Typeable.Internal.$WSomeTypeRep_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9Cqb_info" {
     block_c9Cqb_info:
         const _c9Cqb;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.241139863 UTC

[section ""cstring" . Data.Dynamic.$trModule4_bytes" {
     Data.Dynamic.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.242873659 UTC

[section ""data" . Data.Dynamic.$trModule3_closure" {
     Data.Dynamic.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Dynamic.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.244569812 UTC

[section ""cstring" . Data.Dynamic.$trModule2_bytes" {
     Data.Dynamic.$trModule2_bytes:
         I8[] [68,97,116,97,46,68,121,110,97,109,105,99]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.24611709 UTC

[section ""data" . Data.Dynamic.$trModule1_closure" {
     Data.Dynamic.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Dynamic.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.24762512 UTC

[section ""data" . Data.Dynamic.$trModule_closure" {
     Data.Dynamic.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Dynamic.$trModule3_closure+1;
         const Data.Dynamic.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.249492606 UTC

[section ""data" . $krep_r9Bhq_closure" {
     $krep_r9Bhq_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.250929028 UTC

[section ""data" . $krep1_r9Bhr_closure" {
     $krep1_r9Bhr_closure:
         const :_con_info;
         const $krep_r9Bhq_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.252435175 UTC

[section ""data" . $krep2_r9Bhs_closure" {
     $krep2_r9Bhs_closure:
         const :_con_info;
         const GHC.Types.krep$*_closure;
         const $krep1_r9Bhr_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.254159276 UTC

[section ""data" . $krep3_r9Bht_closure" {
     $krep3_r9Bht_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Typeable.Internal.$tcTypeRep_closure;
         const $krep2_r9Bhs_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.255747115 UTC

[section ""cstring" . Data.Dynamic.$fExceptionDynamic7_bytes" {
     Data.Dynamic.$fExceptionDynamic7_bytes:
         I8[] [68,121,110,97,109,105,99]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.257349635 UTC

[section ""data" . Data.Dynamic.$fExceptionDynamic6_closure" {
     Data.Dynamic.$fExceptionDynamic6_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Dynamic.$fExceptionDynamic7_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.259072709 UTC

[section ""data" . Data.Dynamic.$tcDynamic_closure" {
     Data.Dynamic.$tcDynamic_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Dynamic.$trModule_closure+1;
         const Data.Dynamic.$fExceptionDynamic6_closure+1;
         const GHC.Types.krep$*_closure;
         const 12333845116585145369;
         const 13454739855111402131;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.260765429 UTC

[section ""data" . $krep4_r9Bhu_closure" {
     $krep4_r9Bhu_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Dynamic.$tcDynamic_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.262674083 UTC

[section ""data" . $krep5_r9Bhv_closure" {
     $krep5_r9Bhv_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r9Bhq_closure+2;
         const $krep4_r9Bhu_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.264314379 UTC

[section ""data" . Data.Dynamic.$tc'Dynamic1_closure" {
     Data.Dynamic.$tc'Dynamic1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r9Bht_closure+1;
         const $krep5_r9Bhv_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.265918596 UTC

[section ""cstring" . Data.Dynamic.$tc'Dynamic3_bytes" {
     Data.Dynamic.$tc'Dynamic3_bytes:
         I8[] [39,68,121,110,97,109,105,99]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.267608786 UTC

[section ""data" . Data.Dynamic.$tc'Dynamic2_closure" {
     Data.Dynamic.$tc'Dynamic2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Dynamic.$tc'Dynamic3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.269229067 UTC

[section ""data" . Data.Dynamic.$tc'Dynamic_closure" {
     Data.Dynamic.$tc'Dynamic_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Dynamic.$trModule_closure+1;
         const Data.Dynamic.$tc'Dynamic2_closure+1;
         const Data.Dynamic.$tc'Dynamic1_closure+4;
         const 11394777848779697579;
         const 644307381671950132;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.272358019 UTC

[section ""data" . Data.Dynamic.$fExceptionDynamic5_closure" {
     Data.Dynamic.$fExceptionDynamic5_closure:
         const Data.Dynamic.$fExceptionDynamic5_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Dynamic.$fExceptionDynamic5_entry() //  [R1]
         { []
         }
     {offset
       c9CqY: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c9CqZ; else goto c9Cr0;
       c9CqZ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9Cr0: // global
           (_c9CqQ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9CqQ::I64 == 0) goto c9CqS; else goto c9CqR;
       c9CqS: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9CqR: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9CqQ::I64;
           I64[Sp - 24] = block_c9CqT_info;
           R6 = 0;
           R5 = Data.Dynamic.$fExceptionDynamic6_closure+1;
           R4 = Data.Dynamic.$trModule_closure+1;
           R3 = 13454739855111402131;
           R2 = 12333845116585145369;
           P64[Sp - 40] = GHC.Types.krep$*_closure;
           P64[Sp - 32] = GHC.Types.[]_closure+1;
           Sp = Sp - 40;
           call Data.Typeable.Internal.$wmkTrCon_entry(R6,
                                                       R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . Data.Dynamic.$fExceptionDynamic5_info" {
     Data.Dynamic.$fExceptionDynamic5_info:
         const Data.Dynamic.$fExceptionDynamic5_entry;
         const 0;
         const 4294967317;
         const S9Cct_srt+48;
 },
 _c9CqT() //  [R1, R2, R3, R4, R5]
         { []
         }
     {offset
       c9CqT: // global
           I64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           I64[Sp] = R1;
           Sp = Sp - 40;
           call _c9CqU() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9CqT_info" {
     block_c9CqT_info:
         const _c9CqT;
         const 0;
         const 30;
 },
 _c9CqU() //  []
         { []
         }
     {offset
       c9CqU: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9Cr3; else goto c9Cr2;
       c9Cr3: // global
           HpAlloc = 48;
           I64[Sp] = block_c9CqU_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 24;
       c9Cr2: // global
           I64[Hp - 40] = Data.Typeable.Internal.TrTyCon_con_info;
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = P64[Sp + 24];
           P64[Hp - 16] = P64[Sp + 32];
           I64[Hp - 8] = I64[Sp + 40];
           I64[Hp] = I64[Sp + 8];
           R1 = Hp - 38;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9CqU_info" {
     block_c9CqU_info:
         const _c9CqU;
         const 1093;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.279814272 UTC

[section ""data" . Data.Dynamic.$fExceptionDynamic1_closure" {
     Data.Dynamic.$fExceptionDynamic1_closure:
         const Data.Dynamic.$fExceptionDynamic1_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Dynamic.$fExceptionDynamic1_entry() //  [R1]
         { []
         }
     {offset
       c9CrC: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9CrD; else goto c9CrE;
       c9CrD: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9CrE: // global
           (_c9Crz::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9Crz::I64 == 0) goto c9CrB; else goto c9CrA;
       c9CrB: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9CrA: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9Crz::I64;
           R2 = Data.Dynamic.$fExceptionDynamic2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Dynamic.$fExceptionDynamic1_info" {
     Data.Dynamic.$fExceptionDynamic1_info:
         const Data.Dynamic.$fExceptionDynamic1_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.284255517 UTC

[section ""data" . Data.Dynamic.$fExceptionDynamic_$cshow_closure" {
     Data.Dynamic.$fExceptionDynamic_$cshow_closure:
         const Data.Dynamic.$fExceptionDynamic_$cshow_info;
         const 0;
 },
 sat_s9Cb1_entry() //  [R1]
         { []
         }
     {offset
       c9Cs0: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9Cs1; else goto c9Cs2;
       c9Cs1: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9Cs2: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = Data.Dynamic.$fExceptionDynamic3_closure+1;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.Dynamic.$fExceptionDynamic1_closure;
           Sp = Sp - 32;
           call Data.Typeable.Internal.showTypeable_entry(R3,
                                                          R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9Cb1_info" {
     sat_s9Cb1_info:
         const sat_s9Cb1_entry;
         const 1;
         const 8800387989520;
         const S9Cct_srt;
 },
 Data.Dynamic.$fExceptionDynamic_$cshow_entry() //  [R2]
         { []
         }
     {offset
       c9Cs3: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9Cs4; else goto c9Cs5;
       c9Cs4: // global
           R2 = R2;
           R1 = Data.Dynamic.$fExceptionDynamic_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9Cs5: // global
           I64[Sp - 8] = block_c9CrR_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Cs9; else goto c9CrS;
       u9Cs9: // global
           call _c9CrR(R1) args: 0, res: 0, upd: 0;
       c9CrS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.$fExceptionDynamic_$cshow_info" {
     Data.Dynamic.$fExceptionDynamic_$cshow_info:
         const Data.Dynamic.$fExceptionDynamic_$cshow_entry;
         const 0;
         const 26392574033934;
         const 4294967301;
         const S9Cct_srt;
 },
 _c9CrR() //  [R1]
         { []
         }
     {offset
       c9CrR: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9Cs8; else goto c9Cs7;
       c9Cs8: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9Cs7: // global
           _s9CaZ::P64 = P64[R1 + 7];
           I64[Hp - 16] = sat_s9Cb1_info;
           P64[Hp] = _s9CaZ::P64;
           R3 = Hp - 16;
           R2 = Data.Dynamic.$fExceptionDynamic4_bytes;
           Sp = Sp + 8;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9CrR_info" {
     block_c9CrR_info:
         const _c9CrR;
         const 0;
         const 8800387989534;
         const S9Cct_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.293534287 UTC

[section ""data" . Data.Dynamic.$fShowDynamic1_closure" {
     Data.Dynamic.$fShowDynamic1_closure:
         const Data.Dynamic.$fShowDynamic1_info;
         const 0;
 },
 f_s9Cb6_entry() //  [R1]
         { []
         }
     {offset
       c9CsF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9CsG; else goto c9CsH;
       c9CsG: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9CsH: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = Data.Dynamic.$fExceptionDynamic3_closure+1;
           Sp = Sp - 16;
           call Data.Typeable.Internal.showTypeable_entry(R3,
                                                          R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . f_s9Cb6_info" {
     f_s9Cb6_info:
         const f_s9Cb6_entry;
         const 1;
         const 4294967312;
         const S9Cct_srt;
 },
 sat_s9Cb8_entry() //  [R1]
         { []
         }
     {offset
       c9CsV: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9CsW; else goto c9CsX;
       c9CsW: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9CsX: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = Data.Dynamic.$fExceptionDynamic2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9Cb8_info" {
     sat_s9Cb8_info:
         const sat_s9Cb8_entry;
         const 1;
         const 16;
 },
 sat_s9Cb9_entry() //  [R1]
         { []
         }
     {offset
       c9CsY: // global
           _s9Cb9::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9CsZ; else goto c9Ct0;
       c9Ct0: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9Ct2; else goto c9Ct1;
       c9Ct2: // global
           HpAlloc = 24;
           goto c9CsZ;
       c9CsZ: // global
           R1 = _s9Cb9::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9Ct1: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9Cb9::P64;
           _s9Cb6::P64 = P64[_s9Cb9::P64 + 16];
           _s9Cb7::P64 = P64[_s9Cb9::P64 + 24];
           I64[Hp - 16] = sat_s9Cb8_info;
           P64[Hp] = _s9Cb7::P64;
           R2 = Hp - 16;
           R1 = _s9Cb6::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9Cb9_info" {
     sat_s9Cb9_info:
         const sat_s9Cb9_entry;
         const 2;
         const 18;
 },
 sat_s9Cba_entry() //  [R1, R2]
         { []
         }
     {offset
       c9Ct3: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9Ct7; else goto c9Ct6;
       c9Ct7: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9Ct6: // global
           _s9Cb6::P64 = P64[R1 + 7];
           I64[Hp - 24] = sat_s9Cb9_info;
           P64[Hp - 8] = _s9Cb6::P64;
           P64[Hp] = R2;
           R3 = Hp - 24;
           R2 = Data.Dynamic.$fExceptionDynamic4_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s9Cba_info" {
     sat_s9Cba_info:
         const sat_s9Cba_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Data.Dynamic.$fShowDynamic1_entry() //  [R2]
         { []
         }
     {offset
       c9Ct8: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9Ct9; else goto c9Cta;
       c9Ct9: // global
           R2 = R2;
           R1 = Data.Dynamic.$fShowDynamic1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9Cta: // global
           I64[Sp - 8] = block_c9Csw_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Cte; else goto c9Csx;
       u9Cte: // global
           call _c9Csw(R1) args: 0, res: 0, upd: 0;
       c9Csx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.$fShowDynamic1_info" {
     Data.Dynamic.$fShowDynamic1_info:
         const Data.Dynamic.$fShowDynamic1_entry;
         const 0;
         const 35188667056142;
         const 4294967301;
         const S9Cct_srt;
 },
 _c9Csw() //  [R1]
         { []
         }
     {offset
       c9Csw: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9Ctd; else goto c9Ctc;
       c9Ctd: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9Ctc: // global
           _s9Cb4::P64 = P64[R1 + 7];
           I64[Hp - 32] = f_s9Cb6_info;
           P64[Hp - 16] = _s9Cb4::P64;
           I64[Hp - 8] = sat_s9Cba_info;
           P64[Hp] = Hp - 32;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9Csw_info" {
     block_c9Csw_info:
         const _c9Csw;
         const 0;
         const 4294967326;
         const S9Cct_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.304919668 UTC

[section ""data" . Data.Dynamic.$fShowDynamic_$cshowList_closure" {
     Data.Dynamic.$fShowDynamic_$cshowList_closure:
         const Data.Dynamic.$fShowDynamic_$cshowList_info;
         const 0;
 },
 Data.Dynamic.$fShowDynamic_$cshowList_entry() //  [R2, R3]
         { []
         }
     {offset
       c9CtR: // global
           R4 = R3;
           R3 = R2;
           R2 = Data.Dynamic.$fShowDynamic1_closure+1;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.$fShowDynamic_$cshowList_info" {
     Data.Dynamic.$fShowDynamic_$cshowList_info:
         const Data.Dynamic.$fShowDynamic_$cshowList_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S9Cct_srt+104;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.30814514 UTC

[section ""data" . Data.Dynamic.$fShowDynamic_closure" {
     Data.Dynamic.$fShowDynamic_closure:
         const GHC.Show.C:Show_con_info;
         const Data.Dynamic.$fShowDynamic_$cshowsPrec_closure+2;
         const Data.Dynamic.$fExceptionDynamic_$cshow_closure+1;
         const Data.Dynamic.$fShowDynamic_$cshowList_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.310949659 UTC

[section ""data" . Data.Dynamic.$fExceptionDynamic_$cfromException_closure" {
     Data.Dynamic.$fExceptionDynamic_$cfromException_closure:
         const Data.Dynamic.$fExceptionDynamic_$cfromException_info;
         const 0;
 },
 Data.Dynamic.$fExceptionDynamic_$cfromException_entry() //  [R2]
         { []
         }
     {offset
       c9Cu6: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9Cua; else goto c9Cub;
       c9Cua: // global
           R2 = R2;
           R1 = Data.Dynamic.$fExceptionDynamic_$cfromException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9Cub: // global
           I64[Sp - 8] = block_c9Cu3_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Cuw; else goto c9Cu4;
       u9Cuw: // global
           call _c9Cu3(R1) args: 0, res: 0, upd: 0;
       c9Cu4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.$fExceptionDynamic_$cfromException_info" {
     Data.Dynamic.$fExceptionDynamic_$cfromException_info:
         const Data.Dynamic.$fExceptionDynamic_$cfromException_entry;
         const 0;
         const 52780853100558;
         const 4294967301;
         const S9Cct_srt+16;
 },
 _c9Cu3() //  [R1]
         { []
         }
     {offset
       c9Cu3: // global
           I64[Sp - 8] = block_c9Cu9_info;
           R2 = P64[R1 + 7];
           P64[Sp] = P64[R1 + 15];
           Sp = Sp - 8;
           call GHC.Exception.$p1Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9Cu3_info" {
     block_c9Cu3_info:
         const _c9Cu3;
         const 0;
         const 35188667056158;
         const S9Cct_srt+16;
 },
 _c9Cu9() //  [R1]
         { []
         }
     {offset
       c9Cu9: // global
           I64[Sp] = block_c9Cug_info;
           R3 = Data.Dynamic.$fExceptionDynamic5_closure;
           R2 = R1;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9Cu9_info" {
     block_c9Cu9_info:
         const _c9Cu9;
         const 1;
         const 35188667056158;
         const S9Cct_srt+16;
 },
 _c9Cug() //  [R1]
         { []
         }
     {offset
       c9Cug: // global
           if (R1 & 7 == 1) goto c9Cun; else goto c9Cur;
       c9Cun: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9Cur: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9Cuu; else goto c9Cut;
       c9Cuu: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9Cut: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9Cug_info" {
     block_c9Cug_info:
         const _c9Cug;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.319220926 UTC

[section ""data" . Data.Dynamic.$fExceptionDynamic_closure" {
     Data.Dynamic.$fExceptionDynamic_closure:
         const GHC.Exception.C:Exception_con_info;
         const Data.Dynamic.$fExceptionDynamic5_closure;
         const Data.Dynamic.$fShowDynamic_closure+1;
         const Data.Dynamic.$fExceptionDynamic_$ctoException_closure+1;
         const Data.Dynamic.$fExceptionDynamic_$cfromException_closure+1;
         const Data.Dynamic.$fExceptionDynamic_$cshow_closure+1;
         const 0;
 },
 section ""data" . Data.Dynamic.$fExceptionDynamic_$ctoException_closure" {
     Data.Dynamic.$fExceptionDynamic_$ctoException_closure:
         const Data.Dynamic.$fExceptionDynamic_$ctoException_info;
         const 0;
 },
 Data.Dynamic.$fExceptionDynamic_$ctoException_entry() //  [R2]
         { []
         }
     {offset
       c9Cv2: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9Cv6; else goto c9Cv5;
       c9Cv6: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Data.Dynamic.$fExceptionDynamic_$ctoException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9Cv5: // global
           I64[Hp - 16] = GHC.Exception.SomeException_con_info;
           P64[Hp - 8] = Data.Dynamic.$fExceptionDynamic_closure+1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.$fExceptionDynamic_$ctoException_info" {
     Data.Dynamic.$fExceptionDynamic_$ctoException_info:
         const Data.Dynamic.$fExceptionDynamic_$ctoException_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const S9Cct_srt+128;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.322959563 UTC

[section ""cstring" . lvl1_r9Bhw_bytes" {
     lvl1_r9Bhw_bytes:
         I8[] [84,121,112,101,32,101,114,114,111,114,32,105,110,32,100,121,110,97,109,105,99,32,97,112,112,108,105,99,97,116,105,111,110,46,10]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.324647082 UTC

[section ""cstring" . lvl2_r9Bhx_bytes" {
     lvl2_r9Bhx_bytes:
         I8[] [67,97,110,39,116,32,97,112,112,108,121,32,102,117,110,99,116,105,111,110,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.326179312 UTC

[section ""cstring" . lvl3_r9Bhy_bytes" {
     lvl3_r9Bhy_bytes:
         I8[] [32,116,111,32,97,114,103,117,109,101,110,116,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.331903754 UTC

[section ""data" . Data.Dynamic.dynApp1_closure" {
     Data.Dynamic.dynApp1_closure:
         const Data.Dynamic.dynApp1_info;
         const 0;
 },
 sat_s9Cbs_entry() //  [R1]
         { []
         }
     {offset
       c9CvU: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9CvV; else goto c9CvW;
       c9CvV: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9CvW: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = Data.Dynamic.$fExceptionDynamic3_closure+1;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.Dynamic.$fExceptionDynamic1_closure;
           Sp = Sp - 32;
           call Data.Typeable.Internal.showTypeable_entry(R3,
                                                          R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9Cbs_info" {
     sat_s9Cbs_info:
         const sat_s9Cbs_entry;
         const 1;
         const 8800387989520;
         const S9Cct_srt;
 },
 sat_s9Cbt_entry() //  [R1]
         { []
         }
     {offset
       c9CvX: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9CvY; else goto c9CvZ;
       c9CvY: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9CvZ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9CvL_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9Cw3; else goto c9CvM;
       u9Cw3: // global
           call _c9CvL(R1) args: 0, res: 0, upd: 0;
       c9CvM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9Cbt_info" {
     sat_s9Cbt_info:
         const sat_s9Cbt_entry;
         const 1;
         const 8800387989520;
         const S9Cct_srt;
 },
 _c9CvL() //  [R1]
         { []
         }
     {offset
       c9CvL: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9Cw2; else goto c9Cw1;
       c9Cw2: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c9Cw1: // global
           _s9Cbq::P64 = P64[R1 + 7];
           I64[Hp - 16] = sat_s9Cbs_info;
           P64[Hp] = _s9Cbq::P64;
           R3 = Hp - 16;
           R2 = Data.Dynamic.$fExceptionDynamic4_bytes;
           Sp = Sp + 8;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9CvL_info" {
     block_c9CvL_info:
         const _c9CvL;
         const 0;
         const 8800387989534;
         const S9Cct_srt;
 },
 sat_s9Cbu_entry() //  [R1]
         { []
         }
     {offset
       c9Cw4: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9Cw8; else goto c9Cw7;
       c9Cw8: // global
           HpAlloc = 24;
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9Cw7: // global
           _s9Cbj::P64 = P64[R1 + 16];
           I64[Hp - 16] = sat_s9Cbt_info;
           P64[Hp] = _s9Cbj::P64;
           R3 = Hp - 16;
           R2 = lvl3_r9Bhy_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s9Cbu_info" {
     sat_s9Cbu_info:
         const sat_s9Cbu_entry;
         const 1;
         const 8800387989520;
         const S9Cct_srt;
 },
 sat_s9Cbv_entry() //  [R1]
         { []
         }
     {offset
       c9Cwb: // global
           _s9Cbv::P64 = R1;
           if ((Sp + -48) < SpLim) (likely: False) goto c9Cwc; else goto c9Cwd;
       c9Cwd: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9Cwf; else goto c9Cwe;
       c9Cwf: // global
           HpAlloc = 24;
           goto c9Cwc;
       c9Cwc: // global
           R1 = _s9Cbv::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9Cwe: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9Cbv::P64;
           _s9Cbj::P64 = P64[_s9Cbv::P64 + 16];
           _s9Cbm::P64 = P64[_s9Cbv::P64 + 24];
           I64[Hp - 16] = sat_s9Cbu_info;
           P64[Hp] = _s9Cbj::P64;
           I64[Sp - 32] = block_c9Cw9_info;
           R3 = _s9Cbm::P64;
           R2 = Data.Dynamic.$fExceptionDynamic3_closure+1;
           I64[Sp - 48] = stg_ap_p_info;
           P64[Sp - 40] = Data.Dynamic.$fExceptionDynamic1_closure;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 48;
           call Data.Typeable.Internal.showTypeable_entry(R3,
                                                          R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9Cbv_info" {
     sat_s9Cbv_info:
         const sat_s9Cbv_entry;
         const 2;
         const 8800387989522;
         const S9Cct_srt;
 },
 _c9Cw9() //  [R1]
         { []
         }
     {offset
       c9Cw9: // global
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9Cw9_info" {
     block_c9Cw9_info:
         const _c9Cw9;
         const 1;
         const 30;
 },
 sat_s9Cbw_entry() //  [R1]
         { []
         }
     {offset
       c9Cwj: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9Cwk; else goto c9Cwl;
       c9Cwk: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9Cwl: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c9Cvu_info;
           _s9Cbj::P64 = P64[R1 + 16];
           R1 = P64[R1 + 24];
           P64[Sp - 24] = _s9Cbj::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9Cwp; else goto c9Cvv;
       u9Cwp: // global
           call _c9Cvu(R1) args: 0, res: 0, upd: 0;
       c9Cvv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9Cbw_info" {
     sat_s9Cbw_info:
         const sat_s9Cbw_entry;
         const 2;
         const 8800387989522;
         const S9Cct_srt;
 },
 _c9Cvu() //  [R1]
         { []
         }
     {offset
       c9Cvu: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9Cwo; else goto c9Cwn;
       c9Cwo: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c9Cwn: // global
           _s9Cbm::P64 = P64[R1 + 7];
           I64[Hp - 24] = sat_s9Cbv_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = _s9Cbm::P64;
           R3 = Hp - 24;
           R2 = Data.Dynamic.$fExceptionDynamic4_bytes;
           Sp = Sp + 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9Cvu_info" {
     block_c9Cvu_info:
         const _c9Cvu;
         const 1;
         const 8800387989534;
         const S9Cct_srt;
 },
 sat_s9Cbx_entry() //  [R1]
         { []
         }
     {offset
       c9Cwq: // global
           _s9Cbx::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9Cwr; else goto c9Cws;
       c9Cws: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9Cwu; else goto c9Cwt;
       c9Cwu: // global
           HpAlloc = 32;
           goto c9Cwr;
       c9Cwr: // global
           R1 = _s9Cbx::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9Cwt: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9Cbx::P64;
           _s9Cbj::P64 = P64[_s9Cbx::P64 + 16];
           _s9Cbk::P64 = P64[_s9Cbx::P64 + 24];
           I64[Hp - 24] = sat_s9Cbw_info;
           P64[Hp - 8] = _s9Cbj::P64;
           P64[Hp] = _s9Cbk::P64;
           R3 = Hp - 24;
           R2 = lvl2_r9Bhx_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9Cbx_info" {
     sat_s9Cbx_info:
         const sat_s9Cbx_entry;
         const 2;
         const 8800387989522;
         const S9Cct_srt;
 },
 Data.Dynamic.dynApp1_entry() //  [R2, R3]
         { []
         }
     {offset
       c9Cwx: // global
           _s9Cbk::P64 = R3;
           _s9Cbj::P64 = R2;
           if ((Sp + -8) < SpLim) (likely: False) goto c9Cwy; else goto c9Cwz;
       c9Cwz: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9CwB; else goto c9CwA;
       c9CwB: // global
           HpAlloc = 32;
           goto c9Cwy;
       c9Cwy: // global
           R3 = _s9Cbk::P64;
           R2 = _s9Cbj::P64;
           R1 = Data.Dynamic.dynApp1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9CwA: // global
           I64[Hp - 24] = sat_s9Cbx_info;
           P64[Hp - 8] = _s9Cbj::P64;
           P64[Hp] = _s9Cbk::P64;
           I64[Sp - 8] = block_c9Cwv_info;
           R3 = Hp - 24;
           R2 = lvl1_r9Bhw_bytes;
           Sp = Sp - 8;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.dynApp1_info" {
     Data.Dynamic.dynApp1_info:
         const Data.Dynamic.dynApp1_entry;
         const 0;
         const 3386500108517390;
         const 8589934607;
         const S9Cct_srt;
 },
 _c9Cwv() //  [R1]
         { []
         }
     {offset
       c9Cwv: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9Cwv_info" {
     block_c9Cwv_info:
         const _c9Cwv;
         const 0;
         const 4294967326;
         const S9Cct_srt+144;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.352240176 UTC

[section ""data" . Data.Dynamic.dynApp_closure" {
     Data.Dynamic.dynApp_closure:
         const Data.Dynamic.dynApp_info;
         const 0;
 },
 Data.Dynamic.dynApp_entry() //  [R2, R3]
         { []
         }
     {offset
       c9CxQ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9CxR; else goto c9CxS;
       c9CxR: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Dynamic.dynApp_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9CxS: // global
           I64[Sp - 24] = block_c9CxK_info;
           _s9CbA::P64 = R3;
           R3 = R3;
           _s9Cbz::P64 = R2;
           R2 = R2;
           P64[Sp - 16] = _s9Cbz::P64;
           P64[Sp - 8] = _s9CbA::P64;
           Sp = Sp - 24;
           call Data.Dynamic.dynApply_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.dynApp_info" {
     Data.Dynamic.dynApp_info:
         const Data.Dynamic.dynApp_entry;
         const 0;
         const 13198434500622;
         const 8589934607;
         const S9Cct_srt+72;
 },
 _c9CxK() //  [R1]
         { []
         }
     {offset
       c9CxK: // global
           if (R1 & 7 == 1) goto c9CxN; else goto c9CxO;
       c9CxN: // global
           R3 = P64[Sp + 8];
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call Data.Dynamic.dynApp1_entry(R3, R2) args: 8, res: 0, upd: 8;
       c9CxO: // global
           R1 = P64[R1 + 6] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9CxK_info" {
     block_c9CxK_info:
         const _c9CxK;
         const 2;
         const 4294967326;
         const S9Cct_srt+152;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.357601053 UTC

[section ""data" . Data.Dynamic.Dynamic_closure" {
     Data.Dynamic.Dynamic_closure:
         const Data.Dynamic.Dynamic_info;
 },
 Data.Dynamic.Dynamic_entry() //  [R2, R3]
         { []
         }
     {offset
       c9Cyh: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9Cyl; else goto c9Cyk;
       c9Cyl: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Data.Dynamic.Dynamic_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9Cyk: // global
           I64[Hp - 16] = Data.Dynamic.Dynamic_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.Dynamic_info" {
     Data.Dynamic.Dynamic_info:
         const Data.Dynamic.Dynamic_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.36096899 UTC

[section ""cstring" . i9Cyt_str" {
     i9Cyt_str:
         I8[] [98,97,115,101,58,68,97,116,97,46,68,121,110,97,109,105,99,46,68,121,110,97,109,105,99]
 },
 Data.Dynamic.Dynamic_con_entry() //  [R1]
         { []
         }
     {offset
       c9Cys: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Dynamic.Dynamic_con_info" {
     Data.Dynamic.Dynamic_con_info:
         const Data.Dynamic.Dynamic_con_entry;
         const 2;
         const 4;
         const i9Cyt_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:44.363782626 UTC

[section ""relreadonly" . S9Cct_srt" {
     S9Cct_srt:
         const Data.Typeable.Internal.showTypeable_closure;
         const Data.Dynamic.$w$cshowsPrec_closure;
         const Data.Typeable.Internal.sameTypeRep_closure;
         const Data.Dynamic.fromDyn_closure;
         const Data.Dynamic.fromDynamic_closure;
         const Data.Typeable.Internal.mkTrApp_closure;
         const Data.Typeable.Internal.$wmkTrCon_closure;
         const Data.Typeable.Internal.fpTYPELiftedRep_closure;
         const Data.Typeable.Internal.$mApp1_closure;
         const Data.Dynamic.dynApply_closure;
         const lvl_r9Bhp_closure;
         const Data.Dynamic.$fExceptionDynamic1_closure;
         const Data.Dynamic.$fExceptionDynamic_$cshow_closure;
         const Data.Dynamic.$fShowDynamic1_closure;
         const Data.Dynamic.$fExceptionDynamic_$cfromException_closure;
         const Data.Dynamic.$fExceptionDynamic5_closure;
         const Data.Dynamic.$fExceptionDynamic_closure;
         const Data.Dynamic.$fExceptionDynamic_$ctoException_closure;
         const GHC.Err.errorWithoutStackTrace_closure;
         const Data.Dynamic.dynApp1_closure;
         const Data.Dynamic.dynApp_closure;
 }]

