
==================== Raw Cmm ====================
2018-03-16 15:55:04.862512489 UTC

[]


==================== Raw Cmm ====================
2018-03-16 15:55:04.864356202 UTC

[section ""data" . Data.Tuple.fst_closure" {
     Data.Tuple.fst_closure:
         const Data.Tuple.fst_info;
 },
 Data.Tuple.fst_entry() //  [R2]
         { []
         }
     {offset
       cr95: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cr96; else goto cr97;
       cr96: // global
           R2 = R2;
           R1 = Data.Tuple.fst_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cr97: // global
           I64[Sp - 8] = block_cr92_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ur9b; else goto cr93;
       ur9b: // global
           call _cr92(R1) args: 0, res: 0, upd: 0;
       cr93: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Tuple.fst_info" {
     Data.Tuple.fst_info:
         const Data.Tuple.fst_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cr92() //  [R1]
         { []
         }
     {offset
       cr92: // global
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cr92_info" {
     block_cr92_info:
         const _cr92;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.870357861 UTC

[section ""data" . Data.Tuple.snd_closure" {
     Data.Tuple.snd_closure:
         const Data.Tuple.snd_info;
 },
 Data.Tuple.snd_entry() //  [R2]
         { []
         }
     {offset
       cr9s: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cr9t; else goto cr9u;
       cr9t: // global
           R2 = R2;
           R1 = Data.Tuple.snd_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cr9u: // global
           I64[Sp - 8] = block_cr9p_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ur9y; else goto cr9q;
       ur9y: // global
           call _cr9p(R1) args: 0, res: 0, upd: 0;
       cr9q: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Tuple.snd_info" {
     Data.Tuple.snd_info:
         const Data.Tuple.snd_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cr9p() //  [R1]
         { []
         }
     {offset
       cr9p: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cr9p_info" {
     block_cr9p_info:
         const _cr9p;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.875868591 UTC

[section ""data" . Data.Tuple.uncurry_closure" {
     Data.Tuple.uncurry_closure:
         const Data.Tuple.uncurry_info;
 },
 Data.Tuple.uncurry_entry() //  [R2, R3]
         { []
         }
     {offset
       cr9O: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cr9S; else goto cr9R;
       cr9S: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Data.Tuple.uncurry_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cr9R: // global
           I64[Hp - 40] = stg_sel_1_upd_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = R3;
           R3 = Hp - 40;
           _sr6x::P64 = R2;
           R2 = Hp - 16;
           R1 = _sr6x::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Tuple.uncurry_info" {
     Data.Tuple.uncurry_info:
         const Data.Tuple.uncurry_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.880057132 UTC

[section ""data" . Data.Tuple.curry_closure" {
     Data.Tuple.curry_closure:
         const Data.Tuple.curry_info;
 },
 Data.Tuple.curry_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cra2: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cra6; else goto cra5;
       cra6: // global
           HpAlloc = 24;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Tuple.curry_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cra5: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           _sr6H::P64 = R2;
           R2 = Hp - 15;
           R1 = _sr6H::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Tuple.curry_info" {
     Data.Tuple.curry_info:
         const Data.Tuple.curry_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.884270579 UTC

[section ""data" . Data.Tuple.swap_closure" {
     Data.Tuple.swap_closure:
         const Data.Tuple.swap_info;
 },
 Data.Tuple.swap_entry() //  [R2]
         { []
         }
     {offset
       crai: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cram; else goto cran;
       cram: // global
           R2 = R2;
           R1 = Data.Tuple.swap_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cran: // global
           I64[Sp - 8] = block_craf_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto urar; else goto crag;
       urar: // global
           call _craf(R1) args: 0, res: 0, upd: 0;
       crag: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Tuple.swap_info" {
     Data.Tuple.swap_info:
         const Data.Tuple.swap_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _craf() //  [R1]
         { []
         }
     {offset
       craf: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto craq; else goto crap;
       craq: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       crap: // global
           _sr6N::P64 = P64[R1 + 7];
           _sr6O::P64 = P64[R1 + 15];
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = _sr6O::P64;
           P64[Hp] = _sr6N::P64;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_craf_info" {
     block_craf_info:
         const _craf;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.889604673 UTC

[section ""cstring" . Data.Tuple.$trModule4_bytes" {
     Data.Tuple.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.891269531 UTC

[section ""data" . Data.Tuple.$trModule3_closure" {
     Data.Tuple.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Tuple.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.892911038 UTC

[section ""cstring" . Data.Tuple.$trModule2_bytes" {
     Data.Tuple.$trModule2_bytes:
         I8[] [68,97,116,97,46,84,117,112,108,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.894637178 UTC

[section ""data" . Data.Tuple.$trModule1_closure" {
     Data.Tuple.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Tuple.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.896636607 UTC

[section ""data" . Data.Tuple.$trModule_closure" {
     Data.Tuple.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Tuple.$trModule3_closure+1;
         const Data.Tuple.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.898294663 UTC

[section ""relreadonly" . Sr7T_srt" { Sr7T_srt:
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.950906663 UTC

[]


==================== Raw Cmm ====================
2018-03-16 15:55:04.952744477 UTC

[section ""data" . Data.Tuple.fst_closure" {
     Data.Tuple.fst_closure:
         const Data.Tuple.fst_info;
 },
 Data.Tuple.fst_entry() //  [R2]
         { []
         }
     {offset
       crbf: // global
           if ((Sp + -8) < SpLim) (likely: False) goto crbg; else goto crbh;
       crbg: // global
           R2 = R2;
           R1 = Data.Tuple.fst_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       crbh: // global
           I64[Sp - 8] = block_crbc_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto urbl; else goto crbd;
       urbl: // global
           call _crbc(R1) args: 0, res: 0, upd: 0;
       crbd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Tuple.fst_info" {
     Data.Tuple.fst_info:
         const Data.Tuple.fst_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _crbc() //  [R1]
         { []
         }
     {offset
       crbc: // global
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_crbc_info" {
     block_crbc_info:
         const _crbc;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.958806221 UTC

[section ""data" . Data.Tuple.snd_closure" {
     Data.Tuple.snd_closure:
         const Data.Tuple.snd_info;
 },
 Data.Tuple.snd_entry() //  [R2]
         { []
         }
     {offset
       crbD: // global
           if ((Sp + -8) < SpLim) (likely: False) goto crbE; else goto crbF;
       crbE: // global
           R2 = R2;
           R1 = Data.Tuple.snd_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       crbF: // global
           I64[Sp - 8] = block_crbA_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto urbJ; else goto crbB;
       urbJ: // global
           call _crbA(R1) args: 0, res: 0, upd: 0;
       crbB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Tuple.snd_info" {
     Data.Tuple.snd_info:
         const Data.Tuple.snd_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _crbA() //  [R1]
         { []
         }
     {offset
       crbA: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_crbA_info" {
     block_crbA_info:
         const _crbA;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.96439756 UTC

[section ""data" . Data.Tuple.uncurry_closure" {
     Data.Tuple.uncurry_closure:
         const Data.Tuple.uncurry_info;
 },
 Data.Tuple.uncurry_entry() //  [R2, R3]
         { []
         }
     {offset
       crc0: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto crc4; else goto crc3;
       crc4: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Data.Tuple.uncurry_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       crc3: // global
           I64[Hp - 40] = stg_sel_1_upd_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = R3;
           R3 = Hp - 40;
           _sraQ::P64 = R2;
           R2 = Hp - 16;
           R1 = _sraQ::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Tuple.uncurry_info" {
     Data.Tuple.uncurry_info:
         const Data.Tuple.uncurry_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.968321663 UTC

[section ""data" . Data.Tuple.curry_closure" {
     Data.Tuple.curry_closure:
         const Data.Tuple.curry_info;
 },
 Data.Tuple.curry_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       crcg: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto crck; else goto crcj;
       crck: // global
           HpAlloc = 24;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Tuple.curry_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       crcj: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           _srb0::P64 = R2;
           R2 = Hp - 15;
           R1 = _srb0::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Tuple.curry_info" {
     Data.Tuple.curry_info:
         const Data.Tuple.curry_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.972841807 UTC

[section ""data" . Data.Tuple.swap_closure" {
     Data.Tuple.swap_closure:
         const Data.Tuple.swap_info;
 },
 Data.Tuple.swap_entry() //  [R2]
         { []
         }
     {offset
       crcx: // global
           if ((Sp + -8) < SpLim) (likely: False) goto crcB; else goto crcC;
       crcB: // global
           R2 = R2;
           R1 = Data.Tuple.swap_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       crcC: // global
           I64[Sp - 8] = block_crcu_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto urcG; else goto crcv;
       urcG: // global
           call _crcu(R1) args: 0, res: 0, upd: 0;
       crcv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Tuple.swap_info" {
     Data.Tuple.swap_info:
         const Data.Tuple.swap_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _crcu() //  [R1]
         { []
         }
     {offset
       crcu: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto crcF; else goto crcE;
       crcF: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       crcE: // global
           _srb6::P64 = P64[R1 + 7];
           _srb7::P64 = P64[R1 + 15];
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = _srb7::P64;
           P64[Hp] = _srb6::P64;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_crcu_info" {
     block_crcu_info:
         const _crcu;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.977952292 UTC

[section ""cstring" . Data.Tuple.$trModule4_bytes" {
     Data.Tuple.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.979604937 UTC

[section ""data" . Data.Tuple.$trModule3_closure" {
     Data.Tuple.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Tuple.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.981207843 UTC

[section ""cstring" . Data.Tuple.$trModule2_bytes" {
     Data.Tuple.$trModule2_bytes:
         I8[] [68,97,116,97,46,84,117,112,108,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.982893015 UTC

[section ""data" . Data.Tuple.$trModule1_closure" {
     Data.Tuple.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Tuple.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.984777307 UTC

[section ""data" . Data.Tuple.$trModule_closure" {
     Data.Tuple.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Tuple.$trModule3_closure+1;
         const Data.Tuple.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.98640719 UTC

[section ""relreadonly" . SrcY_srt" { SrcY_srt:
 }]

