
==================== Raw Cmm ====================
2018-03-16 16:00:19.391522157 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:00:19.394021527 UTC

[section ""data" . Data.OldList.$WSnocBuilder_closure" {
     Data.OldList.$WSnocBuilder_closure:
         const Data.OldList.$WSnocBuilder_info;
 },
 Data.OldList.$WSnocBuilder_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5nvR: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5nvV; else goto c5nvW;
       c5nvV: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.$WSnocBuilder_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5nvW: // global
           I64[Sp - 24] = block_c5nvO_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5nw0; else goto c5nvP;
       u5nw0: // global
           call _c5nvO(R1) args: 0, res: 0, upd: 0;
       c5nvP: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.$WSnocBuilder_info" {
     Data.OldList.$WSnocBuilder_info:
         const Data.OldList.$WSnocBuilder_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5nvO() //  [R1]
         { []
         }
     {offset
       c5nvO: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5nvZ; else goto c5nvY;
       c5nvZ: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5nvY: // global
           _s5kSH::I64 = I64[R1 + 7];
           I64[Hp - 24] = Data.OldList.SnocBuilder_con_info;
           P64[Hp - 16] = P64[Sp + 8];
           P64[Hp - 8] = P64[Sp + 16];
           I64[Hp] = _s5kSH::I64;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nvO_info" {
     block_c5nvO_info:
         const _c5nvO;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.408059894 UTC

[section ""data" . Data.OldList.dropWhileEnd_closure" {
     Data.OldList.dropWhileEnd_closure:
         const Data.OldList.dropWhileEnd_info;
 },
 go_s5kSK_entry() //  [R1, R2]
         { []
         }
     {offset
       c5nwt: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5nwu; else goto c5nwv;
       c5nwu: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5nwv: // global
           I64[Sp - 24] = block_c5nwm_info;
           _s5kSK::P64 = R1;
           _s5kSI::P64 = P64[R1 + 7];
           R1 = R2;
           P64[Sp - 16] = _s5kSI::P64;
           P64[Sp - 8] = _s5kSK::P64;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5nxa; else goto c5nwn;
       u5nxa: // global
           call _c5nwm(R1) args: 0, res: 0, upd: 0;
       c5nwn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . go_s5kSK_info" {
     go_s5kSK_info:
         const go_s5kSK_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c5nwm() //  [R1]
         { []
         }
     {offset
       c5nwm: // global
           if (R1 & 7 == 1) goto u5nx7; else goto c5nwr;
       u5nx7: // global
           Sp = Sp + 24;
           call _c5nwX() args: 0, res: 0, upd: 0;
       c5nwr: // global
           I64[Sp - 8] = block_c5nwB_info;
           _s5kSN::P64 = P64[R1 + 6];
           R2 = _s5kSN::P64;
           _s5kSO::P64 = P64[R1 + 14];
           R1 = P64[Sp + 8];
           P64[Sp] = _s5kSO::P64;
           P64[Sp + 8] = _s5kSN::P64;
           Sp = Sp - 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nwm_info" {
     block_c5nwm_info:
         const _c5nwm;
         const 2;
         const 30;
 },
 _c5nwB() //  [R1]
         { []
         }
     {offset
       c5nwB: // global
           _s5kSK::P64 = P64[Sp + 24];
           _s5kSO::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5nwJ; else goto c5nwR;
       c5nwJ: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5nwM; else goto c5nwL;
       c5nwM: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5nwL: // global
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = _s5kSK::P64;
           P64[Hp - 24] = _s5kSO::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nwR: // global
           I64[Sp + 8] = block_c5nwP_info;
           R2 = _s5kSO::P64;
           R1 = _s5kSK::P64;
           Sp = Sp + 8;
           call go_s5kSK_entry(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nwB_info" {
     block_c5nwB_info:
         const _c5nwB;
         const 3;
         const 30;
 },
 _c5nwP() //  [R1]
         { []
         }
     {offset
       c5nwP: // global
           if (R1 & 7 == 1) goto u5nx8; else goto c5nx1;
       u5nx8: // global
           Sp = Sp + 24;
           call _c5nwX() args: 0, res: 0, upd: 0;
       c5nx1: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5nx4; else goto c5nx3;
       c5nx4: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5nx3: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = R1;
           R1 = Hp - 14;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nwP_info" {
     block_c5nwP_info:
         const _c5nwP;
         const 130;
         const 30;
 },
 _c5nwX() //  []
         { []
         }
     {offset
       c5nwX: // global
           R1 = []_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 Data.OldList.dropWhileEnd_entry() //  [R2, R3]
         { []
         }
     {offset
       c5nxc: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5nxg; else goto c5nxf;
       c5nxg: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.dropWhileEnd_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5nxf: // global
           I64[Hp - 8] = go_s5kSK_info;
           P64[Hp] = R2;
           R2 = R3;
           R1 = Hp - 7;
           call go_s5kSK_entry(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.dropWhileEnd_info" {
     Data.OldList.dropWhileEnd_info:
         const Data.OldList.dropWhileEnd_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.429104186 UTC

[section ""data" . Data.OldList.stripPrefix_closure" {
     Data.OldList.stripPrefix_closure:
         const Data.OldList.stripPrefix_info;
 },
 Data.OldList.stripPrefix_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5nxY: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c5nxZ; else goto u5nyz;
       c5nxZ: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.stripPrefix_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u5nyz: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c5nxO() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.stripPrefix_info" {
     Data.OldList.stripPrefix_info:
         const Data.OldList.stripPrefix_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5nxO() //  []
         { []
         }
     {offset
       c5nxO: // global
           I64[Sp - 8] = block_c5nxR_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5nyD; else goto c5nxS;
       u5nyD: // global
           call _c5nxR(R1) args: 0, res: 0, upd: 0;
       c5nxS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5nxR() //  [R1]
         { []
         }
     {offset
       c5nxR: // global
           _s5kSW::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5nxV; else goto c5nxW;
       c5nxV: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5ny6; else goto c5ny5;
       c5ny6: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5ny5: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = _s5kSW::P64;
           R1 = Hp - 6;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nxW: // global
           I64[Sp] = block_c5ny9_info;
           _s5kSY::P64 = P64[R1 + 6];
           _s5kSZ::P64 = P64[R1 + 14];
           R1 = _s5kSW::P64;
           P64[Sp + 16] = _s5kSZ::P64;
           P64[Sp + 24] = _s5kSY::P64;
           if (R1 & 7 != 0) goto u5nyE; else goto c5nyb;
       u5nyE: // global
           call _c5ny9(R1) args: 0, res: 0, upd: 0;
       c5nyb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nxR_info" {
     block_c5nxR_info:
         const _c5nxR;
         const 131;
         const 30;
 },
 _c5ny9() //  [R1]
         { []
         }
     {offset
       c5ny9: // global
           if (R1 & 7 == 1) goto u5nyA; else goto c5nym;
       u5nyA: // global
           Sp = Sp + 32;
           call _c5nys() args: 0, res: 0, upd: 0;
       c5nym: // global
           I64[Sp] = block_c5nyk_info;
           R2 = P64[Sp + 8];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = P64[Sp + 24];
           P64[Sp - 8] = P64[R1 + 6];
           P64[Sp + 24] = P64[R1 + 14];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ny9_info" {
     block_c5ny9_info:
         const _c5ny9;
         const 3;
         const 30;
 },
 _c5nyk() //  [R1]
         { []
         }
     {offset
       c5nyk: // global
           if (R1 & 7 == 1) goto u5nyB; else goto c5nyw;
       u5nyB: // global
           Sp = Sp + 32;
           call _c5nys() args: 0, res: 0, upd: 0;
       c5nyw: // global
           P64[Sp + 8] = P64[Sp + 8];
           P64[Sp + 16] = P64[Sp + 16];
           P64[Sp + 24] = P64[Sp + 24];
           Sp = Sp + 8;
           call _c5nxO() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5nyk_info" {
     block_c5nyk_info:
         const _c5nyk;
         const 3;
         const 30;
 },
 _c5nys() //  []
         { []
         }
     {offset
       c5nys: // global
           R1 = GHC.Base.Nothing_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.44520066 UTC

[section ""data" . Data.OldList.find_closure" {
     Data.OldList.find_closure:
         const Data.OldList.find_info;
 },
 Data.OldList.find_entry() //  [R2, R3]
         { []
         }
     {offset
       c5nzn: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5nzo; else goto c5nzp;
       c5nzo: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.find_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5nzp: // global
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call _c5nzr() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.find_info" {
     Data.OldList.find_info:
         const Data.OldList.find_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5nzr() //  []
         { []
         }
     {offset
       c5nzr: // global
           I64[Sp - 8] = block_c5nzt_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5nzZ; else goto c5nzv;
       u5nzZ: // global
           call _c5nzt(R1) args: 0, res: 0, upd: 0;
       c5nzv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5nzt() //  [R1]
         { []
         }
     {offset
       c5nzt: // global
           if (R1 & 7 == 1) goto c5nzB; else goto c5nzG;
       c5nzB: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nzG: // global
           I64[Sp - 8] = block_c5nzE_info;
           _s5kT9::P64 = P64[R1 + 6];
           R2 = _s5kT9::P64;
           _s5kTa::P64 = P64[R1 + 14];
           R1 = P64[Sp + 8];
           P64[Sp] = _s5kTa::P64;
           P64[Sp + 16] = _s5kT9::P64;
           Sp = Sp - 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nzt_info" {
     block_c5nzt_info:
         const _c5nzt;
         const 130;
         const 30;
 },
 _c5nzE() //  [R1]
         { []
         }
     {offset
       c5nzE: // global
           if (R1 & 7 == 1) goto c5nzM; else goto c5nzQ;
       c5nzM: // global
           P64[Sp + 24] = P64[Sp + 8];
           Sp = Sp + 16;
           call _c5nzr() args: 0, res: 0, upd: 0;
       c5nzQ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5nzT; else goto c5nzS;
       c5nzT: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5nzS: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = P64[Sp + 24];
           R1 = Hp - 6;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nzE_info" {
     block_c5nzE_info:
         const _c5nzE;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.458445961 UTC

[section ""data" . Data.OldList.elemIndex_closure" {
     Data.OldList.elemIndex_closure:
         const Data.OldList.elemIndex_info;
 },
 p_s5kTe_entry() //  [R1]
         { []
         }
     {offset
       c5nAv: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5nAw; else goto c5nAx;
       c5nAw: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5nAx: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call GHC.Classes.==_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . p_s5kTe_info" {
     p_s5kTe_info:
         const p_s5kTe_entry;
         const 2;
         const 18;
 },
 sat_s5kTp_entry() //  [R1, R2]
         { []
         }
     {offset
       c5nAF: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5nAG; else goto c5nAH;
       c5nAG: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5nAH: // global
           P64[Sp - 24] = P64[R1 + 7];
           P64[Sp - 16] = R2;
           I64[Sp - 8] = 0;
           Sp = Sp - 24;
           call _c5nAI() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . sat_s5kTp_info" {
     sat_s5kTp_info:
         const sat_s5kTp_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c5nAI() //  []
         { []
         }
     {offset
       c5nAI: // global
           I64[Sp - 8] = block_c5nAL_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5nBj; else goto c5nAN;
       u5nBj: // global
           call _c5nAL(R1) args: 0, res: 0, upd: 0;
       c5nAN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5nAL() //  [R1]
         { []
         }
     {offset
       c5nAL: // global
           if (R1 & 7 == 1) goto c5nAT; else goto c5nAY;
       c5nAT: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nAY: // global
           I64[Sp] = block_c5nAW_info;
           R2 = P64[R1 + 6];
           _s5kTl::P64 = P64[R1 + 14];
           R1 = P64[Sp + 8];
           P64[Sp + 16] = _s5kTl::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nAL_info" {
     block_c5nAL_info:
         const _c5nAL;
         const 387;
         const 30;
 },
 _c5nAW() //  [R1]
         { []
         }
     {offset
       c5nAW: // global
           _s5kTi::I64 = I64[Sp + 24];
           if (R1 & 7 == 1) goto c5nB4; else goto c5nB9;
       c5nB4: // global
           P64[Sp + 16] = P64[Sp + 16];
           I64[Sp + 24] = _s5kTi::I64 + 1;
           Sp = Sp + 8;
           call _c5nAI() args: 0, res: 0, upd: 0;
       c5nB9: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5nBc; else goto c5nBb;
       c5nBc: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5nBb: // global
           I64[Hp - 24] = GHC.Types.I#_con_info;
           I64[Hp - 16] = _s5kTi::I64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 6;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nAW_info" {
     block_c5nAW_info:
         const _c5nAW;
         const 259;
         const 30;
 },
 Data.OldList.elemIndex_entry() //  [R2, R3]
         { []
         }
     {offset
       c5nBl: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5nBp; else goto c5nBo;
       c5nBp: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.elemIndex_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5nBo: // global
           I64[Hp - 40] = p_s5kTe_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = R3;
           I64[Hp - 8] = sat_s5kTp_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.elemIndex_info" {
     Data.OldList.elemIndex_info:
         const Data.OldList.elemIndex_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.471937265 UTC

[section ""data" . Data.OldList.findIndex_closure" {
     Data.OldList.findIndex_closure:
         const Data.OldList.findIndex_info;
 },
 Data.OldList.findIndex_entry() //  [R2, R3]
         { []
         }
     {offset
       c5nC4: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5nC5; else goto c5nC6;
       c5nC5: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.findIndex_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5nC6: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           I64[Sp - 8] = 0;
           Sp = Sp - 24;
           call _c5nC7() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.findIndex_info" {
     Data.OldList.findIndex_info:
         const Data.OldList.findIndex_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5nC7() //  []
         { []
         }
     {offset
       c5nC7: // global
           I64[Sp - 8] = block_c5nCa_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5nCI; else goto c5nCc;
       u5nCI: // global
           call _c5nCa(R1) args: 0, res: 0, upd: 0;
       c5nCc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5nCa() //  [R1]
         { []
         }
     {offset
       c5nCa: // global
           if (R1 & 7 == 1) goto c5nCi; else goto c5nCn;
       c5nCi: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nCn: // global
           I64[Sp] = block_c5nCl_info;
           R2 = P64[R1 + 6];
           _s5kTx::P64 = P64[R1 + 14];
           R1 = P64[Sp + 8];
           P64[Sp + 16] = _s5kTx::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nCa_info" {
     block_c5nCa_info:
         const _c5nCa;
         const 387;
         const 30;
 },
 _c5nCl() //  [R1]
         { []
         }
     {offset
       c5nCl: // global
           _s5kTu::I64 = I64[Sp + 24];
           if (R1 & 7 == 1) goto c5nCt; else goto c5nCy;
       c5nCt: // global
           P64[Sp + 16] = P64[Sp + 16];
           I64[Sp + 24] = _s5kTu::I64 + 1;
           Sp = Sp + 8;
           call _c5nC7() args: 0, res: 0, upd: 0;
       c5nCy: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5nCB; else goto c5nCA;
       c5nCB: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5nCA: // global
           I64[Hp - 24] = GHC.Types.I#_con_info;
           I64[Hp - 16] = _s5kTu::I64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 6;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nCl_info" {
     block_c5nCl_info:
         const _c5nCl;
         const 259;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.483398262 UTC

[section ""data" . Data.OldList.findIndices_closure" {
     Data.OldList.findIndices_closure:
         const Data.OldList.findIndices_info;
 },
 sat_s5kTN_entry() //  [R1]
         { []
         }
     {offset
       c5nDx: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5nDy; else goto c5nDz;
       c5nDy: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5nDz: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = I64[R1 + 32] + 1;
           R2 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call go_s5kTD_entry(R3, R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5kTN_info" {
     sat_s5kTN_info:
         const sat_s5kTN_entry;
         const 4294967298;
         const 15;
 },
 go_s5kTD_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5nDE: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5nDF; else goto u5nDW;
       c5nDF: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       u5nDW: // global
           P64[Sp - 24] = R1;
           P64[Sp - 16] = R2;
           I64[Sp - 8] = R3;
           Sp = Sp - 24;
           call _c5nDd() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . go_s5kTD_info" {
     go_s5kTD_info:
         const go_s5kTD_entry;
         const 1;
         const 9;
         const 8589934606;
 },
 _c5nDd() //  []
         { []
         }
     {offset
       c5nDd: // global
           _s5kTB::P64 = P64[P64[Sp] + 6];
           I64[Sp - 8] = block_c5nDg_info;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5kTB::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5nDY; else goto c5nDh;
       u5nDY: // global
           call _c5nDg(R1) args: 0, res: 0, upd: 0;
       c5nDh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5nDg() //  [R1]
         { []
         }
     {offset
       c5nDg: // global
           if (R1 & 7 == 1) goto c5nDB; else goto c5nDC;
       c5nDB: // global
           R1 = []_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nDC: // global
           I64[Sp] = block_c5nDm_info;
           R2 = P64[R1 + 6];
           _s5kTI::P64 = P64[R1 + 14];
           R1 = P64[Sp + 16];
           P64[Sp + 16] = _s5kTI::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nDg_info" {
     block_c5nDg_info:
         const _c5nDg;
         const 259;
         const 30;
 },
 _c5nDm() //  [R1]
         { []
         }
     {offset
       c5nDm: // global
           _s5kTF::I64 = I64[Sp + 24];
           _s5kTI::P64 = P64[Sp + 16];
           if (R1 & 7 == 1) goto c5nDN; else goto c5nDQ;
       c5nDN: // global
           P64[Sp + 16] = _s5kTI::P64;
           I64[Sp + 24] = _s5kTF::I64 + 1;
           Sp = Sp + 8;
           call _c5nDd() args: 0, res: 0, upd: 0;
       c5nDQ: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto c5nDT; else goto c5nDS;
       c5nDT: // global
           HpAlloc = 80;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5nDS: // global
           I64[Hp - 72] = sat_s5kTN_info;
           P64[Hp - 56] = P64[Sp + 8];
           P64[Hp - 48] = _s5kTI::P64;
           I64[Hp - 40] = _s5kTF::I64;
           I64[Hp - 32] = GHC.Types.I#_con_info;
           I64[Hp - 24] = _s5kTF::I64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 31;
           P64[Hp] = Hp - 72;
           R1 = Hp - 14;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nDm_info" {
     block_c5nDm_info:
         const _c5nDm;
         const 259;
         const 30;
 },
 Data.OldList.findIndices_entry() //  [R2, R3]
         { []
         }
     {offset
       c5nE1: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5nE5; else goto c5nE4;
       c5nE5: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.findIndices_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5nE4: // global
           I64[Hp - 8] = go_s5kTD_info;
           P64[Hp] = R2;
           _s5kTC::P64 = R3;
           R3 = 0;
           R2 = _s5kTC::P64;
           R1 = Hp - 6;
           call go_s5kTD_entry(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.findIndices_info" {
     Data.OldList.findIndices_info:
         const Data.OldList.findIndices_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.497343321 UTC

[section ""data" . Data.OldList.elemIndices_closure" {
     Data.OldList.elemIndices_closure:
         const Data.OldList.elemIndices_info;
 },
 sat_s5kTQ_entry() //  [R1]
         { []
         }
     {offset
       c5nEL: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5nEM; else goto c5nEN;
       c5nEM: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5nEN: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call GHC.Classes.==_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5kTQ_info" {
     sat_s5kTQ_info:
         const sat_s5kTQ_entry;
         const 2;
         const 18;
 },
 Data.OldList.elemIndices_entry() //  [R2, R3]
         { []
         }
     {offset
       c5nEO: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5nES; else goto c5nER;
       c5nES: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.elemIndices_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5nER: // global
           I64[Hp - 24] = sat_s5kTQ_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R2 = Hp - 24;
           R1 = Data.OldList.findIndices_closure+2;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.elemIndices_info" {
     Data.OldList.elemIndices_info:
         const Data.OldList.elemIndices_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.504390103 UTC

[section ""data" . Data.OldList.isPrefixOf_closure" {
     Data.OldList.isPrefixOf_closure:
         const Data.OldList.isPrefixOf_info;
 },
 Data.OldList.isPrefixOf_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5nFd: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c5nFe; else goto u5nFL;
       c5nFe: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.isPrefixOf_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u5nFL: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c5nF3() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.isPrefixOf_info" {
     Data.OldList.isPrefixOf_info:
         const Data.OldList.isPrefixOf_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5nF3() //  []
         { []
         }
     {offset
       c5nF3: // global
           I64[Sp - 8] = block_c5nF6_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5nFP; else goto c5nF7;
       u5nFP: // global
           call _c5nF6(R1) args: 0, res: 0, upd: 0;
       c5nF7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5nF6() //  [R1]
         { []
         }
     {offset
       c5nF6: // global
           if (R1 & 7 == 1) goto c5nFa; else goto c5nFb;
       c5nFa: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nFb: // global
           I64[Sp] = block_c5nFl_info;
           _s5kTV::P64 = P64[R1 + 6];
           _s5kTW::P64 = P64[R1 + 14];
           R1 = P64[Sp + 24];
           P64[Sp + 16] = _s5kTW::P64;
           P64[Sp + 24] = _s5kTV::P64;
           if (R1 & 7 != 0) goto u5nFQ; else goto c5nFn;
       u5nFQ: // global
           call _c5nFl(R1) args: 0, res: 0, upd: 0;
       c5nFn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nF6_info" {
     block_c5nF6_info:
         const _c5nF6;
         const 131;
         const 30;
 },
 _c5nFl() //  [R1]
         { []
         }
     {offset
       c5nFl: // global
           if (R1 & 7 == 1) goto u5nFM; else goto c5nFy;
       u5nFM: // global
           Sp = Sp + 32;
           call _c5nFE() args: 0, res: 0, upd: 0;
       c5nFy: // global
           I64[Sp] = block_c5nFw_info;
           R2 = P64[Sp + 8];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = P64[Sp + 24];
           P64[Sp - 8] = P64[R1 + 6];
           P64[Sp + 24] = P64[R1 + 14];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nFl_info" {
     block_c5nFl_info:
         const _c5nFl;
         const 3;
         const 30;
 },
 _c5nFw() //  [R1]
         { []
         }
     {offset
       c5nFw: // global
           if (R1 & 7 == 1) goto u5nFN; else goto c5nFI;
       u5nFN: // global
           Sp = Sp + 32;
           call _c5nFE() args: 0, res: 0, upd: 0;
       c5nFI: // global
           P64[Sp + 8] = P64[Sp + 8];
           P64[Sp + 16] = P64[Sp + 16];
           P64[Sp + 24] = P64[Sp + 24];
           Sp = Sp + 8;
           call _c5nF3() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5nFw_info" {
     block_c5nFw_info:
         const _c5nFw;
         const 3;
         const 30;
 },
 _c5nFE() //  []
         { []
         }
     {offset
       c5nFE: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.517642391 UTC

[section ""data" . Data.OldList.isInfixOf_closure" {
     Data.OldList.isInfixOf_closure:
         const Data.OldList.isInfixOf_info;
 },
 Data.OldList.isInfixOf_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5nGz: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5nGA; else goto c5nGB;
       c5nGA: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.isInfixOf_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5nGB: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c5nGD() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.isInfixOf_info" {
     Data.OldList.isInfixOf_info:
         const Data.OldList.isInfixOf_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5nGD() //  []
         { []
         }
     {offset
       c5nGD: // global
           I64[Sp - 8] = block_c5nGF_info;
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = P64[Sp];
           Sp = Sp - 8;
           call Data.OldList.isPrefixOf_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5nGF() //  [R1]
         { []
         }
     {offset
       c5nGF: // global
           if (R1 & 7 == 1) goto c5nGN; else goto c5nH2;
       c5nGN: // global
           I64[Sp] = block_c5nGK_info;
           R1 = P64[Sp + 24];
           if (R1 & 7 != 0) goto u5nH8; else goto c5nGO;
       u5nH8: // global
           call _c5nGK(R1) args: 0, res: 0, upd: 0;
       c5nGO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c5nH2: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nGF_info" {
     block_c5nGF_info:
         const _c5nGF;
         const 3;
         const 30;
 },
 _c5nGK() //  [R1]
         { []
         }
     {offset
       c5nGK: // global
           if (R1 & 7 == 1) goto c5nGU; else goto c5nGY;
       c5nGU: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nGY: // global
           P64[Sp + 24] = P64[R1 + 14];
           Sp = Sp + 8;
           call _c5nGD() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5nGK_info" {
     block_c5nGK_info:
         const _c5nGK;
         const 259;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.532532238 UTC

[section ""data" . Data.OldList.dropLength_closure" {
     Data.OldList.dropLength_closure:
         const Data.OldList.dropLength_info;
 },
 Data.OldList.dropLength_entry() //  [R2, R3]
         { []
         }
     {offset
       c5nHG: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5nHH; else goto u5nI2;
       c5nHH: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.dropLength_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       u5nI2: // global
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call _c5nHw() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.dropLength_info" {
     Data.OldList.dropLength_info:
         const Data.OldList.dropLength_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5nHw() //  []
         { []
         }
     {offset
       c5nHw: // global
           _s5kUa::P64 = P64[Sp];
           I64[Sp] = block_c5nHz_info;
           R1 = _s5kUa::P64;
           if (R1 & 7 != 0) goto u5nI4; else goto c5nHA;
       u5nI4: // global
           call _c5nHz(R1) args: 0, res: 0, upd: 0;
       c5nHA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5nHz() //  [R1]
         { []
         }
     {offset
       c5nHz: // global
           _s5kUb::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5nHD; else goto c5nHE;
       c5nHD: // global
           R1 = _s5kUb::P64 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5nHE: // global
           I64[Sp] = block_c5nHO_info;
           _s5kUe::P64 = P64[R1 + 14];
           R1 = _s5kUb::P64;
           P64[Sp + 8] = _s5kUe::P64;
           if (R1 & 7 != 0) goto u5nI5; else goto c5nHQ;
       u5nI5: // global
           call _c5nHO(R1) args: 0, res: 0, upd: 0;
       c5nHQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nHz_info" {
     block_c5nHz_info:
         const _c5nHz;
         const 1;
         const 30;
 },
 _c5nHO() //  [R1]
         { []
         }
     {offset
       c5nHO: // global
           if (R1 & 7 == 1) goto c5nHW; else goto c5nI0;
       c5nHW: // global
           R1 = []_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nI0: // global
           P64[Sp] = P64[Sp + 8];
           P64[Sp + 8] = P64[R1 + 14];
           call _c5nHw() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5nHO_info" {
     block_c5nHO_info:
         const _c5nHO;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.544975614 UTC

[section ""data" . Data.OldList.dropLengthMaybe_closure" {
     Data.OldList.dropLengthMaybe_closure:
         const Data.OldList.dropLengthMaybe_info;
 },
 Data.OldList.dropLengthMaybe_entry() //  [R2, R3]
         { []
         }
     {offset
       c5nIH: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5nII; else goto u5nJ6;
       c5nII: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.dropLengthMaybe_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       u5nJ6: // global
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call _c5nIx() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.dropLengthMaybe_info" {
     Data.OldList.dropLengthMaybe_info:
         const Data.OldList.dropLengthMaybe_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5nIx() //  []
         { []
         }
     {offset
       c5nIx: // global
           _s5kUi::P64 = P64[Sp];
           I64[Sp] = block_c5nIA_info;
           R1 = _s5kUi::P64;
           if (R1 & 7 != 0) goto u5nJ8; else goto c5nIB;
       u5nJ8: // global
           call _c5nIA(R1) args: 0, res: 0, upd: 0;
       c5nIB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5nIA() //  [R1]
         { []
         }
     {offset
       c5nIA: // global
           _s5kUj::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5nIE; else goto c5nIF;
       c5nIE: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5nIP; else goto c5nIO;
       c5nIP: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5nIO: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = _s5kUj::P64;
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nIF: // global
           I64[Sp] = block_c5nIS_info;
           _s5kUm::P64 = P64[R1 + 14];
           R1 = _s5kUj::P64;
           P64[Sp + 8] = _s5kUm::P64;
           if (R1 & 7 != 0) goto u5nJ9; else goto c5nIU;
       u5nJ9: // global
           call _c5nIS(R1) args: 0, res: 0, upd: 0;
       c5nIU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nIA_info" {
     block_c5nIA_info:
         const _c5nIA;
         const 1;
         const 30;
 },
 _c5nIS() //  [R1]
         { []
         }
     {offset
       c5nIS: // global
           if (R1 & 7 == 1) goto c5nJ0; else goto c5nJ4;
       c5nJ0: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nJ4: // global
           P64[Sp] = P64[Sp + 8];
           P64[Sp + 8] = P64[R1 + 14];
           call _c5nIx() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5nIS_info" {
     block_c5nIS_info:
         const _c5nIS;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.556944346 UTC

[section ""data" . Data.OldList.isSuffixOf_closure" {
     Data.OldList.isSuffixOf_closure:
         const Data.OldList.isSuffixOf_info;
 },
 Data.OldList.isSuffixOf_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5nJJ: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5nJK; else goto c5nJL;
       c5nJK: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.isSuffixOf_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5nJL: // global
           I64[Sp - 32] = block_c5nJD_info;
           _s5kUr::P64 = R3;
           R3 = R4;
           _s5kUq::P64 = R2;
           R2 = _s5kUr::P64;
           P64[Sp - 24] = _s5kUq::P64;
           P64[Sp - 16] = _s5kUr::P64;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call Data.OldList.dropLengthMaybe_entry(R3,
                                                   R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.isSuffixOf_info" {
     Data.OldList.isSuffixOf_info:
         const Data.OldList.isSuffixOf_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5nJD() //  [R1]
         { []
         }
     {offset
       c5nJD: // global
           if (R1 & 7 == 1) goto c5nJG; else goto c5nJH;
       c5nJG: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nJH: // global
           I64[Sp] = block_c5nJR_info;
           R3 = P64[Sp + 24];
           R2 = P64[R1 + 6];
           call Data.OldList.dropLength_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nJD_info" {
     block_c5nJD_info:
         const _c5nJD;
         const 3;
         const 30;
 },
 _c5nJR() //  [R1]
         { []
         }
     {offset
       c5nJR: // global
           R4 = R1;
           R3 = P64[Sp + 16];
           R2 = P64[Sp + 8];
           Sp = Sp + 32;
           call GHC.Classes.$fEq[]_$c==_entry(R4,
                                              R3,
                                              R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nJR_info" {
     block_c5nJR_info:
         const _c5nJR;
         const 259;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.565866262 UTC

[section ""data" . Data.OldList.elem_by_closure" {
     Data.OldList.elem_by_closure:
         const Data.OldList.elem_by_info;
 },
 Data.OldList.elem_by_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5nKm: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5nKn; else goto u5nKH;
       c5nKn: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.elem_by_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u5nKH: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c5nKc() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.elem_by_info" {
     Data.OldList.elem_by_info:
         const Data.OldList.elem_by_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5nKc() //  []
         { []
         }
     {offset
       c5nKc: // global
           I64[Sp - 8] = block_c5nKf_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5nKJ; else goto c5nKg;
       u5nKJ: // global
           call _c5nKf(R1) args: 0, res: 0, upd: 0;
       c5nKg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5nKf() //  [R1]
         { []
         }
     {offset
       c5nKf: // global
           if (R1 & 7 == 1) goto c5nKj; else goto c5nKk;
       c5nKj: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nKk: // global
           I64[Sp] = block_c5nKu_info;
           R3 = P64[Sp + 16];
           R2 = P64[R1 + 6];
           _s5kUB::P64 = P64[R1 + 14];
           R1 = P64[Sp + 8];
           P64[Sp + 24] = _s5kUB::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nKf_info" {
     block_c5nKf_info:
         const _c5nKf;
         const 259;
         const 30;
 },
 _c5nKu() //  [R1]
         { []
         }
     {offset
       c5nKu: // global
           if (R1 & 7 == 1) goto c5nKB; else goto c5nKF;
       c5nKB: // global
           P64[Sp + 8] = P64[Sp + 8];
           P64[Sp + 16] = P64[Sp + 16];
           P64[Sp + 24] = P64[Sp + 24];
           Sp = Sp + 8;
           call _c5nKc() args: 0, res: 0, upd: 0;
       c5nKF: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nKu_info" {
     block_c5nKu_info:
         const _c5nKu;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.578247632 UTC

[section ""data" . Data.OldList.nubBy_closure" {
     Data.OldList.nubBy_closure:
         const Data.OldList.nubBy_info;
 },
 sat_s5kUN_entry() //  [R1]
         { []
         }
     {offset
       c5nLx: // global
           _s5kUN::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5nLy; else goto c5nLz;
       c5nLz: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5nLB; else goto c5nLA;
       c5nLB: // global
           HpAlloc = 24;
           goto c5nLy;
       c5nLy: // global
           R1 = _s5kUN::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5nLA: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5kUN::P64;
           _s5kUF::P64 = P64[_s5kUN::P64 + 16];
           _s5kUH::P64 = P64[_s5kUN::P64 + 24];
           _s5kUJ::P64 = P64[_s5kUN::P64 + 32];
           _s5kUK::P64 = P64[_s5kUN::P64 + 40];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5kUJ::P64;
           P64[Hp] = _s5kUH::P64;
           R3 = Hp - 14;
           R2 = _s5kUK::P64;
           R1 = _s5kUF::P64;
           Sp = Sp - 16;
           call nubBy'_s5kUF_entry(R3, R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5kUN_info" {
     sat_s5kUN_info:
         const sat_s5kUN_entry;
         const 4;
         const 15;
 },
 nubBy'_s5kUF_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5nLG: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5nLH; else goto u5nLX;
       c5nLH: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       u5nLX: // global
           P64[Sp - 24] = R1;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call _c5nLf() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . nubBy'_s5kUF_info" {
     nubBy'_s5kUF_info:
         const nubBy'_s5kUF_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 _c5nLf() //  []
         { []
         }
     {offset
       c5nLf: // global
           _s5kUD::P64 = P64[P64[Sp] + 6];
           I64[Sp - 8] = block_c5nLi_info;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5kUD::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5nLZ; else goto c5nLj;
       u5nLZ: // global
           call _c5nLi(R1) args: 0, res: 0, upd: 0;
       c5nLj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5nLi() //  [R1]
         { []
         }
     {offset
       c5nLi: // global
           if (R1 & 7 == 1) goto c5nLD; else goto c5nLE;
       c5nLD: // global
           R1 = []_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nLE: // global
           I64[Sp - 8] = block_c5nLo_info;
           R4 = P64[Sp + 24];
           _s5kUJ::P64 = P64[R1 + 6];
           R3 = _s5kUJ::P64;
           R2 = P64[Sp + 16];
           P64[Sp] = P64[R1 + 14];
           P64[Sp + 16] = _s5kUJ::P64;
           Sp = Sp - 8;
           call Data.OldList.elem_by_entry(R4,
                                           R3,
                                           R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nLi_info" {
     block_c5nLi_info:
         const _c5nLi;
         const 3;
         const 30;
 },
 _c5nLo() //  [R1]
         { []
         }
     {offset
       c5nLo: // global
           _s5kUH::P64 = P64[Sp + 32];
           _s5kUK::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5nLO; else goto c5nLV;
       c5nLO: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c5nLR; else goto c5nLQ;
       c5nLR: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5nLQ: // global
           I64[Hp - 64] = sat_s5kUN_info;
           P64[Hp - 48] = P64[Sp + 16];
           P64[Hp - 40] = _s5kUH::P64;
           _s5kUJ::P64 = P64[Sp + 24];
           P64[Hp - 32] = _s5kUJ::P64;
           P64[Hp - 24] = _s5kUK::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5kUJ::P64;
           P64[Hp] = Hp - 64;
           R1 = Hp - 14;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nLV: // global
           P64[Sp + 24] = _s5kUK::P64;
           P64[Sp + 32] = _s5kUH::P64;
           Sp = Sp + 16;
           call _c5nLf() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5nLo_info" {
     block_c5nLo_info:
         const _c5nLo;
         const 4;
         const 30;
 },
 Data.OldList.nubBy_entry() //  [R2, R3]
         { []
         }
     {offset
       c5nM2: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5nM6; else goto c5nM5;
       c5nM6: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.nubBy_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5nM5: // global
           I64[Hp - 8] = nubBy'_s5kUF_info;
           P64[Hp] = R2;
           _s5kUE::P64 = R3;
           R3 = GHC.Types.[]_closure+1;
           R2 = _s5kUE::P64;
           R1 = Hp - 6;
           call nubBy'_s5kUF_entry(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.nubBy_info" {
     Data.OldList.nubBy_info:
         const Data.OldList.nubBy_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.592110874 UTC

[section ""data" . Data.OldList.nub_closure" {
     Data.OldList.nub_closure:
         const Data.OldList.nub_info;
 },
 sat_s5kUQ_entry() //  [R1]
         { []
         }
     {offset
       c5nMK: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5nML; else goto c5nMM;
       c5nML: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5nMM: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5kUQ_info" {
     sat_s5kUQ_info:
         const sat_s5kUQ_entry;
         const 1;
         const 16;
 },
 Data.OldList.nub_entry() //  [R2, R3]
         { []
         }
     {offset
       c5nMN: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5nMR; else goto c5nMQ;
       c5nMR: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.nub_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5nMQ: // global
           I64[Hp - 16] = sat_s5kUQ_info;
           P64[Hp] = R2;
           R3 = R3;
           R2 = Hp - 16;
           call Data.OldList.nubBy_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.nub_info" {
     Data.OldList.nub_info:
         const Data.OldList.nub_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.599635712 UTC

[section ""data" . Data.OldList.deleteBy_closure" {
     Data.OldList.deleteBy_closure:
         const Data.OldList.deleteBy_info;
 },
 sat_s5kUY_entry() //  [R1]
         { []
         }
     {offset
       c5nNi: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5nNj; else goto c5nNk;
       c5nNj: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5nNk: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R4 = P64[R1 + 32];
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.OldList.deleteBy_entry(R4,
                                            R3,
                                            R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5kUY_info" {
     sat_s5kUY_info:
         const sat_s5kUY_entry;
         const 3;
         const 15;
 },
 Data.OldList.deleteBy_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5nNp: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5nNq; else goto c5nNr;
       c5nNq: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.deleteBy_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5nNr: // global
           I64[Sp - 24] = block_c5nN4_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5nNG; else goto c5nN5;
       u5nNG: // global
           call _c5nN4(R1) args: 0, res: 0, upd: 0;
       c5nN5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.deleteBy_info" {
     Data.OldList.deleteBy_info:
         const Data.OldList.deleteBy_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5nN4() //  [R1]
         { []
         }
     {offset
       c5nN4: // global
           if (R1 & 7 == 1) goto c5nNm; else goto c5nNn;
       c5nNm: // global
           R1 = []_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nNn: // global
           I64[Sp - 16] = block_c5nNa_info;
           _s5kUV::P64 = P64[R1 + 6];
           R3 = _s5kUV::P64;
           R2 = P64[Sp + 16];
           _s5kUW::P64 = P64[R1 + 14];
           R1 = P64[Sp + 8];
           P64[Sp - 8] = _s5kUW::P64;
           P64[Sp] = _s5kUV::P64;
           Sp = Sp - 16;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nN4_info" {
     block_c5nN4_info:
         const _c5nN4;
         const 2;
         const 30;
 },
 _c5nNa() //  [R1]
         { []
         }
     {offset
       c5nNa: // global
           _s5kUW::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5nNx; else goto c5nNE;
       c5nNx: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c5nNA; else goto c5nNz;
       c5nNA: // global
           HpAlloc = 64;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5nNz: // global
           I64[Hp - 56] = sat_s5kUY_info;
           P64[Hp - 40] = P64[Sp + 24];
           P64[Hp - 32] = P64[Sp + 32];
           P64[Hp - 24] = _s5kUW::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = Hp - 56;
           R1 = Hp - 14;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nNE: // global
           R1 = _s5kUW::P64 & (-8);
           Sp = Sp + 40;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nNa_info" {
     block_c5nNa_info:
         const _c5nNa;
         const 4;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.610784921 UTC

[section ""data" . Data.OldList.deleteFirstsBy_closure" {
     Data.OldList.deleteFirstsBy_closure:
         const Data.OldList.deleteFirstsBy_info;
 },
 Data.OldList.deleteFirstsBy_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5nOf: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5nOg; else goto c5nOh;
       c5nOg: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.deleteFirstsBy_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5nOh: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call _c5nOj() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.deleteFirstsBy_info" {
     Data.OldList.deleteFirstsBy_info:
         const Data.OldList.deleteFirstsBy_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5nOj() //  []
         { []
         }
     {offset
       c5nOj: // global
           I64[Sp - 8] = block_c5nOl_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5nOH; else goto c5nOn;
       u5nOH: // global
           call _c5nOl(R1) args: 0, res: 0, upd: 0;
       c5nOn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5nOl() //  [R1]
         { []
         }
     {offset
       c5nOl: // global
           _s5kV4::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5nOt; else goto c5nOy;
       c5nOt: // global
           R1 = _s5kV4::P64 & (-8);
           Sp = Sp + 32;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5nOy: // global
           I64[Sp] = block_c5nOw_info;
           R4 = _s5kV4::P64;
           R3 = P64[R1 + 6];
           R2 = P64[Sp + 8];
           P64[Sp + 24] = P64[R1 + 14];
           call Data.OldList.deleteBy_entry(R4,
                                            R3,
                                            R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nOl_info" {
     block_c5nOl_info:
         const _c5nOl;
         const 131;
         const 30;
 },
 _c5nOw() //  [R1]
         { []
         }
     {offset
       c5nOw: // global
           P64[Sp + 16] = P64[Sp + 24];
           P64[Sp + 24] = R1;
           Sp = Sp + 8;
           call _c5nOj() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5nOw_info" {
     block_c5nOw_info:
         const _c5nOw;
         const 131;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.62016015 UTC

[section ""data" . Data.OldList.delete_closure" {
     Data.OldList.delete_closure:
         const Data.OldList.delete_info;
 },
 sat_s5kVc_entry() //  [R1]
         { []
         }
     {offset
       c5nPb: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5nPc; else goto c5nPd;
       c5nPc: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5nPd: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5kVc_info" {
     sat_s5kVc_info:
         const sat_s5kVc_entry;
         const 1;
         const 16;
 },
 Data.OldList.delete_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5nPe: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5nPi; else goto c5nPh;
       c5nPi: // global
           HpAlloc = 24;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.delete_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5nPh: // global
           I64[Hp - 16] = sat_s5kVc_info;
           P64[Hp] = R2;
           R4 = R4;
           R3 = R3;
           R2 = Hp - 16;
           call Data.OldList.deleteBy_entry(R4,
                                            R3,
                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.delete_info" {
     Data.OldList.delete_info:
         const Data.OldList.delete_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.627709356 UTC

[section ""data" . Data.OldList.\\_closure" {
     Data.OldList.\\_closure:
         const Data.OldList.\\_info;
 },
 lvl12_s5kVg_entry() //  [R1]
         { []
         }
     {offset
       c5nPz: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5nPA; else goto c5nPB;
       c5nPA: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5nPB: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl12_s5kVg_info" {
     lvl12_s5kVg_info:
         const lvl12_s5kVg_entry;
         const 1;
         const 16;
 },
 Data.OldList.\\_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5nPE: // global
           _s5kVf::P64 = R4;
           _s5kVe::P64 = R3;
           _s5kVd::P64 = R2;
           if ((Sp + -32) < SpLim) (likely: False) goto c5nPF; else goto c5nPG;
       c5nPG: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5nPI; else goto c5nPH;
       c5nPI: // global
           HpAlloc = 24;
           goto c5nPF;
       c5nPF: // global
           R4 = _s5kVf::P64;
           R3 = _s5kVe::P64;
           R2 = _s5kVd::P64;
           R1 = Data.OldList.\\_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5nPH: // global
           I64[Hp - 16] = lvl12_s5kVg_info;
           P64[Hp] = _s5kVd::P64;
           P64[Sp - 24] = Hp - 16;
           P64[Sp - 16] = _s5kVf::P64;
           P64[Sp - 8] = _s5kVe::P64;
           Sp = Sp - 24;
           call _c5nPK() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.\\_info" {
     Data.OldList.\\_info:
         const Data.OldList.\\_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5nPK() //  []
         { []
         }
     {offset
       c5nPK: // global
           I64[Sp - 8] = block_c5nPM_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5nQ8; else goto c5nPO;
       u5nQ8: // global
           call _c5nPM(R1) args: 0, res: 0, upd: 0;
       c5nPO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5nPM() //  [R1]
         { []
         }
     {offset
       c5nPM: // global
           _s5kVj::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5nPU; else goto c5nPZ;
       c5nPU: // global
           R1 = _s5kVj::P64 & (-8);
           Sp = Sp + 32;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5nPZ: // global
           I64[Sp] = block_c5nPX_info;
           R4 = _s5kVj::P64;
           R3 = P64[R1 + 6];
           R2 = P64[Sp + 8];
           P64[Sp + 24] = P64[R1 + 14];
           call Data.OldList.deleteBy_entry(R4,
                                            R3,
                                            R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nPM_info" {
     block_c5nPM_info:
         const _c5nPM;
         const 131;
         const 30;
 },
 _c5nPX() //  [R1]
         { []
         }
     {offset
       c5nPX: // global
           P64[Sp + 16] = P64[Sp + 24];
           P64[Sp + 24] = R1;
           Sp = Sp + 8;
           call _c5nPK() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5nPX_info" {
     block_c5nPX_info:
         const _c5nPX;
         const 131;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.640371419 UTC

[section ""data" . Data.OldList.unionBy_closure" {
     Data.OldList.unionBy_closure:
         const Data.OldList.unionBy_info;
 },
 sat_s5kVz_entry() //  [R1]
         { []
         }
     {offset
       c5nQJ: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5nQK; else goto c5nQL;
       c5nQK: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5nQL: // global
           I64[Sp - 24] = block_c5nQH_info;
           R3 = P64[R1 + 32];
           _s5kVo::P64 = P64[R1 + 16];
           R2 = _s5kVo::P64;
           P64[Sp - 16] = _s5kVo::P64;
           P64[Sp - 8] = P64[R1 + 24];
           Sp = Sp - 24;
           call Data.OldList.nubBy_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5kVz_info" {
     sat_s5kVz_info:
         const sat_s5kVz_entry;
         const 3;
         const 15;
 },
 _c5nQH() //  [R1]
         { []
         }
     {offset
       c5nQH: // global
           P64[Sp] = R1;
           P64[Sp + 16] = P64[Sp + 16];
           call _c5nQS() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5nQH_info" {
     block_c5nQH_info:
         const _c5nQH;
         const 2;
         const 30;
 },
 _c5nQS() //  []
         { []
         }
     {offset
       c5nQS: // global
           I64[Sp - 8] = block_c5nQU_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5nRg; else goto c5nQW;
       u5nRg: // global
           call _c5nQU(R1) args: 0, res: 0, upd: 0;
       c5nQW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5nQU() //  [R1]
         { []
         }
     {offset
       c5nQU: // global
           _s5kVt::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5nR2; else goto c5nR7;
       c5nR2: // global
           R1 = _s5kVt::P64 & (-8);
           Sp = Sp + 32;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5nR7: // global
           I64[Sp + 8] = block_c5nR5_info;
           R4 = _s5kVt::P64;
           R3 = P64[R1 + 6];
           R2 = P64[Sp + 16];
           P64[Sp + 24] = P64[R1 + 14];
           Sp = Sp + 8;
           call Data.OldList.deleteBy_entry(R4,
                                            R3,
                                            R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nQU_info" {
     block_c5nQU_info:
         const _c5nQU;
         const 259;
         const 30;
 },
 _c5nR5() //  [R1]
         { []
         }
     {offset
       c5nR5: // global
           P64[Sp + 16] = P64[Sp + 16];
           P64[Sp] = R1;
           call _c5nQS() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5nR5_info" {
     block_c5nR5_info:
         const _c5nR5;
         const 2;
         const 30;
 },
 Data.OldList.unionBy_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5nRi: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c5nRm; else goto c5nRl;
       c5nRm: // global
           HpAlloc = 40;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.unionBy_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5nRl: // global
           I64[Hp - 32] = sat_s5kVz_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           _s5kVp::P64 = R3;
           R3 = Hp - 32;
           R2 = _s5kVp::P64;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.unionBy_info" {
     Data.OldList.unionBy_info:
         const Data.OldList.unionBy_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.65528869 UTC

[section ""data" . Data.OldList.union_closure" {
     Data.OldList.union_closure:
         const Data.OldList.union_info;
 },
 sat_s5kVD_entry() //  [R1]
         { []
         }
     {offset
       c5nRX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5nRY; else goto c5nRZ;
       c5nRY: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5nRZ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5kVD_info" {
     sat_s5kVD_info:
         const sat_s5kVD_entry;
         const 1;
         const 16;
 },
 Data.OldList.union_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5nS0: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5nS4; else goto c5nS3;
       c5nS4: // global
           HpAlloc = 24;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.union_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5nS3: // global
           I64[Hp - 16] = sat_s5kVD_info;
           P64[Hp] = R2;
           R4 = R4;
           R3 = R3;
           R2 = Hp - 16;
           call Data.OldList.unionBy_entry(R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.union_info" {
     Data.OldList.union_info:
         const Data.OldList.union_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.664471907 UTC

[section ""data" . Data.OldList.intersectBy_closure" {
     Data.OldList.intersectBy_closure:
         const Data.OldList.intersectBy_info;
 },
 go_s5kVN_entry() //  [R1, R2]
         { []
         }
     {offset
       c5nSF: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5nSG; else goto u5nT7;
       c5nSG: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       u5nT7: // global
           P64[Sp - 16] = R1;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call _c5nSv() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . go_s5kVN_info" {
     go_s5kVN_info:
         const go_s5kVN_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 _c5nSv() //  []
         { []
         }
     {offset
       c5nSv: // global
           I64[Sp - 16] = block_c5nSy_info;
           R1 = P64[Sp + 8];
           _s5kVN::P64 = P64[Sp];
           P64[Sp - 8] = P64[_s5kVN::P64 + 15];
           P64[Sp + 8] = P64[_s5kVN::P64 + 7];
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5nT9; else goto c5nSz;
       u5nT9: // global
           call _c5nSy(R1) args: 0, res: 0, upd: 0;
       c5nSz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5nSy() //  [R1]
         { []
         }
     {offset
       c5nSy: // global
           if (R1 & 7 == 1) goto c5nSC; else goto c5nSD;
       c5nSC: // global
           R1 = []_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nSD: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5nSR; else goto c5nSQ;
       c5nSR: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5nSQ: // global
           _s5kVQ::P64 = P64[R1 + 6];
           _s5kVR::P64 = P64[R1 + 14];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = P64[Sp + 24];
           P64[Hp] = _s5kVQ::P64;
           I64[Sp] = block_c5nSO_info;
           R3 = P64[Sp + 8];
           R2 = Hp - 24;
           P64[Sp + 8] = _s5kVR::P64;
           P64[Sp + 24] = _s5kVQ::P64;
           call GHC.List.any_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nSy_info" {
     block_c5nSy_info:
         const _c5nSy;
         const 3;
         const 30;
 },
 _c5nSO() //  [R1]
         { []
         }
     {offset
       c5nSO: // global
           _s5kVR::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5nSX; else goto c5nT2;
       c5nSX: // global
           P64[Sp + 24] = _s5kVR::P64;
           Sp = Sp + 16;
           call _c5nSv() args: 0, res: 0, upd: 0;
       c5nT2: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5nT5; else goto c5nT4;
       c5nT5: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5nT4: // global
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = _s5kVR::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = P64[Sp + 24];
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nSO_info" {
     block_c5nSO_info:
         const _c5nSO;
         const 3;
         const 30;
 },
 Data.OldList.intersectBy_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5nTg: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5nTh; else goto c5nTi;
       c5nTh: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.intersectBy_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5nTi: // global
           I64[Sp - 24] = block_c5nSh_info;
           R1 = R3;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5nTA; else goto c5nSi;
       u5nTA: // global
           call _c5nSh(R1) args: 0, res: 0, upd: 0;
       c5nSi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.intersectBy_info" {
     Data.OldList.intersectBy_info:
         const Data.OldList.intersectBy_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5nSh() //  [R1]
         { []
         }
     {offset
       c5nSh: // global
           if (R1 & 7 == 1) goto u5nTv; else goto c5nTe;
       u5nTv: // global
           Sp = Sp + 24;
           call _c5nTp() args: 0, res: 0, upd: 0;
       c5nTe: // global
           I64[Sp] = block_c5nSn_info;
           _s5kVH::P64 = R1;
           R1 = P64[Sp + 16];
           P64[Sp + 16] = _s5kVH::P64;
           if (R1 & 7 != 0) goto u5nTx; else goto c5nSo;
       u5nTx: // global
           call _c5nSn(R1) args: 0, res: 0, upd: 0;
       c5nSo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nSh_info" {
     block_c5nSh_info:
         const _c5nSh;
         const 2;
         const 30;
 },
 _c5nSn() //  [R1]
         { []
         }
     {offset
       c5nSn: // global
           if (R1 & 7 == 1) goto u5nTw; else goto c5nTq;
       u5nTw: // global
           Sp = Sp + 24;
           call _c5nTp() args: 0, res: 0, upd: 0;
       c5nTq: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5nTt; else goto c5nTs;
       c5nTt: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5nTs: // global
           I64[Hp - 16] = go_s5kVN_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = R1;
           R2 = P64[Sp + 16];
           R1 = Hp - 15;
           Sp = Sp + 24;
           call go_s5kVN_entry(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nSn_info" {
     block_c5nSn_info:
         const _c5nSn;
         const 2;
         const 30;
 },
 _c5nTp() //  []
         { []
         }
     {offset
       c5nTp: // global
           R1 = []_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.67984804 UTC

[section ""data" . Data.OldList.intersect_closure" {
     Data.OldList.intersect_closure:
         const Data.OldList.intersect_info;
 },
 sat_s5kVY_entry() //  [R1]
         { []
         }
     {offset
       c5nUt: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5nUu; else goto c5nUv;
       c5nUu: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5nUv: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5kVY_info" {
     sat_s5kVY_info:
         const sat_s5kVY_entry;
         const 1;
         const 16;
 },
 Data.OldList.intersect_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5nUw: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5nUA; else goto c5nUz;
       c5nUA: // global
           HpAlloc = 24;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.intersect_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5nUz: // global
           I64[Hp - 16] = sat_s5kVY_info;
           P64[Hp] = R2;
           R4 = R4;
           R3 = R3;
           R2 = Hp - 16;
           call Data.OldList.intersectBy_entry(R4,
                                               R3,
                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.intersect_info" {
     Data.OldList.intersect_info:
         const Data.OldList.intersect_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.687986465 UTC

[section ""data" . Data.OldList.prependToAll_closure" {
     Data.OldList.prependToAll_closure:
         const Data.OldList.prependToAll_info;
 },
 sat_s5kW4_entry() //  [R1]
         { []
         }
     {offset
       c5nUX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5nUY; else goto c5nUZ;
       c5nUY: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5nUZ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5kW4_info" {
     sat_s5kW4_info:
         const sat_s5kW4_entry;
         const 2;
         const 18;
 },
 Data.OldList.prependToAll_entry() //  [R2, R3]
         { []
         }
     {offset
       c5nV4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5nV5; else goto c5nV6;
       c5nV5: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.prependToAll_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5nV6: // global
           I64[Sp - 16] = block_c5nUN_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5nVe; else goto c5nUO;
       u5nVe: // global
           call _c5nUN(R1) args: 0, res: 0, upd: 0;
       c5nUO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.prependToAll_info" {
     Data.OldList.prependToAll_info:
         const Data.OldList.prependToAll_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5nUN() //  [R1]
         { []
         }
     {offset
       c5nUN: // global
           if (R1 & 7 == 1) goto c5nV1; else goto c5nV2;
       c5nV1: // global
           R1 = []_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nV2: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto c5nVd; else goto c5nVc;
       c5nVd: // global
           HpAlloc = 80;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5nVc: // global
           _s5kW2::P64 = P64[R1 + 6];
           _s5kW3::P64 = P64[R1 + 14];
           I64[Hp - 72] = sat_s5kW4_info;
           _s5kVZ::P64 = P64[Sp + 8];
           P64[Hp - 56] = _s5kVZ::P64;
           P64[Hp - 48] = _s5kW3::P64;
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = _s5kW2::P64;
           P64[Hp - 24] = Hp - 72;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5kVZ::P64;
           P64[Hp] = Hp - 38;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nUN_info" {
     block_c5nUN_info:
         const _c5nUN;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.697149065 UTC

[section ""data" . Data.OldList.intersperse_closure" {
     Data.OldList.intersperse_closure:
         const Data.OldList.intersperse_info;
 },
 sat_s5kWb_entry() //  [R1]
         { []
         }
     {offset
       c5nVM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5nVN; else goto c5nVO;
       c5nVN: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5nVO: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5kWb_info" {
     sat_s5kWb_info:
         const sat_s5kWb_entry;
         const 2;
         const 18;
 },
 Data.OldList.intersperse_entry() //  [R2, R3]
         { []
         }
     {offset
       c5nVT: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5nVU; else goto c5nVV;
       c5nVU: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.intersperse_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5nVV: // global
           I64[Sp - 16] = block_c5nVC_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5nW2; else goto c5nVD;
       u5nW2: // global
           call _c5nVC(R1) args: 0, res: 0, upd: 0;
       c5nVD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.intersperse_info" {
     Data.OldList.intersperse_info:
         const Data.OldList.intersperse_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5nVC() //  [R1]
         { []
         }
     {offset
       c5nVC: // global
           if (R1 & 7 == 1) goto c5nVQ; else goto c5nVR;
       c5nVQ: // global
           R1 = []_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nVR: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5nW1; else goto c5nW0;
       c5nW1: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5nW0: // global
           _s5kW9::P64 = P64[R1 + 6];
           _s5kWa::P64 = P64[R1 + 14];
           I64[Hp - 48] = sat_s5kWb_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s5kWa::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5kW9::P64;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nVC_info" {
     block_c5nVC_info:
         const _c5nVC;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.707082509 UTC

[section ""data" . Data.OldList.intercalate1_closure" {
     Data.OldList.intercalate1_closure:
         const Data.OldList.intercalate1_info;
 },
 sat_s5kWg_entry() //  [R1]
         { []
         }
     {offset
       c5nWA: // global
           R2 = P64[R1 + 16];
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5kWg_info" {
     sat_s5kWg_info:
         const sat_s5kWg_entry;
         const 1;
         const 16;
 },
 Data.OldList.intercalate1_entry() //  [R2]
         { []
         }
     {offset
       c5nWH: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5nWI; else goto c5nWJ;
       c5nWI: // global
           R2 = R2;
           R1 = Data.OldList.intercalate1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5nWJ: // global
           I64[Sp - 8] = block_c5nWq_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5nWP; else goto c5nWr;
       u5nWP: // global
           call _c5nWq(R1) args: 0, res: 0, upd: 0;
       c5nWr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.intercalate1_info" {
     Data.OldList.intercalate1_info:
         const Data.OldList.intercalate1_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5nWq() //  [R1]
         { []
         }
     {offset
       c5nWq: // global
           if (R1 & 7 == 1) goto c5nWE; else goto c5nWF;
       c5nWE: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nWF: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5nWO; else goto c5nWN;
       c5nWO: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5nWN: // global
           _s5kWe::P64 = P64[R1 + 6];
           _s5kWf::P64 = P64[R1 + 14];
           I64[Hp - 16] = sat_s5kWg_info;
           P64[Hp] = _s5kWf::P64;
           R3 = Hp - 16;
           R2 = _s5kWe::P64;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nWq_info" {
     block_c5nWq_info:
         const _c5nWq;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.716144156 UTC

[section ""data" . Data.OldList.intercalate_closure" {
     Data.OldList.intercalate_closure:
         const Data.OldList.intercalate_info;
 },
 sat_s5kWm_entry() //  [R1]
         { []
         }
     {offset
       c5nXj: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5nXk; else goto c5nXl;
       c5nXk: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5nXl: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5kWm_info" {
     sat_s5kWm_info:
         const sat_s5kWm_entry;
         const 2;
         const 18;
 },
 Data.OldList.intercalate_entry() //  [R2, R3]
         { []
         }
     {offset
       c5nXq: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5nXr; else goto c5nXs;
       c5nXr: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.intercalate_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5nXs: // global
           I64[Sp - 16] = block_c5nX9_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5nXz; else goto c5nXa;
       u5nXz: // global
           call _c5nX9(R1) args: 0, res: 0, upd: 0;
       c5nXa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.intercalate_info" {
     Data.OldList.intercalate_info:
         const Data.OldList.intercalate_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5nX9() //  [R1]
         { []
         }
     {offset
       c5nX9: // global
           if (R1 & 7 == 1) goto c5nXn; else goto c5nXo;
       c5nXn: // global
           R1 = []_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nXo: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5nXy; else goto c5nXx;
       c5nXy: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5nXx: // global
           _s5kWk::P64 = P64[R1 + 6];
           _s5kWl::P64 = P64[R1 + 14];
           I64[Hp - 48] = sat_s5kWm_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s5kWl::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5kWk::P64;
           P64[Hp] = Hp - 48;
           R2 = Hp - 14;
           Sp = Sp + 16;
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nX9_info" {
     block_c5nX9_info:
         const _c5nX9;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.732175872 UTC

[section ""data" . poly_go_r5kSf_closure" {
     poly_go_r5kSf_closure:
         const poly_go_r5kSf_info;
 },
 sat_s5kWv_entry() //  [R1]
         { []
         }
     {offset
       c5nYc: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5nYd; else goto c5nYe;
       c5nYd: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5nYe: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call poly_go_r5kSf_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5kWv_info" {
     sat_s5kWv_info:
         const sat_s5kWv_entry;
         const 1;
         const 16;
 },
 poly_go_r5kSf_entry() //  [R2]
         { []
         }
     {offset
       c5nYj: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5nYk; else goto u5nYz;
       c5nYk: // global
           R2 = R2;
           R1 = poly_go_r5kSf_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       u5nYz: // global
           P64[Sp - 8] = R2;
           Sp = Sp - 8;
           call _c5nXT() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . poly_go_r5kSf_info" {
     poly_go_r5kSf_info:
         const poly_go_r5kSf_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5nXT() //  []
         { []
         }
     {offset
       c5nXT: // global
           _s5kWo::P64 = P64[Sp];
           I64[Sp] = block_c5nXW_info;
           R1 = _s5kWo::P64;
           if (R1 & 7 != 0) goto u5nYB; else goto c5nXX;
       u5nYB: // global
           call _c5nXW(R1) args: 0, res: 0, upd: 0;
       c5nXX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5nXW() //  [R1]
         { []
         }
     {offset
       c5nXW: // global
           if (R1 & 7 == 1) goto c5nYg; else goto c5nYh;
       c5nYg: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nYh: // global
           I64[Sp - 8] = block_c5nY2_info;
           _s5kWr::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5kWr::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5nYC; else goto c5nY3;
       u5nYC: // global
           call _c5nY2(R1) args: 0, res: 0, upd: 0;
       c5nY3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nXW_info" {
     block_c5nXW_info:
         const _c5nXW;
         const 0;
         const 30;
 },
 _c5nY2() //  [R1]
         { []
         }
     {offset
       c5nY2: // global
           _s5kWr::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5nYs; else goto c5nYu;
       c5nYs: // global
           P64[Sp + 8] = _s5kWr::P64;
           Sp = Sp + 8;
           call _c5nXT() args: 0, res: 0, upd: 0;
       c5nYu: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5nYx; else goto c5nYw;
       c5nYx: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5nYw: // global
           _s5kWu::P64 = P64[R1 + 14];
           I64[Hp - 40] = sat_s5kWv_info;
           P64[Hp - 24] = _s5kWr::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5kWu::P64;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nY2_info" {
     block_c5nY2_info:
         const _c5nY2;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.750320668 UTC

[section ""data" . poly_go1_r5kSg_closure" {
     poly_go1_r5kSg_closure:
         const poly_go1_r5kSg_info;
 },
 sat_s5kWD_entry() //  [R1]
         { []
         }
     {offset
       c5nZp: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5nZq; else goto c5nZr;
       c5nZq: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5nZr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call poly_go1_r5kSg_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5kWD_info" {
     sat_s5kWD_info:
         const sat_s5kWD_entry;
         const 1;
         const 16;
 },
 poly_go1_r5kSg_entry() //  [R2]
         { []
         }
     {offset
       c5nZw: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5nZx; else goto u5nZM;
       c5nZx: // global
           R2 = R2;
           R1 = poly_go1_r5kSg_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       u5nZM: // global
           P64[Sp - 8] = R2;
           Sp = Sp - 8;
           call _c5nZ6() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . poly_go1_r5kSg_info" {
     poly_go1_r5kSg_info:
         const poly_go1_r5kSg_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5nZ6() //  []
         { []
         }
     {offset
       c5nZ6: // global
           _s5kWw::P64 = P64[Sp];
           I64[Sp] = block_c5nZ9_info;
           R1 = _s5kWw::P64;
           if (R1 & 7 != 0) goto u5nZO; else goto c5nZa;
       u5nZO: // global
           call _c5nZ9(R1) args: 0, res: 0, upd: 0;
       c5nZa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5nZ9() //  [R1]
         { []
         }
     {offset
       c5nZ9: // global
           if (R1 & 7 == 1) goto c5nZt; else goto c5nZu;
       c5nZt: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5nZu: // global
           I64[Sp - 8] = block_c5nZf_info;
           _s5kWz::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5kWz::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5nZP; else goto c5nZg;
       u5nZP: // global
           call _c5nZf(R1) args: 0, res: 0, upd: 0;
       c5nZg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nZ9_info" {
     block_c5nZ9_info:
         const _c5nZ9;
         const 0;
         const 30;
 },
 _c5nZf() //  [R1]
         { []
         }
     {offset
       c5nZf: // global
           _s5kWz::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5nZF; else goto c5nZH;
       c5nZF: // global
           P64[Sp + 8] = _s5kWz::P64;
           Sp = Sp + 8;
           call _c5nZ6() args: 0, res: 0, upd: 0;
       c5nZH: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5nZK; else goto c5nZJ;
       c5nZK: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5nZJ: // global
           _s5kWB::P64 = P64[R1 + 6];
           I64[Hp - 40] = sat_s5kWD_info;
           P64[Hp - 24] = _s5kWz::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5kWB::P64;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5nZf_info" {
     block_c5nZf_info:
         const _c5nZf;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.77172611 UTC

[section ""data" . Data.OldList.transpose_closure" {
     Data.OldList.transpose_closure:
         const Data.OldList.transpose_info;
 },
 sat_s5kWN_entry() //  [R1]
         { []
         }
     {offset
       c5o0G: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5o0H; else goto c5o0I;
       c5o0H: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5o0I: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call poly_go_r5kSf_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5kWN_info" {
     sat_s5kWN_info:
         const sat_s5kWN_entry;
         const 1;
         const 16;
 },
 sat_s5kWP_entry() //  [R1]
         { []
         }
     {offset
       c5o0K: // global
           _s5kWP::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5o0L; else goto c5o0M;
       c5o0M: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5o0O; else goto c5o0N;
       c5o0O: // global
           HpAlloc = 48;
           goto c5o0L;
       c5o0L: // global
           R1 = _s5kWP::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5o0N: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5kWP::P64;
           _s5kWH::P64 = P64[_s5kWP::P64 + 16];
           _s5kWK::P64 = P64[_s5kWP::P64 + 24];
           I64[Hp - 40] = sat_s5kWN_info;
           P64[Hp - 24] = _s5kWH::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5kWK::P64;
           P64[Hp] = Hp - 40;
           R2 = Hp - 14;
           Sp = Sp - 16;
           call Data.OldList.transpose_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5kWP_info" {
     sat_s5kWP_info:
         const sat_s5kWP_entry;
         const 2;
         const 18;
 },
 sat_s5kWL_entry() //  [R1]
         { []
         }
     {offset
       c5o0T: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5o0U; else goto c5o0V;
       c5o0U: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5o0V: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call poly_go1_r5kSg_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5kWL_info" {
     sat_s5kWL_info:
         const sat_s5kWL_entry;
         const 1;
         const 16;
 },
 Data.OldList.transpose_entry() //  [R2]
         { []
         }
     {offset
       c5o10: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5o11; else goto u5o1h;
       c5o11: // global
           R2 = R2;
           R1 = Data.OldList.transpose_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       u5o1h: // global
           P64[Sp - 8] = R2;
           Sp = Sp - 8;
           call _c5o0j() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.transpose_info" {
     Data.OldList.transpose_info:
         const Data.OldList.transpose_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5o0j() //  []
         { []
         }
     {offset
       c5o0j: // global
           _s5kWE::P64 = P64[Sp];
           I64[Sp] = block_c5o0m_info;
           R1 = _s5kWE::P64;
           if (R1 & 7 != 0) goto u5o1j; else goto c5o0n;
       u5o1j: // global
           call _c5o0m(R1) args: 0, res: 0, upd: 0;
       c5o0n: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5o0m() //  [R1]
         { []
         }
     {offset
       c5o0m: // global
           if (R1 & 7 == 1) goto c5o0X; else goto c5o0Y;
       c5o0X: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5o0Y: // global
           I64[Sp - 8] = block_c5o0s_info;
           _s5kWH::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5kWH::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5o1k; else goto c5o0t;
       u5o1k: // global
           call _c5o0s(R1) args: 0, res: 0, upd: 0;
       c5o0t: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5o0m_info" {
     block_c5o0m_info:
         const _c5o0m;
         const 0;
         const 30;
 },
 _c5o0s() //  [R1]
         { []
         }
     {offset
       c5o0s: // global
           _s5kWH::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5o19; else goto c5o1c;
       c5o19: // global
           P64[Sp + 8] = _s5kWH::P64;
           Sp = Sp + 8;
           call _c5o0j() args: 0, res: 0, upd: 0;
       c5o1c: // global
           Hp = Hp + 104;
           if (Hp > HpLim) (likely: False) goto c5o1f; else goto c5o1e;
       c5o1f: // global
           HpAlloc = 104;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5o1e: // global
           _s5kWJ::P64 = P64[R1 + 6];
           _s5kWK::P64 = P64[R1 + 14];
           I64[Hp - 96] = sat_s5kWP_info;
           P64[Hp - 80] = _s5kWH::P64;
           P64[Hp - 72] = _s5kWK::P64;
           I64[Hp - 64] = sat_s5kWL_info;
           P64[Hp - 48] = _s5kWH::P64;
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = _s5kWJ::P64;
           P64[Hp - 24] = Hp - 64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 96;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5o0s_info" {
     block_c5o0s_info:
         const _c5o0s;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.796104588 UTC

[section ""data" . Data.OldList.select_closure" {
     Data.OldList.select_closure:
         const Data.OldList.select_info;
 },
 Data.OldList.select_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5o28: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5o29; else goto c5o2a;
       c5o29: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.select_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5o2a: // global
           I64[Sp - 24] = block_c5o22_info;
           _s5kWQ::P64 = R2;
           R2 = R3;
           R1 = _s5kWQ::P64;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.select_info" {
     Data.OldList.select_info:
         const Data.OldList.select_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5o22() //  [R1]
         { []
         }
     {offset
       c5o22: // global
           _s5kWR::P64 = P64[Sp + 8];
           _s5kWS::P64 = P64[Sp + 16];
           if (R1 & 7 == 1) goto c5o25; else goto c5o26;
       c5o25: // global
           Hp = Hp + 96;
           _s5kWT::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5o2s; else goto c5o2i;
       c5o2i: // global
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = _s5kWS::P64;
           I64[Hp - 64] = :_con_info;
           P64[Hp - 56] = _s5kWR::P64;
           P64[Hp - 48] = Hp - 88;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _s5kWS::P64;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 62;
           R1 = Hp - 15;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5o26: // global
           Hp = Hp + 96;
           _s5kWT::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5o2s; else goto c5o2r;
       c5o2s: // global
           HpAlloc = 96;
           R1 = _s5kWT::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5o2r: // global
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = _s5kWS::P64;
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = _s5kWS::P64;
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = _s5kWR::P64;
           P64[Hp - 24] = Hp - 64;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 88;
           R1 = Hp - 15;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5o22_info" {
     block_c5o22_info:
         const _c5o22;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.80684923 UTC

[section ""data" . Data.OldList.partition_closure" {
     Data.OldList.partition_closure:
         const Data.OldList.partition_info;
 },
 w1_s5kXj_entry() //  [R1]
         { []
         }
     {offset
       c5o37: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5o38; else goto c5o39;
       c5o38: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5o39: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5o34_info;
           R2 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           call $wgo_s5kXe_entry(R2, R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . w1_s5kXj_info" {
     w1_s5kXj_info:
         const w1_s5kXj_entry;
         const 2;
         const 18;
 },
 _c5o34() //  [R1, R2]
         { []
         }
     {offset
       c5o34: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5o3c; else goto c5o3b;
       c5o3c: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c5o3b: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5o34_info" {
     block_c5o34_info:
         const _c5o34;
         const 0;
         const 30;
 },
 $wgo_s5kXe_entry() //  [R1, R2]
         { []
         }
     {offset
       c5o3h: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5o3i; else goto c5o3j;
       c5o3i: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5o3j: // global
           I64[Sp - 24] = block_c5o2U_info;
           _s5kXe::P64 = R1;
           _s5kXc::P64 = P64[R1 + 7];
           R1 = R2;
           P64[Sp - 16] = _s5kXc::P64;
           P64[Sp - 8] = _s5kXe::P64;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5o3L; else goto c5o2V;
       u5o3L: // global
           call _c5o2U(R1) args: 0, res: 0, upd: 0;
       c5o2V: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . $wgo_s5kXe_info" {
     $wgo_s5kXe_info:
         const $wgo_s5kXe_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c5o2U() //  [R1]
         { []
         }
     {offset
       c5o2U: // global
           if (R1 & 7 == 1) goto c5o3e; else goto c5o3f;
       c5o3e: // global
           R2 = GHC.Types.[]_closure+1;
           R1 = GHC.Types.[]_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
       c5o3f: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5o3p; else goto c5o3o;
       c5o3p: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5o3o: // global
           _s5kXh::P64 = P64[R1 + 6];
           _s5kXi::P64 = P64[R1 + 14];
           I64[Hp - 24] = w1_s5kXj_info;
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = _s5kXi::P64;
           I64[Sp] = block_c5o3m_info;
           R2 = _s5kXh::P64;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5kXh::P64;
           P64[Sp + 16] = Hp - 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5o2U_info" {
     block_c5o2U_info:
         const _c5o2U;
         const 2;
         const 30;
 },
 _c5o3m() //  [R1]
         { []
         }
     {offset
       c5o3m: // global
           _c5o30::P64 = P64[Sp + 16];
           _s5kXh::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5o3x; else goto c5o3G;
       c5o3x: // global
           Hp = Hp + 72;
           _s5kXn::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5o3J; else goto c5o3z;
       c5o3z: // global
           I64[Hp - 64] = stg_sel_1_upd_info;
           P64[Hp - 48] = _c5o30::P64;
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = _s5kXh::P64;
           P64[Hp - 24] = Hp - 64;
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _c5o30::P64;
           R2 = Hp - 38;
           R1 = Hp - 16;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
       c5o3G: // global
           Hp = Hp + 72;
           _s5kXn::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5o3J; else goto c5o3I;
       c5o3J: // global
           HpAlloc = 72;
           R1 = _s5kXn::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5o3I: // global
           I64[Hp - 64] = stg_sel_1_upd_info;
           P64[Hp - 48] = _c5o30::P64;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _c5o30::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5kXh::P64;
           P64[Hp] = Hp - 40;
           R2 = Hp - 64;
           R1 = Hp - 14;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5o3m_info" {
     block_c5o3m_info:
         const _c5o3m;
         const 2;
         const 30;
 },
 Data.OldList.partition_entry() //  [R2, R3]
         { []
         }
     {offset
       c5o3P: // global
           _s5kXd::P64 = R3;
           _s5kXc::P64 = R2;
           if ((Sp + -8) < SpLim) (likely: False) goto c5o3Q; else goto c5o3R;
       c5o3R: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5o3T; else goto c5o3S;
       c5o3T: // global
           HpAlloc = 16;
           goto c5o3Q;
       c5o3Q: // global
           R3 = _s5kXd::P64;
           R2 = _s5kXc::P64;
           R1 = Data.OldList.partition_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5o3S: // global
           I64[Hp - 8] = $wgo_s5kXe_info;
           P64[Hp] = _s5kXc::P64;
           I64[Sp - 8] = block_c5o3M_info;
           R2 = _s5kXd::P64;
           R1 = Hp - 7;
           Sp = Sp - 8;
           call $wgo_s5kXe_entry(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.partition_info" {
     Data.OldList.partition_info:
         const Data.OldList.partition_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5o3M() //  [R1, R2]
         { []
         }
     {offset
       c5o3M: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5o3W; else goto c5o3V;
       c5o3W: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c5o3V: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5o3M_info" {
     block_c5o3M_info:
         const _c5o3M;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.822971261 UTC

[section ""data" . Data.OldList.pairWithNil_closure" {
     Data.OldList.pairWithNil_closure:
         const Data.OldList.pairWithNil_info;
 },
 Data.OldList.pairWithNil_entry() //  [R2]
         { []
         }
     {offset
       c5o4F: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5o4J; else goto c5o4I;
       c5o4J: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Data.OldList.pairWithNil_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5o4I: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = GHC.Types.[]_closure+1;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.pairWithNil_info" {
     Data.OldList.pairWithNil_info:
         const Data.OldList.pairWithNil_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.830010637 UTC

[section ""data" . Data.OldList.mapAccumLF_closure" {
     Data.OldList.mapAccumLF_closure:
         const Data.OldList.mapAccumLF_info;
 },
 ds1_s5kXP_entry() //  [R1]
         { []
         }
     {offset
       c5o4Z: // global
           _s5kXP::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5o50; else goto c5o51;
       c5o51: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5o53; else goto c5o52;
       c5o53: // global
           HpAlloc = 24;
           goto c5o50;
       c5o50: // global
           R1 = _s5kXP::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5o52: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5kXP::P64;
           _s5kXM::P64 = P64[_s5kXP::P64 + 16];
           _s5kXO::P64 = P64[_s5kXP::P64 + 24];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _s5kXO::P64;
           R2 = Hp - 16;
           R1 = _s5kXM::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds1_s5kXP_info" {
     ds1_s5kXP_info:
         const ds1_s5kXP_entry;
         const 2;
         const 18;
 },
 Data.OldList.mapAccumLF_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5o59: // global
           Hp = Hp + 192;
           if (Hp > HpLim) (likely: False) goto c5o5d; else goto c5o5c;
       c5o5d: // global
           HpAlloc = 192;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.mapAccumLF_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5o5c: // global
           I64[Hp - 184] = stg_ap_3_upd_info;
           P64[Hp - 168] = R2;
           P64[Hp - 160] = R5;
           P64[Hp - 152] = R3;
           I64[Hp - 144] = ds1_s5kXP_info;
           P64[Hp - 128] = R4;
           _c5o4T::P64 = Hp - 184;
           P64[Hp - 120] = _c5o4T::P64;
           I64[Hp - 112] = stg_sel_1_upd_info;
           _c5o4U::P64 = Hp - 144;
           P64[Hp - 96] = _c5o4U::P64;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = _c5o4T::P64;
           I64[Hp - 64] = :_con_info;
           P64[Hp - 56] = Hp - 88;
           P64[Hp - 48] = Hp - 112;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _c5o4U::P64;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 62;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.mapAccumLF_info" {
     Data.OldList.mapAccumLF_info:
         const Data.OldList.mapAccumLF_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.843476008 UTC

[section ""data" . Data.OldList.$wmapAccumL_closure" {
     Data.OldList.$wmapAccumL_closure:
         const Data.OldList.$wmapAccumL_info;
 },
 ds1_s5kYe_entry() //  [R1]
         { []
         }
     {offset
       c5o5K: // global
           _s5kYe::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c5o5L; else goto c5o5M;
       c5o5M: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5o5O; else goto c5o5N;
       c5o5O: // global
           HpAlloc = 24;
           goto c5o5L;
       c5o5L: // global
           R1 = _s5kYe::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5o5N: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5kYe::P64;
           _s5kY7::P64 = P64[_s5kYe::P64 + 16];
           _s5kYc::P64 = P64[_s5kYe::P64 + 24];
           _s5kYd::P64 = P64[_s5kYe::P64 + 32];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _s5kYd::P64;
           I64[Sp - 24] = block_c5o5H_info;
           R4 = _s5kYc::P64;
           R3 = Hp - 16;
           R2 = _s5kY7::P64;
           Sp = Sp - 24;
           call Data.OldList.$wmapAccumL_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds1_s5kYe_info" {
     ds1_s5kYe_info:
         const ds1_s5kYe_entry;
         const 3;
         const 15;
 },
 _c5o5H() //  [R1, R2]
         { []
         }
     {offset
       c5o5H: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5o5R; else goto c5o5Q;
       c5o5R: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c5o5Q: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5o5H_info" {
     block_c5o5H_info:
         const _c5o5H;
         const 0;
         const 30;
 },
 Data.OldList.$wmapAccumL_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5o5W: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5o5X; else goto c5o5Y;
       c5o5X: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.$wmapAccumL_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5o5Y: // global
           I64[Sp - 24] = block_c5o5v_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5o68; else goto c5o5w;
       u5o68: // global
           call _c5o5v(R1) args: 0, res: 0, upd: 0;
       c5o5w: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.$wmapAccumL_info" {
     Data.OldList.$wmapAccumL_info:
         const Data.OldList.$wmapAccumL_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5o5v() //  [R1]
         { []
         }
     {offset
       c5o5v: // global
           _s5kY8::P64 = P64[Sp + 16];
           if (R1 & 7 == 1) goto c5o5T; else goto c5o5U;
       c5o5T: // global
           R2 = GHC.Types.[]_closure+1;
           R1 = _s5kY8::P64;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
       c5o5U: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto c5o67; else goto c5o66;
       c5o67: // global
           HpAlloc = 176;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5o66: // global
           _s5kYb::P64 = P64[R1 + 6];
           _s5kYc::P64 = P64[R1 + 14];
           I64[Hp - 168] = stg_ap_3_upd_info;
           _s5kY7::P64 = P64[Sp + 8];
           P64[Hp - 152] = _s5kY7::P64;
           P64[Hp - 144] = _s5kY8::P64;
           P64[Hp - 136] = _s5kYb::P64;
           I64[Hp - 128] = ds1_s5kYe_info;
           P64[Hp - 112] = _s5kY7::P64;
           P64[Hp - 104] = _s5kYc::P64;
           _c5o5B::P64 = Hp - 168;
           P64[Hp - 96] = _c5o5B::P64;
           I64[Hp - 88] = stg_sel_1_upd_info;
           _c5o5C::P64 = Hp - 128;
           P64[Hp - 72] = _c5o5C::P64;
           I64[Hp - 64] = stg_sel_1_upd_info;
           P64[Hp - 48] = _c5o5B::P64;
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _c5o5C::P64;
           R2 = Hp - 38;
           R1 = Hp - 16;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5o5v_info" {
     block_c5o5v_info:
         const _c5o5v;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.857653104 UTC

[section ""data" . Data.OldList.mapAccumL_closure" {
     Data.OldList.mapAccumL_closure:
         const Data.OldList.mapAccumL_info;
 },
 Data.OldList.mapAccumL_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5o6D: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5o6E; else goto c5o6F;
       c5o6E: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.mapAccumL_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5o6F: // global
           I64[Sp - 8] = block_c5o6A_info;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Data.OldList.$wmapAccumL_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.mapAccumL_info" {
     Data.OldList.mapAccumL_info:
         const Data.OldList.mapAccumL_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5o6A() //  [R1, R2]
         { []
         }
     {offset
       c5o6A: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5o6I; else goto c5o6H;
       c5o6I: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c5o6H: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5o6A_info" {
     block_c5o6A_info:
         const _c5o6A;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.865854834 UTC

[section ""data" . Data.OldList.$wmapAccumR_closure" {
     Data.OldList.$wmapAccumR_closure:
         const Data.OldList.$wmapAccumR_info;
 },
 ds_s5kYL_entry() //  [R1]
         { []
         }
     {offset
       c5o79: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5o7a; else goto c5o7b;
       c5o7a: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5o7b: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5o76_info;
           R4 = P64[R1 + 32];
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call Data.OldList.$wmapAccumR_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds_s5kYL_info" {
     ds_s5kYL_info:
         const ds_s5kYL_entry;
         const 3;
         const 15;
 },
 _c5o76() //  [R1, R2]
         { []
         }
     {offset
       c5o76: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5o7e; else goto c5o7d;
       c5o7e: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c5o7d: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5o76_info" {
     block_c5o76_info:
         const _c5o76;
         const 0;
         const 30;
 },
 ds1_s5kYP_entry() //  [R1]
         { []
         }
     {offset
       c5o7k: // global
           _s5kYP::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5o7l; else goto c5o7m;
       c5o7m: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5o7o; else goto c5o7n;
       c5o7o: // global
           HpAlloc = 24;
           goto c5o7l;
       c5o7l: // global
           R1 = _s5kYP::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5o7n: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5kYP::P64;
           _s5kYF::P64 = P64[_s5kYP::P64 + 16];
           _s5kYJ::P64 = P64[_s5kYP::P64 + 24];
           _s5kYL::P64 = P64[_s5kYP::P64 + 32];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _s5kYL::P64;
           R3 = _s5kYJ::P64;
           R2 = Hp - 16;
           R1 = _s5kYF::P64;
           Sp = Sp - 16;
           call stg_ap_pp_fast(R3, R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds1_s5kYP_info" {
     ds1_s5kYP_info:
         const ds1_s5kYP_entry;
         const 3;
         const 15;
 },
 Data.OldList.$wmapAccumR_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5o7t: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5o7u; else goto c5o7v;
       c5o7u: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.$wmapAccumR_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5o7v: // global
           I64[Sp - 24] = block_c5o6W_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5o7F; else goto c5o6X;
       u5o7F: // global
           call _c5o6W(R1) args: 0, res: 0, upd: 0;
       c5o6X: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.$wmapAccumR_info" {
     Data.OldList.$wmapAccumR_info:
         const Data.OldList.$wmapAccumR_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5o6W() //  [R1]
         { []
         }
     {offset
       c5o6W: // global
           _s5kYG::P64 = P64[Sp + 16];
           if (R1 & 7 == 1) goto c5o7q; else goto c5o7r;
       c5o7q: // global
           R2 = GHC.Types.[]_closure+1;
           R1 = _s5kYG::P64;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
       c5o7r: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto c5o7E; else goto c5o7D;
       c5o7E: // global
           HpAlloc = 176;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5o7D: // global
           _s5kYJ::P64 = P64[R1 + 6];
           _s5kYK::P64 = P64[R1 + 14];
           I64[Hp - 168] = ds_s5kYL_info;
           _s5kYF::P64 = P64[Sp + 8];
           P64[Hp - 152] = _s5kYF::P64;
           P64[Hp - 144] = _s5kYG::P64;
           P64[Hp - 136] = _s5kYK::P64;
           I64[Hp - 128] = ds1_s5kYP_info;
           P64[Hp - 112] = _s5kYF::P64;
           P64[Hp - 104] = _s5kYJ::P64;
           _c5o72::P64 = Hp - 168;
           P64[Hp - 96] = _c5o72::P64;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = _c5o72::P64;
           I64[Hp - 64] = stg_sel_1_upd_info;
           _c5o7f::P64 = Hp - 128;
           P64[Hp - 48] = _c5o7f::P64;
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _c5o7f::P64;
           R2 = Hp - 38;
           R1 = Hp - 16;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5o6W_info" {
     block_c5o6W_info:
         const _c5o6W;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.878891694 UTC

[section ""data" . Data.OldList.mapAccumR_closure" {
     Data.OldList.mapAccumR_closure:
         const Data.OldList.mapAccumR_info;
 },
 Data.OldList.mapAccumR_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5o8e: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5o8f; else goto c5o8g;
       c5o8f: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.mapAccumR_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5o8g: // global
           I64[Sp - 8] = block_c5o8b_info;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Data.OldList.$wmapAccumR_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.mapAccumR_info" {
     Data.OldList.mapAccumR_info:
         const Data.OldList.mapAccumR_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5o8b() //  [R1, R2]
         { []
         }
     {offset
       c5o8b: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5o8j; else goto c5o8i;
       c5o8j: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c5o8i: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5o8b_info" {
     block_c5o8b_info:
         const _c5o8b;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.887086619 UTC

[section ""data" . Data.OldList.insertBy_closure" {
     Data.OldList.insertBy_closure:
         const Data.OldList.insertBy_info;
 },
 Data.OldList.insertBy_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5o8A: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5o8B; else goto c5o8C;
       c5o8B: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.insertBy_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5o8C: // global
           I64[Sp - 8] = block_c5o8x_info;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Data.OldList.$winsertBy_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.insertBy_info" {
     Data.OldList.insertBy_info:
         const Data.OldList.insertBy_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5o8x() //  [R1, R2]
         { []
         }
     {offset
       c5o8x: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5o8F; else goto c5o8E;
       c5o8F: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c5o8E: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5o8x_info" {
     block_c5o8x_info:
         const _c5o8x;
         const 0;
         const 30;
 },
 section ""data" . Data.OldList.$winsertBy_closure" {
     Data.OldList.$winsertBy_closure:
         const Data.OldList.$winsertBy_info;
 },
 sat_s5kZq_entry() //  [R1]
         { []
         }
     {offset
       c5o8Z: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5o90; else goto c5o91;
       c5o90: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5o91: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R4 = P64[R1 + 32];
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.OldList.insertBy_entry(R4,
                                            R3,
                                            R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5kZq_info" {
     sat_s5kZq_info:
         const sat_s5kZq_entry;
         const 3;
         const 15;
 },
 Data.OldList.$winsertBy_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5o96: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c5o97; else goto c5o98;
       c5o97: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.$winsertBy_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5o98: // global
           I64[Sp - 24] = block_c5o8K_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5o9l; else goto c5o8L;
       u5o9l: // global
           call _c5o8K(R1) args: 0, res: 0, upd: 0;
       c5o8L: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.$winsertBy_info" {
     Data.OldList.$winsertBy_info:
         const Data.OldList.$winsertBy_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5o8K() //  [R1]
         { []
         }
     {offset
       c5o8K: // global
           _s5kZk::P64 = P64[Sp + 16];
           if (R1 & 7 == 1) goto c5o93; else goto c5o94;
       c5o93: // global
           R2 = GHC.Types.[]_closure+1;
           R1 = _s5kZk::P64;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
       c5o94: // global
           I64[Sp - 24] = block_c5o8Q_info;
           _s5kZn::P64 = P64[R1 + 6];
           R3 = _s5kZn::P64;
           R2 = _s5kZk::P64;
           _s5kZm::P64 = R1;
           _s5kZo::P64 = P64[R1 + 14];
           R1 = P64[Sp + 8];
           P64[Sp - 16] = _s5kZn::P64;
           P64[Sp - 8] = _s5kZo::P64;
           P64[Sp] = _s5kZm::P64;
           Sp = Sp - 24;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5o8K_info" {
     block_c5o8K_info:
         const _c5o8K;
         const 2;
         const 30;
 },
 _c5o8Q() //  [R1]
         { []
         }
     {offset
       c5o8Q: // global
           _s5kZk::P64 = P64[Sp + 40];
           if (R1 & 7 == 3) goto c5o9g; else goto c5o9f;
       c5o9g: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c5o9j; else goto c5o9i;
       c5o9j: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5o9i: // global
           I64[Hp - 32] = sat_s5kZq_info;
           P64[Hp - 16] = P64[Sp + 32];
           P64[Hp - 8] = _s5kZk::P64;
           P64[Hp] = P64[Sp + 16];
           R2 = Hp - 32;
           R1 = P64[Sp + 8];
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
       c5o9f: // global
           R2 = P64[Sp + 24];
           R1 = _s5kZk::P64;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5o8Q_info" {
     block_c5o8Q_info:
         const _c5o8Q;
         const 5;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.901992586 UTC

[section ""data" . Data.OldList.insert_closure" {
     Data.OldList.insert_closure:
         const Data.OldList.insert_info;
 },
 sat_s5kZu_entry() //  [R1]
         { []
         }
     {offset
       c5oa2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5oa3; else goto c5oa4;
       c5oa3: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oa4: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.compare_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5kZu_info" {
     sat_s5kZu_info:
         const sat_s5kZu_entry;
         const 1;
         const 16;
 },
 Data.OldList.insert_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5oa8: // global
           _s5kZt::P64 = R4;
           _s5kZs::P64 = R3;
           _s5kZr::P64 = R2;
           if ((Sp + -8) < SpLim) (likely: False) goto c5oa9; else goto c5oaa;
       c5oaa: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5oac; else goto c5oab;
       c5oac: // global
           HpAlloc = 24;
           goto c5oa9;
       c5oa9: // global
           R4 = _s5kZt::P64;
           R3 = _s5kZs::P64;
           R2 = _s5kZr::P64;
           R1 = Data.OldList.insert_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5oab: // global
           I64[Hp - 16] = sat_s5kZu_info;
           P64[Hp] = _s5kZr::P64;
           I64[Sp - 8] = block_c5oa5_info;
           R4 = _s5kZt::P64;
           R3 = _s5kZs::P64;
           R2 = Hp - 16;
           Sp = Sp - 8;
           call Data.OldList.$winsertBy_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.insert_info" {
     Data.OldList.insert_info:
         const Data.OldList.insert_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5oa5() //  [R1, R2]
         { []
         }
     {offset
       c5oa5: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5oaf; else goto c5oae;
       c5oaf: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c5oae: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oa5_info" {
     block_c5oa5_info:
         const _c5oa5;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.909100112 UTC

[section ""cstring" . lvl_r5kSh_bytes" {
     lvl_r5kSh_bytes:
         I8[] [76,105,115,116,46,109,97,120,105,109,117,109,66,121,58,32,101,109,112,116,121,32,108,105,115,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.912456715 UTC

[section ""data" . Data.OldList.maximumBy1_closure" {
     Data.OldList.maximumBy1_closure:
         const Data.OldList.maximumBy1_info;
         const 0;
         const 0;
         const 0;
 },
 Data.OldList.maximumBy1_entry() //  [R1]
         { []
         }
     {offset
       c5oaC: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5oaD; else goto c5oaE;
       c5oaD: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oaE: // global
           (_c5oax::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5oax::I64 == 0) goto c5oaz; else goto c5oay;
       c5oaz: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5oay: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5oax::I64;
           I64[Sp - 24] = block_c5oaA_info;
           R2 = lvl_r5kSh_bytes;
           Sp = Sp - 24;
           call GHC.CString.unpackCString#_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . Data.OldList.maximumBy1_info" {
     Data.OldList.maximumBy1_info:
         const Data.OldList.maximumBy1_entry;
         const 0;
         const 4294967317;
         const S5lDv_srt;
 },
 _c5oaA() //  [R1]
         { []
         }
     {offset
       c5oaA: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5oaA_info" {
     block_c5oaA_info:
         const _c5oaA;
         const 0;
         const 4294967326;
         const S5lDv_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.920424093 UTC

[section ""data" . Data.OldList.maximumBy_closure" {
     Data.OldList.maximumBy_closure:
         const Data.OldList.maximumBy_info;
         const 0;
 },
 sat_s5kZL_entry() //  [R1]
         { []
         }
     {offset
       c5obn: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5obo; else goto c5obp;
       c5obo: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5obp: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 40] = block_c5obh_info;
           _s5kZI::P64 = P64[R1 + 32];
           R3 = _s5kZI::P64;
           _s5kZG::P64 = P64[R1 + 24];
           R2 = _s5kZG::P64;
           R1 = P64[R1 + 16];
           P64[Sp - 32] = _s5kZG::P64;
           P64[Sp - 24] = _s5kZI::P64;
           Sp = Sp - 40;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5kZL_info" {
     sat_s5kZL_info:
         const sat_s5kZL_entry;
         const 3;
         const 15;
 },
 _c5obh() //  [R1]
         { []
         }
     {offset
       c5obh: // global
           if (R1 & 7 == 3) goto c5obl; else goto c5obk;
       c5obl: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 24, res: 0, upd: 24;
       c5obk: // global
           R1 = P64[Sp + 16];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5obh_info" {
     block_c5obh_info:
         const _c5obh;
         const 2;
         const 30;
 },
 Data.OldList.maximumBy_entry() //  [R2, R3]
         { []
         }
     {offset
       c5obA: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5obB; else goto c5obC;
       c5obB: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.maximumBy_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5obC: // global
           I64[Sp - 16] = block_c5oaW_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5obV; else goto c5oaX;
       u5obV: // global
           call _c5oaW(R1) args: 0, res: 0, upd: 0;
       c5oaX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.maximumBy_info" {
     Data.OldList.maximumBy_info:
         const Data.OldList.maximumBy_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S5lDv_srt+8;
 },
 _c5oaW() //  [R1]
         { []
         }
     {offset
       c5oaW: // global
           if (R1 & 7 == 1) goto c5obx; else goto c5oby;
       c5obx: // global
           R1 = Data.OldList.maximumBy1_closure;
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5oby: // global
           P64[Sp - 8] = P64[R1 + 6];
           P64[Sp] = P64[R1 + 14];
           Sp = Sp - 8;
           call _c5ob5() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5oaW_info" {
     block_c5oaW_info:
         const _c5oaW;
         const 1;
         const 4294967326;
         const S5lDv_srt+16;
 },
 _c5ob5() //  []
         { []
         }
     {offset
       c5ob5: // global
           I64[Sp - 8] = block_c5ob7_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5obT; else goto c5ob8;
       u5obT: // global
           call _c5ob7(R1) args: 0, res: 0, upd: 0;
       c5ob8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5ob7() //  [R1]
         { []
         }
     {offset
       c5ob7: // global
           _s5kZG::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5obK; else goto c5obL;
       c5obK: // global
           R1 = _s5kZG::P64;
           Sp = Sp + 32;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5obL: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c5obO; else goto c5obN;
       c5obO: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5obN: // global
           _s5kZI::P64 = P64[R1 + 6];
           _s5kZJ::P64 = P64[R1 + 14];
           I64[Hp - 32] = sat_s5kZL_info;
           P64[Hp - 16] = P64[Sp + 24];
           P64[Hp - 8] = _s5kZG::P64;
           P64[Hp] = _s5kZI::P64;
           P64[Sp + 16] = _s5kZJ::P64;
           P64[Sp + 8] = Hp - 32;
           Sp = Sp + 8;
           call _c5ob5() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5ob7_info" {
     block_c5ob7_info:
         const _c5ob7;
         const 131;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.931879667 UTC

[section ""cstring" . lvl1_r5kSi_bytes" {
     lvl1_r5kSi_bytes:
         I8[] [76,105,115,116,46,109,105,110,105,109,117,109,66,121,58,32,101,109,112,116,121,32,108,105,115,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.934518915 UTC

[section ""data" . Data.OldList.minimumBy1_closure" {
     Data.OldList.minimumBy1_closure:
         const Data.OldList.minimumBy1_info;
         const 0;
         const 0;
         const 0;
 },
 Data.OldList.minimumBy1_entry() //  [R1]
         { []
         }
     {offset
       c5ocB: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5ocC; else goto c5ocD;
       c5ocC: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5ocD: // global
           (_c5ocw::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5ocw::I64 == 0) goto c5ocy; else goto c5ocx;
       c5ocy: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5ocx: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5ocw::I64;
           I64[Sp - 24] = block_c5ocz_info;
           R2 = lvl1_r5kSi_bytes;
           Sp = Sp - 24;
           call GHC.CString.unpackCString#_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . Data.OldList.minimumBy1_info" {
     Data.OldList.minimumBy1_info:
         const Data.OldList.minimumBy1_entry;
         const 0;
         const 4294967317;
         const S5lDv_srt;
 },
 _c5ocz() //  [R1]
         { []
         }
     {offset
       c5ocz: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5ocz_info" {
     block_c5ocz_info:
         const _c5ocz;
         const 0;
         const 4294967326;
         const S5lDv_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.94227004 UTC

[section ""data" . Data.OldList.minimumBy_closure" {
     Data.OldList.minimumBy_closure:
         const Data.OldList.minimumBy_info;
         const 0;
 },
 sat_s5kZZ_entry() //  [R1]
         { []
         }
     {offset
       c5odm: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5odn; else goto c5odo;
       c5odn: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5odo: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 40] = block_c5odg_info;
           _s5kZW::P64 = P64[R1 + 32];
           R3 = _s5kZW::P64;
           _s5kZU::P64 = P64[R1 + 24];
           R2 = _s5kZU::P64;
           R1 = P64[R1 + 16];
           P64[Sp - 32] = _s5kZU::P64;
           P64[Sp - 24] = _s5kZW::P64;
           Sp = Sp - 40;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5kZZ_info" {
     sat_s5kZZ_info:
         const sat_s5kZZ_entry;
         const 3;
         const 15;
 },
 _c5odg() //  [R1]
         { []
         }
     {offset
       c5odg: // global
           if (R1 & 7 == 3) goto c5odk; else goto c5odj;
       c5odk: // global
           R1 = P64[Sp + 16];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 24, res: 0, upd: 24;
       c5odj: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5odg_info" {
     block_c5odg_info:
         const _c5odg;
         const 2;
         const 30;
 },
 Data.OldList.minimumBy_entry() //  [R2, R3]
         { []
         }
     {offset
       c5odz: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5odA; else goto c5odB;
       c5odA: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.minimumBy_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5odB: // global
           I64[Sp - 16] = block_c5ocV_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5odU; else goto c5ocW;
       u5odU: // global
           call _c5ocV(R1) args: 0, res: 0, upd: 0;
       c5ocW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.minimumBy_info" {
     Data.OldList.minimumBy_info:
         const Data.OldList.minimumBy_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S5lDv_srt+24;
 },
 _c5ocV() //  [R1]
         { []
         }
     {offset
       c5ocV: // global
           if (R1 & 7 == 1) goto c5odw; else goto c5odx;
       c5odw: // global
           R1 = Data.OldList.minimumBy1_closure;
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5odx: // global
           P64[Sp - 8] = P64[R1 + 6];
           P64[Sp] = P64[R1 + 14];
           Sp = Sp - 8;
           call _c5od4() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5ocV_info" {
     block_c5ocV_info:
         const _c5ocV;
         const 1;
         const 4294967326;
         const S5lDv_srt+32;
 },
 _c5od4() //  []
         { []
         }
     {offset
       c5od4: // global
           I64[Sp - 8] = block_c5od6_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5odS; else goto c5od7;
       u5odS: // global
           call _c5od6(R1) args: 0, res: 0, upd: 0;
       c5od7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5od6() //  [R1]
         { []
         }
     {offset
       c5od6: // global
           _s5kZU::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5odJ; else goto c5odK;
       c5odJ: // global
           R1 = _s5kZU::P64;
           Sp = Sp + 32;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5odK: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c5odN; else goto c5odM;
       c5odN: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5odM: // global
           _s5kZW::P64 = P64[R1 + 6];
           _s5kZX::P64 = P64[R1 + 14];
           I64[Hp - 32] = sat_s5kZZ_info;
           P64[Hp - 16] = P64[Sp + 24];
           P64[Hp - 8] = _s5kZU::P64;
           P64[Hp] = _s5kZW::P64;
           P64[Sp + 16] = _s5kZX::P64;
           P64[Sp + 8] = Hp - 32;
           Sp = Sp + 8;
           call _c5od4() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5od6_info" {
     block_c5od6_info:
         const _c5od6;
         const 131;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.954461283 UTC

[section ""data" . sat_s5l00_closure" {
     sat_s5l00_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.956989237 UTC

[section ""data" . sat_s5l01_closure" {
     sat_s5l01_closure:
         const :_con_info;
         const sat_s5l00_closure+1;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.960590638 UTC

[section ""data" . Data.OldList.genericLength2_closure" {
     Data.OldList.genericLength2_closure:
         const Data.OldList.genericLength2_info;
         const 0;
         const 0;
         const 0;
 },
 Data.OldList.genericLength2_entry() //  [R1]
         { []
         }
     {offset
       c5oez: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5oeA; else goto c5oeB;
       c5oeA: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oeB: // global
           (_c5oew::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5oew::I64 == 0) goto c5oey; else goto c5oex;
       c5oey: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5oex: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5oew::I64;
           R3 = sat_s5l01_closure+2;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.OldList.genericLength2_info" {
     Data.OldList.genericLength2_info:
         const Data.OldList.genericLength2_entry;
         const 0;
         const 4294967317;
         const S5lDv_srt+40;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.967163123 UTC

[section ""data" . Data.OldList.genericLength1_closure" {
     Data.OldList.genericLength1_closure:
         const Data.OldList.genericLength1_info;
         const 0;
         const 0;
         const 0;
 },
 Data.OldList.genericLength1_entry() //  [R1]
         { []
         }
     {offset
       c5oeP: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5oeQ; else goto c5oeR;
       c5oeQ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oeR: // global
           (_c5oeM::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5oeM::I64 == 0) goto c5oeO; else goto c5oeN;
       c5oeO: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5oeN: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5oeM::I64;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.OldList.genericLength1_info" {
     Data.OldList.genericLength1_info:
         const Data.OldList.genericLength1_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.977073549 UTC

[section ""data" . Data.OldList.strictGenericLength_closure" {
     Data.OldList.strictGenericLength_closure:
         const Data.OldList.strictGenericLength_info;
         const 0;
 },
 lvl12_s5l04_entry() //  [R1]
         { []
         }
     {offset
       c5of8: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5of9; else goto c5ofa;
       c5of9: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5ofa: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl12_s5l04_info" {
     lvl12_s5l04_info:
         const lvl12_s5l04_entry;
         const 1;
         const 4294967312;
         const S5lDv_srt+48;
 },
 sat_s5l0c_entry() //  [R1]
         { []
         }
     {offset
       c5ofe: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5off; else goto c5ofg;
       c5off: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5ofg: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength1_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l0c_info" {
     sat_s5l0c_info:
         const sat_s5l0c_entry;
         const 1;
         const 4294967312;
         const S5lDv_srt+56;
 },
 Data.OldList.strictGenericLength_entry() //  [R2, R3]
         { []
         }
     {offset
       c5ofj: // global
           _s5l03::P64 = R3;
           _s5l02::P64 = R2;
           if ((Sp + -64) < SpLim) (likely: False) goto c5ofk; else goto c5ofl;
       c5ofl: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5ofn; else goto c5ofm;
       c5ofn: // global
           HpAlloc = 48;
           goto c5ofk;
       c5ofk: // global
           R3 = _s5l03::P64;
           R2 = _s5l02::P64;
           R1 = Data.OldList.strictGenericLength_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5ofm: // global
           I64[Hp - 40] = lvl12_s5l04_info;
           P64[Hp - 24] = _s5l02::P64;
           I64[Hp - 16] = sat_s5l0c_info;
           P64[Hp] = _s5l02::P64;
           P64[Sp - 32] = Hp - 40;
           P64[Sp - 24] = _s5l02::P64;
           P64[Sp - 16] = _s5l03::P64;
           P64[Sp - 8] = Hp - 16;
           Sp = Sp - 32;
           call _c5ofp() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.strictGenericLength_info" {
     Data.OldList.strictGenericLength_info:
         const Data.OldList.strictGenericLength_entry;
         const 0;
         const 30064771086;
         const 8589934607;
         const S5lDv_srt+48;
 },
 _c5ofp() //  []
         { []
         }
     {offset
       c5ofp: // global
           I64[Sp - 8] = block_c5ofr_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5ofL; else goto c5oft;
       u5ofL: // global
           call _c5ofr(R1) args: 0, res: 0, upd: 0;
       c5oft: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5ofr() //  [R1]
         { []
         }
     {offset
       c5ofr: // global
           _s5l07::P64 = P64[Sp + 32];
           if (R1 & 7 == 1) goto c5ofz; else goto c5ofE;
       c5ofz: // global
           R1 = _s5l07::P64;
           Sp = Sp + 40;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5ofE: // global
           I64[Sp] = block_c5ofC_info;
           R2 = P64[Sp + 16];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s5l07::P64;
           P64[Sp - 8] = P64[Sp + 8];
           P64[Sp + 32] = P64[R1 + 14];
           Sp = Sp - 24;
           call GHC.Num.+_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ofr_info" {
     block_c5ofr_info:
         const _c5ofr;
         const 260;
         const 30;
 },
 _c5ofC() //  [R1]
         { []
         }
     {offset
       c5ofC: // global
           P64[Sp + 24] = P64[Sp + 32];
           P64[Sp + 32] = R1;
           Sp = Sp + 8;
           call _c5ofp() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5ofC_info" {
     block_c5ofC_info:
         const _c5ofC;
         const 260;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:19.997921513 UTC

[section ""data" . Data.OldList.genericLength_closure" {
     Data.OldList.genericLength_closure:
         const Data.OldList.genericLength_info;
         const 0;
 },
 sat_s5l0j_entry() //  [R1]
         { []
         }
     {offset
       c5ogu: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5ogv; else goto c5ogw;
       c5ogv: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5ogw: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.OldList.genericLength_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l0j_info" {
     sat_s5l0j_info:
         const sat_s5l0j_entry;
         const 2;
         const 4294967314;
         const S5lDv_srt+72;
 },
 sat_s5l0i_entry() //  [R1]
         { []
         }
     {offset
       c5ogB: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5ogC; else goto c5ogD;
       c5ogC: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5ogD: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l0i_info" {
     sat_s5l0i_info:
         const sat_s5l0i_entry;
         const 1;
         const 4294967312;
         const S5lDv_srt+48;
 },
 Data.OldList.genericLength_entry() //  [R2, R3]
         { []
         }
     {offset
       c5ogI: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5ogJ; else goto c5ogK;
       c5ogJ: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.genericLength_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5ogK: // global
           I64[Sp - 16] = block_c5ogk_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5ogQ; else goto c5ogl;
       u5ogQ: // global
           call _c5ogk(R1) args: 0, res: 0, upd: 0;
       c5ogl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.genericLength_info" {
     Data.OldList.genericLength_info:
         const Data.OldList.genericLength_entry;
         const 0;
         const 47244640270;
         const 8589934607;
         const S5lDv_srt+48;
 },
 _c5ogk() //  [R1]
         { []
         }
     {offset
       c5ogk: // global
           _s5l0d::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5ogF; else goto c5ogG;
       c5ogF: // global
           R2 = _s5l0d::P64;
           I64[Sp] = stg_ap_p_info;
           P64[Sp + 8] = Data.OldList.genericLength1_closure;
           call GHC.Num.fromInteger_entry(R2) args: 24, res: 0, upd: 8;
       c5ogG: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5ogP; else goto c5ogO;
       c5ogP: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5ogO: // global
           _s5l0h::P64 = P64[R1 + 14];
           I64[Hp - 48] = sat_s5l0j_info;
           P64[Hp - 32] = _s5l0d::P64;
           P64[Hp - 24] = _s5l0h::P64;
           I64[Hp - 16] = sat_s5l0i_info;
           P64[Hp] = _s5l0d::P64;
           R2 = _s5l0d::P64;
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = Hp - 16;
           P64[Sp + 8] = Hp - 48;
           Sp = Sp - 8;
           call GHC.Num.+_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ogk_info" {
     block_c5ogk_info:
         const _c5ogk;
         const 1;
         const 47244640286;
         const S5lDv_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.014901408 UTC

[section ""data" . Data.OldList.genericTake_closure" {
     Data.OldList.genericTake_closure:
         const Data.OldList.genericTake_info;
         const 0;
 },
 $dNum_s5l0o_entry() //  [R1]
         { []
         }
     {offset
       c5oho: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5ohp; else goto c5ohq;
       c5ohp: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5ohq: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Real.$p1Real_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . $dNum_s5l0o_info" {
     $dNum_s5l0o_info:
         const $dNum_s5l0o_entry;
         const 1;
         const 16;
 },
 sat_s5l0q_entry() //  [R1]
         { []
         }
     {offset
       c5ohv: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5ohw; else goto c5ohx;
       c5ohw: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5ohx: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength1_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l0q_info" {
     sat_s5l0q_info:
         const sat_s5l0q_entry;
         const 1;
         const 4294967312;
         const S5lDv_srt+56;
 },
 sat_s5l0v_entry() //  [R1]
         { []
         }
     {offset
       c5ohY: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5ohZ; else goto c5oi0;
       c5ohZ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oi0: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l0v_info" {
     sat_s5l0v_info:
         const sat_s5l0v_entry;
         const 1;
         const 4294967312;
         const S5lDv_srt+48;
 },
 sat_s5l0w_entry() //  [R1]
         { []
         }
     {offset
       c5oi1: // global
           _s5l0w::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto c5oi2; else goto c5oi3;
       c5oi3: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5oi5; else goto c5oi4;
       c5oi5: // global
           HpAlloc = 24;
           goto c5oi2;
       c5oi2: // global
           R1 = _s5l0w::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oi4: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5l0w::P64;
           _s5l0l::P64 = P64[_s5l0w::P64 + 16];
           _s5l0o::P64 = P64[_s5l0w::P64 + 24];
           I64[Hp - 16] = sat_s5l0v_info;
           P64[Hp] = _s5l0o::P64;
           R2 = _s5l0o::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = _s5l0l::P64;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 40;
           call GHC.Num.-_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l0w_info" {
     sat_s5l0w_info:
         const sat_s5l0w_entry;
         const 2;
         const 4294967314;
         const S5lDv_srt+48;
 },
 sat_s5l0x_entry() //  [R1]
         { []
         }
     {offset
       c5oi6: // global
           _s5l0x::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5oi7; else goto c5oi8;
       c5oi8: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5oia; else goto c5oi9;
       c5oia: // global
           HpAlloc = 32;
           goto c5oi7;
       c5oi7: // global
           R1 = _s5l0x::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oi9: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5l0x::P64;
           _s5l0k::P64 = P64[_s5l0x::P64 + 16];
           _s5l0l::P64 = P64[_s5l0x::P64 + 24];
           _s5l0o::P64 = P64[_s5l0x::P64 + 32];
           _s5l0u::P64 = P64[_s5l0x::P64 + 40];
           I64[Hp - 24] = sat_s5l0w_info;
           P64[Hp - 8] = _s5l0l::P64;
           P64[Hp] = _s5l0o::P64;
           R4 = _s5l0u::P64;
           R3 = Hp - 24;
           R2 = _s5l0k::P64;
           Sp = Sp - 16;
           call Data.OldList.genericTake_entry(R4,
                                               R3,
                                               R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l0x_info" {
     sat_s5l0x_info:
         const sat_s5l0x_entry;
         const 4;
         const 73014444047;
         const S5lDv_srt+48;
 },
 Data.OldList.genericTake_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5oib: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c5oic; else goto c5oid;
       c5oic: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.genericTake_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5oid: // global
           I64[Sp - 32] = block_c5ohg_info;
           _s5l0k::P64 = R2;
           R2 = R2;
           P64[Sp - 24] = _s5l0k::P64;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call GHC.Real.$p1Integral_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.genericTake_info" {
     Data.OldList.genericTake_info:
         const Data.OldList.genericTake_entry;
         const 0;
         const 81604378638;
         const 12884901911;
         const S5lDv_srt+48;
 },
 _c5ohg() //  [R1]
         { []
         }
     {offset
       c5ohg: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5oig; else goto c5oif;
       c5oig: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oif: // global
           I64[Hp - 40] = $dNum_s5l0o_info;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = sat_s5l0q_info;
           _c5ohk::P64 = Hp - 40;
           P64[Hp] = _c5ohk::P64;
           I64[Sp - 16] = block_c5ohy_info;
           R2 = R1;
           P64[Sp - 8] = Hp - 16;
           P64[Sp] = _c5ohk::P64;
           Sp = Sp - 16;
           call GHC.Real.$p2Real_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ohg_info" {
     block_c5ohg_info:
         const _c5ohg;
         const 3;
         const 81604378654;
         const S5lDv_srt+48;
 },
 _c5ohy() //  [R1]
         { []
         }
     {offset
       c5ohy: // global
           _c5ohr::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5ohC_info;
           R2 = R1;
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = P64[Sp + 32];
           P64[Sp] = _c5ohr::P64;
           Sp = Sp - 16;
           call GHC.Classes.<=_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ohy_info" {
     block_c5ohy_info:
         const _c5ohy;
         const 5;
         const 73014444062;
         const S5lDv_srt+48;
 },
 _c5ohC() //  [R1]
         { []
         }
     {offset
       c5ohC: // global
           if (R1 & 7 == 1) goto c5oik; else goto u5oiA;
       c5oik: // global
           I64[Sp] = block_c5ohG_info;
           R1 = P64[Sp + 32];
           if (R1 & 7 != 0) goto u5oiC; else goto c5ohH;
       u5oiC: // global
           call _c5ohG(R1) args: 0, res: 0, upd: 0;
       c5ohH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       u5oiA: // global
           Sp = Sp + 40;
           call _c5oix() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5ohC_info" {
     block_c5ohC_info:
         const _c5ohC;
         const 4;
         const 73014444062;
         const S5lDv_srt+48;
 },
 _c5ohG() //  [R1]
         { []
         }
     {offset
       c5ohG: // global
           if (R1 & 7 == 1) goto u5oiB; else goto c5oiq;
       u5oiB: // global
           Sp = Sp + 40;
           call _c5oix() args: 0, res: 0, upd: 0;
       c5oiq: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c5oit; else goto c5ois;
       c5oit: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5ois: // global
           _s5l0t::P64 = P64[R1 + 6];
           _s5l0u::P64 = P64[R1 + 14];
           I64[Hp - 64] = sat_s5l0x_info;
           P64[Hp - 48] = P64[Sp + 16];
           P64[Hp - 40] = P64[Sp + 24];
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s5l0u::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5l0t::P64;
           P64[Hp] = Hp - 64;
           R1 = Hp - 14;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ohG_info" {
     block_c5ohG_info:
         const _c5ohG;
         const 516;
         const 73014444062;
         const S5lDv_srt+48;
 },
 _c5oix() //  []
         { []
         }
     {offset
       c5oix: // global
           R1 = []_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.042874271 UTC

[section ""data" . Data.OldList.genericReplicate_closure" {
     Data.OldList.genericReplicate_closure:
         const Data.OldList.genericReplicate_info;
         const 0;
 },
 sat_s5l0B_entry() //  [R1]
         { []
         }
     {offset
       c5ojE: // global
           R2 = P64[R1 + 16];
           call GHC.List.repeat_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5l0B_info" {
     sat_s5l0B_info:
         const sat_s5l0B_entry;
         const 1;
         const 16;
 },
 Data.OldList.genericReplicate_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5ojH: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5ojL; else goto c5ojK;
       c5ojL: // global
           HpAlloc = 24;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.genericReplicate_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5ojK: // global
           I64[Hp - 16] = sat_s5l0B_info;
           P64[Hp] = R4;
           R4 = Hp - 16;
           R3 = R3;
           R2 = R2;
           call Data.OldList.genericTake_entry(R4,
                                               R3,
                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.genericReplicate_info" {
     Data.OldList.genericReplicate_info:
         const Data.OldList.genericReplicate_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S5lDv_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.056169763 UTC

[section ""data" . Data.OldList.genericDrop_closure" {
     Data.OldList.genericDrop_closure:
         const Data.OldList.genericDrop_info;
         const 0;
 },
 $dNum_s5l0G_entry() //  [R1]
         { []
         }
     {offset
       c5okm: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5okn; else goto c5oko;
       c5okn: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oko: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Real.$p1Real_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . $dNum_s5l0G_info" {
     $dNum_s5l0G_info:
         const $dNum_s5l0G_entry;
         const 1;
         const 16;
 },
 sat_s5l0I_entry() //  [R1]
         { []
         }
     {offset
       c5okr: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5oks; else goto c5okt;
       c5oks: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5okt: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength1_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l0I_info" {
     sat_s5l0I_info:
         const sat_s5l0I_entry;
         const 1;
         const 4294967312;
         const S5lDv_srt+56;
 },
 sat_s5l0N_entry() //  [R1]
         { []
         }
     {offset
       c5okB: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5okC; else goto c5okD;
       c5okC: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5okD: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l0N_info" {
     sat_s5l0N_info:
         const sat_s5l0N_entry;
         const 1;
         const 4294967312;
         const S5lDv_srt+48;
 },
 sat_s5l0O_entry() //  [R1]
         { []
         }
     {offset
       c5okE: // global
           _s5l0O::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto c5okF; else goto c5okG;
       c5okG: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5okI; else goto c5okH;
       c5okI: // global
           HpAlloc = 24;
           goto c5okF;
       c5okF: // global
           R1 = _s5l0O::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5okH: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5l0O::P64;
           _s5l0D::P64 = P64[_s5l0O::P64 + 16];
           _s5l0G::P64 = P64[_s5l0O::P64 + 24];
           I64[Hp - 16] = sat_s5l0N_info;
           P64[Hp] = _s5l0G::P64;
           R2 = _s5l0G::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = _s5l0D::P64;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 40;
           call GHC.Num.-_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l0O_info" {
     sat_s5l0O_info:
         const sat_s5l0O_entry;
         const 2;
         const 4294967314;
         const S5lDv_srt+48;
 },
 Data.OldList.genericDrop_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5okJ: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c5okK; else goto u5ol7;
       c5okK: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.genericDrop_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u5ol7: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c5ojU() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.genericDrop_info" {
     Data.OldList.genericDrop_info:
         const Data.OldList.genericDrop_entry;
         const 0;
         const 287762808846;
         const 12884901911;
         const S5lDv_srt+48;
 },
 _c5ojU() //  []
         { []
         }
     {offset
       c5ojU: // global
           I64[Sp - 8] = block_c5ojX_info;
           R2 = P64[Sp];
           Sp = Sp - 8;
           call GHC.Real.$p1Integral_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5ojX() //  [R1]
         { []
         }
     {offset
       c5ojX: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5okO; else goto c5okN;
       c5okO: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5okN: // global
           I64[Hp - 40] = $dNum_s5l0G_info;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = sat_s5l0I_info;
           _c5ok1::P64 = Hp - 40;
           P64[Hp] = _c5ok1::P64;
           I64[Sp - 16] = block_c5ok5_info;
           R2 = R1;
           P64[Sp - 8] = Hp - 16;
           P64[Sp] = _c5ok1::P64;
           Sp = Sp - 16;
           call GHC.Real.$p2Real_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ojX_info" {
     block_c5ojX_info:
         const _c5ojX;
         const 3;
         const 12884901918;
         const S5lDv_srt+48;
 },
 _c5ok5() //  [R1]
         { []
         }
     {offset
       c5ok5: // global
           _c5ok3::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5ok9_info;
           R2 = R1;
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = P64[Sp + 32];
           P64[Sp] = _c5ok3::P64;
           Sp = Sp - 16;
           call GHC.Classes.<=_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ok5_info" {
     block_c5ok5_info:
         const _c5ok5;
         const 5;
         const 12884901918;
         const S5lDv_srt+48;
 },
 _c5ok9() //  [R1]
         { []
         }
     {offset
       c5ok9: // global
           _s5l0E::P64 = P64[Sp + 32];
           if (R1 & 7 == 1) goto c5okS; else goto c5ol4;
       c5okS: // global
           I64[Sp] = block_c5okd_info;
           R1 = _s5l0E::P64;
           if (R1 & 7 != 0) goto u5ol9; else goto c5oke;
       u5ol9: // global
           call _c5okd(R1) args: 0, res: 0, upd: 0;
       c5oke: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c5ol4: // global
           R1 = _s5l0E::P64 & (-8);
           Sp = Sp + 40;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ok9_info" {
     block_c5ok9_info:
         const _c5ok9;
         const 4;
         const 12884901918;
         const S5lDv_srt+48;
 },
 _c5okd() //  [R1]
         { []
         }
     {offset
       c5okd: // global
           if (R1 & 7 == 1) goto c5okW; else goto c5okX;
       c5okW: // global
           R1 = []_closure+1;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5okX: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5ol0; else goto c5okZ;
       c5ol0: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5okZ: // global
           _s5l0M::P64 = P64[R1 + 14];
           I64[Hp - 24] = sat_s5l0O_info;
           P64[Hp - 8] = P64[Sp + 24];
           P64[Hp] = P64[Sp + 8];
           P64[Sp + 16] = P64[Sp + 16];
           P64[Sp + 24] = Hp - 24;
           P64[Sp + 32] = _s5l0M::P64;
           Sp = Sp + 16;
           call _c5ojU() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5okd_info" {
     block_c5okd_info:
         const _c5okd;
         const 516;
         const 12884901918;
         const S5lDv_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.083188633 UTC

[section ""data" . Data.OldList.$wgenericSplitAt_closure" {
     Data.OldList.$wgenericSplitAt_closure:
         const Data.OldList.$wgenericSplitAt_info;
         const 0;
 },
 $dNum_s5l0T_entry() //  [R1]
         { []
         }
     {offset
       c5omc: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5omd; else goto c5ome;
       c5omd: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5ome: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Real.$p1Real_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . $dNum_s5l0T_info" {
     $dNum_s5l0T_info:
         const $dNum_s5l0T_entry;
         const 1;
         const 16;
 },
 sat_s5l0V_entry() //  [R1]
         { []
         }
     {offset
       c5omj: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5omk; else goto c5oml;
       c5omk: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oml: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength1_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l0V_info" {
     sat_s5l0V_info:
         const sat_s5l0V_entry;
         const 1;
         const 4294967312;
         const S5lDv_srt+56;
 },
 sat_s5l11_entry() //  [R1]
         { []
         }
     {offset
       c5omM: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5omN; else goto c5omO;
       c5omN: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5omO: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l11_info" {
     sat_s5l11_info:
         const sat_s5l11_entry;
         const 1;
         const 4294967312;
         const S5lDv_srt+48;
 },
 sat_s5l12_entry() //  [R1]
         { []
         }
     {offset
       c5omP: // global
           _s5l12::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto c5omQ; else goto c5omR;
       c5omR: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5omT; else goto c5omS;
       c5omT: // global
           HpAlloc = 24;
           goto c5omQ;
       c5omQ: // global
           R1 = _s5l12::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5omS: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5l12::P64;
           _s5l0Q::P64 = P64[_s5l12::P64 + 16];
           _s5l0T::P64 = P64[_s5l12::P64 + 24];
           I64[Hp - 16] = sat_s5l11_info;
           P64[Hp] = _s5l0T::P64;
           R2 = _s5l0T::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = _s5l0Q::P64;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 40;
           call GHC.Num.-_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l12_info" {
     sat_s5l12_info:
         const sat_s5l12_entry;
         const 2;
         const 4294967314;
         const S5lDv_srt+48;
 },
 ds_s5l10_entry() //  [R1]
         { []
         }
     {offset
       c5omX: // global
           _s5l10::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c5omY; else goto c5omZ;
       c5omZ: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5on1; else goto c5on0;
       c5on1: // global
           HpAlloc = 32;
           goto c5omY;
       c5omY: // global
           R1 = _s5l10::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5on0: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5l10::P64;
           _s5l0P::P64 = P64[_s5l10::P64 + 16];
           _s5l0Q::P64 = P64[_s5l10::P64 + 24];
           _s5l0T::P64 = P64[_s5l10::P64 + 32];
           _s5l0Z::P64 = P64[_s5l10::P64 + 40];
           I64[Hp - 24] = sat_s5l12_info;
           P64[Hp - 8] = _s5l0Q::P64;
           P64[Hp] = _s5l0T::P64;
           I64[Sp - 24] = block_c5omU_info;
           R4 = _s5l0Z::P64;
           R3 = Hp - 24;
           R2 = _s5l0P::P64;
           Sp = Sp - 24;
           call Data.OldList.$wgenericSplitAt_entry(R4,
                                                    R3,
                                                    R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds_s5l10_info" {
     ds_s5l10_info:
         const ds_s5l10_entry;
         const 4;
         const 554050781199;
         const S5lDv_srt+48;
 },
 _c5omU() //  [R1, R2]
         { []
         }
     {offset
       c5omU: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5on4; else goto c5on3;
       c5on4: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c5on3: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5omU_info" {
     block_c5omU_info:
         const _c5omU;
         const 0;
         const 30;
 },
 Data.OldList.$wgenericSplitAt_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5on5: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c5on6; else goto c5on7;
       c5on6: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.$wgenericSplitAt_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5on7: // global
           I64[Sp - 32] = block_c5om4_info;
           _s5l0P::P64 = R2;
           R2 = R2;
           P64[Sp - 24] = _s5l0P::P64;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call GHC.Real.$p1Integral_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.$wgenericSplitAt_info" {
     Data.OldList.$wgenericSplitAt_info:
         const Data.OldList.$wgenericSplitAt_entry;
         const 0;
         const 562640715790;
         const 12884901911;
         const S5lDv_srt+48;
 },
 _c5om4() //  [R1]
         { []
         }
     {offset
       c5om4: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5ona; else goto c5on9;
       c5ona: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5on9: // global
           I64[Hp - 40] = $dNum_s5l0T_info;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = sat_s5l0V_info;
           _c5om8::P64 = Hp - 40;
           P64[Hp] = _c5om8::P64;
           I64[Sp - 16] = block_c5omm_info;
           R2 = R1;
           P64[Sp - 8] = Hp - 16;
           P64[Sp] = _c5om8::P64;
           Sp = Sp - 16;
           call GHC.Real.$p2Real_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5om4_info" {
     block_c5om4_info:
         const _c5om4;
         const 3;
         const 562640715806;
         const S5lDv_srt+48;
 },
 _c5omm() //  [R1]
         { []
         }
     {offset
       c5omm: // global
           _c5omf::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5omq_info;
           R2 = R1;
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = P64[Sp + 32];
           P64[Sp] = _c5omf::P64;
           Sp = Sp - 16;
           call GHC.Classes.<=_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5omm_info" {
     block_c5omm_info:
         const _c5omm;
         const 5;
         const 554050781214;
         const S5lDv_srt+48;
 },
 _c5omq() //  [R1]
         { []
         }
     {offset
       c5omq: // global
           _s5l0R::P64 = P64[Sp + 32];
           if (R1 & 7 == 1) goto c5one; else goto c5ont;
       c5one: // global
           I64[Sp] = block_c5omu_info;
           R1 = _s5l0R::P64;
           if (R1 & 7 != 0) goto u5onw; else goto c5omv;
       u5onw: // global
           call _c5omu(R1) args: 0, res: 0, upd: 0;
       c5omv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c5ont: // global
           R2 = _s5l0R::P64;
           R1 = GHC.Types.[]_closure+1;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5omq_info" {
     block_c5omq_info:
         const _c5omq;
         const 4;
         const 554050781214;
         const S5lDv_srt+48;
 },
 _c5omu() //  [R1]
         { []
         }
     {offset
       c5omu: // global
           if (R1 & 7 == 1) goto c5oni; else goto c5onm;
       c5oni: // global
           R2 = GHC.Types.[]_closure+1;
           R1 = GHC.Types.[]_closure+1;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
       c5onm: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto c5onp; else goto c5ono;
       c5onp: // global
           HpAlloc = 120;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5ono: // global
           _s5l0Y::P64 = P64[R1 + 6];
           _s5l0Z::P64 = P64[R1 + 14];
           I64[Hp - 112] = ds_s5l10_info;
           P64[Hp - 96] = P64[Sp + 16];
           P64[Hp - 88] = P64[Sp + 24];
           P64[Hp - 80] = P64[Sp + 8];
           P64[Hp - 72] = _s5l0Z::P64;
           I64[Hp - 64] = stg_sel_1_upd_info;
           _c5omA::P64 = Hp - 112;
           P64[Hp - 48] = _c5omA::P64;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _c5omA::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5l0Y::P64;
           P64[Hp] = Hp - 40;
           R2 = Hp - 64;
           R1 = Hp - 14;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5omu_info" {
     block_c5omu_info:
         const _c5omu;
         const 516;
         const 554050781214;
         const S5lDv_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.106449478 UTC

[section ""data" . Data.OldList.genericSplitAt_closure" {
     Data.OldList.genericSplitAt_closure:
         const Data.OldList.genericSplitAt_info;
         const 0;
 },
 Data.OldList.genericSplitAt_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5ooy: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5ooz; else goto c5ooA;
       c5ooz: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.genericSplitAt_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5ooA: // global
           I64[Sp - 8] = block_c5oov_info;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Data.OldList.$wgenericSplitAt_entry(R4,
                                                    R3,
                                                    R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.genericSplitAt_info" {
     Data.OldList.genericSplitAt_info:
         const Data.OldList.genericSplitAt_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S5lDv_srt+104;
 },
 _c5oov() //  [R1, R2]
         { []
         }
     {offset
       c5oov: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5ooD; else goto c5ooC;
       c5ooD: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c5ooC: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oov_info" {
     block_c5oov_info:
         const _c5oov;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.11151509 UTC

[section ""cstring" . lvl2_r5kSj_bytes" {
     lvl2_r5kSj_bytes:
         I8[] [76,105,115,116,46,103,101,110,101,114,105,99,73,110,100,101,120,58,32,110,101,103,97,116,105,118,101,32,97,114,103,117,109,101,110,116,46]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.114754802 UTC

[section ""data" . lvl3_r5kSk_closure" {
     lvl3_r5kSk_closure:
         const lvl3_r5kSk_info;
         const 0;
         const 0;
         const 0;
 },
 lvl3_r5kSk_entry() //  [R1]
         { []
         }
     {offset
       c5ooW: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5ooX; else goto c5ooY;
       c5ooX: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5ooY: // global
           (_c5ooR::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5ooR::I64 == 0) goto c5ooT; else goto c5ooS;
       c5ooT: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5ooS: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5ooR::I64;
           I64[Sp - 24] = block_c5ooU_info;
           R2 = lvl2_r5kSj_bytes;
           Sp = Sp - 24;
           call GHC.CString.unpackCString#_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . lvl3_r5kSk_info" {
     lvl3_r5kSk_info:
         const lvl3_r5kSk_entry;
         const 0;
         const 4294967317;
         const S5lDv_srt;
 },
 _c5ooU() //  [R1]
         { []
         }
     {offset
       c5ooU: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5ooU_info" {
     block_c5ooU_info:
         const _c5ooU;
         const 0;
         const 4294967326;
         const S5lDv_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.119769162 UTC

[section ""cstring" . lvl4_r5kSl_bytes" {
     lvl4_r5kSl_bytes:
         I8[] [76,105,115,116,46,103,101,110,101,114,105,99,73,110,100,101,120,58,32,105,110,100,101,120,32,116,111,111,32,108,97,114,103,101,46]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.122568955 UTC

[section ""data" . lvl5_r5kSm_closure" {
     lvl5_r5kSm_closure:
         const lvl5_r5kSm_info;
         const 0;
         const 0;
         const 0;
 },
 lvl5_r5kSm_entry() //  [R1]
         { []
         }
     {offset
       c5opl: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5opm; else goto c5opn;
       c5opm: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5opn: // global
           (_c5opg::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5opg::I64 == 0) goto c5opi; else goto c5oph;
       c5opi: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5oph: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5opg::I64;
           I64[Sp - 24] = block_c5opj_info;
           R2 = lvl4_r5kSl_bytes;
           Sp = Sp - 24;
           call GHC.CString.unpackCString#_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . lvl5_r5kSm_info" {
     lvl5_r5kSm_info:
         const lvl5_r5kSm_entry;
         const 0;
         const 4294967317;
         const S5lDv_srt;
 },
 _c5opj() //  [R1]
         { []
         }
     {offset
       c5opj: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5opj_info" {
     block_c5opj_info:
         const _c5opj;
         const 0;
         const 4294967326;
         const S5lDv_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.134961387 UTC

[section ""data" . Data.OldList.genericIndex_closure" {
     Data.OldList.genericIndex_closure:
         const Data.OldList.genericIndex_info;
         const 0;
 },
 $dNum_s5l1u_entry() //  [R1]
         { []
         }
     {offset
       c5oqf: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5oqg; else goto c5oqh;
       c5oqg: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oqh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Real.$p1Real_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . $dNum_s5l1u_info" {
     $dNum_s5l1u_info:
         const $dNum_s5l1u_entry;
         const 1;
         const 16;
 },
 sat_s5l1x_entry() //  [R1]
         { []
         }
     {offset
       c5oqk: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5oql; else goto c5oqm;
       c5oql: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oqm: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength1_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l1x_info" {
     sat_s5l1x_info:
         const sat_s5l1x_entry;
         const 1;
         const 4294967312;
         const S5lDv_srt+56;
 },
 sat_s5l1z_entry() //  [R1]
         { []
         }
     {offset
       c5oqp: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5oqq; else goto c5oqr;
       c5oqq: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oqr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength1_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l1z_info" {
     sat_s5l1z_info:
         const sat_s5l1z_entry;
         const 1;
         const 4294967312;
         const S5lDv_srt+56;
 },
 sat_s5l1B_entry() //  [R1]
         { []
         }
     {offset
       c5oqz: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5oqA; else goto c5oqB;
       c5oqA: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oqB: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l1B_info" {
     sat_s5l1B_info:
         const sat_s5l1B_entry;
         const 1;
         const 4294967312;
         const S5lDv_srt+48;
 },
 sat_s5l1C_entry() //  [R1]
         { []
         }
     {offset
       c5oqC: // global
           _s5l1C::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto c5oqD; else goto c5oqE;
       c5oqE: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5oqG; else goto c5oqF;
       c5oqG: // global
           HpAlloc = 24;
           goto c5oqD;
       c5oqD: // global
           R1 = _s5l1C::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oqF: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5l1C::P64;
           _s5l1p::P64 = P64[_s5l1C::P64 + 16];
           _s5l1u::P64 = P64[_s5l1C::P64 + 24];
           I64[Hp - 16] = sat_s5l1B_info;
           P64[Hp] = _s5l1u::P64;
           R2 = _s5l1u::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = _s5l1p::P64;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 40;
           call GHC.Num.-_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l1C_info" {
     sat_s5l1C_info:
         const sat_s5l1C_entry;
         const 2;
         const 4294967314;
         const S5lDv_srt+48;
 },
 Data.OldList.genericIndex_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5oqL: // global
           if ((Sp + -88) < SpLim) (likely: False) goto c5oqM; else goto u5orh;
       c5oqM: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.genericIndex_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u5orh: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c5opC() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.genericIndex_info" {
     Data.OldList.genericIndex_info:
         const Data.OldList.genericIndex_entry;
         const 0;
         const 15406047690766;
         const 12884901911;
         const S5lDv_srt+48;
 },
 _c5opC() //  []
         { []
         }
     {offset
       c5opC: // global
           I64[Sp - 8] = block_c5opF_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5orj; else goto c5opG;
       u5orj: // global
           call _c5opF(R1) args: 0, res: 0, upd: 0;
       c5opG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5opF() //  [R1]
         { []
         }
     {offset
       c5opF: // global
           if (R1 & 7 == 1) goto c5oqI; else goto c5oqJ;
       c5oqI: // global
           R1 = lvl5_r5kSm_closure;
           Sp = Sp + 32;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5oqJ: // global
           I64[Sp - 8] = block_c5opL_info;
           R2 = P64[Sp + 8];
           P64[Sp] = P64[R1 + 14];
           P64[Sp + 16] = P64[R1 + 6];
           Sp = Sp - 8;
           call GHC.Real.$p1Integral_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5opF_info" {
     block_c5opF_info:
         const _c5opF;
         const 131;
         const 13207024435230;
         const S5lDv_srt+48;
 },
 _c5opL() //  [R1]
         { []
         }
     {offset
       c5opL: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5oqT; else goto c5oqS;
       c5oqT: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oqS: // global
           I64[Hp - 16] = $dNum_s5l1u_info;
           P64[Hp] = R1;
           I64[Sp - 8] = block_c5opR_info;
           R2 = R1;
           P64[Sp] = Hp - 16;
           Sp = Sp - 8;
           call GHC.Real.$p2Real_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5opL_info" {
     block_c5opL_info:
         const _c5opL;
         const 4;
         const 13207024435230;
         const S5lDv_srt+48;
 },
 _c5opR() //  [R1]
         { []
         }
     {offset
       c5opR: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5oqW; else goto c5oqV;
       c5oqW: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oqV: // global
           I64[Hp - 16] = sat_s5l1x_info;
           P64[Hp] = P64[Sp + 8];
           I64[Sp - 16] = block_c5opX_info;
           R2 = R1;
           P64[Sp - 8] = R1;
           P64[Sp] = Hp - 16;
           Sp = Sp - 16;
           call GHC.Classes.$p1Ord_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5opR_info" {
     block_c5opR_info:
         const _c5opR;
         const 5;
         const 13207024435230;
         const S5lDv_srt+48;
 },
 _c5opX() //  [R1]
         { []
         }
     {offset
       c5opX: // global
           I64[Sp] = block_c5oq1_info;
           R2 = R1;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = P64[Sp + 56];
           P64[Sp - 8] = P64[Sp + 16];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5opX_info" {
     block_c5opX_info:
         const _c5opX;
         const 7;
         const 13207024435230;
         const S5lDv_srt+48;
 },
 _c5oq1() //  [R1]
         { []
         }
     {offset
       c5oq1: // global
           if (R1 & 7 == 1) goto c5oqZ; else goto c5ore;
       c5oqZ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5or2; else goto c5or1;
       c5or2: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5or1: // global
           I64[Hp - 16] = sat_s5l1z_info;
           P64[Hp] = P64[Sp + 24];
           I64[Sp + 16] = block_c5oq7_info;
           R2 = P64[Sp + 8];
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = P64[Sp + 56];
           P64[Sp + 8] = Hp - 16;
           Sp = Sp - 8;
           call GHC.Classes.>_entry(R2) args: 32, res: 8, upd: 8;
       c5ore: // global
           R1 = P64[Sp + 48];
           Sp = Sp + 64;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oq1_info" {
     block_c5oq1_info:
         const _c5oq1;
         const 135;
         const 13207024435230;
         const S5lDv_srt+48;
 },
 _c5oq7() //  [R1]
         { []
         }
     {offset
       c5oq7: // global
           if (R1 & 7 == 1) goto c5or6; else goto c5or7;
       c5or6: // global
           R1 = lvl3_r5kSk_closure;
           Sp = Sp + 48;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5or7: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5ora; else goto c5or9;
       c5ora: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5or9: // global
           I64[Hp - 24] = sat_s5l1C_info;
           P64[Hp - 8] = P64[Sp + 40];
           P64[Hp] = P64[Sp + 8];
           P64[Sp + 24] = P64[Sp + 24];
           P64[Sp + 32] = P64[Sp + 16];
           P64[Sp + 40] = Hp - 24;
           Sp = Sp + 24;
           call _c5opC() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5oq7_info" {
     block_c5oq7_info:
         const _c5oq7;
         const 517;
         const 13207024435230;
         const S5lDv_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.162483189 UTC

[section ""data" . Data.OldList.zipWith4_closure" {
     Data.OldList.zipWith4_closure:
         const Data.OldList.zipWith4_info;
 },
 sat_s5l1V_entry() //  [R1]
         { []
         }
     {offset
       c5osY: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5osZ; else goto c5ot0;
       c5osZ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5ot0: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R6 = P64[R1 + 48];
           R5 = P64[R1 + 40];
           R4 = P64[R1 + 32];
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.OldList.zipWith4_entry(R6,
                                            R5,
                                            R4,
                                            R3,
                                            R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l1V_info" {
     sat_s5l1V_info:
         const sat_s5l1V_entry;
         const 5;
         const 15;
 },
 Data.OldList.zipWith4_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c5ot5: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c5ot6; else goto c5ot7;
       c5ot6: // global
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.zipWith4_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5ot7: // global
           I64[Sp - 40] = block_c5osw_info;
           R1 = R3;
           P64[Sp - 32] = R2;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           if (R1 & 7 != 0) goto u5otL; else goto c5osx;
       u5otL: // global
           call _c5osw(R1) args: 0, res: 0, upd: 0;
       c5osx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.zipWith4_info" {
     Data.OldList.zipWith4_info:
         const Data.OldList.zipWith4_entry;
         const 0;
         const 14;
         const 21474836505;
 },
 _c5osw() //  [R1]
         { []
         }
     {offset
       c5osw: // global
           if (R1 & 7 == 1) goto u5otA; else goto c5ot3;
       u5otA: // global
           Sp = Sp + 40;
           call _c5otq() args: 0, res: 0, upd: 0;
       c5ot3: // global
           I64[Sp - 8] = block_c5osC_info;
           _s5l1J::P64 = P64[R1 + 6];
           _s5l1K::P64 = P64[R1 + 14];
           R1 = P64[Sp + 16];
           P64[Sp] = _s5l1K::P64;
           P64[Sp + 16] = _s5l1J::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5otE; else goto c5osD;
       u5otE: // global
           call _c5osC(R1) args: 0, res: 0, upd: 0;
       c5osD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5osw_info" {
     block_c5osw_info:
         const _c5osw;
         const 4;
         const 30;
 },
 _c5osC() //  [R1]
         { []
         }
     {offset
       c5osC: // global
           if (R1 & 7 == 1) goto u5otB; else goto c5otg;
       u5otB: // global
           Sp = Sp + 48;
           call _c5otq() args: 0, res: 0, upd: 0;
       c5otg: // global
           I64[Sp - 8] = block_c5osI_info;
           _s5l1M::P64 = P64[R1 + 6];
           _s5l1N::P64 = P64[R1 + 14];
           R1 = P64[Sp + 32];
           P64[Sp] = _s5l1N::P64;
           P64[Sp + 32] = _s5l1M::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5otG; else goto c5osJ;
       u5otG: // global
           call _c5osI(R1) args: 0, res: 0, upd: 0;
       c5osJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5osC_info" {
     block_c5osC_info:
         const _c5osC;
         const 5;
         const 30;
 },
 _c5osI() //  [R1]
         { []
         }
     {offset
       c5osI: // global
           if (R1 & 7 == 1) goto u5otC; else goto c5otm;
       u5otC: // global
           Sp = Sp + 56;
           call _c5otq() args: 0, res: 0, upd: 0;
       c5otm: // global
           I64[Sp - 8] = block_c5osO_info;
           _s5l1P::P64 = P64[R1 + 6];
           _s5l1Q::P64 = P64[R1 + 14];
           R1 = P64[Sp + 48];
           P64[Sp] = _s5l1Q::P64;
           P64[Sp + 48] = _s5l1P::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5otI; else goto c5osP;
       u5otI: // global
           call _c5osO(R1) args: 0, res: 0, upd: 0;
       c5osP: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5osI_info" {
     block_c5osI_info:
         const _c5osI;
         const 6;
         const 30;
 },
 _c5osO() //  [R1]
         { []
         }
     {offset
       c5osO: // global
           if (R1 & 7 == 1) goto u5otD; else goto c5ott;
       u5otD: // global
           Sp = Sp + 64;
           call _c5otq() args: 0, res: 0, upd: 0;
       c5ott: // global
           Hp = Hp + 136;
           if (Hp > HpLim) (likely: False) goto c5otw; else goto c5otv;
       c5otw: // global
           HpAlloc = 136;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5otv: // global
           _s5l1S::P64 = P64[R1 + 6];
           _s5l1T::P64 = P64[R1 + 14];
           I64[Hp - 128] = sat_s5l1V_info;
           _s5l1D::P64 = P64[Sp + 32];
           P64[Hp - 112] = _s5l1D::P64;
           P64[Hp - 104] = P64[Sp + 24];
           P64[Hp - 96] = P64[Sp + 16];
           P64[Hp - 88] = P64[Sp + 8];
           P64[Hp - 80] = _s5l1T::P64;
           I64[Hp - 72] = stg_ap_5_upd_info;
           P64[Hp - 56] = _s5l1D::P64;
           P64[Hp - 48] = P64[Sp + 40];
           P64[Hp - 40] = P64[Sp + 48];
           P64[Hp - 32] = P64[Sp + 56];
           P64[Hp - 24] = _s5l1S::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 72;
           P64[Hp] = Hp - 128;
           R1 = Hp - 14;
           Sp = Sp + 64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5osO_info" {
     block_c5osO_info:
         const _c5osO;
         const 7;
         const 30;
 },
 _c5otq() //  []
         { []
         }
     {offset
       c5otq: // global
           R1 = []_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.177426819 UTC

[section ""data" . Data.OldList.zip4_closure" {
     Data.OldList.zip4_closure:
         const Data.OldList.zip4_info;
 },
 Data.OldList.zip4_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5ouz: // global
           R6 = R5;
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = GHC.Tuple.(,,,)_closure+4;
           call Data.OldList.zipWith4_entry(R6,
                                            R5,
                                            R4,
                                            R3,
                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.zip4_info" {
     Data.OldList.zip4_info:
         const Data.OldList.zip4_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.184869758 UTC

[section ""data" . Data.OldList.zipWith5_closure" {
     Data.OldList.zipWith5_closure:
         const Data.OldList.zipWith5_info;
 },
 sat_s5l2i_entry() //  [R1]
         { []
         }
     {offset
       c5ovi: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5ovj; else goto c5ovk;
       c5ovj: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5ovk: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R6 = P64[R1 + 48];
           R5 = P64[R1 + 40];
           R4 = P64[R1 + 32];
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           P64[Sp - 24] = P64[R1 + 56];
           Sp = Sp - 24;
           call Data.OldList.zipWith5_entry(R6,
                                            R5,
                                            R4,
                                            R3,
                                            R2) args: 32, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l2i_info" {
     sat_s5l2i_info:
         const sat_s5l2i_entry;
         const 6;
         const 15;
 },
 Data.OldList.zipWith5_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c5ovp: // global
           if ((Sp + -72) < SpLim) (likely: False) goto c5ovq; else goto c5ovr;
       c5ovq: // global
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.zipWith5_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 16, res: 0, upd: 8;
       c5ovr: // global
           I64[Sp - 40] = block_c5ouK_info;
           R1 = R3;
           P64[Sp - 32] = R2;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           if (R1 & 7 != 0) goto u5owf; else goto c5ouL;
       u5owf: // global
           call _c5ouK(R1) args: 0, res: 0, upd: 0;
       c5ouL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.zipWith5_info" {
     Data.OldList.zipWith5_info:
         const Data.OldList.zipWith5_entry;
         const 0;
         const 14;
         const 25769803802;
 },
 _c5ouK() //  [R1]
         { []
         }
     {offset
       c5ouK: // global
           if (R1 & 7 == 1) goto u5ow1; else goto c5ovn;
       u5ow1: // global
           Sp = Sp + 48;
           call _c5ovQ() args: 0, res: 0, upd: 0;
       c5ovn: // global
           I64[Sp - 8] = block_c5ouQ_info;
           _s5l23::P64 = P64[R1 + 6];
           _s5l24::P64 = P64[R1 + 14];
           R1 = P64[Sp + 16];
           P64[Sp] = _s5l24::P64;
           P64[Sp + 16] = _s5l23::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5ow6; else goto c5ouR;
       u5ow6: // global
           call _c5ouQ(R1) args: 0, res: 0, upd: 0;
       c5ouR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ouK_info" {
     block_c5ouK_info:
         const _c5ouK;
         const 5;
         const 30;
 },
 _c5ouQ() //  [R1]
         { []
         }
     {offset
       c5ouQ: // global
           if (R1 & 7 == 1) goto u5ow2; else goto c5ovA;
       u5ow2: // global
           Sp = Sp + 56;
           call _c5ovQ() args: 0, res: 0, upd: 0;
       c5ovA: // global
           I64[Sp - 8] = block_c5ouW_info;
           _s5l26::P64 = P64[R1 + 6];
           _s5l27::P64 = P64[R1 + 14];
           R1 = P64[Sp + 32];
           P64[Sp] = _s5l27::P64;
           P64[Sp + 32] = _s5l26::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5ow8; else goto c5ouX;
       u5ow8: // global
           call _c5ouW(R1) args: 0, res: 0, upd: 0;
       c5ouX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ouQ_info" {
     block_c5ouQ_info:
         const _c5ouQ;
         const 6;
         const 30;
 },
 _c5ouW() //  [R1]
         { []
         }
     {offset
       c5ouW: // global
           if (R1 & 7 == 1) goto u5ow3; else goto c5ovG;
       u5ow3: // global
           Sp = Sp + 64;
           call _c5ovQ() args: 0, res: 0, upd: 0;
       c5ovG: // global
           I64[Sp - 8] = block_c5ov2_info;
           _s5l29::P64 = P64[R1 + 6];
           _s5l2a::P64 = P64[R1 + 14];
           R1 = P64[Sp + 48];
           P64[Sp] = _s5l2a::P64;
           P64[Sp + 48] = _s5l29::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5owa; else goto c5ov3;
       u5owa: // global
           call _c5ov2(R1) args: 0, res: 0, upd: 0;
       c5ov3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ouW_info" {
     block_c5ouW_info:
         const _c5ouW;
         const 7;
         const 30;
 },
 _c5ov2() //  [R1]
         { []
         }
     {offset
       c5ov2: // global
           if (R1 & 7 == 1) goto u5ow4; else goto c5ovM;
       u5ow4: // global
           Sp = Sp + 72;
           call _c5ovQ() args: 0, res: 0, upd: 0;
       c5ovM: // global
           I64[Sp - 8] = block_c5ov8_info;
           _s5l2c::P64 = P64[R1 + 6];
           _s5l2d::P64 = P64[R1 + 14];
           R1 = P64[Sp + 64];
           P64[Sp] = _s5l2d::P64;
           P64[Sp + 64] = _s5l2c::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5owc; else goto c5ov9;
       u5owc: // global
           call _c5ov8(R1) args: 0, res: 0, upd: 0;
       c5ov9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ov2_info" {
     block_c5ov2_info:
         const _c5ov2;
         const 8;
         const 30;
 },
 _c5ov8() //  [R1]
         { []
         }
     {offset
       c5ov8: // global
           if (R1 & 7 == 1) goto u5ow5; else goto c5ovT;
       u5ow5: // global
           Sp = Sp + 80;
           call _c5ovQ() args: 0, res: 0, upd: 0;
       c5ovT: // global
           Hp = Hp + 152;
           if (Hp > HpLim) (likely: False) goto c5ovW; else goto c5ovV;
       c5ovW: // global
           HpAlloc = 152;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5ovV: // global
           _s5l2f::P64 = P64[R1 + 6];
           _s5l2g::P64 = P64[R1 + 14];
           I64[Hp - 144] = sat_s5l2i_info;
           _s5l1W::P64 = P64[Sp + 40];
           P64[Hp - 128] = _s5l1W::P64;
           P64[Hp - 120] = P64[Sp + 32];
           P64[Hp - 112] = P64[Sp + 24];
           P64[Hp - 104] = P64[Sp + 16];
           P64[Hp - 96] = P64[Sp + 8];
           P64[Hp - 88] = _s5l2g::P64;
           I64[Hp - 80] = stg_ap_6_upd_info;
           P64[Hp - 64] = _s5l1W::P64;
           P64[Hp - 56] = P64[Sp + 48];
           P64[Hp - 48] = P64[Sp + 56];
           P64[Hp - 40] = P64[Sp + 64];
           P64[Hp - 32] = P64[Sp + 72];
           P64[Hp - 24] = _s5l2f::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 144;
           R1 = Hp - 14;
           Sp = Sp + 80;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ov8_info" {
     block_c5ov8_info:
         const _c5ov8;
         const 9;
         const 30;
 },
 _c5ovQ() //  []
         { []
         }
     {offset
       c5ovQ: // global
           R1 = []_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.201663159 UTC

[section ""data" . Data.OldList.zip5_closure" {
     Data.OldList.zip5_closure:
         const Data.OldList.zip5_info;
 },
 Data.OldList.zip5_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c5oxc: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5oxd; else goto c5oxe;
       c5oxd: // global
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.zip5_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5oxe: // global
           _B1::P64 = R6;
           R6 = R5;
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = GHC.Tuple.(,,,,)_closure+5;
           P64[Sp - 8] = _B1::P64;
           Sp = Sp - 8;
           call Data.OldList.zipWith5_entry(R6,
                                            R5,
                                            R4,
                                            R3,
                                            R2) args: 16, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.zip5_info" {
     Data.OldList.zip5_info:
         const Data.OldList.zip5_entry;
         const 0;
         const 14;
         const 21474836505;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.21028059 UTC

[section ""data" . Data.OldList.zipWith6_closure" {
     Data.OldList.zipWith6_closure:
         const Data.OldList.zipWith6_info;
 },
 Data.OldList.zipWith6_slow() //  [R1]
         { []
         }
     {offset
       c5oxl: // global
           R6 = P64[Sp + 32];
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call Data.OldList.zipWith6_entry(R6,
                                            R5,
                                            R4,
                                            R3,
                                            R2,
                                            R1) args: 24, res: 0, upd: 8;
     }
 },
 sat_s5l2J_entry() //  [R1]
         { []
         }
     {offset
       c5oy3: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5oy4; else goto c5oy5;
       c5oy4: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oy5: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R6 = P64[R1 + 48];
           R5 = P64[R1 + 40];
           R4 = P64[R1 + 32];
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           P64[Sp - 32] = P64[R1 + 56];
           P64[Sp - 24] = P64[R1 + 64];
           Sp = Sp - 32;
           call Data.OldList.zipWith6_entry(R6,
                                            R5,
                                            R4,
                                            R3,
                                            R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l2J_info" {
     sat_s5l2J_info:
         const sat_s5l2J_entry;
         const 7;
         const 15;
 },
 Data.OldList.zipWith6_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c5oya: // global
           if ((Sp + -80) < SpLim) (likely: False) goto c5oyb; else goto c5oyc;
       c5oyb: // global
           R1 = Data.OldList.zipWith6_closure;
           P64[Sp - 40] = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           call (stg_gc_fun)(R1) args: 64, res: 0, upd: 8;
       c5oyc: // global
           I64[Sp - 40] = block_c5oxp_info;
           R1 = R3;
           P64[Sp - 32] = R2;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           if (R1 & 7 != 0) goto u5oza; else goto c5oxq;
       u5oza: // global
           call _c5oxp(R1) args: 0, res: 0, upd: 0;
       c5oxq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.zipWith6_info" {
     Data.OldList.zipWith6_info:
         const Data.OldList.zipWith6_entry;
         const 0;
         const 14;
         const 30064771072;
         const 0;
         const 7;
         const Data.OldList.zipWith6_slow;
 },
 _c5oxp() //  [R1]
         { []
         }
     {offset
       c5oxp: // global
           if (R1 & 7 == 1) goto u5oyT; else goto c5oy8;
       u5oyT: // global
           Sp = Sp + 56;
           call _c5oyH() args: 0, res: 0, upd: 0;
       c5oy8: // global
           I64[Sp - 8] = block_c5oxv_info;
           _s5l2r::P64 = P64[R1 + 6];
           _s5l2s::P64 = P64[R1 + 14];
           R1 = P64[Sp + 16];
           P64[Sp] = _s5l2s::P64;
           P64[Sp + 16] = _s5l2r::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5oyZ; else goto c5oxw;
       u5oyZ: // global
           call _c5oxv(R1) args: 0, res: 0, upd: 0;
       c5oxw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oxp_info" {
     block_c5oxp_info:
         const _c5oxp;
         const 6;
         const 30;
 },
 _c5oxv() //  [R1]
         { []
         }
     {offset
       c5oxv: // global
           if (R1 & 7 == 1) goto u5oyU; else goto c5oyl;
       u5oyU: // global
           Sp = Sp + 64;
           call _c5oyH() args: 0, res: 0, upd: 0;
       c5oyl: // global
           I64[Sp - 8] = block_c5oxB_info;
           _s5l2u::P64 = P64[R1 + 6];
           _s5l2v::P64 = P64[R1 + 14];
           R1 = P64[Sp + 32];
           P64[Sp] = _s5l2v::P64;
           P64[Sp + 32] = _s5l2u::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5oz1; else goto c5oxC;
       u5oz1: // global
           call _c5oxB(R1) args: 0, res: 0, upd: 0;
       c5oxC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oxv_info" {
     block_c5oxv_info:
         const _c5oxv;
         const 7;
         const 30;
 },
 _c5oxB() //  [R1]
         { []
         }
     {offset
       c5oxB: // global
           if (R1 & 7 == 1) goto u5oyV; else goto c5oyr;
       u5oyV: // global
           Sp = Sp + 72;
           call _c5oyH() args: 0, res: 0, upd: 0;
       c5oyr: // global
           I64[Sp - 8] = block_c5oxH_info;
           _s5l2x::P64 = P64[R1 + 6];
           _s5l2y::P64 = P64[R1 + 14];
           R1 = P64[Sp + 48];
           P64[Sp] = _s5l2y::P64;
           P64[Sp + 48] = _s5l2x::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5oz3; else goto c5oxI;
       u5oz3: // global
           call _c5oxH(R1) args: 0, res: 0, upd: 0;
       c5oxI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oxB_info" {
     block_c5oxB_info:
         const _c5oxB;
         const 8;
         const 30;
 },
 _c5oxH() //  [R1]
         { []
         }
     {offset
       c5oxH: // global
           if (R1 & 7 == 1) goto u5oyW; else goto c5oyx;
       u5oyW: // global
           Sp = Sp + 80;
           call _c5oyH() args: 0, res: 0, upd: 0;
       c5oyx: // global
           I64[Sp - 8] = block_c5oxN_info;
           _s5l2A::P64 = P64[R1 + 6];
           _s5l2B::P64 = P64[R1 + 14];
           R1 = P64[Sp + 64];
           P64[Sp] = _s5l2B::P64;
           P64[Sp + 64] = _s5l2A::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5oz5; else goto c5oxO;
       u5oz5: // global
           call _c5oxN(R1) args: 0, res: 0, upd: 0;
       c5oxO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oxH_info" {
     block_c5oxH_info:
         const _c5oxH;
         const 9;
         const 30;
 },
 _c5oxN() //  [R1]
         { []
         }
     {offset
       c5oxN: // global
           if (R1 & 7 == 1) goto u5oyX; else goto c5oyD;
       u5oyX: // global
           Sp = Sp + 88;
           call _c5oyH() args: 0, res: 0, upd: 0;
       c5oyD: // global
           I64[Sp - 8] = block_c5oxT_info;
           _s5l2D::P64 = P64[R1 + 6];
           _s5l2E::P64 = P64[R1 + 14];
           R1 = P64[Sp + 80];
           P64[Sp] = _s5l2E::P64;
           P64[Sp + 80] = _s5l2D::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5oz7; else goto c5oxU;
       u5oz7: // global
           call _c5oxT(R1) args: 0, res: 0, upd: 0;
       c5oxU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oxN_info" {
     block_c5oxN_info:
         const _c5oxN;
         const 10;
         const 30;
 },
 _c5oxT() //  [R1]
         { []
         }
     {offset
       c5oxT: // global
           if (R1 & 7 == 1) goto u5oyY; else goto c5oyK;
       u5oyY: // global
           Sp = Sp + 96;
           call _c5oyH() args: 0, res: 0, upd: 0;
       c5oyK: // global
           Hp = Hp + 168;
           if (Hp > HpLim) (likely: False) goto c5oyN; else goto c5oyM;
       c5oyN: // global
           HpAlloc = 168;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oyM: // global
           _s5l2G::P64 = P64[R1 + 6];
           _s5l2H::P64 = P64[R1 + 14];
           I64[Hp - 160] = sat_s5l2J_info;
           _s5l2j::P64 = P64[Sp + 48];
           P64[Hp - 144] = _s5l2j::P64;
           P64[Hp - 136] = P64[Sp + 40];
           P64[Hp - 128] = P64[Sp + 32];
           P64[Hp - 120] = P64[Sp + 24];
           P64[Hp - 112] = P64[Sp + 16];
           P64[Hp - 104] = P64[Sp + 8];
           P64[Hp - 96] = _s5l2H::P64;
           I64[Hp - 88] = stg_ap_7_upd_info;
           P64[Hp - 72] = _s5l2j::P64;
           P64[Hp - 64] = P64[Sp + 56];
           P64[Hp - 56] = P64[Sp + 64];
           P64[Hp - 48] = P64[Sp + 72];
           P64[Hp - 40] = P64[Sp + 80];
           P64[Hp - 32] = P64[Sp + 88];
           P64[Hp - 24] = _s5l2G::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 88;
           P64[Hp] = Hp - 160;
           R1 = Hp - 14;
           Sp = Sp + 96;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oxT_info" {
     block_c5oxT_info:
         const _c5oxT;
         const 11;
         const 30;
 },
 _c5oyH() //  []
         { []
         }
     {offset
       c5oyH: // global
           R1 = []_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.230037505 UTC

[section ""data" . Data.OldList.zip6_closure" {
     Data.OldList.zip6_closure:
         const Data.OldList.zip6_info;
 },
 Data.OldList.zip6_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c5oAi: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5oAj; else goto c5oAk;
       c5oAj: // global
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.zip6_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 16, res: 0, upd: 8;
       c5oAk: // global
           _B2::P64 = R6;
           R6 = R5;
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = GHC.Tuple.(,,,,,)_closure+6;
           P64[Sp - 8] = _B2::P64;
           Sp = Sp - 8;
           call Data.OldList.zipWith6_entry(R6,
                                            R5,
                                            R4,
                                            R3,
                                            R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.zip6_info" {
     Data.OldList.zip6_info:
         const Data.OldList.zip6_entry;
         const 0;
         const 14;
         const 25769803802;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.240595031 UTC

[section ""data" . Data.OldList.zipWith7_closure" {
     Data.OldList.zipWith7_closure:
         const Data.OldList.zipWith7_info;
 },
 Data.OldList.zipWith7_slow() //  [R1]
         { []
         }
     {offset
       c5oAr: // global
           R6 = P64[Sp + 32];
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call Data.OldList.zipWith7_entry(R6,
                                            R5,
                                            R4,
                                            R3,
                                            R2,
                                            R1) args: 32, res: 0, upd: 8;
     }
 },
 sat_s5l3e_entry() //  [R1]
         { []
         }
     {offset
       c5oBf: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5oBg; else goto c5oBh;
       c5oBg: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oBh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R6 = P64[R1 + 48];
           R5 = P64[R1 + 40];
           R4 = P64[R1 + 32];
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           P64[Sp - 40] = P64[R1 + 56];
           P64[Sp - 32] = P64[R1 + 64];
           P64[Sp - 24] = P64[R1 + 72];
           Sp = Sp - 40;
           call Data.OldList.zipWith7_entry(R6,
                                            R5,
                                            R4,
                                            R3,
                                            R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l3e_info" {
     sat_s5l3e_info:
         const sat_s5l3e_entry;
         const 8;
         const 15;
 },
 sat_s5l3d_entry() //  [R1]
         { []
         }
     {offset
       c5oBm: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5oBn; else goto c5oBo;
       c5oBn: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oBo: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R6 = P64[R1 + 56];
           R5 = P64[R1 + 48];
           R4 = P64[R1 + 40];
           R3 = P64[R1 + 32];
           R2 = P64[R1 + 24];
           _s5l38::P64 = P64[R1 + 64];
           _s5l3b::P64 = P64[R1 + 72];
           R1 = P64[R1 + 16];
           P64[Sp - 40] = _s5l38::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = _s5l3b::P64;
           Sp = Sp - 40;
           call stg_ap_pppppp_fast(R6,
                                   R5,
                                   R4,
                                   R3,
                                   R2,
                                   R1) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l3d_info" {
     sat_s5l3d_info:
         const sat_s5l3d_entry;
         const 8;
         const 15;
 },
 Data.OldList.zipWith7_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c5oBt: // global
           if ((Sp + -88) < SpLim) (likely: False) goto c5oBu; else goto c5oBv;
       c5oBu: // global
           R1 = Data.OldList.zipWith7_closure;
           P64[Sp - 40] = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           call (stg_gc_fun)(R1) args: 72, res: 0, upd: 8;
       c5oBv: // global
           I64[Sp - 40] = block_c5oAv_info;
           R1 = R3;
           P64[Sp - 32] = R2;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           if (R1 & 7 != 0) goto u5oCC; else goto c5oAw;
       u5oCC: // global
           call _c5oAv(R1) args: 0, res: 0, upd: 0;
       c5oAw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.zipWith7_info" {
     Data.OldList.zipWith7_info:
         const Data.OldList.zipWith7_entry;
         const 0;
         const 14;
         const 34359738368;
         const 0;
         const 8;
         const Data.OldList.zipWith7_slow;
 },
 _c5oAv() //  [R1]
         { []
         }
     {offset
       c5oAv: // global
           if (R1 & 7 == 1) goto u5oCi; else goto c5oBr;
       u5oCi: // global
           Sp = Sp + 64;
           call _c5oC6() args: 0, res: 0, upd: 0;
       c5oBr: // global
           I64[Sp - 8] = block_c5oAB_info;
           _s5l2T::P64 = P64[R1 + 6];
           _s5l2U::P64 = P64[R1 + 14];
           R1 = P64[Sp + 16];
           P64[Sp] = _s5l2U::P64;
           P64[Sp + 16] = _s5l2T::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5oCp; else goto c5oAC;
       u5oCp: // global
           call _c5oAB(R1) args: 0, res: 0, upd: 0;
       c5oAC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oAv_info" {
     block_c5oAv_info:
         const _c5oAv;
         const 7;
         const 30;
 },
 _c5oAB() //  [R1]
         { []
         }
     {offset
       c5oAB: // global
           if (R1 & 7 == 1) goto u5oCj; else goto c5oBE;
       u5oCj: // global
           Sp = Sp + 72;
           call _c5oC6() args: 0, res: 0, upd: 0;
       c5oBE: // global
           I64[Sp - 8] = block_c5oAH_info;
           _s5l2W::P64 = P64[R1 + 6];
           _s5l2X::P64 = P64[R1 + 14];
           R1 = P64[Sp + 32];
           P64[Sp] = _s5l2X::P64;
           P64[Sp + 32] = _s5l2W::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5oCr; else goto c5oAI;
       u5oCr: // global
           call _c5oAH(R1) args: 0, res: 0, upd: 0;
       c5oAI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oAB_info" {
     block_c5oAB_info:
         const _c5oAB;
         const 8;
         const 30;
 },
 _c5oAH() //  [R1]
         { []
         }
     {offset
       c5oAH: // global
           if (R1 & 7 == 1) goto u5oCk; else goto c5oBK;
       u5oCk: // global
           Sp = Sp + 80;
           call _c5oC6() args: 0, res: 0, upd: 0;
       c5oBK: // global
           I64[Sp - 8] = block_c5oAN_info;
           _s5l2Z::P64 = P64[R1 + 6];
           _s5l30::P64 = P64[R1 + 14];
           R1 = P64[Sp + 48];
           P64[Sp] = _s5l30::P64;
           P64[Sp + 48] = _s5l2Z::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5oCt; else goto c5oAO;
       u5oCt: // global
           call _c5oAN(R1) args: 0, res: 0, upd: 0;
       c5oAO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oAH_info" {
     block_c5oAH_info:
         const _c5oAH;
         const 9;
         const 30;
 },
 _c5oAN() //  [R1]
         { []
         }
     {offset
       c5oAN: // global
           if (R1 & 7 == 1) goto u5oCl; else goto c5oBQ;
       u5oCl: // global
           Sp = Sp + 88;
           call _c5oC6() args: 0, res: 0, upd: 0;
       c5oBQ: // global
           I64[Sp - 8] = block_c5oAT_info;
           _s5l32::P64 = P64[R1 + 6];
           _s5l33::P64 = P64[R1 + 14];
           R1 = P64[Sp + 64];
           P64[Sp] = _s5l33::P64;
           P64[Sp + 64] = _s5l32::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5oCv; else goto c5oAU;
       u5oCv: // global
           call _c5oAT(R1) args: 0, res: 0, upd: 0;
       c5oAU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oAN_info" {
     block_c5oAN_info:
         const _c5oAN;
         const 10;
         const 30;
 },
 _c5oAT() //  [R1]
         { []
         }
     {offset
       c5oAT: // global
           if (R1 & 7 == 1) goto u5oCm; else goto c5oBW;
       u5oCm: // global
           Sp = Sp + 96;
           call _c5oC6() args: 0, res: 0, upd: 0;
       c5oBW: // global
           I64[Sp - 8] = block_c5oAZ_info;
           _s5l35::P64 = P64[R1 + 6];
           _s5l36::P64 = P64[R1 + 14];
           R1 = P64[Sp + 80];
           P64[Sp] = _s5l36::P64;
           P64[Sp + 80] = _s5l35::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5oCx; else goto c5oB0;
       u5oCx: // global
           call _c5oAZ(R1) args: 0, res: 0, upd: 0;
       c5oB0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oAT_info" {
     block_c5oAT_info:
         const _c5oAT;
         const 11;
         const 30;
 },
 _c5oAZ() //  [R1]
         { []
         }
     {offset
       c5oAZ: // global
           if (R1 & 7 == 1) goto u5oCn; else goto c5oC2;
       u5oCn: // global
           Sp = Sp + 104;
           call _c5oC6() args: 0, res: 0, upd: 0;
       c5oC2: // global
           I64[Sp - 8] = block_c5oB5_info;
           _s5l38::P64 = P64[R1 + 6];
           _s5l39::P64 = P64[R1 + 14];
           R1 = P64[Sp + 96];
           P64[Sp] = _s5l39::P64;
           P64[Sp + 96] = _s5l38::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5oCz; else goto c5oB6;
       u5oCz: // global
           call _c5oB5(R1) args: 0, res: 0, upd: 0;
       c5oB6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oAZ_info" {
     block_c5oAZ_info:
         const _c5oAZ;
         const 12;
         const 30;
 },
 _c5oB5() //  [R1]
         { []
         }
     {offset
       c5oB5: // global
           if (R1 & 7 == 1) goto u5oCo; else goto c5oC8;
       u5oCo: // global
           Sp = Sp + 112;
           call _c5oC6() args: 0, res: 0, upd: 0;
       c5oC8: // global
           Hp = Hp + 184;
           if (Hp > HpLim) (likely: False) goto c5oCb; else goto c5oCa;
       c5oCb: // global
           HpAlloc = 184;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oCa: // global
           _s5l3b::P64 = P64[R1 + 6];
           _s5l3c::P64 = P64[R1 + 14];
           I64[Hp - 176] = sat_s5l3e_info;
           _s5l2K::P64 = P64[Sp + 56];
           P64[Hp - 160] = _s5l2K::P64;
           P64[Hp - 152] = P64[Sp + 48];
           P64[Hp - 144] = P64[Sp + 40];
           P64[Hp - 136] = P64[Sp + 32];
           P64[Hp - 128] = P64[Sp + 24];
           P64[Hp - 120] = P64[Sp + 16];
           P64[Hp - 112] = P64[Sp + 8];
           P64[Hp - 104] = _s5l3c::P64;
           I64[Hp - 96] = sat_s5l3d_info;
           P64[Hp - 80] = _s5l2K::P64;
           P64[Hp - 72] = P64[Sp + 64];
           P64[Hp - 64] = P64[Sp + 72];
           P64[Hp - 56] = P64[Sp + 80];
           P64[Hp - 48] = P64[Sp + 88];
           P64[Hp - 40] = P64[Sp + 96];
           P64[Hp - 32] = P64[Sp + 104];
           P64[Hp - 24] = _s5l3b::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 96;
           P64[Hp] = Hp - 176;
           R1 = Hp - 14;
           Sp = Sp + 112;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oB5_info" {
     block_c5oB5_info:
         const _c5oB5;
         const 13;
         const 30;
 },
 _c5oC6() //  []
         { []
         }
     {offset
       c5oC6: // global
           R1 = []_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.264322788 UTC

[section ""data" . Data.OldList.zip7_closure" {
     Data.OldList.zip7_closure:
         const Data.OldList.zip7_info;
 },
 Data.OldList.zip7_slow() //  [R1]
         { []
         }
     {offset
       c5oDU: // global
           R6 = P64[Sp + 32];
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call Data.OldList.zip7_entry(R6,
                                        R5,
                                        R4,
                                        R3,
                                        R2,
                                        R1) args: 24, res: 0, upd: 8;
     }
 },
 Data.OldList.zip7_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c5oDY: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5oDZ; else goto c5oE0;
       c5oDZ: // global
           R1 = Data.OldList.zip7_closure;
           P64[Sp - 40] = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           call (stg_gc_fun)(R1) args: 64, res: 0, upd: 8;
       c5oE0: // global
           _B3::P64 = R6;
           R6 = R5;
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = GHC.Tuple.(,,,,,,)_closure+7;
           P64[Sp - 8] = _B3::P64;
           Sp = Sp - 8;
           call Data.OldList.zipWith7_entry(R6,
                                            R5,
                                            R4,
                                            R3,
                                            R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.zip7_info" {
     Data.OldList.zip7_info:
         const Data.OldList.zip7_entry;
         const 0;
         const 14;
         const 30064771072;
         const 0;
         const 7;
         const Data.OldList.zip7_slow;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.272938631 UTC

[section ""data" . Data.OldList.$wunzip4_closure" {
     Data.OldList.$wunzip4_closure:
         const Data.OldList.$wunzip4_info;
 },
 ds_s5l3o_entry() //  [R1]
         { []
         }
     {offset
       c5oEu: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5oEv; else goto c5oEw;
       c5oEv: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oEw: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5oEr_info;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call Data.OldList.$wunzip4_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds_s5l3o_info" {
     ds_s5l3o_info:
         const ds_s5l3o_entry;
         const 1;
         const 16;
 },
 _c5oEr() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       c5oEr: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c5oEz; else goto c5oEy;
       c5oEz: // global
           HpAlloc = 40;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call stg_gc_pppp(R4, R3, R2, R1) args: 8, res: 8, upd: 24;
       c5oEy: // global
           I64[Hp - 32] = (,,,)_con_info;
           P64[Hp - 24] = R1;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           R1 = Hp - 31;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5oEr_info" {
     block_c5oEr_info:
         const _c5oEr;
         const 0;
         const 30;
 },
 Data.OldList.$wunzip4_entry() //  [R2]
         { []
         }
     {offset
       c5oEE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5oEF; else goto c5oEG;
       c5oEF: // global
           R2 = R2;
           R1 = Data.OldList.$wunzip4_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5oEG: // global
           I64[Sp - 8] = block_c5oEc_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5oEW; else goto c5oEd;
       u5oEW: // global
           call _c5oEc(R1) args: 0, res: 0, upd: 0;
       c5oEd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.$wunzip4_info" {
     Data.OldList.$wunzip4_info:
         const Data.OldList.$wunzip4_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5oEc() //  [R1]
         { []
         }
     {offset
       c5oEc: // global
           if (R1 & 7 == 1) goto c5oEB; else goto c5oEC;
       c5oEB: // global
           R4 = GHC.Types.[]_closure+1;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.[]_closure+1;
           R1 = GHC.Types.[]_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5oEC: // global
           I64[Sp - 8] = block_c5oEi_info;
           _s5l3i::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5l3i::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5oEV; else goto c5oEj;
       u5oEV: // global
           call _c5oEi(R1) args: 0, res: 0, upd: 0;
       c5oEj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oEc_info" {
     block_c5oEc_info:
         const _c5oEc;
         const 0;
         const 30;
 },
 _c5oEi() //  [R1]
         { []
         }
     {offset
       c5oEi: // global
           Hp = Hp + 216;
           if (Hp > HpLim) (likely: False) goto c5oEU; else goto c5oET;
       c5oEU: // global
           HpAlloc = 216;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oET: // global
           _s5l3k::P64 = P64[R1 + 7];
           _s5l3l::P64 = P64[R1 + 15];
           _s5l3m::P64 = P64[R1 + 23];
           _s5l3n::P64 = P64[R1 + 31];
           I64[Hp - 208] = ds_s5l3o_info;
           P64[Hp - 192] = P64[Sp + 8];
           I64[Hp - 184] = stg_sel_3_upd_info;
           _c5oEn::P64 = Hp - 208;
           P64[Hp - 168] = _c5oEn::P64;
           I64[Hp - 160] = :_con_info;
           P64[Hp - 152] = _s5l3n::P64;
           P64[Hp - 144] = Hp - 184;
           I64[Hp - 136] = stg_sel_2_upd_info;
           P64[Hp - 120] = _c5oEn::P64;
           I64[Hp - 112] = :_con_info;
           P64[Hp - 104] = _s5l3m::P64;
           P64[Hp - 96] = Hp - 136;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = _c5oEn::P64;
           I64[Hp - 64] = :_con_info;
           P64[Hp - 56] = _s5l3l::P64;
           P64[Hp - 48] = Hp - 88;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _c5oEn::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5l3k::P64;
           P64[Hp] = Hp - 40;
           R4 = Hp - 158;
           R3 = Hp - 110;
           R2 = Hp - 62;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oEi_info" {
     block_c5oEi_info:
         const _c5oEi;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.285425889 UTC

[section ""data" . Data.OldList.unzip4_closure" {
     Data.OldList.unzip4_closure:
         const Data.OldList.unzip4_info;
 },
 Data.OldList.unzip4_entry() //  [R2]
         { []
         }
     {offset
       c5oFy: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5oFz; else goto c5oFA;
       c5oFz: // global
           R2 = R2;
           R1 = Data.OldList.unzip4_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5oFA: // global
           I64[Sp - 8] = block_c5oFv_info;
           R2 = R2;
           Sp = Sp - 8;
           call Data.OldList.$wunzip4_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.unzip4_info" {
     Data.OldList.unzip4_info:
         const Data.OldList.unzip4_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5oFv() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       c5oFv: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c5oFD; else goto c5oFC;
       c5oFD: // global
           HpAlloc = 40;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call stg_gc_pppp(R4, R3, R2, R1) args: 8, res: 8, upd: 8;
       c5oFC: // global
           I64[Hp - 32] = (,,,)_con_info;
           P64[Hp - 24] = R1;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           R1 = Hp - 31;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oFv_info" {
     block_c5oFv_info:
         const _c5oFv;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.294435713 UTC

[section ""data" . Data.OldList.$wunzip5_closure" {
     Data.OldList.$wunzip5_closure:
         const Data.OldList.$wunzip5_info;
 },
 ds_s5l4c_entry() //  [R1]
         { []
         }
     {offset
       c5oGb: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c5oGc; else goto c5oGd;
       c5oGc: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oGd: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5oG6_info;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call Data.OldList.$wunzip5_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds_s5l4c_info" {
     ds_s5l4c_info:
         const ds_s5l4c_entry;
         const 1;
         const 16;
 },
 _c5oG6() //  [R1, R2, R3, R4, R5]
         { []
         }
     {offset
       c5oG6: // global
           P64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           P64[Sp] = R1;
           Sp = Sp - 40;
           call _c5oG7() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5oG6_info" {
     block_c5oG6_info:
         const _c5oG6;
         const 0;
         const 30;
 },
 _c5oG7() //  []
         { []
         }
     {offset
       c5oG7: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5oGg; else goto c5oGf;
       c5oGg: // global
           HpAlloc = 48;
           I64[Sp] = block_c5oG7_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 24;
       c5oGf: // global
           I64[Hp - 40] = (,,,,)_con_info;
           P64[Hp - 32] = P64[Sp + 40];
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = P64[Sp + 16];
           P64[Hp - 8] = P64[Sp + 24];
           P64[Hp] = P64[Sp + 32];
           R1 = Hp - 39;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5oG7_info" {
     block_c5oG7_info:
         const _c5oG7;
         const 5;
         const 30;
 },
 Data.OldList.$wunzip5_entry() //  [R2]
         { []
         }
     {offset
       c5oGn: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5oGo; else goto c5oGp;
       c5oGo: // global
           R2 = R2;
           R1 = Data.OldList.$wunzip5_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5oGp: // global
           I64[Sp - 8] = block_c5oFR_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5oGH; else goto c5oFS;
       u5oGH: // global
           call _c5oFR(R1) args: 0, res: 0, upd: 0;
       c5oFS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.$wunzip5_info" {
     Data.OldList.$wunzip5_info:
         const Data.OldList.$wunzip5_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5oFR() //  [R1]
         { []
         }
     {offset
       c5oFR: // global
           if (R1 & 7 == 1) goto c5oGk; else goto c5oGl;
       c5oGk: // global
           R5 = GHC.Types.[]_closure+1;
           R4 = GHC.Types.[]_closure+1;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.[]_closure+1;
           R1 = GHC.Types.[]_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5oGl: // global
           I64[Sp - 8] = block_c5oFX_info;
           _s5l45::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5l45::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5oGG; else goto c5oFY;
       u5oGG: // global
           call _c5oFX(R1) args: 0, res: 0, upd: 0;
       c5oFY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oFR_info" {
     block_c5oFR_info:
         const _c5oFR;
         const 0;
         const 30;
 },
 _c5oFX() //  [R1]
         { []
         }
     {offset
       c5oFX: // global
           Hp = Hp + 264;
           if (Hp > HpLim) (likely: False) goto c5oGF; else goto c5oGE;
       c5oGF: // global
           HpAlloc = 264;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oGE: // global
           _s5l47::P64 = P64[R1 + 7];
           _s5l48::P64 = P64[R1 + 15];
           _s5l49::P64 = P64[R1 + 23];
           _s5l4a::P64 = P64[R1 + 31];
           _s5l4b::P64 = P64[R1 + 39];
           I64[Hp - 256] = ds_s5l4c_info;
           P64[Hp - 240] = P64[Sp + 8];
           I64[Hp - 232] = stg_sel_4_upd_info;
           _c5oG2::P64 = Hp - 256;
           P64[Hp - 216] = _c5oG2::P64;
           I64[Hp - 208] = :_con_info;
           P64[Hp - 200] = _s5l4b::P64;
           P64[Hp - 192] = Hp - 232;
           I64[Hp - 184] = stg_sel_3_upd_info;
           P64[Hp - 168] = _c5oG2::P64;
           I64[Hp - 160] = :_con_info;
           P64[Hp - 152] = _s5l4a::P64;
           P64[Hp - 144] = Hp - 184;
           I64[Hp - 136] = stg_sel_2_upd_info;
           P64[Hp - 120] = _c5oG2::P64;
           I64[Hp - 112] = :_con_info;
           P64[Hp - 104] = _s5l49::P64;
           P64[Hp - 96] = Hp - 136;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = _c5oG2::P64;
           I64[Hp - 64] = :_con_info;
           P64[Hp - 56] = _s5l48::P64;
           P64[Hp - 48] = Hp - 88;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _c5oG2::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5l47::P64;
           P64[Hp] = Hp - 40;
           R5 = Hp - 206;
           R4 = Hp - 158;
           R3 = Hp - 110;
           R2 = Hp - 62;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oFX_info" {
     block_c5oFX_info:
         const _c5oFX;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.309772311 UTC

[section ""data" . Data.OldList.unzip5_closure" {
     Data.OldList.unzip5_closure:
         const Data.OldList.unzip5_info;
 },
 Data.OldList.unzip5_entry() //  [R2]
         { []
         }
     {offset
       c5oHu: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c5oHv; else goto c5oHw;
       c5oHv: // global
           R2 = R2;
           R1 = Data.OldList.unzip5_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5oHw: // global
           I64[Sp - 8] = block_c5oHp_info;
           R2 = R2;
           Sp = Sp - 8;
           call Data.OldList.$wunzip5_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.unzip5_info" {
     Data.OldList.unzip5_info:
         const Data.OldList.unzip5_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5oHp() //  [R1, R2, R3, R4, R5]
         { []
         }
     {offset
       c5oHp: // global
           P64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           P64[Sp] = R1;
           Sp = Sp - 40;
           call _c5oHq() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5oHp_info" {
     block_c5oHp_info:
         const _c5oHp;
         const 0;
         const 30;
 },
 _c5oHq() //  []
         { []
         }
     {offset
       c5oHq: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5oHz; else goto c5oHy;
       c5oHz: // global
           HpAlloc = 48;
           I64[Sp] = block_c5oHq_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c5oHy: // global
           I64[Hp - 40] = (,,,,)_con_info;
           P64[Hp - 32] = P64[Sp + 40];
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = P64[Sp + 16];
           P64[Hp - 8] = P64[Sp + 24];
           P64[Hp] = P64[Sp + 32];
           R1 = Hp - 39;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oHq_info" {
     block_c5oHq_info:
         const _c5oHq;
         const 5;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.322975583 UTC

[section ""data" . Data.OldList.$wunzip6_closure" {
     Data.OldList.$wunzip6_closure:
         const Data.OldList.$wunzip6_info;
 },
 ds_s5l5f_entry() //  [R1]
         { []
         }
     {offset
       c5oIh: // global
           if ((Sp + -72) < SpLim) (likely: False) goto c5oIi; else goto c5oIj;
       c5oIi: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oIj: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5oIc_info;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call Data.OldList.$wunzip6_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds_s5l5f_info" {
     ds_s5l5f_info:
         const ds_s5l5f_entry;
         const 1;
         const 16;
 },
 _c5oIc() //  [R1, R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c5oIc: // global
           P64[Sp - 40] = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           P64[Sp] = R1;
           Sp = Sp - 48;
           call _c5oId() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5oIc_info" {
     block_c5oIc_info:
         const _c5oIc;
         const 0;
         const 30;
 },
 _c5oId() //  []
         { []
         }
     {offset
       c5oId: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5oIm; else goto c5oIl;
       c5oIm: // global
           HpAlloc = 56;
           I64[Sp] = block_c5oId_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 24;
       c5oIl: // global
           I64[Hp - 48] = (,,,,,)_con_info;
           P64[Hp - 40] = P64[Sp + 48];
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = P64[Sp + 16];
           P64[Hp - 16] = P64[Sp + 24];
           P64[Hp - 8] = P64[Sp + 32];
           P64[Hp] = P64[Sp + 40];
           R1 = Hp - 47;
           Sp = Sp + 56;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5oId_info" {
     block_c5oId_info:
         const _c5oId;
         const 6;
         const 30;
 },
 Data.OldList.$wunzip6_entry() //  [R2]
         { []
         }
     {offset
       c5oIt: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5oIu; else goto c5oIv;
       c5oIu: // global
           R2 = R2;
           R1 = Data.OldList.$wunzip6_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5oIv: // global
           I64[Sp - 8] = block_c5oHX_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5oIP; else goto c5oHY;
       u5oIP: // global
           call _c5oHX(R1) args: 0, res: 0, upd: 0;
       c5oHY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.$wunzip6_info" {
     Data.OldList.$wunzip6_info:
         const Data.OldList.$wunzip6_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5oHX() //  [R1]
         { []
         }
     {offset
       c5oHX: // global
           if (R1 & 7 == 1) goto c5oIq; else goto c5oIr;
       c5oIq: // global
           R6 = GHC.Types.[]_closure+1;
           R5 = GHC.Types.[]_closure+1;
           R4 = GHC.Types.[]_closure+1;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.[]_closure+1;
           R1 = GHC.Types.[]_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R6,
                               R5,
                               R4,
                               R3,
                               R2,
                               R1) args: 8, res: 0, upd: 8;
       c5oIr: // global
           I64[Sp - 8] = block_c5oI3_info;
           _s5l57::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5l57::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5oIO; else goto c5oI4;
       u5oIO: // global
           call _c5oI3(R1) args: 0, res: 0, upd: 0;
       c5oI4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oHX_info" {
     block_c5oHX_info:
         const _c5oHX;
         const 0;
         const 30;
 },
 _c5oI3() //  [R1]
         { []
         }
     {offset
       c5oI3: // global
           Hp = Hp + 312;
           if (Hp > HpLim) (likely: False) goto c5oIN; else goto c5oIM;
       c5oIN: // global
           HpAlloc = 312;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oIM: // global
           _s5l59::P64 = P64[R1 + 7];
           _s5l5a::P64 = P64[R1 + 15];
           _s5l5b::P64 = P64[R1 + 23];
           _s5l5c::P64 = P64[R1 + 31];
           _s5l5d::P64 = P64[R1 + 39];
           _s5l5e::P64 = P64[R1 + 47];
           I64[Hp - 304] = ds_s5l5f_info;
           P64[Hp - 288] = P64[Sp + 8];
           I64[Hp - 280] = stg_sel_5_upd_info;
           _c5oI8::P64 = Hp - 304;
           P64[Hp - 264] = _c5oI8::P64;
           I64[Hp - 256] = :_con_info;
           P64[Hp - 248] = _s5l5e::P64;
           P64[Hp - 240] = Hp - 280;
           I64[Hp - 232] = stg_sel_4_upd_info;
           P64[Hp - 216] = _c5oI8::P64;
           I64[Hp - 208] = :_con_info;
           P64[Hp - 200] = _s5l5d::P64;
           P64[Hp - 192] = Hp - 232;
           I64[Hp - 184] = stg_sel_3_upd_info;
           P64[Hp - 168] = _c5oI8::P64;
           I64[Hp - 160] = :_con_info;
           P64[Hp - 152] = _s5l5c::P64;
           P64[Hp - 144] = Hp - 184;
           I64[Hp - 136] = stg_sel_2_upd_info;
           P64[Hp - 120] = _c5oI8::P64;
           I64[Hp - 112] = :_con_info;
           P64[Hp - 104] = _s5l5b::P64;
           P64[Hp - 96] = Hp - 136;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = _c5oI8::P64;
           I64[Hp - 64] = :_con_info;
           P64[Hp - 56] = _s5l5a::P64;
           P64[Hp - 48] = Hp - 88;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _c5oI8::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5l59::P64;
           P64[Hp] = Hp - 40;
           R6 = Hp - 254;
           R5 = Hp - 206;
           R4 = Hp - 158;
           R3 = Hp - 110;
           R2 = Hp - 62;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R6,
                               R5,
                               R4,
                               R3,
                               R2,
                               R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oI3_info" {
     block_c5oI3_info:
         const _c5oI3;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.342721358 UTC

[section ""data" . Data.OldList.unzip6_closure" {
     Data.OldList.unzip6_closure:
         const Data.OldList.unzip6_info;
 },
 Data.OldList.unzip6_entry() //  [R2]
         { []
         }
     {offset
       c5oJE: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c5oJF; else goto c5oJG;
       c5oJF: // global
           R2 = R2;
           R1 = Data.OldList.unzip6_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5oJG: // global
           I64[Sp - 8] = block_c5oJz_info;
           R2 = R2;
           Sp = Sp - 8;
           call Data.OldList.$wunzip6_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.unzip6_info" {
     Data.OldList.unzip6_info:
         const Data.OldList.unzip6_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5oJz() //  [R1, R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c5oJz: // global
           P64[Sp - 40] = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           P64[Sp] = R1;
           Sp = Sp - 48;
           call _c5oJA() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5oJz_info" {
     block_c5oJz_info:
         const _c5oJz;
         const 0;
         const 30;
 },
 _c5oJA() //  []
         { []
         }
     {offset
       c5oJA: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5oJJ; else goto c5oJI;
       c5oJJ: // global
           HpAlloc = 56;
           I64[Sp] = block_c5oJA_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c5oJI: // global
           I64[Hp - 48] = (,,,,,)_con_info;
           P64[Hp - 40] = P64[Sp + 48];
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = P64[Sp + 16];
           P64[Hp - 16] = P64[Sp + 24];
           P64[Hp - 8] = P64[Sp + 32];
           P64[Hp] = P64[Sp + 40];
           R1 = Hp - 47;
           Sp = Sp + 56;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oJA_info" {
     block_c5oJA_info:
         const _c5oJA;
         const 6;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.358362277 UTC

[section ""data" . Data.OldList.$wunzip7_closure" {
     Data.OldList.$wunzip7_closure:
         const Data.OldList.$wunzip7_info;
 },
 ds_s5l6z_entry() //  [R1]
         { []
         }
     {offset
       c5oKs: // global
           if ((Sp + -80) < SpLim) (likely: False) goto c5oKt; else goto c5oKu;
       c5oKt: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oKu: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5oKn_info;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call Data.OldList.$wunzip7_entry(R2) args: 8, res: 16, upd: 24;
     }
 },
 section ""relreadonly" . ds_s5l6z_info" {
     ds_s5l6z_info:
         const ds_s5l6z_entry;
         const 1;
         const 16;
 },
 _c5oKn() //  [R1, R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c5oKn: // global
           P64[Sp - 40] = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           P64[Sp + 8] = R1;
           Sp = Sp - 48;
           call _c5oKo() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5oKn_info" {
     block_c5oKn_info:
         const _c5oKn;
         const 0;
         const 30;
 },
 _c5oKo() //  []
         { []
         }
     {offset
       c5oKo: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c5oKx; else goto c5oKw;
       c5oKx: // global
           HpAlloc = 64;
           I64[Sp] = block_c5oKo_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 24;
       c5oKw: // global
           I64[Hp - 56] = (,,,,,,)_con_info;
           P64[Hp - 48] = P64[Sp + 56];
           P64[Hp - 40] = P64[Sp + 8];
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = P64[Sp + 24];
           P64[Hp - 16] = P64[Sp + 32];
           P64[Hp - 8] = P64[Sp + 40];
           P64[Hp] = P64[Sp + 48];
           R1 = Hp - 55;
           Sp = Sp + 64;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5oKo_info" {
     block_c5oKo_info:
         const _c5oKo;
         const 7;
         const 30;
 },
 Data.OldList.$wunzip7_entry() //  [R2]
         { []
         }
     {offset
       c5oKE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5oKF; else goto c5oKG;
       c5oKF: // global
           R2 = R2;
           R1 = Data.OldList.$wunzip7_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5oKG: // global
           I64[Sp - 8] = block_c5oK8_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5oL2; else goto c5oK9;
       u5oL2: // global
           call _c5oK8(R1) args: 0, res: 0, upd: 0;
       c5oK9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.$wunzip7_info" {
     Data.OldList.$wunzip7_info:
         const Data.OldList.$wunzip7_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5oK8() //  [R1]
         { []
         }
     {offset
       c5oK8: // global
           if (R1 & 7 == 1) goto c5oKB; else goto c5oKC;
       c5oKB: // global
           R6 = GHC.Types.[]_closure+1;
           R5 = GHC.Types.[]_closure+1;
           R4 = GHC.Types.[]_closure+1;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.[]_closure+1;
           R1 = GHC.Types.[]_closure+1;
           P64[Sp] = GHC.Types.[]_closure+1;
           call (I64[P64[Sp + 8]])(R6,
                                   R5,
                                   R4,
                                   R3,
                                   R2,
                                   R1) args: 16, res: 0, upd: 8;
       c5oKC: // global
           I64[Sp - 8] = block_c5oKe_info;
           _s5l6q::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5l6q::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5oL1; else goto c5oKf;
       u5oL1: // global
           call _c5oKe(R1) args: 0, res: 0, upd: 0;
       c5oKf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oK8_info" {
     block_c5oK8_info:
         const _c5oK8;
         const 0;
         const 30;
 },
 _c5oKe() //  [R1]
         { []
         }
     {offset
       c5oKe: // global
           Hp = Hp + 360;
           if (Hp > HpLim) (likely: False) goto c5oL0; else goto c5oKZ;
       c5oL0: // global
           HpAlloc = 360;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oKZ: // global
           _s5l6s::P64 = P64[R1 + 7];
           _s5l6t::P64 = P64[R1 + 15];
           _s5l6u::P64 = P64[R1 + 23];
           _s5l6v::P64 = P64[R1 + 31];
           _s5l6w::P64 = P64[R1 + 39];
           _s5l6x::P64 = P64[R1 + 47];
           _s5l6y::P64 = P64[R1 + 55];
           I64[Hp - 352] = ds_s5l6z_info;
           P64[Hp - 336] = P64[Sp + 8];
           I64[Hp - 328] = stg_sel_6_upd_info;
           _c5oKj::P64 = Hp - 352;
           P64[Hp - 312] = _c5oKj::P64;
           I64[Hp - 304] = :_con_info;
           P64[Hp - 296] = _s5l6y::P64;
           P64[Hp - 288] = Hp - 328;
           I64[Hp - 280] = stg_sel_5_upd_info;
           P64[Hp - 264] = _c5oKj::P64;
           I64[Hp - 256] = :_con_info;
           P64[Hp - 248] = _s5l6x::P64;
           P64[Hp - 240] = Hp - 280;
           I64[Hp - 232] = stg_sel_4_upd_info;
           P64[Hp - 216] = _c5oKj::P64;
           I64[Hp - 208] = :_con_info;
           P64[Hp - 200] = _s5l6w::P64;
           P64[Hp - 192] = Hp - 232;
           I64[Hp - 184] = stg_sel_3_upd_info;
           P64[Hp - 168] = _c5oKj::P64;
           I64[Hp - 160] = :_con_info;
           P64[Hp - 152] = _s5l6v::P64;
           P64[Hp - 144] = Hp - 184;
           I64[Hp - 136] = stg_sel_2_upd_info;
           P64[Hp - 120] = _c5oKj::P64;
           I64[Hp - 112] = :_con_info;
           P64[Hp - 104] = _s5l6u::P64;
           P64[Hp - 96] = Hp - 136;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = _c5oKj::P64;
           I64[Hp - 64] = :_con_info;
           P64[Hp - 56] = _s5l6t::P64;
           P64[Hp - 48] = Hp - 88;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _c5oKj::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5l6s::P64;
           P64[Hp] = Hp - 40;
           R6 = Hp - 254;
           R5 = Hp - 206;
           R4 = Hp - 158;
           R3 = Hp - 110;
           R2 = Hp - 62;
           R1 = Hp - 14;
           P64[Sp + 8] = Hp - 302;
           Sp = Sp + 8;
           call (I64[P64[Sp + 8]])(R6,
                                   R5,
                                   R4,
                                   R3,
                                   R2,
                                   R1) args: 16, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oKe_info" {
     block_c5oKe_info:
         const _c5oKe;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.377785871 UTC

[section ""data" . Data.OldList.unzip7_closure" {
     Data.OldList.unzip7_closure:
         const Data.OldList.unzip7_info;
 },
 Data.OldList.unzip7_entry() //  [R2]
         { []
         }
     {offset
       c5oLU: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c5oLV; else goto c5oLW;
       c5oLV: // global
           R2 = R2;
           R1 = Data.OldList.unzip7_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5oLW: // global
           I64[Sp - 8] = block_c5oLP_info;
           R2 = R2;
           Sp = Sp - 8;
           call Data.OldList.$wunzip7_entry(R2) args: 8, res: 16, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.unzip7_info" {
     Data.OldList.unzip7_info:
         const Data.OldList.unzip7_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5oLP() //  [R1, R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c5oLP: // global
           P64[Sp - 40] = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           P64[Sp + 8] = R1;
           Sp = Sp - 48;
           call _c5oLQ() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5oLP_info" {
     block_c5oLP_info:
         const _c5oLP;
         const 0;
         const 30;
 },
 _c5oLQ() //  []
         { []
         }
     {offset
       c5oLQ: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c5oLZ; else goto c5oLY;
       c5oLZ: // global
           HpAlloc = 64;
           I64[Sp] = block_c5oLQ_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c5oLY: // global
           I64[Hp - 56] = (,,,,,,)_con_info;
           P64[Hp - 48] = P64[Sp + 56];
           P64[Hp - 40] = P64[Sp + 8];
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = P64[Sp + 24];
           P64[Hp - 16] = P64[Sp + 32];
           P64[Hp - 8] = P64[Sp + 40];
           P64[Hp] = P64[Sp + 48];
           R1 = Hp - 55;
           Sp = Sp + 64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oLQ_info" {
     block_c5oLQ_info:
         const _c5oLQ;
         const 7;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.395849893 UTC

[section ""data" . Data.OldList.groupBy_closure" {
     Data.OldList.groupBy_closure:
         const Data.OldList.groupBy_info;
 },
 ds2_s5l84_entry() //  [R1]
         { []
         }
     {offset
       c5oMD: // global
           _s5l84::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c5oME; else goto c5oMF;
       c5oMF: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5oMH; else goto c5oMG;
       c5oMH: // global
           HpAlloc = 32;
           goto c5oME;
       c5oME: // global
           R1 = _s5l84::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oMG: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5l84::P64;
           _s5l7Z::P64 = P64[_s5l84::P64 + 16];
           _s5l82::P64 = P64[_s5l84::P64 + 24];
           _s5l83::P64 = P64[_s5l84::P64 + 32];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _s5l7Z::P64;
           P64[Hp] = _s5l82::P64;
           I64[Sp - 24] = block_c5oMA_info;
           R3 = _s5l83::P64;
           R2 = Hp - 24;
           Sp = Sp - 24;
           call GHC.List.$wspan_entry(R3, R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds2_s5l84_info" {
     ds2_s5l84_info:
         const ds2_s5l84_entry;
         const 3;
         const 15;
 },
 _c5oMA() //  [R1, R2]
         { []
         }
     {offset
       c5oMA: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5oMK; else goto c5oMJ;
       c5oMK: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c5oMJ: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5oMA_info" {
     block_c5oMA_info:
         const _c5oMA;
         const 0;
         const 30;
 },
 sat_s5l8h_entry() //  [R1]
         { []
         }
     {offset
       c5oMS: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5oMT; else goto c5oMU;
       c5oMT: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oMU: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c5oMP_info;
           _s5l7Z::P64 = P64[R1 + 16];
           R1 = P64[R1 + 24];
           P64[Sp - 24] = _s5l7Z::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5oMY; else goto c5oMQ;
       u5oMY: // global
           call _c5oMP(R1) args: 0, res: 0, upd: 0;
       c5oMQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l8h_info" {
     sat_s5l8h_info:
         const sat_s5l8h_entry;
         const 2;
         const 18;
 },
 _c5oMP() //  [R1]
         { []
         }
     {offset
       c5oMP: // global
           R3 = P64[R1 + 15];
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call Data.OldList.groupBy_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5oMP_info" {
     block_c5oMP_info:
         const _c5oMP;
         const 1;
         const 30;
 },
 Data.OldList.groupBy_entry() //  [R2, R3]
         { []
         }
     {offset
       c5oN3: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5oN4; else goto c5oN5;
       c5oN4: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.groupBy_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5oN5: // global
           I64[Sp - 16] = block_c5oMp_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5oNe; else goto c5oMq;
       u5oNe: // global
           call _c5oMp(R1) args: 0, res: 0, upd: 0;
       c5oMq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.groupBy_info" {
     Data.OldList.groupBy_info:
         const Data.OldList.groupBy_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5oMp() //  [R1]
         { []
         }
     {offset
       c5oMp: // global
           if (R1 & 7 == 1) goto c5oN0; else goto c5oN1;
       c5oN0: // global
           R1 = []_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5oN1: // global
           Hp = Hp + 144;
           if (Hp > HpLim) (likely: False) goto c5oNd; else goto c5oNc;
       c5oNd: // global
           HpAlloc = 144;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oNc: // global
           _s5l82::P64 = P64[R1 + 6];
           _s5l83::P64 = P64[R1 + 14];
           I64[Hp - 136] = ds2_s5l84_info;
           _s5l7Z::P64 = P64[Sp + 8];
           P64[Hp - 120] = _s5l7Z::P64;
           P64[Hp - 112] = _s5l82::P64;
           P64[Hp - 104] = _s5l83::P64;
           I64[Hp - 96] = sat_s5l8h_info;
           P64[Hp - 80] = _s5l7Z::P64;
           _c5oMv::P64 = Hp - 136;
           P64[Hp - 72] = _c5oMv::P64;
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = _c5oMv::P64;
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = _s5l82::P64;
           P64[Hp - 24] = Hp - 64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 96;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oMp_info" {
     block_c5oMp_info:
         const _c5oMp;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.417341227 UTC

[section ""data" . Data.OldList.group_closure" {
     Data.OldList.group_closure:
         const Data.OldList.group_info;
 },
 sat_s5l8k_entry() //  [R1]
         { []
         }
     {offset
       c5oNT: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5oNU; else goto c5oNV;
       c5oNU: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oNV: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l8k_info" {
     sat_s5l8k_info:
         const sat_s5l8k_entry;
         const 1;
         const 16;
 },
 Data.OldList.group_entry() //  [R2, R3]
         { []
         }
     {offset
       c5oNW: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5oO0; else goto c5oNZ;
       c5oO0: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.group_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5oNZ: // global
           I64[Hp - 16] = sat_s5l8k_info;
           P64[Hp] = R2;
           R3 = R3;
           R2 = Hp - 16;
           call Data.OldList.groupBy_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.group_info" {
     Data.OldList.group_info:
         const Data.OldList.group_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.427058533 UTC

[section ""data" . poly_tailsGo_r5kSn_closure" {
     poly_tailsGo_r5kSn_closure:
         const poly_tailsGo_r5kSn_info;
 },
 sat_s5l8p_entry() //  [R1]
         { []
         }
     {offset
       c5oOo: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5oOp; else goto c5oOq;
       c5oOp: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oOq: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5oOh_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5oOx; else goto c5oOi;
       u5oOx: // global
           call _c5oOh(R1) args: 0, res: 0, upd: 0;
       c5oOi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l8p_info" {
     sat_s5l8p_info:
         const sat_s5l8p_entry;
         const 1;
         const 16;
 },
 _c5oOh() //  [R1]
         { []
         }
     {offset
       c5oOh: // global
           if (R1 & 7 == 1) goto c5oOl; else goto c5oOm;
       c5oOl: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c5oOm: // global
           R2 = P64[R1 + 14];
           Sp = Sp + 8;
           call poly_tailsGo_r5kSn_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5oOh_info" {
     block_c5oOh_info:
         const _c5oOh;
         const 0;
         const 30;
 },
 poly_tailsGo_r5kSn_entry() //  [R2]
         { []
         }
     {offset
       c5oOz: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5oOD; else goto c5oOC;
       c5oOD: // global
           HpAlloc = 48;
           R2 = R2;
           R1 = poly_tailsGo_r5kSn_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5oOC: // global
           I64[Hp - 40] = sat_s5l8p_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . poly_tailsGo_r5kSn_info" {
     poly_tailsGo_r5kSn_info:
         const poly_tailsGo_r5kSn_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.437812798 UTC

[section ""data" . Data.OldList.tails_closure" {
     Data.OldList.tails_closure:
         const Data.OldList.tails_info;
 },
 Data.OldList.tails_entry() //  [R2]
         { []
         }
     {offset
       c5oOZ: // global
           R2 = R2;
           call poly_tailsGo_r5kSn_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.tails_info" {
     Data.OldList.tails_info:
         const Data.OldList.tails_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.445049363 UTC

[section ""data" . Data.OldList.nonEmptySubsequences_closure" {
     Data.OldList.nonEmptySubsequences_closure:
         const Data.OldList.nonEmptySubsequences_info;
 },
 go_s5l8w_entry() //  [R1, R2]
         { []
         }
     {offset
       c5oPw: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5oPx; else goto c5oPy;
       c5oPx: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5oPy: // global
           I64[Sp - 24] = block_c5oPp_info;
           _s5l8w::P64 = R1;
           _s5l8t::P64 = P64[R1 + 7];
           R1 = R2;
           P64[Sp - 16] = _s5l8t::P64;
           P64[Sp - 8] = _s5l8w::P64;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5oPL; else goto c5oPq;
       u5oPL: // global
           call _c5oPp(R1) args: 0, res: 0, upd: 0;
       c5oPq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . go_s5l8w_info" {
     go_s5l8w_info:
         const go_s5l8w_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c5oPp() //  [R1]
         { []
         }
     {offset
       c5oPp: // global
           if (R1 & 7 == 1) goto c5oPt; else goto c5oPu;
       c5oPt: // global
           R1 = []_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5oPu: // global
           Hp = Hp + 104;
           if (Hp > HpLim) (likely: False) goto c5oPK; else goto c5oPJ;
       c5oPK: // global
           HpAlloc = 104;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oPJ: // global
           _s5l8z::P64 = P64[R1 + 6];
           _s5l8A::P64 = P64[R1 + 14];
           I64[Hp - 96] = stg_ap_2_upd_info;
           P64[Hp - 80] = P64[Sp + 16];
           P64[Hp - 72] = _s5l8A::P64;
           I64[Hp - 64] = :_con_info;
           P64[Hp - 56] = P64[Sp + 8];
           P64[Hp - 48] = _s5l8z::P64;
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = Hp - 62;
           P64[Hp - 24] = Hp - 96;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5l8z::P64;
           P64[Hp] = Hp - 38;
           R1 = Hp - 14;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oPp_info" {
     block_c5oPp_info:
         const _c5oPp;
         const 2;
         const 30;
 },
 sat_s5l8F_entry() //  [R1]
         { []
         }
     {offset
       c5oPO: // global
           _s5l8F::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c5oPP; else goto c5oPQ;
       c5oPQ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5oPS; else goto c5oPR;
       c5oPS: // global
           HpAlloc = 16;
           goto c5oPP;
       c5oPP: // global
           R1 = _s5l8F::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oPR: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5l8F::P64;
           _s5l8t::P64 = P64[_s5l8F::P64 + 16];
           _s5l8u::P64 = P64[_s5l8F::P64 + 24];
           I64[Hp - 8] = go_s5l8w_info;
           P64[Hp] = _s5l8t::P64;
           I64[Sp - 32] = block_c5oPM_info;
           R2 = _s5l8u::P64;
           P64[Sp - 24] = Hp - 7;
           Sp = Sp - 32;
           call Data.OldList.nonEmptySubsequences_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l8F_info" {
     sat_s5l8F_info:
         const sat_s5l8F_entry;
         const 2;
         const 18;
 },
 _c5oPM() //  [R1]
         { []
         }
     {offset
       c5oPM: // global
           R2 = R1;
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call go_s5l8w_entry(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5oPM_info" {
     block_c5oPM_info:
         const _c5oPM;
         const 1;
         const 30;
 },
 Data.OldList.nonEmptySubsequences_entry() //  [R2]
         { []
         }
     {offset
       c5oQ0: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5oQ1; else goto c5oQ2;
       c5oQ1: // global
           R2 = R2;
           R1 = Data.OldList.nonEmptySubsequences_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5oQ2: // global
           I64[Sp - 8] = block_c5oPa_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5oQa; else goto c5oPb;
       u5oQa: // global
           call _c5oPa(R1) args: 0, res: 0, upd: 0;
       c5oPb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.nonEmptySubsequences_info" {
     Data.OldList.nonEmptySubsequences_info:
         const Data.OldList.nonEmptySubsequences_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5oPa() //  [R1]
         { []
         }
     {offset
       c5oPa: // global
           if (R1 & 7 == 1) goto c5oPX; else goto c5oPY;
       c5oPX: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5oPY: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto c5oQ9; else goto c5oQ8;
       c5oQ9: // global
           HpAlloc = 80;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oQ8: // global
           _s5l8t::P64 = P64[R1 + 6];
           _s5l8u::P64 = P64[R1 + 14];
           I64[Hp - 72] = sat_s5l8F_info;
           P64[Hp - 56] = _s5l8t::P64;
           P64[Hp - 48] = _s5l8u::P64;
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = _s5l8t::P64;
           P64[Hp - 24] = GHC.Types.[]_closure+1;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 72;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oPa_info" {
     block_c5oPa_info:
         const _c5oPa;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.465625584 UTC

[section ""data" . Data.OldList.subsequences_closure" {
     Data.OldList.subsequences_closure:
         const Data.OldList.subsequences_info;
 },
 sat_s5l8H_entry() //  [R1]
         { []
         }
     {offset
       c5oQX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5oQY; else goto c5oQZ;
       c5oQY: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oQZ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.OldList.nonEmptySubsequences_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l8H_info" {
     sat_s5l8H_info:
         const sat_s5l8H_entry;
         const 1;
         const 16;
 },
 Data.OldList.subsequences_entry() //  [R2]
         { []
         }
     {offset
       c5oR1: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5oR5; else goto c5oR4;
       c5oR5: // global
           HpAlloc = 48;
           R2 = R2;
           R1 = Data.OldList.subsequences_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5oR4: // global
           I64[Hp - 40] = sat_s5l8H_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Types.[]_closure+1;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.subsequences_info" {
     Data.OldList.subsequences_info:
         const Data.OldList.subsequences_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.478422697 UTC

[section ""data" . Data.OldList.permutations1_closure" {
     Data.OldList.permutations1_closure:
         const Data.OldList.permutations1_info;
 },
 sat_s5l8X_entry() //  [R1, R2]
         { []
         }
     {offset
       c5oRL: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5oRP; else goto c5oRO;
       c5oRP: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5oRO: // global
           _s5l8O::P64 = P64[R1 + 7];
           _s5l8S::P64 = P64[R1 + 15];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5l8S::P64;
           P64[Hp] = R2;
           R2 = Hp - 14;
           R1 = _s5l8O::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5l8X_info" {
     sat_s5l8X_info:
         const sat_s5l8X_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 ds2_s5l8U_entry() //  [R1]
         { []
         }
     {offset
       c5oRT: // global
           _s5l8U::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c5oRU; else goto c5oRV;
       c5oRV: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5oRX; else goto c5oRW;
       c5oRX: // global
           HpAlloc = 24;
           goto c5oRU;
       c5oRU: // global
           R1 = _s5l8U::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oRW: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5l8U::P64;
           _s5l8N::P64 = P64[_s5l8U::P64 + 16];
           _s5l8O::P64 = P64[_s5l8U::P64 + 24];
           _s5l8Q::P64 = P64[_s5l8U::P64 + 32];
           _s5l8S::P64 = P64[_s5l8U::P64 + 40];
           _s5l8T::P64 = P64[_s5l8U::P64 + 48];
           I64[Hp - 16] = sat_s5l8X_info;
           P64[Hp - 8] = _s5l8O::P64;
           P64[Hp] = _s5l8S::P64;
           I64[Sp - 24] = block_c5oRQ_info;
           R4 = _s5l8Q::P64;
           R3 = _s5l8T::P64;
           R2 = Hp - 15;
           R1 = _s5l8N::P64;
           Sp = Sp - 24;
           call $winterleave'_s5l8N_entry(R4,
                                          R3,
                                          R2,
                                          R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds2_s5l8U_info" {
     ds2_s5l8U_info:
         const ds2_s5l8U_entry;
         const 5;
         const 15;
 },
 _c5oRQ() //  [R1, R2]
         { []
         }
     {offset
       c5oRQ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5oS0; else goto c5oRZ;
       c5oS0: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c5oRZ: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5oRQ_info" {
     block_c5oRQ_info:
         const _c5oRQ;
         const 0;
         const 30;
 },
 sat_s5l98_entry() //  [R1]
         { []
         }
     {offset
       c5oS9: // global
           _s5l98::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5oSa; else goto c5oSb;
       c5oSb: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5oSd; else goto c5oSc;
       c5oSd: // global
           HpAlloc = 48;
           goto c5oSa;
       c5oSa: // global
           R1 = _s5l98::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oSc: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5l98::P64;
           _s5l8L::P64 = P64[_s5l98::P64 + 16];
           _s5l8O::P64 = P64[_s5l98::P64 + 24];
           _s5l8S::P64 = P64[_s5l98::P64 + 32];
           _s5l91::P64 = P64[_s5l98::P64 + 40];
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = _s5l8S::P64;
           P64[Hp - 24] = _s5l91::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5l8L::P64;
           P64[Hp] = Hp - 38;
           R2 = Hp - 14;
           R1 = _s5l8O::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l98_info" {
     sat_s5l98_info:
         const sat_s5l98_entry;
         const 4;
         const 15;
 },
 $winterleave'_s5l8N_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       c5oSi: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c5oSj; else goto c5oSk;
       c5oSj: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5oSk: // global
           I64[Sp - 48] = block_c5oRv_info;
           _s5l8N::P64 = R1;
           _s5l8L::P64 = P64[R1 + 5];
           _s5l8M::P64 = P64[R1 + 13];
           R1 = R3;
           P64[Sp - 40] = _s5l8L::P64;
           P64[Sp - 32] = _s5l8M::P64;
           P64[Sp - 24] = _s5l8N::P64;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 48;
           if (R1 & 7 != 0) goto u5oSs; else goto c5oRw;
       u5oSs: // global
           call _c5oRv(R1) args: 0, res: 0, upd: 0;
       c5oRw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . $winterleave'_s5l8N_info" {
     $winterleave'_s5l8N_info:
         const $winterleave'_s5l8N_entry;
         const 2;
         const 11;
         const 12884901911;
 },
 _c5oRv() //  [R1]
         { []
         }
     {offset
       c5oRv: // global
           _s5l8Q::P64 = P64[Sp + 40];
           if (R1 & 7 == 1) goto c5oSf; else goto c5oSg;
       c5oSf: // global
           R2 = _s5l8Q::P64;
           R1 = P64[Sp + 16];
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
       c5oSg: // global
           Hp = Hp + 200;
           if (Hp > HpLim) (likely: False) goto c5oSr; else goto c5oSq;
       c5oSr: // global
           HpAlloc = 200;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oSq: // global
           _s5l8S::P64 = P64[R1 + 6];
           _s5l8T::P64 = P64[R1 + 14];
           I64[Hp - 192] = ds2_s5l8U_info;
           P64[Hp - 176] = P64[Sp + 24];
           _s5l8O::P64 = P64[Sp + 32];
           P64[Hp - 168] = _s5l8O::P64;
           P64[Hp - 160] = _s5l8Q::P64;
           P64[Hp - 152] = _s5l8S::P64;
           P64[Hp - 144] = _s5l8T::P64;
           I64[Hp - 136] = stg_sel_0_upd_info;
           _c5oRB::P64 = Hp - 192;
           P64[Hp - 120] = _c5oRB::P64;
           I64[Hp - 112] = stg_sel_1_upd_info;
           P64[Hp - 96] = _c5oRB::P64;
           I64[Hp - 88] = sat_s5l98_info;
           P64[Hp - 72] = P64[Sp + 8];
           P64[Hp - 64] = _s5l8O::P64;
           P64[Hp - 56] = _s5l8S::P64;
           _c5oS1::P64 = Hp - 136;
           P64[Hp - 48] = _c5oS1::P64;
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = Hp - 88;
           P64[Hp - 24] = Hp - 112;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5l8S::P64;
           P64[Hp] = _c5oS1::P64;
           R2 = Hp - 38;
           R1 = Hp - 14;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oRv_info" {
     block_c5oRv_info:
         const _c5oRv;
         const 5;
         const 30;
 },
 z_s5l9e_entry() //  [R1]
         { []
         }
     {offset
       c5oSy: // global
           _s5l9e::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5oSz; else goto c5oSA;
       c5oSA: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5oSC; else goto c5oSB;
       c5oSC: // global
           HpAlloc = 24;
           goto c5oSz;
       c5oSz: // global
           R1 = _s5l9e::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oSB: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5l9e::P64;
           _s5l8J::P64 = P64[_s5l9e::P64 + 16];
           _s5l8L::P64 = P64[_s5l9e::P64 + 24];
           _s5l8M::P64 = P64[_s5l9e::P64 + 32];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5l8L::P64;
           P64[Hp] = _s5l8J::P64;
           R3 = Hp - 14;
           R2 = _s5l8M::P64;
           Sp = Sp - 16;
           call Data.OldList.permutations1_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . z_s5l9e_info" {
     z_s5l9e_info:
         const z_s5l9e_entry;
         const 3;
         const 15;
 },
 go_s5l9g_entry() //  [R1, R2]
         { []
         }
     {offset
       c5oSP: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5oSQ; else goto c5oSR;
       c5oSQ: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5oSR: // global
           I64[Sp - 32] = block_c5oSI_info;
           _s5l9g::P64 = R1;
           _s5l8N::P64 = P64[R1 + 7];
           _s5l9e::P64 = P64[R1 + 15];
           R1 = R2;
           P64[Sp - 24] = _s5l8N::P64;
           P64[Sp - 16] = _s5l9e::P64;
           P64[Sp - 8] = _s5l9g::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5oT4; else goto c5oSJ;
       u5oT4: // global
           call _c5oSI(R1) args: 0, res: 0, upd: 0;
       c5oSJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . go_s5l9g_info" {
     go_s5l9g_info:
         const go_s5l9g_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 _c5oSI() //  [R1]
         { []
         }
     {offset
       c5oSI: // global
           if (R1 & 7 == 1) goto c5oSM; else goto c5oSN;
       c5oSM: // global
           R1 = P64[Sp + 16] & (-8);
           Sp = Sp + 32;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5oSN: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5oT1; else goto c5oT0;
       c5oT1: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oT0: // global
           _s5l9j::P64 = P64[R1 + 6];
           _s5l9k::P64 = P64[R1 + 14];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = P64[Sp + 24];
           P64[Hp] = _s5l9k::P64;
           I64[Sp + 24] = block_c5oSY_info;
           R4 = Hp - 24;
           R3 = _s5l9j::P64;
           R2 = GHC.Base.id_closure+1;
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call $winterleave'_s5l8N_entry(R4,
                                          R3,
                                          R2,
                                          R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oSI_info" {
     block_c5oSI_info:
         const _c5oSI;
         const 3;
         const 30;
 },
 _c5oSY() //  [R2]
         { []
         }
     {offset
       c5oSY: // global
           R1 = R2 & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oSY_info" {
     block_c5oSY_info:
         const _c5oSY;
         const 0;
         const 30;
 },
 sat_s5l9p_entry() //  [R1]
         { []
         }
     {offset
       c5oT9: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5oTa; else goto c5oTb;
       c5oTa: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oTb: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = GHC.Types.[]_closure+1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.OldList.permutations1_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l9p_info" {
     sat_s5l9p_info:
         const sat_s5l9p_entry;
         const 1;
         const 16;
 },
 Data.OldList.permutations1_entry() //  [R2, R3]
         { []
         }
     {offset
       c5oTg: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5oTh; else goto c5oTi;
       c5oTh: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.permutations1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5oTi: // global
           I64[Sp - 16] = block_c5oRk_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5oTp; else goto c5oRl;
       u5oTp: // global
           call _c5oRk(R1) args: 0, res: 0, upd: 0;
       c5oRl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.permutations1_info" {
     Data.OldList.permutations1_info:
         const Data.OldList.permutations1_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5oRk() //  [R1]
         { []
         }
     {offset
       c5oRk: // global
           if (R1 & 7 == 1) goto c5oTd; else goto c5oTe;
       c5oTd: // global
           R1 = []_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5oTe: // global
           Hp = Hp + 136;
           if (Hp > HpLim) (likely: False) goto c5oTo; else goto c5oTn;
       c5oTo: // global
           HpAlloc = 136;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oTn: // global
           _s5l8L::P64 = P64[R1 + 6];
           _s5l8M::P64 = P64[R1 + 14];
           I64[Hp - 128] = $winterleave'_s5l8N_info;
           P64[Hp - 120] = _s5l8L::P64;
           P64[Hp - 112] = _s5l8M::P64;
           I64[Hp - 104] = z_s5l9e_info;
           _s5l8J::P64 = P64[Sp + 8];
           P64[Hp - 88] = _s5l8J::P64;
           P64[Hp - 80] = _s5l8L::P64;
           P64[Hp - 72] = _s5l8M::P64;
           I64[Hp - 64] = go_s5l9g_info;
           P64[Hp - 56] = Hp - 125;
           P64[Hp - 48] = Hp - 104;
           I64[Hp - 40] = sat_s5l9p_info;
           P64[Hp - 24] = _s5l8J::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5l8J::P64;
           P64[Hp] = Hp - 40;
           R2 = Hp - 14;
           R1 = Hp - 63;
           Sp = Sp + 16;
           call go_s5l9g_entry(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oRk_info" {
     block_c5oRk_info:
         const _c5oRk;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.506464537 UTC

[section ""data" . Data.OldList.permutations_closure" {
     Data.OldList.permutations_closure:
         const Data.OldList.permutations_info;
 },
 sat_s5l9s_entry() //  [R1]
         { []
         }
     {offset
       c5oUJ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5oUK; else goto c5oUL;
       c5oUK: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oUL: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = GHC.Types.[]_closure+1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.OldList.permutations1_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5l9s_info" {
     sat_s5l9s_info:
         const sat_s5l9s_entry;
         const 1;
         const 16;
 },
 Data.OldList.permutations_entry() //  [R2]
         { []
         }
     {offset
       c5oUN: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5oUR; else goto c5oUQ;
       c5oUR: // global
           HpAlloc = 48;
           R2 = R2;
           R1 = Data.OldList.permutations_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5oUQ: // global
           I64[Hp - 40] = sat_s5l9s_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.permutations_info" {
     Data.OldList.permutations_info:
         const Data.OldList.permutations_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.511565015 UTC

[section ""data" . lvl6_r5kSo_closure" {
     lvl6_r5kSo_closure:
         const :_con_info;
         const GHC.Types.[]_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.530096178 UTC

[section ""data" . Data.OldList.sortBy_closure" {
     Data.OldList.sortBy_closure:
         const Data.OldList.sortBy_info;
 },
 merge_s5l9v_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5oVY: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c5oVZ; else goto c5oW0;
       c5oVZ: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5oW0: // global
           I64[Sp - 32] = block_c5oVR_info;
           _s5l9v::P64 = R1;
           _s5l9t::P64 = P64[R1 + 6];
           R1 = R2;
           P64[Sp - 24] = _s5l9t::P64;
           P64[Sp - 16] = _s5l9v::P64;
           P64[Sp - 8] = R3;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5oWF; else goto c5oVS;
       u5oWF: // global
           call _c5oVR(R1) args: 0, res: 0, upd: 0;
       c5oVS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . merge_s5l9v_info" {
     merge_s5l9v_info:
         const merge_s5l9v_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 _c5oVR() //  [R1]
         { []
         }
     {offset
       c5oVR: // global
           _s5l9x::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5oVV; else goto c5oVW;
       c5oVV: // global
           R1 = _s5l9x::P64 & (-8);
           Sp = Sp + 32;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5oVW: // global
           I64[Sp - 16] = block_c5oW6_info;
           _s5l9y::P64 = R1;
           _s5l9z::P64 = P64[R1 + 6];
           _s5l9A::P64 = P64[R1 + 14];
           R1 = _s5l9x::P64;
           P64[Sp - 8] = _s5l9A::P64;
           P64[Sp] = _s5l9z::P64;
           P64[Sp + 24] = _s5l9y::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5oWE; else goto c5oW8;
       u5oWE: // global
           call _c5oW6(R1) args: 0, res: 0, upd: 0;
       c5oW8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oVR_info" {
     block_c5oVR_info:
         const _c5oVR;
         const 3;
         const 30;
 },
 _c5oW6() //  [R1]
         { []
         }
     {offset
       c5oW6: // global
           if (R1 & 7 == 1) goto c5oWe; else goto c5oWj;
       c5oWe: // global
           R1 = P64[Sp + 40] & (-8);
           Sp = Sp + 48;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5oWj: // global
           I64[Sp - 16] = block_c5oWh_info;
           _s5l9C::P64 = P64[R1 + 6];
           R3 = _s5l9C::P64;
           R2 = P64[Sp + 16];
           _s5l9B::P64 = R1;
           _s5l9D::P64 = P64[R1 + 14];
           R1 = P64[Sp + 24];
           P64[Sp - 8] = _s5l9D::P64;
           P64[Sp] = _s5l9C::P64;
           P64[Sp + 24] = _s5l9B::P64;
           Sp = Sp - 16;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oW6_info" {
     block_c5oW6_info:
         const _c5oW6;
         const 5;
         const 30;
 },
 _c5oWh() //  [R1]
         { []
         }
     {offset
       c5oWh: // global
           _s5l9v::P64 = P64[Sp + 48];
           if (R1 & 7 == 3) goto c5oWy; else goto c5oWq;
       c5oWy: // global
           Hp = Hp + 64;
           _s5l9E::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5oWB; else goto c5oWA;
       c5oWA: // global
           I64[Hp - 56] = stg_ap_3_upd_info;
           P64[Hp - 40] = _s5l9v::P64;
           P64[Hp - 32] = P64[Sp + 56];
           P64[Hp - 24] = P64[Sp + 8];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = Hp - 56;
           R1 = Hp - 14;
           Sp = Sp + 64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5oWq: // global
           Hp = Hp + 64;
           _s5l9E::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5oWB; else goto c5oWs;
       c5oWB: // global
           HpAlloc = 64;
           R1 = _s5l9E::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oWs: // global
           I64[Hp - 56] = stg_ap_3_upd_info;
           P64[Hp - 40] = _s5l9v::P64;
           P64[Hp - 32] = P64[Sp + 24];
           P64[Hp - 24] = P64[Sp + 40];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = P64[Sp + 32];
           P64[Hp] = Hp - 56;
           R1 = Hp - 14;
           Sp = Sp + 64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oWh_info" {
     block_c5oWh_info:
         const _c5oWh;
         const 7;
         const 30;
 },
 mergePairs_s5l9H_entry() //  [R1, R2]
         { []
         }
     {offset
       c5oWQ: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5oWR; else goto c5oWS;
       c5oWR: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5oWS: // global
           I64[Sp - 24] = block_c5oWJ_info;
           _s5l9H::P64 = R1;
           _s5l9v::P64 = P64[R1 + 7];
           R1 = R2;
           P64[Sp - 16] = _s5l9v::P64;
           P64[Sp - 8] = _s5l9H::P64;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5oXm; else goto c5oWK;
       u5oXm: // global
           call _c5oWJ(R1) args: 0, res: 0, upd: 0;
       c5oWK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . mergePairs_s5l9H_info" {
     mergePairs_s5l9H_info:
         const mergePairs_s5l9H_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c5oWJ() //  [R1]
         { []
         }
     {offset
       c5oWJ: // global
           if (R1 & 7 == 1) goto c5oWN; else goto c5oWO;
       c5oWN: // global
           R1 = []_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5oWO: // global
           I64[Sp - 16] = block_c5oWY_info;
           _s5l9J::P64 = R1;
           _s5l9K::P64 = P64[R1 + 6];
           R1 = P64[R1 + 14];
           P64[Sp - 8] = _s5l9K::P64;
           P64[Sp] = _s5l9J::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5oXl; else goto c5oX0;
       u5oXl: // global
           call _c5oWY(R1) args: 0, res: 0, upd: 0;
       c5oX0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oWJ_info" {
     block_c5oWJ_info:
         const _c5oWJ;
         const 2;
         const 30;
 },
 _c5oWY() //  [R1]
         { []
         }
     {offset
       c5oWY: // global
           if (R1 & 7 == 1) goto c5oX6; else goto c5oXg;
       c5oX6: // global
           R1 = P64[Sp + 16] & (-8);
           Sp = Sp + 40;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5oXg: // global
           I64[Sp + 16] = block_c5oX9_info;
           R3 = P64[R1 + 6];
           R2 = P64[Sp + 8];
           _s5l9O::P64 = P64[R1 + 14];
           R1 = P64[Sp + 24];
           P64[Sp + 24] = _s5l9O::P64;
           Sp = Sp + 16;
           call merge_s5l9v_entry(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oWY_info" {
     block_c5oWY_info:
         const _c5oWY;
         const 4;
         const 30;
 },
 _c5oX9() //  [R1]
         { []
         }
     {offset
       c5oX9: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5oXj; else goto c5oXi;
       c5oXj: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oXi: // global
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = P64[Sp + 8];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oX9_info" {
     block_c5oX9_info:
         const _c5oX9;
         const 2;
         const 30;
 },
 lvl12_s5l9R_entry() //  [R1]
         { []
         }
     {offset
       c5oXp: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5oXq; else goto c5oXr;
       c5oXq: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oXr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = GHC.Types.[]_closure+1;
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call mergePairs_s5l9H_entry(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl12_s5l9R_info" {
     lvl12_s5l9R_info:
         const lvl12_s5l9R_entry;
         const 1;
         const 16;
 },
 sat_s5la4_entry() //  [R1, R2]
         { []
         }
     {offset
       c5oXR: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5oXV; else goto c5oXU;
       c5oXV: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5oXU: // global
           _s5l9Y::P64 = P64[R1 + 7];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5l9Y::P64;
           P64[Hp] = R2;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5la4_info" {
     sat_s5la4_info:
         const sat_s5la4_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sequences_s5l9S_entry() //  [R1, R2]
         { []
         }
     {offset
       c5oY0: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c5oY1; else goto c5oY2;
       c5oY1: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5oY2: // global
           I64[Sp - 32] = block_c5oXv_info;
           _s5l9t::P64 = P64[R1 + 7];
           _s5l9U::P64 = P64[R1 + 15];
           _s5l9V::P64 = P64[R1 + 23];
           R1 = R2;
           P64[Sp - 24] = _s5l9t::P64;
           P64[Sp - 16] = _s5l9U::P64;
           P64[Sp - 8] = _s5l9V::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5oYu; else goto c5oXw;
       u5oYu: // global
           call _c5oXv(R1) args: 0, res: 0, upd: 0;
       c5oXw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sequences_s5l9S_info" {
     sequences_s5l9S_info:
         const sequences_s5l9S_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 _c5oXv() //  [R1]
         { []
         }
     {offset
       c5oXv: // global
           if (R1 & 7 == 1) goto c5oXX; else goto c5oXY;
       c5oXX: // global
           R1 = lvl6_r5kSo_closure+2;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5oXY: // global
           I64[Sp - 16] = block_c5oXB_info;
           _s5l9X::P64 = R1;
           _s5l9Y::P64 = P64[R1 + 6];
           R1 = P64[R1 + 14];
           P64[Sp - 8] = _s5l9Y::P64;
           P64[Sp] = _s5l9X::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5oYt; else goto c5oXC;
       u5oYt: // global
           call _c5oXB(R1) args: 0, res: 0, upd: 0;
       c5oXC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oXv_info" {
     block_c5oXv_info:
         const _c5oXv;
         const 3;
         const 30;
 },
 _c5oXB() //  [R1]
         { []
         }
     {offset
       c5oXB: // global
           if (R1 & 7 == 1) goto c5oY9; else goto c5oYe;
       c5oY9: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5oYc; else goto c5oYb;
       c5oYc: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oYb: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = GHC.Types.[]_closure+1;
           R1 = Hp - 14;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5oYe: // global
           I64[Sp] = block_c5oXH_info;
           _s5la1::P64 = P64[R1 + 6];
           R3 = _s5la1::P64;
           R2 = P64[Sp + 8];
           _s5la2::P64 = P64[R1 + 14];
           R1 = P64[Sp + 24];
           P64[Sp + 16] = _s5la2::P64;
           P64[Sp + 24] = _s5la1::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oXB_info" {
     block_c5oXB_info:
         const _c5oXB;
         const 5;
         const 30;
 },
 _c5oXH() //  [R1]
         { []
         }
     {offset
       c5oXH: // global
           _s5l9Y::P64 = P64[Sp + 8];
           _s5la1::P64 = P64[Sp + 24];
           _s5la2::P64 = P64[Sp + 16];
           if (R1 & 7 == 3) goto c5oYn; else goto c5oYg;
       c5oYn: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5oYq; else goto c5oYp;
       c5oYq: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oYp: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5l9Y::P64;
           P64[Hp] = GHC.Types.[]_closure+1;
           R4 = _s5la2::P64;
           R3 = Hp - 14;
           R2 = _s5la1::P64;
           R1 = P64[Sp + 32];
           Sp = Sp + 48;
           call descending_s5l9U_entry(R4,
                                       R3,
                                       R2,
                                       R1) args: 8, res: 0, upd: 8;
       c5oYg: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5oYj; else goto c5oYi;
       c5oYj: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oYi: // global
           I64[Hp - 8] = sat_s5la4_info;
           P64[Hp] = _s5l9Y::P64;
           R4 = _s5la2::P64;
           R3 = Hp - 7;
           R2 = _s5la1::P64;
           R1 = P64[Sp + 40];
           Sp = Sp + 48;
           call ascending_s5l9V_entry(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oXH_info" {
     block_c5oXH_info:
         const _c5oXH;
         const 5;
         const 30;
 },
 lvl13_s5l9T_entry() //  [R1]
         { []
         }
     {offset
       c5oYx: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5oYy; else goto c5oYz;
       c5oYy: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5oYz: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = GHC.Types.[]_closure+1;
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call sequences_s5l9S_entry(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl13_s5l9T_info" {
     lvl13_s5l9T_info:
         const lvl13_s5l9T_entry;
         const 1;
         const 16;
 },
 descending_s5l9U_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       c5oYE: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c5oYF; else goto u5oZ2;
       c5oYF: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u5oZ2: // global
           P64[Sp - 32] = R1;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call _c5oVk() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . descending_s5l9U_info" {
     descending_s5l9U_info:
         const descending_s5l9U_entry;
         const 3;
         const 8;
         const 12884901911;
 },
 _c5oVk() //  []
         { []
         }
     {offset
       c5oVk: // global
           I64[Sp - 24] = block_c5oVn_info;
           R1 = P64[Sp + 24];
           _s5l9U::P64 = P64[Sp];
           P64[Sp - 16] = P64[_s5l9U::P64 + 13];
           P64[Sp - 8] = P64[_s5l9U::P64 + 21];
           P64[Sp + 24] = P64[_s5l9U::P64 + 5];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5oZ4; else goto c5oVo;
       u5oZ4: // global
           call _c5oVn(R1) args: 0, res: 0, upd: 0;
       c5oVo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5oVn() //  [R1]
         { []
         }
     {offset
       c5oVn: // global
           _s5la6::P64 = P64[Sp + 32];
           if (R1 & 7 == 1) goto c5oYB; else goto c5oYC;
       c5oYB: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5oYM; else goto c5oYL;
       c5oYM: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oYL: // global
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = _s5la6::P64;
           P64[Hp - 24] = P64[Sp + 40];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = P64[Sp + 16];
           R1 = Hp - 14;
           Sp = Sp + 56;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5oYC: // global
           I64[Sp - 8] = block_c5oVt_info;
           _s5lab::P64 = P64[R1 + 6];
           R3 = _s5lab::P64;
           R2 = _s5la6::P64;
           _s5la9::P64 = R1;
           _s5lac::P64 = P64[R1 + 14];
           R1 = P64[Sp + 48];
           P64[Sp] = _s5lac::P64;
           P64[Sp + 16] = _s5lab::P64;
           P64[Sp + 48] = _s5la9::P64;
           Sp = Sp - 8;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oVn_info" {
     block_c5oVn_info:
         const _c5oVn;
         const 6;
         const 30;
 },
 _c5oVt() //  [R1]
         { []
         }
     {offset
       c5oVt: // global
           _s5la6::P64 = P64[Sp + 40];
           _s5la7::P64 = P64[Sp + 48];
           if (R1 & 7 == 3) goto c5oYX; else goto c5oYT;
       c5oYX: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5oZ0; else goto c5oYZ;
       c5oZ0: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oYZ: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5la6::P64;
           P64[Hp] = _s5la7::P64;
           P64[Sp + 40] = P64[Sp + 24];
           P64[Sp + 48] = Hp - 14;
           P64[Sp + 56] = P64[Sp + 8];
           Sp = Sp + 32;
           call _c5oVk() args: 0, res: 0, upd: 0;
       c5oYT: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto c5oYW; else goto c5oYV;
       c5oYW: // global
           HpAlloc = 80;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oYV: // global
           I64[Hp - 72] = stg_ap_2_upd_info;
           P64[Hp - 56] = P64[Sp + 16];
           P64[Hp - 48] = P64[Sp + 56];
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = _s5la6::P64;
           P64[Hp - 24] = _s5la7::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 72;
           R1 = Hp - 14;
           Sp = Sp + 64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oVt_info" {
     block_c5oVt_info:
         const _c5oVt;
         const 7;
         const 30;
 },
 sat_s5las_entry() //  [R1, R2]
         { []
         }
     {offset
       c5oZc: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5oZg; else goto c5oZf;
       c5oZg: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5oZf: // global
           _s5lah::P64 = P64[R1 + 7];
           _s5lai::P64 = P64[R1 + 15];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5lah::P64;
           P64[Hp] = R2;
           R2 = Hp - 14;
           R1 = _s5lai::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5las_info" {
     sat_s5las_info:
         const sat_s5las_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 ascending_s5l9V_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       c5oZl: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c5oZm; else goto u5oZY;
       c5oZm: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u5oZY: // global
           P64[Sp - 32] = R1;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call _c5oVA() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . ascending_s5l9V_info" {
     ascending_s5l9V_info:
         const ascending_s5l9V_entry;
         const 3;
         const 8;
         const 12884901911;
 },
 _c5oVA() //  []
         { []
         }
     {offset
       c5oVA: // global
           I64[Sp - 24] = block_c5oVD_info;
           R1 = P64[Sp + 24];
           _s5l9V::P64 = P64[Sp];
           P64[Sp - 16] = P64[_s5l9V::P64 + 13];
           P64[Sp - 8] = P64[_s5l9V::P64 + 21];
           P64[Sp + 24] = P64[_s5l9V::P64 + 5];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5p00; else goto c5oVE;
       u5p00: // global
           call _c5oVD(R1) args: 0, res: 0, upd: 0;
       c5oVE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5oVD() //  [R1]
         { []
         }
     {offset
       c5oVD: // global
           _s5lah::P64 = P64[Sp + 32];
           if (R1 & 7 == 1) goto c5oZi; else goto c5oZj;
       c5oZi: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5oZx; else goto c5oZw;
       c5oZx: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oZw: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5lah::P64;
           P64[Hp] = GHC.Types.[]_closure+1;
           I64[Sp + 8] = block_c5oZq_info;
           R2 = Hp - 14;
           R1 = P64[Sp + 40];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
       c5oZj: // global
           I64[Sp - 8] = block_c5oVJ_info;
           _s5lan::P64 = P64[R1 + 6];
           R3 = _s5lan::P64;
           R2 = _s5lah::P64;
           _s5lak::P64 = R1;
           _s5lao::P64 = P64[R1 + 14];
           R1 = P64[Sp + 48];
           P64[Sp] = _s5lao::P64;
           P64[Sp + 16] = _s5lan::P64;
           P64[Sp + 48] = _s5lak::P64;
           Sp = Sp - 8;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oVD_info" {
     block_c5oVD_info:
         const _c5oVD;
         const 6;
         const 30;
 },
 _c5oZq() //  [R1]
         { []
         }
     {offset
       c5oZq: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5oZA; else goto c5oZz;
       c5oZA: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oZz: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 14;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oZq_info" {
     block_c5oZq_info:
         const _c5oZq;
         const 1925;
         const 30;
 },
 _c5oVJ() //  [R1]
         { []
         }
     {offset
       c5oVJ: // global
           _s5lah::P64 = P64[Sp + 40];
           _s5lai::P64 = P64[Sp + 48];
           if (R1 & 7 == 3) goto c5oZQ; else goto c5oZD;
       c5oZQ: // global
           Hp = Hp + 24;
           _s5lap::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5oZT; else goto c5oZS;
       c5oZS: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5lah::P64;
           P64[Hp] = GHC.Types.[]_closure+1;
           I64[Sp + 8] = block_c5oZK_info;
           R2 = Hp - 14;
           R1 = _s5lai::P64;
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
       c5oZD: // global
           Hp = Hp + 24;
           _s5lap::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5oZT; else goto c5oZF;
       c5oZT: // global
           HpAlloc = 24;
           R1 = _s5lap::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oZF: // global
           I64[Hp - 16] = sat_s5las_info;
           P64[Hp - 8] = _s5lah::P64;
           P64[Hp] = _s5lai::P64;
           P64[Sp + 40] = P64[Sp + 24];
           P64[Sp + 48] = Hp - 15;
           P64[Sp + 56] = P64[Sp + 8];
           Sp = Sp + 32;
           call _c5oVA() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5oVJ_info" {
     block_c5oVJ_info:
         const _c5oVJ;
         const 7;
         const 30;
 },
 _c5oZK() //  [R1]
         { []
         }
     {offset
       c5oZK: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5oZW; else goto c5oZV;
       c5oZW: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5oZV: // global
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = P64[Sp + 48];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 56;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5oZK_info" {
     block_c5oZK_info:
         const _c5oZK;
         const 1926;
         const 30;
 },
 Data.OldList.sortBy_entry() //  [R2, R3]
         { []
         }
     {offset
       c5p05: // global
           _s5l9u::P64 = R3;
           _s5l9t::P64 = R2;
           if ((Sp + -40) < SpLim) (likely: False) goto c5p06; else goto c5p07;
       c5p07: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto c5p09; else goto c5p08;
       c5p09: // global
           HpAlloc = 176;
           goto c5p06;
       c5p06: // global
           R3 = _s5l9u::P64;
           R2 = _s5l9t::P64;
           R1 = Data.OldList.sortBy_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5p08: // global
           I64[Hp - 168] = merge_s5l9v_info;
           P64[Hp - 160] = _s5l9t::P64;
           I64[Hp - 152] = mergePairs_s5l9H_info;
           P64[Hp - 144] = Hp - 166;
           I64[Hp - 136] = lvl12_s5l9R_info;
           _c5oV9::P64 = Hp - 151;
           P64[Hp - 120] = _c5oV9::P64;
           I64[Hp - 112] = sequences_s5l9S_info;
           P64[Hp - 104] = _s5l9t::P64;
           P64[Hp - 96] = Hp - 53;
           P64[Hp - 88] = Hp - 21;
           I64[Hp - 80] = lvl13_s5l9T_info;
           _c5oVd::P64 = Hp - 111;
           P64[Hp - 64] = _c5oVd::P64;
           I64[Hp - 56] = descending_s5l9U_info;
           P64[Hp - 48] = _s5l9t::P64;
           P64[Hp - 40] = _c5oVd::P64;
           _c5oVe::P64 = Hp - 80;
           P64[Hp - 32] = _c5oVe::P64;
           I64[Hp - 24] = ascending_s5l9V_info;
           P64[Hp - 16] = _s5l9t::P64;
           P64[Hp - 8] = _c5oVd::P64;
           P64[Hp] = _c5oVe::P64;
           I64[Sp - 24] = block_c5p03_info;
           R2 = _s5l9u::P64;
           R1 = _c5oVd::P64;
           P64[Sp - 16] = _c5oV9::P64;
           P64[Sp - 8] = Hp - 136;
           Sp = Sp - 24;
           call sequences_s5l9S_entry(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.sortBy_info" {
     Data.OldList.sortBy_info:
         const Data.OldList.sortBy_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5p03() //  [R1]
         { []
         }
     {offset
       c5p03: // global
           P64[Sp] = R1;
           call _c5p0g() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5p03_info" {
     block_c5p03_info:
         const _c5p03;
         const 2;
         const 30;
 },
 _c5p0g() //  []
         { []
         }
     {offset
       c5p0g: // global
           _s5lax::P64 = P64[Sp];
           I64[Sp] = block_c5p0i_info;
           R1 = _s5lax::P64;
           if (R1 & 7 != 0) goto u5p0S; else goto c5p0k;
       u5p0S: // global
           call _c5p0i(R1) args: 0, res: 0, upd: 0;
       c5p0k: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5p0i() //  [R1]
         { []
         }
     {offset
       c5p0i: // global
           if (R1 & 7 == 1) goto c5p0q; else goto c5p0v;
       c5p0q: // global
           P64[Sp] = P64[Sp + 16];
           call _c5p0g() args: 0, res: 0, upd: 0;
       c5p0v: // global
           I64[Sp - 16] = block_c5p0t_info;
           _s5lay::P64 = R1;
           _s5laz::P64 = P64[R1 + 6];
           R1 = P64[R1 + 14];
           P64[Sp - 8] = _s5laz::P64;
           P64[Sp] = _s5lay::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5p0T; else goto c5p0w;
       u5p0T: // global
           call _c5p0t(R1) args: 0, res: 0, upd: 0;
       c5p0w: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5p0i_info" {
     block_c5p0i_info:
         const _c5p0i;
         const 2;
         const 30;
 },
 _c5p0t() //  [R1]
         { []
         }
     {offset
       c5p0t: // global
           if (R1 & 7 == 1) goto c5p0C; else goto c5p0H;
       c5p0C: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 40;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5p0H: // global
           _s5lay::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c5p0F_info;
           R2 = _s5lay::P64;
           R1 = P64[Sp + 24];
           Sp = Sp + 16;
           call mergePairs_s5l9H_entry(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5p0t_info" {
     block_c5p0t_info:
         const _c5p0t;
         const 4;
         const 30;
 },
 _c5p0F() //  [R1]
         { []
         }
     {offset
       c5p0F: // global
           P64[Sp] = R1;
           call _c5p0g() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5p0F_info" {
     block_c5p0F_info:
         const _c5p0F;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.597731219 UTC

[section ""data" . Data.OldList.sortOn_closure" {
     Data.OldList.sortOn_closure:
         const Data.OldList.sortOn_info;
 },
 sat_s5laW_entry() //  [R1, R2]
         { []
         }
     {offset
       c5p4l: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5p4m; else goto c5p4n;
       c5p4m: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5p4n: // global
           I64[Sp - 16] = block_c5p4i_info;
           _s5laU::P64 = R2;
           R2 = R2;
           R1 = P64[R1 + 7];
           P64[Sp - 8] = _s5laU::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5laW_info" {
     sat_s5laW_info:
         const sat_s5laW_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c5p4i() //  [R1]
         { []
         }
     {offset
       c5p4i: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5p4q; else goto c5p4p;
       c5p4q: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5p4p: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 15;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5p4i_info" {
     block_c5p4i_info:
         const _c5p4i;
         const 1;
         const 30;
 },
 sat_s5laT_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5p4C: // global
           _s5laK::P64 = R3;
           _s5laJ::P64 = R2;
           _s5laT::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c5p4D; else goto c5p4E;
       c5p4E: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5p4G; else goto c5p4F;
       c5p4G: // global
           HpAlloc = 48;
           goto c5p4D;
       c5p4D: // global
           R3 = _s5laK::P64;
           R2 = _s5laJ::P64;
           R1 = _s5laT::P64;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5p4F: // global
           _s5laG::P64 = P64[_s5laT::P64 + 6];
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _s5laK::P64;
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _s5laJ::P64;
           R2 = _s5laG::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 16;
           P64[Sp - 8] = Hp - 40;
           Sp = Sp - 24;
           call GHC.Classes.compare_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5laT_info" {
     sat_s5laT_info:
         const sat_s5laT_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 Data.OldList.sortOn_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5p4H: // global
           _s5laI::P64 = R4;
           _s5laH::P64 = R3;
           _s5laG::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto c5p4J; else goto c5p4K;
       c5p4K: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5p4M; else goto c5p4L;
       c5p4M: // global
           HpAlloc = 16;
           goto c5p4J;
       c5p4J: // global
           R4 = _s5laI::P64;
           R3 = _s5laH::P64;
           R2 = _s5laG::P64;
           R1 = Data.OldList.sortOn_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5p4L: // global
           I64[Hp - 8] = sat_s5laW_info;
           P64[Hp] = _s5laH::P64;
           I64[Sp - 16] = block_c5p4r_info;
           R3 = _s5laI::P64;
           R2 = Hp - 7;
           P64[Sp - 8] = _s5laG::P64;
           Sp = Sp - 16;
           call GHC.Base.map_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.sortOn_info" {
     Data.OldList.sortOn_info:
         const Data.OldList.sortOn_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5p4r() //  [R1]
         { []
         }
     {offset
       c5p4r: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5p4P; else goto c5p4O;
       c5p4P: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5p4O: // global
           I64[Hp - 8] = sat_s5laT_info;
           P64[Hp] = P64[Sp + 8];
           I64[Sp + 8] = block_c5p4I_info;
           R3 = R1;
           R2 = Hp - 6;
           Sp = Sp + 8;
           call Data.OldList.sortBy_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5p4r_info" {
     block_c5p4r_info:
         const _c5p4r;
         const 1;
         const 30;
 },
 _c5p4I() //  [R1]
         { []
         }
     {offset
       c5p4I: // global
           R3 = R1;
           R2 = Data.Tuple.snd_closure+1;
           Sp = Sp + 8;
           call GHC.Base.map_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5p4I_info" {
     block_c5p4I_info:
         const _c5p4I;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.611675811 UTC

[section ""data" . Data.OldList.sort_closure" {
     Data.OldList.sort_closure:
         const Data.OldList.sort_info;
 },
 sat_s5lb1_entry() //  [R1]
         { []
         }
     {offset
       c5p5t: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5p5u; else goto c5p5v;
       c5p5u: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5p5v: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.compare_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5lb1_info" {
     sat_s5lb1_info:
         const sat_s5lb1_entry;
         const 1;
         const 16;
 },
 Data.OldList.sort_entry() //  [R2, R3]
         { []
         }
     {offset
       c5p5w: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5p5A; else goto c5p5z;
       c5p5A: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.sort_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5p5z: // global
           I64[Hp - 16] = sat_s5lb1_info;
           P64[Hp] = R2;
           R3 = R3;
           R2 = Hp - 16;
           call Data.OldList.sortBy_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.sort_info" {
     Data.OldList.sort_info:
         const Data.OldList.sort_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.619514041 UTC

[section ""data" . Data.OldList.unfoldr_closure" {
     Data.OldList.unfoldr_closure:
         const Data.OldList.unfoldr_info;
 },
 go_s5lb4_entry() //  [R1, R2]
         { []
         }
     {offset
       c5p5Y: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5p5Z; else goto c5p60;
       c5p5Z: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5p60: // global
           I64[Sp - 16] = block_c5p5S_info;
           R2 = R2;
           _s5lb4::P64 = R1;
           R1 = P64[R1 + 7];
           P64[Sp - 8] = _s5lb4::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . go_s5lb4_info" {
     go_s5lb4_info:
         const go_s5lb4_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c5p5S() //  [R1]
         { []
         }
     {offset
       c5p5S: // global
           if (R1 & 7 == 1) goto c5p5V; else goto c5p5W;
       c5p5V: // global
           R1 = []_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5p5W: // global
           I64[Sp] = block_c5p66_info;
           R1 = P64[R1 + 6];
           if (R1 & 7 != 0) goto u5p6h; else goto c5p67;
       u5p6h: // global
           call _c5p66(R1) args: 0, res: 0, upd: 0;
       c5p67: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5p5S_info" {
     block_c5p5S_info:
         const _c5p5S;
         const 1;
         const 30;
 },
 _c5p66() //  [R1]
         { []
         }
     {offset
       c5p66: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5p6g; else goto c5p6f;
       c5p6g: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5p6f: // global
           _s5lb9::P64 = P64[R1 + 7];
           _s5lba::P64 = P64[R1 + 15];
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s5lba::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5lb9::P64;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5p66_info" {
     block_c5p66_info:
         const _c5p66;
         const 1;
         const 30;
 },
 Data.OldList.unfoldr_entry() //  [R2, R3]
         { []
         }
     {offset
       c5p6i: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5p6m; else goto c5p6l;
       c5p6m: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.unfoldr_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5p6l: // global
           I64[Hp - 8] = go_s5lb4_info;
           P64[Hp] = R2;
           R2 = R3;
           R1 = Hp - 7;
           call go_s5lb4_entry(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.unfoldr_info" {
     Data.OldList.unfoldr_info:
         const Data.OldList.unfoldr_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.627997307 UTC

[section ""data" . lvl7_r5kSp_closure" {
     lvl7_r5kSp_closure:
         const GHC.Types.C#_con_info;
         const 10;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.63153492 UTC

[section ""data" . Data.OldList.unlines_closure" {
     Data.OldList.unlines_closure:
         const Data.OldList.unlines_info;
 },
 sat_s5lbg_entry() //  [R1]
         { []
         }
     {offset
       c5p6X: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5p6Y; else goto c5p6Z;
       c5p6Y: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5p6Z: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.OldList.unlines_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5lbg_info" {
     sat_s5lbg_info:
         const sat_s5lbg_entry;
         const 1;
         const 16;
 },
 Data.OldList.unlines_entry() //  [R2]
         { []
         }
     {offset
       c5p74: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5p75; else goto c5p76;
       c5p75: // global
           R2 = R2;
           R1 = Data.OldList.unlines_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5p76: // global
           I64[Sp - 8] = block_c5p6N_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5p7d; else goto c5p6O;
       u5p7d: // global
           call _c5p6N(R1) args: 0, res: 0, upd: 0;
       c5p6O: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.unlines_info" {
     Data.OldList.unlines_info:
         const Data.OldList.unlines_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5p6N() //  [R1]
         { []
         }
     {offset
       c5p6N: // global
           if (R1 & 7 == 1) goto c5p71; else goto c5p72;
       c5p71: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5p72: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5p7c; else goto c5p7b;
       c5p7c: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5p7b: // global
           _s5lbe::P64 = P64[R1 + 6];
           _s5lbf::P64 = P64[R1 + 14];
           I64[Hp - 40] = sat_s5lbg_info;
           P64[Hp - 24] = _s5lbf::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = lvl7_r5kSp_closure+1;
           P64[Hp] = Hp - 40;
           R3 = Hp - 14;
           R2 = _s5lbe::P64;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5p6N_info" {
     block_c5p6N_info:
         const _c5p6N;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.645792915 UTC

[section ""data" . Data.OldList.wordsFB_closure" {
     Data.OldList.wordsFB_closure:
         const Data.OldList.wordsFB_info;
 },
 ds_s5lbq_entry() //  [R1]
         { []
         }
     {offset
       c5p7Q: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5p7R; else goto c5p7S;
       c5p7R: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5p7S: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5p7N_info;
           R3 = P64[R1 + 16];
           R2 = GHC.Unicode.isSpace_closure+1;
           Sp = Sp - 24;
           call GHC.List.$wbreak_entry(R3, R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds_s5lbq_info" {
     ds_s5lbq_info:
         const ds_s5lbq_entry;
         const 1;
         const 16;
 },
 _c5p7N() //  [R1, R2]
         { []
         }
     {offset
       c5p7N: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5p7V; else goto c5p7U;
       c5p7V: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c5p7U: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5p7N_info" {
     block_c5p7N_info:
         const _c5p7N;
         const 0;
         const 30;
 },
 sat_s5lbB_entry() //  [R1]
         { []
         }
     {offset
       c5p83: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5p84; else goto c5p85;
       c5p84: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5p85: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c5p80_info;
           _s5lbl::P64 = P64[R1 + 16];
           R1 = P64[R1 + 24];
           P64[Sp - 24] = _s5lbl::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5p89; else goto c5p81;
       u5p89: // global
           call _c5p80(R1) args: 0, res: 0, upd: 0;
       c5p81: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5lbB_info" {
     sat_s5lbB_info:
         const sat_s5lbB_entry;
         const 2;
         const 18;
 },
 _c5p80() //  [R1]
         { []
         }
     {offset
       c5p80: // global
           R2 = P64[R1 + 15];
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call go_s5lbl_entry(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5p80_info" {
     block_c5p80_info:
         const _c5p80;
         const 1;
         const 30;
 },
 go_s5lbl_entry() //  [R1, R2]
         { []
         }
     {offset
       c5p8e: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5p8f; else goto c5p8g;
       c5p8f: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5p8g: // global
           I64[Sp - 32] = block_c5p7E_info;
           R3 = R2;
           R2 = GHC.Unicode.isSpace_closure+1;
           P64[Sp - 24] = P64[R1 + 7];
           P64[Sp - 16] = P64[R1 + 15];
           P64[Sp - 8] = R1;
           Sp = Sp - 32;
           call GHC.List.dropWhile_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . go_s5lbl_info" {
     go_s5lbl_info:
         const go_s5lbl_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 _c5p7E() //  [R1]
         { []
         }
     {offset
       c5p7E: // global
           if (R1 & 7 == 1) goto c5p8b; else goto c5p8c;
       c5p8b: // global
           R1 = P64[Sp + 16];
           Sp = Sp + 32;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5p8c: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto c5p8m; else goto c5p8l;
       c5p8m: // global
           HpAlloc = 80;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5p8l: // global
           I64[Hp - 72] = ds_s5lbq_info;
           P64[Hp - 56] = R1;
           I64[Hp - 48] = sat_s5lbB_info;
           P64[Hp - 32] = P64[Sp + 24];
           _c5p7J::P64 = Hp - 72;
           P64[Hp - 24] = _c5p7J::P64;
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _c5p7J::P64;
           R3 = Hp - 48;
           R2 = Hp - 16;
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5p7E_info" {
     block_c5p7E_info:
         const _c5p7E;
         const 3;
         const 30;
 },
 Data.OldList.wordsFB_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5p8n: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5p8r; else goto c5p8q;
       c5p8r: // global
           HpAlloc = 24;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.wordsFB_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5p8q: // global
           I64[Hp - 16] = go_s5lbl_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R2 = R4;
           R1 = Hp - 15;
           call go_s5lbl_entry(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.wordsFB_info" {
     Data.OldList.wordsFB_info:
         const Data.OldList.wordsFB_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 section ""data" . Data.OldList.words_closure" {
     Data.OldList.words_closure:
         const Data.OldList.words_info;
 },
 ds_s5lbG_entry() //  [R1]
         { []
         }
     {offset
       c5p8I: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5p8J; else goto c5p8K;
       c5p8J: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5p8K: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5p8F_info;
           R3 = P64[R1 + 16];
           R2 = GHC.Unicode.isSpace_closure+1;
           Sp = Sp - 24;
           call GHC.List.$wbreak_entry(R3, R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds_s5lbG_info" {
     ds_s5lbG_info:
         const ds_s5lbG_entry;
         const 1;
         const 16;
 },
 _c5p8F() //  [R1, R2]
         { []
         }
     {offset
       c5p8F: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5p8N; else goto c5p8M;
       c5p8N: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c5p8M: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5p8F_info" {
     block_c5p8F_info:
         const _c5p8F;
         const 0;
         const 30;
 },
 sat_s5lbR_entry() //  [R1]
         { []
         }
     {offset
       c5p8V: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5p8W; else goto c5p8X;
       c5p8W: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5p8X: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5p8S_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5p91; else goto c5p8T;
       u5p91: // global
           call _c5p8S(R1) args: 0, res: 0, upd: 0;
       c5p8T: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5lbR_info" {
     sat_s5lbR_info:
         const sat_s5lbR_entry;
         const 1;
         const 16;
 },
 _c5p8S() //  [R1]
         { []
         }
     {offset
       c5p8S: // global
           R2 = P64[R1 + 15];
           Sp = Sp + 8;
           call Data.OldList.words_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5p8S_info" {
     block_c5p8S_info:
         const _c5p8S;
         const 0;
         const 30;
 },
 Data.OldList.words_entry() //  [R2]
         { []
         }
     {offset
       c5p96: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5p97; else goto c5p98;
       c5p97: // global
           R2 = R2;
           R1 = Data.OldList.words_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5p98: // global
           I64[Sp - 8] = block_c5p8w_info;
           R3 = R2;
           R2 = GHC.Unicode.isSpace_closure+1;
           Sp = Sp - 8;
           call GHC.List.dropWhile_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.words_info" {
     Data.OldList.words_info:
         const Data.OldList.words_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5p8w() //  [R1]
         { []
         }
     {offset
       c5p8w: // global
           if (R1 & 7 == 1) goto c5p93; else goto c5p94;
       c5p93: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5p94: // global
           Hp = Hp + 96;
           if (Hp > HpLim) (likely: False) goto c5p9f; else goto c5p9e;
       c5p9f: // global
           HpAlloc = 96;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5p9e: // global
           I64[Hp - 88] = ds_s5lbG_info;
           P64[Hp - 72] = R1;
           I64[Hp - 64] = sat_s5lbR_info;
           _c5p8B::P64 = Hp - 88;
           P64[Hp - 48] = _c5p8B::P64;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _c5p8B::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 64;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5p8w_info" {
     block_c5p8w_info:
         const _c5p8w;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.67069454 UTC

[section ""data" . lvl8_r5kSq_closure" {
     lvl8_r5kSq_closure:
         const GHC.Types.C#_con_info;
         const 32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.673630303 UTC

[section ""data" . Data.OldList.unwordsFB_closure" {
     Data.OldList.unwordsFB_closure:
         const Data.OldList.unwordsFB_info;
 },
 sat_s5lbU_entry() //  [R1]
         { []
         }
     {offset
       c5pap: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5paq; else goto c5par;
       c5paq: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5par: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5lbU_info" {
     sat_s5lbU_info:
         const sat_s5lbU_entry;
         const 2;
         const 18;
 },
 Data.OldList.unwordsFB_entry() //  [R2, R3]
         { []
         }
     {offset
       c5pat: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5pax; else goto c5paw;
       c5pax: // global
           HpAlloc = 56;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.unwordsFB_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5paw: // global
           I64[Hp - 48] = sat_s5lbU_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = lvl8_r5kSq_closure+1;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.unwordsFB_info" {
     Data.OldList.unwordsFB_info:
         const Data.OldList.unwordsFB_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.681766926 UTC

[section ""data" . Data.OldList.unwords_go_closure" {
     Data.OldList.unwords_go_closure:
         const Data.OldList.unwords_go_info;
 },
 sat_s5lbZ_entry() //  [R1]
         { []
         }
     {offset
       c5pb0: // global
           R2 = P64[R1 + 16];
           call Data.OldList.unwords_go_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5lbZ_info" {
     sat_s5lbZ_info:
         const sat_s5lbZ_entry;
         const 1;
         const 16;
 },
 sat_s5lc0_entry() //  [R1]
         { []
         }
     {offset
       c5pb3: // global
           _s5lc0::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5pb4; else goto c5pb5;
       c5pb5: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5pb7; else goto c5pb6;
       c5pb7: // global
           HpAlloc = 24;
           goto c5pb4;
       c5pb4: // global
           R1 = _s5lc0::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5pb6: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5lc0::P64;
           _s5lbX::P64 = P64[_s5lc0::P64 + 16];
           _s5lbY::P64 = P64[_s5lc0::P64 + 24];
           I64[Hp - 16] = sat_s5lbZ_info;
           P64[Hp] = _s5lbY::P64;
           R3 = Hp - 16;
           R2 = _s5lbX::P64;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5lc0_info" {
     sat_s5lc0_info:
         const sat_s5lc0_entry;
         const 2;
         const 18;
 },
 Data.OldList.unwords_go_entry() //  [R2]
         { []
         }
     {offset
       c5pbc: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5pbd; else goto c5pbe;
       c5pbd: // global
           R2 = R2;
           R1 = Data.OldList.unwords_go_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5pbe: // global
           I64[Sp - 8] = block_c5paM_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5pbl; else goto c5paN;
       u5pbl: // global
           call _c5paM(R1) args: 0, res: 0, upd: 0;
       c5paN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.unwords_go_info" {
     Data.OldList.unwords_go_info:
         const Data.OldList.unwords_go_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5paM() //  [R1]
         { []
         }
     {offset
       c5paM: // global
           if (R1 & 7 == 1) goto c5pb9; else goto c5pba;
       c5pb9: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pba: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5pbk; else goto c5pbj;
       c5pbk: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5pbj: // global
           _s5lbX::P64 = P64[R1 + 6];
           _s5lbY::P64 = P64[R1 + 14];
           I64[Hp - 48] = sat_s5lc0_info;
           P64[Hp - 32] = _s5lbX::P64;
           P64[Hp - 24] = _s5lbY::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = lvl8_r5kSq_closure+1;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5paM_info" {
     block_c5paM_info:
         const _c5paM;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.694746226 UTC

[section ""data" . Data.OldList.tailUnwords_closure" {
     Data.OldList.tailUnwords_closure:
         const Data.OldList.tailUnwords_info;
 },
 Data.OldList.tailUnwords_entry() //  [R2]
         { []
         }
     {offset
       c5pbS: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5pbT; else goto c5pbU;
       c5pbT: // global
           R2 = R2;
           R1 = Data.OldList.tailUnwords_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5pbU: // global
           I64[Sp - 8] = block_c5pbL_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5pc1; else goto c5pbM;
       u5pc1: // global
           call _c5pbL(R1) args: 0, res: 0, upd: 0;
       c5pbM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.tailUnwords_info" {
     Data.OldList.tailUnwords_info:
         const Data.OldList.tailUnwords_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5pbL() //  [R1]
         { []
         }
     {offset
       c5pbL: // global
           if (R1 & 7 == 1) goto c5pbP; else goto c5pbQ;
       c5pbP: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pbQ: // global
           R1 = P64[R1 + 14] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pbL_info" {
     block_c5pbL_info:
         const _c5pbL;
         const 0;
         const 30;
 },
 section ""data" . Data.OldList.unwords_closure" {
     Data.OldList.unwords_closure:
         const Data.OldList.unwords_info;
 },
 sat_s5lc9_entry() //  [R1]
         { []
         }
     {offset
       c5pcg: // global
           R2 = P64[R1 + 16];
           call Data.OldList.unwords_go_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5lc9_info" {
     sat_s5lc9_info:
         const sat_s5lc9_entry;
         const 1;
         const 16;
 },
 Data.OldList.unwords_entry() //  [R2]
         { []
         }
     {offset
       c5pcn: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5pco; else goto c5pcp;
       c5pco: // global
           R2 = R2;
           R1 = Data.OldList.unwords_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5pcp: // global
           I64[Sp - 8] = block_c5pc6_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5pcv; else goto c5pc7;
       u5pcv: // global
           call _c5pc6(R1) args: 0, res: 0, upd: 0;
       c5pc7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.unwords_info" {
     Data.OldList.unwords_info:
         const Data.OldList.unwords_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5pc6() //  [R1]
         { []
         }
     {offset
       c5pc6: // global
           if (R1 & 7 == 1) goto c5pck; else goto c5pcl;
       c5pck: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pcl: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5pcu; else goto c5pct;
       c5pcu: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5pct: // global
           _s5lc7::P64 = P64[R1 + 6];
           _s5lc8::P64 = P64[R1 + 14];
           I64[Hp - 16] = sat_s5lc9_info;
           P64[Hp] = _s5lc8::P64;
           R3 = Hp - 16;
           R2 = _s5lc7::P64;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pc6_info" {
     block_c5pc6_info:
         const _c5pc6;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.710382769 UTC

[section ""data" . lvl9_r5kSr_closure" {
     lvl9_r5kSr_closure:
         const lvl9_r5kSr_info;
         const 0;
         const 0;
         const 0;
 },
 lvl9_r5kSr_entry() //  [R1]
         { []
         }
     {offset
       c5pd5: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5pd6; else goto c5pd7;
       c5pd6: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5pd7: // global
           (_c5pd2::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5pd2::I64 == 0) goto c5pd4; else goto c5pd3;
       c5pd4: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5pd3: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5pd2::I64;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.[]_closure+1;
           Sp = Sp - 16;
           call GHC.List.reverse1_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl9_r5kSr_info" {
     lvl9_r5kSr_info:
         const lvl9_r5kSr_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.716125782 UTC

[section ""data" . lvl10_r5kSs_closure" {
     lvl10_r5kSs_closure:
         const lvl10_r5kSs_info;
         const 0;
         const 0;
         const 0;
 },
 lvl10_r5kSs_entry() //  [R1]
         { []
         }
     {offset
       c5pdl: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5pdm; else goto c5pdn;
       c5pdm: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5pdn: // global
           (_c5pdi::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5pdi::I64 == 0) goto c5pdk; else goto c5pdj;
       c5pdk: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5pdj: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5pdi::I64;
           R3 = lvl9_r5kSr_closure;
           R2 = GHC.Types.[]_closure+1;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl10_r5kSs_info" {
     lvl10_r5kSs_info:
         const lvl10_r5kSs_entry;
         const 0;
         const 4294967317;
         const S5lDv_srt+144;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.731540962 UTC

[section ""data" . poly_$wgo_r5kSt_closure" {
     poly_$wgo_r5kSt_closure:
         const poly_$wgo_r5kSt_info;
         const 0;
 },
 poly_$wgo_r5kSt_slow() //  [R1]
         { []
         }
     {offset
       c5pdw: // global
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call poly_$wgo_r5kSt_entry(R5,
                                      R4,
                                      R3,
                                      R2,
                                      R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s5lco_entry() //  [R1]
         { []
         }
     {offset
       c5pe0: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5pe1; else goto c5pe2;
       c5pe1: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5pe2: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R5 = P64[R1 + 32];
           R4 = P64[R1 + 16];
           R3 = I64[R1 + 40];
           R2 = P64[R1 + 24];
           Sp = Sp - 16;
           call poly_$wgo_r5kSt_entry(R5,
                                      R4,
                                      R3,
                                      R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5lco_info" {
     sat_s5lco_info:
         const sat_s5lco_entry;
         const 4294967299;
         const 4294967311;
         const S5lDv_srt+152;
 },
 sat_s5lcm_entry() //  [R1]
         { []
         }
     {offset
       c5peb: // global
           R3 = GHC.Types.[]_closure+1;
           R2 = P64[R1 + 16];
           call GHC.List.reverse1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5lcm_info" {
     sat_s5lcm_info:
         const sat_s5lcm_entry;
         const 1;
         const 16;
 },
 sat_s5lcn_entry() //  [R1]
         { []
         }
     {offset
       c5pee: // global
           _s5lcn::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5pef; else goto c5peg;
       c5peg: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5pei; else goto c5peh;
       c5pei: // global
           HpAlloc = 24;
           goto c5pef;
       c5pef: // global
           R1 = _s5lcn::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5peh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5lcn::P64;
           _s5lcc::P64 = P64[_s5lcn::P64 + 16];
           _s5lcl::P64 = P64[_s5lcn::P64 + 24];
           I64[Hp - 16] = sat_s5lcm_info;
           P64[Hp] = _s5lcl::P64;
           R3 = Hp - 16;
           R2 = _s5lcc::P64;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5lcn_info" {
     sat_s5lcn_info:
         const sat_s5lcn_entry;
         const 2;
         const 18;
 },
 sat_s5lcr_entry() //  [R1]
         { []
         }
     {offset
       c5pew: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5peA; else goto c5pez;
       c5peA: // global
           HpAlloc = 24;
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5pez: // global
           _s5lcd::P64 = P64[R1 + 16];
           _s5lcf::P64 = P64[R1 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5lcf::P64;
           P64[Hp] = _s5lcd::P64;
           R3 = GHC.Types.[]_closure+1;
           R2 = Hp - 14;
           call GHC.List.reverse1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5lcr_info" {
     sat_s5lcr_info:
         const sat_s5lcr_entry;
         const 2;
         const 18;
 },
 b'_s5lcp_entry() //  [R1]
         { []
         }
     {offset
       c5peB: // global
           _s5lcp::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5peC; else goto c5peD;
       c5peD: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5peF; else goto c5peE;
       c5peF: // global
           HpAlloc = 32;
           goto c5peC;
       c5peC: // global
           R1 = _s5lcp::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5peE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5lcp::P64;
           _s5lcc::P64 = P64[_s5lcp::P64 + 16];
           _s5lcd::P64 = P64[_s5lcp::P64 + 24];
           _s5lcf::P64 = P64[_s5lcp::P64 + 32];
           I64[Hp - 24] = sat_s5lcr_info;
           P64[Hp - 8] = _s5lcd::P64;
           P64[Hp] = _s5lcf::P64;
           R3 = Hp - 24;
           R2 = _s5lcc::P64;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . b'_s5lcp_info" {
     b'_s5lcp_info:
         const b'_s5lcp_entry;
         const 3;
         const 15;
 },
 sat_s5lct_entry() //  [R1]
         { []
         }
     {offset
       c5peK: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5peL; else goto c5peM;
       c5peL: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5peM: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R5 = GHC.Types.[]_closure+1;
           R4 = P64[R1 + 24];
           R3 = I64[R1 + 32];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call poly_$wgo_r5kSt_entry(R5,
                                      R4,
                                      R3,
                                      R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5lct_info" {
     sat_s5lct_info:
         const sat_s5lct_entry;
         const 4294967298;
         const 4294967311;
         const S5lDv_srt+152;
 },
 sat_s5lcs_entry() //  [R1]
         { []
         }
     {offset
       c5peR: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5peS; else goto c5peT;
       c5peS: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5peT: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = lvl9_r5kSr_closure;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5lcs_info" {
     sat_s5lcs_info:
         const sat_s5lcs_entry;
         const 1;
         const 4294967312;
         const S5lDv_srt+144;
 },
 sat_s5lcx_entry() //  [R1]
         { []
         }
     {offset
       c5pf0: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5pf1; else goto c5pf2;
       c5pf1: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5pf2: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R5 = P64[R1 + 32];
           R4 = P64[R1 + 16];
           R3 = I64[R1 + 40];
           R2 = P64[R1 + 24];
           Sp = Sp - 16;
           call poly_$wgo_r5kSt_entry(R5,
                                      R4,
                                      R3,
                                      R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5lcx_info" {
     sat_s5lcx_info:
         const sat_s5lcx_entry;
         const 4294967299;
         const 4294967311;
         const S5lDv_srt+152;
 },
 sat_s5lcv_entry() //  [R1]
         { []
         }
     {offset
       c5pfb: // global
           R3 = GHC.Types.[]_closure+1;
           R2 = P64[R1 + 16];
           call GHC.List.reverse1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5lcv_info" {
     sat_s5lcv_info:
         const sat_s5lcv_entry;
         const 1;
         const 16;
 },
 sat_s5lcw_entry() //  [R1]
         { []
         }
     {offset
       c5pfe: // global
           _s5lcw::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5pff; else goto c5pfg;
       c5pfg: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5pfi; else goto c5pfh;
       c5pfi: // global
           HpAlloc = 24;
           goto c5pff;
       c5pff: // global
           R1 = _s5lcw::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5pfh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5lcw::P64;
           _s5lcc::P64 = P64[_s5lcw::P64 + 16];
           _s5lcu::P64 = P64[_s5lcw::P64 + 24];
           I64[Hp - 16] = sat_s5lcv_info;
           P64[Hp] = _s5lcu::P64;
           R3 = Hp - 16;
           R2 = _s5lcc::P64;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5lcw_info" {
     sat_s5lcw_info:
         const sat_s5lcw_entry;
         const 2;
         const 18;
 },
 poly_$wgo_r5kSt_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5pfn: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c5pfo; else goto c5pfp;
       c5pfo: // global
           R1 = poly_$wgo_r5kSt_closure;
           P64[Sp - 32] = R2;
           I64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           call (stg_gc_fun)(R1) args: 40, res: 0, upd: 8;
       c5pfp: // global
           I64[Sp - 32] = block_c5pdA_info;
           R1 = R2;
           I64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5pfS; else goto c5pdB;
       u5pfS: // global
           call _c5pdA(R1) args: 0, res: 0, upd: 0;
       c5pdB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . poly_$wgo_r5kSt_info" {
     poly_$wgo_r5kSt_info:
         const poly_$wgo_r5kSt_entry;
         const 0;
         const 12884901902;
         const 17179869184;
         const S5lDv_srt+144;
         const 132;
         const poly_$wgo_r5kSt_slow;
 },
 _c5pdA() //  [R1]
         { []
         }
     {offset
       c5pdA: // global
           if (R1 & 7 == 1) goto c5pfk; else goto c5pfl;
       c5pfk: // global
           R1 = []_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pfl: // global
           Hp = Hp + 128;
           if (Hp > HpLim) (likely: False) goto c5pfu; else goto c5pft;
       c5pfu: // global
           HpAlloc = 128;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5pft: // global
           _s5lcf::P64 = P64[R1 + 6];
           _s5lcg::P64 = P64[R1 + 14];
           _s5lch::I64 = I64[Sp + 8] + 1;
           if (_s5lch::I64 >= 255) goto c5pfH; else goto c5pfJ;
       c5pfH: // global
           Hp = Hp - 128;
           _s5lck::I64 = _s5lch::I64 & (_s5lch::I64 + 1);
           if (_s5lck::I64 != 0) goto u5pfL; else goto u5pfK;
       u5pfL: // global
           I64[Sp - 16] = _s5lch::I64;
           I64[Sp - 8] = _s5lck::I64;
           P64[Sp] = _s5lcg::P64;
           P64[Sp + 8] = _s5lcf::P64;
           Sp = Sp - 16;
           call _c5pdT() args: 0, res: 0, upd: 0;
       u5pfK: // global
           I64[Sp - 16] = _s5lch::I64;
           I64[Sp - 8] = _s5lck::I64;
           P64[Sp] = _s5lcg::P64;
           P64[Sp + 8] = _s5lcf::P64;
           Sp = Sp - 16;
           call _c5pel() args: 0, res: 0, upd: 0;
       c5pfJ: // global
           I64[Hp - 120] = :_con_info;
           P64[Hp - 112] = _s5lcf::P64;
           P64[Hp - 104] = P64[Sp + 24];
           I64[Hp - 96] = sat_s5lcx_info;
           _s5lcc::P64 = P64[Sp + 16];
           P64[Hp - 80] = _s5lcc::P64;
           P64[Hp - 72] = _s5lcg::P64;
           _c5peV::P64 = Hp - 118;
           P64[Hp - 64] = _c5peV::P64;
           I64[Hp - 56] = _s5lch::I64;
           I64[Hp - 48] = sat_s5lcw_info;
           P64[Hp - 32] = _s5lcc::P64;
           P64[Hp - 24] = _c5peV::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 96;
           R1 = Hp - 14;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pdA_info" {
     block_c5pdA_info:
         const _c5pdA;
         const 67;
         const 12884901918;
         const S5lDv_srt+144;
 },
 _c5pdT() //  []
         { []
         }
     {offset
       c5pdT: // global
           Hp = Hp + 128;
           if (Hp > HpLim) (likely: False) goto c5pfA; else goto c5pfz;
       c5pfA: // global
           HpAlloc = 128;
           I64[Sp - 8] = block_c5pdS_info;
           R1 = I64[Sp + 8];
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c5pfz: // global
           I64[Hp - 120] = :_con_info;
           P64[Hp - 112] = P64[Sp + 24];
           P64[Hp - 104] = P64[Sp + 40];
           I64[Hp - 96] = sat_s5lco_info;
           _s5lcc::P64 = P64[Sp + 32];
           P64[Hp - 80] = _s5lcc::P64;
           P64[Hp - 72] = P64[Sp + 16];
           _c5pdV::P64 = Hp - 118;
           P64[Hp - 64] = _c5pdV::P64;
           I64[Hp - 56] = I64[Sp];
           I64[Hp - 48] = sat_s5lcn_info;
           P64[Hp - 32] = _s5lcc::P64;
           P64[Hp - 24] = _c5pdV::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 96;
           R1 = Hp - 14;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c5pdS() //  [R1]
         { []
         }
     {offset
       c5pdS: // global
           I64[Sp + 16] = R1;
           Sp = Sp + 8;
           call _c5pdT() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5pdS_info" {
     block_c5pdS_info:
         const _c5pdS;
         const 198;
         const 4294967326;
         const S5lDv_srt+152;
 },
 _c5pel() //  []
         { []
         }
     {offset
       c5pel: // global
           Hp = Hp + 128;
           if (Hp > HpLim) (likely: False) goto c5pfF; else goto c5pfE;
       c5pfF: // global
           HpAlloc = 128;
           I64[Sp - 8] = block_c5pek_info;
           R1 = I64[Sp + 8];
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c5pfE: // global
           I64[Hp - 120] = b'_s5lcp_info;
           P64[Hp - 104] = P64[Sp + 32];
           P64[Hp - 96] = P64[Sp + 40];
           P64[Hp - 88] = P64[Sp + 24];
           I64[Hp - 80] = sat_s5lct_info;
           P64[Hp - 64] = P64[Sp + 16];
           _c5pen::P64 = Hp - 120;
           P64[Hp - 56] = _c5pen::P64;
           I64[Hp - 48] = I64[Sp];
           I64[Hp - 40] = sat_s5lcs_info;
           P64[Hp - 24] = _c5pen::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 80;
           R1 = Hp - 14;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c5pek() //  [R1]
         { []
         }
     {offset
       c5pek: // global
           I64[Sp + 16] = R1;
           Sp = Sp + 8;
           call _c5pel() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5pek_info" {
     block_c5pek_info:
         const _c5pek;
         const 198;
         const 12884901918;
         const S5lDv_srt+144;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.770343885 UTC

[section ""data" . Data.OldList.$winits_closure" {
     Data.OldList.$winits_closure:
         const Data.OldList.$winits_info;
         const 0;
 },
 sat_s5lcz_entry() //  [R1]
         { []
         }
     {offset
       c5phm: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5phn; else goto c5pho;
       c5phn: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5pho: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R5 = GHC.Types.[]_closure+1;
           R4 = GHC.Types.[]_closure+1;
           R3 = 0;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call poly_$wgo_r5kSt_entry(R5,
                                      R4,
                                      R3,
                                      R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5lcz_info" {
     sat_s5lcz_info:
         const sat_s5lcz_entry;
         const 1;
         const 4294967312;
         const S5lDv_srt+152;
 },
 Data.OldList.$winits_entry() //  [R2]
         { []
         }
     {offset
       c5php: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5pht; else goto c5phs;
       c5pht: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Data.OldList.$winits_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5phs: // global
           I64[Hp - 16] = sat_s5lcz_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           R1 = lvl10_r5kSs_closure;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.$winits_info" {
     Data.OldList.$winits_info:
         const Data.OldList.$winits_entry;
         const 0;
         const 30064771086;
         const 4294967301;
         const S5lDv_srt+152;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.778224279 UTC

[section ""data" . Data.OldList.inits_closure" {
     Data.OldList.inits_closure:
         const Data.OldList.inits_info;
         const 0;
 },
 Data.OldList.inits_entry() //  [R2]
         { []
         }
     {offset
       c5phK: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5phL; else goto c5phM;
       c5phL: // global
           R2 = R2;
           R1 = Data.OldList.inits_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5phM: // global
           I64[Sp - 8] = block_c5phH_info;
           R2 = R2;
           Sp = Sp - 8;
           call Data.OldList.$winits_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.inits_info" {
     Data.OldList.inits_info:
         const Data.OldList.inits_entry;
         const 0;
         const 21474836494;
         const 4294967301;
         const S5lDv_srt+160;
 },
 _c5phH() //  [R1, R2]
         { []
         }
     {offset
       c5phH: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5phP; else goto c5phO;
       c5phP: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c5phO: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5phH_info" {
     block_c5phH_info:
         const _c5phH;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.785503633 UTC

[section ""cstring" . Data.OldList.$tc'SnocBuilder3_bytes" {
     Data.OldList.$tc'SnocBuilder3_bytes:
         I8[] [39,83,110,111,99,66,117,105,108,100,101,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.787859765 UTC

[section ""data" . Data.OldList.$tc'SnocBuilder2_closure" {
     Data.OldList.$tc'SnocBuilder2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.OldList.$tc'SnocBuilder3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.790183708 UTC

[section ""cstring" . Data.OldList.$tcSnocBuilder2_bytes" {
     Data.OldList.$tcSnocBuilder2_bytes:
         I8[] [83,110,111,99,66,117,105,108,100,101,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.792559008 UTC

[section ""data" . Data.OldList.$tcSnocBuilder1_closure" {
     Data.OldList.$tcSnocBuilder1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.OldList.$tcSnocBuilder2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.794853778 UTC

[section ""cstring" . Data.OldList.$trModule2_bytes" {
     Data.OldList.$trModule2_bytes:
         I8[] [68,97,116,97,46,79,108,100,76,105,115,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.797236824 UTC

[section ""data" . Data.OldList.$trModule1_closure" {
     Data.OldList.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.OldList.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.800045202 UTC

[section ""cstring" . Data.OldList.$trModule4_bytes" {
     Data.OldList.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.802675678 UTC

[section ""data" . Data.OldList.$trModule3_closure" {
     Data.OldList.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.OldList.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.806275687 UTC

[section ""data" . Data.OldList.$trModule_closure" {
     Data.OldList.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.OldList.$trModule3_closure+1;
         const Data.OldList.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.809029654 UTC

[section ""data" . Data.OldList.$tcSnocBuilder_closure" {
     Data.OldList.$tcSnocBuilder_closure:
         const GHC.Types.TyCon_con_info;
         const Data.OldList.$trModule_closure+1;
         const Data.OldList.$tcSnocBuilder1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 17650604350574790456;
         const 3021529305462083578;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.811937978 UTC

[section ""data" . $krep_r5kSu_closure" {
     $krep_r5kSu_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcWord_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.81471019 UTC

[section ""data" . $krep1_r5kSv_closure" {
     $krep1_r5kSv_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.817183363 UTC

[section ""data" . $krep2_r5kSw_closure" {
     $krep2_r5kSw_closure:
         const :_con_info;
         const $krep1_r5kSv_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.819869634 UTC

[section ""data" . $krep3_r5kSx_closure" {
     $krep3_r5kSx_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tc[]_closure;
         const $krep2_r5kSw_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.822563567 UTC

[section ""data" . $krep4_r5kSy_closure" {
     $krep4_r5kSy_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.OldList.$tcSnocBuilder_closure+1;
         const $krep2_r5kSw_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.825339105 UTC

[section ""data" . $krep5_r5kSz_closure" {
     $krep5_r5kSz_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5kSx_closure+1;
         const $krep4_r5kSy_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.827997973 UTC

[section ""data" . $krep6_r5kSA_closure" {
     $krep6_r5kSA_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5kSx_closure+1;
         const $krep5_r5kSz_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.830836548 UTC

[section ""data" . Data.OldList.$tc'SnocBuilder1_closure" {
     Data.OldList.$tc'SnocBuilder1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r5kSu_closure+1;
         const $krep6_r5kSA_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.833961475 UTC

[section ""data" . Data.OldList.$tc'SnocBuilder_closure" {
     Data.OldList.$tc'SnocBuilder_closure:
         const GHC.Types.TyCon_con_info;
         const Data.OldList.$trModule_closure+1;
         const Data.OldList.$tc'SnocBuilder2_closure+1;
         const Data.OldList.$tc'SnocBuilder1_closure+4;
         const 6719263830224029004;
         const 9134053658265160069;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.838172193 UTC

[section ""data" . lvl11_r5kSB_closure" {
     lvl11_r5kSB_closure:
         const lvl11_r5kSB_info;
 },
 lvl11_r5kSB_entry() //  [R2]
         { []
         }
     {offset
       c5pip: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5piq; else goto c5pir;
       c5piq: // global
           R2 = R2;
           R1 = lvl11_r5kSB_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5pir: // global
           I64[Sp - 8] = block_c5pim_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5piz; else goto c5pin;
       u5piz: // global
           call _c5pim(R1) args: 0, res: 0, upd: 0;
       c5pin: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . lvl11_r5kSB_info" {
     lvl11_r5kSB_info:
         const lvl11_r5kSB_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5pim() //  [R1]
         { []
         }
     {offset
       c5pim: // global
           if (I64[R1 + 7] == 10) goto c5piy; else goto c5pix;
       c5piy: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pix: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pim_info" {
     block_c5pim_info:
         const _c5pim;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.851759455 UTC

[section ""data" . Data.OldList.lines_closure" {
     Data.OldList.lines_closure:
         const Data.OldList.lines_info;
 },
 sat_s5lcT_entry() //  [R1]
         { []
         }
     {offset
       c5pjc: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5pjd; else goto c5pje;
       c5pjd: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5pje: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5pj5_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5pjl; else goto c5pj6;
       u5pjl: // global
           call _c5pj5(R1) args: 0, res: 0, upd: 0;
       c5pj6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5lcT_info" {
     sat_s5lcT_info:
         const sat_s5lcT_entry;
         const 1;
         const 16;
 },
 _c5pj5() //  [R1]
         { []
         }
     {offset
       c5pj5: // global
           if (R1 & 7 == 1) goto c5pj9; else goto c5pja;
       c5pj9: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c5pja: // global
           R2 = P64[R1 + 14];
           Sp = Sp + 8;
           call Data.OldList.lines_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5pj5_info" {
     block_c5pj5_info:
         const _c5pj5;
         const 0;
         const 30;
 },
 ds1_s5lcM_entry() //  [R1]
         { []
         }
     {offset
       c5pjn: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5pjo; else goto c5pjp;
       c5pjo: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5pjp: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5piZ_info;
           R3 = P64[R1 + 16];
           R2 = lvl11_r5kSB_closure+1;
           Sp = Sp - 24;
           call GHC.List.$wbreak_entry(R3, R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds1_s5lcM_info" {
     ds1_s5lcM_info:
         const ds1_s5lcM_entry;
         const 1;
         const 16;
 },
 _c5piZ() //  [R1, R2]
         { []
         }
     {offset
       c5piZ: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5pjs; else goto c5pjr;
       c5pjs: // global
           HpAlloc = 48;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c5pjr: // global
           I64[Hp - 40] = sat_s5lcT_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = Hp - 40;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5piZ_info" {
     block_c5piZ_info:
         const _c5piZ;
         const 0;
         const 30;
 },
 Data.OldList.lines_entry() //  [R2]
         { []
         }
     {offset
       c5pjx: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5pjy; else goto c5pjz;
       c5pjy: // global
           R2 = R2;
           R1 = Data.OldList.lines_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5pjz: // global
           I64[Sp - 8] = block_c5piP_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5pjI; else goto c5piQ;
       u5pjI: // global
           call _c5piP(R1) args: 0, res: 0, upd: 0;
       c5piQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.lines_info" {
     Data.OldList.lines_info:
         const Data.OldList.lines_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5piP() //  [R1]
         { []
         }
     {offset
       c5piP: // global
           if (R1 & 7 == 1) goto c5pju; else goto c5pjv;
       c5pju: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pjv: // global
           Hp = Hp + 96;
           if (Hp > HpLim) (likely: False) goto c5pjH; else goto c5pjG;
       c5pjH: // global
           HpAlloc = 96;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5pjG: // global
           I64[Hp - 88] = ds1_s5lcM_info;
           P64[Hp - 72] = R1;
           I64[Hp - 64] = stg_sel_1_upd_info;
           _c5piV::P64 = Hp - 88;
           P64[Hp - 48] = _c5piV::P64;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _c5piV::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 64;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5piP_info" {
     block_c5piP_info:
         const _c5piP;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.876272465 UTC

[section ""data" . Data.OldList.SnocBuilder_closure" {
     Data.OldList.SnocBuilder_closure:
         const Data.OldList.SnocBuilder_info;
 },
 Data.OldList.SnocBuilder_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5pkn: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5pkr; else goto c5pkq;
       c5pkr: // global
           HpAlloc = 32;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.SnocBuilder_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5pkq: // global
           I64[Hp - 24] = Data.OldList.SnocBuilder_con_info;
           P64[Hp - 16] = R3;
           P64[Hp - 8] = R4;
           I64[Hp] = R2;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.SnocBuilder_info" {
     Data.OldList.SnocBuilder_info:
         const Data.OldList.SnocBuilder_entry;
         const 0;
         const 14;
         const 12884901907;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.883014787 UTC

[section ""cstring" . i5nvJ_str" {
     i5nvJ_str:
         I8[] [98,97,115,101,58,68,97,116,97,46,79,108,100,76,105,115,116,46,83,110,111,99,66,117,105,108,100,101,114]
 },
 Data.OldList.SnocBuilder_con_entry() //  [R1]
         { []
         }
     {offset
       c5pkx: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.SnocBuilder_con_info" {
     Data.OldList.SnocBuilder_con_info:
         const Data.OldList.SnocBuilder_con_entry;
         const 4294967298;
         const 1;
         const i5nvJ_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:20.888642254 UTC

[section ""relreadonly" . S5lDv_srt" {
     S5lDv_srt:
         const GHC.Err.errorWithoutStackTrace_closure;
         const Data.OldList.maximumBy_closure;
         const Data.OldList.maximumBy1_closure;
         const Data.OldList.minimumBy_closure;
         const Data.OldList.minimumBy1_closure;
         const sat_s5l01_closure;
         const Data.OldList.genericLength2_closure;
         const Data.OldList.genericLength1_closure;
         const Data.OldList.strictGenericLength_closure;
         const Data.OldList.genericLength_closure;
         const Data.OldList.genericTake_closure;
         const Data.OldList.genericReplicate_closure;
         const Data.OldList.genericDrop_closure;
         const Data.OldList.$wgenericSplitAt_closure;
         const Data.OldList.genericSplitAt_closure;
         const Data.OldList.genericIndex_closure;
         const lvl3_r5kSk_closure;
         const lvl5_r5kSm_closure;
         const lvl9_r5kSr_closure;
         const poly_$wgo_r5kSt_closure;
         const Data.OldList.$winits_closure;
         const lvl10_r5kSs_closure;
         const Data.OldList.inits_closure;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.565743163 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:00:25.569399467 UTC

[section ""data" . Data.OldList.$WSnocBuilder_closure" {
     Data.OldList.$WSnocBuilder_closure:
         const Data.OldList.$WSnocBuilder_info;
 },
 Data.OldList.$WSnocBuilder_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5pFa: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5pFe; else goto c5pFf;
       c5pFe: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.$WSnocBuilder_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5pFf: // global
           I64[Sp - 24] = block_c5pF7_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5pFj; else goto c5pF8;
       u5pFj: // global
           call _c5pF7(R1) args: 0, res: 0, upd: 0;
       c5pF8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.$WSnocBuilder_info" {
     Data.OldList.$WSnocBuilder_info:
         const Data.OldList.$WSnocBuilder_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5pF7() //  [R1]
         { []
         }
     {offset
       c5pF7: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5pFi; else goto c5pFh;
       c5pFi: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5pFh: // global
           _s5pkI::I64 = I64[R1 + 7];
           I64[Hp - 24] = Data.OldList.SnocBuilder_con_info;
           P64[Hp - 16] = P64[Sp + 8];
           P64[Hp - 8] = P64[Sp + 16];
           I64[Hp] = _s5pkI::I64;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pF7_info" {
     block_c5pF7_info:
         const _c5pF7;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.581870512 UTC

[section ""data" . Data.OldList.dropWhileEnd_closure" {
     Data.OldList.dropWhileEnd_closure:
         const Data.OldList.dropWhileEnd_info;
 },
 go_s5pkL_entry() //  [R1, R2]
         { []
         }
     {offset
       c5pFO: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5pFP; else goto c5pFQ;
       c5pFP: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5pFQ: // global
           I64[Sp - 24] = block_c5pFH_info;
           _s5pkL::P64 = R1;
           _s5pkJ::P64 = P64[R1 + 7];
           R1 = R2;
           P64[Sp - 16] = _s5pkJ::P64;
           P64[Sp - 8] = _s5pkL::P64;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5pGv; else goto c5pFI;
       u5pGv: // global
           call _c5pFH(R1) args: 0, res: 0, upd: 0;
       c5pFI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . go_s5pkL_info" {
     go_s5pkL_info:
         const go_s5pkL_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c5pFH() //  [R1]
         { []
         }
     {offset
       c5pFH: // global
           if (R1 & 7 == 1) goto u5pGs; else goto c5pFM;
       u5pGs: // global
           Sp = Sp + 24;
           call _c5pGi() args: 0, res: 0, upd: 0;
       c5pFM: // global
           I64[Sp - 8] = block_c5pFW_info;
           _s5pkO::P64 = P64[R1 + 6];
           R2 = _s5pkO::P64;
           _s5pkP::P64 = P64[R1 + 14];
           R1 = P64[Sp + 8];
           P64[Sp] = _s5pkP::P64;
           P64[Sp + 8] = _s5pkO::P64;
           Sp = Sp - 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pFH_info" {
     block_c5pFH_info:
         const _c5pFH;
         const 2;
         const 30;
 },
 _c5pFW() //  [R1]
         { []
         }
     {offset
       c5pFW: // global
           _s5pkL::P64 = P64[Sp + 24];
           _s5pkP::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5pG4; else goto c5pGc;
       c5pG4: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5pG7; else goto c5pG6;
       c5pG7: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5pG6: // global
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = _s5pkL::P64;
           P64[Hp - 24] = _s5pkP::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pGc: // global
           I64[Sp + 8] = block_c5pGa_info;
           R2 = _s5pkP::P64;
           R1 = _s5pkL::P64;
           Sp = Sp + 8;
           call go_s5pkL_entry(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pFW_info" {
     block_c5pFW_info:
         const _c5pFW;
         const 3;
         const 30;
 },
 _c5pGa() //  [R1]
         { []
         }
     {offset
       c5pGa: // global
           if (R1 & 7 == 1) goto u5pGt; else goto c5pGm;
       u5pGt: // global
           Sp = Sp + 24;
           call _c5pGi() args: 0, res: 0, upd: 0;
       c5pGm: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5pGp; else goto c5pGo;
       c5pGp: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5pGo: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = R1;
           R1 = Hp - 14;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pGa_info" {
     block_c5pGa_info:
         const _c5pGa;
         const 130;
         const 30;
 },
 _c5pGi() //  []
         { []
         }
     {offset
       c5pGi: // global
           R1 = []_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 Data.OldList.dropWhileEnd_entry() //  [R2, R3]
         { []
         }
     {offset
       c5pGx: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5pGB; else goto c5pGA;
       c5pGB: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.dropWhileEnd_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5pGA: // global
           I64[Hp - 8] = go_s5pkL_info;
           P64[Hp] = R2;
           R2 = R3;
           R1 = Hp - 7;
           call go_s5pkL_entry(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.dropWhileEnd_info" {
     Data.OldList.dropWhileEnd_info:
         const Data.OldList.dropWhileEnd_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.604560414 UTC

[section ""data" . Data.OldList.stripPrefix_closure" {
     Data.OldList.stripPrefix_closure:
         const Data.OldList.stripPrefix_info;
 },
 Data.OldList.stripPrefix_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5pHr: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c5pHs; else goto u5pI2;
       c5pHs: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.stripPrefix_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u5pI2: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c5pHh() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.stripPrefix_info" {
     Data.OldList.stripPrefix_info:
         const Data.OldList.stripPrefix_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5pHh() //  []
         { []
         }
     {offset
       c5pHh: // global
           I64[Sp - 8] = block_c5pHk_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5pI6; else goto c5pHl;
       u5pI6: // global
           call _c5pHk(R1) args: 0, res: 0, upd: 0;
       c5pHl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5pHk() //  [R1]
         { []
         }
     {offset
       c5pHk: // global
           _s5pkX::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5pHo; else goto c5pHp;
       c5pHo: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5pHz; else goto c5pHy;
       c5pHz: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5pHy: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = _s5pkX::P64;
           R1 = Hp - 6;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pHp: // global
           I64[Sp] = block_c5pHC_info;
           _s5pkZ::P64 = P64[R1 + 6];
           _s5pl0::P64 = P64[R1 + 14];
           R1 = _s5pkX::P64;
           P64[Sp + 16] = _s5pl0::P64;
           P64[Sp + 24] = _s5pkZ::P64;
           if (R1 & 7 != 0) goto u5pI7; else goto c5pHE;
       u5pI7: // global
           call _c5pHC(R1) args: 0, res: 0, upd: 0;
       c5pHE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pHk_info" {
     block_c5pHk_info:
         const _c5pHk;
         const 131;
         const 30;
 },
 _c5pHC() //  [R1]
         { []
         }
     {offset
       c5pHC: // global
           if (R1 & 7 == 1) goto u5pI3; else goto c5pHP;
       u5pI3: // global
           Sp = Sp + 32;
           call _c5pHV() args: 0, res: 0, upd: 0;
       c5pHP: // global
           I64[Sp] = block_c5pHN_info;
           R2 = P64[Sp + 8];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = P64[Sp + 24];
           P64[Sp - 8] = P64[R1 + 6];
           P64[Sp + 24] = P64[R1 + 14];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pHC_info" {
     block_c5pHC_info:
         const _c5pHC;
         const 3;
         const 30;
 },
 _c5pHN() //  [R1]
         { []
         }
     {offset
       c5pHN: // global
           if (R1 & 7 == 1) goto u5pI4; else goto c5pHZ;
       u5pI4: // global
           Sp = Sp + 32;
           call _c5pHV() args: 0, res: 0, upd: 0;
       c5pHZ: // global
           P64[Sp + 8] = P64[Sp + 8];
           P64[Sp + 16] = P64[Sp + 16];
           P64[Sp + 24] = P64[Sp + 24];
           Sp = Sp + 8;
           call _c5pHh() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5pHN_info" {
     block_c5pHN_info:
         const _c5pHN;
         const 3;
         const 30;
 },
 _c5pHV() //  []
         { []
         }
     {offset
       c5pHV: // global
           R1 = GHC.Base.Nothing_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.622662867 UTC

[section ""data" . Data.OldList.find_closure" {
     Data.OldList.find_closure:
         const Data.OldList.find_info;
 },
 Data.OldList.find_entry() //  [R2, R3]
         { []
         }
     {offset
       c5pIW: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5pIX; else goto c5pIY;
       c5pIX: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.find_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5pIY: // global
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call _c5pJ0() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.find_info" {
     Data.OldList.find_info:
         const Data.OldList.find_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5pJ0() //  []
         { []
         }
     {offset
       c5pJ0: // global
           I64[Sp - 8] = block_c5pJ2_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5pJy; else goto c5pJ4;
       u5pJy: // global
           call _c5pJ2(R1) args: 0, res: 0, upd: 0;
       c5pJ4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5pJ2() //  [R1]
         { []
         }
     {offset
       c5pJ2: // global
           if (R1 & 7 == 1) goto c5pJa; else goto c5pJf;
       c5pJa: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pJf: // global
           I64[Sp - 8] = block_c5pJd_info;
           _s5pla::P64 = P64[R1 + 6];
           R2 = _s5pla::P64;
           _s5plb::P64 = P64[R1 + 14];
           R1 = P64[Sp + 8];
           P64[Sp] = _s5plb::P64;
           P64[Sp + 16] = _s5pla::P64;
           Sp = Sp - 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pJ2_info" {
     block_c5pJ2_info:
         const _c5pJ2;
         const 130;
         const 30;
 },
 _c5pJd() //  [R1]
         { []
         }
     {offset
       c5pJd: // global
           if (R1 & 7 == 1) goto c5pJl; else goto c5pJp;
       c5pJl: // global
           P64[Sp + 24] = P64[Sp + 8];
           Sp = Sp + 16;
           call _c5pJ0() args: 0, res: 0, upd: 0;
       c5pJp: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5pJs; else goto c5pJr;
       c5pJs: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5pJr: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = P64[Sp + 24];
           R1 = Hp - 6;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pJd_info" {
     block_c5pJd_info:
         const _c5pJd;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.63890412 UTC

[section ""data" . Data.OldList.elemIndex_closure" {
     Data.OldList.elemIndex_closure:
         const Data.OldList.elemIndex_info;
 },
 p_s5plf_entry() //  [R1]
         { []
         }
     {offset
       c5pK8: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5pK9; else goto c5pKa;
       c5pK9: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5pKa: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call GHC.Classes.==_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . p_s5plf_info" {
     p_s5plf_info:
         const p_s5plf_entry;
         const 2;
         const 18;
 },
 sat_s5plq_entry() //  [R1, R2]
         { []
         }
     {offset
       c5pKi: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5pKj; else goto c5pKk;
       c5pKj: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5pKk: // global
           P64[Sp - 24] = P64[R1 + 7];
           P64[Sp - 16] = R2;
           I64[Sp - 8] = 0;
           Sp = Sp - 24;
           call _c5pKl() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . sat_s5plq_info" {
     sat_s5plq_info:
         const sat_s5plq_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c5pKl() //  []
         { []
         }
     {offset
       c5pKl: // global
           I64[Sp - 8] = block_c5pKo_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5pKW; else goto c5pKq;
       u5pKW: // global
           call _c5pKo(R1) args: 0, res: 0, upd: 0;
       c5pKq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5pKo() //  [R1]
         { []
         }
     {offset
       c5pKo: // global
           if (R1 & 7 == 1) goto c5pKw; else goto c5pKB;
       c5pKw: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pKB: // global
           I64[Sp] = block_c5pKz_info;
           R2 = P64[R1 + 6];
           _s5plm::P64 = P64[R1 + 14];
           R1 = P64[Sp + 8];
           P64[Sp + 16] = _s5plm::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pKo_info" {
     block_c5pKo_info:
         const _c5pKo;
         const 387;
         const 30;
 },
 _c5pKz() //  [R1]
         { []
         }
     {offset
       c5pKz: // global
           _s5plj::I64 = I64[Sp + 24];
           if (R1 & 7 == 1) goto c5pKH; else goto c5pKM;
       c5pKH: // global
           P64[Sp + 16] = P64[Sp + 16];
           I64[Sp + 24] = _s5plj::I64 + 1;
           Sp = Sp + 8;
           call _c5pKl() args: 0, res: 0, upd: 0;
       c5pKM: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5pKP; else goto c5pKO;
       c5pKP: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5pKO: // global
           I64[Hp - 24] = GHC.Types.I#_con_info;
           I64[Hp - 16] = _s5plj::I64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 6;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pKz_info" {
     block_c5pKz_info:
         const _c5pKz;
         const 259;
         const 30;
 },
 Data.OldList.elemIndex_entry() //  [R2, R3]
         { []
         }
     {offset
       c5pKY: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5pL2; else goto c5pL1;
       c5pL2: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.elemIndex_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5pL1: // global
           I64[Hp - 40] = p_s5plf_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = R3;
           I64[Hp - 8] = sat_s5plq_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.elemIndex_info" {
     Data.OldList.elemIndex_info:
         const Data.OldList.elemIndex_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.659225454 UTC

[section ""data" . Data.OldList.findIndex_closure" {
     Data.OldList.findIndex_closure:
         const Data.OldList.findIndex_info;
 },
 Data.OldList.findIndex_entry() //  [R2, R3]
         { []
         }
     {offset
       c5pLQ: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5pLR; else goto c5pLS;
       c5pLR: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.findIndex_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5pLS: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           I64[Sp - 8] = 0;
           Sp = Sp - 24;
           call _c5pLT() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.findIndex_info" {
     Data.OldList.findIndex_info:
         const Data.OldList.findIndex_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5pLT() //  []
         { []
         }
     {offset
       c5pLT: // global
           I64[Sp - 8] = block_c5pLW_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5pMu; else goto c5pLY;
       u5pMu: // global
           call _c5pLW(R1) args: 0, res: 0, upd: 0;
       c5pLY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5pLW() //  [R1]
         { []
         }
     {offset
       c5pLW: // global
           if (R1 & 7 == 1) goto c5pM4; else goto c5pM9;
       c5pM4: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pM9: // global
           I64[Sp] = block_c5pM7_info;
           R2 = P64[R1 + 6];
           _s5ply::P64 = P64[R1 + 14];
           R1 = P64[Sp + 8];
           P64[Sp + 16] = _s5ply::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pLW_info" {
     block_c5pLW_info:
         const _c5pLW;
         const 387;
         const 30;
 },
 _c5pM7() //  [R1]
         { []
         }
     {offset
       c5pM7: // global
           _s5plv::I64 = I64[Sp + 24];
           if (R1 & 7 == 1) goto c5pMf; else goto c5pMk;
       c5pMf: // global
           P64[Sp + 16] = P64[Sp + 16];
           I64[Sp + 24] = _s5plv::I64 + 1;
           Sp = Sp + 8;
           call _c5pLT() args: 0, res: 0, upd: 0;
       c5pMk: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5pMn; else goto c5pMm;
       c5pMn: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5pMm: // global
           I64[Hp - 24] = GHC.Types.I#_con_info;
           I64[Hp - 16] = _s5plv::I64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 6;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pM7_info" {
     block_c5pM7_info:
         const _c5pM7;
         const 259;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.672124639 UTC

[section ""data" . Data.OldList.findIndices_closure" {
     Data.OldList.findIndices_closure:
         const Data.OldList.findIndices_info;
 },
 sat_s5plO_entry() //  [R1]
         { []
         }
     {offset
       c5pNo: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5pNp; else goto c5pNq;
       c5pNp: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5pNq: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = I64[R1 + 32] + 1;
           R2 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call go_s5plE_entry(R3, R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5plO_info" {
     sat_s5plO_info:
         const sat_s5plO_entry;
         const 4294967298;
         const 15;
 },
 go_s5plE_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5pNv: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5pNw; else goto u5pNN;
       c5pNw: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       u5pNN: // global
           P64[Sp - 24] = R1;
           P64[Sp - 16] = R2;
           I64[Sp - 8] = R3;
           Sp = Sp - 24;
           call _c5pN4() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . go_s5plE_info" {
     go_s5plE_info:
         const go_s5plE_entry;
         const 1;
         const 9;
         const 8589934606;
 },
 _c5pN4() //  []
         { []
         }
     {offset
       c5pN4: // global
           _s5plC::P64 = P64[P64[Sp] + 6];
           I64[Sp - 8] = block_c5pN7_info;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5plC::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5pNP; else goto c5pN8;
       u5pNP: // global
           call _c5pN7(R1) args: 0, res: 0, upd: 0;
       c5pN8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5pN7() //  [R1]
         { []
         }
     {offset
       c5pN7: // global
           if (R1 & 7 == 1) goto c5pNs; else goto c5pNt;
       c5pNs: // global
           R1 = []_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pNt: // global
           I64[Sp] = block_c5pNd_info;
           R2 = P64[R1 + 6];
           _s5plJ::P64 = P64[R1 + 14];
           R1 = P64[Sp + 16];
           P64[Sp + 16] = _s5plJ::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pN7_info" {
     block_c5pN7_info:
         const _c5pN7;
         const 259;
         const 30;
 },
 _c5pNd() //  [R1]
         { []
         }
     {offset
       c5pNd: // global
           _s5plG::I64 = I64[Sp + 24];
           _s5plJ::P64 = P64[Sp + 16];
           if (R1 & 7 == 1) goto c5pNE; else goto c5pNH;
       c5pNE: // global
           P64[Sp + 16] = _s5plJ::P64;
           I64[Sp + 24] = _s5plG::I64 + 1;
           Sp = Sp + 8;
           call _c5pN4() args: 0, res: 0, upd: 0;
       c5pNH: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto c5pNK; else goto c5pNJ;
       c5pNK: // global
           HpAlloc = 80;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5pNJ: // global
           I64[Hp - 72] = sat_s5plO_info;
           P64[Hp - 56] = P64[Sp + 8];
           P64[Hp - 48] = _s5plJ::P64;
           I64[Hp - 40] = _s5plG::I64;
           I64[Hp - 32] = GHC.Types.I#_con_info;
           I64[Hp - 24] = _s5plG::I64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 31;
           P64[Hp] = Hp - 72;
           R1 = Hp - 14;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pNd_info" {
     block_c5pNd_info:
         const _c5pNd;
         const 259;
         const 30;
 },
 Data.OldList.findIndices_entry() //  [R2, R3]
         { []
         }
     {offset
       c5pNS: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5pNW; else goto c5pNV;
       c5pNW: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.findIndices_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5pNV: // global
           I64[Hp - 8] = go_s5plE_info;
           P64[Hp] = R2;
           _s5plD::P64 = R3;
           R3 = 0;
           R2 = _s5plD::P64;
           R1 = Hp - 6;
           call go_s5plE_entry(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.findIndices_info" {
     Data.OldList.findIndices_info:
         const Data.OldList.findIndices_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.68481074 UTC

[section ""data" . Data.OldList.elemIndices_closure" {
     Data.OldList.elemIndices_closure:
         const Data.OldList.elemIndices_info;
 },
 sat_s5plR_entry() //  [R1]
         { []
         }
     {offset
       c5pOK: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5pOL; else goto c5pOM;
       c5pOL: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5pOM: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call GHC.Classes.==_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5plR_info" {
     sat_s5plR_info:
         const sat_s5plR_entry;
         const 2;
         const 18;
 },
 Data.OldList.elemIndices_entry() //  [R2, R3]
         { []
         }
     {offset
       c5pON: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5pOR; else goto c5pOQ;
       c5pOR: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.elemIndices_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5pOQ: // global
           I64[Hp - 24] = sat_s5plR_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R2 = Hp - 24;
           R1 = Data.OldList.findIndices_closure+2;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.elemIndices_info" {
     Data.OldList.elemIndices_info:
         const Data.OldList.elemIndices_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.69606513 UTC

[section ""data" . Data.OldList.isPrefixOf_closure" {
     Data.OldList.isPrefixOf_closure:
         const Data.OldList.isPrefixOf_info;
 },
 Data.OldList.isPrefixOf_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5pPf: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c5pPg; else goto u5pPN;
       c5pPg: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.isPrefixOf_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u5pPN: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c5pP5() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.isPrefixOf_info" {
     Data.OldList.isPrefixOf_info:
         const Data.OldList.isPrefixOf_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5pP5() //  []
         { []
         }
     {offset
       c5pP5: // global
           I64[Sp - 8] = block_c5pP8_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5pPR; else goto c5pP9;
       u5pPR: // global
           call _c5pP8(R1) args: 0, res: 0, upd: 0;
       c5pP9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5pP8() //  [R1]
         { []
         }
     {offset
       c5pP8: // global
           if (R1 & 7 == 1) goto c5pPc; else goto c5pPd;
       c5pPc: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pPd: // global
           I64[Sp] = block_c5pPn_info;
           _s5plW::P64 = P64[R1 + 6];
           _s5plX::P64 = P64[R1 + 14];
           R1 = P64[Sp + 24];
           P64[Sp + 16] = _s5plX::P64;
           P64[Sp + 24] = _s5plW::P64;
           if (R1 & 7 != 0) goto u5pPS; else goto c5pPp;
       u5pPS: // global
           call _c5pPn(R1) args: 0, res: 0, upd: 0;
       c5pPp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pP8_info" {
     block_c5pP8_info:
         const _c5pP8;
         const 131;
         const 30;
 },
 _c5pPn() //  [R1]
         { []
         }
     {offset
       c5pPn: // global
           if (R1 & 7 == 1) goto u5pPO; else goto c5pPA;
       u5pPO: // global
           Sp = Sp + 32;
           call _c5pPG() args: 0, res: 0, upd: 0;
       c5pPA: // global
           I64[Sp] = block_c5pPy_info;
           R2 = P64[Sp + 8];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = P64[Sp + 24];
           P64[Sp - 8] = P64[R1 + 6];
           P64[Sp + 24] = P64[R1 + 14];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pPn_info" {
     block_c5pPn_info:
         const _c5pPn;
         const 3;
         const 30;
 },
 _c5pPy() //  [R1]
         { []
         }
     {offset
       c5pPy: // global
           if (R1 & 7 == 1) goto u5pPP; else goto c5pPK;
       u5pPP: // global
           Sp = Sp + 32;
           call _c5pPG() args: 0, res: 0, upd: 0;
       c5pPK: // global
           P64[Sp + 8] = P64[Sp + 8];
           P64[Sp + 16] = P64[Sp + 16];
           P64[Sp + 24] = P64[Sp + 24];
           Sp = Sp + 8;
           call _c5pP5() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5pPy_info" {
     block_c5pPy_info:
         const _c5pPy;
         const 3;
         const 30;
 },
 _c5pPG() //  []
         { []
         }
     {offset
       c5pPG: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.711870005 UTC

[section ""data" . Data.OldList.isInfixOf_closure" {
     Data.OldList.isInfixOf_closure:
         const Data.OldList.isInfixOf_info;
 },
 Data.OldList.isInfixOf_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5pQH: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5pQI; else goto c5pQJ;
       c5pQI: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.isInfixOf_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5pQJ: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c5pQL() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.isInfixOf_info" {
     Data.OldList.isInfixOf_info:
         const Data.OldList.isInfixOf_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5pQL() //  []
         { []
         }
     {offset
       c5pQL: // global
           I64[Sp - 8] = block_c5pQN_info;
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = P64[Sp];
           Sp = Sp - 8;
           call Data.OldList.isPrefixOf_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5pQN() //  [R1]
         { []
         }
     {offset
       c5pQN: // global
           if (R1 & 7 == 1) goto c5pQV; else goto c5pRa;
       c5pQV: // global
           I64[Sp] = block_c5pQS_info;
           R1 = P64[Sp + 24];
           if (R1 & 7 != 0) goto u5pRg; else goto c5pQW;
       u5pRg: // global
           call _c5pQS(R1) args: 0, res: 0, upd: 0;
       c5pQW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c5pRa: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pQN_info" {
     block_c5pQN_info:
         const _c5pQN;
         const 3;
         const 30;
 },
 _c5pQS() //  [R1]
         { []
         }
     {offset
       c5pQS: // global
           if (R1 & 7 == 1) goto c5pR2; else goto c5pR6;
       c5pR2: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pR6: // global
           P64[Sp + 24] = P64[R1 + 14];
           Sp = Sp + 8;
           call _c5pQL() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5pQS_info" {
     block_c5pQS_info:
         const _c5pQS;
         const 259;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.721104053 UTC

[section ""data" . Data.OldList.dropLength_closure" {
     Data.OldList.dropLength_closure:
         const Data.OldList.dropLength_info;
 },
 Data.OldList.dropLength_entry() //  [R2, R3]
         { []
         }
     {offset
       c5pRS: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5pRT; else goto u5pSe;
       c5pRT: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.dropLength_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       u5pSe: // global
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call _c5pRI() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.dropLength_info" {
     Data.OldList.dropLength_info:
         const Data.OldList.dropLength_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5pRI() //  []
         { []
         }
     {offset
       c5pRI: // global
           _s5pmb::P64 = P64[Sp];
           I64[Sp] = block_c5pRL_info;
           R1 = _s5pmb::P64;
           if (R1 & 7 != 0) goto u5pSg; else goto c5pRM;
       u5pSg: // global
           call _c5pRL(R1) args: 0, res: 0, upd: 0;
       c5pRM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5pRL() //  [R1]
         { []
         }
     {offset
       c5pRL: // global
           _s5pmc::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5pRP; else goto c5pRQ;
       c5pRP: // global
           R1 = _s5pmc::P64 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5pRQ: // global
           I64[Sp] = block_c5pS0_info;
           _s5pmf::P64 = P64[R1 + 14];
           R1 = _s5pmc::P64;
           P64[Sp + 8] = _s5pmf::P64;
           if (R1 & 7 != 0) goto u5pSh; else goto c5pS2;
       u5pSh: // global
           call _c5pS0(R1) args: 0, res: 0, upd: 0;
       c5pS2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pRL_info" {
     block_c5pRL_info:
         const _c5pRL;
         const 1;
         const 30;
 },
 _c5pS0() //  [R1]
         { []
         }
     {offset
       c5pS0: // global
           if (R1 & 7 == 1) goto c5pS8; else goto c5pSc;
       c5pS8: // global
           R1 = []_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pSc: // global
           P64[Sp] = P64[Sp + 8];
           P64[Sp + 8] = P64[R1 + 14];
           call _c5pRI() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5pS0_info" {
     block_c5pS0_info:
         const _c5pS0;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.730862383 UTC

[section ""data" . Data.OldList.dropLengthMaybe_closure" {
     Data.OldList.dropLengthMaybe_closure:
         const Data.OldList.dropLengthMaybe_info;
 },
 Data.OldList.dropLengthMaybe_entry() //  [R2, R3]
         { []
         }
     {offset
       c5pSW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5pSX; else goto u5pTl;
       c5pSX: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.dropLengthMaybe_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       u5pTl: // global
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call _c5pSM() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.dropLengthMaybe_info" {
     Data.OldList.dropLengthMaybe_info:
         const Data.OldList.dropLengthMaybe_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5pSM() //  []
         { []
         }
     {offset
       c5pSM: // global
           _s5pmj::P64 = P64[Sp];
           I64[Sp] = block_c5pSP_info;
           R1 = _s5pmj::P64;
           if (R1 & 7 != 0) goto u5pTn; else goto c5pSQ;
       u5pTn: // global
           call _c5pSP(R1) args: 0, res: 0, upd: 0;
       c5pSQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5pSP() //  [R1]
         { []
         }
     {offset
       c5pSP: // global
           _s5pmk::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5pST; else goto c5pSU;
       c5pST: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5pT4; else goto c5pT3;
       c5pT4: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5pT3: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = _s5pmk::P64;
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pSU: // global
           I64[Sp] = block_c5pT7_info;
           _s5pmn::P64 = P64[R1 + 14];
           R1 = _s5pmk::P64;
           P64[Sp + 8] = _s5pmn::P64;
           if (R1 & 7 != 0) goto u5pTo; else goto c5pT9;
       u5pTo: // global
           call _c5pT7(R1) args: 0, res: 0, upd: 0;
       c5pT9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pSP_info" {
     block_c5pSP_info:
         const _c5pSP;
         const 1;
         const 30;
 },
 _c5pT7() //  [R1]
         { []
         }
     {offset
       c5pT7: // global
           if (R1 & 7 == 1) goto c5pTf; else goto c5pTj;
       c5pTf: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pTj: // global
           P64[Sp] = P64[Sp + 8];
           P64[Sp + 8] = P64[R1 + 14];
           call _c5pSM() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5pT7_info" {
     block_c5pT7_info:
         const _c5pT7;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.744577685 UTC

[section ""data" . Data.OldList.isSuffixOf_closure" {
     Data.OldList.isSuffixOf_closure:
         const Data.OldList.isSuffixOf_info;
 },
 Data.OldList.isSuffixOf_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5pU2: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5pU3; else goto c5pU4;
       c5pU3: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.isSuffixOf_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5pU4: // global
           I64[Sp - 32] = block_c5pTW_info;
           _s5pms::P64 = R3;
           R3 = R4;
           _s5pmr::P64 = R2;
           R2 = _s5pms::P64;
           P64[Sp - 24] = _s5pmr::P64;
           P64[Sp - 16] = _s5pms::P64;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call Data.OldList.dropLengthMaybe_entry(R3,
                                                   R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.isSuffixOf_info" {
     Data.OldList.isSuffixOf_info:
         const Data.OldList.isSuffixOf_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5pTW() //  [R1]
         { []
         }
     {offset
       c5pTW: // global
           if (R1 & 7 == 1) goto c5pTZ; else goto c5pU0;
       c5pTZ: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pU0: // global
           I64[Sp] = block_c5pUa_info;
           R3 = P64[Sp + 24];
           R2 = P64[R1 + 6];
           call Data.OldList.dropLength_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pTW_info" {
     block_c5pTW_info:
         const _c5pTW;
         const 3;
         const 30;
 },
 _c5pUa() //  [R1]
         { []
         }
     {offset
       c5pUa: // global
           R4 = R1;
           R3 = P64[Sp + 16];
           R2 = P64[Sp + 8];
           Sp = Sp + 32;
           call GHC.Classes.$fEq[]_$c==_entry(R4,
                                              R3,
                                              R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pUa_info" {
     block_c5pUa_info:
         const _c5pUa;
         const 259;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.75833282 UTC

[section ""data" . Data.OldList.elem_by_closure" {
     Data.OldList.elem_by_closure:
         const Data.OldList.elem_by_info;
 },
 Data.OldList.elem_by_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5pUI: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5pUJ; else goto u5pV3;
       c5pUJ: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.elem_by_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u5pV3: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c5pUy() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.elem_by_info" {
     Data.OldList.elem_by_info:
         const Data.OldList.elem_by_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5pUy() //  []
         { []
         }
     {offset
       c5pUy: // global
           I64[Sp - 8] = block_c5pUB_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5pV5; else goto c5pUC;
       u5pV5: // global
           call _c5pUB(R1) args: 0, res: 0, upd: 0;
       c5pUC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5pUB() //  [R1]
         { []
         }
     {offset
       c5pUB: // global
           if (R1 & 7 == 1) goto c5pUF; else goto c5pUG;
       c5pUF: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pUG: // global
           I64[Sp] = block_c5pUQ_info;
           R3 = P64[Sp + 16];
           R2 = P64[R1 + 6];
           _s5pmC::P64 = P64[R1 + 14];
           R1 = P64[Sp + 8];
           P64[Sp + 24] = _s5pmC::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pUB_info" {
     block_c5pUB_info:
         const _c5pUB;
         const 259;
         const 30;
 },
 _c5pUQ() //  [R1]
         { []
         }
     {offset
       c5pUQ: // global
           if (R1 & 7 == 1) goto c5pUX; else goto c5pV1;
       c5pUX: // global
           P64[Sp + 8] = P64[Sp + 8];
           P64[Sp + 16] = P64[Sp + 16];
           P64[Sp + 24] = P64[Sp + 24];
           Sp = Sp + 8;
           call _c5pUy() args: 0, res: 0, upd: 0;
       c5pV1: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pUQ_info" {
     block_c5pUQ_info:
         const _c5pUQ;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.773775181 UTC

[section ""data" . Data.OldList.nubBy_closure" {
     Data.OldList.nubBy_closure:
         const Data.OldList.nubBy_info;
 },
 sat_s5pmO_entry() //  [R1]
         { []
         }
     {offset
       c5pVX: // global
           _s5pmO::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5pVY; else goto c5pVZ;
       c5pVZ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5pW1; else goto c5pW0;
       c5pW1: // global
           HpAlloc = 24;
           goto c5pVY;
       c5pVY: // global
           R1 = _s5pmO::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5pW0: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5pmO::P64;
           _s5pmG::P64 = P64[_s5pmO::P64 + 16];
           _s5pmI::P64 = P64[_s5pmO::P64 + 24];
           _s5pmK::P64 = P64[_s5pmO::P64 + 32];
           _s5pmL::P64 = P64[_s5pmO::P64 + 40];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5pmK::P64;
           P64[Hp] = _s5pmI::P64;
           R3 = Hp - 14;
           R2 = _s5pmL::P64;
           R1 = _s5pmG::P64;
           Sp = Sp - 16;
           call nubBy'_s5pmG_entry(R3, R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pmO_info" {
     sat_s5pmO_info:
         const sat_s5pmO_entry;
         const 4;
         const 15;
 },
 nubBy'_s5pmG_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5pW6: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5pW7; else goto u5pWn;
       c5pW7: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       u5pWn: // global
           P64[Sp - 24] = R1;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call _c5pVF() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . nubBy'_s5pmG_info" {
     nubBy'_s5pmG_info:
         const nubBy'_s5pmG_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 _c5pVF() //  []
         { []
         }
     {offset
       c5pVF: // global
           _s5pmE::P64 = P64[P64[Sp] + 6];
           I64[Sp - 8] = block_c5pVI_info;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5pmE::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5pWp; else goto c5pVJ;
       u5pWp: // global
           call _c5pVI(R1) args: 0, res: 0, upd: 0;
       c5pVJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5pVI() //  [R1]
         { []
         }
     {offset
       c5pVI: // global
           if (R1 & 7 == 1) goto c5pW3; else goto c5pW4;
       c5pW3: // global
           R1 = []_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pW4: // global
           I64[Sp - 8] = block_c5pVO_info;
           R4 = P64[Sp + 24];
           _s5pmK::P64 = P64[R1 + 6];
           R3 = _s5pmK::P64;
           R2 = P64[Sp + 16];
           P64[Sp] = P64[R1 + 14];
           P64[Sp + 16] = _s5pmK::P64;
           Sp = Sp - 8;
           call Data.OldList.elem_by_entry(R4,
                                           R3,
                                           R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pVI_info" {
     block_c5pVI_info:
         const _c5pVI;
         const 3;
         const 30;
 },
 _c5pVO() //  [R1]
         { []
         }
     {offset
       c5pVO: // global
           _s5pmI::P64 = P64[Sp + 32];
           _s5pmL::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5pWe; else goto c5pWl;
       c5pWe: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c5pWh; else goto c5pWg;
       c5pWh: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5pWg: // global
           I64[Hp - 64] = sat_s5pmO_info;
           P64[Hp - 48] = P64[Sp + 16];
           P64[Hp - 40] = _s5pmI::P64;
           _s5pmK::P64 = P64[Sp + 24];
           P64[Hp - 32] = _s5pmK::P64;
           P64[Hp - 24] = _s5pmL::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5pmK::P64;
           P64[Hp] = Hp - 64;
           R1 = Hp - 14;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pWl: // global
           P64[Sp + 24] = _s5pmL::P64;
           P64[Sp + 32] = _s5pmI::P64;
           Sp = Sp + 16;
           call _c5pVF() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5pVO_info" {
     block_c5pVO_info:
         const _c5pVO;
         const 4;
         const 30;
 },
 Data.OldList.nubBy_entry() //  [R2, R3]
         { []
         }
     {offset
       c5pWs: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5pWw; else goto c5pWv;
       c5pWw: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.nubBy_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5pWv: // global
           I64[Hp - 8] = nubBy'_s5pmG_info;
           P64[Hp] = R2;
           _s5pmF::P64 = R3;
           R3 = GHC.Types.[]_closure+1;
           R2 = _s5pmF::P64;
           R1 = Hp - 6;
           call nubBy'_s5pmG_entry(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.nubBy_info" {
     Data.OldList.nubBy_info:
         const Data.OldList.nubBy_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.790146349 UTC

[section ""data" . Data.OldList.nub_closure" {
     Data.OldList.nub_closure:
         const Data.OldList.nub_info;
 },
 sat_s5pmR_entry() //  [R1]
         { []
         }
     {offset
       c5pXj: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5pXk; else goto c5pXl;
       c5pXk: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5pXl: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pmR_info" {
     sat_s5pmR_info:
         const sat_s5pmR_entry;
         const 1;
         const 16;
 },
 Data.OldList.nub_entry() //  [R2, R3]
         { []
         }
     {offset
       c5pXm: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5pXq; else goto c5pXp;
       c5pXq: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.nub_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5pXp: // global
           I64[Hp - 16] = sat_s5pmR_info;
           P64[Hp] = R2;
           R3 = R3;
           R2 = Hp - 16;
           call Data.OldList.nubBy_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.nub_info" {
     Data.OldList.nub_info:
         const Data.OldList.nub_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.807806227 UTC

[section ""data" . Data.OldList.deleteBy_closure" {
     Data.OldList.deleteBy_closure:
         const Data.OldList.deleteBy_info;
 },
 sat_s5pmZ_entry() //  [R1]
         { []
         }
     {offset
       c5pXT: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5pXU; else goto c5pXV;
       c5pXU: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5pXV: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R4 = P64[R1 + 32];
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.OldList.deleteBy_entry(R4,
                                            R3,
                                            R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pmZ_info" {
     sat_s5pmZ_info:
         const sat_s5pmZ_entry;
         const 3;
         const 15;
 },
 Data.OldList.deleteBy_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5pY0: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5pY1; else goto c5pY2;
       c5pY1: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.deleteBy_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5pY2: // global
           I64[Sp - 24] = block_c5pXF_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5pYh; else goto c5pXG;
       u5pYh: // global
           call _c5pXF(R1) args: 0, res: 0, upd: 0;
       c5pXG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.deleteBy_info" {
     Data.OldList.deleteBy_info:
         const Data.OldList.deleteBy_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5pXF() //  [R1]
         { []
         }
     {offset
       c5pXF: // global
           if (R1 & 7 == 1) goto c5pXX; else goto c5pXY;
       c5pXX: // global
           R1 = []_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pXY: // global
           I64[Sp - 16] = block_c5pXL_info;
           _s5pmW::P64 = P64[R1 + 6];
           R3 = _s5pmW::P64;
           R2 = P64[Sp + 16];
           _s5pmX::P64 = P64[R1 + 14];
           R1 = P64[Sp + 8];
           P64[Sp - 8] = _s5pmX::P64;
           P64[Sp] = _s5pmW::P64;
           Sp = Sp - 16;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pXF_info" {
     block_c5pXF_info:
         const _c5pXF;
         const 2;
         const 30;
 },
 _c5pXL() //  [R1]
         { []
         }
     {offset
       c5pXL: // global
           _s5pmX::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5pY8; else goto c5pYf;
       c5pY8: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c5pYb; else goto c5pYa;
       c5pYb: // global
           HpAlloc = 64;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5pYa: // global
           I64[Hp - 56] = sat_s5pmZ_info;
           P64[Hp - 40] = P64[Sp + 24];
           P64[Hp - 32] = P64[Sp + 32];
           P64[Hp - 24] = _s5pmX::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = Hp - 56;
           R1 = Hp - 14;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5pYf: // global
           R1 = _s5pmX::P64 & (-8);
           Sp = Sp + 40;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pXL_info" {
     block_c5pXL_info:
         const _c5pXL;
         const 4;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.82650853 UTC

[section ""data" . Data.OldList.deleteFirstsBy_closure" {
     Data.OldList.deleteFirstsBy_closure:
         const Data.OldList.deleteFirstsBy_info;
 },
 Data.OldList.deleteFirstsBy_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5pYW: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5pYX; else goto c5pYY;
       c5pYX: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.deleteFirstsBy_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5pYY: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call _c5pZ0() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.deleteFirstsBy_info" {
     Data.OldList.deleteFirstsBy_info:
         const Data.OldList.deleteFirstsBy_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5pZ0() //  []
         { []
         }
     {offset
       c5pZ0: // global
           I64[Sp - 8] = block_c5pZ2_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5pZo; else goto c5pZ4;
       u5pZo: // global
           call _c5pZ2(R1) args: 0, res: 0, upd: 0;
       c5pZ4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5pZ2() //  [R1]
         { []
         }
     {offset
       c5pZ2: // global
           _s5pn5::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5pZa; else goto c5pZf;
       c5pZa: // global
           R1 = _s5pn5::P64 & (-8);
           Sp = Sp + 32;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5pZf: // global
           I64[Sp] = block_c5pZd_info;
           R4 = _s5pn5::P64;
           R3 = P64[R1 + 6];
           R2 = P64[Sp + 8];
           P64[Sp + 24] = P64[R1 + 14];
           call Data.OldList.deleteBy_entry(R4,
                                            R3,
                                            R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5pZ2_info" {
     block_c5pZ2_info:
         const _c5pZ2;
         const 131;
         const 30;
 },
 _c5pZd() //  [R1]
         { []
         }
     {offset
       c5pZd: // global
           P64[Sp + 16] = P64[Sp + 24];
           P64[Sp + 24] = R1;
           Sp = Sp + 8;
           call _c5pZ0() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5pZd_info" {
     block_c5pZd_info:
         const _c5pZd;
         const 131;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.839815659 UTC

[section ""data" . Data.OldList.delete_closure" {
     Data.OldList.delete_closure:
         const Data.OldList.delete_info;
 },
 sat_s5pnd_entry() //  [R1]
         { []
         }
     {offset
       c5pZU: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5pZV; else goto c5pZW;
       c5pZV: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5pZW: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pnd_info" {
     sat_s5pnd_info:
         const sat_s5pnd_entry;
         const 1;
         const 16;
 },
 Data.OldList.delete_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5pZX: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5q01; else goto c5q00;
       c5q01: // global
           HpAlloc = 24;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.delete_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5q00: // global
           I64[Hp - 16] = sat_s5pnd_info;
           P64[Hp] = R2;
           R4 = R4;
           R3 = R3;
           R2 = Hp - 16;
           call Data.OldList.deleteBy_entry(R4,
                                            R3,
                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.delete_info" {
     Data.OldList.delete_info:
         const Data.OldList.delete_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.85172718 UTC

[section ""data" . Data.OldList.\\_closure" {
     Data.OldList.\\_closure:
         const Data.OldList.\\_info;
 },
 lvl12_s5pnh_entry() //  [R1]
         { []
         }
     {offset
       c5q0k: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5q0l; else goto c5q0m;
       c5q0l: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5q0m: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl12_s5pnh_info" {
     lvl12_s5pnh_info:
         const lvl12_s5pnh_entry;
         const 1;
         const 16;
 },
 Data.OldList.\\_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5q0p: // global
           _s5png::P64 = R4;
           _s5pnf::P64 = R3;
           _s5pne::P64 = R2;
           if ((Sp + -32) < SpLim) (likely: False) goto c5q0q; else goto c5q0r;
       c5q0r: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5q0t; else goto c5q0s;
       c5q0t: // global
           HpAlloc = 24;
           goto c5q0q;
       c5q0q: // global
           R4 = _s5png::P64;
           R3 = _s5pnf::P64;
           R2 = _s5pne::P64;
           R1 = Data.OldList.\\_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5q0s: // global
           I64[Hp - 16] = lvl12_s5pnh_info;
           P64[Hp] = _s5pne::P64;
           P64[Sp - 24] = Hp - 16;
           P64[Sp - 16] = _s5png::P64;
           P64[Sp - 8] = _s5pnf::P64;
           Sp = Sp - 24;
           call _c5q0v() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.\\_info" {
     Data.OldList.\\_info:
         const Data.OldList.\\_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5q0v() //  []
         { []
         }
     {offset
       c5q0v: // global
           I64[Sp - 8] = block_c5q0x_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5q0T; else goto c5q0z;
       u5q0T: // global
           call _c5q0x(R1) args: 0, res: 0, upd: 0;
       c5q0z: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5q0x() //  [R1]
         { []
         }
     {offset
       c5q0x: // global
           _s5pnk::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5q0F; else goto c5q0K;
       c5q0F: // global
           R1 = _s5pnk::P64 & (-8);
           Sp = Sp + 32;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5q0K: // global
           I64[Sp] = block_c5q0I_info;
           R4 = _s5pnk::P64;
           R3 = P64[R1 + 6];
           R2 = P64[Sp + 8];
           P64[Sp + 24] = P64[R1 + 14];
           call Data.OldList.deleteBy_entry(R4,
                                            R3,
                                            R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5q0x_info" {
     block_c5q0x_info:
         const _c5q0x;
         const 131;
         const 30;
 },
 _c5q0I() //  [R1]
         { []
         }
     {offset
       c5q0I: // global
           P64[Sp + 16] = P64[Sp + 24];
           P64[Sp + 24] = R1;
           Sp = Sp + 8;
           call _c5q0v() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5q0I_info" {
     block_c5q0I_info:
         const _c5q0I;
         const 131;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.868922072 UTC

[section ""data" . Data.OldList.unionBy_closure" {
     Data.OldList.unionBy_closure:
         const Data.OldList.unionBy_info;
 },
 sat_s5pnA_entry() //  [R1]
         { []
         }
     {offset
       c5q1y: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5q1z; else goto c5q1A;
       c5q1z: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5q1A: // global
           I64[Sp - 24] = block_c5q1w_info;
           R3 = P64[R1 + 32];
           _s5pnp::P64 = P64[R1 + 16];
           R2 = _s5pnp::P64;
           P64[Sp - 16] = _s5pnp::P64;
           P64[Sp - 8] = P64[R1 + 24];
           Sp = Sp - 24;
           call Data.OldList.nubBy_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5pnA_info" {
     sat_s5pnA_info:
         const sat_s5pnA_entry;
         const 3;
         const 15;
 },
 _c5q1w() //  [R1]
         { []
         }
     {offset
       c5q1w: // global
           P64[Sp] = R1;
           P64[Sp + 16] = P64[Sp + 16];
           call _c5q1H() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5q1w_info" {
     block_c5q1w_info:
         const _c5q1w;
         const 2;
         const 30;
 },
 _c5q1H() //  []
         { []
         }
     {offset
       c5q1H: // global
           I64[Sp - 8] = block_c5q1J_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5q25; else goto c5q1L;
       u5q25: // global
           call _c5q1J(R1) args: 0, res: 0, upd: 0;
       c5q1L: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5q1J() //  [R1]
         { []
         }
     {offset
       c5q1J: // global
           _s5pnu::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5q1R; else goto c5q1W;
       c5q1R: // global
           R1 = _s5pnu::P64 & (-8);
           Sp = Sp + 32;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5q1W: // global
           I64[Sp + 8] = block_c5q1U_info;
           R4 = _s5pnu::P64;
           R3 = P64[R1 + 6];
           R2 = P64[Sp + 16];
           P64[Sp + 24] = P64[R1 + 14];
           Sp = Sp + 8;
           call Data.OldList.deleteBy_entry(R4,
                                            R3,
                                            R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5q1J_info" {
     block_c5q1J_info:
         const _c5q1J;
         const 259;
         const 30;
 },
 _c5q1U() //  [R1]
         { []
         }
     {offset
       c5q1U: // global
           P64[Sp + 16] = P64[Sp + 16];
           P64[Sp] = R1;
           call _c5q1H() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5q1U_info" {
     block_c5q1U_info:
         const _c5q1U;
         const 2;
         const 30;
 },
 Data.OldList.unionBy_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5q27: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c5q2b; else goto c5q2a;
       c5q2b: // global
           HpAlloc = 40;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.unionBy_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5q2a: // global
           I64[Hp - 32] = sat_s5pnA_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           _s5pnq::P64 = R3;
           R3 = Hp - 32;
           R2 = _s5pnq::P64;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.unionBy_info" {
     Data.OldList.unionBy_info:
         const Data.OldList.unionBy_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.88178697 UTC

[section ""data" . Data.OldList.union_closure" {
     Data.OldList.union_closure:
         const Data.OldList.union_info;
 },
 sat_s5pnE_entry() //  [R1]
         { []
         }
     {offset
       c5q2Q: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5q2R; else goto c5q2S;
       c5q2R: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5q2S: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pnE_info" {
     sat_s5pnE_info:
         const sat_s5pnE_entry;
         const 1;
         const 16;
 },
 Data.OldList.union_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5q2T: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5q2X; else goto c5q2W;
       c5q2X: // global
           HpAlloc = 24;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.union_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5q2W: // global
           I64[Hp - 16] = sat_s5pnE_info;
           P64[Hp] = R2;
           R4 = R4;
           R3 = R3;
           R2 = Hp - 16;
           call Data.OldList.unionBy_entry(R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.union_info" {
     Data.OldList.union_info:
         const Data.OldList.union_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.891594723 UTC

[section ""data" . Data.OldList.intersectBy_closure" {
     Data.OldList.intersectBy_closure:
         const Data.OldList.intersectBy_info;
 },
 go_s5pnO_entry() //  [R1, R2]
         { []
         }
     {offset
       c5q3A: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5q3B; else goto u5q42;
       c5q3B: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       u5q42: // global
           P64[Sp - 16] = R1;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call _c5q3q() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . go_s5pnO_info" {
     go_s5pnO_info:
         const go_s5pnO_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 _c5q3q() //  []
         { []
         }
     {offset
       c5q3q: // global
           I64[Sp - 16] = block_c5q3t_info;
           R1 = P64[Sp + 8];
           _s5pnO::P64 = P64[Sp];
           P64[Sp - 8] = P64[_s5pnO::P64 + 15];
           P64[Sp + 8] = P64[_s5pnO::P64 + 7];
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5q44; else goto c5q3u;
       u5q44: // global
           call _c5q3t(R1) args: 0, res: 0, upd: 0;
       c5q3u: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5q3t() //  [R1]
         { []
         }
     {offset
       c5q3t: // global
           if (R1 & 7 == 1) goto c5q3x; else goto c5q3y;
       c5q3x: // global
           R1 = []_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5q3y: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5q3M; else goto c5q3L;
       c5q3M: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5q3L: // global
           _s5pnR::P64 = P64[R1 + 6];
           _s5pnS::P64 = P64[R1 + 14];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = P64[Sp + 24];
           P64[Hp] = _s5pnR::P64;
           I64[Sp] = block_c5q3J_info;
           R3 = P64[Sp + 8];
           R2 = Hp - 24;
           P64[Sp + 8] = _s5pnS::P64;
           P64[Sp + 24] = _s5pnR::P64;
           call GHC.List.any_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5q3t_info" {
     block_c5q3t_info:
         const _c5q3t;
         const 3;
         const 30;
 },
 _c5q3J() //  [R1]
         { []
         }
     {offset
       c5q3J: // global
           _s5pnS::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5q3S; else goto c5q3X;
       c5q3S: // global
           P64[Sp + 24] = _s5pnS::P64;
           Sp = Sp + 16;
           call _c5q3q() args: 0, res: 0, upd: 0;
       c5q3X: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5q40; else goto c5q3Z;
       c5q40: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5q3Z: // global
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = _s5pnS::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = P64[Sp + 24];
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5q3J_info" {
     block_c5q3J_info:
         const _c5q3J;
         const 3;
         const 30;
 },
 Data.OldList.intersectBy_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5q4b: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5q4c; else goto c5q4d;
       c5q4c: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.intersectBy_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5q4d: // global
           I64[Sp - 24] = block_c5q3c_info;
           R1 = R3;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5q4v; else goto c5q3d;
       u5q4v: // global
           call _c5q3c(R1) args: 0, res: 0, upd: 0;
       c5q3d: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.intersectBy_info" {
     Data.OldList.intersectBy_info:
         const Data.OldList.intersectBy_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5q3c() //  [R1]
         { []
         }
     {offset
       c5q3c: // global
           if (R1 & 7 == 1) goto u5q4q; else goto c5q49;
       u5q4q: // global
           Sp = Sp + 24;
           call _c5q4k() args: 0, res: 0, upd: 0;
       c5q49: // global
           I64[Sp] = block_c5q3i_info;
           _s5pnI::P64 = R1;
           R1 = P64[Sp + 16];
           P64[Sp + 16] = _s5pnI::P64;
           if (R1 & 7 != 0) goto u5q4s; else goto c5q3j;
       u5q4s: // global
           call _c5q3i(R1) args: 0, res: 0, upd: 0;
       c5q3j: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5q3c_info" {
     block_c5q3c_info:
         const _c5q3c;
         const 2;
         const 30;
 },
 _c5q3i() //  [R1]
         { []
         }
     {offset
       c5q3i: // global
           if (R1 & 7 == 1) goto u5q4r; else goto c5q4l;
       u5q4r: // global
           Sp = Sp + 24;
           call _c5q4k() args: 0, res: 0, upd: 0;
       c5q4l: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5q4o; else goto c5q4n;
       c5q4o: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5q4n: // global
           I64[Hp - 16] = go_s5pnO_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = R1;
           R2 = P64[Sp + 16];
           R1 = Hp - 15;
           Sp = Sp + 24;
           call go_s5pnO_entry(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5q3i_info" {
     block_c5q3i_info:
         const _c5q3i;
         const 2;
         const 30;
 },
 _c5q4k() //  []
         { []
         }
     {offset
       c5q4k: // global
           R1 = []_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.908878401 UTC

[section ""data" . Data.OldList.intersect_closure" {
     Data.OldList.intersect_closure:
         const Data.OldList.intersect_info;
 },
 sat_s5pnZ_entry() //  [R1]
         { []
         }
     {offset
       c5q5y: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5q5z; else goto c5q5A;
       c5q5z: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5q5A: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pnZ_info" {
     sat_s5pnZ_info:
         const sat_s5pnZ_entry;
         const 1;
         const 16;
 },
 Data.OldList.intersect_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5q5B: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5q5F; else goto c5q5E;
       c5q5F: // global
           HpAlloc = 24;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.intersect_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5q5E: // global
           I64[Hp - 16] = sat_s5pnZ_info;
           P64[Hp] = R2;
           R4 = R4;
           R3 = R3;
           R2 = Hp - 16;
           call Data.OldList.intersectBy_entry(R4,
                                               R3,
                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.intersect_info" {
     Data.OldList.intersect_info:
         const Data.OldList.intersect_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.919406021 UTC

[section ""data" . Data.OldList.prependToAll_closure" {
     Data.OldList.prependToAll_closure:
         const Data.OldList.prependToAll_info;
 },
 sat_s5po5_entry() //  [R1]
         { []
         }
     {offset
       c5q64: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5q65; else goto c5q66;
       c5q65: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5q66: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5po5_info" {
     sat_s5po5_info:
         const sat_s5po5_entry;
         const 2;
         const 18;
 },
 Data.OldList.prependToAll_entry() //  [R2, R3]
         { []
         }
     {offset
       c5q6b: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5q6c; else goto c5q6d;
       c5q6c: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.prependToAll_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5q6d: // global
           I64[Sp - 16] = block_c5q5U_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5q6l; else goto c5q5V;
       u5q6l: // global
           call _c5q5U(R1) args: 0, res: 0, upd: 0;
       c5q5V: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.prependToAll_info" {
     Data.OldList.prependToAll_info:
         const Data.OldList.prependToAll_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5q5U() //  [R1]
         { []
         }
     {offset
       c5q5U: // global
           if (R1 & 7 == 1) goto c5q68; else goto c5q69;
       c5q68: // global
           R1 = []_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5q69: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto c5q6k; else goto c5q6j;
       c5q6k: // global
           HpAlloc = 80;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5q6j: // global
           _s5po3::P64 = P64[R1 + 6];
           _s5po4::P64 = P64[R1 + 14];
           I64[Hp - 72] = sat_s5po5_info;
           _s5po0::P64 = P64[Sp + 8];
           P64[Hp - 56] = _s5po0::P64;
           P64[Hp - 48] = _s5po4::P64;
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = _s5po3::P64;
           P64[Hp - 24] = Hp - 72;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5po0::P64;
           P64[Hp] = Hp - 38;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5q5U_info" {
     block_c5q5U_info:
         const _c5q5U;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.933037111 UTC

[section ""data" . Data.OldList.intersperse_closure" {
     Data.OldList.intersperse_closure:
         const Data.OldList.intersperse_info;
 },
 sat_s5poc_entry() //  [R1]
         { []
         }
     {offset
       c5q6Z: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5q70; else goto c5q71;
       c5q70: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5q71: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5poc_info" {
     sat_s5poc_info:
         const sat_s5poc_entry;
         const 2;
         const 18;
 },
 Data.OldList.intersperse_entry() //  [R2, R3]
         { []
         }
     {offset
       c5q76: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5q77; else goto c5q78;
       c5q77: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.intersperse_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5q78: // global
           I64[Sp - 16] = block_c5q6P_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5q7f; else goto c5q6Q;
       u5q7f: // global
           call _c5q6P(R1) args: 0, res: 0, upd: 0;
       c5q6Q: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.intersperse_info" {
     Data.OldList.intersperse_info:
         const Data.OldList.intersperse_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5q6P() //  [R1]
         { []
         }
     {offset
       c5q6P: // global
           if (R1 & 7 == 1) goto c5q73; else goto c5q74;
       c5q73: // global
           R1 = []_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5q74: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5q7e; else goto c5q7d;
       c5q7e: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5q7d: // global
           _s5poa::P64 = P64[R1 + 6];
           _s5pob::P64 = P64[R1 + 14];
           I64[Hp - 48] = sat_s5poc_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s5pob::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5poa::P64;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5q6P_info" {
     block_c5q6P_info:
         const _c5q6P;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.943131022 UTC

[section ""data" . Data.OldList.intercalate1_closure" {
     Data.OldList.intercalate1_closure:
         const Data.OldList.intercalate1_info;
 },
 sat_s5poh_entry() //  [R1]
         { []
         }
     {offset
       c5q7S: // global
           R2 = P64[R1 + 16];
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5poh_info" {
     sat_s5poh_info:
         const sat_s5poh_entry;
         const 1;
         const 16;
 },
 Data.OldList.intercalate1_entry() //  [R2]
         { []
         }
     {offset
       c5q7Z: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5q80; else goto c5q81;
       c5q80: // global
           R2 = R2;
           R1 = Data.OldList.intercalate1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5q81: // global
           I64[Sp - 8] = block_c5q7I_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5q87; else goto c5q7J;
       u5q87: // global
           call _c5q7I(R1) args: 0, res: 0, upd: 0;
       c5q7J: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.intercalate1_info" {
     Data.OldList.intercalate1_info:
         const Data.OldList.intercalate1_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5q7I() //  [R1]
         { []
         }
     {offset
       c5q7I: // global
           if (R1 & 7 == 1) goto c5q7W; else goto c5q7X;
       c5q7W: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5q7X: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5q86; else goto c5q85;
       c5q86: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5q85: // global
           _s5pof::P64 = P64[R1 + 6];
           _s5pog::P64 = P64[R1 + 14];
           I64[Hp - 16] = sat_s5poh_info;
           P64[Hp] = _s5pog::P64;
           R3 = Hp - 16;
           R2 = _s5pof::P64;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5q7I_info" {
     block_c5q7I_info:
         const _c5q7I;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.951741202 UTC

[section ""data" . Data.OldList.intercalate_closure" {
     Data.OldList.intercalate_closure:
         const Data.OldList.intercalate_info;
 },
 sat_s5pon_entry() //  [R1]
         { []
         }
     {offset
       c5q8E: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5q8F; else goto c5q8G;
       c5q8F: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5q8G: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pon_info" {
     sat_s5pon_info:
         const sat_s5pon_entry;
         const 2;
         const 18;
 },
 Data.OldList.intercalate_entry() //  [R2, R3]
         { []
         }
     {offset
       c5q8L: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5q8M; else goto c5q8N;
       c5q8M: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.intercalate_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5q8N: // global
           I64[Sp - 16] = block_c5q8u_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5q8U; else goto c5q8v;
       u5q8U: // global
           call _c5q8u(R1) args: 0, res: 0, upd: 0;
       c5q8v: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.intercalate_info" {
     Data.OldList.intercalate_info:
         const Data.OldList.intercalate_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5q8u() //  [R1]
         { []
         }
     {offset
       c5q8u: // global
           if (R1 & 7 == 1) goto c5q8I; else goto c5q8J;
       c5q8I: // global
           R1 = []_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5q8J: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5q8T; else goto c5q8S;
       c5q8T: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5q8S: // global
           _s5pol::P64 = P64[R1 + 6];
           _s5pom::P64 = P64[R1 + 14];
           I64[Hp - 48] = sat_s5pon_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s5pom::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5pol::P64;
           P64[Hp] = Hp - 48;
           R2 = Hp - 14;
           Sp = Sp + 16;
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5q8u_info" {
     block_c5q8u_info:
         const _c5q8u;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.962633213 UTC

[section ""data" . poly_go_r5kSf_closure" {
     poly_go_r5kSf_closure:
         const poly_go_r5kSf_info;
 },
 sat_s5pow_entry() //  [R1]
         { []
         }
     {offset
       c5q9C: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5q9D; else goto c5q9E;
       c5q9D: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5q9E: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call poly_go_r5kSf_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pow_info" {
     sat_s5pow_info:
         const sat_s5pow_entry;
         const 1;
         const 16;
 },
 poly_go_r5kSf_entry() //  [R2]
         { []
         }
     {offset
       c5q9J: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5q9K; else goto u5q9Z;
       c5q9K: // global
           R2 = R2;
           R1 = poly_go_r5kSf_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       u5q9Z: // global
           P64[Sp - 8] = R2;
           Sp = Sp - 8;
           call _c5q9j() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . poly_go_r5kSf_info" {
     poly_go_r5kSf_info:
         const poly_go_r5kSf_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5q9j() //  []
         { []
         }
     {offset
       c5q9j: // global
           _s5pop::P64 = P64[Sp];
           I64[Sp] = block_c5q9m_info;
           R1 = _s5pop::P64;
           if (R1 & 7 != 0) goto u5qa1; else goto c5q9n;
       u5qa1: // global
           call _c5q9m(R1) args: 0, res: 0, upd: 0;
       c5q9n: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5q9m() //  [R1]
         { []
         }
     {offset
       c5q9m: // global
           if (R1 & 7 == 1) goto c5q9G; else goto c5q9H;
       c5q9G: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5q9H: // global
           I64[Sp - 8] = block_c5q9s_info;
           _s5pos::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5pos::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qa2; else goto c5q9t;
       u5qa2: // global
           call _c5q9s(R1) args: 0, res: 0, upd: 0;
       c5q9t: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5q9m_info" {
     block_c5q9m_info:
         const _c5q9m;
         const 0;
         const 30;
 },
 _c5q9s() //  [R1]
         { []
         }
     {offset
       c5q9s: // global
           _s5pos::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5q9S; else goto c5q9U;
       c5q9S: // global
           P64[Sp + 8] = _s5pos::P64;
           Sp = Sp + 8;
           call _c5q9j() args: 0, res: 0, upd: 0;
       c5q9U: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5q9X; else goto c5q9W;
       c5q9X: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5q9W: // global
           _s5pov::P64 = P64[R1 + 14];
           I64[Hp - 40] = sat_s5pow_info;
           P64[Hp - 24] = _s5pos::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5pov::P64;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5q9s_info" {
     block_c5q9s_info:
         const _c5q9s;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.979286615 UTC

[section ""data" . poly_go1_r5kSg_closure" {
     poly_go1_r5kSg_closure:
         const poly_go1_r5kSg_info;
 },
 sat_s5poE_entry() //  [R1]
         { []
         }
     {offset
       c5qaV: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5qaW; else goto c5qaX;
       c5qaW: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qaX: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call poly_go1_r5kSg_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5poE_info" {
     sat_s5poE_info:
         const sat_s5poE_entry;
         const 1;
         const 16;
 },
 poly_go1_r5kSg_entry() //  [R2]
         { []
         }
     {offset
       c5qb2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5qb3; else goto u5qbi;
       c5qb3: // global
           R2 = R2;
           R1 = poly_go1_r5kSg_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       u5qbi: // global
           P64[Sp - 8] = R2;
           Sp = Sp - 8;
           call _c5qaC() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . poly_go1_r5kSg_info" {
     poly_go1_r5kSg_info:
         const poly_go1_r5kSg_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5qaC() //  []
         { []
         }
     {offset
       c5qaC: // global
           _s5pox::P64 = P64[Sp];
           I64[Sp] = block_c5qaF_info;
           R1 = _s5pox::P64;
           if (R1 & 7 != 0) goto u5qbk; else goto c5qaG;
       u5qbk: // global
           call _c5qaF(R1) args: 0, res: 0, upd: 0;
       c5qaG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5qaF() //  [R1]
         { []
         }
     {offset
       c5qaF: // global
           if (R1 & 7 == 1) goto c5qaZ; else goto c5qb0;
       c5qaZ: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5qb0: // global
           I64[Sp - 8] = block_c5qaL_info;
           _s5poA::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5poA::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qbl; else goto c5qaM;
       u5qbl: // global
           call _c5qaL(R1) args: 0, res: 0, upd: 0;
       c5qaM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qaF_info" {
     block_c5qaF_info:
         const _c5qaF;
         const 0;
         const 30;
 },
 _c5qaL() //  [R1]
         { []
         }
     {offset
       c5qaL: // global
           _s5poA::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5qbb; else goto c5qbd;
       c5qbb: // global
           P64[Sp + 8] = _s5poA::P64;
           Sp = Sp + 8;
           call _c5qaC() args: 0, res: 0, upd: 0;
       c5qbd: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5qbg; else goto c5qbf;
       c5qbg: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qbf: // global
           _s5poC::P64 = P64[R1 + 6];
           I64[Hp - 40] = sat_s5poE_info;
           P64[Hp - 24] = _s5poA::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5poC::P64;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qaL_info" {
     block_c5qaL_info:
         const _c5qaL;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:25.997162176 UTC

[section ""data" . Data.OldList.transpose_closure" {
     Data.OldList.transpose_closure:
         const Data.OldList.transpose_info;
 },
 sat_s5poO_entry() //  [R1]
         { []
         }
     {offset
       c5qci: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5qcj; else goto c5qck;
       c5qcj: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qck: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call poly_go_r5kSf_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5poO_info" {
     sat_s5poO_info:
         const sat_s5poO_entry;
         const 1;
         const 16;
 },
 sat_s5poQ_entry() //  [R1]
         { []
         }
     {offset
       c5qcm: // global
           _s5poQ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5qcn; else goto c5qco;
       c5qco: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5qcq; else goto c5qcp;
       c5qcq: // global
           HpAlloc = 48;
           goto c5qcn;
       c5qcn: // global
           R1 = _s5poQ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qcp: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5poQ::P64;
           _s5poI::P64 = P64[_s5poQ::P64 + 16];
           _s5poL::P64 = P64[_s5poQ::P64 + 24];
           I64[Hp - 40] = sat_s5poO_info;
           P64[Hp - 24] = _s5poI::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5poL::P64;
           P64[Hp] = Hp - 40;
           R2 = Hp - 14;
           Sp = Sp - 16;
           call Data.OldList.transpose_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5poQ_info" {
     sat_s5poQ_info:
         const sat_s5poQ_entry;
         const 2;
         const 18;
 },
 sat_s5poM_entry() //  [R1]
         { []
         }
     {offset
       c5qcv: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5qcw; else goto c5qcx;
       c5qcw: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qcx: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call poly_go1_r5kSg_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5poM_info" {
     sat_s5poM_info:
         const sat_s5poM_entry;
         const 1;
         const 16;
 },
 Data.OldList.transpose_entry() //  [R2]
         { []
         }
     {offset
       c5qcC: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5qcD; else goto u5qcT;
       c5qcD: // global
           R2 = R2;
           R1 = Data.OldList.transpose_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       u5qcT: // global
           P64[Sp - 8] = R2;
           Sp = Sp - 8;
           call _c5qbV() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.transpose_info" {
     Data.OldList.transpose_info:
         const Data.OldList.transpose_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5qbV() //  []
         { []
         }
     {offset
       c5qbV: // global
           _s5poF::P64 = P64[Sp];
           I64[Sp] = block_c5qbY_info;
           R1 = _s5poF::P64;
           if (R1 & 7 != 0) goto u5qcV; else goto c5qbZ;
       u5qcV: // global
           call _c5qbY(R1) args: 0, res: 0, upd: 0;
       c5qbZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5qbY() //  [R1]
         { []
         }
     {offset
       c5qbY: // global
           if (R1 & 7 == 1) goto c5qcz; else goto c5qcA;
       c5qcz: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5qcA: // global
           I64[Sp - 8] = block_c5qc4_info;
           _s5poI::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5poI::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qcW; else goto c5qc5;
       u5qcW: // global
           call _c5qc4(R1) args: 0, res: 0, upd: 0;
       c5qc5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qbY_info" {
     block_c5qbY_info:
         const _c5qbY;
         const 0;
         const 30;
 },
 _c5qc4() //  [R1]
         { []
         }
     {offset
       c5qc4: // global
           _s5poI::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5qcL; else goto c5qcO;
       c5qcL: // global
           P64[Sp + 8] = _s5poI::P64;
           Sp = Sp + 8;
           call _c5qbV() args: 0, res: 0, upd: 0;
       c5qcO: // global
           Hp = Hp + 104;
           if (Hp > HpLim) (likely: False) goto c5qcR; else goto c5qcQ;
       c5qcR: // global
           HpAlloc = 104;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qcQ: // global
           _s5poK::P64 = P64[R1 + 6];
           _s5poL::P64 = P64[R1 + 14];
           I64[Hp - 96] = sat_s5poQ_info;
           P64[Hp - 80] = _s5poI::P64;
           P64[Hp - 72] = _s5poL::P64;
           I64[Hp - 64] = sat_s5poM_info;
           P64[Hp - 48] = _s5poI::P64;
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = _s5poK::P64;
           P64[Hp - 24] = Hp - 64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 96;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qc4_info" {
     block_c5qc4_info:
         const _c5qc4;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.020149357 UTC

[section ""data" . Data.OldList.select_closure" {
     Data.OldList.select_closure:
         const Data.OldList.select_info;
 },
 Data.OldList.select_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5qdW: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5qdX; else goto c5qdY;
       c5qdX: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.select_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5qdY: // global
           I64[Sp - 24] = block_c5qdQ_info;
           _s5poR::P64 = R2;
           R2 = R3;
           R1 = _s5poR::P64;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.select_info" {
     Data.OldList.select_info:
         const Data.OldList.select_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5qdQ() //  [R1]
         { []
         }
     {offset
       c5qdQ: // global
           _s5poS::P64 = P64[Sp + 8];
           _s5poT::P64 = P64[Sp + 16];
           if (R1 & 7 == 1) goto c5qdT; else goto c5qdU;
       c5qdT: // global
           Hp = Hp + 96;
           _s5poU::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5qeg; else goto c5qe6;
       c5qe6: // global
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = _s5poT::P64;
           I64[Hp - 64] = :_con_info;
           P64[Hp - 56] = _s5poS::P64;
           P64[Hp - 48] = Hp - 88;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _s5poT::P64;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 62;
           R1 = Hp - 15;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5qdU: // global
           Hp = Hp + 96;
           _s5poU::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5qeg; else goto c5qef;
       c5qeg: // global
           HpAlloc = 96;
           R1 = _s5poU::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qef: // global
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = _s5poT::P64;
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = _s5poT::P64;
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = _s5poS::P64;
           P64[Hp - 24] = Hp - 64;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 88;
           R1 = Hp - 15;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qdQ_info" {
     block_c5qdQ_info:
         const _c5qdQ;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.036072426 UTC

[section ""data" . Data.OldList.partition_closure" {
     Data.OldList.partition_closure:
         const Data.OldList.partition_info;
 },
 w1_s5ppk_entry() //  [R1]
         { []
         }
     {offset
       c5qf4: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5qf5; else goto c5qf6;
       c5qf5: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qf6: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5qf1_info;
           R2 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           call $wgo_s5ppf_entry(R2, R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . w1_s5ppk_info" {
     w1_s5ppk_info:
         const w1_s5ppk_entry;
         const 2;
         const 18;
 },
 _c5qf1() //  [R1, R2]
         { []
         }
     {offset
       c5qf1: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qf9; else goto c5qf8;
       c5qf9: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c5qf8: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5qf1_info" {
     block_c5qf1_info:
         const _c5qf1;
         const 0;
         const 30;
 },
 $wgo_s5ppf_entry() //  [R1, R2]
         { []
         }
     {offset
       c5qfe: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5qff; else goto c5qfg;
       c5qff: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5qfg: // global
           I64[Sp - 24] = block_c5qeR_info;
           _s5ppf::P64 = R1;
           _s5ppd::P64 = P64[R1 + 7];
           R1 = R2;
           P64[Sp - 16] = _s5ppd::P64;
           P64[Sp - 8] = _s5ppf::P64;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5qfI; else goto c5qeS;
       u5qfI: // global
           call _c5qeR(R1) args: 0, res: 0, upd: 0;
       c5qeS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . $wgo_s5ppf_info" {
     $wgo_s5ppf_info:
         const $wgo_s5ppf_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c5qeR() //  [R1]
         { []
         }
     {offset
       c5qeR: // global
           if (R1 & 7 == 1) goto c5qfb; else goto c5qfc;
       c5qfb: // global
           R2 = GHC.Types.[]_closure+1;
           R1 = GHC.Types.[]_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
       c5qfc: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5qfm; else goto c5qfl;
       c5qfm: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qfl: // global
           _s5ppi::P64 = P64[R1 + 6];
           _s5ppj::P64 = P64[R1 + 14];
           I64[Hp - 24] = w1_s5ppk_info;
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = _s5ppj::P64;
           I64[Sp] = block_c5qfj_info;
           R2 = _s5ppi::P64;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5ppi::P64;
           P64[Sp + 16] = Hp - 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qeR_info" {
     block_c5qeR_info:
         const _c5qeR;
         const 2;
         const 30;
 },
 _c5qfj() //  [R1]
         { []
         }
     {offset
       c5qfj: // global
           _c5qeX::P64 = P64[Sp + 16];
           _s5ppi::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5qfu; else goto c5qfD;
       c5qfu: // global
           Hp = Hp + 72;
           _s5ppo::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5qfG; else goto c5qfw;
       c5qfw: // global
           I64[Hp - 64] = stg_sel_1_upd_info;
           P64[Hp - 48] = _c5qeX::P64;
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = _s5ppi::P64;
           P64[Hp - 24] = Hp - 64;
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _c5qeX::P64;
           R2 = Hp - 38;
           R1 = Hp - 16;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
       c5qfD: // global
           Hp = Hp + 72;
           _s5ppo::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5qfG; else goto c5qfF;
       c5qfG: // global
           HpAlloc = 72;
           R1 = _s5ppo::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qfF: // global
           I64[Hp - 64] = stg_sel_1_upd_info;
           P64[Hp - 48] = _c5qeX::P64;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _c5qeX::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5ppi::P64;
           P64[Hp] = Hp - 40;
           R2 = Hp - 64;
           R1 = Hp - 14;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qfj_info" {
     block_c5qfj_info:
         const _c5qfj;
         const 2;
         const 30;
 },
 Data.OldList.partition_entry() //  [R2, R3]
         { []
         }
     {offset
       c5qfM: // global
           _s5ppe::P64 = R3;
           _s5ppd::P64 = R2;
           if ((Sp + -8) < SpLim) (likely: False) goto c5qfN; else goto c5qfO;
       c5qfO: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5qfQ; else goto c5qfP;
       c5qfQ: // global
           HpAlloc = 16;
           goto c5qfN;
       c5qfN: // global
           R3 = _s5ppe::P64;
           R2 = _s5ppd::P64;
           R1 = Data.OldList.partition_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5qfP: // global
           I64[Hp - 8] = $wgo_s5ppf_info;
           P64[Hp] = _s5ppd::P64;
           I64[Sp - 8] = block_c5qfJ_info;
           R2 = _s5ppe::P64;
           R1 = Hp - 7;
           Sp = Sp - 8;
           call $wgo_s5ppf_entry(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.partition_info" {
     Data.OldList.partition_info:
         const Data.OldList.partition_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5qfJ() //  [R1, R2]
         { []
         }
     {offset
       c5qfJ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qfT; else goto c5qfS;
       c5qfT: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c5qfS: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qfJ_info" {
     block_c5qfJ_info:
         const _c5qfJ;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.068056809 UTC

[section ""data" . Data.OldList.pairWithNil_closure" {
     Data.OldList.pairWithNil_closure:
         const Data.OldList.pairWithNil_info;
 },
 Data.OldList.pairWithNil_entry() //  [R2]
         { []
         }
     {offset
       c5qgT: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qgX; else goto c5qgW;
       c5qgX: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Data.OldList.pairWithNil_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5qgW: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = GHC.Types.[]_closure+1;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.pairWithNil_info" {
     Data.OldList.pairWithNil_info:
         const Data.OldList.pairWithNil_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.075868034 UTC

[section ""data" . Data.OldList.mapAccumLF_closure" {
     Data.OldList.mapAccumLF_closure:
         const Data.OldList.mapAccumLF_info;
 },
 ds1_s5ppQ_entry() //  [R1]
         { []
         }
     {offset
       c5qhg: // global
           _s5ppQ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5qhh; else goto c5qhi;
       c5qhi: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qhk; else goto c5qhj;
       c5qhk: // global
           HpAlloc = 24;
           goto c5qhh;
       c5qhh: // global
           R1 = _s5ppQ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qhj: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5ppQ::P64;
           _s5ppN::P64 = P64[_s5ppQ::P64 + 16];
           _s5ppP::P64 = P64[_s5ppQ::P64 + 24];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _s5ppP::P64;
           R2 = Hp - 16;
           R1 = _s5ppN::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds1_s5ppQ_info" {
     ds1_s5ppQ_info:
         const ds1_s5ppQ_entry;
         const 2;
         const 18;
 },
 Data.OldList.mapAccumLF_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5qhq: // global
           Hp = Hp + 192;
           if (Hp > HpLim) (likely: False) goto c5qhu; else goto c5qht;
       c5qhu: // global
           HpAlloc = 192;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.mapAccumLF_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5qht: // global
           I64[Hp - 184] = stg_ap_3_upd_info;
           P64[Hp - 168] = R2;
           P64[Hp - 160] = R5;
           P64[Hp - 152] = R3;
           I64[Hp - 144] = ds1_s5ppQ_info;
           P64[Hp - 128] = R4;
           _c5qha::P64 = Hp - 184;
           P64[Hp - 120] = _c5qha::P64;
           I64[Hp - 112] = stg_sel_1_upd_info;
           _c5qhb::P64 = Hp - 144;
           P64[Hp - 96] = _c5qhb::P64;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = _c5qha::P64;
           I64[Hp - 64] = :_con_info;
           P64[Hp - 56] = Hp - 88;
           P64[Hp - 48] = Hp - 112;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _c5qhb::P64;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 62;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.mapAccumLF_info" {
     Data.OldList.mapAccumLF_info:
         const Data.OldList.mapAccumLF_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.089427574 UTC

[section ""data" . Data.OldList.$wmapAccumL_closure" {
     Data.OldList.$wmapAccumL_closure:
         const Data.OldList.$wmapAccumL_info;
 },
 ds1_s5pqf_entry() //  [R1]
         { []
         }
     {offset
       c5qia: // global
           _s5pqf::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c5qib; else goto c5qic;
       c5qic: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qie; else goto c5qid;
       c5qie: // global
           HpAlloc = 24;
           goto c5qib;
       c5qib: // global
           R1 = _s5pqf::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qid: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5pqf::P64;
           _s5pq8::P64 = P64[_s5pqf::P64 + 16];
           _s5pqd::P64 = P64[_s5pqf::P64 + 24];
           _s5pqe::P64 = P64[_s5pqf::P64 + 32];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _s5pqe::P64;
           I64[Sp - 24] = block_c5qi7_info;
           R4 = _s5pqd::P64;
           R3 = Hp - 16;
           R2 = _s5pq8::P64;
           Sp = Sp - 24;
           call Data.OldList.$wmapAccumL_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds1_s5pqf_info" {
     ds1_s5pqf_info:
         const ds1_s5pqf_entry;
         const 3;
         const 15;
 },
 _c5qi7() //  [R1, R2]
         { []
         }
     {offset
       c5qi7: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qih; else goto c5qig;
       c5qih: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c5qig: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5qi7_info" {
     block_c5qi7_info:
         const _c5qi7;
         const 0;
         const 30;
 },
 Data.OldList.$wmapAccumL_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5qim: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5qin; else goto c5qio;
       c5qin: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.$wmapAccumL_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5qio: // global
           I64[Sp - 24] = block_c5qhV_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5qiy; else goto c5qhW;
       u5qiy: // global
           call _c5qhV(R1) args: 0, res: 0, upd: 0;
       c5qhW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.$wmapAccumL_info" {
     Data.OldList.$wmapAccumL_info:
         const Data.OldList.$wmapAccumL_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5qhV() //  [R1]
         { []
         }
     {offset
       c5qhV: // global
           _s5pq9::P64 = P64[Sp + 16];
           if (R1 & 7 == 1) goto c5qij; else goto c5qik;
       c5qij: // global
           R2 = GHC.Types.[]_closure+1;
           R1 = _s5pq9::P64;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
       c5qik: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto c5qix; else goto c5qiw;
       c5qix: // global
           HpAlloc = 176;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qiw: // global
           _s5pqc::P64 = P64[R1 + 6];
           _s5pqd::P64 = P64[R1 + 14];
           I64[Hp - 168] = stg_ap_3_upd_info;
           _s5pq8::P64 = P64[Sp + 8];
           P64[Hp - 152] = _s5pq8::P64;
           P64[Hp - 144] = _s5pq9::P64;
           P64[Hp - 136] = _s5pqc::P64;
           I64[Hp - 128] = ds1_s5pqf_info;
           P64[Hp - 112] = _s5pq8::P64;
           P64[Hp - 104] = _s5pqd::P64;
           _c5qi1::P64 = Hp - 168;
           P64[Hp - 96] = _c5qi1::P64;
           I64[Hp - 88] = stg_sel_1_upd_info;
           _c5qi2::P64 = Hp - 128;
           P64[Hp - 72] = _c5qi2::P64;
           I64[Hp - 64] = stg_sel_1_upd_info;
           P64[Hp - 48] = _c5qi1::P64;
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _c5qi2::P64;
           R2 = Hp - 38;
           R1 = Hp - 16;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qhV_info" {
     block_c5qhV_info:
         const _c5qhV;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.106255569 UTC

[section ""data" . Data.OldList.mapAccumL_closure" {
     Data.OldList.mapAccumL_closure:
         const Data.OldList.mapAccumL_info;
 },
 Data.OldList.mapAccumL_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5qjf: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5qjg; else goto c5qjh;
       c5qjg: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.mapAccumL_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5qjh: // global
           I64[Sp - 8] = block_c5qjc_info;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Data.OldList.$wmapAccumL_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.mapAccumL_info" {
     Data.OldList.mapAccumL_info:
         const Data.OldList.mapAccumL_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5qjc() //  [R1, R2]
         { []
         }
     {offset
       c5qjc: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qjk; else goto c5qjj;
       c5qjk: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c5qjj: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qjc_info" {
     block_c5qjc_info:
         const _c5qjc;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.119898008 UTC

[section ""data" . Data.OldList.$wmapAccumR_closure" {
     Data.OldList.$wmapAccumR_closure:
         const Data.OldList.$wmapAccumR_info;
 },
 ds_s5pqM_entry() //  [R1]
         { []
         }
     {offset
       c5qjN: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5qjO; else goto c5qjP;
       c5qjO: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qjP: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5qjK_info;
           R4 = P64[R1 + 32];
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call Data.OldList.$wmapAccumR_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds_s5pqM_info" {
     ds_s5pqM_info:
         const ds_s5pqM_entry;
         const 3;
         const 15;
 },
 _c5qjK() //  [R1, R2]
         { []
         }
     {offset
       c5qjK: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qjS; else goto c5qjR;
       c5qjS: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c5qjR: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5qjK_info" {
     block_c5qjK_info:
         const _c5qjK;
         const 0;
         const 30;
 },
 ds1_s5pqQ_entry() //  [R1]
         { []
         }
     {offset
       c5qjY: // global
           _s5pqQ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5qjZ; else goto c5qk0;
       c5qk0: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qk2; else goto c5qk1;
       c5qk2: // global
           HpAlloc = 24;
           goto c5qjZ;
       c5qjZ: // global
           R1 = _s5pqQ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qk1: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5pqQ::P64;
           _s5pqG::P64 = P64[_s5pqQ::P64 + 16];
           _s5pqK::P64 = P64[_s5pqQ::P64 + 24];
           _s5pqM::P64 = P64[_s5pqQ::P64 + 32];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _s5pqM::P64;
           R3 = _s5pqK::P64;
           R2 = Hp - 16;
           R1 = _s5pqG::P64;
           Sp = Sp - 16;
           call stg_ap_pp_fast(R3, R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds1_s5pqQ_info" {
     ds1_s5pqQ_info:
         const ds1_s5pqQ_entry;
         const 3;
         const 15;
 },
 Data.OldList.$wmapAccumR_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5qk7: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5qk8; else goto c5qk9;
       c5qk8: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.$wmapAccumR_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5qk9: // global
           I64[Sp - 24] = block_c5qjA_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5qkj; else goto c5qjB;
       u5qkj: // global
           call _c5qjA(R1) args: 0, res: 0, upd: 0;
       c5qjB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.$wmapAccumR_info" {
     Data.OldList.$wmapAccumR_info:
         const Data.OldList.$wmapAccumR_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5qjA() //  [R1]
         { []
         }
     {offset
       c5qjA: // global
           _s5pqH::P64 = P64[Sp + 16];
           if (R1 & 7 == 1) goto c5qk4; else goto c5qk5;
       c5qk4: // global
           R2 = GHC.Types.[]_closure+1;
           R1 = _s5pqH::P64;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
       c5qk5: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto c5qki; else goto c5qkh;
       c5qki: // global
           HpAlloc = 176;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qkh: // global
           _s5pqK::P64 = P64[R1 + 6];
           _s5pqL::P64 = P64[R1 + 14];
           I64[Hp - 168] = ds_s5pqM_info;
           _s5pqG::P64 = P64[Sp + 8];
           P64[Hp - 152] = _s5pqG::P64;
           P64[Hp - 144] = _s5pqH::P64;
           P64[Hp - 136] = _s5pqL::P64;
           I64[Hp - 128] = ds1_s5pqQ_info;
           P64[Hp - 112] = _s5pqG::P64;
           P64[Hp - 104] = _s5pqK::P64;
           _c5qjG::P64 = Hp - 168;
           P64[Hp - 96] = _c5qjG::P64;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = _c5qjG::P64;
           I64[Hp - 64] = stg_sel_1_upd_info;
           _c5qjT::P64 = Hp - 128;
           P64[Hp - 48] = _c5qjT::P64;
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _c5qjT::P64;
           R2 = Hp - 38;
           R1 = Hp - 16;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qjA_info" {
     block_c5qjA_info:
         const _c5qjA;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.141994595 UTC

[section ""data" . Data.OldList.mapAccumR_closure" {
     Data.OldList.mapAccumR_closure:
         const Data.OldList.mapAccumR_info;
 },
 Data.OldList.mapAccumR_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5ql5: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5ql6; else goto c5ql7;
       c5ql6: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.mapAccumR_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5ql7: // global
           I64[Sp - 8] = block_c5ql2_info;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Data.OldList.$wmapAccumR_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.mapAccumR_info" {
     Data.OldList.mapAccumR_info:
         const Data.OldList.mapAccumR_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5ql2() //  [R1, R2]
         { []
         }
     {offset
       c5ql2: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qla; else goto c5ql9;
       c5qla: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c5ql9: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ql2_info" {
     block_c5ql2_info:
         const _c5ql2;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.155591053 UTC

[section ""data" . Data.OldList.insertBy_closure" {
     Data.OldList.insertBy_closure:
         const Data.OldList.insertBy_info;
 },
 Data.OldList.insertBy_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5qlt: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5qlu; else goto c5qlv;
       c5qlu: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.insertBy_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5qlv: // global
           I64[Sp - 8] = block_c5qlq_info;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Data.OldList.$winsertBy_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.insertBy_info" {
     Data.OldList.insertBy_info:
         const Data.OldList.insertBy_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5qlq() //  [R1, R2]
         { []
         }
     {offset
       c5qlq: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qly; else goto c5qlx;
       c5qly: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c5qlx: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qlq_info" {
     block_c5qlq_info:
         const _c5qlq;
         const 0;
         const 30;
 },
 section ""data" . Data.OldList.$winsertBy_closure" {
     Data.OldList.$winsertBy_closure:
         const Data.OldList.$winsertBy_info;
 },
 sat_s5prr_entry() //  [R1]
         { []
         }
     {offset
       c5qlS: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5qlT; else goto c5qlU;
       c5qlT: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qlU: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R4 = P64[R1 + 32];
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.OldList.insertBy_entry(R4,
                                            R3,
                                            R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5prr_info" {
     sat_s5prr_info:
         const sat_s5prr_entry;
         const 3;
         const 15;
 },
 Data.OldList.$winsertBy_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5qlZ: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c5qm0; else goto c5qm1;
       c5qm0: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.$winsertBy_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5qm1: // global
           I64[Sp - 24] = block_c5qlD_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5qme; else goto c5qlE;
       u5qme: // global
           call _c5qlD(R1) args: 0, res: 0, upd: 0;
       c5qlE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.$winsertBy_info" {
     Data.OldList.$winsertBy_info:
         const Data.OldList.$winsertBy_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5qlD() //  [R1]
         { []
         }
     {offset
       c5qlD: // global
           _s5prl::P64 = P64[Sp + 16];
           if (R1 & 7 == 1) goto c5qlW; else goto c5qlX;
       c5qlW: // global
           R2 = GHC.Types.[]_closure+1;
           R1 = _s5prl::P64;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
       c5qlX: // global
           I64[Sp - 24] = block_c5qlJ_info;
           _s5pro::P64 = P64[R1 + 6];
           R3 = _s5pro::P64;
           R2 = _s5prl::P64;
           _s5prn::P64 = R1;
           _s5prp::P64 = P64[R1 + 14];
           R1 = P64[Sp + 8];
           P64[Sp - 16] = _s5pro::P64;
           P64[Sp - 8] = _s5prp::P64;
           P64[Sp] = _s5prn::P64;
           Sp = Sp - 24;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qlD_info" {
     block_c5qlD_info:
         const _c5qlD;
         const 2;
         const 30;
 },
 _c5qlJ() //  [R1]
         { []
         }
     {offset
       c5qlJ: // global
           _s5prl::P64 = P64[Sp + 40];
           if (R1 & 7 == 3) goto c5qm9; else goto c5qm8;
       c5qm9: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c5qmc; else goto c5qmb;
       c5qmc: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qmb: // global
           I64[Hp - 32] = sat_s5prr_info;
           P64[Hp - 16] = P64[Sp + 32];
           P64[Hp - 8] = _s5prl::P64;
           P64[Hp] = P64[Sp + 16];
           R2 = Hp - 32;
           R1 = P64[Sp + 8];
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
       c5qm8: // global
           R2 = P64[Sp + 24];
           R1 = _s5prl::P64;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qlJ_info" {
     block_c5qlJ_info:
         const _c5qlJ;
         const 5;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.17841244 UTC

[section ""data" . Data.OldList.insert_closure" {
     Data.OldList.insert_closure:
         const Data.OldList.insert_info;
 },
 sat_s5prv_entry() //  [R1]
         { []
         }
     {offset
       c5qn2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5qn3; else goto c5qn4;
       c5qn3: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qn4: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.compare_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5prv_info" {
     sat_s5prv_info:
         const sat_s5prv_entry;
         const 1;
         const 16;
 },
 Data.OldList.insert_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5qn8: // global
           _s5pru::P64 = R4;
           _s5prt::P64 = R3;
           _s5prs::P64 = R2;
           if ((Sp + -8) < SpLim) (likely: False) goto c5qn9; else goto c5qna;
       c5qna: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qnc; else goto c5qnb;
       c5qnc: // global
           HpAlloc = 24;
           goto c5qn9;
       c5qn9: // global
           R4 = _s5pru::P64;
           R3 = _s5prt::P64;
           R2 = _s5prs::P64;
           R1 = Data.OldList.insert_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5qnb: // global
           I64[Hp - 16] = sat_s5prv_info;
           P64[Hp] = _s5prs::P64;
           I64[Sp - 8] = block_c5qn5_info;
           R4 = _s5pru::P64;
           R3 = _s5prt::P64;
           R2 = Hp - 16;
           Sp = Sp - 8;
           call Data.OldList.$winsertBy_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.insert_info" {
     Data.OldList.insert_info:
         const Data.OldList.insert_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5qn5() //  [R1, R2]
         { []
         }
     {offset
       c5qn5: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qnf; else goto c5qne;
       c5qnf: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c5qne: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qn5_info" {
     block_c5qn5_info:
         const _c5qn5;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.188724466 UTC

[section ""cstring" . lvl_r5kSh_bytes" {
     lvl_r5kSh_bytes:
         I8[] [76,105,115,116,46,109,97,120,105,109,117,109,66,121,58,32,101,109,112,116,121,32,108,105,115,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.193520929 UTC

[section ""data" . Data.OldList.maximumBy1_closure" {
     Data.OldList.maximumBy1_closure:
         const Data.OldList.maximumBy1_info;
         const 0;
         const 0;
         const 0;
 },
 Data.OldList.maximumBy1_entry() //  [R1]
         { []
         }
     {offset
       c5qnG: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5qnH; else goto c5qnI;
       c5qnH: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qnI: // global
           (_c5qnB::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5qnB::I64 == 0) goto c5qnD; else goto c5qnC;
       c5qnD: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5qnC: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5qnB::I64;
           I64[Sp - 24] = block_c5qnE_info;
           R2 = lvl_r5kSh_bytes;
           Sp = Sp - 24;
           call GHC.CString.unpackCString#_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . Data.OldList.maximumBy1_info" {
     Data.OldList.maximumBy1_info:
         const Data.OldList.maximumBy1_entry;
         const 0;
         const 4294967317;
         const S5qnM_srt;
 },
 _c5qnE() //  [R1]
         { []
         }
     {offset
       c5qnE: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5qnE_info" {
     block_c5qnE_info:
         const _c5qnE;
         const 0;
         const 4294967326;
         const S5qnM_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.206689369 UTC

[section ""data" . Data.OldList.maximumBy_closure" {
     Data.OldList.maximumBy_closure:
         const Data.OldList.maximumBy_info;
         const 0;
 },
 sat_s5prM_entry() //  [R1]
         { []
         }
     {offset
       c5qou: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5qov; else goto c5qow;
       c5qov: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qow: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 40] = block_c5qoo_info;
           _s5prJ::P64 = P64[R1 + 32];
           R3 = _s5prJ::P64;
           _s5prH::P64 = P64[R1 + 24];
           R2 = _s5prH::P64;
           R1 = P64[R1 + 16];
           P64[Sp - 32] = _s5prH::P64;
           P64[Sp - 24] = _s5prJ::P64;
           Sp = Sp - 40;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5prM_info" {
     sat_s5prM_info:
         const sat_s5prM_entry;
         const 3;
         const 15;
 },
 _c5qoo() //  [R1]
         { []
         }
     {offset
       c5qoo: // global
           if (R1 & 7 == 3) goto c5qos; else goto c5qor;
       c5qos: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 24, res: 0, upd: 24;
       c5qor: // global
           R1 = P64[Sp + 16];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5qoo_info" {
     block_c5qoo_info:
         const _c5qoo;
         const 2;
         const 30;
 },
 Data.OldList.maximumBy_entry() //  [R2, R3]
         { []
         }
     {offset
       c5qoH: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5qoI; else goto c5qoJ;
       c5qoI: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.maximumBy_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5qoJ: // global
           I64[Sp - 16] = block_c5qo3_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5qp2; else goto c5qo4;
       u5qp2: // global
           call _c5qo3(R1) args: 0, res: 0, upd: 0;
       c5qo4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.maximumBy_info" {
     Data.OldList.maximumBy_info:
         const Data.OldList.maximumBy_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S5qnM_srt+8;
 },
 _c5qo3() //  [R1]
         { []
         }
     {offset
       c5qo3: // global
           if (R1 & 7 == 1) goto c5qoE; else goto c5qoF;
       c5qoE: // global
           R1 = Data.OldList.maximumBy1_closure;
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5qoF: // global
           P64[Sp - 8] = P64[R1 + 6];
           P64[Sp] = P64[R1 + 14];
           Sp = Sp - 8;
           call _c5qoc() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5qo3_info" {
     block_c5qo3_info:
         const _c5qo3;
         const 1;
         const 4294967326;
         const S5qnM_srt+16;
 },
 _c5qoc() //  []
         { []
         }
     {offset
       c5qoc: // global
           I64[Sp - 8] = block_c5qoe_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qp0; else goto c5qof;
       u5qp0: // global
           call _c5qoe(R1) args: 0, res: 0, upd: 0;
       c5qof: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5qoe() //  [R1]
         { []
         }
     {offset
       c5qoe: // global
           _s5prH::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5qoR; else goto c5qoS;
       c5qoR: // global
           R1 = _s5prH::P64;
           Sp = Sp + 32;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5qoS: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c5qoV; else goto c5qoU;
       c5qoV: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qoU: // global
           _s5prJ::P64 = P64[R1 + 6];
           _s5prK::P64 = P64[R1 + 14];
           I64[Hp - 32] = sat_s5prM_info;
           P64[Hp - 16] = P64[Sp + 24];
           P64[Hp - 8] = _s5prH::P64;
           P64[Hp] = _s5prJ::P64;
           P64[Sp + 16] = _s5prK::P64;
           P64[Sp + 8] = Hp - 32;
           Sp = Sp + 8;
           call _c5qoc() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5qoe_info" {
     block_c5qoe_info:
         const _c5qoe;
         const 131;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.218445627 UTC

[section ""cstring" . lvl1_r5kSi_bytes" {
     lvl1_r5kSi_bytes:
         I8[] [76,105,115,116,46,109,105,110,105,109,117,109,66,121,58,32,101,109,112,116,121,32,108,105,115,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.221092133 UTC

[section ""data" . Data.OldList.minimumBy1_closure" {
     Data.OldList.minimumBy1_closure:
         const Data.OldList.minimumBy1_info;
         const 0;
         const 0;
         const 0;
 },
 Data.OldList.minimumBy1_entry() //  [R1]
         { []
         }
     {offset
       c5qpN: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5qpO; else goto c5qpP;
       c5qpO: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qpP: // global
           (_c5qpI::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5qpI::I64 == 0) goto c5qpK; else goto c5qpJ;
       c5qpK: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5qpJ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5qpI::I64;
           I64[Sp - 24] = block_c5qpL_info;
           R2 = lvl1_r5kSi_bytes;
           Sp = Sp - 24;
           call GHC.CString.unpackCString#_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . Data.OldList.minimumBy1_info" {
     Data.OldList.minimumBy1_info:
         const Data.OldList.minimumBy1_entry;
         const 0;
         const 4294967317;
         const S5qnM_srt;
 },
 _c5qpL() //  [R1]
         { []
         }
     {offset
       c5qpL: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5qpL_info" {
     block_c5qpL_info:
         const _c5qpL;
         const 0;
         const 4294967326;
         const S5qnM_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.228984433 UTC

[section ""data" . Data.OldList.minimumBy_closure" {
     Data.OldList.minimumBy_closure:
         const Data.OldList.minimumBy_info;
         const 0;
 },
 sat_s5ps0_entry() //  [R1]
         { []
         }
     {offset
       c5qqA: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5qqB; else goto c5qqC;
       c5qqB: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qqC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 40] = block_c5qqu_info;
           _s5prX::P64 = P64[R1 + 32];
           R3 = _s5prX::P64;
           _s5prV::P64 = P64[R1 + 24];
           R2 = _s5prV::P64;
           R1 = P64[R1 + 16];
           P64[Sp - 32] = _s5prV::P64;
           P64[Sp - 24] = _s5prX::P64;
           Sp = Sp - 40;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5ps0_info" {
     sat_s5ps0_info:
         const sat_s5ps0_entry;
         const 3;
         const 15;
 },
 _c5qqu() //  [R1]
         { []
         }
     {offset
       c5qqu: // global
           if (R1 & 7 == 3) goto c5qqy; else goto c5qqx;
       c5qqy: // global
           R1 = P64[Sp + 16];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 24, res: 0, upd: 24;
       c5qqx: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5qqu_info" {
     block_c5qqu_info:
         const _c5qqu;
         const 2;
         const 30;
 },
 Data.OldList.minimumBy_entry() //  [R2, R3]
         { []
         }
     {offset
       c5qqN: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5qqO; else goto c5qqP;
       c5qqO: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.minimumBy_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5qqP: // global
           I64[Sp - 16] = block_c5qq9_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5qr8; else goto c5qqa;
       u5qr8: // global
           call _c5qq9(R1) args: 0, res: 0, upd: 0;
       c5qqa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.minimumBy_info" {
     Data.OldList.minimumBy_info:
         const Data.OldList.minimumBy_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S5qnM_srt+24;
 },
 _c5qq9() //  [R1]
         { []
         }
     {offset
       c5qq9: // global
           if (R1 & 7 == 1) goto c5qqK; else goto c5qqL;
       c5qqK: // global
           R1 = Data.OldList.minimumBy1_closure;
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5qqL: // global
           P64[Sp - 8] = P64[R1 + 6];
           P64[Sp] = P64[R1 + 14];
           Sp = Sp - 8;
           call _c5qqi() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5qq9_info" {
     block_c5qq9_info:
         const _c5qq9;
         const 1;
         const 4294967326;
         const S5qnM_srt+32;
 },
 _c5qqi() //  []
         { []
         }
     {offset
       c5qqi: // global
           I64[Sp - 8] = block_c5qqk_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qr6; else goto c5qql;
       u5qr6: // global
           call _c5qqk(R1) args: 0, res: 0, upd: 0;
       c5qql: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5qqk() //  [R1]
         { []
         }
     {offset
       c5qqk: // global
           _s5prV::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5qqX; else goto c5qqY;
       c5qqX: // global
           R1 = _s5prV::P64;
           Sp = Sp + 32;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5qqY: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c5qr1; else goto c5qr0;
       c5qr1: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qr0: // global
           _s5prX::P64 = P64[R1 + 6];
           _s5prY::P64 = P64[R1 + 14];
           I64[Hp - 32] = sat_s5ps0_info;
           P64[Hp - 16] = P64[Sp + 24];
           P64[Hp - 8] = _s5prV::P64;
           P64[Hp] = _s5prX::P64;
           P64[Sp + 16] = _s5prY::P64;
           P64[Sp + 8] = Hp - 32;
           Sp = Sp + 8;
           call _c5qqi() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5qqk_info" {
     block_c5qqk_info:
         const _c5qqk;
         const 131;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.241607334 UTC

[section ""data" . sat_s5ps1_closure" {
     sat_s5ps1_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.243351224 UTC

[section ""data" . sat_s5ps2_closure" {
     sat_s5ps2_closure:
         const :_con_info;
         const sat_s5ps1_closure+1;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.245819916 UTC

[section ""data" . Data.OldList.genericLength2_closure" {
     Data.OldList.genericLength2_closure:
         const Data.OldList.genericLength2_info;
         const 0;
         const 0;
         const 0;
 },
 Data.OldList.genericLength2_entry() //  [R1]
         { []
         }
     {offset
       c5qrS: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5qrT; else goto c5qrU;
       c5qrT: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qrU: // global
           (_c5qrP::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5qrP::I64 == 0) goto c5qrR; else goto c5qrQ;
       c5qrR: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5qrQ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5qrP::I64;
           R3 = sat_s5ps2_closure+2;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.OldList.genericLength2_info" {
     Data.OldList.genericLength2_info:
         const Data.OldList.genericLength2_entry;
         const 0;
         const 4294967317;
         const S5qnM_srt+40;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.250236004 UTC

[section ""data" . Data.OldList.genericLength1_closure" {
     Data.OldList.genericLength1_closure:
         const Data.OldList.genericLength1_info;
         const 0;
         const 0;
         const 0;
 },
 Data.OldList.genericLength1_entry() //  [R1]
         { []
         }
     {offset
       c5qsa: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5qsb; else goto c5qsc;
       c5qsb: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qsc: // global
           (_c5qs7::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5qs7::I64 == 0) goto c5qs9; else goto c5qs8;
       c5qs9: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5qs8: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5qs7::I64;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.OldList.genericLength1_info" {
     Data.OldList.genericLength1_info:
         const Data.OldList.genericLength1_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.256432303 UTC

[section ""data" . Data.OldList.strictGenericLength_closure" {
     Data.OldList.strictGenericLength_closure:
         const Data.OldList.strictGenericLength_info;
         const 0;
 },
 lvl12_s5ps5_entry() //  [R1]
         { []
         }
     {offset
       c5qsw: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5qsx; else goto c5qsy;
       c5qsx: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qsy: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl12_s5ps5_info" {
     lvl12_s5ps5_info:
         const lvl12_s5ps5_entry;
         const 1;
         const 4294967312;
         const S5qnM_srt+48;
 },
 sat_s5psd_entry() //  [R1]
         { []
         }
     {offset
       c5qsC: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5qsD; else goto c5qsE;
       c5qsD: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qsE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength1_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5psd_info" {
     sat_s5psd_info:
         const sat_s5psd_entry;
         const 1;
         const 4294967312;
         const S5qnM_srt+56;
 },
 Data.OldList.strictGenericLength_entry() //  [R2, R3]
         { []
         }
     {offset
       c5qsH: // global
           _s5ps4::P64 = R3;
           _s5ps3::P64 = R2;
           if ((Sp + -64) < SpLim) (likely: False) goto c5qsI; else goto c5qsJ;
       c5qsJ: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5qsL; else goto c5qsK;
       c5qsL: // global
           HpAlloc = 48;
           goto c5qsI;
       c5qsI: // global
           R3 = _s5ps4::P64;
           R2 = _s5ps3::P64;
           R1 = Data.OldList.strictGenericLength_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5qsK: // global
           I64[Hp - 40] = lvl12_s5ps5_info;
           P64[Hp - 24] = _s5ps3::P64;
           I64[Hp - 16] = sat_s5psd_info;
           P64[Hp] = _s5ps3::P64;
           P64[Sp - 32] = Hp - 40;
           P64[Sp - 24] = _s5ps3::P64;
           P64[Sp - 16] = _s5ps4::P64;
           P64[Sp - 8] = Hp - 16;
           Sp = Sp - 32;
           call _c5qsN() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.strictGenericLength_info" {
     Data.OldList.strictGenericLength_info:
         const Data.OldList.strictGenericLength_entry;
         const 0;
         const 30064771086;
         const 8589934607;
         const S5qnM_srt+48;
 },
 _c5qsN() //  []
         { []
         }
     {offset
       c5qsN: // global
           I64[Sp - 8] = block_c5qsP_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qt9; else goto c5qsR;
       u5qt9: // global
           call _c5qsP(R1) args: 0, res: 0, upd: 0;
       c5qsR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5qsP() //  [R1]
         { []
         }
     {offset
       c5qsP: // global
           _s5ps8::P64 = P64[Sp + 32];
           if (R1 & 7 == 1) goto c5qsX; else goto c5qt2;
       c5qsX: // global
           R1 = _s5ps8::P64;
           Sp = Sp + 40;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5qt2: // global
           I64[Sp] = block_c5qt0_info;
           R2 = P64[Sp + 16];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s5ps8::P64;
           P64[Sp - 8] = P64[Sp + 8];
           P64[Sp + 32] = P64[R1 + 14];
           Sp = Sp - 24;
           call GHC.Num.+_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qsP_info" {
     block_c5qsP_info:
         const _c5qsP;
         const 260;
         const 30;
 },
 _c5qt0() //  [R1]
         { []
         }
     {offset
       c5qt0: // global
           P64[Sp + 24] = P64[Sp + 32];
           P64[Sp + 32] = R1;
           Sp = Sp + 8;
           call _c5qsN() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5qt0_info" {
     block_c5qt0_info:
         const _c5qt0;
         const 260;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.270119044 UTC

[section ""data" . Data.OldList.genericLength_closure" {
     Data.OldList.genericLength_closure:
         const Data.OldList.genericLength_info;
         const 0;
 },
 sat_s5psk_entry() //  [R1]
         { []
         }
     {offset
       c5qu3: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5qu4; else goto c5qu5;
       c5qu4: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qu5: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.OldList.genericLength_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5psk_info" {
     sat_s5psk_info:
         const sat_s5psk_entry;
         const 2;
         const 4294967314;
         const S5qnM_srt+72;
 },
 sat_s5psj_entry() //  [R1]
         { []
         }
     {offset
       c5qua: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5qub; else goto c5quc;
       c5qub: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5quc: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5psj_info" {
     sat_s5psj_info:
         const sat_s5psj_entry;
         const 1;
         const 4294967312;
         const S5qnM_srt+48;
 },
 Data.OldList.genericLength_entry() //  [R2, R3]
         { []
         }
     {offset
       c5quh: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5qui; else goto c5quj;
       c5qui: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.genericLength_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5quj: // global
           I64[Sp - 16] = block_c5qtT_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5qup; else goto c5qtU;
       u5qup: // global
           call _c5qtT(R1) args: 0, res: 0, upd: 0;
       c5qtU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.genericLength_info" {
     Data.OldList.genericLength_info:
         const Data.OldList.genericLength_entry;
         const 0;
         const 47244640270;
         const 8589934607;
         const S5qnM_srt+48;
 },
 _c5qtT() //  [R1]
         { []
         }
     {offset
       c5qtT: // global
           _s5pse::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5que; else goto c5quf;
       c5que: // global
           R2 = _s5pse::P64;
           I64[Sp] = stg_ap_p_info;
           P64[Sp + 8] = Data.OldList.genericLength1_closure;
           call GHC.Num.fromInteger_entry(R2) args: 24, res: 0, upd: 8;
       c5quf: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5quo; else goto c5qun;
       c5quo: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qun: // global
           _s5psi::P64 = P64[R1 + 14];
           I64[Hp - 48] = sat_s5psk_info;
           P64[Hp - 32] = _s5pse::P64;
           P64[Hp - 24] = _s5psi::P64;
           I64[Hp - 16] = sat_s5psj_info;
           P64[Hp] = _s5pse::P64;
           R2 = _s5pse::P64;
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = Hp - 16;
           P64[Sp + 8] = Hp - 48;
           Sp = Sp - 8;
           call GHC.Num.+_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qtT_info" {
     block_c5qtT_info:
         const _c5qtT;
         const 1;
         const 47244640286;
         const S5qnM_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.284629789 UTC

[section ""data" . Data.OldList.genericTake_closure" {
     Data.OldList.genericTake_closure:
         const Data.OldList.genericTake_info;
         const 0;
 },
 $dNum_s5psp_entry() //  [R1]
         { []
         }
     {offset
       c5qv7: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5qv8; else goto c5qv9;
       c5qv8: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qv9: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Real.$p1Real_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . $dNum_s5psp_info" {
     $dNum_s5psp_info:
         const $dNum_s5psp_entry;
         const 1;
         const 16;
 },
 sat_s5psr_entry() //  [R1]
         { []
         }
     {offset
       c5qve: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5qvf; else goto c5qvg;
       c5qvf: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qvg: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength1_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5psr_info" {
     sat_s5psr_info:
         const sat_s5psr_entry;
         const 1;
         const 4294967312;
         const S5qnM_srt+56;
 },
 sat_s5psw_entry() //  [R1]
         { []
         }
     {offset
       c5qvH: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5qvI; else goto c5qvJ;
       c5qvI: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qvJ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5psw_info" {
     sat_s5psw_info:
         const sat_s5psw_entry;
         const 1;
         const 4294967312;
         const S5qnM_srt+48;
 },
 sat_s5psx_entry() //  [R1]
         { []
         }
     {offset
       c5qvK: // global
           _s5psx::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto c5qvL; else goto c5qvM;
       c5qvM: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qvO; else goto c5qvN;
       c5qvO: // global
           HpAlloc = 24;
           goto c5qvL;
       c5qvL: // global
           R1 = _s5psx::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qvN: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5psx::P64;
           _s5psm::P64 = P64[_s5psx::P64 + 16];
           _s5psp::P64 = P64[_s5psx::P64 + 24];
           I64[Hp - 16] = sat_s5psw_info;
           P64[Hp] = _s5psp::P64;
           R2 = _s5psp::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = _s5psm::P64;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 40;
           call GHC.Num.-_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5psx_info" {
     sat_s5psx_info:
         const sat_s5psx_entry;
         const 2;
         const 4294967314;
         const S5qnM_srt+48;
 },
 sat_s5psy_entry() //  [R1]
         { []
         }
     {offset
       c5qvP: // global
           _s5psy::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5qvQ; else goto c5qvR;
       c5qvR: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5qvT; else goto c5qvS;
       c5qvT: // global
           HpAlloc = 32;
           goto c5qvQ;
       c5qvQ: // global
           R1 = _s5psy::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qvS: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5psy::P64;
           _s5psl::P64 = P64[_s5psy::P64 + 16];
           _s5psm::P64 = P64[_s5psy::P64 + 24];
           _s5psp::P64 = P64[_s5psy::P64 + 32];
           _s5psv::P64 = P64[_s5psy::P64 + 40];
           I64[Hp - 24] = sat_s5psx_info;
           P64[Hp - 8] = _s5psm::P64;
           P64[Hp] = _s5psp::P64;
           R4 = _s5psv::P64;
           R3 = Hp - 24;
           R2 = _s5psl::P64;
           Sp = Sp - 16;
           call Data.OldList.genericTake_entry(R4,
                                               R3,
                                               R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5psy_info" {
     sat_s5psy_info:
         const sat_s5psy_entry;
         const 4;
         const 73014444047;
         const S5qnM_srt+48;
 },
 Data.OldList.genericTake_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5qvU: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c5qvV; else goto c5qvW;
       c5qvV: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.genericTake_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5qvW: // global
           I64[Sp - 32] = block_c5quZ_info;
           _s5psl::P64 = R2;
           R2 = R2;
           P64[Sp - 24] = _s5psl::P64;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call GHC.Real.$p1Integral_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.genericTake_info" {
     Data.OldList.genericTake_info:
         const Data.OldList.genericTake_entry;
         const 0;
         const 81604378638;
         const 12884901911;
         const S5qnM_srt+48;
 },
 _c5quZ() //  [R1]
         { []
         }
     {offset
       c5quZ: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5qvZ; else goto c5qvY;
       c5qvZ: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qvY: // global
           I64[Hp - 40] = $dNum_s5psp_info;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = sat_s5psr_info;
           _c5qv3::P64 = Hp - 40;
           P64[Hp] = _c5qv3::P64;
           I64[Sp - 16] = block_c5qvh_info;
           R2 = R1;
           P64[Sp - 8] = Hp - 16;
           P64[Sp] = _c5qv3::P64;
           Sp = Sp - 16;
           call GHC.Real.$p2Real_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5quZ_info" {
     block_c5quZ_info:
         const _c5quZ;
         const 3;
         const 81604378654;
         const S5qnM_srt+48;
 },
 _c5qvh() //  [R1]
         { []
         }
     {offset
       c5qvh: // global
           _c5qva::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5qvl_info;
           R2 = R1;
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = P64[Sp + 32];
           P64[Sp] = _c5qva::P64;
           Sp = Sp - 16;
           call GHC.Classes.<=_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qvh_info" {
     block_c5qvh_info:
         const _c5qvh;
         const 5;
         const 73014444062;
         const S5qnM_srt+48;
 },
 _c5qvl() //  [R1]
         { []
         }
     {offset
       c5qvl: // global
           if (R1 & 7 == 1) goto c5qw3; else goto u5qwj;
       c5qw3: // global
           I64[Sp] = block_c5qvp_info;
           R1 = P64[Sp + 32];
           if (R1 & 7 != 0) goto u5qwl; else goto c5qvq;
       u5qwl: // global
           call _c5qvp(R1) args: 0, res: 0, upd: 0;
       c5qvq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       u5qwj: // global
           Sp = Sp + 40;
           call _c5qwg() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5qvl_info" {
     block_c5qvl_info:
         const _c5qvl;
         const 4;
         const 73014444062;
         const S5qnM_srt+48;
 },
 _c5qvp() //  [R1]
         { []
         }
     {offset
       c5qvp: // global
           if (R1 & 7 == 1) goto u5qwk; else goto c5qw9;
       u5qwk: // global
           Sp = Sp + 40;
           call _c5qwg() args: 0, res: 0, upd: 0;
       c5qw9: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c5qwc; else goto c5qwb;
       c5qwc: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qwb: // global
           _s5psu::P64 = P64[R1 + 6];
           _s5psv::P64 = P64[R1 + 14];
           I64[Hp - 64] = sat_s5psy_info;
           P64[Hp - 48] = P64[Sp + 16];
           P64[Hp - 40] = P64[Sp + 24];
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s5psv::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5psu::P64;
           P64[Hp] = Hp - 64;
           R1 = Hp - 14;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qvp_info" {
     block_c5qvp_info:
         const _c5qvp;
         const 516;
         const 73014444062;
         const S5qnM_srt+48;
 },
 _c5qwg() //  []
         { []
         }
     {offset
       c5qwg: // global
           R1 = []_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.306418502 UTC

[section ""data" . Data.OldList.genericReplicate_closure" {
     Data.OldList.genericReplicate_closure:
         const Data.OldList.genericReplicate_info;
         const 0;
 },
 sat_s5psC_entry() //  [R1]
         { []
         }
     {offset
       c5qxJ: // global
           R2 = P64[R1 + 16];
           call GHC.List.repeat_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5psC_info" {
     sat_s5psC_info:
         const sat_s5psC_entry;
         const 1;
         const 16;
 },
 Data.OldList.genericReplicate_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5qxM: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qxQ; else goto c5qxP;
       c5qxQ: // global
           HpAlloc = 24;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.genericReplicate_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5qxP: // global
           I64[Hp - 16] = sat_s5psC_info;
           P64[Hp] = R4;
           R4 = Hp - 16;
           R3 = R3;
           R2 = R2;
           call Data.OldList.genericTake_entry(R4,
                                               R3,
                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.genericReplicate_info" {
     Data.OldList.genericReplicate_info:
         const Data.OldList.genericReplicate_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S5qnM_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.315751088 UTC

[section ""data" . Data.OldList.genericDrop_closure" {
     Data.OldList.genericDrop_closure:
         const Data.OldList.genericDrop_info;
         const 0;
 },
 $dNum_s5psH_entry() //  [R1]
         { []
         }
     {offset
       c5qys: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5qyt; else goto c5qyu;
       c5qyt: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qyu: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Real.$p1Real_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . $dNum_s5psH_info" {
     $dNum_s5psH_info:
         const $dNum_s5psH_entry;
         const 1;
         const 16;
 },
 sat_s5psJ_entry() //  [R1]
         { []
         }
     {offset
       c5qyx: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5qyy; else goto c5qyz;
       c5qyy: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qyz: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength1_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5psJ_info" {
     sat_s5psJ_info:
         const sat_s5psJ_entry;
         const 1;
         const 4294967312;
         const S5qnM_srt+56;
 },
 sat_s5psO_entry() //  [R1]
         { []
         }
     {offset
       c5qyH: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5qyI; else goto c5qyJ;
       c5qyI: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qyJ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5psO_info" {
     sat_s5psO_info:
         const sat_s5psO_entry;
         const 1;
         const 4294967312;
         const S5qnM_srt+48;
 },
 sat_s5psP_entry() //  [R1]
         { []
         }
     {offset
       c5qyK: // global
           _s5psP::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto c5qyL; else goto c5qyM;
       c5qyM: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qyO; else goto c5qyN;
       c5qyO: // global
           HpAlloc = 24;
           goto c5qyL;
       c5qyL: // global
           R1 = _s5psP::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qyN: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5psP::P64;
           _s5psE::P64 = P64[_s5psP::P64 + 16];
           _s5psH::P64 = P64[_s5psP::P64 + 24];
           I64[Hp - 16] = sat_s5psO_info;
           P64[Hp] = _s5psH::P64;
           R2 = _s5psH::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = _s5psE::P64;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 40;
           call GHC.Num.-_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5psP_info" {
     sat_s5psP_info:
         const sat_s5psP_entry;
         const 2;
         const 4294967314;
         const S5qnM_srt+48;
 },
 Data.OldList.genericDrop_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5qyP: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c5qyQ; else goto u5qzd;
       c5qyQ: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.genericDrop_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u5qzd: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c5qy0() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.genericDrop_info" {
     Data.OldList.genericDrop_info:
         const Data.OldList.genericDrop_entry;
         const 0;
         const 287762808846;
         const 12884901911;
         const S5qnM_srt+48;
 },
 _c5qy0() //  []
         { []
         }
     {offset
       c5qy0: // global
           I64[Sp - 8] = block_c5qy3_info;
           R2 = P64[Sp];
           Sp = Sp - 8;
           call GHC.Real.$p1Integral_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5qy3() //  [R1]
         { []
         }
     {offset
       c5qy3: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5qyU; else goto c5qyT;
       c5qyU: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qyT: // global
           I64[Hp - 40] = $dNum_s5psH_info;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = sat_s5psJ_info;
           _c5qy7::P64 = Hp - 40;
           P64[Hp] = _c5qy7::P64;
           I64[Sp - 16] = block_c5qyb_info;
           R2 = R1;
           P64[Sp - 8] = Hp - 16;
           P64[Sp] = _c5qy7::P64;
           Sp = Sp - 16;
           call GHC.Real.$p2Real_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qy3_info" {
     block_c5qy3_info:
         const _c5qy3;
         const 3;
         const 12884901918;
         const S5qnM_srt+48;
 },
 _c5qyb() //  [R1]
         { []
         }
     {offset
       c5qyb: // global
           _c5qy9::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5qyf_info;
           R2 = R1;
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = P64[Sp + 32];
           P64[Sp] = _c5qy9::P64;
           Sp = Sp - 16;
           call GHC.Classes.<=_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qyb_info" {
     block_c5qyb_info:
         const _c5qyb;
         const 5;
         const 12884901918;
         const S5qnM_srt+48;
 },
 _c5qyf() //  [R1]
         { []
         }
     {offset
       c5qyf: // global
           _s5psF::P64 = P64[Sp + 32];
           if (R1 & 7 == 1) goto c5qyY; else goto c5qza;
       c5qyY: // global
           I64[Sp] = block_c5qyj_info;
           R1 = _s5psF::P64;
           if (R1 & 7 != 0) goto u5qzf; else goto c5qyk;
       u5qzf: // global
           call _c5qyj(R1) args: 0, res: 0, upd: 0;
       c5qyk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c5qza: // global
           R1 = _s5psF::P64 & (-8);
           Sp = Sp + 40;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qyf_info" {
     block_c5qyf_info:
         const _c5qyf;
         const 4;
         const 12884901918;
         const S5qnM_srt+48;
 },
 _c5qyj() //  [R1]
         { []
         }
     {offset
       c5qyj: // global
           if (R1 & 7 == 1) goto c5qz2; else goto c5qz3;
       c5qz2: // global
           R1 = []_closure+1;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5qz3: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5qz6; else goto c5qz5;
       c5qz6: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qz5: // global
           _s5psN::P64 = P64[R1 + 14];
           I64[Hp - 24] = sat_s5psP_info;
           P64[Hp - 8] = P64[Sp + 24];
           P64[Hp] = P64[Sp + 8];
           P64[Sp + 16] = P64[Sp + 16];
           P64[Sp + 24] = Hp - 24;
           P64[Sp + 32] = _s5psN::P64;
           Sp = Sp + 16;
           call _c5qy0() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5qyj_info" {
     block_c5qyj_info:
         const _c5qyj;
         const 516;
         const 12884901918;
         const S5qnM_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.34005332 UTC

[section ""data" . Data.OldList.$wgenericSplitAt_closure" {
     Data.OldList.$wgenericSplitAt_closure:
         const Data.OldList.$wgenericSplitAt_info;
         const 0;
 },
 $dNum_s5psU_entry() //  [R1]
         { []
         }
     {offset
       c5qAB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5qAC; else goto c5qAD;
       c5qAC: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qAD: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Real.$p1Real_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . $dNum_s5psU_info" {
     $dNum_s5psU_info:
         const $dNum_s5psU_entry;
         const 1;
         const 16;
 },
 sat_s5psW_entry() //  [R1]
         { []
         }
     {offset
       c5qAI: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5qAJ; else goto c5qAK;
       c5qAJ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qAK: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength1_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5psW_info" {
     sat_s5psW_info:
         const sat_s5psW_entry;
         const 1;
         const 4294967312;
         const S5qnM_srt+56;
 },
 sat_s5pt2_entry() //  [R1]
         { []
         }
     {offset
       c5qBb: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5qBc; else goto c5qBd;
       c5qBc: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qBd: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pt2_info" {
     sat_s5pt2_info:
         const sat_s5pt2_entry;
         const 1;
         const 4294967312;
         const S5qnM_srt+48;
 },
 sat_s5pt3_entry() //  [R1]
         { []
         }
     {offset
       c5qBe: // global
           _s5pt3::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto c5qBf; else goto c5qBg;
       c5qBg: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qBi; else goto c5qBh;
       c5qBi: // global
           HpAlloc = 24;
           goto c5qBf;
       c5qBf: // global
           R1 = _s5pt3::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qBh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5pt3::P64;
           _s5psR::P64 = P64[_s5pt3::P64 + 16];
           _s5psU::P64 = P64[_s5pt3::P64 + 24];
           I64[Hp - 16] = sat_s5pt2_info;
           P64[Hp] = _s5psU::P64;
           R2 = _s5psU::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = _s5psR::P64;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 40;
           call GHC.Num.-_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pt3_info" {
     sat_s5pt3_info:
         const sat_s5pt3_entry;
         const 2;
         const 4294967314;
         const S5qnM_srt+48;
 },
 ds_s5pt1_entry() //  [R1]
         { []
         }
     {offset
       c5qBm: // global
           _s5pt1::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c5qBn; else goto c5qBo;
       c5qBo: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5qBq; else goto c5qBp;
       c5qBq: // global
           HpAlloc = 32;
           goto c5qBn;
       c5qBn: // global
           R1 = _s5pt1::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qBp: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5pt1::P64;
           _s5psQ::P64 = P64[_s5pt1::P64 + 16];
           _s5psR::P64 = P64[_s5pt1::P64 + 24];
           _s5psU::P64 = P64[_s5pt1::P64 + 32];
           _s5pt0::P64 = P64[_s5pt1::P64 + 40];
           I64[Hp - 24] = sat_s5pt3_info;
           P64[Hp - 8] = _s5psR::P64;
           P64[Hp] = _s5psU::P64;
           I64[Sp - 24] = block_c5qBj_info;
           R4 = _s5pt0::P64;
           R3 = Hp - 24;
           R2 = _s5psQ::P64;
           Sp = Sp - 24;
           call Data.OldList.$wgenericSplitAt_entry(R4,
                                                    R3,
                                                    R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds_s5pt1_info" {
     ds_s5pt1_info:
         const ds_s5pt1_entry;
         const 4;
         const 554050781199;
         const S5qnM_srt+48;
 },
 _c5qBj() //  [R1, R2]
         { []
         }
     {offset
       c5qBj: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qBt; else goto c5qBs;
       c5qBt: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c5qBs: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5qBj_info" {
     block_c5qBj_info:
         const _c5qBj;
         const 0;
         const 30;
 },
 Data.OldList.$wgenericSplitAt_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5qBu: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c5qBv; else goto c5qBw;
       c5qBv: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.$wgenericSplitAt_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5qBw: // global
           I64[Sp - 32] = block_c5qAt_info;
           _s5psQ::P64 = R2;
           R2 = R2;
           P64[Sp - 24] = _s5psQ::P64;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call GHC.Real.$p1Integral_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.$wgenericSplitAt_info" {
     Data.OldList.$wgenericSplitAt_info:
         const Data.OldList.$wgenericSplitAt_entry;
         const 0;
         const 562640715790;
         const 12884901911;
         const S5qnM_srt+48;
 },
 _c5qAt() //  [R1]
         { []
         }
     {offset
       c5qAt: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5qBz; else goto c5qBy;
       c5qBz: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qBy: // global
           I64[Hp - 40] = $dNum_s5psU_info;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = sat_s5psW_info;
           _c5qAx::P64 = Hp - 40;
           P64[Hp] = _c5qAx::P64;
           I64[Sp - 16] = block_c5qAL_info;
           R2 = R1;
           P64[Sp - 8] = Hp - 16;
           P64[Sp] = _c5qAx::P64;
           Sp = Sp - 16;
           call GHC.Real.$p2Real_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qAt_info" {
     block_c5qAt_info:
         const _c5qAt;
         const 3;
         const 562640715806;
         const S5qnM_srt+48;
 },
 _c5qAL() //  [R1]
         { []
         }
     {offset
       c5qAL: // global
           _c5qAE::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5qAP_info;
           R2 = R1;
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = P64[Sp + 32];
           P64[Sp] = _c5qAE::P64;
           Sp = Sp - 16;
           call GHC.Classes.<=_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qAL_info" {
     block_c5qAL_info:
         const _c5qAL;
         const 5;
         const 554050781214;
         const S5qnM_srt+48;
 },
 _c5qAP() //  [R1]
         { []
         }
     {offset
       c5qAP: // global
           _s5psS::P64 = P64[Sp + 32];
           if (R1 & 7 == 1) goto c5qBD; else goto c5qBS;
       c5qBD: // global
           I64[Sp] = block_c5qAT_info;
           R1 = _s5psS::P64;
           if (R1 & 7 != 0) goto u5qBV; else goto c5qAU;
       u5qBV: // global
           call _c5qAT(R1) args: 0, res: 0, upd: 0;
       c5qAU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c5qBS: // global
           R2 = _s5psS::P64;
           R1 = GHC.Types.[]_closure+1;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qAP_info" {
     block_c5qAP_info:
         const _c5qAP;
         const 4;
         const 554050781214;
         const S5qnM_srt+48;
 },
 _c5qAT() //  [R1]
         { []
         }
     {offset
       c5qAT: // global
           if (R1 & 7 == 1) goto c5qBH; else goto c5qBL;
       c5qBH: // global
           R2 = GHC.Types.[]_closure+1;
           R1 = GHC.Types.[]_closure+1;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
       c5qBL: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto c5qBO; else goto c5qBN;
       c5qBO: // global
           HpAlloc = 120;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qBN: // global
           _s5psZ::P64 = P64[R1 + 6];
           _s5pt0::P64 = P64[R1 + 14];
           I64[Hp - 112] = ds_s5pt1_info;
           P64[Hp - 96] = P64[Sp + 16];
           P64[Hp - 88] = P64[Sp + 24];
           P64[Hp - 80] = P64[Sp + 8];
           P64[Hp - 72] = _s5pt0::P64;
           I64[Hp - 64] = stg_sel_1_upd_info;
           _c5qAZ::P64 = Hp - 112;
           P64[Hp - 48] = _c5qAZ::P64;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _c5qAZ::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5psZ::P64;
           P64[Hp] = Hp - 40;
           R2 = Hp - 64;
           R1 = Hp - 14;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qAT_info" {
     block_c5qAT_info:
         const _c5qAT;
         const 516;
         const 554050781214;
         const S5qnM_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.368214794 UTC

[section ""data" . Data.OldList.genericSplitAt_closure" {
     Data.OldList.genericSplitAt_closure:
         const Data.OldList.genericSplitAt_info;
         const 0;
 },
 Data.OldList.genericSplitAt_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5qDp: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5qDq; else goto c5qDr;
       c5qDq: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.genericSplitAt_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5qDr: // global
           I64[Sp - 8] = block_c5qDm_info;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Data.OldList.$wgenericSplitAt_entry(R4,
                                                    R3,
                                                    R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.genericSplitAt_info" {
     Data.OldList.genericSplitAt_info:
         const Data.OldList.genericSplitAt_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S5qnM_srt+104;
 },
 _c5qDm() //  [R1, R2]
         { []
         }
     {offset
       c5qDm: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qDu; else goto c5qDt;
       c5qDu: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c5qDt: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qDm_info" {
     block_c5qDm_info:
         const _c5qDm;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.376759422 UTC

[section ""cstring" . lvl2_r5kSj_bytes" {
     lvl2_r5kSj_bytes:
         I8[] [76,105,115,116,46,103,101,110,101,114,105,99,73,110,100,101,120,58,32,110,101,103,97,116,105,118,101,32,97,114,103,117,109,101,110,116,46]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.380759646 UTC

[section ""data" . lvl3_r5kSk_closure" {
     lvl3_r5kSk_closure:
         const lvl3_r5kSk_info;
         const 0;
         const 0;
         const 0;
 },
 lvl3_r5kSk_entry() //  [R1]
         { []
         }
     {offset
       c5qDP: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5qDQ; else goto c5qDR;
       c5qDQ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qDR: // global
           (_c5qDK::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5qDK::I64 == 0) goto c5qDM; else goto c5qDL;
       c5qDM: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5qDL: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5qDK::I64;
           I64[Sp - 24] = block_c5qDN_info;
           R2 = lvl2_r5kSj_bytes;
           Sp = Sp - 24;
           call GHC.CString.unpackCString#_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . lvl3_r5kSk_info" {
     lvl3_r5kSk_info:
         const lvl3_r5kSk_entry;
         const 0;
         const 4294967317;
         const S5qnM_srt;
 },
 _c5qDN() //  [R1]
         { []
         }
     {offset
       c5qDN: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5qDN_info" {
     block_c5qDN_info:
         const _c5qDN;
         const 0;
         const 4294967326;
         const S5qnM_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.388392659 UTC

[section ""cstring" . lvl4_r5kSl_bytes" {
     lvl4_r5kSl_bytes:
         I8[] [76,105,115,116,46,103,101,110,101,114,105,99,73,110,100,101,120,58,32,105,110,100,101,120,32,116,111,111,32,108,97,114,103,101,46]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.392324734 UTC

[section ""data" . lvl5_r5kSm_closure" {
     lvl5_r5kSm_closure:
         const lvl5_r5kSm_info;
         const 0;
         const 0;
         const 0;
 },
 lvl5_r5kSm_entry() //  [R1]
         { []
         }
     {offset
       c5qEg: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5qEh; else goto c5qEi;
       c5qEh: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qEi: // global
           (_c5qEb::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5qEb::I64 == 0) goto c5qEd; else goto c5qEc;
       c5qEd: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5qEc: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5qEb::I64;
           I64[Sp - 24] = block_c5qEe_info;
           R2 = lvl4_r5kSl_bytes;
           Sp = Sp - 24;
           call GHC.CString.unpackCString#_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . lvl5_r5kSm_info" {
     lvl5_r5kSm_info:
         const lvl5_r5kSm_entry;
         const 0;
         const 4294967317;
         const S5qnM_srt;
 },
 _c5qEe() //  [R1]
         { []
         }
     {offset
       c5qEe: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5qEe_info" {
     block_c5qEe_info:
         const _c5qEe;
         const 0;
         const 4294967326;
         const S5qnM_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.409707692 UTC

[section ""data" . Data.OldList.genericIndex_closure" {
     Data.OldList.genericIndex_closure:
         const Data.OldList.genericIndex_info;
         const 0;
 },
 $dNum_s5ptv_entry() //  [R1]
         { []
         }
     {offset
       c5qFc: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5qFd; else goto c5qFe;
       c5qFd: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qFe: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Real.$p1Real_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . $dNum_s5ptv_info" {
     $dNum_s5ptv_info:
         const $dNum_s5ptv_entry;
         const 1;
         const 16;
 },
 sat_s5pty_entry() //  [R1]
         { []
         }
     {offset
       c5qFh: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5qFi; else goto c5qFj;
       c5qFi: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qFj: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength1_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pty_info" {
     sat_s5pty_info:
         const sat_s5pty_entry;
         const 1;
         const 4294967312;
         const S5qnM_srt+56;
 },
 sat_s5ptA_entry() //  [R1]
         { []
         }
     {offset
       c5qFm: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5qFn; else goto c5qFo;
       c5qFn: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qFo: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength1_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5ptA_info" {
     sat_s5ptA_info:
         const sat_s5ptA_entry;
         const 1;
         const 4294967312;
         const S5qnM_srt+56;
 },
 sat_s5ptC_entry() //  [R1]
         { []
         }
     {offset
       c5qFw: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5qFx; else goto c5qFy;
       c5qFx: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qFy: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.OldList.genericLength2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5ptC_info" {
     sat_s5ptC_info:
         const sat_s5ptC_entry;
         const 1;
         const 4294967312;
         const S5qnM_srt+48;
 },
 sat_s5ptD_entry() //  [R1]
         { []
         }
     {offset
       c5qFz: // global
           _s5ptD::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto c5qFA; else goto c5qFB;
       c5qFB: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qFD; else goto c5qFC;
       c5qFD: // global
           HpAlloc = 24;
           goto c5qFA;
       c5qFA: // global
           R1 = _s5ptD::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qFC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5ptD::P64;
           _s5ptq::P64 = P64[_s5ptD::P64 + 16];
           _s5ptv::P64 = P64[_s5ptD::P64 + 24];
           I64[Hp - 16] = sat_s5ptC_info;
           P64[Hp] = _s5ptv::P64;
           R2 = _s5ptv::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = _s5ptq::P64;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 40;
           call GHC.Num.-_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5ptD_info" {
     sat_s5ptD_info:
         const sat_s5ptD_entry;
         const 2;
         const 4294967314;
         const S5qnM_srt+48;
 },
 Data.OldList.genericIndex_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5qFI: // global
           if ((Sp + -88) < SpLim) (likely: False) goto c5qFJ; else goto u5qGe;
       c5qFJ: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.genericIndex_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u5qGe: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c5qEz() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.OldList.genericIndex_info" {
     Data.OldList.genericIndex_info:
         const Data.OldList.genericIndex_entry;
         const 0;
         const 15406047690766;
         const 12884901911;
         const S5qnM_srt+48;
 },
 _c5qEz() //  []
         { []
         }
     {offset
       c5qEz: // global
           I64[Sp - 8] = block_c5qEC_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qGg; else goto c5qED;
       u5qGg: // global
           call _c5qEC(R1) args: 0, res: 0, upd: 0;
       c5qED: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5qEC() //  [R1]
         { []
         }
     {offset
       c5qEC: // global
           if (R1 & 7 == 1) goto c5qFF; else goto c5qFG;
       c5qFF: // global
           R1 = lvl5_r5kSm_closure;
           Sp = Sp + 32;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5qFG: // global
           I64[Sp - 8] = block_c5qEI_info;
           R2 = P64[Sp + 8];
           P64[Sp] = P64[R1 + 14];
           P64[Sp + 16] = P64[R1 + 6];
           Sp = Sp - 8;
           call GHC.Real.$p1Integral_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qEC_info" {
     block_c5qEC_info:
         const _c5qEC;
         const 131;
         const 13207024435230;
         const S5qnM_srt+48;
 },
 _c5qEI() //  [R1]
         { []
         }
     {offset
       c5qEI: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qFQ; else goto c5qFP;
       c5qFQ: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qFP: // global
           I64[Hp - 16] = $dNum_s5ptv_info;
           P64[Hp] = R1;
           I64[Sp - 8] = block_c5qEO_info;
           R2 = R1;
           P64[Sp] = Hp - 16;
           Sp = Sp - 8;
           call GHC.Real.$p2Real_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qEI_info" {
     block_c5qEI_info:
         const _c5qEI;
         const 4;
         const 13207024435230;
         const S5qnM_srt+48;
 },
 _c5qEO() //  [R1]
         { []
         }
     {offset
       c5qEO: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qFT; else goto c5qFS;
       c5qFT: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qFS: // global
           I64[Hp - 16] = sat_s5pty_info;
           P64[Hp] = P64[Sp + 8];
           I64[Sp - 16] = block_c5qEU_info;
           R2 = R1;
           P64[Sp - 8] = R1;
           P64[Sp] = Hp - 16;
           Sp = Sp - 16;
           call GHC.Classes.$p1Ord_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qEO_info" {
     block_c5qEO_info:
         const _c5qEO;
         const 5;
         const 13207024435230;
         const S5qnM_srt+48;
 },
 _c5qEU() //  [R1]
         { []
         }
     {offset
       c5qEU: // global
           I64[Sp] = block_c5qEY_info;
           R2 = R1;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = P64[Sp + 56];
           P64[Sp - 8] = P64[Sp + 16];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qEU_info" {
     block_c5qEU_info:
         const _c5qEU;
         const 7;
         const 13207024435230;
         const S5qnM_srt+48;
 },
 _c5qEY() //  [R1]
         { []
         }
     {offset
       c5qEY: // global
           if (R1 & 7 == 1) goto c5qFW; else goto c5qGb;
       c5qFW: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5qFZ; else goto c5qFY;
       c5qFZ: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qFY: // global
           I64[Hp - 16] = sat_s5ptA_info;
           P64[Hp] = P64[Sp + 24];
           I64[Sp + 16] = block_c5qF4_info;
           R2 = P64[Sp + 8];
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = P64[Sp + 56];
           P64[Sp + 8] = Hp - 16;
           Sp = Sp - 8;
           call GHC.Classes.>_entry(R2) args: 32, res: 8, upd: 8;
       c5qGb: // global
           R1 = P64[Sp + 48];
           Sp = Sp + 64;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qEY_info" {
     block_c5qEY_info:
         const _c5qEY;
         const 135;
         const 13207024435230;
         const S5qnM_srt+48;
 },
 _c5qF4() //  [R1]
         { []
         }
     {offset
       c5qF4: // global
           if (R1 & 7 == 1) goto c5qG3; else goto c5qG4;
       c5qG3: // global
           R1 = lvl3_r5kSk_closure;
           Sp = Sp + 48;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5qG4: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5qG7; else goto c5qG6;
       c5qG7: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qG6: // global
           I64[Hp - 24] = sat_s5ptD_info;
           P64[Hp - 8] = P64[Sp + 40];
           P64[Hp] = P64[Sp + 8];
           P64[Sp + 24] = P64[Sp + 24];
           P64[Sp + 32] = P64[Sp + 16];
           P64[Sp + 40] = Hp - 24;
           Sp = Sp + 24;
           call _c5qEz() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5qF4_info" {
     block_c5qF4_info:
         const _c5qF4;
         const 517;
         const 13207024435230;
         const S5qnM_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.453544786 UTC

[section ""data" . Data.OldList.zipWith4_closure" {
     Data.OldList.zipWith4_closure:
         const Data.OldList.zipWith4_info;
 },
 sat_s5ptW_entry() //  [R1]
         { []
         }
     {offset
       c5qIk: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5qIl; else goto c5qIm;
       c5qIl: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qIm: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R6 = P64[R1 + 48];
           R5 = P64[R1 + 40];
           R4 = P64[R1 + 32];
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.OldList.zipWith4_entry(R6,
                                            R5,
                                            R4,
                                            R3,
                                            R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5ptW_info" {
     sat_s5ptW_info:
         const sat_s5ptW_entry;
         const 5;
         const 15;
 },
 Data.OldList.zipWith4_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c5qIr: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c5qIs; else goto c5qIt;
       c5qIs: // global
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.zipWith4_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5qIt: // global
           I64[Sp - 40] = block_c5qHS_info;
           R1 = R3;
           P64[Sp - 32] = R2;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           if (R1 & 7 != 0) goto u5qJ7; else goto c5qHT;
       u5qJ7: // global
           call _c5qHS(R1) args: 0, res: 0, upd: 0;
       c5qHT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.zipWith4_info" {
     Data.OldList.zipWith4_info:
         const Data.OldList.zipWith4_entry;
         const 0;
         const 14;
         const 21474836505;
 },
 _c5qHS() //  [R1]
         { []
         }
     {offset
       c5qHS: // global
           if (R1 & 7 == 1) goto u5qIW; else goto c5qIp;
       u5qIW: // global
           Sp = Sp + 40;
           call _c5qIM() args: 0, res: 0, upd: 0;
       c5qIp: // global
           I64[Sp - 8] = block_c5qHY_info;
           _s5ptK::P64 = P64[R1 + 6];
           _s5ptL::P64 = P64[R1 + 14];
           R1 = P64[Sp + 16];
           P64[Sp] = _s5ptL::P64;
           P64[Sp + 16] = _s5ptK::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qJ0; else goto c5qHZ;
       u5qJ0: // global
           call _c5qHY(R1) args: 0, res: 0, upd: 0;
       c5qHZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qHS_info" {
     block_c5qHS_info:
         const _c5qHS;
         const 4;
         const 30;
 },
 _c5qHY() //  [R1]
         { []
         }
     {offset
       c5qHY: // global
           if (R1 & 7 == 1) goto u5qIX; else goto c5qIC;
       u5qIX: // global
           Sp = Sp + 48;
           call _c5qIM() args: 0, res: 0, upd: 0;
       c5qIC: // global
           I64[Sp - 8] = block_c5qI4_info;
           _s5ptN::P64 = P64[R1 + 6];
           _s5ptO::P64 = P64[R1 + 14];
           R1 = P64[Sp + 32];
           P64[Sp] = _s5ptO::P64;
           P64[Sp + 32] = _s5ptN::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qJ2; else goto c5qI5;
       u5qJ2: // global
           call _c5qI4(R1) args: 0, res: 0, upd: 0;
       c5qI5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qHY_info" {
     block_c5qHY_info:
         const _c5qHY;
         const 5;
         const 30;
 },
 _c5qI4() //  [R1]
         { []
         }
     {offset
       c5qI4: // global
           if (R1 & 7 == 1) goto u5qIY; else goto c5qII;
       u5qIY: // global
           Sp = Sp + 56;
           call _c5qIM() args: 0, res: 0, upd: 0;
       c5qII: // global
           I64[Sp - 8] = block_c5qIa_info;
           _s5ptQ::P64 = P64[R1 + 6];
           _s5ptR::P64 = P64[R1 + 14];
           R1 = P64[Sp + 48];
           P64[Sp] = _s5ptR::P64;
           P64[Sp + 48] = _s5ptQ::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qJ4; else goto c5qIb;
       u5qJ4: // global
           call _c5qIa(R1) args: 0, res: 0, upd: 0;
       c5qIb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qI4_info" {
     block_c5qI4_info:
         const _c5qI4;
         const 6;
         const 30;
 },
 _c5qIa() //  [R1]
         { []
         }
     {offset
       c5qIa: // global
           if (R1 & 7 == 1) goto u5qIZ; else goto c5qIP;
       u5qIZ: // global
           Sp = Sp + 64;
           call _c5qIM() args: 0, res: 0, upd: 0;
       c5qIP: // global
           Hp = Hp + 136;
           if (Hp > HpLim) (likely: False) goto c5qIS; else goto c5qIR;
       c5qIS: // global
           HpAlloc = 136;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qIR: // global
           _s5ptT::P64 = P64[R1 + 6];
           _s5ptU::P64 = P64[R1 + 14];
           I64[Hp - 128] = sat_s5ptW_info;
           _s5ptE::P64 = P64[Sp + 32];
           P64[Hp - 112] = _s5ptE::P64;
           P64[Hp - 104] = P64[Sp + 24];
           P64[Hp - 96] = P64[Sp + 16];
           P64[Hp - 88] = P64[Sp + 8];
           P64[Hp - 80] = _s5ptU::P64;
           I64[Hp - 72] = stg_ap_5_upd_info;
           P64[Hp - 56] = _s5ptE::P64;
           P64[Hp - 48] = P64[Sp + 40];
           P64[Hp - 40] = P64[Sp + 48];
           P64[Hp - 32] = P64[Sp + 56];
           P64[Hp - 24] = _s5ptT::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 72;
           P64[Hp] = Hp - 128;
           R1 = Hp - 14;
           Sp = Sp + 64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qIa_info" {
     block_c5qIa_info:
         const _c5qIa;
         const 7;
         const 30;
 },
 _c5qIM() //  []
         { []
         }
     {offset
       c5qIM: // global
           R1 = []_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.471844374 UTC

[section ""data" . Data.OldList.zip4_closure" {
     Data.OldList.zip4_closure:
         const Data.OldList.zip4_info;
 },
 Data.OldList.zip4_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5qK4: // global
           R6 = R5;
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = GHC.Tuple.(,,,)_closure+4;
           call Data.OldList.zipWith4_entry(R6,
                                            R5,
                                            R4,
                                            R3,
                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.zip4_info" {
     Data.OldList.zip4_info:
         const Data.OldList.zip4_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.479752489 UTC

[section ""data" . Data.OldList.zipWith5_closure" {
     Data.OldList.zipWith5_closure:
         const Data.OldList.zipWith5_info;
 },
 sat_s5puj_entry() //  [R1]
         { []
         }
     {offset
       c5qKO: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5qKP; else goto c5qKQ;
       c5qKP: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qKQ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R6 = P64[R1 + 48];
           R5 = P64[R1 + 40];
           R4 = P64[R1 + 32];
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           P64[Sp - 24] = P64[R1 + 56];
           Sp = Sp - 24;
           call Data.OldList.zipWith5_entry(R6,
                                            R5,
                                            R4,
                                            R3,
                                            R2) args: 32, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5puj_info" {
     sat_s5puj_info:
         const sat_s5puj_entry;
         const 6;
         const 15;
 },
 Data.OldList.zipWith5_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c5qKV: // global
           if ((Sp + -72) < SpLim) (likely: False) goto c5qKW; else goto c5qKX;
       c5qKW: // global
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.zipWith5_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 16, res: 0, upd: 8;
       c5qKX: // global
           I64[Sp - 40] = block_c5qKg_info;
           R1 = R3;
           P64[Sp - 32] = R2;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           if (R1 & 7 != 0) goto u5qLL; else goto c5qKh;
       u5qLL: // global
           call _c5qKg(R1) args: 0, res: 0, upd: 0;
       c5qKh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.zipWith5_info" {
     Data.OldList.zipWith5_info:
         const Data.OldList.zipWith5_entry;
         const 0;
         const 14;
         const 25769803802;
 },
 _c5qKg() //  [R1]
         { []
         }
     {offset
       c5qKg: // global
           if (R1 & 7 == 1) goto u5qLx; else goto c5qKT;
       u5qLx: // global
           Sp = Sp + 48;
           call _c5qLm() args: 0, res: 0, upd: 0;
       c5qKT: // global
           I64[Sp - 8] = block_c5qKm_info;
           _s5pu4::P64 = P64[R1 + 6];
           _s5pu5::P64 = P64[R1 + 14];
           R1 = P64[Sp + 16];
           P64[Sp] = _s5pu5::P64;
           P64[Sp + 16] = _s5pu4::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qLC; else goto c5qKn;
       u5qLC: // global
           call _c5qKm(R1) args: 0, res: 0, upd: 0;
       c5qKn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qKg_info" {
     block_c5qKg_info:
         const _c5qKg;
         const 5;
         const 30;
 },
 _c5qKm() //  [R1]
         { []
         }
     {offset
       c5qKm: // global
           if (R1 & 7 == 1) goto u5qLy; else goto c5qL6;
       u5qLy: // global
           Sp = Sp + 56;
           call _c5qLm() args: 0, res: 0, upd: 0;
       c5qL6: // global
           I64[Sp - 8] = block_c5qKs_info;
           _s5pu7::P64 = P64[R1 + 6];
           _s5pu8::P64 = P64[R1 + 14];
           R1 = P64[Sp + 32];
           P64[Sp] = _s5pu8::P64;
           P64[Sp + 32] = _s5pu7::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qLE; else goto c5qKt;
       u5qLE: // global
           call _c5qKs(R1) args: 0, res: 0, upd: 0;
       c5qKt: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qKm_info" {
     block_c5qKm_info:
         const _c5qKm;
         const 6;
         const 30;
 },
 _c5qKs() //  [R1]
         { []
         }
     {offset
       c5qKs: // global
           if (R1 & 7 == 1) goto u5qLz; else goto c5qLc;
       u5qLz: // global
           Sp = Sp + 64;
           call _c5qLm() args: 0, res: 0, upd: 0;
       c5qLc: // global
           I64[Sp - 8] = block_c5qKy_info;
           _s5pua::P64 = P64[R1 + 6];
           _s5pub::P64 = P64[R1 + 14];
           R1 = P64[Sp + 48];
           P64[Sp] = _s5pub::P64;
           P64[Sp + 48] = _s5pua::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qLG; else goto c5qKz;
       u5qLG: // global
           call _c5qKy(R1) args: 0, res: 0, upd: 0;
       c5qKz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qKs_info" {
     block_c5qKs_info:
         const _c5qKs;
         const 7;
         const 30;
 },
 _c5qKy() //  [R1]
         { []
         }
     {offset
       c5qKy: // global
           if (R1 & 7 == 1) goto u5qLA; else goto c5qLi;
       u5qLA: // global
           Sp = Sp + 72;
           call _c5qLm() args: 0, res: 0, upd: 0;
       c5qLi: // global
           I64[Sp - 8] = block_c5qKE_info;
           _s5pud::P64 = P64[R1 + 6];
           _s5pue::P64 = P64[R1 + 14];
           R1 = P64[Sp + 64];
           P64[Sp] = _s5pue::P64;
           P64[Sp + 64] = _s5pud::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qLI; else goto c5qKF;
       u5qLI: // global
           call _c5qKE(R1) args: 0, res: 0, upd: 0;
       c5qKF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qKy_info" {
     block_c5qKy_info:
         const _c5qKy;
         const 8;
         const 30;
 },
 _c5qKE() //  [R1]
         { []
         }
     {offset
       c5qKE: // global
           if (R1 & 7 == 1) goto u5qLB; else goto c5qLp;
       u5qLB: // global
           Sp = Sp + 80;
           call _c5qLm() args: 0, res: 0, upd: 0;
       c5qLp: // global
           Hp = Hp + 152;
           if (Hp > HpLim) (likely: False) goto c5qLs; else goto c5qLr;
       c5qLs: // global
           HpAlloc = 152;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qLr: // global
           _s5pug::P64 = P64[R1 + 6];
           _s5puh::P64 = P64[R1 + 14];
           I64[Hp - 144] = sat_s5puj_info;
           _s5ptX::P64 = P64[Sp + 40];
           P64[Hp - 128] = _s5ptX::P64;
           P64[Hp - 120] = P64[Sp + 32];
           P64[Hp - 112] = P64[Sp + 24];
           P64[Hp - 104] = P64[Sp + 16];
           P64[Hp - 96] = P64[Sp + 8];
           P64[Hp - 88] = _s5puh::P64;
           I64[Hp - 80] = stg_ap_6_upd_info;
           P64[Hp - 64] = _s5ptX::P64;
           P64[Hp - 56] = P64[Sp + 48];
           P64[Hp - 48] = P64[Sp + 56];
           P64[Hp - 40] = P64[Sp + 64];
           P64[Hp - 32] = P64[Sp + 72];
           P64[Hp - 24] = _s5pug::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 144;
           R1 = Hp - 14;
           Sp = Sp + 80;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qKE_info" {
     block_c5qKE_info:
         const _c5qKE;
         const 9;
         const 30;
 },
 _c5qLm() //  []
         { []
         }
     {offset
       c5qLm: // global
           R1 = []_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.500354581 UTC

[section ""data" . Data.OldList.zip5_closure" {
     Data.OldList.zip5_closure:
         const Data.OldList.zip5_info;
 },
 Data.OldList.zip5_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c5qMS: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5qMT; else goto c5qMU;
       c5qMT: // global
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.zip5_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5qMU: // global
           _B1::P64 = R6;
           R6 = R5;
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = GHC.Tuple.(,,,,)_closure+5;
           P64[Sp - 8] = _B1::P64;
           Sp = Sp - 8;
           call Data.OldList.zipWith5_entry(R6,
                                            R5,
                                            R4,
                                            R3,
                                            R2) args: 16, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.zip5_info" {
     Data.OldList.zip5_info:
         const Data.OldList.zip5_entry;
         const 0;
         const 14;
         const 21474836505;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.513947155 UTC

[section ""data" . Data.OldList.zipWith6_closure" {
     Data.OldList.zipWith6_closure:
         const Data.OldList.zipWith6_info;
 },
 Data.OldList.zipWith6_slow() //  [R1]
         { []
         }
     {offset
       c5qN2: // global
           R6 = P64[Sp + 32];
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call Data.OldList.zipWith6_entry(R6,
                                            R5,
                                            R4,
                                            R3,
                                            R2,
                                            R1) args: 24, res: 0, upd: 8;
     }
 },
 sat_s5puK_entry() //  [R1]
         { []
         }
     {offset
       c5qNK: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5qNL; else goto c5qNM;
       c5qNL: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qNM: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R6 = P64[R1 + 48];
           R5 = P64[R1 + 40];
           R4 = P64[R1 + 32];
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           P64[Sp - 32] = P64[R1 + 56];
           P64[Sp - 24] = P64[R1 + 64];
           Sp = Sp - 32;
           call Data.OldList.zipWith6_entry(R6,
                                            R5,
                                            R4,
                                            R3,
                                            R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5puK_info" {
     sat_s5puK_info:
         const sat_s5puK_entry;
         const 7;
         const 15;
 },
 Data.OldList.zipWith6_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c5qNR: // global
           if ((Sp + -80) < SpLim) (likely: False) goto c5qNS; else goto c5qNT;
       c5qNS: // global
           R1 = Data.OldList.zipWith6_closure;
           P64[Sp - 40] = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           call (stg_gc_fun)(R1) args: 64, res: 0, upd: 8;
       c5qNT: // global
           I64[Sp - 40] = block_c5qN6_info;
           R1 = R3;
           P64[Sp - 32] = R2;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           if (R1 & 7 != 0) goto u5qOR; else goto c5qN7;
       u5qOR: // global
           call _c5qN6(R1) args: 0, res: 0, upd: 0;
       c5qN7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.zipWith6_info" {
     Data.OldList.zipWith6_info:
         const Data.OldList.zipWith6_entry;
         const 0;
         const 14;
         const 30064771072;
         const 0;
         const 7;
         const Data.OldList.zipWith6_slow;
 },
 _c5qN6() //  [R1]
         { []
         }
     {offset
       c5qN6: // global
           if (R1 & 7 == 1) goto u5qOA; else goto c5qNP;
       u5qOA: // global
           Sp = Sp + 56;
           call _c5qOo() args: 0, res: 0, upd: 0;
       c5qNP: // global
           I64[Sp - 8] = block_c5qNc_info;
           _s5pus::P64 = P64[R1 + 6];
           _s5put::P64 = P64[R1 + 14];
           R1 = P64[Sp + 16];
           P64[Sp] = _s5put::P64;
           P64[Sp + 16] = _s5pus::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qOG; else goto c5qNd;
       u5qOG: // global
           call _c5qNc(R1) args: 0, res: 0, upd: 0;
       c5qNd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qN6_info" {
     block_c5qN6_info:
         const _c5qN6;
         const 6;
         const 30;
 },
 _c5qNc() //  [R1]
         { []
         }
     {offset
       c5qNc: // global
           if (R1 & 7 == 1) goto u5qOB; else goto c5qO2;
       u5qOB: // global
           Sp = Sp + 64;
           call _c5qOo() args: 0, res: 0, upd: 0;
       c5qO2: // global
           I64[Sp - 8] = block_c5qNi_info;
           _s5puv::P64 = P64[R1 + 6];
           _s5puw::P64 = P64[R1 + 14];
           R1 = P64[Sp + 32];
           P64[Sp] = _s5puw::P64;
           P64[Sp + 32] = _s5puv::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qOI; else goto c5qNj;
       u5qOI: // global
           call _c5qNi(R1) args: 0, res: 0, upd: 0;
       c5qNj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qNc_info" {
     block_c5qNc_info:
         const _c5qNc;
         const 7;
         const 30;
 },
 _c5qNi() //  [R1]
         { []
         }
     {offset
       c5qNi: // global
           if (R1 & 7 == 1) goto u5qOC; else goto c5qO8;
       u5qOC: // global
           Sp = Sp + 72;
           call _c5qOo() args: 0, res: 0, upd: 0;
       c5qO8: // global
           I64[Sp - 8] = block_c5qNo_info;
           _s5puy::P64 = P64[R1 + 6];
           _s5puz::P64 = P64[R1 + 14];
           R1 = P64[Sp + 48];
           P64[Sp] = _s5puz::P64;
           P64[Sp + 48] = _s5puy::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qOK; else goto c5qNp;
       u5qOK: // global
           call _c5qNo(R1) args: 0, res: 0, upd: 0;
       c5qNp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qNi_info" {
     block_c5qNi_info:
         const _c5qNi;
         const 8;
         const 30;
 },
 _c5qNo() //  [R1]
         { []
         }
     {offset
       c5qNo: // global
           if (R1 & 7 == 1) goto u5qOD; else goto c5qOe;
       u5qOD: // global
           Sp = Sp + 80;
           call _c5qOo() args: 0, res: 0, upd: 0;
       c5qOe: // global
           I64[Sp - 8] = block_c5qNu_info;
           _s5puB::P64 = P64[R1 + 6];
           _s5puC::P64 = P64[R1 + 14];
           R1 = P64[Sp + 64];
           P64[Sp] = _s5puC::P64;
           P64[Sp + 64] = _s5puB::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qOM; else goto c5qNv;
       u5qOM: // global
           call _c5qNu(R1) args: 0, res: 0, upd: 0;
       c5qNv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qNo_info" {
     block_c5qNo_info:
         const _c5qNo;
         const 9;
         const 30;
 },
 _c5qNu() //  [R1]
         { []
         }
     {offset
       c5qNu: // global
           if (R1 & 7 == 1) goto u5qOE; else goto c5qOk;
       u5qOE: // global
           Sp = Sp + 88;
           call _c5qOo() args: 0, res: 0, upd: 0;
       c5qOk: // global
           I64[Sp - 8] = block_c5qNA_info;
           _s5puE::P64 = P64[R1 + 6];
           _s5puF::P64 = P64[R1 + 14];
           R1 = P64[Sp + 80];
           P64[Sp] = _s5puF::P64;
           P64[Sp + 80] = _s5puE::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qOO; else goto c5qNB;
       u5qOO: // global
           call _c5qNA(R1) args: 0, res: 0, upd: 0;
       c5qNB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qNu_info" {
     block_c5qNu_info:
         const _c5qNu;
         const 10;
         const 30;
 },
 _c5qNA() //  [R1]
         { []
         }
     {offset
       c5qNA: // global
           if (R1 & 7 == 1) goto u5qOF; else goto c5qOr;
       u5qOF: // global
           Sp = Sp + 96;
           call _c5qOo() args: 0, res: 0, upd: 0;
       c5qOr: // global
           Hp = Hp + 168;
           if (Hp > HpLim) (likely: False) goto c5qOu; else goto c5qOt;
       c5qOu: // global
           HpAlloc = 168;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qOt: // global
           _s5puH::P64 = P64[R1 + 6];
           _s5puI::P64 = P64[R1 + 14];
           I64[Hp - 160] = sat_s5puK_info;
           _s5puk::P64 = P64[Sp + 48];
           P64[Hp - 144] = _s5puk::P64;
           P64[Hp - 136] = P64[Sp + 40];
           P64[Hp - 128] = P64[Sp + 32];
           P64[Hp - 120] = P64[Sp + 24];
           P64[Hp - 112] = P64[Sp + 16];
           P64[Hp - 104] = P64[Sp + 8];
           P64[Hp - 96] = _s5puI::P64;
           I64[Hp - 88] = stg_ap_7_upd_info;
           P64[Hp - 72] = _s5puk::P64;
           P64[Hp - 64] = P64[Sp + 56];
           P64[Hp - 56] = P64[Sp + 64];
           P64[Hp - 48] = P64[Sp + 72];
           P64[Hp - 40] = P64[Sp + 80];
           P64[Hp - 32] = P64[Sp + 88];
           P64[Hp - 24] = _s5puH::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 88;
           P64[Hp] = Hp - 160;
           R1 = Hp - 14;
           Sp = Sp + 96;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qNA_info" {
     block_c5qNA_info:
         const _c5qNA;
         const 11;
         const 30;
 },
 _c5qOo() //  []
         { []
         }
     {offset
       c5qOo: // global
           R1 = []_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.53670878 UTC

[section ""data" . Data.OldList.zip6_closure" {
     Data.OldList.zip6_closure:
         const Data.OldList.zip6_info;
 },
 Data.OldList.zip6_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c5qQa: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5qQb; else goto c5qQc;
       c5qQb: // global
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.zip6_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 16, res: 0, upd: 8;
       c5qQc: // global
           _B2::P64 = R6;
           R6 = R5;
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = GHC.Tuple.(,,,,,)_closure+6;
           P64[Sp - 8] = _B2::P64;
           Sp = Sp - 8;
           call Data.OldList.zipWith6_entry(R6,
                                            R5,
                                            R4,
                                            R3,
                                            R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.zip6_info" {
     Data.OldList.zip6_info:
         const Data.OldList.zip6_entry;
         const 0;
         const 14;
         const 25769803802;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.54693408 UTC

[section ""data" . Data.OldList.zipWith7_closure" {
     Data.OldList.zipWith7_closure:
         const Data.OldList.zipWith7_info;
 },
 Data.OldList.zipWith7_slow() //  [R1]
         { []
         }
     {offset
       c5qQk: // global
           R6 = P64[Sp + 32];
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call Data.OldList.zipWith7_entry(R6,
                                            R5,
                                            R4,
                                            R3,
                                            R2,
                                            R1) args: 32, res: 0, upd: 8;
     }
 },
 sat_s5pvf_entry() //  [R1]
         { []
         }
     {offset
       c5qR8: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5qR9; else goto c5qRa;
       c5qR9: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qRa: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R6 = P64[R1 + 48];
           R5 = P64[R1 + 40];
           R4 = P64[R1 + 32];
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           P64[Sp - 40] = P64[R1 + 56];
           P64[Sp - 32] = P64[R1 + 64];
           P64[Sp - 24] = P64[R1 + 72];
           Sp = Sp - 40;
           call Data.OldList.zipWith7_entry(R6,
                                            R5,
                                            R4,
                                            R3,
                                            R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pvf_info" {
     sat_s5pvf_info:
         const sat_s5pvf_entry;
         const 8;
         const 15;
 },
 sat_s5pve_entry() //  [R1]
         { []
         }
     {offset
       c5qRf: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5qRg; else goto c5qRh;
       c5qRg: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qRh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R6 = P64[R1 + 56];
           R5 = P64[R1 + 48];
           R4 = P64[R1 + 40];
           R3 = P64[R1 + 32];
           R2 = P64[R1 + 24];
           _s5pv9::P64 = P64[R1 + 64];
           _s5pvc::P64 = P64[R1 + 72];
           R1 = P64[R1 + 16];
           P64[Sp - 40] = _s5pv9::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = _s5pvc::P64;
           Sp = Sp - 40;
           call stg_ap_pppppp_fast(R6,
                                   R5,
                                   R4,
                                   R3,
                                   R2,
                                   R1) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pve_info" {
     sat_s5pve_info:
         const sat_s5pve_entry;
         const 8;
         const 15;
 },
 Data.OldList.zipWith7_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c5qRm: // global
           if ((Sp + -88) < SpLim) (likely: False) goto c5qRn; else goto c5qRo;
       c5qRn: // global
           R1 = Data.OldList.zipWith7_closure;
           P64[Sp - 40] = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           call (stg_gc_fun)(R1) args: 72, res: 0, upd: 8;
       c5qRo: // global
           I64[Sp - 40] = block_c5qQo_info;
           R1 = R3;
           P64[Sp - 32] = R2;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           if (R1 & 7 != 0) goto u5qSv; else goto c5qQp;
       u5qSv: // global
           call _c5qQo(R1) args: 0, res: 0, upd: 0;
       c5qQp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.zipWith7_info" {
     Data.OldList.zipWith7_info:
         const Data.OldList.zipWith7_entry;
         const 0;
         const 14;
         const 34359738368;
         const 0;
         const 8;
         const Data.OldList.zipWith7_slow;
 },
 _c5qQo() //  [R1]
         { []
         }
     {offset
       c5qQo: // global
           if (R1 & 7 == 1) goto u5qSb; else goto c5qRk;
       u5qSb: // global
           Sp = Sp + 64;
           call _c5qRZ() args: 0, res: 0, upd: 0;
       c5qRk: // global
           I64[Sp - 8] = block_c5qQu_info;
           _s5puU::P64 = P64[R1 + 6];
           _s5puV::P64 = P64[R1 + 14];
           R1 = P64[Sp + 16];
           P64[Sp] = _s5puV::P64;
           P64[Sp + 16] = _s5puU::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qSi; else goto c5qQv;
       u5qSi: // global
           call _c5qQu(R1) args: 0, res: 0, upd: 0;
       c5qQv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qQo_info" {
     block_c5qQo_info:
         const _c5qQo;
         const 7;
         const 30;
 },
 _c5qQu() //  [R1]
         { []
         }
     {offset
       c5qQu: // global
           if (R1 & 7 == 1) goto u5qSc; else goto c5qRx;
       u5qSc: // global
           Sp = Sp + 72;
           call _c5qRZ() args: 0, res: 0, upd: 0;
       c5qRx: // global
           I64[Sp - 8] = block_c5qQA_info;
           _s5puX::P64 = P64[R1 + 6];
           _s5puY::P64 = P64[R1 + 14];
           R1 = P64[Sp + 32];
           P64[Sp] = _s5puY::P64;
           P64[Sp + 32] = _s5puX::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qSk; else goto c5qQB;
       u5qSk: // global
           call _c5qQA(R1) args: 0, res: 0, upd: 0;
       c5qQB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qQu_info" {
     block_c5qQu_info:
         const _c5qQu;
         const 8;
         const 30;
 },
 _c5qQA() //  [R1]
         { []
         }
     {offset
       c5qQA: // global
           if (R1 & 7 == 1) goto u5qSd; else goto c5qRD;
       u5qSd: // global
           Sp = Sp + 80;
           call _c5qRZ() args: 0, res: 0, upd: 0;
       c5qRD: // global
           I64[Sp - 8] = block_c5qQG_info;
           _s5pv0::P64 = P64[R1 + 6];
           _s5pv1::P64 = P64[R1 + 14];
           R1 = P64[Sp + 48];
           P64[Sp] = _s5pv1::P64;
           P64[Sp + 48] = _s5pv0::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qSm; else goto c5qQH;
       u5qSm: // global
           call _c5qQG(R1) args: 0, res: 0, upd: 0;
       c5qQH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qQA_info" {
     block_c5qQA_info:
         const _c5qQA;
         const 9;
         const 30;
 },
 _c5qQG() //  [R1]
         { []
         }
     {offset
       c5qQG: // global
           if (R1 & 7 == 1) goto u5qSe; else goto c5qRJ;
       u5qSe: // global
           Sp = Sp + 88;
           call _c5qRZ() args: 0, res: 0, upd: 0;
       c5qRJ: // global
           I64[Sp - 8] = block_c5qQM_info;
           _s5pv3::P64 = P64[R1 + 6];
           _s5pv4::P64 = P64[R1 + 14];
           R1 = P64[Sp + 64];
           P64[Sp] = _s5pv4::P64;
           P64[Sp + 64] = _s5pv3::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qSo; else goto c5qQN;
       u5qSo: // global
           call _c5qQM(R1) args: 0, res: 0, upd: 0;
       c5qQN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qQG_info" {
     block_c5qQG_info:
         const _c5qQG;
         const 10;
         const 30;
 },
 _c5qQM() //  [R1]
         { []
         }
     {offset
       c5qQM: // global
           if (R1 & 7 == 1) goto u5qSf; else goto c5qRP;
       u5qSf: // global
           Sp = Sp + 96;
           call _c5qRZ() args: 0, res: 0, upd: 0;
       c5qRP: // global
           I64[Sp - 8] = block_c5qQS_info;
           _s5pv6::P64 = P64[R1 + 6];
           _s5pv7::P64 = P64[R1 + 14];
           R1 = P64[Sp + 80];
           P64[Sp] = _s5pv7::P64;
           P64[Sp + 80] = _s5pv6::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qSq; else goto c5qQT;
       u5qSq: // global
           call _c5qQS(R1) args: 0, res: 0, upd: 0;
       c5qQT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qQM_info" {
     block_c5qQM_info:
         const _c5qQM;
         const 11;
         const 30;
 },
 _c5qQS() //  [R1]
         { []
         }
     {offset
       c5qQS: // global
           if (R1 & 7 == 1) goto u5qSg; else goto c5qRV;
       u5qSg: // global
           Sp = Sp + 104;
           call _c5qRZ() args: 0, res: 0, upd: 0;
       c5qRV: // global
           I64[Sp - 8] = block_c5qQY_info;
           _s5pv9::P64 = P64[R1 + 6];
           _s5pva::P64 = P64[R1 + 14];
           R1 = P64[Sp + 96];
           P64[Sp] = _s5pva::P64;
           P64[Sp + 96] = _s5pv9::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qSs; else goto c5qQZ;
       u5qSs: // global
           call _c5qQY(R1) args: 0, res: 0, upd: 0;
       c5qQZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qQS_info" {
     block_c5qQS_info:
         const _c5qQS;
         const 12;
         const 30;
 },
 _c5qQY() //  [R1]
         { []
         }
     {offset
       c5qQY: // global
           if (R1 & 7 == 1) goto u5qSh; else goto c5qS1;
       u5qSh: // global
           Sp = Sp + 112;
           call _c5qRZ() args: 0, res: 0, upd: 0;
       c5qS1: // global
           Hp = Hp + 184;
           if (Hp > HpLim) (likely: False) goto c5qS4; else goto c5qS3;
       c5qS4: // global
           HpAlloc = 184;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qS3: // global
           _s5pvc::P64 = P64[R1 + 6];
           _s5pvd::P64 = P64[R1 + 14];
           I64[Hp - 176] = sat_s5pvf_info;
           _s5puL::P64 = P64[Sp + 56];
           P64[Hp - 160] = _s5puL::P64;
           P64[Hp - 152] = P64[Sp + 48];
           P64[Hp - 144] = P64[Sp + 40];
           P64[Hp - 136] = P64[Sp + 32];
           P64[Hp - 128] = P64[Sp + 24];
           P64[Hp - 120] = P64[Sp + 16];
           P64[Hp - 112] = P64[Sp + 8];
           P64[Hp - 104] = _s5pvd::P64;
           I64[Hp - 96] = sat_s5pve_info;
           P64[Hp - 80] = _s5puL::P64;
           P64[Hp - 72] = P64[Sp + 64];
           P64[Hp - 64] = P64[Sp + 72];
           P64[Hp - 56] = P64[Sp + 80];
           P64[Hp - 48] = P64[Sp + 88];
           P64[Hp - 40] = P64[Sp + 96];
           P64[Hp - 32] = P64[Sp + 104];
           P64[Hp - 24] = _s5pvc::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 96;
           P64[Hp] = Hp - 176;
           R1 = Hp - 14;
           Sp = Sp + 112;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qQY_info" {
     block_c5qQY_info:
         const _c5qQY;
         const 13;
         const 30;
 },
 _c5qRZ() //  []
         { []
         }
     {offset
       c5qRZ: // global
           R1 = []_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.573160308 UTC

[section ""data" . Data.OldList.zip7_closure" {
     Data.OldList.zip7_closure:
         const Data.OldList.zip7_info;
 },
 Data.OldList.zip7_slow() //  [R1]
         { []
         }
     {offset
       c5qU1: // global
           R6 = P64[Sp + 32];
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call Data.OldList.zip7_entry(R6,
                                        R5,
                                        R4,
                                        R3,
                                        R2,
                                        R1) args: 24, res: 0, upd: 8;
     }
 },
 Data.OldList.zip7_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c5qU5: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5qU6; else goto c5qU7;
       c5qU6: // global
           R1 = Data.OldList.zip7_closure;
           P64[Sp - 40] = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           call (stg_gc_fun)(R1) args: 64, res: 0, upd: 8;
       c5qU7: // global
           _B3::P64 = R6;
           R6 = R5;
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = GHC.Tuple.(,,,,,,)_closure+7;
           P64[Sp - 8] = _B3::P64;
           Sp = Sp - 8;
           call Data.OldList.zipWith7_entry(R6,
                                            R5,
                                            R4,
                                            R3,
                                            R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.zip7_info" {
     Data.OldList.zip7_info:
         const Data.OldList.zip7_entry;
         const 0;
         const 14;
         const 30064771072;
         const 0;
         const 7;
         const Data.OldList.zip7_slow;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.585079023 UTC

[section ""data" . Data.OldList.$wunzip4_closure" {
     Data.OldList.$wunzip4_closure:
         const Data.OldList.$wunzip4_info;
 },
 ds_s5pvp_entry() //  [R1]
         { []
         }
     {offset
       c5qUC: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5qUD; else goto c5qUE;
       c5qUD: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qUE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5qUz_info;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call Data.OldList.$wunzip4_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds_s5pvp_info" {
     ds_s5pvp_info:
         const ds_s5pvp_entry;
         const 1;
         const 16;
 },
 _c5qUz() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       c5qUz: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c5qUH; else goto c5qUG;
       c5qUH: // global
           HpAlloc = 40;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call stg_gc_pppp(R4, R3, R2, R1) args: 8, res: 8, upd: 24;
       c5qUG: // global
           I64[Hp - 32] = (,,,)_con_info;
           P64[Hp - 24] = R1;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           R1 = Hp - 31;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5qUz_info" {
     block_c5qUz_info:
         const _c5qUz;
         const 0;
         const 30;
 },
 Data.OldList.$wunzip4_entry() //  [R2]
         { []
         }
     {offset
       c5qUM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5qUN; else goto c5qUO;
       c5qUN: // global
           R2 = R2;
           R1 = Data.OldList.$wunzip4_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5qUO: // global
           I64[Sp - 8] = block_c5qUk_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qV4; else goto c5qUl;
       u5qV4: // global
           call _c5qUk(R1) args: 0, res: 0, upd: 0;
       c5qUl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.$wunzip4_info" {
     Data.OldList.$wunzip4_info:
         const Data.OldList.$wunzip4_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5qUk() //  [R1]
         { []
         }
     {offset
       c5qUk: // global
           if (R1 & 7 == 1) goto c5qUJ; else goto c5qUK;
       c5qUJ: // global
           R4 = GHC.Types.[]_closure+1;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.[]_closure+1;
           R1 = GHC.Types.[]_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5qUK: // global
           I64[Sp - 8] = block_c5qUq_info;
           _s5pvj::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5pvj::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qV3; else goto c5qUr;
       u5qV3: // global
           call _c5qUq(R1) args: 0, res: 0, upd: 0;
       c5qUr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qUk_info" {
     block_c5qUk_info:
         const _c5qUk;
         const 0;
         const 30;
 },
 _c5qUq() //  [R1]
         { []
         }
     {offset
       c5qUq: // global
           Hp = Hp + 216;
           if (Hp > HpLim) (likely: False) goto c5qV2; else goto c5qV1;
       c5qV2: // global
           HpAlloc = 216;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qV1: // global
           _s5pvl::P64 = P64[R1 + 7];
           _s5pvm::P64 = P64[R1 + 15];
           _s5pvn::P64 = P64[R1 + 23];
           _s5pvo::P64 = P64[R1 + 31];
           I64[Hp - 208] = ds_s5pvp_info;
           P64[Hp - 192] = P64[Sp + 8];
           I64[Hp - 184] = stg_sel_3_upd_info;
           _c5qUv::P64 = Hp - 208;
           P64[Hp - 168] = _c5qUv::P64;
           I64[Hp - 160] = :_con_info;
           P64[Hp - 152] = _s5pvo::P64;
           P64[Hp - 144] = Hp - 184;
           I64[Hp - 136] = stg_sel_2_upd_info;
           P64[Hp - 120] = _c5qUv::P64;
           I64[Hp - 112] = :_con_info;
           P64[Hp - 104] = _s5pvn::P64;
           P64[Hp - 96] = Hp - 136;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = _c5qUv::P64;
           I64[Hp - 64] = :_con_info;
           P64[Hp - 56] = _s5pvm::P64;
           P64[Hp - 48] = Hp - 88;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _c5qUv::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5pvl::P64;
           P64[Hp] = Hp - 40;
           R4 = Hp - 158;
           R3 = Hp - 110;
           R2 = Hp - 62;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qUq_info" {
     block_c5qUq_info:
         const _c5qUq;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.604186586 UTC

[section ""data" . Data.OldList.unzip4_closure" {
     Data.OldList.unzip4_closure:
         const Data.OldList.unzip4_info;
 },
 Data.OldList.unzip4_entry() //  [R2]
         { []
         }
     {offset
       c5qVY: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5qVZ; else goto c5qW0;
       c5qVZ: // global
           R2 = R2;
           R1 = Data.OldList.unzip4_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5qW0: // global
           I64[Sp - 8] = block_c5qVV_info;
           R2 = R2;
           Sp = Sp - 8;
           call Data.OldList.$wunzip4_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.unzip4_info" {
     Data.OldList.unzip4_info:
         const Data.OldList.unzip4_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5qVV() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       c5qVV: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c5qW3; else goto c5qW2;
       c5qW3: // global
           HpAlloc = 40;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call stg_gc_pppp(R4, R3, R2, R1) args: 8, res: 8, upd: 8;
       c5qW2: // global
           I64[Hp - 32] = (,,,)_con_info;
           P64[Hp - 24] = R1;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           R1 = Hp - 31;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qVV_info" {
     block_c5qVV_info:
         const _c5qVV;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.617509822 UTC

[section ""data" . Data.OldList.$wunzip5_closure" {
     Data.OldList.$wunzip5_closure:
         const Data.OldList.$wunzip5_info;
 },
 ds_s5pwd_entry() //  [R1]
         { []
         }
     {offset
       c5qWD: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c5qWE; else goto c5qWF;
       c5qWE: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qWF: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5qWy_info;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call Data.OldList.$wunzip5_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds_s5pwd_info" {
     ds_s5pwd_info:
         const ds_s5pwd_entry;
         const 1;
         const 16;
 },
 _c5qWy() //  [R1, R2, R3, R4, R5]
         { []
         }
     {offset
       c5qWy: // global
           P64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           P64[Sp] = R1;
           Sp = Sp - 40;
           call _c5qWz() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5qWy_info" {
     block_c5qWy_info:
         const _c5qWy;
         const 0;
         const 30;
 },
 _c5qWz() //  []
         { []
         }
     {offset
       c5qWz: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5qWI; else goto c5qWH;
       c5qWI: // global
           HpAlloc = 48;
           I64[Sp] = block_c5qWz_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 24;
       c5qWH: // global
           I64[Hp - 40] = (,,,,)_con_info;
           P64[Hp - 32] = P64[Sp + 40];
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = P64[Sp + 16];
           P64[Hp - 8] = P64[Sp + 24];
           P64[Hp] = P64[Sp + 32];
           R1 = Hp - 39;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5qWz_info" {
     block_c5qWz_info:
         const _c5qWz;
         const 5;
         const 30;
 },
 Data.OldList.$wunzip5_entry() //  [R2]
         { []
         }
     {offset
       c5qWP: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5qWQ; else goto c5qWR;
       c5qWQ: // global
           R2 = R2;
           R1 = Data.OldList.$wunzip5_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5qWR: // global
           I64[Sp - 8] = block_c5qWj_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qX9; else goto c5qWk;
       u5qX9: // global
           call _c5qWj(R1) args: 0, res: 0, upd: 0;
       c5qWk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.$wunzip5_info" {
     Data.OldList.$wunzip5_info:
         const Data.OldList.$wunzip5_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5qWj() //  [R1]
         { []
         }
     {offset
       c5qWj: // global
           if (R1 & 7 == 1) goto c5qWM; else goto c5qWN;
       c5qWM: // global
           R5 = GHC.Types.[]_closure+1;
           R4 = GHC.Types.[]_closure+1;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.[]_closure+1;
           R1 = GHC.Types.[]_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5qWN: // global
           I64[Sp - 8] = block_c5qWp_info;
           _s5pw6::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5pw6::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qX8; else goto c5qWq;
       u5qX8: // global
           call _c5qWp(R1) args: 0, res: 0, upd: 0;
       c5qWq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qWj_info" {
     block_c5qWj_info:
         const _c5qWj;
         const 0;
         const 30;
 },
 _c5qWp() //  [R1]
         { []
         }
     {offset
       c5qWp: // global
           Hp = Hp + 264;
           if (Hp > HpLim) (likely: False) goto c5qX7; else goto c5qX6;
       c5qX7: // global
           HpAlloc = 264;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qX6: // global
           _s5pw8::P64 = P64[R1 + 7];
           _s5pw9::P64 = P64[R1 + 15];
           _s5pwa::P64 = P64[R1 + 23];
           _s5pwb::P64 = P64[R1 + 31];
           _s5pwc::P64 = P64[R1 + 39];
           I64[Hp - 256] = ds_s5pwd_info;
           P64[Hp - 240] = P64[Sp + 8];
           I64[Hp - 232] = stg_sel_4_upd_info;
           _c5qWu::P64 = Hp - 256;
           P64[Hp - 216] = _c5qWu::P64;
           I64[Hp - 208] = :_con_info;
           P64[Hp - 200] = _s5pwc::P64;
           P64[Hp - 192] = Hp - 232;
           I64[Hp - 184] = stg_sel_3_upd_info;
           P64[Hp - 168] = _c5qWu::P64;
           I64[Hp - 160] = :_con_info;
           P64[Hp - 152] = _s5pwb::P64;
           P64[Hp - 144] = Hp - 184;
           I64[Hp - 136] = stg_sel_2_upd_info;
           P64[Hp - 120] = _c5qWu::P64;
           I64[Hp - 112] = :_con_info;
           P64[Hp - 104] = _s5pwa::P64;
           P64[Hp - 96] = Hp - 136;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = _c5qWu::P64;
           I64[Hp - 64] = :_con_info;
           P64[Hp - 56] = _s5pw9::P64;
           P64[Hp - 48] = Hp - 88;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _c5qWu::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5pw8::P64;
           P64[Hp] = Hp - 40;
           R5 = Hp - 206;
           R4 = Hp - 158;
           R3 = Hp - 110;
           R2 = Hp - 62;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qWp_info" {
     block_c5qWp_info:
         const _c5qWp;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.637325793 UTC

[section ""data" . Data.OldList.unzip5_closure" {
     Data.OldList.unzip5_closure:
         const Data.OldList.unzip5_info;
 },
 Data.OldList.unzip5_entry() //  [R2]
         { []
         }
     {offset
       c5qYi: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c5qYj; else goto c5qYk;
       c5qYj: // global
           R2 = R2;
           R1 = Data.OldList.unzip5_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5qYk: // global
           I64[Sp - 8] = block_c5qYd_info;
           R2 = R2;
           Sp = Sp - 8;
           call Data.OldList.$wunzip5_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.unzip5_info" {
     Data.OldList.unzip5_info:
         const Data.OldList.unzip5_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5qYd() //  [R1, R2, R3, R4, R5]
         { []
         }
     {offset
       c5qYd: // global
           P64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           P64[Sp] = R1;
           Sp = Sp - 40;
           call _c5qYe() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5qYd_info" {
     block_c5qYd_info:
         const _c5qYd;
         const 0;
         const 30;
 },
 _c5qYe() //  []
         { []
         }
     {offset
       c5qYe: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5qYn; else goto c5qYm;
       c5qYn: // global
           HpAlloc = 48;
           I64[Sp] = block_c5qYe_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c5qYm: // global
           I64[Hp - 40] = (,,,,)_con_info;
           P64[Hp - 32] = P64[Sp + 40];
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = P64[Sp + 16];
           P64[Hp - 8] = P64[Sp + 24];
           P64[Hp] = P64[Sp + 32];
           R1 = Hp - 39;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qYe_info" {
     block_c5qYe_info:
         const _c5qYe;
         const 5;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.64899223 UTC

[section ""data" . Data.OldList.$wunzip6_closure" {
     Data.OldList.$wunzip6_closure:
         const Data.OldList.$wunzip6_info;
 },
 ds_s5pxg_entry() //  [R1]
         { []
         }
     {offset
       c5qZ8: // global
           if ((Sp + -72) < SpLim) (likely: False) goto c5qZ9; else goto c5qZa;
       c5qZ9: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5qZa: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5qZ3_info;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call Data.OldList.$wunzip6_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds_s5pxg_info" {
     ds_s5pxg_info:
         const ds_s5pxg_entry;
         const 1;
         const 16;
 },
 _c5qZ3() //  [R1, R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c5qZ3: // global
           P64[Sp - 40] = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           P64[Sp] = R1;
           Sp = Sp - 48;
           call _c5qZ4() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5qZ3_info" {
     block_c5qZ3_info:
         const _c5qZ3;
         const 0;
         const 30;
 },
 _c5qZ4() //  []
         { []
         }
     {offset
       c5qZ4: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5qZd; else goto c5qZc;
       c5qZd: // global
           HpAlloc = 56;
           I64[Sp] = block_c5qZ4_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 24;
       c5qZc: // global
           I64[Hp - 48] = (,,,,,)_con_info;
           P64[Hp - 40] = P64[Sp + 48];
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = P64[Sp + 16];
           P64[Hp - 16] = P64[Sp + 24];
           P64[Hp - 8] = P64[Sp + 32];
           P64[Hp] = P64[Sp + 40];
           R1 = Hp - 47;
           Sp = Sp + 56;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5qZ4_info" {
     block_c5qZ4_info:
         const _c5qZ4;
         const 6;
         const 30;
 },
 Data.OldList.$wunzip6_entry() //  [R2]
         { []
         }
     {offset
       c5qZk: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5qZl; else goto c5qZm;
       c5qZl: // global
           R2 = R2;
           R1 = Data.OldList.$wunzip6_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5qZm: // global
           I64[Sp - 8] = block_c5qYO_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qZG; else goto c5qYP;
       u5qZG: // global
           call _c5qYO(R1) args: 0, res: 0, upd: 0;
       c5qYP: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.$wunzip6_info" {
     Data.OldList.$wunzip6_info:
         const Data.OldList.$wunzip6_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5qYO() //  [R1]
         { []
         }
     {offset
       c5qYO: // global
           if (R1 & 7 == 1) goto c5qZh; else goto c5qZi;
       c5qZh: // global
           R6 = GHC.Types.[]_closure+1;
           R5 = GHC.Types.[]_closure+1;
           R4 = GHC.Types.[]_closure+1;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.[]_closure+1;
           R1 = GHC.Types.[]_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R6,
                               R5,
                               R4,
                               R3,
                               R2,
                               R1) args: 8, res: 0, upd: 8;
       c5qZi: // global
           I64[Sp - 8] = block_c5qYU_info;
           _s5px8::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5px8::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5qZF; else goto c5qYV;
       u5qZF: // global
           call _c5qYU(R1) args: 0, res: 0, upd: 0;
       c5qYV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qYO_info" {
     block_c5qYO_info:
         const _c5qYO;
         const 0;
         const 30;
 },
 _c5qYU() //  [R1]
         { []
         }
     {offset
       c5qYU: // global
           Hp = Hp + 312;
           if (Hp > HpLim) (likely: False) goto c5qZE; else goto c5qZD;
       c5qZE: // global
           HpAlloc = 312;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5qZD: // global
           _s5pxa::P64 = P64[R1 + 7];
           _s5pxb::P64 = P64[R1 + 15];
           _s5pxc::P64 = P64[R1 + 23];
           _s5pxd::P64 = P64[R1 + 31];
           _s5pxe::P64 = P64[R1 + 39];
           _s5pxf::P64 = P64[R1 + 47];
           I64[Hp - 304] = ds_s5pxg_info;
           P64[Hp - 288] = P64[Sp + 8];
           I64[Hp - 280] = stg_sel_5_upd_info;
           _c5qYZ::P64 = Hp - 304;
           P64[Hp - 264] = _c5qYZ::P64;
           I64[Hp - 256] = :_con_info;
           P64[Hp - 248] = _s5pxf::P64;
           P64[Hp - 240] = Hp - 280;
           I64[Hp - 232] = stg_sel_4_upd_info;
           P64[Hp - 216] = _c5qYZ::P64;
           I64[Hp - 208] = :_con_info;
           P64[Hp - 200] = _s5pxe::P64;
           P64[Hp - 192] = Hp - 232;
           I64[Hp - 184] = stg_sel_3_upd_info;
           P64[Hp - 168] = _c5qYZ::P64;
           I64[Hp - 160] = :_con_info;
           P64[Hp - 152] = _s5pxd::P64;
           P64[Hp - 144] = Hp - 184;
           I64[Hp - 136] = stg_sel_2_upd_info;
           P64[Hp - 120] = _c5qYZ::P64;
           I64[Hp - 112] = :_con_info;
           P64[Hp - 104] = _s5pxc::P64;
           P64[Hp - 96] = Hp - 136;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = _c5qYZ::P64;
           I64[Hp - 64] = :_con_info;
           P64[Hp - 56] = _s5pxb::P64;
           P64[Hp - 48] = Hp - 88;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _c5qYZ::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5pxa::P64;
           P64[Hp] = Hp - 40;
           R6 = Hp - 254;
           R5 = Hp - 206;
           R4 = Hp - 158;
           R3 = Hp - 110;
           R2 = Hp - 62;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R6,
                               R5,
                               R4,
                               R3,
                               R2,
                               R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5qYU_info" {
     block_c5qYU_info:
         const _c5qYU;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.670109271 UTC

[section ""data" . Data.OldList.unzip6_closure" {
     Data.OldList.unzip6_closure:
         const Data.OldList.unzip6_info;
 },
 Data.OldList.unzip6_entry() //  [R2]
         { []
         }
     {offset
       c5r0U: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c5r0V; else goto c5r0W;
       c5r0V: // global
           R2 = R2;
           R1 = Data.OldList.unzip6_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5r0W: // global
           I64[Sp - 8] = block_c5r0P_info;
           R2 = R2;
           Sp = Sp - 8;
           call Data.OldList.$wunzip6_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.unzip6_info" {
     Data.OldList.unzip6_info:
         const Data.OldList.unzip6_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5r0P() //  [R1, R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c5r0P: // global
           P64[Sp - 40] = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           P64[Sp] = R1;
           Sp = Sp - 48;
           call _c5r0Q() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5r0P_info" {
     block_c5r0P_info:
         const _c5r0P;
         const 0;
         const 30;
 },
 _c5r0Q() //  []
         { []
         }
     {offset
       c5r0Q: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5r0Z; else goto c5r0Y;
       c5r0Z: // global
           HpAlloc = 56;
           I64[Sp] = block_c5r0Q_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c5r0Y: // global
           I64[Hp - 48] = (,,,,,)_con_info;
           P64[Hp - 40] = P64[Sp + 48];
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = P64[Sp + 16];
           P64[Hp - 16] = P64[Sp + 24];
           P64[Hp - 8] = P64[Sp + 32];
           P64[Hp] = P64[Sp + 40];
           R1 = Hp - 47;
           Sp = Sp + 56;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5r0Q_info" {
     block_c5r0Q_info:
         const _c5r0Q;
         const 6;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.685069715 UTC

[section ""data" . Data.OldList.$wunzip7_closure" {
     Data.OldList.$wunzip7_closure:
         const Data.OldList.$wunzip7_info;
 },
 ds_s5pyA_entry() //  [R1]
         { []
         }
     {offset
       c5r1L: // global
           if ((Sp + -80) < SpLim) (likely: False) goto c5r1M; else goto c5r1N;
       c5r1M: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5r1N: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5r1G_info;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call Data.OldList.$wunzip7_entry(R2) args: 8, res: 16, upd: 24;
     }
 },
 section ""relreadonly" . ds_s5pyA_info" {
     ds_s5pyA_info:
         const ds_s5pyA_entry;
         const 1;
         const 16;
 },
 _c5r1G() //  [R1, R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c5r1G: // global
           P64[Sp - 40] = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           P64[Sp + 8] = R1;
           Sp = Sp - 48;
           call _c5r1H() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5r1G_info" {
     block_c5r1G_info:
         const _c5r1G;
         const 0;
         const 30;
 },
 _c5r1H() //  []
         { []
         }
     {offset
       c5r1H: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c5r1Q; else goto c5r1P;
       c5r1Q: // global
           HpAlloc = 64;
           I64[Sp] = block_c5r1H_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 24;
       c5r1P: // global
           I64[Hp - 56] = (,,,,,,)_con_info;
           P64[Hp - 48] = P64[Sp + 56];
           P64[Hp - 40] = P64[Sp + 8];
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = P64[Sp + 24];
           P64[Hp - 16] = P64[Sp + 32];
           P64[Hp - 8] = P64[Sp + 40];
           P64[Hp] = P64[Sp + 48];
           R1 = Hp - 55;
           Sp = Sp + 64;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5r1H_info" {
     block_c5r1H_info:
         const _c5r1H;
         const 7;
         const 30;
 },
 Data.OldList.$wunzip7_entry() //  [R2]
         { []
         }
     {offset
       c5r1X: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5r1Y; else goto c5r1Z;
       c5r1Y: // global
           R2 = R2;
           R1 = Data.OldList.$wunzip7_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5r1Z: // global
           I64[Sp - 8] = block_c5r1r_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5r2l; else goto c5r1s;
       u5r2l: // global
           call _c5r1r(R1) args: 0, res: 0, upd: 0;
       c5r1s: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.$wunzip7_info" {
     Data.OldList.$wunzip7_info:
         const Data.OldList.$wunzip7_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5r1r() //  [R1]
         { []
         }
     {offset
       c5r1r: // global
           if (R1 & 7 == 1) goto c5r1U; else goto c5r1V;
       c5r1U: // global
           R6 = GHC.Types.[]_closure+1;
           R5 = GHC.Types.[]_closure+1;
           R4 = GHC.Types.[]_closure+1;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.[]_closure+1;
           R1 = GHC.Types.[]_closure+1;
           P64[Sp] = GHC.Types.[]_closure+1;
           call (I64[P64[Sp + 8]])(R6,
                                   R5,
                                   R4,
                                   R3,
                                   R2,
                                   R1) args: 16, res: 0, upd: 8;
       c5r1V: // global
           I64[Sp - 8] = block_c5r1x_info;
           _s5pyr::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5pyr::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5r2k; else goto c5r1y;
       u5r2k: // global
           call _c5r1x(R1) args: 0, res: 0, upd: 0;
       c5r1y: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5r1r_info" {
     block_c5r1r_info:
         const _c5r1r;
         const 0;
         const 30;
 },
 _c5r1x() //  [R1]
         { []
         }
     {offset
       c5r1x: // global
           Hp = Hp + 360;
           if (Hp > HpLim) (likely: False) goto c5r2j; else goto c5r2i;
       c5r2j: // global
           HpAlloc = 360;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5r2i: // global
           _s5pyt::P64 = P64[R1 + 7];
           _s5pyu::P64 = P64[R1 + 15];
           _s5pyv::P64 = P64[R1 + 23];
           _s5pyw::P64 = P64[R1 + 31];
           _s5pyx::P64 = P64[R1 + 39];
           _s5pyy::P64 = P64[R1 + 47];
           _s5pyz::P64 = P64[R1 + 55];
           I64[Hp - 352] = ds_s5pyA_info;
           P64[Hp - 336] = P64[Sp + 8];
           I64[Hp - 328] = stg_sel_6_upd_info;
           _c5r1C::P64 = Hp - 352;
           P64[Hp - 312] = _c5r1C::P64;
           I64[Hp - 304] = :_con_info;
           P64[Hp - 296] = _s5pyz::P64;
           P64[Hp - 288] = Hp - 328;
           I64[Hp - 280] = stg_sel_5_upd_info;
           P64[Hp - 264] = _c5r1C::P64;
           I64[Hp - 256] = :_con_info;
           P64[Hp - 248] = _s5pyy::P64;
           P64[Hp - 240] = Hp - 280;
           I64[Hp - 232] = stg_sel_4_upd_info;
           P64[Hp - 216] = _c5r1C::P64;
           I64[Hp - 208] = :_con_info;
           P64[Hp - 200] = _s5pyx::P64;
           P64[Hp - 192] = Hp - 232;
           I64[Hp - 184] = stg_sel_3_upd_info;
           P64[Hp - 168] = _c5r1C::P64;
           I64[Hp - 160] = :_con_info;
           P64[Hp - 152] = _s5pyw::P64;
           P64[Hp - 144] = Hp - 184;
           I64[Hp - 136] = stg_sel_2_upd_info;
           P64[Hp - 120] = _c5r1C::P64;
           I64[Hp - 112] = :_con_info;
           P64[Hp - 104] = _s5pyv::P64;
           P64[Hp - 96] = Hp - 136;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = _c5r1C::P64;
           I64[Hp - 64] = :_con_info;
           P64[Hp - 56] = _s5pyu::P64;
           P64[Hp - 48] = Hp - 88;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _c5r1C::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5pyt::P64;
           P64[Hp] = Hp - 40;
           R6 = Hp - 254;
           R5 = Hp - 206;
           R4 = Hp - 158;
           R3 = Hp - 110;
           R2 = Hp - 62;
           R1 = Hp - 14;
           P64[Sp + 8] = Hp - 302;
           Sp = Sp + 8;
           call (I64[P64[Sp + 8]])(R6,
                                   R5,
                                   R4,
                                   R3,
                                   R2,
                                   R1) args: 16, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5r1x_info" {
     block_c5r1x_info:
         const _c5r1x;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.707832913 UTC

[section ""data" . Data.OldList.unzip7_closure" {
     Data.OldList.unzip7_closure:
         const Data.OldList.unzip7_info;
 },
 Data.OldList.unzip7_entry() //  [R2]
         { []
         }
     {offset
       c5r3G: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c5r3H; else goto c5r3I;
       c5r3H: // global
           R2 = R2;
           R1 = Data.OldList.unzip7_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5r3I: // global
           I64[Sp - 8] = block_c5r3B_info;
           R2 = R2;
           Sp = Sp - 8;
           call Data.OldList.$wunzip7_entry(R2) args: 8, res: 16, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.unzip7_info" {
     Data.OldList.unzip7_info:
         const Data.OldList.unzip7_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5r3B() //  [R1, R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c5r3B: // global
           P64[Sp - 40] = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           P64[Sp + 8] = R1;
           Sp = Sp - 48;
           call _c5r3C() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5r3B_info" {
     block_c5r3B_info:
         const _c5r3B;
         const 0;
         const 30;
 },
 _c5r3C() //  []
         { []
         }
     {offset
       c5r3C: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c5r3L; else goto c5r3K;
       c5r3L: // global
           HpAlloc = 64;
           I64[Sp] = block_c5r3C_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c5r3K: // global
           I64[Hp - 56] = (,,,,,,)_con_info;
           P64[Hp - 48] = P64[Sp + 56];
           P64[Hp - 40] = P64[Sp + 8];
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = P64[Sp + 24];
           P64[Hp - 16] = P64[Sp + 32];
           P64[Hp - 8] = P64[Sp + 40];
           P64[Hp] = P64[Sp + 48];
           R1 = Hp - 55;
           Sp = Sp + 64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5r3C_info" {
     block_c5r3C_info:
         const _c5r3C;
         const 7;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.722959953 UTC

[section ""data" . Data.OldList.groupBy_closure" {
     Data.OldList.groupBy_closure:
         const Data.OldList.groupBy_info;
 },
 ds2_s5pA5_entry() //  [R1]
         { []
         }
     {offset
       c5r4s: // global
           _s5pA5::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c5r4t; else goto c5r4u;
       c5r4u: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5r4w; else goto c5r4v;
       c5r4w: // global
           HpAlloc = 32;
           goto c5r4t;
       c5r4t: // global
           R1 = _s5pA5::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5r4v: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5pA5::P64;
           _s5pA0::P64 = P64[_s5pA5::P64 + 16];
           _s5pA3::P64 = P64[_s5pA5::P64 + 24];
           _s5pA4::P64 = P64[_s5pA5::P64 + 32];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _s5pA0::P64;
           P64[Hp] = _s5pA3::P64;
           I64[Sp - 24] = block_c5r4p_info;
           R3 = _s5pA4::P64;
           R2 = Hp - 24;
           Sp = Sp - 24;
           call GHC.List.$wspan_entry(R3, R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds2_s5pA5_info" {
     ds2_s5pA5_info:
         const ds2_s5pA5_entry;
         const 3;
         const 15;
 },
 _c5r4p() //  [R1, R2]
         { []
         }
     {offset
       c5r4p: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5r4z; else goto c5r4y;
       c5r4z: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c5r4y: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5r4p_info" {
     block_c5r4p_info:
         const _c5r4p;
         const 0;
         const 30;
 },
 sat_s5pAi_entry() //  [R1]
         { []
         }
     {offset
       c5r4H: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5r4I; else goto c5r4J;
       c5r4I: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5r4J: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c5r4E_info;
           _s5pA0::P64 = P64[R1 + 16];
           R1 = P64[R1 + 24];
           P64[Sp - 24] = _s5pA0::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5r4N; else goto c5r4F;
       u5r4N: // global
           call _c5r4E(R1) args: 0, res: 0, upd: 0;
       c5r4F: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pAi_info" {
     sat_s5pAi_info:
         const sat_s5pAi_entry;
         const 2;
         const 18;
 },
 _c5r4E() //  [R1]
         { []
         }
     {offset
       c5r4E: // global
           R3 = P64[R1 + 15];
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call Data.OldList.groupBy_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5r4E_info" {
     block_c5r4E_info:
         const _c5r4E;
         const 1;
         const 30;
 },
 Data.OldList.groupBy_entry() //  [R2, R3]
         { []
         }
     {offset
       c5r4S: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5r4T; else goto c5r4U;
       c5r4T: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.groupBy_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5r4U: // global
           I64[Sp - 16] = block_c5r4e_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5r53; else goto c5r4f;
       u5r53: // global
           call _c5r4e(R1) args: 0, res: 0, upd: 0;
       c5r4f: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.groupBy_info" {
     Data.OldList.groupBy_info:
         const Data.OldList.groupBy_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5r4e() //  [R1]
         { []
         }
     {offset
       c5r4e: // global
           if (R1 & 7 == 1) goto c5r4P; else goto c5r4Q;
       c5r4P: // global
           R1 = []_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5r4Q: // global
           Hp = Hp + 144;
           if (Hp > HpLim) (likely: False) goto c5r52; else goto c5r51;
       c5r52: // global
           HpAlloc = 144;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5r51: // global
           _s5pA3::P64 = P64[R1 + 6];
           _s5pA4::P64 = P64[R1 + 14];
           I64[Hp - 136] = ds2_s5pA5_info;
           _s5pA0::P64 = P64[Sp + 8];
           P64[Hp - 120] = _s5pA0::P64;
           P64[Hp - 112] = _s5pA3::P64;
           P64[Hp - 104] = _s5pA4::P64;
           I64[Hp - 96] = sat_s5pAi_info;
           P64[Hp - 80] = _s5pA0::P64;
           _c5r4k::P64 = Hp - 136;
           P64[Hp - 72] = _c5r4k::P64;
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = _c5r4k::P64;
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = _s5pA3::P64;
           P64[Hp - 24] = Hp - 64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 96;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5r4e_info" {
     block_c5r4e_info:
         const _c5r4e;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.741415855 UTC

[section ""data" . Data.OldList.group_closure" {
     Data.OldList.group_closure:
         const Data.OldList.group_info;
 },
 sat_s5pAl_entry() //  [R1]
         { []
         }
     {offset
       c5r5V: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5r5W; else goto c5r5X;
       c5r5W: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5r5X: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pAl_info" {
     sat_s5pAl_info:
         const sat_s5pAl_entry;
         const 1;
         const 16;
 },
 Data.OldList.group_entry() //  [R2, R3]
         { []
         }
     {offset
       c5r5Y: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5r62; else goto c5r61;
       c5r62: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.group_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5r61: // global
           I64[Hp - 16] = sat_s5pAl_info;
           P64[Hp] = R2;
           R3 = R3;
           R2 = Hp - 16;
           call Data.OldList.groupBy_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.group_info" {
     Data.OldList.group_info:
         const Data.OldList.group_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.748079779 UTC

[section ""data" . poly_tailsGo_r5kSn_closure" {
     poly_tailsGo_r5kSn_closure:
         const poly_tailsGo_r5kSn_info;
 },
 sat_s5pAq_entry() //  [R1]
         { []
         }
     {offset
       c5r6s: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5r6t; else goto c5r6u;
       c5r6t: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5r6u: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5r6l_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5r6B; else goto c5r6m;
       u5r6B: // global
           call _c5r6l(R1) args: 0, res: 0, upd: 0;
       c5r6m: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pAq_info" {
     sat_s5pAq_info:
         const sat_s5pAq_entry;
         const 1;
         const 16;
 },
 _c5r6l() //  [R1]
         { []
         }
     {offset
       c5r6l: // global
           if (R1 & 7 == 1) goto c5r6p; else goto c5r6q;
       c5r6p: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c5r6q: // global
           R2 = P64[R1 + 14];
           Sp = Sp + 8;
           call poly_tailsGo_r5kSn_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5r6l_info" {
     block_c5r6l_info:
         const _c5r6l;
         const 0;
         const 30;
 },
 poly_tailsGo_r5kSn_entry() //  [R2]
         { []
         }
     {offset
       c5r6D: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5r6H; else goto c5r6G;
       c5r6H: // global
           HpAlloc = 48;
           R2 = R2;
           R1 = poly_tailsGo_r5kSn_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5r6G: // global
           I64[Hp - 40] = sat_s5pAq_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . poly_tailsGo_r5kSn_info" {
     poly_tailsGo_r5kSn_info:
         const poly_tailsGo_r5kSn_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.755361213 UTC

[section ""data" . Data.OldList.tails_closure" {
     Data.OldList.tails_closure:
         const Data.OldList.tails_info;
 },
 Data.OldList.tails_entry() //  [R2]
         { []
         }
     {offset
       c5r78: // global
           R2 = R2;
           call poly_tailsGo_r5kSn_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.tails_info" {
     Data.OldList.tails_info:
         const Data.OldList.tails_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.761976186 UTC

[section ""data" . Data.OldList.nonEmptySubsequences_closure" {
     Data.OldList.nonEmptySubsequences_closure:
         const Data.OldList.nonEmptySubsequences_info;
 },
 go_s5pAx_entry() //  [R1, R2]
         { []
         }
     {offset
       c5r7F: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5r7G; else goto c5r7H;
       c5r7G: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5r7H: // global
           I64[Sp - 24] = block_c5r7y_info;
           _s5pAx::P64 = R1;
           _s5pAu::P64 = P64[R1 + 7];
           R1 = R2;
           P64[Sp - 16] = _s5pAu::P64;
           P64[Sp - 8] = _s5pAx::P64;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5r7U; else goto c5r7z;
       u5r7U: // global
           call _c5r7y(R1) args: 0, res: 0, upd: 0;
       c5r7z: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . go_s5pAx_info" {
     go_s5pAx_info:
         const go_s5pAx_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c5r7y() //  [R1]
         { []
         }
     {offset
       c5r7y: // global
           if (R1 & 7 == 1) goto c5r7C; else goto c5r7D;
       c5r7C: // global
           R1 = []_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5r7D: // global
           Hp = Hp + 104;
           if (Hp > HpLim) (likely: False) goto c5r7T; else goto c5r7S;
       c5r7T: // global
           HpAlloc = 104;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5r7S: // global
           _s5pAA::P64 = P64[R1 + 6];
           _s5pAB::P64 = P64[R1 + 14];
           I64[Hp - 96] = stg_ap_2_upd_info;
           P64[Hp - 80] = P64[Sp + 16];
           P64[Hp - 72] = _s5pAB::P64;
           I64[Hp - 64] = :_con_info;
           P64[Hp - 56] = P64[Sp + 8];
           P64[Hp - 48] = _s5pAA::P64;
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = Hp - 62;
           P64[Hp - 24] = Hp - 96;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5pAA::P64;
           P64[Hp] = Hp - 38;
           R1 = Hp - 14;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5r7y_info" {
     block_c5r7y_info:
         const _c5r7y;
         const 2;
         const 30;
 },
 sat_s5pAG_entry() //  [R1]
         { []
         }
     {offset
       c5r7X: // global
           _s5pAG::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c5r7Y; else goto c5r7Z;
       c5r7Z: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5r81; else goto c5r80;
       c5r81: // global
           HpAlloc = 16;
           goto c5r7Y;
       c5r7Y: // global
           R1 = _s5pAG::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5r80: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5pAG::P64;
           _s5pAu::P64 = P64[_s5pAG::P64 + 16];
           _s5pAv::P64 = P64[_s5pAG::P64 + 24];
           I64[Hp - 8] = go_s5pAx_info;
           P64[Hp] = _s5pAu::P64;
           I64[Sp - 32] = block_c5r7V_info;
           R2 = _s5pAv::P64;
           P64[Sp - 24] = Hp - 7;
           Sp = Sp - 32;
           call Data.OldList.nonEmptySubsequences_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pAG_info" {
     sat_s5pAG_info:
         const sat_s5pAG_entry;
         const 2;
         const 18;
 },
 _c5r7V() //  [R1]
         { []
         }
     {offset
       c5r7V: // global
           R2 = R1;
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call go_s5pAx_entry(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5r7V_info" {
     block_c5r7V_info:
         const _c5r7V;
         const 1;
         const 30;
 },
 Data.OldList.nonEmptySubsequences_entry() //  [R2]
         { []
         }
     {offset
       c5r89: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5r8a; else goto c5r8b;
       c5r8a: // global
           R2 = R2;
           R1 = Data.OldList.nonEmptySubsequences_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5r8b: // global
           I64[Sp - 8] = block_c5r7j_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5r8j; else goto c5r7k;
       u5r8j: // global
           call _c5r7j(R1) args: 0, res: 0, upd: 0;
       c5r7k: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.nonEmptySubsequences_info" {
     Data.OldList.nonEmptySubsequences_info:
         const Data.OldList.nonEmptySubsequences_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5r7j() //  [R1]
         { []
         }
     {offset
       c5r7j: // global
           if (R1 & 7 == 1) goto c5r86; else goto c5r87;
       c5r86: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5r87: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto c5r8i; else goto c5r8h;
       c5r8i: // global
           HpAlloc = 80;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5r8h: // global
           _s5pAu::P64 = P64[R1 + 6];
           _s5pAv::P64 = P64[R1 + 14];
           I64[Hp - 72] = sat_s5pAG_info;
           P64[Hp - 56] = _s5pAu::P64;
           P64[Hp - 48] = _s5pAv::P64;
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = _s5pAu::P64;
           P64[Hp - 24] = GHC.Types.[]_closure+1;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 72;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5r7j_info" {
     block_c5r7j_info:
         const _c5r7j;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.776876476 UTC

[section ""data" . Data.OldList.subsequences_closure" {
     Data.OldList.subsequences_closure:
         const Data.OldList.subsequences_info;
 },
 sat_s5pAI_entry() //  [R1]
         { []
         }
     {offset
       c5r9m: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5r9n; else goto c5r9o;
       c5r9n: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5r9o: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.OldList.nonEmptySubsequences_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pAI_info" {
     sat_s5pAI_info:
         const sat_s5pAI_entry;
         const 1;
         const 16;
 },
 Data.OldList.subsequences_entry() //  [R2]
         { []
         }
     {offset
       c5r9q: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5r9u; else goto c5r9t;
       c5r9u: // global
           HpAlloc = 48;
           R2 = R2;
           R1 = Data.OldList.subsequences_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5r9t: // global
           I64[Hp - 40] = sat_s5pAI_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Types.[]_closure+1;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.subsequences_info" {
     Data.OldList.subsequences_info:
         const Data.OldList.subsequences_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.790548535 UTC

[section ""data" . Data.OldList.permutations1_closure" {
     Data.OldList.permutations1_closure:
         const Data.OldList.permutations1_info;
 },
 sat_s5pAY_entry() //  [R1, R2]
         { []
         }
     {offset
       c5raf: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5raj; else goto c5rai;
       c5raj: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5rai: // global
           _s5pAP::P64 = P64[R1 + 7];
           _s5pAT::P64 = P64[R1 + 15];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5pAT::P64;
           P64[Hp] = R2;
           R2 = Hp - 14;
           R1 = _s5pAP::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5pAY_info" {
     sat_s5pAY_info:
         const sat_s5pAY_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 ds2_s5pAV_entry() //  [R1]
         { []
         }
     {offset
       c5ran: // global
           _s5pAV::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c5rao; else goto c5rap;
       c5rap: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5rar; else goto c5raq;
       c5rar: // global
           HpAlloc = 24;
           goto c5rao;
       c5rao: // global
           R1 = _s5pAV::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5raq: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5pAV::P64;
           _s5pAO::P64 = P64[_s5pAV::P64 + 16];
           _s5pAP::P64 = P64[_s5pAV::P64 + 24];
           _s5pAR::P64 = P64[_s5pAV::P64 + 32];
           _s5pAT::P64 = P64[_s5pAV::P64 + 40];
           _s5pAU::P64 = P64[_s5pAV::P64 + 48];
           I64[Hp - 16] = sat_s5pAY_info;
           P64[Hp - 8] = _s5pAP::P64;
           P64[Hp] = _s5pAT::P64;
           I64[Sp - 24] = block_c5rak_info;
           R4 = _s5pAR::P64;
           R3 = _s5pAU::P64;
           R2 = Hp - 15;
           R1 = _s5pAO::P64;
           Sp = Sp - 24;
           call $winterleave'_s5pAO_entry(R4,
                                          R3,
                                          R2,
                                          R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds2_s5pAV_info" {
     ds2_s5pAV_info:
         const ds2_s5pAV_entry;
         const 5;
         const 15;
 },
 _c5rak() //  [R1, R2]
         { []
         }
     {offset
       c5rak: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5rau; else goto c5rat;
       c5rau: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c5rat: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5rak_info" {
     block_c5rak_info:
         const _c5rak;
         const 0;
         const 30;
 },
 sat_s5pB9_entry() //  [R1]
         { []
         }
     {offset
       c5raD: // global
           _s5pB9::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5raE; else goto c5raF;
       c5raF: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5raH; else goto c5raG;
       c5raH: // global
           HpAlloc = 48;
           goto c5raE;
       c5raE: // global
           R1 = _s5pB9::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5raG: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5pB9::P64;
           _s5pAM::P64 = P64[_s5pB9::P64 + 16];
           _s5pAP::P64 = P64[_s5pB9::P64 + 24];
           _s5pAT::P64 = P64[_s5pB9::P64 + 32];
           _s5pB2::P64 = P64[_s5pB9::P64 + 40];
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = _s5pAT::P64;
           P64[Hp - 24] = _s5pB2::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5pAM::P64;
           P64[Hp] = Hp - 38;
           R2 = Hp - 14;
           R1 = _s5pAP::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pB9_info" {
     sat_s5pB9_info:
         const sat_s5pB9_entry;
         const 4;
         const 15;
 },
 $winterleave'_s5pAO_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       c5raM: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c5raN; else goto c5raO;
       c5raN: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5raO: // global
           I64[Sp - 48] = block_c5r9Z_info;
           _s5pAO::P64 = R1;
           _s5pAM::P64 = P64[R1 + 5];
           _s5pAN::P64 = P64[R1 + 13];
           R1 = R3;
           P64[Sp - 40] = _s5pAM::P64;
           P64[Sp - 32] = _s5pAN::P64;
           P64[Sp - 24] = _s5pAO::P64;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 48;
           if (R1 & 7 != 0) goto u5raW; else goto c5ra0;
       u5raW: // global
           call _c5r9Z(R1) args: 0, res: 0, upd: 0;
       c5ra0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . $winterleave'_s5pAO_info" {
     $winterleave'_s5pAO_info:
         const $winterleave'_s5pAO_entry;
         const 2;
         const 11;
         const 12884901911;
 },
 _c5r9Z() //  [R1]
         { []
         }
     {offset
       c5r9Z: // global
           _s5pAR::P64 = P64[Sp + 40];
           if (R1 & 7 == 1) goto c5raJ; else goto c5raK;
       c5raJ: // global
           R2 = _s5pAR::P64;
           R1 = P64[Sp + 16];
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
       c5raK: // global
           Hp = Hp + 200;
           if (Hp > HpLim) (likely: False) goto c5raV; else goto c5raU;
       c5raV: // global
           HpAlloc = 200;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5raU: // global
           _s5pAT::P64 = P64[R1 + 6];
           _s5pAU::P64 = P64[R1 + 14];
           I64[Hp - 192] = ds2_s5pAV_info;
           P64[Hp - 176] = P64[Sp + 24];
           _s5pAP::P64 = P64[Sp + 32];
           P64[Hp - 168] = _s5pAP::P64;
           P64[Hp - 160] = _s5pAR::P64;
           P64[Hp - 152] = _s5pAT::P64;
           P64[Hp - 144] = _s5pAU::P64;
           I64[Hp - 136] = stg_sel_0_upd_info;
           _c5ra5::P64 = Hp - 192;
           P64[Hp - 120] = _c5ra5::P64;
           I64[Hp - 112] = stg_sel_1_upd_info;
           P64[Hp - 96] = _c5ra5::P64;
           I64[Hp - 88] = sat_s5pB9_info;
           P64[Hp - 72] = P64[Sp + 8];
           P64[Hp - 64] = _s5pAP::P64;
           P64[Hp - 56] = _s5pAT::P64;
           _c5rav::P64 = Hp - 136;
           P64[Hp - 48] = _c5rav::P64;
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = Hp - 88;
           P64[Hp - 24] = Hp - 112;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5pAT::P64;
           P64[Hp] = _c5rav::P64;
           R2 = Hp - 38;
           R1 = Hp - 14;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5r9Z_info" {
     block_c5r9Z_info:
         const _c5r9Z;
         const 5;
         const 30;
 },
 z_s5pBf_entry() //  [R1]
         { []
         }
     {offset
       c5rb2: // global
           _s5pBf::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5rb3; else goto c5rb4;
       c5rb4: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5rb6; else goto c5rb5;
       c5rb6: // global
           HpAlloc = 24;
           goto c5rb3;
       c5rb3: // global
           R1 = _s5pBf::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rb5: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5pBf::P64;
           _s5pAK::P64 = P64[_s5pBf::P64 + 16];
           _s5pAM::P64 = P64[_s5pBf::P64 + 24];
           _s5pAN::P64 = P64[_s5pBf::P64 + 32];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5pAM::P64;
           P64[Hp] = _s5pAK::P64;
           R3 = Hp - 14;
           R2 = _s5pAN::P64;
           Sp = Sp - 16;
           call Data.OldList.permutations1_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . z_s5pBf_info" {
     z_s5pBf_info:
         const z_s5pBf_entry;
         const 3;
         const 15;
 },
 go_s5pBh_entry() //  [R1, R2]
         { []
         }
     {offset
       c5rbj: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5rbk; else goto c5rbl;
       c5rbk: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5rbl: // global
           I64[Sp - 32] = block_c5rbc_info;
           _s5pBh::P64 = R1;
           _s5pAO::P64 = P64[R1 + 7];
           _s5pBf::P64 = P64[R1 + 15];
           R1 = R2;
           P64[Sp - 24] = _s5pAO::P64;
           P64[Sp - 16] = _s5pBf::P64;
           P64[Sp - 8] = _s5pBh::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5rby; else goto c5rbd;
       u5rby: // global
           call _c5rbc(R1) args: 0, res: 0, upd: 0;
       c5rbd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . go_s5pBh_info" {
     go_s5pBh_info:
         const go_s5pBh_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 _c5rbc() //  [R1]
         { []
         }
     {offset
       c5rbc: // global
           if (R1 & 7 == 1) goto c5rbg; else goto c5rbh;
       c5rbg: // global
           R1 = P64[Sp + 16] & (-8);
           Sp = Sp + 32;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5rbh: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5rbv; else goto c5rbu;
       c5rbv: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5rbu: // global
           _s5pBk::P64 = P64[R1 + 6];
           _s5pBl::P64 = P64[R1 + 14];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = P64[Sp + 24];
           P64[Hp] = _s5pBl::P64;
           I64[Sp + 24] = block_c5rbs_info;
           R4 = Hp - 24;
           R3 = _s5pBk::P64;
           R2 = GHC.Base.id_closure+1;
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call $winterleave'_s5pAO_entry(R4,
                                          R3,
                                          R2,
                                          R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rbc_info" {
     block_c5rbc_info:
         const _c5rbc;
         const 3;
         const 30;
 },
 _c5rbs() //  [R2]
         { []
         }
     {offset
       c5rbs: // global
           R1 = R2 & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rbs_info" {
     block_c5rbs_info:
         const _c5rbs;
         const 0;
         const 30;
 },
 sat_s5pBq_entry() //  [R1]
         { []
         }
     {offset
       c5rbD: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5rbE; else goto c5rbF;
       c5rbE: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rbF: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = GHC.Types.[]_closure+1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.OldList.permutations1_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pBq_info" {
     sat_s5pBq_info:
         const sat_s5pBq_entry;
         const 1;
         const 16;
 },
 Data.OldList.permutations1_entry() //  [R2, R3]
         { []
         }
     {offset
       c5rbK: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5rbL; else goto c5rbM;
       c5rbL: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.permutations1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5rbM: // global
           I64[Sp - 16] = block_c5r9O_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5rbT; else goto c5r9P;
       u5rbT: // global
           call _c5r9O(R1) args: 0, res: 0, upd: 0;
       c5r9P: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.permutations1_info" {
     Data.OldList.permutations1_info:
         const Data.OldList.permutations1_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5r9O() //  [R1]
         { []
         }
     {offset
       c5r9O: // global
           if (R1 & 7 == 1) goto c5rbH; else goto c5rbI;
       c5rbH: // global
           R1 = []_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5rbI: // global
           Hp = Hp + 136;
           if (Hp > HpLim) (likely: False) goto c5rbS; else goto c5rbR;
       c5rbS: // global
           HpAlloc = 136;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5rbR: // global
           _s5pAM::P64 = P64[R1 + 6];
           _s5pAN::P64 = P64[R1 + 14];
           I64[Hp - 128] = $winterleave'_s5pAO_info;
           P64[Hp - 120] = _s5pAM::P64;
           P64[Hp - 112] = _s5pAN::P64;
           I64[Hp - 104] = z_s5pBf_info;
           _s5pAK::P64 = P64[Sp + 8];
           P64[Hp - 88] = _s5pAK::P64;
           P64[Hp - 80] = _s5pAM::P64;
           P64[Hp - 72] = _s5pAN::P64;
           I64[Hp - 64] = go_s5pBh_info;
           P64[Hp - 56] = Hp - 125;
           P64[Hp - 48] = Hp - 104;
           I64[Hp - 40] = sat_s5pBq_info;
           P64[Hp - 24] = _s5pAK::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5pAK::P64;
           P64[Hp] = Hp - 40;
           R2 = Hp - 14;
           R1 = Hp - 63;
           Sp = Sp + 16;
           call go_s5pBh_entry(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5r9O_info" {
     block_c5r9O_info:
         const _c5r9O;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.819029545 UTC

[section ""data" . Data.OldList.permutations_closure" {
     Data.OldList.permutations_closure:
         const Data.OldList.permutations_info;
 },
 sat_s5pBt_entry() //  [R1]
         { []
         }
     {offset
       c5rdH: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5rdI; else goto c5rdJ;
       c5rdI: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rdJ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = GHC.Types.[]_closure+1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.OldList.permutations1_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pBt_info" {
     sat_s5pBt_info:
         const sat_s5pBt_entry;
         const 1;
         const 16;
 },
 Data.OldList.permutations_entry() //  [R2]
         { []
         }
     {offset
       c5rdL: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5rdP; else goto c5rdO;
       c5rdP: // global
           HpAlloc = 48;
           R2 = R2;
           R1 = Data.OldList.permutations_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5rdO: // global
           I64[Hp - 40] = sat_s5pBt_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.permutations_info" {
     Data.OldList.permutations_info:
         const Data.OldList.permutations_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.826007419 UTC

[section ""data" . lvl6_r5kSo_closure" {
     lvl6_r5kSo_closure:
         const :_con_info;
         const GHC.Types.[]_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.846585511 UTC

[section ""data" . Data.OldList.sortBy_closure" {
     Data.OldList.sortBy_closure:
         const Data.OldList.sortBy_info;
 },
 merge_s5pBw_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5rf0: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c5rf1; else goto c5rf2;
       c5rf1: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5rf2: // global
           I64[Sp - 32] = block_c5reT_info;
           _s5pBw::P64 = R1;
           _s5pBu::P64 = P64[R1 + 6];
           R1 = R2;
           P64[Sp - 24] = _s5pBu::P64;
           P64[Sp - 16] = _s5pBw::P64;
           P64[Sp - 8] = R3;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5rfH; else goto c5reU;
       u5rfH: // global
           call _c5reT(R1) args: 0, res: 0, upd: 0;
       c5reU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . merge_s5pBw_info" {
     merge_s5pBw_info:
         const merge_s5pBw_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 _c5reT() //  [R1]
         { []
         }
     {offset
       c5reT: // global
           _s5pBy::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5reX; else goto c5reY;
       c5reX: // global
           R1 = _s5pBy::P64 & (-8);
           Sp = Sp + 32;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5reY: // global
           I64[Sp - 16] = block_c5rf8_info;
           _s5pBz::P64 = R1;
           _s5pBA::P64 = P64[R1 + 6];
           _s5pBB::P64 = P64[R1 + 14];
           R1 = _s5pBy::P64;
           P64[Sp - 8] = _s5pBB::P64;
           P64[Sp] = _s5pBA::P64;
           P64[Sp + 24] = _s5pBz::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5rfG; else goto c5rfa;
       u5rfG: // global
           call _c5rf8(R1) args: 0, res: 0, upd: 0;
       c5rfa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5reT_info" {
     block_c5reT_info:
         const _c5reT;
         const 3;
         const 30;
 },
 _c5rf8() //  [R1]
         { []
         }
     {offset
       c5rf8: // global
           if (R1 & 7 == 1) goto c5rfg; else goto c5rfl;
       c5rfg: // global
           R1 = P64[Sp + 40] & (-8);
           Sp = Sp + 48;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5rfl: // global
           I64[Sp - 16] = block_c5rfj_info;
           _s5pBD::P64 = P64[R1 + 6];
           R3 = _s5pBD::P64;
           R2 = P64[Sp + 16];
           _s5pBC::P64 = R1;
           _s5pBE::P64 = P64[R1 + 14];
           R1 = P64[Sp + 24];
           P64[Sp - 8] = _s5pBE::P64;
           P64[Sp] = _s5pBD::P64;
           P64[Sp + 24] = _s5pBC::P64;
           Sp = Sp - 16;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rf8_info" {
     block_c5rf8_info:
         const _c5rf8;
         const 5;
         const 30;
 },
 _c5rfj() //  [R1]
         { []
         }
     {offset
       c5rfj: // global
           _s5pBw::P64 = P64[Sp + 48];
           if (R1 & 7 == 3) goto c5rfA; else goto c5rfs;
       c5rfA: // global
           Hp = Hp + 64;
           _s5pBF::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5rfD; else goto c5rfC;
       c5rfC: // global
           I64[Hp - 56] = stg_ap_3_upd_info;
           P64[Hp - 40] = _s5pBw::P64;
           P64[Hp - 32] = P64[Sp + 56];
           P64[Hp - 24] = P64[Sp + 8];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = Hp - 56;
           R1 = Hp - 14;
           Sp = Sp + 64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5rfs: // global
           Hp = Hp + 64;
           _s5pBF::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5rfD; else goto c5rfu;
       c5rfD: // global
           HpAlloc = 64;
           R1 = _s5pBF::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5rfu: // global
           I64[Hp - 56] = stg_ap_3_upd_info;
           P64[Hp - 40] = _s5pBw::P64;
           P64[Hp - 32] = P64[Sp + 24];
           P64[Hp - 24] = P64[Sp + 40];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = P64[Sp + 32];
           P64[Hp] = Hp - 56;
           R1 = Hp - 14;
           Sp = Sp + 64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rfj_info" {
     block_c5rfj_info:
         const _c5rfj;
         const 7;
         const 30;
 },
 mergePairs_s5pBI_entry() //  [R1, R2]
         { []
         }
     {offset
       c5rfS: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5rfT; else goto c5rfU;
       c5rfT: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5rfU: // global
           I64[Sp - 24] = block_c5rfL_info;
           _s5pBI::P64 = R1;
           _s5pBw::P64 = P64[R1 + 7];
           R1 = R2;
           P64[Sp - 16] = _s5pBw::P64;
           P64[Sp - 8] = _s5pBI::P64;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5rgo; else goto c5rfM;
       u5rgo: // global
           call _c5rfL(R1) args: 0, res: 0, upd: 0;
       c5rfM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . mergePairs_s5pBI_info" {
     mergePairs_s5pBI_info:
         const mergePairs_s5pBI_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c5rfL() //  [R1]
         { []
         }
     {offset
       c5rfL: // global
           if (R1 & 7 == 1) goto c5rfP; else goto c5rfQ;
       c5rfP: // global
           R1 = []_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5rfQ: // global
           I64[Sp - 16] = block_c5rg0_info;
           _s5pBK::P64 = R1;
           _s5pBL::P64 = P64[R1 + 6];
           R1 = P64[R1 + 14];
           P64[Sp - 8] = _s5pBL::P64;
           P64[Sp] = _s5pBK::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5rgn; else goto c5rg2;
       u5rgn: // global
           call _c5rg0(R1) args: 0, res: 0, upd: 0;
       c5rg2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rfL_info" {
     block_c5rfL_info:
         const _c5rfL;
         const 2;
         const 30;
 },
 _c5rg0() //  [R1]
         { []
         }
     {offset
       c5rg0: // global
           if (R1 & 7 == 1) goto c5rg8; else goto c5rgi;
       c5rg8: // global
           R1 = P64[Sp + 16] & (-8);
           Sp = Sp + 40;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5rgi: // global
           I64[Sp + 16] = block_c5rgb_info;
           R3 = P64[R1 + 6];
           R2 = P64[Sp + 8];
           _s5pBP::P64 = P64[R1 + 14];
           R1 = P64[Sp + 24];
           P64[Sp + 24] = _s5pBP::P64;
           Sp = Sp + 16;
           call merge_s5pBw_entry(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rg0_info" {
     block_c5rg0_info:
         const _c5rg0;
         const 4;
         const 30;
 },
 _c5rgb() //  [R1]
         { []
         }
     {offset
       c5rgb: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5rgl; else goto c5rgk;
       c5rgl: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5rgk: // global
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = P64[Sp + 8];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rgb_info" {
     block_c5rgb_info:
         const _c5rgb;
         const 2;
         const 30;
 },
 lvl12_s5pBS_entry() //  [R1]
         { []
         }
     {offset
       c5rgr: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5rgs; else goto c5rgt;
       c5rgs: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rgt: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = GHC.Types.[]_closure+1;
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call mergePairs_s5pBI_entry(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl12_s5pBS_info" {
     lvl12_s5pBS_info:
         const lvl12_s5pBS_entry;
         const 1;
         const 16;
 },
 sat_s5pC5_entry() //  [R1, R2]
         { []
         }
     {offset
       c5rgT: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5rgX; else goto c5rgW;
       c5rgX: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5rgW: // global
           _s5pBZ::P64 = P64[R1 + 7];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5pBZ::P64;
           P64[Hp] = R2;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5pC5_info" {
     sat_s5pC5_info:
         const sat_s5pC5_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sequences_s5pBT_entry() //  [R1, R2]
         { []
         }
     {offset
       c5rh2: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c5rh3; else goto c5rh4;
       c5rh3: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5rh4: // global
           I64[Sp - 32] = block_c5rgx_info;
           _s5pBu::P64 = P64[R1 + 7];
           _s5pBV::P64 = P64[R1 + 15];
           _s5pBW::P64 = P64[R1 + 23];
           R1 = R2;
           P64[Sp - 24] = _s5pBu::P64;
           P64[Sp - 16] = _s5pBV::P64;
           P64[Sp - 8] = _s5pBW::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5rhw; else goto c5rgy;
       u5rhw: // global
           call _c5rgx(R1) args: 0, res: 0, upd: 0;
       c5rgy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sequences_s5pBT_info" {
     sequences_s5pBT_info:
         const sequences_s5pBT_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 _c5rgx() //  [R1]
         { []
         }
     {offset
       c5rgx: // global
           if (R1 & 7 == 1) goto c5rgZ; else goto c5rh0;
       c5rgZ: // global
           R1 = lvl6_r5kSo_closure+2;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5rh0: // global
           I64[Sp - 16] = block_c5rgD_info;
           _s5pBY::P64 = R1;
           _s5pBZ::P64 = P64[R1 + 6];
           R1 = P64[R1 + 14];
           P64[Sp - 8] = _s5pBZ::P64;
           P64[Sp] = _s5pBY::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5rhv; else goto c5rgE;
       u5rhv: // global
           call _c5rgD(R1) args: 0, res: 0, upd: 0;
       c5rgE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rgx_info" {
     block_c5rgx_info:
         const _c5rgx;
         const 3;
         const 30;
 },
 _c5rgD() //  [R1]
         { []
         }
     {offset
       c5rgD: // global
           if (R1 & 7 == 1) goto c5rhb; else goto c5rhg;
       c5rhb: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5rhe; else goto c5rhd;
       c5rhe: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5rhd: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = GHC.Types.[]_closure+1;
           R1 = Hp - 14;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5rhg: // global
           I64[Sp] = block_c5rgJ_info;
           _s5pC2::P64 = P64[R1 + 6];
           R3 = _s5pC2::P64;
           R2 = P64[Sp + 8];
           _s5pC3::P64 = P64[R1 + 14];
           R1 = P64[Sp + 24];
           P64[Sp + 16] = _s5pC3::P64;
           P64[Sp + 24] = _s5pC2::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rgD_info" {
     block_c5rgD_info:
         const _c5rgD;
         const 5;
         const 30;
 },
 _c5rgJ() //  [R1]
         { []
         }
     {offset
       c5rgJ: // global
           _s5pBZ::P64 = P64[Sp + 8];
           _s5pC2::P64 = P64[Sp + 24];
           _s5pC3::P64 = P64[Sp + 16];
           if (R1 & 7 == 3) goto c5rhp; else goto c5rhi;
       c5rhp: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5rhs; else goto c5rhr;
       c5rhs: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5rhr: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5pBZ::P64;
           P64[Hp] = GHC.Types.[]_closure+1;
           R4 = _s5pC3::P64;
           R3 = Hp - 14;
           R2 = _s5pC2::P64;
           R1 = P64[Sp + 32];
           Sp = Sp + 48;
           call descending_s5pBV_entry(R4,
                                       R3,
                                       R2,
                                       R1) args: 8, res: 0, upd: 8;
       c5rhi: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5rhl; else goto c5rhk;
       c5rhl: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5rhk: // global
           I64[Hp - 8] = sat_s5pC5_info;
           P64[Hp] = _s5pBZ::P64;
           R4 = _s5pC3::P64;
           R3 = Hp - 7;
           R2 = _s5pC2::P64;
           R1 = P64[Sp + 40];
           Sp = Sp + 48;
           call ascending_s5pBW_entry(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rgJ_info" {
     block_c5rgJ_info:
         const _c5rgJ;
         const 5;
         const 30;
 },
 lvl13_s5pBU_entry() //  [R1]
         { []
         }
     {offset
       c5rhz: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5rhA; else goto c5rhB;
       c5rhA: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rhB: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = GHC.Types.[]_closure+1;
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call sequences_s5pBT_entry(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl13_s5pBU_info" {
     lvl13_s5pBU_info:
         const lvl13_s5pBU_entry;
         const 1;
         const 16;
 },
 descending_s5pBV_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       c5rhG: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c5rhH; else goto u5ri4;
       c5rhH: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u5ri4: // global
           P64[Sp - 32] = R1;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call _c5rem() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . descending_s5pBV_info" {
     descending_s5pBV_info:
         const descending_s5pBV_entry;
         const 3;
         const 8;
         const 12884901911;
 },
 _c5rem() //  []
         { []
         }
     {offset
       c5rem: // global
           I64[Sp - 24] = block_c5rep_info;
           R1 = P64[Sp + 24];
           _s5pBV::P64 = P64[Sp];
           P64[Sp - 16] = P64[_s5pBV::P64 + 13];
           P64[Sp - 8] = P64[_s5pBV::P64 + 21];
           P64[Sp + 24] = P64[_s5pBV::P64 + 5];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5ri6; else goto c5req;
       u5ri6: // global
           call _c5rep(R1) args: 0, res: 0, upd: 0;
       c5req: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5rep() //  [R1]
         { []
         }
     {offset
       c5rep: // global
           _s5pC7::P64 = P64[Sp + 32];
           if (R1 & 7 == 1) goto c5rhD; else goto c5rhE;
       c5rhD: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5rhO; else goto c5rhN;
       c5rhO: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5rhN: // global
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = _s5pC7::P64;
           P64[Hp - 24] = P64[Sp + 40];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = P64[Sp + 16];
           R1 = Hp - 14;
           Sp = Sp + 56;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5rhE: // global
           I64[Sp - 8] = block_c5rev_info;
           _s5pCc::P64 = P64[R1 + 6];
           R3 = _s5pCc::P64;
           R2 = _s5pC7::P64;
           _s5pCa::P64 = R1;
           _s5pCd::P64 = P64[R1 + 14];
           R1 = P64[Sp + 48];
           P64[Sp] = _s5pCd::P64;
           P64[Sp + 16] = _s5pCc::P64;
           P64[Sp + 48] = _s5pCa::P64;
           Sp = Sp - 8;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rep_info" {
     block_c5rep_info:
         const _c5rep;
         const 6;
         const 30;
 },
 _c5rev() //  [R1]
         { []
         }
     {offset
       c5rev: // global
           _s5pC7::P64 = P64[Sp + 40];
           _s5pC8::P64 = P64[Sp + 48];
           if (R1 & 7 == 3) goto c5rhZ; else goto c5rhV;
       c5rhZ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5ri2; else goto c5ri1;
       c5ri2: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5ri1: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5pC7::P64;
           P64[Hp] = _s5pC8::P64;
           P64[Sp + 40] = P64[Sp + 24];
           P64[Sp + 48] = Hp - 14;
           P64[Sp + 56] = P64[Sp + 8];
           Sp = Sp + 32;
           call _c5rem() args: 0, res: 0, upd: 0;
       c5rhV: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto c5rhY; else goto c5rhX;
       c5rhY: // global
           HpAlloc = 80;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5rhX: // global
           I64[Hp - 72] = stg_ap_2_upd_info;
           P64[Hp - 56] = P64[Sp + 16];
           P64[Hp - 48] = P64[Sp + 56];
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = _s5pC7::P64;
           P64[Hp - 24] = _s5pC8::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 72;
           R1 = Hp - 14;
           Sp = Sp + 64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rev_info" {
     block_c5rev_info:
         const _c5rev;
         const 7;
         const 30;
 },
 sat_s5pCt_entry() //  [R1, R2]
         { []
         }
     {offset
       c5rie: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5rii; else goto c5rih;
       c5rii: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5rih: // global
           _s5pCi::P64 = P64[R1 + 7];
           _s5pCj::P64 = P64[R1 + 15];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5pCi::P64;
           P64[Hp] = R2;
           R2 = Hp - 14;
           R1 = _s5pCj::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5pCt_info" {
     sat_s5pCt_info:
         const sat_s5pCt_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 ascending_s5pBW_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       c5rin: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c5rio; else goto u5rj0;
       c5rio: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u5rj0: // global
           P64[Sp - 32] = R1;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call _c5reC() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . ascending_s5pBW_info" {
     ascending_s5pBW_info:
         const ascending_s5pBW_entry;
         const 3;
         const 8;
         const 12884901911;
 },
 _c5reC() //  []
         { []
         }
     {offset
       c5reC: // global
           I64[Sp - 24] = block_c5reF_info;
           R1 = P64[Sp + 24];
           _s5pBW::P64 = P64[Sp];
           P64[Sp - 16] = P64[_s5pBW::P64 + 13];
           P64[Sp - 8] = P64[_s5pBW::P64 + 21];
           P64[Sp + 24] = P64[_s5pBW::P64 + 5];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5rj2; else goto c5reG;
       u5rj2: // global
           call _c5reF(R1) args: 0, res: 0, upd: 0;
       c5reG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5reF() //  [R1]
         { []
         }
     {offset
       c5reF: // global
           _s5pCi::P64 = P64[Sp + 32];
           if (R1 & 7 == 1) goto c5rik; else goto c5ril;
       c5rik: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5riz; else goto c5riy;
       c5riz: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5riy: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5pCi::P64;
           P64[Hp] = GHC.Types.[]_closure+1;
           I64[Sp + 8] = block_c5ris_info;
           R2 = Hp - 14;
           R1 = P64[Sp + 40];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
       c5ril: // global
           I64[Sp - 8] = block_c5reL_info;
           _s5pCo::P64 = P64[R1 + 6];
           R3 = _s5pCo::P64;
           R2 = _s5pCi::P64;
           _s5pCl::P64 = R1;
           _s5pCp::P64 = P64[R1 + 14];
           R1 = P64[Sp + 48];
           P64[Sp] = _s5pCp::P64;
           P64[Sp + 16] = _s5pCo::P64;
           P64[Sp + 48] = _s5pCl::P64;
           Sp = Sp - 8;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5reF_info" {
     block_c5reF_info:
         const _c5reF;
         const 6;
         const 30;
 },
 _c5ris() //  [R1]
         { []
         }
     {offset
       c5ris: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5riC; else goto c5riB;
       c5riC: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5riB: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 14;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ris_info" {
     block_c5ris_info:
         const _c5ris;
         const 1925;
         const 30;
 },
 _c5reL() //  [R1]
         { []
         }
     {offset
       c5reL: // global
           _s5pCi::P64 = P64[Sp + 40];
           _s5pCj::P64 = P64[Sp + 48];
           if (R1 & 7 == 3) goto c5riS; else goto c5riF;
       c5riS: // global
           Hp = Hp + 24;
           _s5pCq::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5riV; else goto c5riU;
       c5riU: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5pCi::P64;
           P64[Hp] = GHC.Types.[]_closure+1;
           I64[Sp + 8] = block_c5riM_info;
           R2 = Hp - 14;
           R1 = _s5pCj::P64;
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
       c5riF: // global
           Hp = Hp + 24;
           _s5pCq::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5riV; else goto c5riH;
       c5riV: // global
           HpAlloc = 24;
           R1 = _s5pCq::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5riH: // global
           I64[Hp - 16] = sat_s5pCt_info;
           P64[Hp - 8] = _s5pCi::P64;
           P64[Hp] = _s5pCj::P64;
           P64[Sp + 40] = P64[Sp + 24];
           P64[Sp + 48] = Hp - 15;
           P64[Sp + 56] = P64[Sp + 8];
           Sp = Sp + 32;
           call _c5reC() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5reL_info" {
     block_c5reL_info:
         const _c5reL;
         const 7;
         const 30;
 },
 _c5riM() //  [R1]
         { []
         }
     {offset
       c5riM: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5riY; else goto c5riX;
       c5riY: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5riX: // global
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = P64[Sp + 48];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 56;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5riM_info" {
     block_c5riM_info:
         const _c5riM;
         const 1926;
         const 30;
 },
 Data.OldList.sortBy_entry() //  [R2, R3]
         { []
         }
     {offset
       c5rj7: // global
           _s5pBv::P64 = R3;
           _s5pBu::P64 = R2;
           if ((Sp + -40) < SpLim) (likely: False) goto c5rj8; else goto c5rj9;
       c5rj9: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto c5rjb; else goto c5rja;
       c5rjb: // global
           HpAlloc = 176;
           goto c5rj8;
       c5rj8: // global
           R3 = _s5pBv::P64;
           R2 = _s5pBu::P64;
           R1 = Data.OldList.sortBy_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5rja: // global
           I64[Hp - 168] = merge_s5pBw_info;
           P64[Hp - 160] = _s5pBu::P64;
           I64[Hp - 152] = mergePairs_s5pBI_info;
           P64[Hp - 144] = Hp - 166;
           I64[Hp - 136] = lvl12_s5pBS_info;
           _c5reb::P64 = Hp - 151;
           P64[Hp - 120] = _c5reb::P64;
           I64[Hp - 112] = sequences_s5pBT_info;
           P64[Hp - 104] = _s5pBu::P64;
           P64[Hp - 96] = Hp - 53;
           P64[Hp - 88] = Hp - 21;
           I64[Hp - 80] = lvl13_s5pBU_info;
           _c5ref::P64 = Hp - 111;
           P64[Hp - 64] = _c5ref::P64;
           I64[Hp - 56] = descending_s5pBV_info;
           P64[Hp - 48] = _s5pBu::P64;
           P64[Hp - 40] = _c5ref::P64;
           _c5reg::P64 = Hp - 80;
           P64[Hp - 32] = _c5reg::P64;
           I64[Hp - 24] = ascending_s5pBW_info;
           P64[Hp - 16] = _s5pBu::P64;
           P64[Hp - 8] = _c5ref::P64;
           P64[Hp] = _c5reg::P64;
           I64[Sp - 24] = block_c5rj5_info;
           R2 = _s5pBv::P64;
           R1 = _c5ref::P64;
           P64[Sp - 16] = _c5reb::P64;
           P64[Sp - 8] = Hp - 136;
           Sp = Sp - 24;
           call sequences_s5pBT_entry(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.sortBy_info" {
     Data.OldList.sortBy_info:
         const Data.OldList.sortBy_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5rj5() //  [R1]
         { []
         }
     {offset
       c5rj5: // global
           P64[Sp] = R1;
           call _c5rji() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5rj5_info" {
     block_c5rj5_info:
         const _c5rj5;
         const 2;
         const 30;
 },
 _c5rji() //  []
         { []
         }
     {offset
       c5rji: // global
           _s5pCy::P64 = P64[Sp];
           I64[Sp] = block_c5rjk_info;
           R1 = _s5pCy::P64;
           if (R1 & 7 != 0) goto u5rjU; else goto c5rjm;
       u5rjU: // global
           call _c5rjk(R1) args: 0, res: 0, upd: 0;
       c5rjm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5rjk() //  [R1]
         { []
         }
     {offset
       c5rjk: // global
           if (R1 & 7 == 1) goto c5rjs; else goto c5rjx;
       c5rjs: // global
           P64[Sp] = P64[Sp + 16];
           call _c5rji() args: 0, res: 0, upd: 0;
       c5rjx: // global
           I64[Sp - 16] = block_c5rjv_info;
           _s5pCz::P64 = R1;
           _s5pCA::P64 = P64[R1 + 6];
           R1 = P64[R1 + 14];
           P64[Sp - 8] = _s5pCA::P64;
           P64[Sp] = _s5pCz::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5rjV; else goto c5rjy;
       u5rjV: // global
           call _c5rjv(R1) args: 0, res: 0, upd: 0;
       c5rjy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rjk_info" {
     block_c5rjk_info:
         const _c5rjk;
         const 2;
         const 30;
 },
 _c5rjv() //  [R1]
         { []
         }
     {offset
       c5rjv: // global
           if (R1 & 7 == 1) goto c5rjE; else goto c5rjJ;
       c5rjE: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 40;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5rjJ: // global
           _s5pCz::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c5rjH_info;
           R2 = _s5pCz::P64;
           R1 = P64[Sp + 24];
           Sp = Sp + 16;
           call mergePairs_s5pBI_entry(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rjv_info" {
     block_c5rjv_info:
         const _c5rjv;
         const 4;
         const 30;
 },
 _c5rjH() //  [R1]
         { []
         }
     {offset
       c5rjH: // global
           P64[Sp] = R1;
           call _c5rji() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5rjH_info" {
     block_c5rjH_info:
         const _c5rjH;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.91769953 UTC

[section ""data" . Data.OldList.sortOn_closure" {
     Data.OldList.sortOn_closure:
         const Data.OldList.sortOn_info;
 },
 sat_s5pCX_entry() //  [R1, R2]
         { []
         }
     {offset
       c5ron: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5roo; else goto c5rop;
       c5roo: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5rop: // global
           I64[Sp - 16] = block_c5rok_info;
           _s5pCV::P64 = R2;
           R2 = R2;
           R1 = P64[R1 + 7];
           P64[Sp - 8] = _s5pCV::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5pCX_info" {
     sat_s5pCX_info:
         const sat_s5pCX_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c5rok() //  [R1]
         { []
         }
     {offset
       c5rok: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5ros; else goto c5ror;
       c5ros: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5ror: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 15;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rok_info" {
     block_c5rok_info:
         const _c5rok;
         const 1;
         const 30;
 },
 sat_s5pCU_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5roE: // global
           _s5pCL::P64 = R3;
           _s5pCK::P64 = R2;
           _s5pCU::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c5roF; else goto c5roG;
       c5roG: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5roI; else goto c5roH;
       c5roI: // global
           HpAlloc = 48;
           goto c5roF;
       c5roF: // global
           R3 = _s5pCL::P64;
           R2 = _s5pCK::P64;
           R1 = _s5pCU::P64;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5roH: // global
           _s5pCH::P64 = P64[_s5pCU::P64 + 6];
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _s5pCL::P64;
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _s5pCK::P64;
           R2 = _s5pCH::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 16;
           P64[Sp - 8] = Hp - 40;
           Sp = Sp - 24;
           call GHC.Classes.compare_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5pCU_info" {
     sat_s5pCU_info:
         const sat_s5pCU_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 Data.OldList.sortOn_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5roJ: // global
           _s5pCJ::P64 = R4;
           _s5pCI::P64 = R3;
           _s5pCH::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto c5roL; else goto c5roM;
       c5roM: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5roO; else goto c5roN;
       c5roO: // global
           HpAlloc = 16;
           goto c5roL;
       c5roL: // global
           R4 = _s5pCJ::P64;
           R3 = _s5pCI::P64;
           R2 = _s5pCH::P64;
           R1 = Data.OldList.sortOn_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5roN: // global
           I64[Hp - 8] = sat_s5pCX_info;
           P64[Hp] = _s5pCI::P64;
           I64[Sp - 16] = block_c5rot_info;
           R3 = _s5pCJ::P64;
           R2 = Hp - 7;
           P64[Sp - 8] = _s5pCH::P64;
           Sp = Sp - 16;
           call GHC.Base.map_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.sortOn_info" {
     Data.OldList.sortOn_info:
         const Data.OldList.sortOn_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5rot() //  [R1]
         { []
         }
     {offset
       c5rot: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5roR; else goto c5roQ;
       c5roR: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5roQ: // global
           I64[Hp - 8] = sat_s5pCU_info;
           P64[Hp] = P64[Sp + 8];
           I64[Sp + 8] = block_c5roK_info;
           R3 = R1;
           R2 = Hp - 6;
           Sp = Sp + 8;
           call Data.OldList.sortBy_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rot_info" {
     block_c5rot_info:
         const _c5rot;
         const 1;
         const 30;
 },
 _c5roK() //  [R1]
         { []
         }
     {offset
       c5roK: // global
           R3 = R1;
           R2 = Data.Tuple.snd_closure+1;
           Sp = Sp + 8;
           call GHC.Base.map_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5roK_info" {
     block_c5roK_info:
         const _c5roK;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.931687096 UTC

[section ""data" . Data.OldList.sort_closure" {
     Data.OldList.sort_closure:
         const Data.OldList.sort_info;
 },
 sat_s5pD2_entry() //  [R1]
         { []
         }
     {offset
       c5rpF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5rpG; else goto c5rpH;
       c5rpG: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rpH: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.compare_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pD2_info" {
     sat_s5pD2_info:
         const sat_s5pD2_entry;
         const 1;
         const 16;
 },
 Data.OldList.sort_entry() //  [R2, R3]
         { []
         }
     {offset
       c5rpI: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5rpM; else goto c5rpL;
       c5rpM: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.sort_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5rpL: // global
           I64[Hp - 16] = sat_s5pD2_info;
           P64[Hp] = R2;
           R3 = R3;
           R2 = Hp - 16;
           call Data.OldList.sortBy_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.sort_info" {
     Data.OldList.sort_info:
         const Data.OldList.sort_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.938567283 UTC

[section ""data" . Data.OldList.unfoldr_closure" {
     Data.OldList.unfoldr_closure:
         const Data.OldList.unfoldr_info;
 },
 go_s5pD5_entry() //  [R1, R2]
         { []
         }
     {offset
       c5rqc: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5rqd; else goto c5rqe;
       c5rqd: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5rqe: // global
           I64[Sp - 16] = block_c5rq6_info;
           R2 = R2;
           _s5pD5::P64 = R1;
           R1 = P64[R1 + 7];
           P64[Sp - 8] = _s5pD5::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . go_s5pD5_info" {
     go_s5pD5_info:
         const go_s5pD5_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c5rq6() //  [R1]
         { []
         }
     {offset
       c5rq6: // global
           if (R1 & 7 == 1) goto c5rq9; else goto c5rqa;
       c5rq9: // global
           R1 = []_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5rqa: // global
           I64[Sp] = block_c5rqk_info;
           R1 = P64[R1 + 6];
           if (R1 & 7 != 0) goto u5rqv; else goto c5rql;
       u5rqv: // global
           call _c5rqk(R1) args: 0, res: 0, upd: 0;
       c5rql: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rq6_info" {
     block_c5rq6_info:
         const _c5rq6;
         const 1;
         const 30;
 },
 _c5rqk() //  [R1]
         { []
         }
     {offset
       c5rqk: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5rqu; else goto c5rqt;
       c5rqu: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5rqt: // global
           _s5pDa::P64 = P64[R1 + 7];
           _s5pDb::P64 = P64[R1 + 15];
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s5pDb::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5pDa::P64;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rqk_info" {
     block_c5rqk_info:
         const _c5rqk;
         const 1;
         const 30;
 },
 Data.OldList.unfoldr_entry() //  [R2, R3]
         { []
         }
     {offset
       c5rqw: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5rqA; else goto c5rqz;
       c5rqA: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.unfoldr_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5rqz: // global
           I64[Hp - 8] = go_s5pD5_info;
           P64[Hp] = R2;
           R2 = R3;
           R1 = Hp - 7;
           call go_s5pD5_entry(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.unfoldr_info" {
     Data.OldList.unfoldr_info:
         const Data.OldList.unfoldr_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.947646176 UTC

[section ""data" . lvl7_r5kSp_closure" {
     lvl7_r5kSp_closure:
         const GHC.Types.C#_con_info;
         const 10;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.951265535 UTC

[section ""data" . Data.OldList.unlines_closure" {
     Data.OldList.unlines_closure:
         const Data.OldList.unlines_info;
 },
 sat_s5pDh_entry() //  [R1]
         { []
         }
     {offset
       c5rrh: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5rri; else goto c5rrj;
       c5rri: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rrj: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.OldList.unlines_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pDh_info" {
     sat_s5pDh_info:
         const sat_s5pDh_entry;
         const 1;
         const 16;
 },
 Data.OldList.unlines_entry() //  [R2]
         { []
         }
     {offset
       c5rro: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5rrp; else goto c5rrq;
       c5rrp: // global
           R2 = R2;
           R1 = Data.OldList.unlines_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5rrq: // global
           I64[Sp - 8] = block_c5rr7_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5rrx; else goto c5rr8;
       u5rrx: // global
           call _c5rr7(R1) args: 0, res: 0, upd: 0;
       c5rr8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.unlines_info" {
     Data.OldList.unlines_info:
         const Data.OldList.unlines_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5rr7() //  [R1]
         { []
         }
     {offset
       c5rr7: // global
           if (R1 & 7 == 1) goto c5rrl; else goto c5rrm;
       c5rrl: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5rrm: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5rrw; else goto c5rrv;
       c5rrw: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5rrv: // global
           _s5pDf::P64 = P64[R1 + 6];
           _s5pDg::P64 = P64[R1 + 14];
           I64[Hp - 40] = sat_s5pDh_info;
           P64[Hp - 24] = _s5pDg::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = lvl7_r5kSp_closure+1;
           P64[Hp] = Hp - 40;
           R3 = Hp - 14;
           R2 = _s5pDf::P64;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rr7_info" {
     block_c5rr7_info:
         const _c5rr7;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:26.967463834 UTC

[section ""data" . Data.OldList.wordsFB_closure" {
     Data.OldList.wordsFB_closure:
         const Data.OldList.wordsFB_info;
 },
 ds_s5pDr_entry() //  [R1]
         { []
         }
     {offset
       c5rsg: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5rsh; else goto c5rsi;
       c5rsh: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rsi: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5rsd_info;
           R3 = P64[R1 + 16];
           R2 = GHC.Unicode.isSpace_closure+1;
           Sp = Sp - 24;
           call GHC.List.$wbreak_entry(R3, R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds_s5pDr_info" {
     ds_s5pDr_info:
         const ds_s5pDr_entry;
         const 1;
         const 16;
 },
 _c5rsd() //  [R1, R2]
         { []
         }
     {offset
       c5rsd: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5rsl; else goto c5rsk;
       c5rsl: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c5rsk: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5rsd_info" {
     block_c5rsd_info:
         const _c5rsd;
         const 0;
         const 30;
 },
 sat_s5pDC_entry() //  [R1]
         { []
         }
     {offset
       c5rst: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5rsu; else goto c5rsv;
       c5rsu: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rsv: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c5rsq_info;
           _s5pDm::P64 = P64[R1 + 16];
           R1 = P64[R1 + 24];
           P64[Sp - 24] = _s5pDm::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5rsz; else goto c5rsr;
       u5rsz: // global
           call _c5rsq(R1) args: 0, res: 0, upd: 0;
       c5rsr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pDC_info" {
     sat_s5pDC_info:
         const sat_s5pDC_entry;
         const 2;
         const 18;
 },
 _c5rsq() //  [R1]
         { []
         }
     {offset
       c5rsq: // global
           R2 = P64[R1 + 15];
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call go_s5pDm_entry(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5rsq_info" {
     block_c5rsq_info:
         const _c5rsq;
         const 1;
         const 30;
 },
 go_s5pDm_entry() //  [R1, R2]
         { []
         }
     {offset
       c5rsE: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5rsF; else goto c5rsG;
       c5rsF: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5rsG: // global
           I64[Sp - 32] = block_c5rs4_info;
           R3 = R2;
           R2 = GHC.Unicode.isSpace_closure+1;
           P64[Sp - 24] = P64[R1 + 7];
           P64[Sp - 16] = P64[R1 + 15];
           P64[Sp - 8] = R1;
           Sp = Sp - 32;
           call GHC.List.dropWhile_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . go_s5pDm_info" {
     go_s5pDm_info:
         const go_s5pDm_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 _c5rs4() //  [R1]
         { []
         }
     {offset
       c5rs4: // global
           if (R1 & 7 == 1) goto c5rsB; else goto c5rsC;
       c5rsB: // global
           R1 = P64[Sp + 16];
           Sp = Sp + 32;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5rsC: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto c5rsM; else goto c5rsL;
       c5rsM: // global
           HpAlloc = 80;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5rsL: // global
           I64[Hp - 72] = ds_s5pDr_info;
           P64[Hp - 56] = R1;
           I64[Hp - 48] = sat_s5pDC_info;
           P64[Hp - 32] = P64[Sp + 24];
           _c5rs9::P64 = Hp - 72;
           P64[Hp - 24] = _c5rs9::P64;
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _c5rs9::P64;
           R3 = Hp - 48;
           R2 = Hp - 16;
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rs4_info" {
     block_c5rs4_info:
         const _c5rs4;
         const 3;
         const 30;
 },
 Data.OldList.wordsFB_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5rsN: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5rsR; else goto c5rsQ;
       c5rsR: // global
           HpAlloc = 24;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.wordsFB_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5rsQ: // global
           I64[Hp - 16] = go_s5pDm_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R2 = R4;
           R1 = Hp - 15;
           call go_s5pDm_entry(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.wordsFB_info" {
     Data.OldList.wordsFB_info:
         const Data.OldList.wordsFB_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 section ""data" . Data.OldList.words_closure" {
     Data.OldList.words_closure:
         const Data.OldList.words_info;
 },
 ds_s5pDH_entry() //  [R1]
         { []
         }
     {offset
       c5rt8: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5rt9; else goto c5rta;
       c5rt9: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rta: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5rt5_info;
           R3 = P64[R1 + 16];
           R2 = GHC.Unicode.isSpace_closure+1;
           Sp = Sp - 24;
           call GHC.List.$wbreak_entry(R3, R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds_s5pDH_info" {
     ds_s5pDH_info:
         const ds_s5pDH_entry;
         const 1;
         const 16;
 },
 _c5rt5() //  [R1, R2]
         { []
         }
     {offset
       c5rt5: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5rtd; else goto c5rtc;
       c5rtd: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c5rtc: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5rt5_info" {
     block_c5rt5_info:
         const _c5rt5;
         const 0;
         const 30;
 },
 sat_s5pDS_entry() //  [R1]
         { []
         }
     {offset
       c5rtl: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5rtm; else goto c5rtn;
       c5rtm: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rtn: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5rti_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5rtr; else goto c5rtj;
       u5rtr: // global
           call _c5rti(R1) args: 0, res: 0, upd: 0;
       c5rtj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pDS_info" {
     sat_s5pDS_info:
         const sat_s5pDS_entry;
         const 1;
         const 16;
 },
 _c5rti() //  [R1]
         { []
         }
     {offset
       c5rti: // global
           R2 = P64[R1 + 15];
           Sp = Sp + 8;
           call Data.OldList.words_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5rti_info" {
     block_c5rti_info:
         const _c5rti;
         const 0;
         const 30;
 },
 Data.OldList.words_entry() //  [R2]
         { []
         }
     {offset
       c5rtw: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5rtx; else goto c5rty;
       c5rtx: // global
           R2 = R2;
           R1 = Data.OldList.words_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5rty: // global
           I64[Sp - 8] = block_c5rsW_info;
           R3 = R2;
           R2 = GHC.Unicode.isSpace_closure+1;
           Sp = Sp - 8;
           call GHC.List.dropWhile_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.words_info" {
     Data.OldList.words_info:
         const Data.OldList.words_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5rsW() //  [R1]
         { []
         }
     {offset
       c5rsW: // global
           if (R1 & 7 == 1) goto c5rtt; else goto c5rtu;
       c5rtt: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5rtu: // global
           Hp = Hp + 96;
           if (Hp > HpLim) (likely: False) goto c5rtF; else goto c5rtE;
       c5rtF: // global
           HpAlloc = 96;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5rtE: // global
           I64[Hp - 88] = ds_s5pDH_info;
           P64[Hp - 72] = R1;
           I64[Hp - 64] = sat_s5pDS_info;
           _c5rt1::P64 = Hp - 88;
           P64[Hp - 48] = _c5rt1::P64;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _c5rt1::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 64;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rsW_info" {
     block_c5rsW_info:
         const _c5rsW;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.003274335 UTC

[section ""data" . lvl8_r5kSq_closure" {
     lvl8_r5kSq_closure:
         const GHC.Types.C#_con_info;
         const 32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.007315643 UTC

[section ""data" . Data.OldList.unwordsFB_closure" {
     Data.OldList.unwordsFB_closure:
         const Data.OldList.unwordsFB_info;
 },
 sat_s5pDV_entry() //  [R1]
         { []
         }
     {offset
       c5rve: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5rvf; else goto c5rvg;
       c5rvf: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rvg: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pDV_info" {
     sat_s5pDV_info:
         const sat_s5pDV_entry;
         const 2;
         const 18;
 },
 Data.OldList.unwordsFB_entry() //  [R2, R3]
         { []
         }
     {offset
       c5rvi: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5rvm; else goto c5rvl;
       c5rvm: // global
           HpAlloc = 56;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.unwordsFB_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5rvl: // global
           I64[Hp - 48] = sat_s5pDV_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = lvl8_r5kSq_closure+1;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.unwordsFB_info" {
     Data.OldList.unwordsFB_info:
         const Data.OldList.unwordsFB_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.019067358 UTC

[section ""data" . Data.OldList.unwords_go_closure" {
     Data.OldList.unwords_go_closure:
         const Data.OldList.unwords_go_info;
 },
 sat_s5pE0_entry() //  [R1]
         { []
         }
     {offset
       c5rvT: // global
           R2 = P64[R1 + 16];
           call Data.OldList.unwords_go_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5pE0_info" {
     sat_s5pE0_info:
         const sat_s5pE0_entry;
         const 1;
         const 16;
 },
 sat_s5pE1_entry() //  [R1]
         { []
         }
     {offset
       c5rvW: // global
           _s5pE1::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5rvX; else goto c5rvY;
       c5rvY: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5rw0; else goto c5rvZ;
       c5rw0: // global
           HpAlloc = 24;
           goto c5rvX;
       c5rvX: // global
           R1 = _s5pE1::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rvZ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5pE1::P64;
           _s5pDY::P64 = P64[_s5pE1::P64 + 16];
           _s5pDZ::P64 = P64[_s5pE1::P64 + 24];
           I64[Hp - 16] = sat_s5pE0_info;
           P64[Hp] = _s5pDZ::P64;
           R3 = Hp - 16;
           R2 = _s5pDY::P64;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pE1_info" {
     sat_s5pE1_info:
         const sat_s5pE1_entry;
         const 2;
         const 18;
 },
 Data.OldList.unwords_go_entry() //  [R2]
         { []
         }
     {offset
       c5rw5: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5rw6; else goto c5rw7;
       c5rw6: // global
           R2 = R2;
           R1 = Data.OldList.unwords_go_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5rw7: // global
           I64[Sp - 8] = block_c5rvF_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5rwe; else goto c5rvG;
       u5rwe: // global
           call _c5rvF(R1) args: 0, res: 0, upd: 0;
       c5rvG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.unwords_go_info" {
     Data.OldList.unwords_go_info:
         const Data.OldList.unwords_go_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5rvF() //  [R1]
         { []
         }
     {offset
       c5rvF: // global
           if (R1 & 7 == 1) goto c5rw2; else goto c5rw3;
       c5rw2: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5rw3: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5rwd; else goto c5rwc;
       c5rwd: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5rwc: // global
           _s5pDY::P64 = P64[R1 + 6];
           _s5pDZ::P64 = P64[R1 + 14];
           I64[Hp - 48] = sat_s5pE1_info;
           P64[Hp - 32] = _s5pDY::P64;
           P64[Hp - 24] = _s5pDZ::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = lvl8_r5kSq_closure+1;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rvF_info" {
     block_c5rvF_info:
         const _c5rvF;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.031892675 UTC

[section ""data" . Data.OldList.tailUnwords_closure" {
     Data.OldList.tailUnwords_closure:
         const Data.OldList.tailUnwords_info;
 },
 Data.OldList.tailUnwords_entry() //  [R2]
         { []
         }
     {offset
       c5rwS: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5rwT; else goto c5rwU;
       c5rwT: // global
           R2 = R2;
           R1 = Data.OldList.tailUnwords_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5rwU: // global
           I64[Sp - 8] = block_c5rwL_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5rx1; else goto c5rwM;
       u5rx1: // global
           call _c5rwL(R1) args: 0, res: 0, upd: 0;
       c5rwM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.tailUnwords_info" {
     Data.OldList.tailUnwords_info:
         const Data.OldList.tailUnwords_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5rwL() //  [R1]
         { []
         }
     {offset
       c5rwL: // global
           if (R1 & 7 == 1) goto c5rwP; else goto c5rwQ;
       c5rwP: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5rwQ: // global
           R1 = P64[R1 + 14] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rwL_info" {
     block_c5rwL_info:
         const _c5rwL;
         const 0;
         const 30;
 },
 section ""data" . Data.OldList.unwords_closure" {
     Data.OldList.unwords_closure:
         const Data.OldList.unwords_info;
 },
 sat_s5pEa_entry() //  [R1]
         { []
         }
     {offset
       c5rxg: // global
           R2 = P64[R1 + 16];
           call Data.OldList.unwords_go_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5pEa_info" {
     sat_s5pEa_info:
         const sat_s5pEa_entry;
         const 1;
         const 16;
 },
 Data.OldList.unwords_entry() //  [R2]
         { []
         }
     {offset
       c5rxn: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5rxo; else goto c5rxp;
       c5rxo: // global
           R2 = R2;
           R1 = Data.OldList.unwords_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5rxp: // global
           I64[Sp - 8] = block_c5rx6_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5rxv; else goto c5rx7;
       u5rxv: // global
           call _c5rx6(R1) args: 0, res: 0, upd: 0;
       c5rx7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.unwords_info" {
     Data.OldList.unwords_info:
         const Data.OldList.unwords_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5rx6() //  [R1]
         { []
         }
     {offset
       c5rx6: // global
           if (R1 & 7 == 1) goto c5rxk; else goto c5rxl;
       c5rxk: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5rxl: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5rxu; else goto c5rxt;
       c5rxu: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5rxt: // global
           _s5pE8::P64 = P64[R1 + 6];
           _s5pE9::P64 = P64[R1 + 14];
           I64[Hp - 16] = sat_s5pEa_info;
           P64[Hp] = _s5pE9::P64;
           R3 = Hp - 16;
           R2 = _s5pE8::P64;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rx6_info" {
     block_c5rx6_info:
         const _c5rx6;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.043293502 UTC

[section ""data" . lvl9_r5kSr_closure" {
     lvl9_r5kSr_closure:
         const lvl9_r5kSr_info;
         const 0;
         const 0;
         const 0;
 },
 lvl9_r5kSr_entry() //  [R1]
         { []
         }
     {offset
       c5rya: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5ryb; else goto c5ryc;
       c5ryb: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5ryc: // global
           (_c5ry7::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5ry7::I64 == 0) goto c5ry9; else goto c5ry8;
       c5ry9: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5ry8: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5ry7::I64;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.[]_closure+1;
           Sp = Sp - 16;
           call GHC.List.reverse1_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl9_r5kSr_info" {
     lvl9_r5kSr_info:
         const lvl9_r5kSr_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.047949213 UTC

[section ""data" . lvl10_r5kSs_closure" {
     lvl10_r5kSs_closure:
         const lvl10_r5kSs_info;
         const 0;
         const 0;
         const 0;
 },
 lvl10_r5kSs_entry() //  [R1]
         { []
         }
     {offset
       c5ryt: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5ryu; else goto c5ryv;
       c5ryu: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5ryv: // global
           (_c5ryq::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5ryq::I64 == 0) goto c5rys; else goto c5ryr;
       c5rys: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5ryr: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5ryq::I64;
           R3 = lvl9_r5kSr_closure;
           R2 = GHC.Types.[]_closure+1;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl10_r5kSs_info" {
     lvl10_r5kSs_info:
         const lvl10_r5kSs_entry;
         const 0;
         const 4294967317;
         const S5qnM_srt+144;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.059368634 UTC

[section ""data" . poly_$wgo_r5kSt_closure" {
     poly_$wgo_r5kSt_closure:
         const poly_$wgo_r5kSt_info;
         const 0;
 },
 poly_$wgo_r5kSt_slow() //  [R1]
         { []
         }
     {offset
       c5ryG: // global
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call poly_$wgo_r5kSt_entry(R5,
                                      R4,
                                      R3,
                                      R2,
                                      R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s5pEp_entry() //  [R1]
         { []
         }
     {offset
       c5rza: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5rzb; else goto c5rzc;
       c5rzb: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rzc: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R5 = P64[R1 + 32];
           R4 = P64[R1 + 16];
           R3 = I64[R1 + 40];
           R2 = P64[R1 + 24];
           Sp = Sp - 16;
           call poly_$wgo_r5kSt_entry(R5,
                                      R4,
                                      R3,
                                      R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pEp_info" {
     sat_s5pEp_info:
         const sat_s5pEp_entry;
         const 4294967299;
         const 4294967311;
         const S5qnM_srt+152;
 },
 sat_s5pEn_entry() //  [R1]
         { []
         }
     {offset
       c5rzl: // global
           R3 = GHC.Types.[]_closure+1;
           R2 = P64[R1 + 16];
           call GHC.List.reverse1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5pEn_info" {
     sat_s5pEn_info:
         const sat_s5pEn_entry;
         const 1;
         const 16;
 },
 sat_s5pEo_entry() //  [R1]
         { []
         }
     {offset
       c5rzo: // global
           _s5pEo::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5rzp; else goto c5rzq;
       c5rzq: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5rzs; else goto c5rzr;
       c5rzs: // global
           HpAlloc = 24;
           goto c5rzp;
       c5rzp: // global
           R1 = _s5pEo::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rzr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5pEo::P64;
           _s5pEd::P64 = P64[_s5pEo::P64 + 16];
           _s5pEm::P64 = P64[_s5pEo::P64 + 24];
           I64[Hp - 16] = sat_s5pEn_info;
           P64[Hp] = _s5pEm::P64;
           R3 = Hp - 16;
           R2 = _s5pEd::P64;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pEo_info" {
     sat_s5pEo_info:
         const sat_s5pEo_entry;
         const 2;
         const 18;
 },
 sat_s5pEs_entry() //  [R1]
         { []
         }
     {offset
       c5rzG: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5rzK; else goto c5rzJ;
       c5rzK: // global
           HpAlloc = 24;
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rzJ: // global
           _s5pEe::P64 = P64[R1 + 16];
           _s5pEg::P64 = P64[R1 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5pEg::P64;
           P64[Hp] = _s5pEe::P64;
           R3 = GHC.Types.[]_closure+1;
           R2 = Hp - 14;
           call GHC.List.reverse1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5pEs_info" {
     sat_s5pEs_info:
         const sat_s5pEs_entry;
         const 2;
         const 18;
 },
 b'_s5pEq_entry() //  [R1]
         { []
         }
     {offset
       c5rzL: // global
           _s5pEq::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5rzM; else goto c5rzN;
       c5rzN: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5rzP; else goto c5rzO;
       c5rzP: // global
           HpAlloc = 32;
           goto c5rzM;
       c5rzM: // global
           R1 = _s5pEq::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rzO: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5pEq::P64;
           _s5pEd::P64 = P64[_s5pEq::P64 + 16];
           _s5pEe::P64 = P64[_s5pEq::P64 + 24];
           _s5pEg::P64 = P64[_s5pEq::P64 + 32];
           I64[Hp - 24] = sat_s5pEs_info;
           P64[Hp - 8] = _s5pEe::P64;
           P64[Hp] = _s5pEg::P64;
           R3 = Hp - 24;
           R2 = _s5pEd::P64;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . b'_s5pEq_info" {
     b'_s5pEq_info:
         const b'_s5pEq_entry;
         const 3;
         const 15;
 },
 sat_s5pEu_entry() //  [R1]
         { []
         }
     {offset
       c5rzU: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5rzV; else goto c5rzW;
       c5rzV: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rzW: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R5 = GHC.Types.[]_closure+1;
           R4 = P64[R1 + 24];
           R3 = I64[R1 + 32];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call poly_$wgo_r5kSt_entry(R5,
                                      R4,
                                      R3,
                                      R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pEu_info" {
     sat_s5pEu_info:
         const sat_s5pEu_entry;
         const 4294967298;
         const 4294967311;
         const S5qnM_srt+152;
 },
 sat_s5pEt_entry() //  [R1]
         { []
         }
     {offset
       c5rA1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5rA2; else goto c5rA3;
       c5rA2: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rA3: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = lvl9_r5kSr_closure;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pEt_info" {
     sat_s5pEt_info:
         const sat_s5pEt_entry;
         const 1;
         const 4294967312;
         const S5qnM_srt+144;
 },
 sat_s5pEy_entry() //  [R1]
         { []
         }
     {offset
       c5rAa: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5rAb; else goto c5rAc;
       c5rAb: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rAc: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R5 = P64[R1 + 32];
           R4 = P64[R1 + 16];
           R3 = I64[R1 + 40];
           R2 = P64[R1 + 24];
           Sp = Sp - 16;
           call poly_$wgo_r5kSt_entry(R5,
                                      R4,
                                      R3,
                                      R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pEy_info" {
     sat_s5pEy_info:
         const sat_s5pEy_entry;
         const 4294967299;
         const 4294967311;
         const S5qnM_srt+152;
 },
 sat_s5pEw_entry() //  [R1]
         { []
         }
     {offset
       c5rAl: // global
           R3 = GHC.Types.[]_closure+1;
           R2 = P64[R1 + 16];
           call GHC.List.reverse1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5pEw_info" {
     sat_s5pEw_info:
         const sat_s5pEw_entry;
         const 1;
         const 16;
 },
 sat_s5pEx_entry() //  [R1]
         { []
         }
     {offset
       c5rAo: // global
           _s5pEx::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5rAp; else goto c5rAq;
       c5rAq: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5rAs; else goto c5rAr;
       c5rAs: // global
           HpAlloc = 24;
           goto c5rAp;
       c5rAp: // global
           R1 = _s5pEx::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rAr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5pEx::P64;
           _s5pEd::P64 = P64[_s5pEx::P64 + 16];
           _s5pEv::P64 = P64[_s5pEx::P64 + 24];
           I64[Hp - 16] = sat_s5pEw_info;
           P64[Hp] = _s5pEv::P64;
           R3 = Hp - 16;
           R2 = _s5pEd::P64;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pEx_info" {
     sat_s5pEx_info:
         const sat_s5pEx_entry;
         const 2;
         const 18;
 },
 poly_$wgo_r5kSt_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5rAx: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c5rAy; else goto c5rAz;
       c5rAy: // global
           R1 = poly_$wgo_r5kSt_closure;
           P64[Sp - 32] = R2;
           I64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           call (stg_gc_fun)(R1) args: 40, res: 0, upd: 8;
       c5rAz: // global
           I64[Sp - 32] = block_c5ryK_info;
           R1 = R2;
           I64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5rB2; else goto c5ryL;
       u5rB2: // global
           call _c5ryK(R1) args: 0, res: 0, upd: 0;
       c5ryL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . poly_$wgo_r5kSt_info" {
     poly_$wgo_r5kSt_info:
         const poly_$wgo_r5kSt_entry;
         const 0;
         const 12884901902;
         const 17179869184;
         const S5qnM_srt+144;
         const 132;
         const poly_$wgo_r5kSt_slow;
 },
 _c5ryK() //  [R1]
         { []
         }
     {offset
       c5ryK: // global
           if (R1 & 7 == 1) goto c5rAu; else goto c5rAv;
       c5rAu: // global
           R1 = []_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5rAv: // global
           Hp = Hp + 128;
           if (Hp > HpLim) (likely: False) goto c5rAE; else goto c5rAD;
       c5rAE: // global
           HpAlloc = 128;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5rAD: // global
           _s5pEg::P64 = P64[R1 + 6];
           _s5pEh::P64 = P64[R1 + 14];
           _s5pEi::I64 = I64[Sp + 8] + 1;
           if (_s5pEi::I64 >= 255) goto c5rAR; else goto c5rAT;
       c5rAR: // global
           Hp = Hp - 128;
           _s5pEl::I64 = _s5pEi::I64 & (_s5pEi::I64 + 1);
           if (_s5pEl::I64 != 0) goto u5rAV; else goto u5rAU;
       u5rAV: // global
           I64[Sp - 16] = _s5pEi::I64;
           I64[Sp - 8] = _s5pEl::I64;
           P64[Sp] = _s5pEh::P64;
           P64[Sp + 8] = _s5pEg::P64;
           Sp = Sp - 16;
           call _c5rz3() args: 0, res: 0, upd: 0;
       u5rAU: // global
           I64[Sp - 16] = _s5pEi::I64;
           I64[Sp - 8] = _s5pEl::I64;
           P64[Sp] = _s5pEh::P64;
           P64[Sp + 8] = _s5pEg::P64;
           Sp = Sp - 16;
           call _c5rzv() args: 0, res: 0, upd: 0;
       c5rAT: // global
           I64[Hp - 120] = :_con_info;
           P64[Hp - 112] = _s5pEg::P64;
           P64[Hp - 104] = P64[Sp + 24];
           I64[Hp - 96] = sat_s5pEy_info;
           _s5pEd::P64 = P64[Sp + 16];
           P64[Hp - 80] = _s5pEd::P64;
           P64[Hp - 72] = _s5pEh::P64;
           _c5rA5::P64 = Hp - 118;
           P64[Hp - 64] = _c5rA5::P64;
           I64[Hp - 56] = _s5pEi::I64;
           I64[Hp - 48] = sat_s5pEx_info;
           P64[Hp - 32] = _s5pEd::P64;
           P64[Hp - 24] = _c5rA5::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 96;
           R1 = Hp - 14;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ryK_info" {
     block_c5ryK_info:
         const _c5ryK;
         const 67;
         const 12884901918;
         const S5qnM_srt+144;
 },
 _c5rz3() //  []
         { []
         }
     {offset
       c5rz3: // global
           Hp = Hp + 128;
           if (Hp > HpLim) (likely: False) goto c5rAK; else goto c5rAJ;
       c5rAK: // global
           HpAlloc = 128;
           I64[Sp - 8] = block_c5rz2_info;
           R1 = I64[Sp + 8];
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c5rAJ: // global
           I64[Hp - 120] = :_con_info;
           P64[Hp - 112] = P64[Sp + 24];
           P64[Hp - 104] = P64[Sp + 40];
           I64[Hp - 96] = sat_s5pEp_info;
           _s5pEd::P64 = P64[Sp + 32];
           P64[Hp - 80] = _s5pEd::P64;
           P64[Hp - 72] = P64[Sp + 16];
           _c5rz5::P64 = Hp - 118;
           P64[Hp - 64] = _c5rz5::P64;
           I64[Hp - 56] = I64[Sp];
           I64[Hp - 48] = sat_s5pEo_info;
           P64[Hp - 32] = _s5pEd::P64;
           P64[Hp - 24] = _c5rz5::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 96;
           R1 = Hp - 14;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c5rz2() //  [R1]
         { []
         }
     {offset
       c5rz2: // global
           I64[Sp + 16] = R1;
           Sp = Sp + 8;
           call _c5rz3() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5rz2_info" {
     block_c5rz2_info:
         const _c5rz2;
         const 198;
         const 4294967326;
         const S5qnM_srt+152;
 },
 _c5rzv() //  []
         { []
         }
     {offset
       c5rzv: // global
           Hp = Hp + 128;
           if (Hp > HpLim) (likely: False) goto c5rAP; else goto c5rAO;
       c5rAP: // global
           HpAlloc = 128;
           I64[Sp - 8] = block_c5rzu_info;
           R1 = I64[Sp + 8];
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c5rAO: // global
           I64[Hp - 120] = b'_s5pEq_info;
           P64[Hp - 104] = P64[Sp + 32];
           P64[Hp - 96] = P64[Sp + 40];
           P64[Hp - 88] = P64[Sp + 24];
           I64[Hp - 80] = sat_s5pEu_info;
           P64[Hp - 64] = P64[Sp + 16];
           _c5rzx::P64 = Hp - 120;
           P64[Hp - 56] = _c5rzx::P64;
           I64[Hp - 48] = I64[Sp];
           I64[Hp - 40] = sat_s5pEt_info;
           P64[Hp - 24] = _c5rzx::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 80;
           R1 = Hp - 14;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c5rzu() //  [R1]
         { []
         }
     {offset
       c5rzu: // global
           I64[Sp + 16] = R1;
           Sp = Sp + 8;
           call _c5rzv() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5rzu_info" {
     block_c5rzu_info:
         const _c5rzu;
         const 198;
         const 12884901918;
         const S5qnM_srt+144;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.101663752 UTC

[section ""data" . Data.OldList.$winits_closure" {
     Data.OldList.$winits_closure:
         const Data.OldList.$winits_info;
         const 0;
 },
 sat_s5pEA_entry() //  [R1]
         { []
         }
     {offset
       c5rD1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5rD2; else goto c5rD3;
       c5rD2: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rD3: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R5 = GHC.Types.[]_closure+1;
           R4 = GHC.Types.[]_closure+1;
           R3 = 0;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call poly_$wgo_r5kSt_entry(R5,
                                      R4,
                                      R3,
                                      R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pEA_info" {
     sat_s5pEA_info:
         const sat_s5pEA_entry;
         const 1;
         const 4294967312;
         const S5qnM_srt+152;
 },
 Data.OldList.$winits_entry() //  [R2]
         { []
         }
     {offset
       c5rD4: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5rD8; else goto c5rD7;
       c5rD8: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Data.OldList.$winits_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5rD7: // global
           I64[Hp - 16] = sat_s5pEA_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           R1 = lvl10_r5kSs_closure;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.$winits_info" {
     Data.OldList.$winits_info:
         const Data.OldList.$winits_entry;
         const 0;
         const 30064771086;
         const 4294967301;
         const S5qnM_srt+152;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.107960298 UTC

[section ""data" . Data.OldList.inits_closure" {
     Data.OldList.inits_closure:
         const Data.OldList.inits_info;
         const 0;
 },
 Data.OldList.inits_entry() //  [R2]
         { []
         }
     {offset
       c5rDt: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5rDu; else goto c5rDv;
       c5rDu: // global
           R2 = R2;
           R1 = Data.OldList.inits_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5rDv: // global
           I64[Sp - 8] = block_c5rDq_info;
           R2 = R2;
           Sp = Sp - 8;
           call Data.OldList.$winits_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.inits_info" {
     Data.OldList.inits_info:
         const Data.OldList.inits_entry;
         const 0;
         const 21474836494;
         const 4294967301;
         const S5qnM_srt+160;
 },
 _c5rDq() //  [R1, R2]
         { []
         }
     {offset
       c5rDq: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5rDy; else goto c5rDx;
       c5rDy: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c5rDx: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rDq_info" {
     block_c5rDq_info:
         const _c5rDq;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.113566527 UTC

[section ""cstring" . Data.OldList.$tc'SnocBuilder3_bytes" {
     Data.OldList.$tc'SnocBuilder3_bytes:
         I8[] [39,83,110,111,99,66,117,105,108,100,101,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.116938458 UTC

[section ""data" . Data.OldList.$tc'SnocBuilder2_closure" {
     Data.OldList.$tc'SnocBuilder2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.OldList.$tc'SnocBuilder3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.119463021 UTC

[section ""cstring" . Data.OldList.$tcSnocBuilder2_bytes" {
     Data.OldList.$tcSnocBuilder2_bytes:
         I8[] [83,110,111,99,66,117,105,108,100,101,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.122031999 UTC

[section ""data" . Data.OldList.$tcSnocBuilder1_closure" {
     Data.OldList.$tcSnocBuilder1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.OldList.$tcSnocBuilder2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.124614302 UTC

[section ""cstring" . Data.OldList.$trModule2_bytes" {
     Data.OldList.$trModule2_bytes:
         I8[] [68,97,116,97,46,79,108,100,76,105,115,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.127203729 UTC

[section ""data" . Data.OldList.$trModule1_closure" {
     Data.OldList.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.OldList.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.129857033 UTC

[section ""cstring" . Data.OldList.$trModule4_bytes" {
     Data.OldList.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.132397609 UTC

[section ""data" . Data.OldList.$trModule3_closure" {
     Data.OldList.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.OldList.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.135183392 UTC

[section ""data" . Data.OldList.$trModule_closure" {
     Data.OldList.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.OldList.$trModule3_closure+1;
         const Data.OldList.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.138102957 UTC

[section ""data" . Data.OldList.$tcSnocBuilder_closure" {
     Data.OldList.$tcSnocBuilder_closure:
         const GHC.Types.TyCon_con_info;
         const Data.OldList.$trModule_closure+1;
         const Data.OldList.$tcSnocBuilder1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 17650604350574790456;
         const 3021529305462083578;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.140956711 UTC

[section ""data" . $krep_r5kSu_closure" {
     $krep_r5kSu_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcWord_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.1437383 UTC

[section ""data" . $krep1_r5kSv_closure" {
     $krep1_r5kSv_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.146207249 UTC

[section ""data" . $krep2_r5kSw_closure" {
     $krep2_r5kSw_closure:
         const :_con_info;
         const $krep1_r5kSv_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.148850265 UTC

[section ""data" . $krep3_r5kSx_closure" {
     $krep3_r5kSx_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tc[]_closure;
         const $krep2_r5kSw_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.151717506 UTC

[section ""data" . $krep4_r5kSy_closure" {
     $krep4_r5kSy_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.OldList.$tcSnocBuilder_closure+1;
         const $krep2_r5kSw_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.154881248 UTC

[section ""data" . $krep5_r5kSz_closure" {
     $krep5_r5kSz_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5kSx_closure+1;
         const $krep4_r5kSy_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.158563144 UTC

[section ""data" . $krep6_r5kSA_closure" {
     $krep6_r5kSA_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5kSx_closure+1;
         const $krep5_r5kSz_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.161165727 UTC

[section ""data" . Data.OldList.$tc'SnocBuilder1_closure" {
     Data.OldList.$tc'SnocBuilder1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r5kSu_closure+1;
         const $krep6_r5kSA_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.164113719 UTC

[section ""data" . Data.OldList.$tc'SnocBuilder_closure" {
     Data.OldList.$tc'SnocBuilder_closure:
         const GHC.Types.TyCon_con_info;
         const Data.OldList.$trModule_closure+1;
         const Data.OldList.$tc'SnocBuilder2_closure+1;
         const Data.OldList.$tc'SnocBuilder1_closure+4;
         const 6719263830224029004;
         const 9134053658265160069;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.168380344 UTC

[section ""data" . lvl11_r5kSB_closure" {
     lvl11_r5kSB_closure:
         const lvl11_r5kSB_info;
 },
 lvl11_r5kSB_entry() //  [R2]
         { []
         }
     {offset
       c5rEa: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5rEb; else goto c5rEc;
       c5rEb: // global
           R2 = R2;
           R1 = lvl11_r5kSB_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5rEc: // global
           I64[Sp - 8] = block_c5rE7_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5rEk; else goto c5rE8;
       u5rEk: // global
           call _c5rE7(R1) args: 0, res: 0, upd: 0;
       c5rE8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . lvl11_r5kSB_info" {
     lvl11_r5kSB_info:
         const lvl11_r5kSB_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5rE7() //  [R1]
         { []
         }
     {offset
       c5rE7: // global
           if (I64[R1 + 7] == 10) goto c5rEj; else goto c5rEi;
       c5rEj: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5rEi: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rE7_info" {
     block_c5rE7_info:
         const _c5rE7;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.180192549 UTC

[section ""data" . Data.OldList.lines_closure" {
     Data.OldList.lines_closure:
         const Data.OldList.lines_info;
 },
 sat_s5pEU_entry() //  [R1]
         { []
         }
     {offset
       c5rF0: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5rF1; else goto c5rF2;
       c5rF1: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rF2: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5rET_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5rF9; else goto c5rEU;
       u5rF9: // global
           call _c5rET(R1) args: 0, res: 0, upd: 0;
       c5rEU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5pEU_info" {
     sat_s5pEU_info:
         const sat_s5pEU_entry;
         const 1;
         const 16;
 },
 _c5rET() //  [R1]
         { []
         }
     {offset
       c5rET: // global
           if (R1 & 7 == 1) goto c5rEX; else goto c5rEY;
       c5rEX: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c5rEY: // global
           R2 = P64[R1 + 14];
           Sp = Sp + 8;
           call Data.OldList.lines_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5rET_info" {
     block_c5rET_info:
         const _c5rET;
         const 0;
         const 30;
 },
 ds1_s5pEN_entry() //  [R1]
         { []
         }
     {offset
       c5rFb: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5rFc; else goto c5rFd;
       c5rFc: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5rFd: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5rEN_info;
           R3 = P64[R1 + 16];
           R2 = lvl11_r5kSB_closure+1;
           Sp = Sp - 24;
           call GHC.List.$wbreak_entry(R3, R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds1_s5pEN_info" {
     ds1_s5pEN_info:
         const ds1_s5pEN_entry;
         const 1;
         const 16;
 },
 _c5rEN() //  [R1, R2]
         { []
         }
     {offset
       c5rEN: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5rFg; else goto c5rFf;
       c5rFg: // global
           HpAlloc = 48;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c5rFf: // global
           I64[Hp - 40] = sat_s5pEU_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = Hp - 40;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5rEN_info" {
     block_c5rEN_info:
         const _c5rEN;
         const 0;
         const 30;
 },
 Data.OldList.lines_entry() //  [R2]
         { []
         }
     {offset
       c5rFl: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5rFm; else goto c5rFn;
       c5rFm: // global
           R2 = R2;
           R1 = Data.OldList.lines_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5rFn: // global
           I64[Sp - 8] = block_c5rED_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5rFw; else goto c5rEE;
       u5rFw: // global
           call _c5rED(R1) args: 0, res: 0, upd: 0;
       c5rEE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.lines_info" {
     Data.OldList.lines_info:
         const Data.OldList.lines_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5rED() //  [R1]
         { []
         }
     {offset
       c5rED: // global
           if (R1 & 7 == 1) goto c5rFi; else goto c5rFj;
       c5rFi: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5rFj: // global
           Hp = Hp + 96;
           if (Hp > HpLim) (likely: False) goto c5rFv; else goto c5rFu;
       c5rFv: // global
           HpAlloc = 96;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5rFu: // global
           I64[Hp - 88] = ds1_s5pEN_info;
           P64[Hp - 72] = R1;
           I64[Hp - 64] = stg_sel_1_upd_info;
           _c5rEJ::P64 = Hp - 88;
           P64[Hp - 48] = _c5rEJ::P64;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _c5rEJ::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 64;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5rED_info" {
     block_c5rED_info:
         const _c5rED;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.193221403 UTC

[section ""data" . Data.OldList.SnocBuilder_closure" {
     Data.OldList.SnocBuilder_closure:
         const Data.OldList.SnocBuilder_info;
 },
 Data.OldList.SnocBuilder_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5rGo: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5rGs; else goto c5rGr;
       c5rGs: // global
           HpAlloc = 32;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.OldList.SnocBuilder_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5rGr: // global
           I64[Hp - 24] = Data.OldList.SnocBuilder_con_info;
           P64[Hp - 16] = R3;
           P64[Hp - 8] = R4;
           I64[Hp] = R2;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.SnocBuilder_info" {
     Data.OldList.SnocBuilder_info:
         const Data.OldList.SnocBuilder_entry;
         const 0;
         const 14;
         const 12884901907;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.19699233 UTC

[section ""cstring" . i5rGA_str" {
     i5rGA_str:
         I8[] [98,97,115,101,58,68,97,116,97,46,79,108,100,76,105,115,116,46,83,110,111,99,66,117,105,108,100,101,114]
 },
 Data.OldList.SnocBuilder_con_entry() //  [R1]
         { []
         }
     {offset
       c5rGz: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.OldList.SnocBuilder_con_info" {
     Data.OldList.SnocBuilder_con_info:
         const Data.OldList.SnocBuilder_con_entry;
         const 4294967298;
         const 1;
         const i5rGA_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.20071962 UTC

[section ""relreadonly" . S5qnM_srt" {
     S5qnM_srt:
         const GHC.Err.errorWithoutStackTrace_closure;
         const Data.OldList.maximumBy_closure;
         const Data.OldList.maximumBy1_closure;
         const Data.OldList.minimumBy_closure;
         const Data.OldList.minimumBy1_closure;
         const sat_s5ps2_closure;
         const Data.OldList.genericLength2_closure;
         const Data.OldList.genericLength1_closure;
         const Data.OldList.strictGenericLength_closure;
         const Data.OldList.genericLength_closure;
         const Data.OldList.genericTake_closure;
         const Data.OldList.genericReplicate_closure;
         const Data.OldList.genericDrop_closure;
         const Data.OldList.$wgenericSplitAt_closure;
         const Data.OldList.genericSplitAt_closure;
         const Data.OldList.genericIndex_closure;
         const lvl3_r5kSk_closure;
         const lvl5_r5kSm_closure;
         const lvl9_r5kSr_closure;
         const poly_$wgo_r5kSt_closure;
         const Data.OldList.$winits_closure;
         const lvl10_r5kSs_closure;
         const Data.OldList.inits_closure;
 }]

