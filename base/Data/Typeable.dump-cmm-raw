
==================== Raw Cmm ====================
2018-03-16 16:02:40.347337126 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:02:40.348823882 UTC

[section ""data" . Data.Typeable.typeOf_closure" {
     Data.Typeable.typeOf_closure:
         const Data.Typeable.typeOf_info;
 },
 Data.Typeable.typeOf_entry() //  [R2]
         { []
         }
     {offset
       c7nX0: // global
           R2 = R2;
           call Data.Typeable.Internal.$WSomeTypeRep_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeOf_info" {
     Data.Typeable.typeOf_info:
         const Data.Typeable.typeOf_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.352359782 UTC

[section ""data" . Data.Typeable.typeRep_closure" {
     Data.Typeable.typeRep_closure:
         const Data.Typeable.typeRep_info;
 },
 Data.Typeable.typeRep_entry() //  [R2, R3]
         { []
         }
     {offset
       c7nXb: // global
           R3 = R3;
           R2 = R2;
           call Data.Typeable.Internal.someTypeRep_entry(R3,
                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeRep_info" {
     Data.Typeable.typeRep_info:
         const Data.Typeable.typeRep_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.356498637 UTC

[section ""data" . Data.Typeable.cast_closure" {
     Data.Typeable.cast_closure:
         const Data.Typeable.cast_info;
         const 0;
 },
 Data.Typeable.cast_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c7nXs: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7nXt; else goto c7nXu;
       c7nXt: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Typeable.cast_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7nXu: // global
           I64[Sp - 16] = block_c7nXm_info;
           R3 = R3;
           R2 = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.cast_info" {
     Data.Typeable.cast_info:
         const Data.Typeable.cast_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S7nhj_srt;
 },
 _c7nXm() //  [R1]
         { []
         }
     {offset
       c7nXm: // global
           if (R1 & 7 == 1) goto c7nXp; else goto c7nXq;
       c7nXp: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7nXq: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7nXD; else goto c7nXC;
       c7nXD: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7nXC: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7nXm_info" {
     block_c7nXm_info:
         const _c7nXm;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.363324624 UTC

[section ""data" . Data.Typeable.eqT1_closure" {
     Data.Typeable.eqT1_closure:
         const GHC.Base.Just_con_info;
         const Data.Type.Equality.$WRefl_closure;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.366167123 UTC

[section ""data" . Data.Typeable.eqT_closure" {
     Data.Typeable.eqT_closure:
         const Data.Typeable.eqT_info;
         const 0;
 },
 Data.Typeable.eqT_entry() //  [R2, R3]
         { []
         }
     {offset
       c7nY2: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7nY3; else goto c7nY4;
       c7nY3: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Typeable.eqT_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7nY4: // global
           I64[Sp - 8] = block_c7nXW_info;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.eqT_info" {
     Data.Typeable.eqT_info:
         const Data.Typeable.eqT_entry;
         const 0;
         const 21474836494;
         const 8589934607;
         const S7nhj_srt;
 },
 _c7nXW() //  [R1]
         { []
         }
     {offset
       c7nXW: // global
           if (R1 & 7 == 1) goto c7nXZ; else goto c7nY0;
       c7nXZ: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7nY0: // global
           R1 = Data.Typeable.eqT1_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7nXW_info" {
     block_c7nXW_info:
         const _c7nXW;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.372138261 UTC

[section ""data" . Data.Typeable.gcast_closure" {
     Data.Typeable.gcast_closure:
         const Data.Typeable.gcast_info;
         const 0;
 },
 Data.Typeable.gcast_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c7nYx: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7nYy; else goto c7nYz;
       c7nYy: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Typeable.gcast_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7nYz: // global
           I64[Sp - 16] = block_c7nYr_info;
           R3 = R3;
           R2 = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.gcast_info" {
     Data.Typeable.gcast_info:
         const Data.Typeable.gcast_entry;
         const 0;
         const 38654705678;
         const 12884901911;
         const S7nhj_srt;
 },
 _c7nYr() //  [R1]
         { []
         }
     {offset
       c7nYr: // global
           if (R1 & 7 == 1) goto c7nYu; else goto c7nYv;
       c7nYu: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7nYv: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7nYI; else goto c7nYH;
       c7nYI: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7nYH: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7nYr_info" {
     block_c7nYr_info:
         const _c7nYr;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.378378438 UTC

[section ""data" . Data.Typeable.gcast1_closure" {
     Data.Typeable.gcast1_closure:
         const Data.Typeable.gcast1_info;
         const 0;
 },
 Data.Typeable.gcast1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c7nZ6: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7nZ7; else goto c7nZ8;
       c7nZ7: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Typeable.gcast1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7nZ8: // global
           I64[Sp - 16] = block_c7nZ0_info;
           R3 = R3;
           R2 = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.gcast1_info" {
     Data.Typeable.gcast1_info:
         const Data.Typeable.gcast1_entry;
         const 0;
         const 73014444046;
         const 12884901911;
         const S7nhj_srt;
 },
 _c7nZ0() //  [R1]
         { []
         }
     {offset
       c7nZ0: // global
           if (R1 & 7 == 1) goto c7nZ3; else goto c7nZ4;
       c7nZ3: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7nZ4: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7nZh; else goto c7nZg;
       c7nZh: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7nZg: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7nZ0_info" {
     block_c7nZ0_info:
         const _c7nZ0;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.385060607 UTC

[section ""data" . Data.Typeable.gcast2_closure" {
     Data.Typeable.gcast2_closure:
         const Data.Typeable.gcast2_info;
         const 0;
 },
 Data.Typeable.gcast2_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c7nZF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7nZG; else goto c7nZH;
       c7nZG: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Typeable.gcast2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7nZH: // global
           I64[Sp - 16] = block_c7nZz_info;
           R3 = R3;
           R2 = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.gcast2_info" {
     Data.Typeable.gcast2_info:
         const Data.Typeable.gcast2_entry;
         const 0;
         const 141733920782;
         const 12884901911;
         const S7nhj_srt;
 },
 _c7nZz() //  [R1]
         { []
         }
     {offset
       c7nZz: // global
           if (R1 & 7 == 1) goto c7nZC; else goto c7nZD;
       c7nZC: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7nZD: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7nZQ; else goto c7nZP;
       c7nZQ: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7nZP: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7nZz_info" {
     block_c7nZz_info:
         const _c7nZz;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.392286586 UTC

[section ""data" . Data.Typeable.mkFunTy1_closure" {
     Data.Typeable.mkFunTy1_closure:
         const Data.Typeable.mkFunTy1_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Typeable.mkFunTy1_entry() //  [R1]
         { []
         }
     {offset
       c7o0k: // global
           if ((Sp + -104) < SpLim) (likely: False) goto c7o0l; else goto c7o0m;
       c7o0l: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7o0m: // global
           (_c7o07::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7o07::I64 == 0) goto c7o09; else goto c7o08;
       c7o09: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7o08: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7o07::I64;
           I64[Sp - 24] = block_c7o0a_info;
           R6 = 0;
           R5 = GHC.Types.$tcTYPE2_closure;
           R4 = GHC.Types.tr$ModuleGHCPrim_closure;
           R3 = 12502576999761269576;
           R2 = 16277905407886699876;
           P64[Sp - 40] = GHC.Types.$tcTYPE1_closure;
           P64[Sp - 32] = GHC.Types.[]_closure+1;
           Sp = Sp - 40;
           call Data.Typeable.Internal.$wmkTrCon_entry(R6,
                                                       R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . Data.Typeable.mkFunTy1_info" {
     Data.Typeable.mkFunTy1_info:
         const Data.Typeable.mkFunTy1_entry;
         const 0;
         const 12884901909;
         const S7nhj_srt+48;
 },
 _c7o0a() //  [R1, R2, R3, R4, R5]
         { []
         }
     {offset
       c7o0a: // global
           I64[Sp - 40] = block_c7o0e_info;
           R6 = 0;
           _s7nbn::P64 = R5;
           R5 = GHC.Types.$tc'LiftedRep1_closure;
           _s7nbm::P64 = R4;
           R4 = GHC.Types.tr$ModuleGHCPrim_closure;
           _s7nbl::P64 = R3;
           R3 = 5595830777317938557;
           _s7nbk::I64 = R2;
           R2 = 16105171405184389724;
           P64[Sp - 56] = GHC.Types.$tc'AddrRep1_closure;
           P64[Sp - 48] = GHC.Types.[]_closure+1;
           I64[Sp - 32] = _s7nbk::I64;
           P64[Sp - 24] = _s7nbl::P64;
           P64[Sp - 16] = _s7nbm::P64;
           P64[Sp - 8] = _s7nbn::P64;
           I64[Sp] = R1;
           Sp = Sp - 56;
           call Data.Typeable.Internal.$wmkTrCon_entry(R6,
                                                       R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c7o0a_info" {
     block_c7o0a_info:
         const _c7o0a;
         const 0;
         const 12884901918;
         const S7nhj_srt+48;
 },
 _c7o0e() //  [R1, R2, R3, R4, R5]
         { []
         }
     {offset
       c7o0e: // global
           I64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           I64[Sp] = R1;
           Sp = Sp - 40;
           call _c7o0f() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7o0e_info" {
     block_c7o0e_info:
         const _c7o0e;
         const 1093;
         const 4294967326;
         const S7nhj_srt+48;
 },
 _c7o0f() //  []
         { []
         }
     {offset
       c7o0f: // global
           Hp = Hp + 96;
           if (Hp > HpLim) (likely: False) goto c7o0q; else goto c7o0p;
       c7o0q: // global
           HpAlloc = 96;
           I64[Sp] = block_c7o0f_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 24;
       c7o0p: // global
           I64[Hp - 88] = Data.Typeable.Internal.TrTyCon_con_info;
           P64[Hp - 80] = P64[Sp + 16];
           P64[Hp - 72] = P64[Sp + 24];
           P64[Hp - 64] = P64[Sp + 32];
           I64[Hp - 56] = I64[Sp + 40];
           I64[Hp - 48] = I64[Sp + 8];
           I64[Hp - 40] = Data.Typeable.Internal.TrTyCon_con_info;
           P64[Hp - 32] = P64[Sp + 56];
           P64[Hp - 24] = P64[Sp + 64];
           P64[Hp - 16] = P64[Sp + 72];
           I64[Hp - 8] = I64[Sp + 80];
           I64[Hp] = I64[Sp + 48];
           R3 = Hp - 86;
           R2 = Hp - 38;
           Sp = Sp + 88;
           call Data.Typeable.Internal.mkTrApp_entry(R3,
                                                     R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7o0f_info" {
     block_c7o0f_info:
         const _c7o0f;
         const 35914;
         const 4294967326;
         const S7nhj_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.420029293 UTC

[section ""data" . Data.Typeable.funResultTy_closure" {
     Data.Typeable.funResultTy_closure:
         const Data.Typeable.funResultTy_info;
         const 0;
 },
 Data.Typeable.funResultTy_entry() //  [R2, R3]
         { []
         }
     {offset
       c7o10: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c7o14; else goto c7o15;
       c7o14: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Typeable.funResultTy_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7o15: // global
           I64[Sp - 16] = block_c7o0X_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7oar; else goto c7o0Y;
       u7oar: // global
           call _c7o0X(R1) args: 0, res: 0, upd: 0;
       c7o0Y: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.funResultTy_info" {
     Data.Typeable.funResultTy_info:
         const Data.Typeable.funResultTy_entry;
         const 0;
         const 16496969383950;
         const 8589934607;
         const S7nhj_srt;
 },
 _c7o0X() //  [R1]
         { []
         }
     {offset
       c7o0X: // global
           I64[Sp] = block_c7o13_info;
           _s7nbz::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s7nbz::P64;
           if (R1 & 7 != 0) goto u7oaq; else goto c7o17;
       u7oaq: // global
           call _c7o13(R1) args: 0, res: 0, upd: 0;
       c7o17: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7o0X_info" {
     block_c7o0X_info:
         const _c7o0X;
         const 1;
         const 12098922872862;
         const S7nhj_srt;
 },
 _c7o13() //  [R1]
         { []
         }
     {offset
       c7o13: // global
           I64[Sp - 8] = block_c7o1d_info;
           _s7nbB::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp] = _s7nbB::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7oas; else goto c7o3B;
       u7oas: // global
           call _c7o1d(R1) args: 0, res: 0, upd: 0;
       c7o3B: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7o13_info" {
     block_c7o13_info:
         const _c7o13;
         const 1;
         const 12098922872862;
         const S7nhj_srt;
 },
 _c7o1d() //  [R1]
         { []
         }
     {offset
       c7o1d: // global
           _c7o8H::P64 = R1 & 7;
           if (_c7o8H::P64 < 3) goto u7o9n; else goto u7o9o;
       u7o9n: // global
           if (_c7o8H::P64 < 2) goto c7o3I; else goto c7o6e;
       c7o3I: // global
           I64[Sp] = block_c7o3F_info;
           R1 = Data.Typeable.mkFunTy1_closure;
           if (R1 & 7 != 0) goto u7oat; else goto c7o3J;
       u7oat: // global
           call _c7o3F(R1) args: 0, res: 0, upd: 0;
       c7o3J: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7o6e: // global
           I64[Sp - 8] = block_c7o4O_info;
           _s7nd4::P64 = P64[R1 + 22];
           R1 = Data.Typeable.mkFunTy1_closure;
           P64[Sp] = _s7nd4::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7oau; else goto c7o6f;
       u7oau: // global
           call _c7o4O(R1) args: 0, res: 0, upd: 0;
       c7o6f: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       u7o9o: // global
           if (_c7o8H::P64 < 4) goto c7o84; else goto c7o8u;
       c7o84: // global
           I64[Sp - 8] = block_c7o6E_info;
           _s7ndU::P64 = P64[R1 + 21];
           R1 = Data.Typeable.mkFunTy1_closure;
           P64[Sp] = _s7ndU::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7oav; else goto c7o85;
       u7oav: // global
           call _c7o6E(R1) args: 0, res: 0, upd: 0;
       c7o85: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7o8u: // global
           I64[Sp] = block_c7o8s_info;
           R3 = Data.Typeable.Internal.$mApp1_closure;
           R2 = Data.Typeable.mkFunTy1_closure;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7o1d_info" {
     block_c7o1d_info:
         const _c7o1d;
         const 2;
         const 12098922872862;
         const S7nhj_srt;
 },
 _c7o3F() //  [R1]
         { []
         }
     {offset
       c7o3F: // global
           _c7o9c::P64 = R1 & 7;
           if (_c7o9c::P64 < 3) goto u7o9t; else goto c7o4q;
       u7o9t: // global
           if (_c7o9c::P64 < 2) goto c7o3Q; else goto c7o42;
       c7o3Q: // global
           I64[Sp] = block_c7o3N_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u7oaM; else goto c7o3R;
       u7oaM: // global
           call _c7o3N(R1) args: 0, res: 0, upd: 0;
       c7o3R: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7o42: // global
           I64[Sp - 16] = block_c7o40_info;
           _s7ncE::I64 = I64[R1 + 30];
           _s7ncF::I64 = I64[R1 + 38];
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           I64[Sp - 8] = _s7ncF::I64;
           I64[Sp] = _s7ncE::I64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7oaN; else goto c7o43;
       u7oaN: // global
           call _c7o40(R1) args: 0, res: 0, upd: 0;
       c7o43: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7o4q: // global
           I64[Sp - 16] = block_c7o4o_info;
           _s7ncP::I64 = I64[R1 + 29];
           _s7ncQ::I64 = I64[R1 + 37];
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           I64[Sp - 8] = _s7ncQ::I64;
           I64[Sp] = _s7ncP::I64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7oaO; else goto c7o4r;
       u7oaO: // global
           call _c7o4o(R1) args: 0, res: 0, upd: 0;
       c7o4r: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7o3F_info" {
     block_c7o3F_info:
         const _c7o3F;
         const 2;
         const 4294967326;
         const S7nhj_srt+64;
 },
 _c7o3N() //  [R1]
         { []
         }
     {offset
       c7o3N: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7o3X; else goto c7o3W;
       c7o3X: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7o3W: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 8;
           call _s7nbC() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7o3N_info" {
     block_c7o3N_info:
         const _c7o3N;
         const 2;
         const 4294967326;
         const S7nhj_srt+64;
 },
 _c7o40() //  [R1]
         { []
         }
     {offset
       c7o40: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7o49; else goto c7o48;
       c7o49: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7o48: // global
           if (I64[Sp + 16] == I64[R1 + 7]) goto c7o4l; else goto u7o9B;
       c7o4l: // global
           if (I64[Sp + 8] == I64[R1 + 15]) goto c7o4k; else goto u7o9C;
       c7o4k: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 24;
           call _s7nbC() args: 0, res: 0, upd: 0;
       u7o9C: // global
           Sp = Sp + 40;
           goto u7oaR;
       u7o9B: // global
           Sp = Sp + 40;
           goto u7oaR;
       u7oaR: // global
           call _c7o81() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7o40_info" {
     block_c7o40_info:
         const _c7o40;
         const 196;
         const 4294967326;
         const S7nhj_srt+64;
 },
 _c7o4o() //  [R1]
         { []
         }
     {offset
       c7o4o: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7o4x; else goto c7o4w;
       c7o4x: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7o4w: // global
           if (I64[Sp + 16] == I64[R1 + 7]) goto c7o4J; else goto u7o9E;
       c7o4J: // global
           if (I64[Sp + 8] == I64[R1 + 15]) goto c7o4I; else goto u7o9F;
       c7o4I: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 24;
           call _s7nbC() args: 0, res: 0, upd: 0;
       u7o9F: // global
           Sp = Sp + 40;
           goto u7oaU;
       u7o9E: // global
           Sp = Sp + 40;
           goto u7oaU;
       u7oaU: // global
           call _c7o81() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7o4o_info" {
     block_c7o4o_info:
         const _c7o4o;
         const 196;
         const 4294967326;
         const S7nhj_srt+64;
 },
 _c7o4O() //  [R1]
         { []
         }
     {offset
       c7o4O: // global
           _c7o8Y::P64 = R1 & 7;
           if (_c7o8Y::P64 < 3) goto u7o9u; else goto c7o6z;
       u7o9u: // global
           if (_c7o8Y::P64 < 2) goto c7o6m; else goto c7o6v;
       c7o6m: // global
           I64[Sp] = block_c7o6j_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u7oaW; else goto c7o6n;
       u7oaW: // global
           call _c7o6j(R1) args: 0, res: 0, upd: 0;
       c7o6n: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7o6v: // global
           I64[Sp] = I64[R1 + 30];
           I64[Sp - 8] = I64[R1 + 38];
           Sp = Sp - 8;
           goto u7oaY;
       c7o6z: // global
           I64[Sp] = I64[R1 + 29];
           I64[Sp - 8] = I64[R1 + 37];
           Sp = Sp - 8;
           goto u7oaY;
       u7oaY: // global
           call _s7nd5() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7o4O_info" {
     block_c7o4O_info:
         const _c7o4O;
         const 3;
         const 4294967326;
         const S7nhj_srt+64;
 },
 _c7o6j() //  [R1]
         { []
         }
     {offset
       c7o6j: // global
           I64[Sp - 8] = I64[R1 + 15];
           I64[Sp] = I64[R1 + 7];
           Sp = Sp - 8;
           call _s7nd5() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7o6j_info" {
     block_c7o6j_info:
         const _c7o6j;
         const 3;
         const 4294967326;
         const S7nhj_srt+64;
 },
 _s7nd5() //  []
         { []
         }
     {offset
       s7nd5: // global
           I64[Sp - 8] = block_c7o4T_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7oby; else goto c7o4V;
       u7oby: // global
           call _c7o4T(R1) args: 0, res: 0, upd: 0;
       c7o4V: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c7o4T() //  [R1]
         { []
         }
     {offset
       c7o4T: // global
           _s7nd6::I64 = I64[Sp + 16];
           _s7nd7::I64 = I64[Sp + 8];
           _c7o8Z::P64 = R1 & 7;
           if (_c7o8Z::P64 < 3) goto u7o9v; else goto u7o9w;
       u7o9v: // global
           if (_c7o8Z::P64 < 2) goto c7o52; else goto c7o5m;
       c7o52: // global
           I64[Sp] = block_c7o4Z_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u7oaZ; else goto c7o53;
       u7oaZ: // global
           call _c7o4Z(R1) args: 0, res: 0, upd: 0;
       c7o53: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7o5m: // global
           Hp = Hp + 16;
           _s7nd8::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7o61; else goto c7o5q;
       c7o5q: // global
           if (_s7nd6::I64 == I64[_s7nd8::P64 + 30]) goto c7o5D; else goto u7o9N;
       c7o5D: // global
           if (_s7nd7::I64 == I64[_s7nd8::P64 + 38]) goto c7o5C; else goto u7o9O;
       c7o5C: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 32;
           goto u7ob8;
       u7o9O: // global
           Sp = Sp + 48;
           goto u7ob7;
       u7o9N: // global
           Sp = Sp + 48;
           goto u7ob7;
       u7o9w: // global
           if (_c7o8Z::P64 < 4) goto c7o5E; else goto c7o5W;
       c7o5E: // global
           Hp = Hp + 16;
           _s7nd8::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7o61; else goto c7o5I;
       c7o5I: // global
           if (_s7nd6::I64 == I64[_s7nd8::P64 + 29]) goto c7o5V; else goto u7o9Q;
       c7o5V: // global
           if (_s7nd7::I64 == I64[_s7nd8::P64 + 37]) goto c7o5U; else goto u7o9R;
       c7o5U: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 32;
           goto u7ob8;
       u7o9R: // global
           Sp = Sp + 48;
           goto u7ob7;
       u7o9Q: // global
           Sp = Sp + 48;
           goto u7ob7;
       c7o5W: // global
           Hp = Hp + 16;
           _s7nd8::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7o61; else goto c7o60;
       c7o61: // global
           HpAlloc = 16;
           R1 = _s7nd8::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7o60: // global
           if (_s7nd6::I64 == I64[_s7nd8::P64 + 20]) goto c7o6d; else goto u7o9T;
       c7o6d: // global
           if (_s7nd7::I64 == I64[_s7nd8::P64 + 28]) goto c7o6c; else goto u7o9U;
       c7o6c: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 32;
           goto u7ob8;
       u7ob8: // global
           call _s7nbC() args: 0, res: 0, upd: 0;
       u7o9U: // global
           Sp = Sp + 48;
           goto u7ob7;
       u7o9T: // global
           Sp = Sp + 48;
           goto u7ob7;
       u7ob7: // global
           call _c7o81() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7o4T_info" {
     block_c7o4T_info:
         const _c7o4T;
         const 453;
         const 4294967326;
         const S7nhj_srt+64;
 },
 _c7o4Z() //  [R1]
         { []
         }
     {offset
       c7o4Z: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7o59; else goto c7o58;
       c7o59: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7o58: // global
           if (I64[Sp + 16] == I64[R1 + 7]) goto c7o5l; else goto u7o9K;
       c7o5l: // global
           if (I64[Sp + 8] == I64[R1 + 15]) goto c7o5k; else goto u7o9L;
       c7o5k: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 32;
           call _s7nbC() args: 0, res: 0, upd: 0;
       u7o9L: // global
           Sp = Sp + 48;
           goto u7oba;
       u7o9K: // global
           Sp = Sp + 48;
           goto u7oba;
       u7oba: // global
           call _c7o81() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7o4Z_info" {
     block_c7o4Z_info:
         const _c7o4Z;
         const 453;
         const 4294967326;
         const S7nhj_srt+64;
 },
 _c7o6E() //  [R1]
         { []
         }
     {offset
       c7o6E: // global
           _c7o8K::P64 = R1 & 7;
           if (_c7o8K::P64 < 3) goto u7o9x; else goto c7o8p;
       u7o9x: // global
           if (_c7o8K::P64 < 2) goto c7o8c; else goto c7o8l;
       c7o8c: // global
           I64[Sp] = block_c7o89_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u7obd; else goto c7o8d;
       u7obd: // global
           call _c7o89(R1) args: 0, res: 0, upd: 0;
       c7o8d: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7o8l: // global
           I64[Sp] = I64[R1 + 30];
           I64[Sp - 8] = I64[R1 + 38];
           Sp = Sp - 8;
           goto u7obf;
       c7o8p: // global
           I64[Sp] = I64[R1 + 29];
           I64[Sp - 8] = I64[R1 + 37];
           Sp = Sp - 8;
           goto u7obf;
       u7obf: // global
           call _s7ndV() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7o6E_info" {
     block_c7o6E_info:
         const _c7o6E;
         const 3;
         const 4294967326;
         const S7nhj_srt+64;
 },
 _c7o89() //  [R1]
         { []
         }
     {offset
       c7o89: // global
           I64[Sp - 8] = I64[R1 + 15];
           I64[Sp] = I64[R1 + 7];
           Sp = Sp - 8;
           call _s7ndV() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7o89_info" {
     block_c7o89_info:
         const _c7o89;
         const 3;
         const 4294967326;
         const S7nhj_srt+64;
 },
 _s7ndV() //  []
         { []
         }
     {offset
       s7ndV: // global
           I64[Sp - 8] = block_c7o6J_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7obz; else goto c7o6L;
       u7obz: // global
           call _c7o6J(R1) args: 0, res: 0, upd: 0;
       c7o6L: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c7o6J() //  [R1]
         { []
         }
     {offset
       c7o6J: // global
           _s7ndW::I64 = I64[Sp + 16];
           _s7ndX::I64 = I64[Sp + 8];
           _c7o8L::P64 = R1 & 7;
           if (_c7o8L::P64 < 3) goto u7o9y; else goto u7o9z;
       u7o9y: // global
           if (_c7o8L::P64 < 2) goto c7o6S; else goto c7o7c;
       c7o6S: // global
           I64[Sp] = block_c7o6P_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u7obg; else goto c7o6T;
       u7obg: // global
           call _c7o6P(R1) args: 0, res: 0, upd: 0;
       c7o6T: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7o7c: // global
           Hp = Hp + 16;
           _s7ndY::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7o7R; else goto c7o7g;
       c7o7g: // global
           if (_s7ndW::I64 == I64[_s7ndY::P64 + 30]) goto c7o7t; else goto u7oa2;
       c7o7t: // global
           if (_s7ndX::I64 == I64[_s7ndY::P64 + 38]) goto c7o7s; else goto u7oa3;
       c7o7s: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 32;
           goto u7obp;
       u7oa3: // global
           Sp = Sp + 48;
           goto u7obo;
       u7oa2: // global
           Sp = Sp + 48;
           goto u7obo;
       u7o9z: // global
           if (_c7o8L::P64 < 4) goto c7o7u; else goto c7o7M;
       c7o7u: // global
           Hp = Hp + 16;
           _s7ndY::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7o7R; else goto c7o7y;
       c7o7y: // global
           if (_s7ndW::I64 == I64[_s7ndY::P64 + 29]) goto c7o7L; else goto u7oa5;
       c7o7L: // global
           if (_s7ndX::I64 == I64[_s7ndY::P64 + 37]) goto c7o7K; else goto u7oa6;
       c7o7K: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 32;
           goto u7obp;
       u7oa6: // global
           Sp = Sp + 48;
           goto u7obo;
       u7oa5: // global
           Sp = Sp + 48;
           goto u7obo;
       c7o7M: // global
           Hp = Hp + 16;
           _s7ndY::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7o7R; else goto c7o7Q;
       c7o7R: // global
           HpAlloc = 16;
           R1 = _s7ndY::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7o7Q: // global
           if (_s7ndW::I64 == I64[_s7ndY::P64 + 20]) goto c7o83; else goto u7oa8;
       c7o83: // global
           if (_s7ndX::I64 == I64[_s7ndY::P64 + 28]) goto c7o82; else goto u7oa9;
       c7o82: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 32;
           goto u7obp;
       u7obp: // global
           call _s7nbC() args: 0, res: 0, upd: 0;
       u7oa9: // global
           Sp = Sp + 48;
           goto u7obo;
       u7oa8: // global
           Sp = Sp + 48;
           goto u7obo;
       u7obo: // global
           call _c7o81() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7o6J_info" {
     block_c7o6J_info:
         const _c7o6J;
         const 453;
         const 4294967326;
         const S7nhj_srt+64;
 },
 _c7o6P() //  [R1]
         { []
         }
     {offset
       c7o6P: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7o6Z; else goto c7o6Y;
       c7o6Z: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7o6Y: // global
           if (I64[Sp + 16] == I64[R1 + 7]) goto c7o7b; else goto u7o9Z;
       c7o7b: // global
           if (I64[Sp + 8] == I64[R1 + 15]) goto c7o7a; else goto u7oa0;
       c7o7a: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 32;
           call _s7nbC() args: 0, res: 0, upd: 0;
       u7oa0: // global
           Sp = Sp + 48;
           goto u7obr;
       u7o9Z: // global
           Sp = Sp + 48;
           goto u7obr;
       u7obr: // global
           call _c7o81() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7o6P_info" {
     block_c7o6P_info:
         const _c7o6P;
         const 453;
         const 4294967326;
         const S7nhj_srt+64;
 },
 _c7o81() //  []
         { []
         }
     {offset
       c7o81: // global
           Hp = Hp - 16;
           R1 = GHC.Base.Nothing_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7o8s() //  [R1]
         { []
         }
     {offset
       c7o8s: // global
           if (R1 & 7 == 1) goto u7oab; else goto c7o8B;
       u7oab: // global
           Sp = Sp + 24;
           call _c7o8A() args: 0, res: 0, upd: 0;
       c7o8B: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7o8G; else goto c7o8F;
       c7o8G: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7o8F: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 8;
           call _s7nbC() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7o8s_info" {
     block_c7o8s_info:
         const _c7o8s;
         const 2;
         const 4294967326;
         const S7nhj_srt+64;
 },
 _s7nbC() //  []
         { []
         }
     {offset
       s7nbC: // global
           I64[Sp - 8] = block_c7o1i_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7obw; else goto c7o1k;
       u7obw: // global
           call _c7o1i(R1) args: 0, res: 0, upd: 0;
       c7o1k: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c7o1i() //  [R1]
         { []
         }
     {offset
       c7o1i: // global
           if (R1 & 7 == 4) goto c7o3b; else goto u7oad;
       c7o3b: // global
           I64[Sp] = block_c7o1v_info;
           _s7nbI::P64 = P64[R1 + 12];
           R1 = P64[R1 + 4];
           P64[Sp + 16] = _s7nbI::P64;
           if (R1 & 7 != 0) goto u7oaw; else goto c7o3c;
       u7oaw: // global
           call _c7o1v(R1) args: 0, res: 0, upd: 0;
       c7o3c: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       u7oad: // global
           Sp = Sp + 24;
           call _c7o8A() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7o1i_info" {
     block_c7o1i_info:
         const _c7o1i;
         const 130;
         const 4294967326;
         const S7nhj_srt+64;
 },
 _c7o1v() //  [R1]
         { []
         }
     {offset
       c7o1v: // global
           _c7o9l::P64 = R1 & 7;
           if (_c7o9l::P64 < 3) goto u7o9p; else goto u7o9q;
       u7o9p: // global
           if (_c7o9l::P64 < 2) goto c7o3j; else goto c7o3s;
       c7o3j: // global
           I64[Sp] = block_c7o3g_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u7oay; else goto c7o3k;
       u7oay: // global
           call _c7o3g(R1) args: 0, res: 0, upd: 0;
       c7o3k: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7o3s: // global
           I64[Sp] = I64[R1 + 30];
           I64[Sp - 8] = I64[R1 + 38];
           Sp = Sp - 8;
           goto u7oaB;
       u7o9q: // global
           if (_c7o9l::P64 < 4) goto c7o3w; else goto c7o3A;
       c7o3w: // global
           I64[Sp] = I64[R1 + 29];
           I64[Sp - 8] = I64[R1 + 37];
           Sp = Sp - 8;
           goto u7oaB;
       c7o3A: // global
           I64[Sp] = I64[R1 + 20];
           I64[Sp - 8] = I64[R1 + 28];
           Sp = Sp - 8;
           goto u7oaB;
       u7oaB: // global
           call _s7nbJ() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7o1v_info" {
     block_c7o1v_info:
         const _c7o1v;
         const 2;
         const 4294967326;
         const S7nhj_srt+64;
 },
 _c7o3g() //  [R1]
         { []
         }
     {offset
       c7o3g: // global
           I64[Sp - 8] = I64[R1 + 15];
           I64[Sp] = I64[R1 + 7];
           Sp = Sp - 8;
           call _s7nbJ() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7o3g_info" {
     block_c7o3g_info:
         const _c7o3g;
         const 2;
         const 4294967326;
         const S7nhj_srt+64;
 },
 _s7nbJ() //  []
         { []
         }
     {offset
       s7nbJ: // global
           I64[Sp - 8] = block_c7o1A_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7obx; else goto c7o1C;
       u7obx: // global
           call _c7o1A(R1) args: 0, res: 0, upd: 0;
       c7o1C: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c7o1A() //  [R1]
         { []
         }
     {offset
       c7o1A: // global
           _s7nbI::P64 = P64[Sp + 32];
           _s7nbK::I64 = I64[Sp + 16];
           _s7nbL::I64 = I64[Sp + 8];
           _c7o9m::P64 = R1 & 7;
           if (_c7o9m::P64 < 3) goto u7o9r; else goto u7o9s;
       u7o9r: // global
           if (_c7o9m::P64 < 2) goto c7o1J; else goto c7o27;
       c7o1J: // global
           I64[Sp] = block_c7o1G_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u7oaC; else goto c7o1K;
       u7oaC: // global
           call _c7o1G(R1) args: 0, res: 0, upd: 0;
       c7o1K: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7o27: // global
           Hp = Hp + 32;
           _s7nbM::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7o2U; else goto c7o2b;
       c7o2b: // global
           if (_s7nbK::I64 == I64[_s7nbM::P64 + 30]) goto c7o2s; else goto u7oak;
       c7o2s: // global
           if (_s7nbL::I64 == I64[_s7nbM::P64 + 38]) goto c7o2r; else goto u7oal;
       c7o2r: // global
           I64[Hp - 24] = Data.Typeable.Internal.SomeTypeRep_con_info;
           P64[Hp - 16] = _s7nbI::P64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 6;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u7oal: // global
           Sp = Sp + 40;
           goto u7oaI;
       u7oak: // global
           Sp = Sp + 40;
           goto u7oaI;
       u7o9s: // global
           if (_c7o9m::P64 < 4) goto c7o2t; else goto c7o2P;
       c7o2t: // global
           Hp = Hp + 32;
           _s7nbM::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7o2U; else goto c7o2x;
       c7o2x: // global
           if (_s7nbK::I64 == I64[_s7nbM::P64 + 29]) goto c7o2O; else goto u7oam;
       c7o2O: // global
           if (_s7nbL::I64 == I64[_s7nbM::P64 + 37]) goto c7o2N; else goto u7oan;
       c7o2N: // global
           I64[Hp - 24] = Data.Typeable.Internal.SomeTypeRep_con_info;
           P64[Hp - 16] = _s7nbI::P64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 6;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u7oan: // global
           Sp = Sp + 40;
           goto u7oaI;
       u7oam: // global
           Sp = Sp + 40;
           goto u7oaI;
       c7o2P: // global
           Hp = Hp + 32;
           _s7nbM::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7o2U; else goto c7o2T;
       c7o2U: // global
           HpAlloc = 32;
           R1 = _s7nbM::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7o2T: // global
           if (_s7nbK::I64 == I64[_s7nbM::P64 + 20]) goto c7o3a; else goto u7oao;
       c7o3a: // global
           if (_s7nbL::I64 == I64[_s7nbM::P64 + 28]) goto c7o39; else goto u7oap;
       c7o39: // global
           I64[Hp - 24] = Data.Typeable.Internal.SomeTypeRep_con_info;
           P64[Hp - 16] = _s7nbI::P64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 6;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u7oap: // global
           Sp = Sp + 40;
           goto u7oaI;
       u7oao: // global
           Sp = Sp + 40;
           goto u7oaI;
       u7oaI: // global
           call _c7o34() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7o1A_info" {
     block_c7o1A_info:
         const _c7o1A;
         const 452;
         const 4294967326;
         const S7nhj_srt+64;
 },
 _c7o1G() //  [R1]
         { []
         }
     {offset
       c7o1G: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c7o1Q; else goto c7o1P;
       c7o1Q: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7o1P: // global
           if (I64[Sp + 16] == I64[R1 + 7]) goto c7o26; else goto u7oai;
       c7o26: // global
           if (I64[Sp + 8] == I64[R1 + 15]) goto c7o25; else goto u7oaj;
       c7o25: // global
           I64[Hp - 24] = Data.Typeable.Internal.SomeTypeRep_con_info;
           P64[Hp - 16] = P64[Sp + 32];
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 6;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u7oaj: // global
           Sp = Sp + 40;
           goto u7oaK;
       u7oai: // global
           Sp = Sp + 40;
           goto u7oaK;
       u7oaK: // global
           call _c7o34() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7o1G_info" {
     block_c7o1G_info:
         const _c7o1G;
         const 452;
         const 30;
 },
 _c7o34() //  []
         { []
         }
     {offset
       c7o34: // global
           Hp = Hp - 32;
           R1 = GHC.Base.Nothing_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7o8A() //  []
         { []
         }
     {offset
       c7o8A: // global
           R1 = GHC.Base.Nothing_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.470869405 UTC

[section ""cstring" . Data.Typeable.mkFunTy16_bytes" {
     Data.Typeable.mkFunTy16_bytes:
         I8[] [101,114,114,111,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.473191936 UTC

[section ""data" . Data.Typeable.mkFunTy15_closure" {
     Data.Typeable.mkFunTy15_closure:
         const Data.Typeable.mkFunTy15_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Typeable.mkFunTy15_entry() //  [R1]
         { []
         }
     {offset
       c7oed: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7oee; else goto c7oef;
       c7oee: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7oef: // global
           (_c7oea::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7oea::I64 == 0) goto c7oec; else goto c7oeb;
       c7oec: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7oeb: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7oea::I64;
           R2 = Data.Typeable.mkFunTy16_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Typeable.mkFunTy15_info" {
     Data.Typeable.mkFunTy15_info:
         const Data.Typeable.mkFunTy15_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.476570169 UTC

[section ""cstring" . Data.Typeable.$trModule4_bytes" {
     Data.Typeable.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.47890522 UTC

[section ""data" . Data.Typeable.mkFunTy14_closure" {
     Data.Typeable.mkFunTy14_closure:
         const Data.Typeable.mkFunTy14_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Typeable.mkFunTy14_entry() //  [R1]
         { []
         }
     {offset
       c7oeu: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7oev; else goto c7oew;
       c7oev: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7oew: // global
           (_c7oer::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7oer::I64 == 0) goto c7oet; else goto c7oes;
       c7oet: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7oes: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7oer::I64;
           R2 = Data.Typeable.$trModule4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Typeable.mkFunTy14_info" {
     Data.Typeable.mkFunTy14_info:
         const Data.Typeable.mkFunTy14_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.482411508 UTC

[section ""cstring" . Data.Typeable.$trModule2_bytes" {
     Data.Typeable.$trModule2_bytes:
         I8[] [68,97,116,97,46,84,121,112,101,97,98,108,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.484547422 UTC

[section ""data" . Data.Typeable.mkFunTy13_closure" {
     Data.Typeable.mkFunTy13_closure:
         const Data.Typeable.mkFunTy13_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Typeable.mkFunTy13_entry() //  [R1]
         { []
         }
     {offset
       c7oeL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7oeM; else goto c7oeN;
       c7oeM: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7oeN: // global
           (_c7oeI::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7oeI::I64 == 0) goto c7oeK; else goto c7oeJ;
       c7oeK: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7oeJ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7oeI::I64;
           R2 = Data.Typeable.$trModule2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Typeable.mkFunTy13_info" {
     Data.Typeable.mkFunTy13_info:
         const Data.Typeable.mkFunTy13_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.488092268 UTC

[section ""cstring" . Data.Typeable.mkFunTy12_bytes" {
     Data.Typeable.mkFunTy12_bytes:
         I8[] [46,47,68,97,116,97,47,84,121,112,101,97,98,108,101,46,104,115]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.491441315 UTC

[section ""data" . Data.Typeable.mkFunTy11_closure" {
     Data.Typeable.mkFunTy11_closure:
         const Data.Typeable.mkFunTy11_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Typeable.mkFunTy11_entry() //  [R1]
         { []
         }
     {offset
       c7of2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7of3; else goto c7of4;
       c7of3: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7of4: // global
           (_c7oeZ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7oeZ::I64 == 0) goto c7of1; else goto c7of0;
       c7of1: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7of0: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7oeZ::I64;
           R2 = Data.Typeable.mkFunTy12_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Typeable.mkFunTy11_info" {
     Data.Typeable.mkFunTy11_info:
         const Data.Typeable.mkFunTy11_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.495051143 UTC

[section ""data" . Data.Typeable.mkFunTy10_closure" {
     Data.Typeable.mkFunTy10_closure:
         const GHC.Types.I#_con_info;
         const 171;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.496654037 UTC

[section ""data" . Data.Typeable.mkFunTy9_closure" {
     Data.Typeable.mkFunTy9_closure:
         const GHC.Types.I#_con_info;
         const 5;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.498299007 UTC

[section ""data" . Data.Typeable.mkFunTy8_closure" {
     Data.Typeable.mkFunTy8_closure:
         const GHC.Types.I#_con_info;
         const 172;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.499874844 UTC

[section ""data" . Data.Typeable.mkFunTy7_closure" {
     Data.Typeable.mkFunTy7_closure:
         const GHC.Types.I#_con_info;
         const 55;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.501966896 UTC

[section ""data" . Data.Typeable.mkFunTy6_closure" {
     Data.Typeable.mkFunTy6_closure:
         const GHC.Stack.Types.SrcLoc_con_info;
         const Data.Typeable.mkFunTy14_closure;
         const Data.Typeable.mkFunTy13_closure;
         const Data.Typeable.mkFunTy11_closure;
         const Data.Typeable.mkFunTy10_closure+1;
         const Data.Typeable.mkFunTy9_closure+1;
         const Data.Typeable.mkFunTy8_closure+1;
         const Data.Typeable.mkFunTy7_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.503745796 UTC

[section ""data" . Data.Typeable.mkFunTy5_closure" {
     Data.Typeable.mkFunTy5_closure:
         const GHC.Stack.Types.PushCallStack_con_info;
         const Data.Typeable.mkFunTy15_closure;
         const Data.Typeable.mkFunTy6_closure+1;
         const GHC.Stack.Types.EmptyCallStack_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.50550228 UTC

[section ""cstring" . Data.Typeable.mkFunTy4_bytes" {
     Data.Typeable.mkFunTy4_bytes:
         I8[] [109,107,70,117,110,84,121,58,32,65,116,116,101,109,112,116,101,100,32,116,111,32,99,111,110,115,116,114,117,99,116,32,102,117,110,99,116,105,111,110,32,116,121,112,101,32,102,114,111,109,32,110,111,110,45,108,105,102,116,101,100,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.507136897 UTC

[section ""cstring" . Data.Typeable.mkFunTy3_bytes" {
     Data.Typeable.mkFunTy3_bytes:
         I8[] [116,121,112,101,58,32,97,114,103,61]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.508702677 UTC

[section ""cstring" . Data.Typeable.mkFunTy2_bytes" {
     Data.Typeable.mkFunTy2_bytes:
         I8[] [44,32,114,101,115,61]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.521766944 UTC

[section ""data" . Data.Typeable.mkFunTy_closure" {
     Data.Typeable.mkFunTy_closure:
         const Data.Typeable.mkFunTy_info;
         const 0;
 },
 sat_s7neV_entry() //  [R1]
         { []
         }
     {offset
       c7ofU: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c7ofV; else goto c7ofW;
       c7ofV: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7ofW: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = Data.Typeable.Internal.$fShowSomeTypeRep2_closure;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = GHC.Types.[]_closure+1;
           Sp = Sp - 32;
           call Data.Typeable.Internal.showTypeable_entry(R3,
                                                          R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7neV_info" {
     sat_s7neV_info:
         const sat_s7neV_entry;
         const 1;
         const 4294967312;
         const S7nhj_srt+96;
 },
 sat_s7neW_entry() //  [R1]
         { []
         }
     {offset
       c7ofX: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7og1; else goto c7og0;
       c7og1: // global
           HpAlloc = 24;
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7og0: // global
           _s7neR::P64 = P64[R1 + 16];
           I64[Hp - 16] = sat_s7neV_info;
           P64[Hp] = _s7neR::P64;
           R3 = Hp - 16;
           R2 = Data.Typeable.mkFunTy2_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s7neW_info" {
     sat_s7neW_info:
         const sat_s7neW_entry;
         const 1;
         const 4294967312;
         const S7nhj_srt+96;
 },
 sat_s7neX_entry() //  [R1]
         { []
         }
     {offset
       c7og4: // global
           _s7neX::P64 = R1;
           if ((Sp + -48) < SpLim) (likely: False) goto c7og5; else goto c7og6;
       c7og6: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7og8; else goto c7og7;
       c7og8: // global
           HpAlloc = 24;
           goto c7og5;
       c7og5: // global
           R1 = _s7neX::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7og7: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s7neX::P64;
           _s7neP::P64 = P64[_s7neX::P64 + 16];
           _s7neR::P64 = P64[_s7neX::P64 + 24];
           I64[Hp - 16] = sat_s7neW_info;
           P64[Hp] = _s7neR::P64;
           I64[Sp - 32] = block_c7og2_info;
           R3 = _s7neP::P64;
           R2 = Data.Typeable.Internal.$fShowSomeTypeRep2_closure;
           I64[Sp - 48] = stg_ap_p_info;
           P64[Sp - 40] = GHC.Types.[]_closure+1;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 48;
           call Data.Typeable.Internal.showTypeable_entry(R3,
                                                          R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7neX_info" {
     sat_s7neX_info:
         const sat_s7neX_entry;
         const 2;
         const 4294967314;
         const S7nhj_srt+96;
 },
 _c7og2() //  [R1]
         { []
         }
     {offset
       c7og2: // global
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7og2_info" {
     block_c7og2_info:
         const _c7og2;
         const 1;
         const 30;
 },
 sat_s7neY_entry() //  [R1]
         { []
         }
     {offset
       c7ogc: // global
           _s7neY::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c7ogd; else goto c7oge;
       c7oge: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c7ogg; else goto c7ogf;
       c7ogg: // global
           HpAlloc = 32;
           goto c7ogd;
       c7ogd: // global
           R1 = _s7neY::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7ogf: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s7neY::P64;
           _s7neP::P64 = P64[_s7neY::P64 + 16];
           _s7neR::P64 = P64[_s7neY::P64 + 24];
           I64[Hp - 24] = sat_s7neX_info;
           P64[Hp - 8] = _s7neP::P64;
           P64[Hp] = _s7neR::P64;
           R3 = Hp - 24;
           R2 = Data.Typeable.mkFunTy3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7neY_info" {
     sat_s7neY_info:
         const sat_s7neY_entry;
         const 2;
         const 4294967314;
         const S7nhj_srt+96;
 },
 sat_s7nfx_entry() //  [R1]
         { []
         }
     {offset
       c7ogE: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7ogF; else goto c7ogG;
       c7ogF: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7ogG: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c7ogv_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u7oh4; else goto c7ogw;
       u7oh4: // global
           call _c7ogv(R1) args: 0, res: 0, upd: 0;
       c7ogw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7nfx_info" {
     sat_s7nfx_info:
         const sat_s7nfx_entry;
         const 1;
         const 4294967312;
         const S7nhj_srt+64;
 },
 _c7ogv() //  [R1]
         { []
         }
     {offset
       c7ogv: // global
           _c7ogD::P64 = R1 & 7;
           if (_c7ogD::P64 < 3) goto u7oh2; else goto u7oh3;
       u7oh2: // global
           if (_c7ogD::P64 < 2) goto c7ogz; else goto c7ogA;
       c7ogz: // global
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
       c7ogA: // global
           Hp = Hp + 24;
           _s7nfi::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7oh1; else goto c7ogO;
       c7ogO: // global
           _s7nfj::I64 = I64[_s7nfi::P64 + 30];
           _s7nfk::I64 = I64[_s7nfi::P64 + 38];
           I64[Hp - 16] = GHC.Fingerprint.Type.Fingerprint_con_info;
           I64[Hp - 8] = _s7nfj::I64;
           I64[Hp] = _s7nfk::I64;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       u7oh3: // global
           if (_c7ogD::P64 < 4) goto c7ogB; else goto c7ogC;
       c7ogB: // global
           Hp = Hp + 24;
           _s7nfi::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7oh1; else goto c7ogU;
       c7ogU: // global
           _s7nfo::I64 = I64[_s7nfi::P64 + 29];
           _s7nfp::I64 = I64[_s7nfi::P64 + 37];
           I64[Hp - 16] = GHC.Fingerprint.Type.Fingerprint_con_info;
           I64[Hp - 8] = _s7nfo::I64;
           I64[Hp] = _s7nfp::I64;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c7ogC: // global
           Hp = Hp + 24;
           _s7nfi::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7oh1; else goto c7oh0;
       c7oh1: // global
           HpAlloc = 24;
           R1 = _s7nfi::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c7oh0: // global
           _s7nft::I64 = I64[_s7nfi::P64 + 20];
           _s7nfu::I64 = I64[_s7nfi::P64 + 28];
           I64[Hp - 16] = GHC.Fingerprint.Type.Fingerprint_con_info;
           I64[Hp - 8] = _s7nft::I64;
           I64[Hp] = _s7nfu::I64;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7ogv_info" {
     block_c7ogv_info:
         const _c7ogv;
         const 0;
         const 4294967326;
         const S7nhj_srt+64;
 },
 sat_s7nfh_entry() //  [R1]
         { []
         }
     {offset
       c7ohj: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7ohk; else goto c7ohl;
       c7ohk: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7ohl: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c7oha_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u7ohJ; else goto c7ohb;
       u7ohJ: // global
           call _c7oha(R1) args: 0, res: 0, upd: 0;
       c7ohb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7nfh_info" {
     sat_s7nfh_info:
         const sat_s7nfh_entry;
         const 1;
         const 4294967312;
         const S7nhj_srt+64;
 },
 _c7oha() //  [R1]
         { []
         }
     {offset
       c7oha: // global
           _c7ohi::P64 = R1 & 7;
           if (_c7ohi::P64 < 3) goto u7ohH; else goto u7ohI;
       u7ohH: // global
           if (_c7ohi::P64 < 2) goto c7ohe; else goto c7ohf;
       c7ohe: // global
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
       c7ohf: // global
           Hp = Hp + 24;
           _s7nf2::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7ohG; else goto c7oht;
       c7oht: // global
           _s7nf3::I64 = I64[_s7nf2::P64 + 30];
           _s7nf4::I64 = I64[_s7nf2::P64 + 38];
           I64[Hp - 16] = GHC.Fingerprint.Type.Fingerprint_con_info;
           I64[Hp - 8] = _s7nf3::I64;
           I64[Hp] = _s7nf4::I64;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       u7ohI: // global
           if (_c7ohi::P64 < 4) goto c7ohg; else goto c7ohh;
       c7ohg: // global
           Hp = Hp + 24;
           _s7nf2::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7ohG; else goto c7ohz;
       c7ohz: // global
           _s7nf8::I64 = I64[_s7nf2::P64 + 29];
           _s7nf9::I64 = I64[_s7nf2::P64 + 37];
           I64[Hp - 16] = GHC.Fingerprint.Type.Fingerprint_con_info;
           I64[Hp - 8] = _s7nf8::I64;
           I64[Hp] = _s7nf9::I64;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c7ohh: // global
           Hp = Hp + 24;
           _s7nf2::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7ohG; else goto c7ohF;
       c7ohG: // global
           HpAlloc = 24;
           R1 = _s7nf2::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c7ohF: // global
           _s7nfd::I64 = I64[_s7nf2::P64 + 20];
           _s7nfe::I64 = I64[_s7nf2::P64 + 28];
           I64[Hp - 16] = GHC.Fingerprint.Type.Fingerprint_con_info;
           I64[Hp - 8] = _s7nfd::I64;
           I64[Hp] = _s7nfe::I64;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7oha_info" {
     block_c7oha_info:
         const _c7oha;
         const 0;
         const 4294967326;
         const S7nhj_srt+64;
 },
 Data.Typeable.mkFunTy_entry() //  [R2, R3]
         { []
         }
     {offset
       c7ohK: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7ohL; else goto c7ohM;
       c7ohL: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Typeable.mkFunTy_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7ohM: // global
           I64[Sp - 16] = block_c7ofp_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7okz; else goto c7ofq;
       u7okz: // global
           call _c7ofp(R1) args: 0, res: 0, upd: 0;
       c7ofq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.mkFunTy_info" {
     Data.Typeable.mkFunTy_info:
         const Data.Typeable.mkFunTy_entry;
         const 0;
         const 557456690249742;
         const 8589934607;
         const S7nhj_srt;
 },
 _c7ofp() //  [R1]
         { []
         }
     {offset
       c7ofp: // global
           I64[Sp] = block_c7ofu_info;
           _s7neP::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s7neP::P64;
           if (R1 & 7 != 0) goto u7okx; else goto c7ofv;
       u7okx: // global
           call _c7ofu(R1) args: 0, res: 0, upd: 0;
       c7ofv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7ofp_info" {
     block_c7ofp_info:
         const _c7ofp;
         const 1;
         const 416719201894430;
         const S7nhj_srt;
 },
 _c7ofu() //  [R1]
         { []
         }
     {offset
       c7ofu: // global
           I64[Sp - 8] = block_c7ohO_info;
           _s7neR::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp] = _s7neR::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7oky; else goto c7oje;
       u7oky: // global
           call _c7ohO(R1) args: 0, res: 0, upd: 0;
       c7oje: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7ofu_info" {
     block_c7ofu_info:
         const _c7ofu;
         const 1;
         const 416719201894430;
         const S7nhj_srt;
 },
 _c7ohO() //  [R1]
         { []
         }
     {offset
       c7ohO: // global
           _c7okf::P64 = R1 & 7;
           if (_c7okf::P64 < 3) goto u7okp; else goto u7okq;
       u7okp: // global
           if (_c7okf::P64 < 2) goto c7ojl; else goto c7ojA;
       c7ojl: // global
           I64[Sp] = block_c7oji_info;
           R3 = Data.Typeable.mkFunTy1_closure;
           R2 = Data.Typeable.Internal.$WTrType_closure;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
       c7ojA: // global
           I64[Sp] = block_c7ojy_info;
           R3 = Data.Typeable.mkFunTy1_closure;
           R2 = P64[R1 + 22];
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
       u7okq: // global
           if (_c7okf::P64 < 4) goto c7ojP; else goto c7ok4;
       c7ojP: // global
           I64[Sp] = block_c7ojN_info;
           R3 = Data.Typeable.mkFunTy1_closure;
           R2 = P64[R1 + 21];
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
       c7ok4: // global
           I64[Sp] = block_c7ok2_info;
           R3 = Data.Typeable.mkFunTy1_closure;
           R2 = Data.Typeable.Internal.$mApp1_closure;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7ohO_info" {
     block_c7ohO_info:
         const _c7ohO;
         const 2;
         const 416719201894430;
         const S7nhj_srt;
 },
 _c7oji() //  [R1]
         { []
         }
     {offset
       c7oji: // global
           if (R1 & 7 == 1) goto u7okI; else goto u7okt;
       u7okI: // global
           call _c7ofC() args: 0, res: 0, upd: 0;
       u7okt: // global
           Sp = Sp + 8;
           call _s7nf0() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oji_info" {
     block_c7oji_info:
         const _c7oji;
         const 2;
         const 416719201894430;
         const S7nhj_srt;
 },
 _c7ojy() //  [R1]
         { []
         }
     {offset
       c7ojy: // global
           if (R1 & 7 == 1) goto u7okK; else goto u7oku;
       u7okK: // global
           call _c7ofC() args: 0, res: 0, upd: 0;
       u7oku: // global
           Sp = Sp + 8;
           call _s7nf0() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7ojy_info" {
     block_c7ojy_info:
         const _c7ojy;
         const 2;
         const 416719201894430;
         const S7nhj_srt;
 },
 _c7ojN() //  [R1]
         { []
         }
     {offset
       c7ojN: // global
           if (R1 & 7 == 1) goto u7okM; else goto u7okv;
       u7okM: // global
           call _c7ofC() args: 0, res: 0, upd: 0;
       u7okv: // global
           Sp = Sp + 8;
           call _s7nf0() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7ojN_info" {
     block_c7ojN_info:
         const _c7ojN;
         const 2;
         const 416719201894430;
         const S7nhj_srt;
 },
 _c7ok2() //  [R1]
         { []
         }
     {offset
       c7ok2: // global
           if (R1 & 7 == 1) goto u7okO; else goto u7okw;
       u7okO: // global
           call _c7ofC() args: 0, res: 0, upd: 0;
       u7okw: // global
           Sp = Sp + 8;
           call _s7nf0() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7ok2_info" {
     block_c7ok2_info:
         const _c7ok2;
         const 2;
         const 416719201894430;
         const S7nhj_srt;
 },
 _s7nf0() //  []
         { []
         }
     {offset
       s7nf0: // global
           I64[Sp - 8] = block_c7ohY_info;
           R1 = P64[Sp];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7okQ; else goto c7oid;
       u7okQ: // global
           call _c7ohY(R1) args: 0, res: 0, upd: 0;
       c7oid: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c7ohY() //  [R1]
         { []
         }
     {offset
       c7ohY: // global
           _c7okk::P64 = R1 & 7;
           if (_c7okk::P64 < 3) goto u7okr; else goto u7oks;
       u7okr: // global
           if (_c7okk::P64 < 2) goto c7oik; else goto c7oiz;
       c7oik: // global
           I64[Sp] = block_c7oih_info;
           R3 = Data.Typeable.mkFunTy1_closure;
           R2 = Data.Typeable.Internal.$WTrType_closure;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
       c7oiz: // global
           I64[Sp] = block_c7oix_info;
           R3 = Data.Typeable.mkFunTy1_closure;
           R2 = P64[R1 + 22];
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
       u7oks: // global
           if (_c7okk::P64 < 4) goto c7oiO; else goto c7oj3;
       c7oiO: // global
           I64[Sp] = block_c7oiM_info;
           R3 = Data.Typeable.mkFunTy1_closure;
           R2 = P64[R1 + 21];
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
       c7oj3: // global
           I64[Sp] = block_c7oj1_info;
           R3 = Data.Typeable.mkFunTy1_closure;
           R2 = Data.Typeable.Internal.$mApp1_closure;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7ohY_info" {
     block_c7ohY_info:
         const _c7ohY;
         const 2;
         const 416719201894430;
         const S7nhj_srt;
 },
 _c7oih() //  [R1]
         { []
         }
     {offset
       c7oih: // global
           if (R1 & 7 == 1) goto u7okA; else goto u7okB;
       u7okA: // global
           call _c7ofC() args: 0, res: 0, upd: 0;
       u7okB: // global
           call _c7ogp() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oih_info" {
     block_c7oih_info:
         const _c7oih;
         const 2;
         const 1584842932254;
         const S7nhj_srt+64;
 },
 _c7oix() //  [R1]
         { []
         }
     {offset
       c7oix: // global
           if (R1 & 7 == 1) goto u7okC; else goto u7okD;
       u7okC: // global
           call _c7ofC() args: 0, res: 0, upd: 0;
       u7okD: // global
           call _c7ogp() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oix_info" {
     block_c7oix_info:
         const _c7oix;
         const 2;
         const 1584842932254;
         const S7nhj_srt+64;
 },
 _c7oiM() //  [R1]
         { []
         }
     {offset
       c7oiM: // global
           if (R1 & 7 == 1) goto u7okE; else goto u7okF;
       u7okE: // global
           call _c7ofC() args: 0, res: 0, upd: 0;
       u7okF: // global
           call _c7ogp() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oiM_info" {
     block_c7oiM_info:
         const _c7oiM;
         const 2;
         const 1584842932254;
         const S7nhj_srt+64;
 },
 _c7oj1() //  [R1]
         { []
         }
     {offset
       c7oj1: // global
           if (R1 & 7 == 1) goto u7okG; else goto u7okH;
       u7okG: // global
           call _c7ofC() args: 0, res: 0, upd: 0;
       u7okH: // global
           call _c7ogp() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oj1_info" {
     block_c7oj1_info:
         const _c7oj1;
         const 2;
         const 1584842932254;
         const S7nhj_srt+64;
 },
 _c7ofC() //  []
         { []
         }
     {offset
       c7ofC: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c7ohT; else goto c7ohS;
       c7ohT: // global
           HpAlloc = 32;
           I64[Sp] = block_c7ofC_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c7ohS: // global
           I64[Hp - 24] = sat_s7neY_info;
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = P64[Sp + 8];
           I64[Sp + 16] = block_c7ohQ_info;
           R3 = Hp - 24;
           R2 = Data.Typeable.mkFunTy4_bytes;
           Sp = Sp + 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7ofC_info" {
     block_c7ofC_info:
         const _c7ofC;
         const 2;
         const 81604378654;
         const S7nhj_srt+96;
 },
 _c7ohQ() //  [R1]
         { []
         }
     {offset
       c7ohQ: // global
           R3 = R1;
           R2 = Data.Typeable.mkFunTy5_closure+2;
           Sp = Sp + 8;
           call GHC.Err.error_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7ohQ_info" {
     block_c7ohQ_info:
         const _c7ohQ;
         const 0;
         const 38654705694;
         const S7nhj_srt+104;
 },
 _c7ogp() //  []
         { []
         }
     {offset
       c7ogp: // global
           Hp = Hp + 96;
           if (Hp > HpLim) (likely: False) goto c7oi9; else goto c7oi8;
       c7oi9: // global
           HpAlloc = 96;
           I64[Sp] = block_c7ogp_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c7oi8: // global
           I64[Hp - 88] = sat_s7nfx_info;
           P64[Hp - 72] = P64[Sp + 8];
           I64[Hp - 64] = :_con_info;
           P64[Hp - 56] = Hp - 88;
           P64[Hp - 48] = GHC.Types.[]_closure+1;
           I64[Hp - 40] = sat_s7nfh_info;
           P64[Hp - 24] = P64[Sp + 16];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 62;
           I64[Sp] = block_c7oi1_info;
           R2 = Hp - 14;
           R1 = GHC.Fingerprint.fingerprintFingerprints_closure;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7ogp_info" {
     block_c7ogp_info:
         const _c7ogp;
         const 2;
         const 279172874270;
         const S7nhj_srt+64;
 },
 _c7oi1() //  [R1]
         { []
         }
     {offset
       c7oi1: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c7oic; else goto c7oib;
       c7oic: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7oib: // global
           _s7nfB::I64 = I64[R1 + 7];
           _s7nfC::I64 = I64[R1 + 15];
           I64[Hp - 48] = Data.Typeable.Internal.TrFun_con_info;
           P64[Hp - 40] = P64[Sp + 16];
           P64[Hp - 32] = P64[Sp + 8];
           I64[Hp - 24] = _s7nfB::I64;
           I64[Hp - 16] = _s7nfC::I64;
           I64[Hp - 8] = Data.Typeable.Internal.SomeTypeRep_con_info;
           P64[Hp] = Hp - 44;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7oi1_info" {
     block_c7oi1_info:
         const _c7oi1;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.570490147 UTC

[section ""data" . Data.Typeable.splitTyConApp_closure" {
     Data.Typeable.splitTyConApp_closure:
         const Data.Typeable.splitTyConApp_info;
         const 0;
 },
 Data.Typeable.splitTyConApp_entry() //  [R2]
         { []
         }
     {offset
       c7on7: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7ond; else goto c7one;
       c7ond: // global
           R2 = R2;
           R1 = Data.Typeable.splitTyConApp_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7one: // global
           I64[Sp - 8] = block_c7on4_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7onj; else goto c7on5;
       u7onj: // global
           call _c7on4(R1) args: 0, res: 0, upd: 0;
       c7on5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.splitTyConApp_info" {
     Data.Typeable.splitTyConApp_info:
         const Data.Typeable.splitTyConApp_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const S7nhj_srt+136;
 },
 _c7on4() //  [R1]
         { []
         }
     {offset
       c7on4: // global
           I64[Sp] = block_c7ona_info;
           R3 = P64[R1 + 7];
           R2 = GHC.Types.[]_closure+1;
           call Data.Typeable.Internal.$wgo_entry(R3,
                                                  R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7on4_info" {
     block_c7on4_info:
         const _c7on4;
         const 0;
         const 4294967326;
         const S7nhj_srt+136;
 },
 _c7ona() //  [R1, R2]
         { []
         }
     {offset
       c7ona: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7oni; else goto c7onh;
       c7oni: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c7onh: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7ona_info" {
     block_c7ona_info:
         const _c7ona;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.578714431 UTC

[section ""data" . Data.Typeable.typeRepArgs_closure" {
     Data.Typeable.typeRepArgs_closure:
         const Data.Typeable.typeRepArgs_info;
         const 0;
 },
 Data.Typeable.typeRepArgs_entry() //  [R2]
         { []
         }
     {offset
       c7onE: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7onI; else goto c7onJ;
       c7onI: // global
           R2 = R2;
           R1 = Data.Typeable.typeRepArgs_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7onJ: // global
           I64[Sp - 8] = block_c7onB_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7onN; else goto c7onC;
       u7onN: // global
           call _c7onB(R1) args: 0, res: 0, upd: 0;
       c7onC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeRepArgs_info" {
     Data.Typeable.typeRepArgs_info:
         const Data.Typeable.typeRepArgs_entry;
         const 0;
         const 21474836494;
         const 4294967301;
         const S7nhj_srt+136;
 },
 _c7onB() //  [R1]
         { []
         }
     {offset
       c7onB: // global
           I64[Sp] = block_c7onH_info;
           R3 = P64[R1 + 7];
           R2 = GHC.Types.[]_closure+1;
           call Data.Typeable.Internal.$wgo_entry(R3,
                                                  R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7onB_info" {
     block_c7onB_info:
         const _c7onB;
         const 0;
         const 4294967326;
         const S7nhj_srt+136;
 },
 _c7onH() //  [R2]
         { []
         }
     {offset
       c7onH: // global
           R1 = R2 & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7onH_info" {
     block_c7onH_info:
         const _c7onH;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.585340052 UTC

[section ""data" . Data.Typeable.typeRepTyCon_closure" {
     Data.Typeable.typeRepTyCon_closure:
         const Data.Typeable.typeRepTyCon_info;
         const 0;
 },
 Data.Typeable.typeRepTyCon_entry() //  [R2]
         { []
         }
     {offset
       c7oo6: // global
           R2 = R2;
           call Data.Typeable.Internal.someTypeRepTyCon_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeRepTyCon_info" {
     Data.Typeable.typeRepTyCon_info:
         const Data.Typeable.typeRepTyCon_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const S7nhj_srt+160;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.588569103 UTC

[section ""data" . Data.Typeable.typeRepFingerprint_closure" {
     Data.Typeable.typeRepFingerprint_closure:
         const Data.Typeable.typeRepFingerprint_info;
         const 0;
 },
 Data.Typeable.typeRepFingerprint_entry() //  [R2]
         { []
         }
     {offset
       c7ooh: // global
           R2 = R2;
           call Data.Typeable.Internal.someTypeRepFingerprint_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeRepFingerprint_info" {
     Data.Typeable.typeRepFingerprint_info:
         const Data.Typeable.typeRepFingerprint_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const S7nhj_srt+168;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.592134358 UTC

[section ""data" . Data.Typeable.rnfTypeRep_closure" {
     Data.Typeable.rnfTypeRep_closure:
         const Data.Typeable.rnfTypeRep_info;
 },
 Data.Typeable.rnfTypeRep_entry() //  [R2]
         { []
         }
     {offset
       c7oos: // global
           R2 = R2;
           call Data.Typeable.Internal.rnfSomeTypeRep_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.rnfTypeRep_info" {
     Data.Typeable.rnfTypeRep_info:
         const Data.Typeable.rnfTypeRep_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.595340759 UTC

[section ""data" . Data.Typeable.typeOf1_closure" {
     Data.Typeable.typeOf1_closure:
         const Data.Typeable.typeOf1_info;
 },
 Data.Typeable.typeOf1_entry() //  [R2]
         { []
         }
     {offset
       c7ooD: // global
           R2 = R2;
           call Data.Typeable.Internal.$WSomeTypeRep_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeOf1_info" {
     Data.Typeable.typeOf1_info:
         const Data.Typeable.typeOf1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.5985644 UTC

[section ""data" . Data.Typeable.typeOf2_closure" {
     Data.Typeable.typeOf2_closure:
         const Data.Typeable.typeOf2_info;
 },
 Data.Typeable.typeOf2_entry() //  [R2]
         { []
         }
     {offset
       c7ooO: // global
           R2 = R2;
           call Data.Typeable.Internal.$WSomeTypeRep_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeOf2_info" {
     Data.Typeable.typeOf2_info:
         const Data.Typeable.typeOf2_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.602460206 UTC

[section ""data" . Data.Typeable.typeOf3_closure" {
     Data.Typeable.typeOf3_closure:
         const Data.Typeable.typeOf3_info;
 },
 Data.Typeable.typeOf3_entry() //  [R2]
         { []
         }
     {offset
       c7ooZ: // global
           R2 = R2;
           call Data.Typeable.Internal.$WSomeTypeRep_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeOf3_info" {
     Data.Typeable.typeOf3_info:
         const Data.Typeable.typeOf3_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.6057752 UTC

[section ""data" . Data.Typeable.typeOf4_closure" {
     Data.Typeable.typeOf4_closure:
         const Data.Typeable.typeOf4_info;
 },
 Data.Typeable.typeOf4_entry() //  [R2]
         { []
         }
     {offset
       c7opa: // global
           R2 = R2;
           call Data.Typeable.Internal.$WSomeTypeRep_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeOf4_info" {
     Data.Typeable.typeOf4_info:
         const Data.Typeable.typeOf4_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.608942018 UTC

[section ""data" . Data.Typeable.typeOf5_closure" {
     Data.Typeable.typeOf5_closure:
         const Data.Typeable.typeOf5_info;
 },
 Data.Typeable.typeOf5_entry() //  [R2]
         { []
         }
     {offset
       c7opl: // global
           R2 = R2;
           call Data.Typeable.Internal.$WSomeTypeRep_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeOf5_info" {
     Data.Typeable.typeOf5_info:
         const Data.Typeable.typeOf5_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.612327017 UTC

[section ""data" . Data.Typeable.typeOf6_closure" {
     Data.Typeable.typeOf6_closure:
         const Data.Typeable.typeOf6_info;
 },
 Data.Typeable.typeOf6_entry() //  [R2]
         { []
         }
     {offset
       c7opw: // global
           R2 = R2;
           call Data.Typeable.Internal.$WSomeTypeRep_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeOf6_info" {
     Data.Typeable.typeOf6_info:
         const Data.Typeable.typeOf6_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.615640431 UTC

[section ""data" . Data.Typeable.typeOf7_closure" {
     Data.Typeable.typeOf7_closure:
         const Data.Typeable.typeOf7_info;
 },
 Data.Typeable.typeOf7_entry() //  [R2]
         { []
         }
     {offset
       c7opH: // global
           R2 = R2;
           call Data.Typeable.Internal.$WSomeTypeRep_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeOf7_info" {
     Data.Typeable.typeOf7_info:
         const Data.Typeable.typeOf7_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.618704985 UTC

[section ""data" . Data.Typeable.$trModule3_closure" {
     Data.Typeable.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Typeable.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.620375748 UTC

[section ""data" . Data.Typeable.$trModule1_closure" {
     Data.Typeable.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Typeable.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.622153801 UTC

[section ""data" . Data.Typeable.$trModule_closure" {
     Data.Typeable.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Typeable.$trModule3_closure+1;
         const Data.Typeable.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.624756432 UTC

[section ""data" . Data.Typeable.showsTypeRep_closure" {
     Data.Typeable.showsTypeRep_closure:
         const Data.Typeable.showsTypeRep_info;
         const 0;
 },
 Data.Typeable.showsTypeRep_entry() //  [R2]
         { []
         }
     {offset
       c7opY: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7opZ; else goto c7oq0;
       c7opZ: // global
           R2 = R2;
           R1 = Data.Typeable.showsTypeRep_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7oq0: // global
           I64[Sp - 8] = block_c7opV_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7oq4; else goto c7opW;
       u7oq4: // global
           call _c7opV(R1) args: 0, res: 0, upd: 0;
       c7opW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.showsTypeRep_info" {
     Data.Typeable.showsTypeRep_info:
         const Data.Typeable.showsTypeRep_entry;
         const 0;
         const 4402341478414;
         const 4294967301;
         const S7nhj_srt+96;
 },
 _c7opV() //  [R1]
         { []
         }
     {offset
       c7opV: // global
           R3 = P64[R1 + 7];
           R2 = GHC.Show.$fShow(,)1_closure;
           Sp = Sp + 8;
           call Data.Typeable.Internal.showTypeable_entry(R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7opV_info" {
     block_c7opV_info:
         const _c7opV;
         const 0;
         const 4294967326;
         const S7nhj_srt+96;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:40.630932263 UTC

[section ""relreadonly" . S7nhj_srt" {
     S7nhj_srt:
         const Data.Typeable.Internal.sameTypeRep_closure;
         const Data.Typeable.cast_closure;
         const Data.Typeable.eqT_closure;
         const Data.Typeable.gcast_closure;
         const Data.Typeable.gcast1_closure;
         const Data.Typeable.gcast2_closure;
         const Data.Typeable.Internal.mkTrApp_closure;
         const Data.Typeable.Internal.$wmkTrCon_closure;
         const Data.Typeable.Internal.fpTYPELiftedRep_closure;
         const Data.Typeable.Internal.$mApp1_closure;
         const Data.Typeable.funResultTy_closure;
         const Data.Typeable.mkFunTy1_closure;
         const Data.Typeable.Internal.showTypeable_closure;
         const GHC.Err.error_closure;
         const GHC.Fingerprint.fingerprintFingerprints_closure;
         const Data.Typeable.mkFunTy_closure;
         const Data.Typeable.mkFunTy5_closure;
         const Data.Typeable.Internal.$wgo_closure;
         const Data.Typeable.splitTyConApp_closure;
         const Data.Typeable.typeRepArgs_closure;
         const Data.Typeable.Internal.someTypeRepTyCon_closure;
         const Data.Typeable.Internal.someTypeRepFingerprint_closure;
         const Data.Typeable.showsTypeRep_closure;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.442209567 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:02:41.444063556 UTC

[section ""data" . Data.Typeable.typeOf_closure" {
     Data.Typeable.typeOf_closure:
         const Data.Typeable.typeOf_info;
 },
 Data.Typeable.typeOf_entry() //  [R2]
         { []
         }
     {offset
       c7ow5: // global
           R2 = R2;
           call Data.Typeable.Internal.$WSomeTypeRep_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeOf_info" {
     Data.Typeable.typeOf_info:
         const Data.Typeable.typeOf_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.452101568 UTC

[section ""data" . Data.Typeable.typeRep_closure" {
     Data.Typeable.typeRep_closure:
         const Data.Typeable.typeRep_info;
 },
 Data.Typeable.typeRep_entry() //  [R2, R3]
         { []
         }
     {offset
       c7owg: // global
           R3 = R3;
           R2 = R2;
           call Data.Typeable.Internal.someTypeRep_entry(R3,
                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeRep_info" {
     Data.Typeable.typeRep_info:
         const Data.Typeable.typeRep_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.456363406 UTC

[section ""data" . Data.Typeable.cast_closure" {
     Data.Typeable.cast_closure:
         const Data.Typeable.cast_info;
         const 0;
 },
 Data.Typeable.cast_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c7owx: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7owy; else goto c7owz;
       c7owy: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Typeable.cast_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7owz: // global
           I64[Sp - 16] = block_c7owr_info;
           R3 = R3;
           R2 = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.cast_info" {
     Data.Typeable.cast_info:
         const Data.Typeable.cast_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S7owJ_srt;
 },
 _c7owr() //  [R1]
         { []
         }
     {offset
       c7owr: // global
           if (R1 & 7 == 1) goto c7owu; else goto c7owv;
       c7owu: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7owv: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7owI; else goto c7owH;
       c7owI: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7owH: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7owr_info" {
     block_c7owr_info:
         const _c7owr;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.46173063 UTC

[section ""data" . Data.Typeable.eqT1_closure" {
     Data.Typeable.eqT1_closure:
         const GHC.Base.Just_con_info;
         const Data.Type.Equality.$WRefl_closure;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.464306267 UTC

[section ""data" . Data.Typeable.eqT_closure" {
     Data.Typeable.eqT_closure:
         const Data.Typeable.eqT_info;
         const 0;
 },
 Data.Typeable.eqT_entry() //  [R2, R3]
         { []
         }
     {offset
       c7oxb: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7oxc; else goto c7oxd;
       c7oxc: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Typeable.eqT_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7oxd: // global
           I64[Sp - 8] = block_c7ox5_info;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.eqT_info" {
     Data.Typeable.eqT_info:
         const Data.Typeable.eqT_entry;
         const 0;
         const 21474836494;
         const 8589934607;
         const S7owJ_srt;
 },
 _c7ox5() //  [R1]
         { []
         }
     {offset
       c7ox5: // global
           if (R1 & 7 == 1) goto c7ox8; else goto c7ox9;
       c7ox8: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7ox9: // global
           R1 = Data.Typeable.eqT1_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7ox5_info" {
     block_c7ox5_info:
         const _c7ox5;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.470306042 UTC

[section ""data" . Data.Typeable.gcast_closure" {
     Data.Typeable.gcast_closure:
         const Data.Typeable.gcast_info;
         const 0;
 },
 Data.Typeable.gcast_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c7oxI: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7oxJ; else goto c7oxK;
       c7oxJ: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Typeable.gcast_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7oxK: // global
           I64[Sp - 16] = block_c7oxC_info;
           R3 = R3;
           R2 = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.gcast_info" {
     Data.Typeable.gcast_info:
         const Data.Typeable.gcast_entry;
         const 0;
         const 38654705678;
         const 12884901911;
         const S7owJ_srt;
 },
 _c7oxC() //  [R1]
         { []
         }
     {offset
       c7oxC: // global
           if (R1 & 7 == 1) goto c7oxF; else goto c7oxG;
       c7oxF: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7oxG: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7oxT; else goto c7oxS;
       c7oxT: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7oxS: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7oxC_info" {
     block_c7oxC_info:
         const _c7oxC;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.476415873 UTC

[section ""data" . Data.Typeable.gcast1_closure" {
     Data.Typeable.gcast1_closure:
         const Data.Typeable.gcast1_info;
         const 0;
 },
 Data.Typeable.gcast1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c7oyk: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7oyl; else goto c7oym;
       c7oyl: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Typeable.gcast1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7oym: // global
           I64[Sp - 16] = block_c7oye_info;
           R3 = R3;
           R2 = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.gcast1_info" {
     Data.Typeable.gcast1_info:
         const Data.Typeable.gcast1_entry;
         const 0;
         const 73014444046;
         const 12884901911;
         const S7owJ_srt;
 },
 _c7oye() //  [R1]
         { []
         }
     {offset
       c7oye: // global
           if (R1 & 7 == 1) goto c7oyh; else goto c7oyi;
       c7oyh: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7oyi: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7oyv; else goto c7oyu;
       c7oyv: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7oyu: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7oye_info" {
     block_c7oye_info:
         const _c7oye;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.482755409 UTC

[section ""data" . Data.Typeable.gcast2_closure" {
     Data.Typeable.gcast2_closure:
         const Data.Typeable.gcast2_info;
         const 0;
 },
 Data.Typeable.gcast2_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c7oyW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7oyX; else goto c7oyY;
       c7oyX: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Typeable.gcast2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7oyY: // global
           I64[Sp - 16] = block_c7oyQ_info;
           R3 = R3;
           R2 = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.gcast2_info" {
     Data.Typeable.gcast2_info:
         const Data.Typeable.gcast2_entry;
         const 0;
         const 141733920782;
         const 12884901911;
         const S7owJ_srt;
 },
 _c7oyQ() //  [R1]
         { []
         }
     {offset
       c7oyQ: // global
           if (R1 & 7 == 1) goto c7oyT; else goto c7oyU;
       c7oyT: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7oyU: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7oz7; else goto c7oz6;
       c7oz7: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7oz6: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7oyQ_info" {
     block_c7oyQ_info:
         const _c7oyQ;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.491169495 UTC

[section ""data" . Data.Typeable.mkFunTy1_closure" {
     Data.Typeable.mkFunTy1_closure:
         const Data.Typeable.mkFunTy1_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Typeable.mkFunTy1_entry() //  [R1]
         { []
         }
     {offset
       c7ozE: // global
           if ((Sp + -104) < SpLim) (likely: False) goto c7ozF; else goto c7ozG;
       c7ozF: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7ozG: // global
           (_c7ozr::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7ozr::I64 == 0) goto c7ozt; else goto c7ozs;
       c7ozt: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7ozs: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7ozr::I64;
           I64[Sp - 24] = block_c7ozu_info;
           R6 = 0;
           R5 = GHC.Types.$tcTYPE2_closure;
           R4 = GHC.Types.tr$ModuleGHCPrim_closure;
           R3 = 12502576999761269576;
           R2 = 16277905407886699876;
           P64[Sp - 40] = GHC.Types.$tcTYPE1_closure;
           P64[Sp - 32] = GHC.Types.[]_closure+1;
           Sp = Sp - 40;
           call Data.Typeable.Internal.$wmkTrCon_entry(R6,
                                                       R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . Data.Typeable.mkFunTy1_info" {
     Data.Typeable.mkFunTy1_info:
         const Data.Typeable.mkFunTy1_entry;
         const 0;
         const 12884901909;
         const S7owJ_srt+48;
 },
 _c7ozu() //  [R1, R2, R3, R4, R5]
         { []
         }
     {offset
       c7ozu: // global
           I64[Sp - 40] = block_c7ozy_info;
           R6 = 0;
           _s7oqF::P64 = R5;
           R5 = GHC.Types.$tc'LiftedRep1_closure;
           _s7oqE::P64 = R4;
           R4 = GHC.Types.tr$ModuleGHCPrim_closure;
           _s7oqD::P64 = R3;
           R3 = 5595830777317938557;
           _s7oqC::I64 = R2;
           R2 = 16105171405184389724;
           P64[Sp - 56] = GHC.Types.$tc'AddrRep1_closure;
           P64[Sp - 48] = GHC.Types.[]_closure+1;
           I64[Sp - 32] = _s7oqC::I64;
           P64[Sp - 24] = _s7oqD::P64;
           P64[Sp - 16] = _s7oqE::P64;
           P64[Sp - 8] = _s7oqF::P64;
           I64[Sp] = R1;
           Sp = Sp - 56;
           call Data.Typeable.Internal.$wmkTrCon_entry(R6,
                                                       R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c7ozu_info" {
     block_c7ozu_info:
         const _c7ozu;
         const 0;
         const 12884901918;
         const S7owJ_srt+48;
 },
 _c7ozy() //  [R1, R2, R3, R4, R5]
         { []
         }
     {offset
       c7ozy: // global
           I64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           I64[Sp] = R1;
           Sp = Sp - 40;
           call _c7ozz() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7ozy_info" {
     block_c7ozy_info:
         const _c7ozy;
         const 1093;
         const 4294967326;
         const S7owJ_srt+48;
 },
 _c7ozz() //  []
         { []
         }
     {offset
       c7ozz: // global
           Hp = Hp + 96;
           if (Hp > HpLim) (likely: False) goto c7ozK; else goto c7ozJ;
       c7ozK: // global
           HpAlloc = 96;
           I64[Sp] = block_c7ozz_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 24;
       c7ozJ: // global
           I64[Hp - 88] = Data.Typeable.Internal.TrTyCon_con_info;
           P64[Hp - 80] = P64[Sp + 16];
           P64[Hp - 72] = P64[Sp + 24];
           P64[Hp - 64] = P64[Sp + 32];
           I64[Hp - 56] = I64[Sp + 40];
           I64[Hp - 48] = I64[Sp + 8];
           I64[Hp - 40] = Data.Typeable.Internal.TrTyCon_con_info;
           P64[Hp - 32] = P64[Sp + 56];
           P64[Hp - 24] = P64[Sp + 64];
           P64[Hp - 16] = P64[Sp + 72];
           I64[Hp - 8] = I64[Sp + 80];
           I64[Hp] = I64[Sp + 48];
           R3 = Hp - 86;
           R2 = Hp - 38;
           Sp = Sp + 88;
           call Data.Typeable.Internal.mkTrApp_entry(R3,
                                                     R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7ozz_info" {
     block_c7ozz_info:
         const _c7ozz;
         const 35914;
         const 4294967326;
         const S7owJ_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.519367067 UTC

[section ""data" . Data.Typeable.funResultTy_closure" {
     Data.Typeable.funResultTy_closure:
         const Data.Typeable.funResultTy_info;
         const 0;
 },
 Data.Typeable.funResultTy_entry() //  [R2, R3]
         { []
         }
     {offset
       c7oAw: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c7oAA; else goto c7oAB;
       c7oAA: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Typeable.funResultTy_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7oAB: // global
           I64[Sp - 16] = block_c7oAt_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7oJX; else goto c7oAu;
       u7oJX: // global
           call _c7oAt(R1) args: 0, res: 0, upd: 0;
       c7oAu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.funResultTy_info" {
     Data.Typeable.funResultTy_info:
         const Data.Typeable.funResultTy_entry;
         const 0;
         const 16496969383950;
         const 8589934607;
         const S7owJ_srt;
 },
 _c7oAt() //  [R1]
         { []
         }
     {offset
       c7oAt: // global
           I64[Sp] = block_c7oAz_info;
           _s7oqR::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s7oqR::P64;
           if (R1 & 7 != 0) goto u7oJW; else goto c7oAD;
       u7oJW: // global
           call _c7oAz(R1) args: 0, res: 0, upd: 0;
       c7oAD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7oAt_info" {
     block_c7oAt_info:
         const _c7oAt;
         const 1;
         const 12098922872862;
         const S7owJ_srt;
 },
 _c7oAz() //  [R1]
         { []
         }
     {offset
       c7oAz: // global
           I64[Sp - 8] = block_c7oAJ_info;
           _s7oqT::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp] = _s7oqT::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7oJY; else goto c7oD7;
       u7oJY: // global
           call _c7oAJ(R1) args: 0, res: 0, upd: 0;
       c7oD7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7oAz_info" {
     block_c7oAz_info:
         const _c7oAz;
         const 1;
         const 12098922872862;
         const S7owJ_srt;
 },
 _c7oAJ() //  [R1]
         { []
         }
     {offset
       c7oAJ: // global
           _c7oId::P64 = R1 & 7;
           if (_c7oId::P64 < 3) goto u7oIT; else goto u7oIU;
       u7oIT: // global
           if (_c7oId::P64 < 2) goto c7oDe; else goto c7oFK;
       c7oDe: // global
           I64[Sp] = block_c7oDb_info;
           R1 = Data.Typeable.mkFunTy1_closure;
           if (R1 & 7 != 0) goto u7oJZ; else goto c7oDf;
       u7oJZ: // global
           call _c7oDb(R1) args: 0, res: 0, upd: 0;
       c7oDf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7oFK: // global
           I64[Sp - 8] = block_c7oEk_info;
           _s7osm::P64 = P64[R1 + 22];
           R1 = Data.Typeable.mkFunTy1_closure;
           P64[Sp] = _s7osm::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7oK0; else goto c7oFL;
       u7oK0: // global
           call _c7oEk(R1) args: 0, res: 0, upd: 0;
       c7oFL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       u7oIU: // global
           if (_c7oId::P64 < 4) goto c7oHA; else goto c7oI0;
       c7oHA: // global
           I64[Sp - 8] = block_c7oGa_info;
           _s7otc::P64 = P64[R1 + 21];
           R1 = Data.Typeable.mkFunTy1_closure;
           P64[Sp] = _s7otc::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7oK1; else goto c7oHB;
       u7oK1: // global
           call _c7oGa(R1) args: 0, res: 0, upd: 0;
       c7oHB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7oI0: // global
           I64[Sp] = block_c7oHY_info;
           R3 = Data.Typeable.Internal.$mApp1_closure;
           R2 = Data.Typeable.mkFunTy1_closure;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7oAJ_info" {
     block_c7oAJ_info:
         const _c7oAJ;
         const 2;
         const 12098922872862;
         const S7owJ_srt;
 },
 _c7oDb() //  [R1]
         { []
         }
     {offset
       c7oDb: // global
           _c7oII::P64 = R1 & 7;
           if (_c7oII::P64 < 3) goto u7oIZ; else goto c7oDW;
       u7oIZ: // global
           if (_c7oII::P64 < 2) goto c7oDm; else goto c7oDy;
       c7oDm: // global
           I64[Sp] = block_c7oDj_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u7oKi; else goto c7oDn;
       u7oKi: // global
           call _c7oDj(R1) args: 0, res: 0, upd: 0;
       c7oDn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7oDy: // global
           I64[Sp - 16] = block_c7oDw_info;
           _s7orW::I64 = I64[R1 + 30];
           _s7orX::I64 = I64[R1 + 38];
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           I64[Sp - 8] = _s7orX::I64;
           I64[Sp] = _s7orW::I64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7oKj; else goto c7oDz;
       u7oKj: // global
           call _c7oDw(R1) args: 0, res: 0, upd: 0;
       c7oDz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7oDW: // global
           I64[Sp - 16] = block_c7oDU_info;
           _s7os7::I64 = I64[R1 + 29];
           _s7os8::I64 = I64[R1 + 37];
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           I64[Sp - 8] = _s7os8::I64;
           I64[Sp] = _s7os7::I64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7oKk; else goto c7oDX;
       u7oKk: // global
           call _c7oDU(R1) args: 0, res: 0, upd: 0;
       c7oDX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7oDb_info" {
     block_c7oDb_info:
         const _c7oDb;
         const 2;
         const 4294967326;
         const S7owJ_srt+64;
 },
 _c7oDj() //  [R1]
         { []
         }
     {offset
       c7oDj: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7oDt; else goto c7oDs;
       c7oDt: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7oDs: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 8;
           call _s7oqU() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oDj_info" {
     block_c7oDj_info:
         const _c7oDj;
         const 2;
         const 4294967326;
         const S7owJ_srt+64;
 },
 _c7oDw() //  [R1]
         { []
         }
     {offset
       c7oDw: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7oDF; else goto c7oDE;
       c7oDF: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7oDE: // global
           if (I64[Sp + 16] == I64[R1 + 7]) goto c7oDR; else goto u7oJ7;
       c7oDR: // global
           if (I64[Sp + 8] == I64[R1 + 15]) goto c7oDQ; else goto u7oJ8;
       c7oDQ: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 24;
           call _s7oqU() args: 0, res: 0, upd: 0;
       u7oJ8: // global
           Sp = Sp + 40;
           goto u7oKn;
       u7oJ7: // global
           Sp = Sp + 40;
           goto u7oKn;
       u7oKn: // global
           call _c7oHx() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oDw_info" {
     block_c7oDw_info:
         const _c7oDw;
         const 196;
         const 4294967326;
         const S7owJ_srt+64;
 },
 _c7oDU() //  [R1]
         { []
         }
     {offset
       c7oDU: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7oE3; else goto c7oE2;
       c7oE3: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7oE2: // global
           if (I64[Sp + 16] == I64[R1 + 7]) goto c7oEf; else goto u7oJa;
       c7oEf: // global
           if (I64[Sp + 8] == I64[R1 + 15]) goto c7oEe; else goto u7oJb;
       c7oEe: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 24;
           call _s7oqU() args: 0, res: 0, upd: 0;
       u7oJb: // global
           Sp = Sp + 40;
           goto u7oKq;
       u7oJa: // global
           Sp = Sp + 40;
           goto u7oKq;
       u7oKq: // global
           call _c7oHx() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oDU_info" {
     block_c7oDU_info:
         const _c7oDU;
         const 196;
         const 4294967326;
         const S7owJ_srt+64;
 },
 _c7oEk() //  [R1]
         { []
         }
     {offset
       c7oEk: // global
           _c7oIu::P64 = R1 & 7;
           if (_c7oIu::P64 < 3) goto u7oJ0; else goto c7oG5;
       u7oJ0: // global
           if (_c7oIu::P64 < 2) goto c7oFS; else goto c7oG1;
       c7oFS: // global
           I64[Sp] = block_c7oFP_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u7oKs; else goto c7oFT;
       u7oKs: // global
           call _c7oFP(R1) args: 0, res: 0, upd: 0;
       c7oFT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7oG1: // global
           I64[Sp] = I64[R1 + 30];
           I64[Sp - 8] = I64[R1 + 38];
           Sp = Sp - 8;
           goto u7oKu;
       c7oG5: // global
           I64[Sp] = I64[R1 + 29];
           I64[Sp - 8] = I64[R1 + 37];
           Sp = Sp - 8;
           goto u7oKu;
       u7oKu: // global
           call _s7osn() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oEk_info" {
     block_c7oEk_info:
         const _c7oEk;
         const 3;
         const 4294967326;
         const S7owJ_srt+64;
 },
 _c7oFP() //  [R1]
         { []
         }
     {offset
       c7oFP: // global
           I64[Sp - 8] = I64[R1 + 15];
           I64[Sp] = I64[R1 + 7];
           Sp = Sp - 8;
           call _s7osn() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oFP_info" {
     block_c7oFP_info:
         const _c7oFP;
         const 3;
         const 4294967326;
         const S7owJ_srt+64;
 },
 _s7osn() //  []
         { []
         }
     {offset
       s7osn: // global
           I64[Sp - 8] = block_c7oEp_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7oL4; else goto c7oEr;
       u7oL4: // global
           call _c7oEp(R1) args: 0, res: 0, upd: 0;
       c7oEr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c7oEp() //  [R1]
         { []
         }
     {offset
       c7oEp: // global
           _s7oso::I64 = I64[Sp + 16];
           _s7osp::I64 = I64[Sp + 8];
           _c7oIv::P64 = R1 & 7;
           if (_c7oIv::P64 < 3) goto u7oJ1; else goto u7oJ2;
       u7oJ1: // global
           if (_c7oIv::P64 < 2) goto c7oEy; else goto c7oES;
       c7oEy: // global
           I64[Sp] = block_c7oEv_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u7oKv; else goto c7oEz;
       u7oKv: // global
           call _c7oEv(R1) args: 0, res: 0, upd: 0;
       c7oEz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7oES: // global
           Hp = Hp + 16;
           _s7osq::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7oFx; else goto c7oEW;
       c7oEW: // global
           if (_s7oso::I64 == I64[_s7osq::P64 + 30]) goto c7oF9; else goto u7oJj;
       c7oF9: // global
           if (_s7osp::I64 == I64[_s7osq::P64 + 38]) goto c7oF8; else goto u7oJk;
       c7oF8: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 32;
           goto u7oKE;
       u7oJk: // global
           Sp = Sp + 48;
           goto u7oKD;
       u7oJj: // global
           Sp = Sp + 48;
           goto u7oKD;
       u7oJ2: // global
           if (_c7oIv::P64 < 4) goto c7oFa; else goto c7oFs;
       c7oFa: // global
           Hp = Hp + 16;
           _s7osq::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7oFx; else goto c7oFe;
       c7oFe: // global
           if (_s7oso::I64 == I64[_s7osq::P64 + 29]) goto c7oFr; else goto u7oJm;
       c7oFr: // global
           if (_s7osp::I64 == I64[_s7osq::P64 + 37]) goto c7oFq; else goto u7oJn;
       c7oFq: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 32;
           goto u7oKE;
       u7oJn: // global
           Sp = Sp + 48;
           goto u7oKD;
       u7oJm: // global
           Sp = Sp + 48;
           goto u7oKD;
       c7oFs: // global
           Hp = Hp + 16;
           _s7osq::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7oFx; else goto c7oFw;
       c7oFx: // global
           HpAlloc = 16;
           R1 = _s7osq::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7oFw: // global
           if (_s7oso::I64 == I64[_s7osq::P64 + 20]) goto c7oFJ; else goto u7oJp;
       c7oFJ: // global
           if (_s7osp::I64 == I64[_s7osq::P64 + 28]) goto c7oFI; else goto u7oJq;
       c7oFI: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 32;
           goto u7oKE;
       u7oKE: // global
           call _s7oqU() args: 0, res: 0, upd: 0;
       u7oJq: // global
           Sp = Sp + 48;
           goto u7oKD;
       u7oJp: // global
           Sp = Sp + 48;
           goto u7oKD;
       u7oKD: // global
           call _c7oHx() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oEp_info" {
     block_c7oEp_info:
         const _c7oEp;
         const 453;
         const 4294967326;
         const S7owJ_srt+64;
 },
 _c7oEv() //  [R1]
         { []
         }
     {offset
       c7oEv: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7oEF; else goto c7oEE;
       c7oEF: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7oEE: // global
           if (I64[Sp + 16] == I64[R1 + 7]) goto c7oER; else goto u7oJg;
       c7oER: // global
           if (I64[Sp + 8] == I64[R1 + 15]) goto c7oEQ; else goto u7oJh;
       c7oEQ: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 32;
           call _s7oqU() args: 0, res: 0, upd: 0;
       u7oJh: // global
           Sp = Sp + 48;
           goto u7oKG;
       u7oJg: // global
           Sp = Sp + 48;
           goto u7oKG;
       u7oKG: // global
           call _c7oHx() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oEv_info" {
     block_c7oEv_info:
         const _c7oEv;
         const 453;
         const 4294967326;
         const S7owJ_srt+64;
 },
 _c7oGa() //  [R1]
         { []
         }
     {offset
       c7oGa: // global
           _c7oIg::P64 = R1 & 7;
           if (_c7oIg::P64 < 3) goto u7oJ3; else goto c7oHV;
       u7oJ3: // global
           if (_c7oIg::P64 < 2) goto c7oHI; else goto c7oHR;
       c7oHI: // global
           I64[Sp] = block_c7oHF_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u7oKJ; else goto c7oHJ;
       u7oKJ: // global
           call _c7oHF(R1) args: 0, res: 0, upd: 0;
       c7oHJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7oHR: // global
           I64[Sp] = I64[R1 + 30];
           I64[Sp - 8] = I64[R1 + 38];
           Sp = Sp - 8;
           goto u7oKL;
       c7oHV: // global
           I64[Sp] = I64[R1 + 29];
           I64[Sp - 8] = I64[R1 + 37];
           Sp = Sp - 8;
           goto u7oKL;
       u7oKL: // global
           call _s7otd() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oGa_info" {
     block_c7oGa_info:
         const _c7oGa;
         const 3;
         const 4294967326;
         const S7owJ_srt+64;
 },
 _c7oHF() //  [R1]
         { []
         }
     {offset
       c7oHF: // global
           I64[Sp - 8] = I64[R1 + 15];
           I64[Sp] = I64[R1 + 7];
           Sp = Sp - 8;
           call _s7otd() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oHF_info" {
     block_c7oHF_info:
         const _c7oHF;
         const 3;
         const 4294967326;
         const S7owJ_srt+64;
 },
 _s7otd() //  []
         { []
         }
     {offset
       s7otd: // global
           I64[Sp - 8] = block_c7oGf_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7oL5; else goto c7oGh;
       u7oL5: // global
           call _c7oGf(R1) args: 0, res: 0, upd: 0;
       c7oGh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c7oGf() //  [R1]
         { []
         }
     {offset
       c7oGf: // global
           _s7ote::I64 = I64[Sp + 16];
           _s7otf::I64 = I64[Sp + 8];
           _c7oIh::P64 = R1 & 7;
           if (_c7oIh::P64 < 3) goto u7oJ4; else goto u7oJ5;
       u7oJ4: // global
           if (_c7oIh::P64 < 2) goto c7oGo; else goto c7oGI;
       c7oGo: // global
           I64[Sp] = block_c7oGl_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u7oKM; else goto c7oGp;
       u7oKM: // global
           call _c7oGl(R1) args: 0, res: 0, upd: 0;
       c7oGp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7oGI: // global
           Hp = Hp + 16;
           _s7otg::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7oHn; else goto c7oGM;
       c7oGM: // global
           if (_s7ote::I64 == I64[_s7otg::P64 + 30]) goto c7oGZ; else goto u7oJy;
       c7oGZ: // global
           if (_s7otf::I64 == I64[_s7otg::P64 + 38]) goto c7oGY; else goto u7oJz;
       c7oGY: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 32;
           goto u7oKV;
       u7oJz: // global
           Sp = Sp + 48;
           goto u7oKU;
       u7oJy: // global
           Sp = Sp + 48;
           goto u7oKU;
       u7oJ5: // global
           if (_c7oIh::P64 < 4) goto c7oH0; else goto c7oHi;
       c7oH0: // global
           Hp = Hp + 16;
           _s7otg::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7oHn; else goto c7oH4;
       c7oH4: // global
           if (_s7ote::I64 == I64[_s7otg::P64 + 29]) goto c7oHh; else goto u7oJB;
       c7oHh: // global
           if (_s7otf::I64 == I64[_s7otg::P64 + 37]) goto c7oHg; else goto u7oJC;
       c7oHg: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 32;
           goto u7oKV;
       u7oJC: // global
           Sp = Sp + 48;
           goto u7oKU;
       u7oJB: // global
           Sp = Sp + 48;
           goto u7oKU;
       c7oHi: // global
           Hp = Hp + 16;
           _s7otg::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7oHn; else goto c7oHm;
       c7oHn: // global
           HpAlloc = 16;
           R1 = _s7otg::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7oHm: // global
           if (_s7ote::I64 == I64[_s7otg::P64 + 20]) goto c7oHz; else goto u7oJE;
       c7oHz: // global
           if (_s7otf::I64 == I64[_s7otg::P64 + 28]) goto c7oHy; else goto u7oJF;
       c7oHy: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 32;
           goto u7oKV;
       u7oKV: // global
           call _s7oqU() args: 0, res: 0, upd: 0;
       u7oJF: // global
           Sp = Sp + 48;
           goto u7oKU;
       u7oJE: // global
           Sp = Sp + 48;
           goto u7oKU;
       u7oKU: // global
           call _c7oHx() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oGf_info" {
     block_c7oGf_info:
         const _c7oGf;
         const 453;
         const 4294967326;
         const S7owJ_srt+64;
 },
 _c7oGl() //  [R1]
         { []
         }
     {offset
       c7oGl: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7oGv; else goto c7oGu;
       c7oGv: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7oGu: // global
           if (I64[Sp + 16] == I64[R1 + 7]) goto c7oGH; else goto u7oJv;
       c7oGH: // global
           if (I64[Sp + 8] == I64[R1 + 15]) goto c7oGG; else goto u7oJw;
       c7oGG: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 32;
           call _s7oqU() args: 0, res: 0, upd: 0;
       u7oJw: // global
           Sp = Sp + 48;
           goto u7oKX;
       u7oJv: // global
           Sp = Sp + 48;
           goto u7oKX;
       u7oKX: // global
           call _c7oHx() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oGl_info" {
     block_c7oGl_info:
         const _c7oGl;
         const 453;
         const 4294967326;
         const S7owJ_srt+64;
 },
 _c7oHx() //  []
         { []
         }
     {offset
       c7oHx: // global
           Hp = Hp - 16;
           R1 = GHC.Base.Nothing_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7oHY() //  [R1]
         { []
         }
     {offset
       c7oHY: // global
           if (R1 & 7 == 1) goto u7oJH; else goto c7oI7;
       u7oJH: // global
           Sp = Sp + 24;
           call _c7oI6() args: 0, res: 0, upd: 0;
       c7oI7: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7oIc; else goto c7oIb;
       c7oIc: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7oIb: // global
           I64[Hp - 8] = Data.Type.Equality.HRefl_con_info;
           Sp = Sp + 8;
           call _s7oqU() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oHY_info" {
     block_c7oHY_info:
         const _c7oHY;
         const 2;
         const 4294967326;
         const S7owJ_srt+64;
 },
 _s7oqU() //  []
         { []
         }
     {offset
       s7oqU: // global
           I64[Sp - 8] = block_c7oAO_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7oL2; else goto c7oAQ;
       u7oL2: // global
           call _c7oAO(R1) args: 0, res: 0, upd: 0;
       c7oAQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c7oAO() //  [R1]
         { []
         }
     {offset
       c7oAO: // global
           if (R1 & 7 == 4) goto c7oCH; else goto u7oJJ;
       c7oCH: // global
           I64[Sp] = block_c7oB1_info;
           _s7or0::P64 = P64[R1 + 12];
           R1 = P64[R1 + 4];
           P64[Sp + 16] = _s7or0::P64;
           if (R1 & 7 != 0) goto u7oK2; else goto c7oCI;
       u7oK2: // global
           call _c7oB1(R1) args: 0, res: 0, upd: 0;
       c7oCI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       u7oJJ: // global
           Sp = Sp + 24;
           call _c7oI6() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oAO_info" {
     block_c7oAO_info:
         const _c7oAO;
         const 130;
         const 4294967326;
         const S7owJ_srt+64;
 },
 _c7oB1() //  [R1]
         { []
         }
     {offset
       c7oB1: // global
           _c7oIR::P64 = R1 & 7;
           if (_c7oIR::P64 < 3) goto u7oIV; else goto u7oIW;
       u7oIV: // global
           if (_c7oIR::P64 < 2) goto c7oCP; else goto c7oCY;
       c7oCP: // global
           I64[Sp] = block_c7oCM_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u7oK4; else goto c7oCQ;
       u7oK4: // global
           call _c7oCM(R1) args: 0, res: 0, upd: 0;
       c7oCQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7oCY: // global
           I64[Sp] = I64[R1 + 30];
           I64[Sp - 8] = I64[R1 + 38];
           Sp = Sp - 8;
           goto u7oK7;
       u7oIW: // global
           if (_c7oIR::P64 < 4) goto c7oD2; else goto c7oD6;
       c7oD2: // global
           I64[Sp] = I64[R1 + 29];
           I64[Sp - 8] = I64[R1 + 37];
           Sp = Sp - 8;
           goto u7oK7;
       c7oD6: // global
           I64[Sp] = I64[R1 + 20];
           I64[Sp - 8] = I64[R1 + 28];
           Sp = Sp - 8;
           goto u7oK7;
       u7oK7: // global
           call _s7or1() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oB1_info" {
     block_c7oB1_info:
         const _c7oB1;
         const 2;
         const 4294967326;
         const S7owJ_srt+64;
 },
 _c7oCM() //  [R1]
         { []
         }
     {offset
       c7oCM: // global
           I64[Sp - 8] = I64[R1 + 15];
           I64[Sp] = I64[R1 + 7];
           Sp = Sp - 8;
           call _s7or1() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oCM_info" {
     block_c7oCM_info:
         const _c7oCM;
         const 2;
         const 4294967326;
         const S7owJ_srt+64;
 },
 _s7or1() //  []
         { []
         }
     {offset
       s7or1: // global
           I64[Sp - 8] = block_c7oB6_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7oL3; else goto c7oB8;
       u7oL3: // global
           call _c7oB6(R1) args: 0, res: 0, upd: 0;
       c7oB8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c7oB6() //  [R1]
         { []
         }
     {offset
       c7oB6: // global
           _s7or0::P64 = P64[Sp + 32];
           _s7or2::I64 = I64[Sp + 16];
           _s7or3::I64 = I64[Sp + 8];
           _c7oIS::P64 = R1 & 7;
           if (_c7oIS::P64 < 3) goto u7oIX; else goto u7oIY;
       u7oIX: // global
           if (_c7oIS::P64 < 2) goto c7oBf; else goto c7oBD;
       c7oBf: // global
           I64[Sp] = block_c7oBc_info;
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           if (R1 & 7 != 0) goto u7oK8; else goto c7oBg;
       u7oK8: // global
           call _c7oBc(R1) args: 0, res: 0, upd: 0;
       c7oBg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7oBD: // global
           Hp = Hp + 32;
           _s7or4::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7oCq; else goto c7oBH;
       c7oBH: // global
           if (_s7or2::I64 == I64[_s7or4::P64 + 30]) goto c7oBY; else goto u7oJQ;
       c7oBY: // global
           if (_s7or3::I64 == I64[_s7or4::P64 + 38]) goto c7oBX; else goto u7oJR;
       c7oBX: // global
           I64[Hp - 24] = Data.Typeable.Internal.SomeTypeRep_con_info;
           P64[Hp - 16] = _s7or0::P64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 6;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u7oJR: // global
           Sp = Sp + 40;
           goto u7oKe;
       u7oJQ: // global
           Sp = Sp + 40;
           goto u7oKe;
       u7oIY: // global
           if (_c7oIS::P64 < 4) goto c7oBZ; else goto c7oCl;
       c7oBZ: // global
           Hp = Hp + 32;
           _s7or4::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7oCq; else goto c7oC3;
       c7oC3: // global
           if (_s7or2::I64 == I64[_s7or4::P64 + 29]) goto c7oCk; else goto u7oJS;
       c7oCk: // global
           if (_s7or3::I64 == I64[_s7or4::P64 + 37]) goto c7oCj; else goto u7oJT;
       c7oCj: // global
           I64[Hp - 24] = Data.Typeable.Internal.SomeTypeRep_con_info;
           P64[Hp - 16] = _s7or0::P64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 6;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u7oJT: // global
           Sp = Sp + 40;
           goto u7oKe;
       u7oJS: // global
           Sp = Sp + 40;
           goto u7oKe;
       c7oCl: // global
           Hp = Hp + 32;
           _s7or4::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7oCq; else goto c7oCp;
       c7oCq: // global
           HpAlloc = 32;
           R1 = _s7or4::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7oCp: // global
           if (_s7or2::I64 == I64[_s7or4::P64 + 20]) goto c7oCG; else goto u7oJU;
       c7oCG: // global
           if (_s7or3::I64 == I64[_s7or4::P64 + 28]) goto c7oCF; else goto u7oJV;
       c7oCF: // global
           I64[Hp - 24] = Data.Typeable.Internal.SomeTypeRep_con_info;
           P64[Hp - 16] = _s7or0::P64;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 6;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u7oJV: // global
           Sp = Sp + 40;
           goto u7oKe;
       u7oJU: // global
           Sp = Sp + 40;
           goto u7oKe;
       u7oKe: // global
           call _c7oCA() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oB6_info" {
     block_c7oB6_info:
         const _c7oB6;
         const 452;
         const 4294967326;
         const S7owJ_srt+64;
 },
 _c7oBc() //  [R1]
         { []
         }
     {offset
       c7oBc: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c7oBm; else goto c7oBl;
       c7oBm: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7oBl: // global
           if (I64[Sp + 16] == I64[R1 + 7]) goto c7oBC; else goto u7oJO;
       c7oBC: // global
           if (I64[Sp + 8] == I64[R1 + 15]) goto c7oBB; else goto u7oJP;
       c7oBB: // global
           I64[Hp - 24] = Data.Typeable.Internal.SomeTypeRep_con_info;
           P64[Hp - 16] = P64[Sp + 32];
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 6;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u7oJP: // global
           Sp = Sp + 40;
           goto u7oKg;
       u7oJO: // global
           Sp = Sp + 40;
           goto u7oKg;
       u7oKg: // global
           call _c7oCA() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oBc_info" {
     block_c7oBc_info:
         const _c7oBc;
         const 452;
         const 30;
 },
 _c7oCA() //  []
         { []
         }
     {offset
       c7oCA: // global
           Hp = Hp - 32;
           R1 = GHC.Base.Nothing_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7oI6() //  []
         { []
         }
     {offset
       c7oI6: // global
           R1 = GHC.Base.Nothing_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.576518962 UTC

[section ""cstring" . Data.Typeable.mkFunTy16_bytes" {
     Data.Typeable.mkFunTy16_bytes:
         I8[] [101,114,114,111,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.578945225 UTC

[section ""data" . Data.Typeable.mkFunTy15_closure" {
     Data.Typeable.mkFunTy15_closure:
         const Data.Typeable.mkFunTy15_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Typeable.mkFunTy15_entry() //  [R1]
         { []
         }
     {offset
       c7oOr: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7oOs; else goto c7oOt;
       c7oOs: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7oOt: // global
           (_c7oOo::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7oOo::I64 == 0) goto c7oOq; else goto c7oOp;
       c7oOq: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7oOp: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7oOo::I64;
           R2 = Data.Typeable.mkFunTy16_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Typeable.mkFunTy15_info" {
     Data.Typeable.mkFunTy15_info:
         const Data.Typeable.mkFunTy15_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.582502658 UTC

[section ""cstring" . Data.Typeable.$trModule4_bytes" {
     Data.Typeable.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.584720146 UTC

[section ""data" . Data.Typeable.mkFunTy14_closure" {
     Data.Typeable.mkFunTy14_closure:
         const Data.Typeable.mkFunTy14_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Typeable.mkFunTy14_entry() //  [R1]
         { []
         }
     {offset
       c7oOJ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7oOK; else goto c7oOL;
       c7oOK: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7oOL: // global
           (_c7oOG::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7oOG::I64 == 0) goto c7oOI; else goto c7oOH;
       c7oOI: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7oOH: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7oOG::I64;
           R2 = Data.Typeable.$trModule4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Typeable.mkFunTy14_info" {
     Data.Typeable.mkFunTy14_info:
         const Data.Typeable.mkFunTy14_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.588885445 UTC

[section ""cstring" . Data.Typeable.$trModule2_bytes" {
     Data.Typeable.$trModule2_bytes:
         I8[] [68,97,116,97,46,84,121,112,101,97,98,108,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.591067953 UTC

[section ""data" . Data.Typeable.mkFunTy13_closure" {
     Data.Typeable.mkFunTy13_closure:
         const Data.Typeable.mkFunTy13_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Typeable.mkFunTy13_entry() //  [R1]
         { []
         }
     {offset
       c7oP1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7oP2; else goto c7oP3;
       c7oP2: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7oP3: // global
           (_c7oOY::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7oOY::I64 == 0) goto c7oP0; else goto c7oOZ;
       c7oP0: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7oOZ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7oOY::I64;
           R2 = Data.Typeable.$trModule2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Typeable.mkFunTy13_info" {
     Data.Typeable.mkFunTy13_info:
         const Data.Typeable.mkFunTy13_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.594653275 UTC

[section ""cstring" . Data.Typeable.mkFunTy12_bytes" {
     Data.Typeable.mkFunTy12_bytes:
         I8[] [46,47,68,97,116,97,47,84,121,112,101,97,98,108,101,46,104,115]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.596812938 UTC

[section ""data" . Data.Typeable.mkFunTy11_closure" {
     Data.Typeable.mkFunTy11_closure:
         const Data.Typeable.mkFunTy11_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Typeable.mkFunTy11_entry() //  [R1]
         { []
         }
     {offset
       c7oPj: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7oPk; else goto c7oPl;
       c7oPk: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7oPl: // global
           (_c7oPg::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7oPg::I64 == 0) goto c7oPi; else goto c7oPh;
       c7oPi: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7oPh: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7oPg::I64;
           R2 = Data.Typeable.mkFunTy12_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Typeable.mkFunTy11_info" {
     Data.Typeable.mkFunTy11_info:
         const Data.Typeable.mkFunTy11_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.600473979 UTC

[section ""data" . Data.Typeable.mkFunTy10_closure" {
     Data.Typeable.mkFunTy10_closure:
         const GHC.Types.I#_con_info;
         const 171;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.602218991 UTC

[section ""data" . Data.Typeable.mkFunTy9_closure" {
     Data.Typeable.mkFunTy9_closure:
         const GHC.Types.I#_con_info;
         const 5;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.603959895 UTC

[section ""data" . Data.Typeable.mkFunTy8_closure" {
     Data.Typeable.mkFunTy8_closure:
         const GHC.Types.I#_con_info;
         const 172;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.605676342 UTC

[section ""data" . Data.Typeable.mkFunTy7_closure" {
     Data.Typeable.mkFunTy7_closure:
         const GHC.Types.I#_con_info;
         const 55;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.607988369 UTC

[section ""data" . Data.Typeable.mkFunTy6_closure" {
     Data.Typeable.mkFunTy6_closure:
         const GHC.Stack.Types.SrcLoc_con_info;
         const Data.Typeable.mkFunTy14_closure;
         const Data.Typeable.mkFunTy13_closure;
         const Data.Typeable.mkFunTy11_closure;
         const Data.Typeable.mkFunTy10_closure+1;
         const Data.Typeable.mkFunTy9_closure+1;
         const Data.Typeable.mkFunTy8_closure+1;
         const Data.Typeable.mkFunTy7_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.610601975 UTC

[section ""data" . Data.Typeable.mkFunTy5_closure" {
     Data.Typeable.mkFunTy5_closure:
         const GHC.Stack.Types.PushCallStack_con_info;
         const Data.Typeable.mkFunTy15_closure;
         const Data.Typeable.mkFunTy6_closure+1;
         const GHC.Stack.Types.EmptyCallStack_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.612289467 UTC

[section ""cstring" . Data.Typeable.mkFunTy4_bytes" {
     Data.Typeable.mkFunTy4_bytes:
         I8[] [109,107,70,117,110,84,121,58,32,65,116,116,101,109,112,116,101,100,32,116,111,32,99,111,110,115,116,114,117,99,116,32,102,117,110,99,116,105,111,110,32,116,121,112,101,32,102,114,111,109,32,110,111,110,45,108,105,102,116,101,100,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.613986844 UTC

[section ""cstring" . Data.Typeable.mkFunTy3_bytes" {
     Data.Typeable.mkFunTy3_bytes:
         I8[] [116,121,112,101,58,32,97,114,103,61]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.615656523 UTC

[section ""cstring" . Data.Typeable.mkFunTy2_bytes" {
     Data.Typeable.mkFunTy2_bytes:
         I8[] [44,32,114,101,115,61]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.628686522 UTC

[section ""data" . Data.Typeable.mkFunTy_closure" {
     Data.Typeable.mkFunTy_closure:
         const Data.Typeable.mkFunTy_info;
         const 0;
 },
 sat_s7oud_entry() //  [R1]
         { []
         }
     {offset
       c7oQc: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c7oQd; else goto c7oQe;
       c7oQd: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7oQe: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = Data.Typeable.Internal.$fShowSomeTypeRep2_closure;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = GHC.Types.[]_closure+1;
           Sp = Sp - 32;
           call Data.Typeable.Internal.showTypeable_entry(R3,
                                                          R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7oud_info" {
     sat_s7oud_info:
         const sat_s7oud_entry;
         const 1;
         const 4294967312;
         const S7owJ_srt+96;
 },
 sat_s7oue_entry() //  [R1]
         { []
         }
     {offset
       c7oQf: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7oQj; else goto c7oQi;
       c7oQj: // global
           HpAlloc = 24;
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7oQi: // global
           _s7ou9::P64 = P64[R1 + 16];
           I64[Hp - 16] = sat_s7oud_info;
           P64[Hp] = _s7ou9::P64;
           R3 = Hp - 16;
           R2 = Data.Typeable.mkFunTy2_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s7oue_info" {
     sat_s7oue_info:
         const sat_s7oue_entry;
         const 1;
         const 4294967312;
         const S7owJ_srt+96;
 },
 sat_s7ouf_entry() //  [R1]
         { []
         }
     {offset
       c7oQm: // global
           _s7ouf::P64 = R1;
           if ((Sp + -48) < SpLim) (likely: False) goto c7oQn; else goto c7oQo;
       c7oQo: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7oQq; else goto c7oQp;
       c7oQq: // global
           HpAlloc = 24;
           goto c7oQn;
       c7oQn: // global
           R1 = _s7ouf::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7oQp: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s7ouf::P64;
           _s7ou7::P64 = P64[_s7ouf::P64 + 16];
           _s7ou9::P64 = P64[_s7ouf::P64 + 24];
           I64[Hp - 16] = sat_s7oue_info;
           P64[Hp] = _s7ou9::P64;
           I64[Sp - 32] = block_c7oQk_info;
           R3 = _s7ou7::P64;
           R2 = Data.Typeable.Internal.$fShowSomeTypeRep2_closure;
           I64[Sp - 48] = stg_ap_p_info;
           P64[Sp - 40] = GHC.Types.[]_closure+1;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 48;
           call Data.Typeable.Internal.showTypeable_entry(R3,
                                                          R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7ouf_info" {
     sat_s7ouf_info:
         const sat_s7ouf_entry;
         const 2;
         const 4294967314;
         const S7owJ_srt+96;
 },
 _c7oQk() //  [R1]
         { []
         }
     {offset
       c7oQk: // global
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7oQk_info" {
     block_c7oQk_info:
         const _c7oQk;
         const 1;
         const 30;
 },
 sat_s7oug_entry() //  [R1]
         { []
         }
     {offset
       c7oQu: // global
           _s7oug::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c7oQv; else goto c7oQw;
       c7oQw: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c7oQy; else goto c7oQx;
       c7oQy: // global
           HpAlloc = 32;
           goto c7oQv;
       c7oQv: // global
           R1 = _s7oug::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7oQx: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s7oug::P64;
           _s7ou7::P64 = P64[_s7oug::P64 + 16];
           _s7ou9::P64 = P64[_s7oug::P64 + 24];
           I64[Hp - 24] = sat_s7ouf_info;
           P64[Hp - 8] = _s7ou7::P64;
           P64[Hp] = _s7ou9::P64;
           R3 = Hp - 24;
           R2 = Data.Typeable.mkFunTy3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7oug_info" {
     sat_s7oug_info:
         const sat_s7oug_entry;
         const 2;
         const 4294967314;
         const S7owJ_srt+96;
 },
 sat_s7ouP_entry() //  [R1]
         { []
         }
     {offset
       c7oQW: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7oQX; else goto c7oQY;
       c7oQX: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7oQY: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c7oQN_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u7oRm; else goto c7oQO;
       u7oRm: // global
           call _c7oQN(R1) args: 0, res: 0, upd: 0;
       c7oQO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7ouP_info" {
     sat_s7ouP_info:
         const sat_s7ouP_entry;
         const 1;
         const 4294967312;
         const S7owJ_srt+64;
 },
 _c7oQN() //  [R1]
         { []
         }
     {offset
       c7oQN: // global
           _c7oQV::P64 = R1 & 7;
           if (_c7oQV::P64 < 3) goto u7oRk; else goto u7oRl;
       u7oRk: // global
           if (_c7oQV::P64 < 2) goto c7oQR; else goto c7oQS;
       c7oQR: // global
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
       c7oQS: // global
           Hp = Hp + 24;
           _s7ouA::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7oRj; else goto c7oR6;
       c7oR6: // global
           _s7ouB::I64 = I64[_s7ouA::P64 + 30];
           _s7ouC::I64 = I64[_s7ouA::P64 + 38];
           I64[Hp - 16] = GHC.Fingerprint.Type.Fingerprint_con_info;
           I64[Hp - 8] = _s7ouB::I64;
           I64[Hp] = _s7ouC::I64;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       u7oRl: // global
           if (_c7oQV::P64 < 4) goto c7oQT; else goto c7oQU;
       c7oQT: // global
           Hp = Hp + 24;
           _s7ouA::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7oRj; else goto c7oRc;
       c7oRc: // global
           _s7ouG::I64 = I64[_s7ouA::P64 + 29];
           _s7ouH::I64 = I64[_s7ouA::P64 + 37];
           I64[Hp - 16] = GHC.Fingerprint.Type.Fingerprint_con_info;
           I64[Hp - 8] = _s7ouG::I64;
           I64[Hp] = _s7ouH::I64;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c7oQU: // global
           Hp = Hp + 24;
           _s7ouA::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7oRj; else goto c7oRi;
       c7oRj: // global
           HpAlloc = 24;
           R1 = _s7ouA::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c7oRi: // global
           _s7ouL::I64 = I64[_s7ouA::P64 + 20];
           _s7ouM::I64 = I64[_s7ouA::P64 + 28];
           I64[Hp - 16] = GHC.Fingerprint.Type.Fingerprint_con_info;
           I64[Hp - 8] = _s7ouL::I64;
           I64[Hp] = _s7ouM::I64;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7oQN_info" {
     block_c7oQN_info:
         const _c7oQN;
         const 0;
         const 4294967326;
         const S7owJ_srt+64;
 },
 sat_s7ouz_entry() //  [R1]
         { []
         }
     {offset
       c7oRB: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7oRC; else goto c7oRD;
       c7oRC: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7oRD: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c7oRs_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u7oS1; else goto c7oRt;
       u7oS1: // global
           call _c7oRs(R1) args: 0, res: 0, upd: 0;
       c7oRt: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7ouz_info" {
     sat_s7ouz_info:
         const sat_s7ouz_entry;
         const 1;
         const 4294967312;
         const S7owJ_srt+64;
 },
 _c7oRs() //  [R1]
         { []
         }
     {offset
       c7oRs: // global
           _c7oRA::P64 = R1 & 7;
           if (_c7oRA::P64 < 3) goto u7oRZ; else goto u7oS0;
       u7oRZ: // global
           if (_c7oRA::P64 < 2) goto c7oRw; else goto c7oRx;
       c7oRw: // global
           R1 = Data.Typeable.Internal.fpTYPELiftedRep_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
       c7oRx: // global
           Hp = Hp + 24;
           _s7ouk::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7oRY; else goto c7oRL;
       c7oRL: // global
           _s7oul::I64 = I64[_s7ouk::P64 + 30];
           _s7oum::I64 = I64[_s7ouk::P64 + 38];
           I64[Hp - 16] = GHC.Fingerprint.Type.Fingerprint_con_info;
           I64[Hp - 8] = _s7oul::I64;
           I64[Hp] = _s7oum::I64;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       u7oS0: // global
           if (_c7oRA::P64 < 4) goto c7oRy; else goto c7oRz;
       c7oRy: // global
           Hp = Hp + 24;
           _s7ouk::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7oRY; else goto c7oRR;
       c7oRR: // global
           _s7ouq::I64 = I64[_s7ouk::P64 + 29];
           _s7our::I64 = I64[_s7ouk::P64 + 37];
           I64[Hp - 16] = GHC.Fingerprint.Type.Fingerprint_con_info;
           I64[Hp - 8] = _s7ouq::I64;
           I64[Hp] = _s7our::I64;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c7oRz: // global
           Hp = Hp + 24;
           _s7ouk::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c7oRY; else goto c7oRX;
       c7oRY: // global
           HpAlloc = 24;
           R1 = _s7ouk::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c7oRX: // global
           _s7ouv::I64 = I64[_s7ouk::P64 + 20];
           _s7ouw::I64 = I64[_s7ouk::P64 + 28];
           I64[Hp - 16] = GHC.Fingerprint.Type.Fingerprint_con_info;
           I64[Hp - 8] = _s7ouv::I64;
           I64[Hp] = _s7ouw::I64;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7oRs_info" {
     block_c7oRs_info:
         const _c7oRs;
         const 0;
         const 4294967326;
         const S7owJ_srt+64;
 },
 Data.Typeable.mkFunTy_entry() //  [R2, R3]
         { []
         }
     {offset
       c7oS2: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7oS3; else goto c7oS4;
       c7oS3: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Typeable.mkFunTy_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7oS4: // global
           I64[Sp - 16] = block_c7oPH_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7oUR; else goto c7oPI;
       u7oUR: // global
           call _c7oPH(R1) args: 0, res: 0, upd: 0;
       c7oPI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.mkFunTy_info" {
     Data.Typeable.mkFunTy_info:
         const Data.Typeable.mkFunTy_entry;
         const 0;
         const 557456690249742;
         const 8589934607;
         const S7owJ_srt;
 },
 _c7oPH() //  [R1]
         { []
         }
     {offset
       c7oPH: // global
           I64[Sp] = block_c7oPM_info;
           _s7ou7::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s7ou7::P64;
           if (R1 & 7 != 0) goto u7oUP; else goto c7oPN;
       u7oUP: // global
           call _c7oPM(R1) args: 0, res: 0, upd: 0;
       c7oPN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7oPH_info" {
     block_c7oPH_info:
         const _c7oPH;
         const 1;
         const 416719201894430;
         const S7owJ_srt;
 },
 _c7oPM() //  [R1]
         { []
         }
     {offset
       c7oPM: // global
           I64[Sp - 8] = block_c7oS6_info;
           _s7ou9::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp] = _s7ou9::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7oUQ; else goto c7oTw;
       u7oUQ: // global
           call _c7oS6(R1) args: 0, res: 0, upd: 0;
       c7oTw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7oPM_info" {
     block_c7oPM_info:
         const _c7oPM;
         const 1;
         const 416719201894430;
         const S7owJ_srt;
 },
 _c7oS6() //  [R1]
         { []
         }
     {offset
       c7oS6: // global
           _c7oUx::P64 = R1 & 7;
           if (_c7oUx::P64 < 3) goto u7oUH; else goto u7oUI;
       u7oUH: // global
           if (_c7oUx::P64 < 2) goto c7oTD; else goto c7oTS;
       c7oTD: // global
           I64[Sp] = block_c7oTA_info;
           R3 = Data.Typeable.mkFunTy1_closure;
           R2 = Data.Typeable.Internal.$WTrType_closure;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
       c7oTS: // global
           I64[Sp] = block_c7oTQ_info;
           R3 = Data.Typeable.mkFunTy1_closure;
           R2 = P64[R1 + 22];
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
       u7oUI: // global
           if (_c7oUx::P64 < 4) goto c7oU7; else goto c7oUm;
       c7oU7: // global
           I64[Sp] = block_c7oU5_info;
           R3 = Data.Typeable.mkFunTy1_closure;
           R2 = P64[R1 + 21];
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
       c7oUm: // global
           I64[Sp] = block_c7oUk_info;
           R3 = Data.Typeable.mkFunTy1_closure;
           R2 = Data.Typeable.Internal.$mApp1_closure;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7oS6_info" {
     block_c7oS6_info:
         const _c7oS6;
         const 2;
         const 416719201894430;
         const S7owJ_srt;
 },
 _c7oTA() //  [R1]
         { []
         }
     {offset
       c7oTA: // global
           if (R1 & 7 == 1) goto u7oV0; else goto u7oUL;
       u7oV0: // global
           call _c7oPU() args: 0, res: 0, upd: 0;
       u7oUL: // global
           Sp = Sp + 8;
           call _s7oui() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oTA_info" {
     block_c7oTA_info:
         const _c7oTA;
         const 2;
         const 416719201894430;
         const S7owJ_srt;
 },
 _c7oTQ() //  [R1]
         { []
         }
     {offset
       c7oTQ: // global
           if (R1 & 7 == 1) goto u7oV2; else goto u7oUM;
       u7oV2: // global
           call _c7oPU() args: 0, res: 0, upd: 0;
       u7oUM: // global
           Sp = Sp + 8;
           call _s7oui() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oTQ_info" {
     block_c7oTQ_info:
         const _c7oTQ;
         const 2;
         const 416719201894430;
         const S7owJ_srt;
 },
 _c7oU5() //  [R1]
         { []
         }
     {offset
       c7oU5: // global
           if (R1 & 7 == 1) goto u7oV4; else goto u7oUN;
       u7oV4: // global
           call _c7oPU() args: 0, res: 0, upd: 0;
       u7oUN: // global
           Sp = Sp + 8;
           call _s7oui() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oU5_info" {
     block_c7oU5_info:
         const _c7oU5;
         const 2;
         const 416719201894430;
         const S7owJ_srt;
 },
 _c7oUk() //  [R1]
         { []
         }
     {offset
       c7oUk: // global
           if (R1 & 7 == 1) goto u7oV6; else goto u7oUO;
       u7oV6: // global
           call _c7oPU() args: 0, res: 0, upd: 0;
       u7oUO: // global
           Sp = Sp + 8;
           call _s7oui() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oUk_info" {
     block_c7oUk_info:
         const _c7oUk;
         const 2;
         const 416719201894430;
         const S7owJ_srt;
 },
 _s7oui() //  []
         { []
         }
     {offset
       s7oui: // global
           I64[Sp - 8] = block_c7oSg_info;
           R1 = P64[Sp];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7oV8; else goto c7oSv;
       u7oV8: // global
           call _c7oSg(R1) args: 0, res: 0, upd: 0;
       c7oSv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c7oSg() //  [R1]
         { []
         }
     {offset
       c7oSg: // global
           _c7oUC::P64 = R1 & 7;
           if (_c7oUC::P64 < 3) goto u7oUJ; else goto u7oUK;
       u7oUJ: // global
           if (_c7oUC::P64 < 2) goto c7oSC; else goto c7oSR;
       c7oSC: // global
           I64[Sp] = block_c7oSz_info;
           R3 = Data.Typeable.mkFunTy1_closure;
           R2 = Data.Typeable.Internal.$WTrType_closure;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
       c7oSR: // global
           I64[Sp] = block_c7oSP_info;
           R3 = Data.Typeable.mkFunTy1_closure;
           R2 = P64[R1 + 22];
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
       u7oUK: // global
           if (_c7oUC::P64 < 4) goto c7oT6; else goto c7oTl;
       c7oT6: // global
           I64[Sp] = block_c7oT4_info;
           R3 = Data.Typeable.mkFunTy1_closure;
           R2 = P64[R1 + 21];
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
       c7oTl: // global
           I64[Sp] = block_c7oTj_info;
           R3 = Data.Typeable.mkFunTy1_closure;
           R2 = Data.Typeable.Internal.$mApp1_closure;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7oSg_info" {
     block_c7oSg_info:
         const _c7oSg;
         const 2;
         const 416719201894430;
         const S7owJ_srt;
 },
 _c7oSz() //  [R1]
         { []
         }
     {offset
       c7oSz: // global
           if (R1 & 7 == 1) goto u7oUS; else goto u7oUT;
       u7oUS: // global
           call _c7oPU() args: 0, res: 0, upd: 0;
       u7oUT: // global
           call _c7oQH() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oSz_info" {
     block_c7oSz_info:
         const _c7oSz;
         const 2;
         const 1584842932254;
         const S7owJ_srt+64;
 },
 _c7oSP() //  [R1]
         { []
         }
     {offset
       c7oSP: // global
           if (R1 & 7 == 1) goto u7oUU; else goto u7oUV;
       u7oUU: // global
           call _c7oPU() args: 0, res: 0, upd: 0;
       u7oUV: // global
           call _c7oQH() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oSP_info" {
     block_c7oSP_info:
         const _c7oSP;
         const 2;
         const 1584842932254;
         const S7owJ_srt+64;
 },
 _c7oT4() //  [R1]
         { []
         }
     {offset
       c7oT4: // global
           if (R1 & 7 == 1) goto u7oUW; else goto u7oUX;
       u7oUW: // global
           call _c7oPU() args: 0, res: 0, upd: 0;
       u7oUX: // global
           call _c7oQH() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oT4_info" {
     block_c7oT4_info:
         const _c7oT4;
         const 2;
         const 1584842932254;
         const S7owJ_srt+64;
 },
 _c7oTj() //  [R1]
         { []
         }
     {offset
       c7oTj: // global
           if (R1 & 7 == 1) goto u7oUY; else goto u7oUZ;
       u7oUY: // global
           call _c7oPU() args: 0, res: 0, upd: 0;
       u7oUZ: // global
           call _c7oQH() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7oTj_info" {
     block_c7oTj_info:
         const _c7oTj;
         const 2;
         const 1584842932254;
         const S7owJ_srt+64;
 },
 _c7oPU() //  []
         { []
         }
     {offset
       c7oPU: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c7oSb; else goto c7oSa;
       c7oSb: // global
           HpAlloc = 32;
           I64[Sp] = block_c7oPU_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c7oSa: // global
           I64[Hp - 24] = sat_s7oug_info;
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = P64[Sp + 8];
           I64[Sp + 16] = block_c7oS8_info;
           R3 = Hp - 24;
           R2 = Data.Typeable.mkFunTy4_bytes;
           Sp = Sp + 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7oPU_info" {
     block_c7oPU_info:
         const _c7oPU;
         const 2;
         const 81604378654;
         const S7owJ_srt+96;
 },
 _c7oS8() //  [R1]
         { []
         }
     {offset
       c7oS8: // global
           R3 = R1;
           R2 = Data.Typeable.mkFunTy5_closure+2;
           Sp = Sp + 8;
           call GHC.Err.error_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7oS8_info" {
     block_c7oS8_info:
         const _c7oS8;
         const 0;
         const 38654705694;
         const S7owJ_srt+104;
 },
 _c7oQH() //  []
         { []
         }
     {offset
       c7oQH: // global
           Hp = Hp + 96;
           if (Hp > HpLim) (likely: False) goto c7oSr; else goto c7oSq;
       c7oSr: // global
           HpAlloc = 96;
           I64[Sp] = block_c7oQH_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c7oSq: // global
           I64[Hp - 88] = sat_s7ouP_info;
           P64[Hp - 72] = P64[Sp + 8];
           I64[Hp - 64] = :_con_info;
           P64[Hp - 56] = Hp - 88;
           P64[Hp - 48] = GHC.Types.[]_closure+1;
           I64[Hp - 40] = sat_s7ouz_info;
           P64[Hp - 24] = P64[Sp + 16];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 62;
           I64[Sp] = block_c7oSj_info;
           R2 = Hp - 14;
           R1 = GHC.Fingerprint.fingerprintFingerprints_closure;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7oQH_info" {
     block_c7oQH_info:
         const _c7oQH;
         const 2;
         const 279172874270;
         const S7owJ_srt+64;
 },
 _c7oSj() //  [R1]
         { []
         }
     {offset
       c7oSj: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c7oSu; else goto c7oSt;
       c7oSu: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7oSt: // global
           _s7ouT::I64 = I64[R1 + 7];
           _s7ouU::I64 = I64[R1 + 15];
           I64[Hp - 48] = Data.Typeable.Internal.TrFun_con_info;
           P64[Hp - 40] = P64[Sp + 16];
           P64[Hp - 32] = P64[Sp + 8];
           I64[Hp - 24] = _s7ouT::I64;
           I64[Hp - 16] = _s7ouU::I64;
           I64[Hp - 8] = Data.Typeable.Internal.SomeTypeRep_con_info;
           P64[Hp] = Hp - 44;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7oSj_info" {
     block_c7oSj_info:
         const _c7oSj;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.678452704 UTC

[section ""data" . Data.Typeable.splitTyConApp_closure" {
     Data.Typeable.splitTyConApp_closure:
         const Data.Typeable.splitTyConApp_info;
         const 0;
 },
 Data.Typeable.splitTyConApp_entry() //  [R2]
         { []
         }
     {offset
       c7oYb: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7oYh; else goto c7oYi;
       c7oYh: // global
           R2 = R2;
           R1 = Data.Typeable.splitTyConApp_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7oYi: // global
           I64[Sp - 8] = block_c7oY8_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7oYn; else goto c7oY9;
       u7oYn: // global
           call _c7oY8(R1) args: 0, res: 0, upd: 0;
       c7oY9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.splitTyConApp_info" {
     Data.Typeable.splitTyConApp_info:
         const Data.Typeable.splitTyConApp_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const S7owJ_srt+136;
 },
 _c7oY8() //  [R1]
         { []
         }
     {offset
       c7oY8: // global
           I64[Sp] = block_c7oYe_info;
           R3 = P64[R1 + 7];
           R2 = GHC.Types.[]_closure+1;
           call Data.Typeable.Internal.$wgo_entry(R3,
                                                  R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7oY8_info" {
     block_c7oY8_info:
         const _c7oY8;
         const 0;
         const 4294967326;
         const S7owJ_srt+136;
 },
 _c7oYe() //  [R1, R2]
         { []
         }
     {offset
       c7oYe: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7oYm; else goto c7oYl;
       c7oYm: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c7oYl: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7oYe_info" {
     block_c7oYe_info:
         const _c7oYe;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.686506698 UTC

[section ""data" . Data.Typeable.typeRepArgs_closure" {
     Data.Typeable.typeRepArgs_closure:
         const Data.Typeable.typeRepArgs_info;
         const 0;
 },
 Data.Typeable.typeRepArgs_entry() //  [R2]
         { []
         }
     {offset
       c7oYM: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7oYQ; else goto c7oYR;
       c7oYQ: // global
           R2 = R2;
           R1 = Data.Typeable.typeRepArgs_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7oYR: // global
           I64[Sp - 8] = block_c7oYJ_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7oYV; else goto c7oYK;
       u7oYV: // global
           call _c7oYJ(R1) args: 0, res: 0, upd: 0;
       c7oYK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeRepArgs_info" {
     Data.Typeable.typeRepArgs_info:
         const Data.Typeable.typeRepArgs_entry;
         const 0;
         const 21474836494;
         const 4294967301;
         const S7owJ_srt+136;
 },
 _c7oYJ() //  [R1]
         { []
         }
     {offset
       c7oYJ: // global
           I64[Sp] = block_c7oYP_info;
           R3 = P64[R1 + 7];
           R2 = GHC.Types.[]_closure+1;
           call Data.Typeable.Internal.$wgo_entry(R3,
                                                  R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7oYJ_info" {
     block_c7oYJ_info:
         const _c7oYJ;
         const 0;
         const 4294967326;
         const S7owJ_srt+136;
 },
 _c7oYP() //  [R2]
         { []
         }
     {offset
       c7oYP: // global
           R1 = R2 & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7oYP_info" {
     block_c7oYP_info:
         const _c7oYP;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.694147615 UTC

[section ""data" . Data.Typeable.typeRepTyCon_closure" {
     Data.Typeable.typeRepTyCon_closure:
         const Data.Typeable.typeRepTyCon_info;
         const 0;
 },
 Data.Typeable.typeRepTyCon_entry() //  [R2]
         { []
         }
     {offset
       c7oZh: // global
           R2 = R2;
           call Data.Typeable.Internal.someTypeRepTyCon_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeRepTyCon_info" {
     Data.Typeable.typeRepTyCon_info:
         const Data.Typeable.typeRepTyCon_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const S7owJ_srt+160;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.697487989 UTC

[section ""data" . Data.Typeable.typeRepFingerprint_closure" {
     Data.Typeable.typeRepFingerprint_closure:
         const Data.Typeable.typeRepFingerprint_info;
         const 0;
 },
 Data.Typeable.typeRepFingerprint_entry() //  [R2]
         { []
         }
     {offset
       c7oZs: // global
           R2 = R2;
           call Data.Typeable.Internal.someTypeRepFingerprint_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeRepFingerprint_info" {
     Data.Typeable.typeRepFingerprint_info:
         const Data.Typeable.typeRepFingerprint_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const S7owJ_srt+168;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.700729237 UTC

[section ""data" . Data.Typeable.rnfTypeRep_closure" {
     Data.Typeable.rnfTypeRep_closure:
         const Data.Typeable.rnfTypeRep_info;
 },
 Data.Typeable.rnfTypeRep_entry() //  [R2]
         { []
         }
     {offset
       c7oZD: // global
           R2 = R2;
           call Data.Typeable.Internal.rnfSomeTypeRep_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.rnfTypeRep_info" {
     Data.Typeable.rnfTypeRep_info:
         const Data.Typeable.rnfTypeRep_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.704061397 UTC

[section ""data" . Data.Typeable.typeOf1_closure" {
     Data.Typeable.typeOf1_closure:
         const Data.Typeable.typeOf1_info;
 },
 Data.Typeable.typeOf1_entry() //  [R2]
         { []
         }
     {offset
       c7oZO: // global
           R2 = R2;
           call Data.Typeable.Internal.$WSomeTypeRep_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeOf1_info" {
     Data.Typeable.typeOf1_info:
         const Data.Typeable.typeOf1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.707490692 UTC

[section ""data" . Data.Typeable.typeOf2_closure" {
     Data.Typeable.typeOf2_closure:
         const Data.Typeable.typeOf2_info;
 },
 Data.Typeable.typeOf2_entry() //  [R2]
         { []
         }
     {offset
       c7oZZ: // global
           R2 = R2;
           call Data.Typeable.Internal.$WSomeTypeRep_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeOf2_info" {
     Data.Typeable.typeOf2_info:
         const Data.Typeable.typeOf2_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.71081867 UTC

[section ""data" . Data.Typeable.typeOf3_closure" {
     Data.Typeable.typeOf3_closure:
         const Data.Typeable.typeOf3_info;
 },
 Data.Typeable.typeOf3_entry() //  [R2]
         { []
         }
     {offset
       c7p0a: // global
           R2 = R2;
           call Data.Typeable.Internal.$WSomeTypeRep_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeOf3_info" {
     Data.Typeable.typeOf3_info:
         const Data.Typeable.typeOf3_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.714426436 UTC

[section ""data" . Data.Typeable.typeOf4_closure" {
     Data.Typeable.typeOf4_closure:
         const Data.Typeable.typeOf4_info;
 },
 Data.Typeable.typeOf4_entry() //  [R2]
         { []
         }
     {offset
       c7p0l: // global
           R2 = R2;
           call Data.Typeable.Internal.$WSomeTypeRep_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeOf4_info" {
     Data.Typeable.typeOf4_info:
         const Data.Typeable.typeOf4_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.717759049 UTC

[section ""data" . Data.Typeable.typeOf5_closure" {
     Data.Typeable.typeOf5_closure:
         const Data.Typeable.typeOf5_info;
 },
 Data.Typeable.typeOf5_entry() //  [R2]
         { []
         }
     {offset
       c7p0w: // global
           R2 = R2;
           call Data.Typeable.Internal.$WSomeTypeRep_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeOf5_info" {
     Data.Typeable.typeOf5_info:
         const Data.Typeable.typeOf5_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.721618094 UTC

[section ""data" . Data.Typeable.typeOf6_closure" {
     Data.Typeable.typeOf6_closure:
         const Data.Typeable.typeOf6_info;
 },
 Data.Typeable.typeOf6_entry() //  [R2]
         { []
         }
     {offset
       c7p0H: // global
           R2 = R2;
           call Data.Typeable.Internal.$WSomeTypeRep_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeOf6_info" {
     Data.Typeable.typeOf6_info:
         const Data.Typeable.typeOf6_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.724954582 UTC

[section ""data" . Data.Typeable.typeOf7_closure" {
     Data.Typeable.typeOf7_closure:
         const Data.Typeable.typeOf7_info;
 },
 Data.Typeable.typeOf7_entry() //  [R2]
         { []
         }
     {offset
       c7p0S: // global
           R2 = R2;
           call Data.Typeable.Internal.$WSomeTypeRep_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.typeOf7_info" {
     Data.Typeable.typeOf7_info:
         const Data.Typeable.typeOf7_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.727972731 UTC

[section ""data" . Data.Typeable.$trModule3_closure" {
     Data.Typeable.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Typeable.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.73027946 UTC

[section ""data" . Data.Typeable.$trModule1_closure" {
     Data.Typeable.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Typeable.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.731974506 UTC

[section ""data" . Data.Typeable.$trModule_closure" {
     Data.Typeable.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Typeable.$trModule3_closure+1;
         const Data.Typeable.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.734525177 UTC

[section ""data" . Data.Typeable.showsTypeRep_closure" {
     Data.Typeable.showsTypeRep_closure:
         const Data.Typeable.showsTypeRep_info;
         const 0;
 },
 Data.Typeable.showsTypeRep_entry() //  [R2]
         { []
         }
     {offset
       c7p19: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7p1a; else goto c7p1b;
       c7p1a: // global
           R2 = R2;
           R1 = Data.Typeable.showsTypeRep_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7p1b: // global
           I64[Sp - 8] = block_c7p16_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7p1f; else goto c7p17;
       u7p1f: // global
           call _c7p16(R1) args: 0, res: 0, upd: 0;
       c7p17: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Typeable.showsTypeRep_info" {
     Data.Typeable.showsTypeRep_info:
         const Data.Typeable.showsTypeRep_entry;
         const 0;
         const 4402341478414;
         const 4294967301;
         const S7owJ_srt+96;
 },
 _c7p16() //  [R1]
         { []
         }
     {offset
       c7p16: // global
           R3 = P64[R1 + 7];
           R2 = GHC.Show.$fShow(,)1_closure;
           Sp = Sp + 8;
           call Data.Typeable.Internal.showTypeable_entry(R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7p16_info" {
     block_c7p16_info:
         const _c7p16;
         const 0;
         const 4294967326;
         const S7owJ_srt+96;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:41.739487453 UTC

[section ""relreadonly" . S7owJ_srt" {
     S7owJ_srt:
         const Data.Typeable.Internal.sameTypeRep_closure;
         const Data.Typeable.cast_closure;
         const Data.Typeable.eqT_closure;
         const Data.Typeable.gcast_closure;
         const Data.Typeable.gcast1_closure;
         const Data.Typeable.gcast2_closure;
         const Data.Typeable.Internal.mkTrApp_closure;
         const Data.Typeable.Internal.$wmkTrCon_closure;
         const Data.Typeable.Internal.fpTYPELiftedRep_closure;
         const Data.Typeable.Internal.$mApp1_closure;
         const Data.Typeable.funResultTy_closure;
         const Data.Typeable.mkFunTy1_closure;
         const Data.Typeable.Internal.showTypeable_closure;
         const GHC.Err.error_closure;
         const GHC.Fingerprint.fingerprintFingerprints_closure;
         const Data.Typeable.mkFunTy_closure;
         const Data.Typeable.mkFunTy5_closure;
         const Data.Typeable.Internal.$wgo_closure;
         const Data.Typeable.splitTyConApp_closure;
         const Data.Typeable.typeRepArgs_closure;
         const Data.Typeable.Internal.someTypeRepTyCon_closure;
         const Data.Typeable.Internal.someTypeRepFingerprint_closure;
         const Data.Typeable.showsTypeRep_closure;
 }]

