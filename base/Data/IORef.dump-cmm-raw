
==================== Raw Cmm ====================
2018-03-16 16:02:59.263543637 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:02:59.266823578 UTC

[section ""data" . Data.IORef.mkWeakIORef1_closure" {
     Data.IORef.mkWeakIORef1_closure:
         const Data.IORef.mkWeakIORef1_info;
 },
 Data.IORef.mkWeakIORef1_entry() //  [R2, R3]
         { []
         }
     {offset
       c7RIc: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7RIi; else goto c7RIj;
       c7RIi: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.IORef.mkWeakIORef1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7RIj: // global
           I64[Sp - 16] = block_c7RI9_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7RIo; else goto c7RIa;
       u7RIo: // global
           call _c7RI9(R1) args: 0, res: 0, upd: 0;
       c7RIa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.IORef.mkWeakIORef1_info" {
     Data.IORef.mkWeakIORef1_info:
         const Data.IORef.mkWeakIORef1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c7RI9() //  [R1]
         { []
         }
     {offset
       c7RI9: // global
           _s7RBx::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c7RIf_info;
           R3 = _s7RBx::P64;
           R2 = R1;
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call stg_mkWeak#(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RI9_info" {
     block_c7RI9_info:
         const _c7RI9;
         const 1;
         const 30;
 },
 _c7RIf() //  [R1]
         { []
         }
     {offset
       c7RIf: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7RIn; else goto c7RIm;
       c7RIn: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7RIm: // global
           I64[Hp - 8] = GHC.Weak.Weak_con_info;
           P64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RIf_info" {
     block_c7RIf_info:
         const _c7RIf;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.273494476 UTC

[section ""data" . Data.IORef.mkWeakIORef_closure" {
     Data.IORef.mkWeakIORef_closure:
         const Data.IORef.mkWeakIORef_info;
 },
 Data.IORef.mkWeakIORef_entry() //  [R2, R3]
         { []
         }
     {offset
       c7RIG: // global
           R3 = R3;
           R2 = R2;
           call Data.IORef.mkWeakIORef1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.IORef.mkWeakIORef_info" {
     Data.IORef.mkWeakIORef_info:
         const Data.IORef.mkWeakIORef_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.277803838 UTC

[section ""data" . Data.IORef.modifyIORef1_closure" {
     Data.IORef.modifyIORef1_closure:
         const Data.IORef.modifyIORef1_info;
 },
 Data.IORef.modifyIORef1_entry() //  [R2, R3]
         { []
         }
     {offset
       c7RIU: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7RIV; else goto c7RIW;
       c7RIV: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.IORef.modifyIORef1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7RIW: // global
           I64[Sp - 16] = block_c7RIR_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7RJ6; else goto c7RIS;
       u7RJ6: // global
           call _c7RIR(R1) args: 0, res: 0, upd: 0;
       c7RIS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.IORef.modifyIORef1_info" {
     Data.IORef.modifyIORef1_info:
         const Data.IORef.modifyIORef1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c7RIR() //  [R1]
         { []
         }
     {offset
       c7RIR: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c7RJ1; else goto c7RJ0;
       c7RJ1: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7RJ0: // global
           _s7RBJ::P64 = P64[R1 + 7];
           _s7RBM::P64 = P64[_s7RBJ::P64 + 8];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = _s7RBM::P64;
           call MO_WriteBarrier();
           P64[_s7RBJ::P64 + 8] = Hp - 24;
           call "ccall" arg hints:  [PtrHint,
                                     PtrHint]  result hints:  [] dirty_MUT_VAR(BaseReg, _s7RBJ::P64);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RIR_info" {
     block_c7RIR_info:
         const _c7RIR;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.283125301 UTC

[section ""data" . Data.IORef.modifyIORef_closure" {
     Data.IORef.modifyIORef_closure:
         const Data.IORef.modifyIORef_info;
 },
 Data.IORef.modifyIORef_entry() //  [R2, R3]
         { []
         }
     {offset
       c7RJo: // global
           R3 = R3;
           R2 = R2;
           call Data.IORef.modifyIORef1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.IORef.modifyIORef_info" {
     Data.IORef.modifyIORef_info:
         const Data.IORef.modifyIORef_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.287102319 UTC

[section ""data" . Data.IORef.modifyIORef'1_closure" {
     Data.IORef.modifyIORef'1_closure:
         const Data.IORef.modifyIORef'1_info;
 },
 Data.IORef.modifyIORef'1_entry() //  [R2, R3]
         { []
         }
     {offset
       c7RJC: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7RJD; else goto c7RJE;
       c7RJD: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.IORef.modifyIORef'1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7RJE: // global
           I64[Sp - 16] = block_c7RJz_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7RJO; else goto c7RJA;
       u7RJO: // global
           call _c7RJz(R1) args: 0, res: 0, upd: 0;
       c7RJA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.IORef.modifyIORef'1_info" {
     Data.IORef.modifyIORef'1_info:
         const Data.IORef.modifyIORef'1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c7RJz() //  [R1]
         { []
         }
     {offset
       c7RJz: // global
           I64[Sp] = block_c7RJH_info;
           _s7RBT::P64 = P64[R1 + 7];
           R2 = P64[_s7RBT::P64 + 8];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s7RBT::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RJz_info" {
     block_c7RJz_info:
         const _c7RJz;
         const 1;
         const 30;
 },
 _c7RJH() //  [R1]
         { []
         }
     {offset
       c7RJH: // global
           _s7RBT::P64 = P64[Sp + 8];
           call MO_WriteBarrier();
           P64[_s7RBT::P64 + 8] = R1;
           call "ccall" arg hints:  [PtrHint,
                                     PtrHint]  result hints:  [] dirty_MUT_VAR(BaseReg, _s7RBT::P64);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RJH_info" {
     block_c7RJH_info:
         const _c7RJH;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.293645838 UTC

[section ""data" . Data.IORef.modifyIORef'_closure" {
     Data.IORef.modifyIORef'_closure:
         const Data.IORef.modifyIORef'_info;
 },
 Data.IORef.modifyIORef'_entry() //  [R2, R3]
         { []
         }
     {offset
       c7RK7: // global
           R3 = R3;
           R2 = R2;
           call Data.IORef.modifyIORef'1_entry(R3,
                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.IORef.modifyIORef'_info" {
     Data.IORef.modifyIORef'_info:
         const Data.IORef.modifyIORef'_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.296843829 UTC

[section ""data" . Data.IORef.atomicModifyIORef_closure" {
     Data.IORef.atomicModifyIORef_closure:
         const Data.IORef.atomicModifyIORef_info;
 },
 Data.IORef.atomicModifyIORef_entry() //  [R2, R3]
         { []
         }
     {offset
       c7RKi: // global
           R3 = R3;
           R2 = R2;
           call GHC.IORef.atomicModifyIORef1_entry(R3,
                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.IORef.atomicModifyIORef_info" {
     Data.IORef.atomicModifyIORef_info:
         const Data.IORef.atomicModifyIORef_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.303199569 UTC

[section ""data" . Data.IORef.atomicModifyIORef'1_closure" {
     Data.IORef.atomicModifyIORef'1_closure:
         const Data.IORef.atomicModifyIORef'1_info;
 },
 sat_s7RC9_entry() //  [R1, R2]
         { []
         }
     {offset
       c7RKF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7RKJ; else goto c7RKK;
       c7RKJ: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7RKK: // global
           I64[Sp - 8] = block_c7RKD_info;
           R2 = R2;
           R1 = P64[R1 + 7];
           Sp = Sp - 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s7RC9_info" {
     sat_s7RC9_info:
         const sat_s7RC9_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c7RKD() //  [R1]
         { []
         }
     {offset
       c7RKD: // global
           I64[Sp - 8] = block_c7RKI_info;
           _s7RC5::P64 = R1;
           R1 = P64[R1 + 7];
           P64[Sp] = _s7RC5::P64;
           Sp = Sp - 8;
           call stg_ap_0_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RKD_info" {
     block_c7RKD_info:
         const _c7RKD;
         const 0;
         const 30;
 },
 _c7RKI() //  []
         { []
         }
     {offset
       c7RKI: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RKI_info" {
     block_c7RKI_info:
         const _c7RKI;
         const 1;
         const 30;
 },
 Data.IORef.atomicModifyIORef'1_entry() //  [R2, R3]
         { []
         }
     {offset
       c7RKO: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7RKS; else goto c7RKT;
       c7RKS: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.IORef.atomicModifyIORef'1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7RKT: // global
           I64[Sp - 16] = block_c7RKt_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7RL0; else goto c7RKu;
       u7RL0: // global
           call _c7RKt(R1) args: 0, res: 0, upd: 0;
       c7RKu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.IORef.atomicModifyIORef'1_info" {
     Data.IORef.atomicModifyIORef'1_info:
         const Data.IORef.atomicModifyIORef'1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c7RKt() //  [R1]
         { []
         }
     {offset
       c7RKt: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7RKW; else goto c7RKV;
       c7RKW: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7RKV: // global
           _s7RC3::P64 = P64[R1 + 7];
           I64[Hp - 8] = sat_s7RC9_info;
           P64[Hp] = P64[Sp + 8];
           I64[Sp + 8] = block_c7RKP_info;
           R2 = Hp - 7;
           R1 = _s7RC3::P64;
           Sp = Sp + 8;
           call stg_atomicModifyMutVar#(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RKt_info" {
     block_c7RKt_info:
         const _c7RKt;
         const 1;
         const 30;
 },
 _c7RKP() //  [R1]
         { []
         }
     {offset
       c7RKP: // global
           I64[Sp - 8] = block_c7RKR_info;
           _s7RCc::P64 = R1;
           R1 = R1;
           P64[Sp] = _s7RCc::P64;
           Sp = Sp - 8;
           call stg_ap_0_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RKP_info" {
     block_c7RKP_info:
         const _c7RKP;
         const 0;
         const 30;
 },
 _c7RKR() //  []
         { []
         }
     {offset
       c7RKR: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RKR_info" {
     block_c7RKR_info:
         const _c7RKR;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.316074697 UTC

[section ""data" . Data.IORef.atomicModifyIORef'_closure" {
     Data.IORef.atomicModifyIORef'_closure:
         const Data.IORef.atomicModifyIORef'_info;
 },
 Data.IORef.atomicModifyIORef'_entry() //  [R2, R3]
         { []
         }
     {offset
       c7RLy: // global
           R3 = R3;
           R2 = R2;
           call Data.IORef.atomicModifyIORef'1_entry(R3,
                                                     R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.IORef.atomicModifyIORef'_info" {
     Data.IORef.atomicModifyIORef'_info:
         const Data.IORef.atomicModifyIORef'_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.320947742 UTC

[section ""data" . Data.IORef.atomicWriteIORef1_closure" {
     Data.IORef.atomicWriteIORef1_closure:
         const Data.IORef.atomicWriteIORef1_info;
 },
 sat_s7RCl_entry() //  [R1]
         { []
         }
     {offset
       c7RLU: // global
           R1 = P64[R1 + 7];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s7RCl_info" {
     sat_s7RCl_info:
         const sat_s7RCl_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Data.IORef.atomicWriteIORef1_entry() //  [R2, R3]
         { []
         }
     {offset
       c7RLX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7RM1; else goto c7RM2;
       c7RM1: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.IORef.atomicWriteIORef1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7RM2: // global
           I64[Sp - 16] = block_c7RLJ_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7RMc; else goto c7RLK;
       u7RMc: // global
           call _c7RLJ(R1) args: 0, res: 0, upd: 0;
       c7RLK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.IORef.atomicWriteIORef1_info" {
     Data.IORef.atomicWriteIORef1_info:
         const Data.IORef.atomicWriteIORef1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c7RLJ() //  [R1]
         { []
         }
     {offset
       c7RLJ: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c7RM5; else goto c7RM4;
       c7RM5: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7RM4: // global
           _s7RCi::P64 = P64[R1 + 7];
           I64[Hp - 32] = (,)_con_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = GHC.Tuple.()_closure+1;
           I64[Hp - 8] = sat_s7RCl_info;
           P64[Hp] = Hp - 31;
           I64[Sp + 8] = block_c7RLY_info;
           R2 = Hp - 7;
           R1 = _s7RCi::P64;
           Sp = Sp + 8;
           call stg_atomicModifyMutVar#(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RLJ_info" {
     block_c7RLJ_info:
         const _c7RLJ;
         const 1;
         const 30;
 },
 _c7RLY() //  [R1]
         { []
         }
     {offset
       c7RLY: // global
           I64[Sp] = block_c7RM0_info;
           R1 = R1;
           if (R1 & 7 != 0) goto u7RMd; else goto c7RM7;
       u7RMd: // global
           call _c7RM0() args: 0, res: 0, upd: 0;
       c7RM7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RLY_info" {
     block_c7RLY_info:
         const _c7RLY;
         const 0;
         const 30;
 },
 _c7RM0() //  []
         { []
         }
     {offset
       c7RM0: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RM0_info" {
     block_c7RM0_info:
         const _c7RM0;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.330992635 UTC

[section ""data" . Data.IORef.atomicWriteIORef_closure" {
     Data.IORef.atomicWriteIORef_closure:
         const Data.IORef.atomicWriteIORef_info;
 },
 Data.IORef.atomicWriteIORef_entry() //  [R2, R3]
         { []
         }
     {offset
       c7RMF: // global
           R3 = R3;
           R2 = R2;
           call Data.IORef.atomicWriteIORef1_entry(R3,
                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.IORef.atomicWriteIORef_info" {
     Data.IORef.atomicWriteIORef_info:
         const Data.IORef.atomicWriteIORef_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.334357463 UTC

[section ""cstring" . Data.IORef.$trModule4_bytes" {
     Data.IORef.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.336113523 UTC

[section ""data" . Data.IORef.$trModule3_closure" {
     Data.IORef.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.IORef.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.338267529 UTC

[section ""cstring" . Data.IORef.$trModule2_bytes" {
     Data.IORef.$trModule2_bytes:
         I8[] [68,97,116,97,46,73,79,82,101,102]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.33995144 UTC

[section ""data" . Data.IORef.$trModule1_closure" {
     Data.IORef.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.IORef.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.341680815 UTC

[section ""data" . Data.IORef.$trModule_closure" {
     Data.IORef.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.IORef.$trModule3_closure+1;
         const Data.IORef.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.343365831 UTC

[section ""relreadonly" . S7RFf_srt" { S7RFf_srt:
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.487467253 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:02:59.490076495 UTC

[section ""data" . Data.IORef.mkWeakIORef1_closure" {
     Data.IORef.mkWeakIORef1_closure:
         const Data.IORef.mkWeakIORef1_info;
 },
 Data.IORef.mkWeakIORef1_entry() //  [R2, R3]
         { []
         }
     {offset
       c7RNT: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7RNZ; else goto c7RO0;
       c7RNZ: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.IORef.mkWeakIORef1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7RO0: // global
           I64[Sp - 16] = block_c7RNQ_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7RO5; else goto c7RNR;
       u7RO5: // global
           call _c7RNQ(R1) args: 0, res: 0, upd: 0;
       c7RNR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.IORef.mkWeakIORef1_info" {
     Data.IORef.mkWeakIORef1_info:
         const Data.IORef.mkWeakIORef1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c7RNQ() //  [R1]
         { []
         }
     {offset
       c7RNQ: // global
           _s7RMT::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c7RNW_info;
           R3 = _s7RMT::P64;
           R2 = R1;
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call stg_mkWeak#(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RNQ_info" {
     block_c7RNQ_info:
         const _c7RNQ;
         const 1;
         const 30;
 },
 _c7RNW() //  [R1]
         { []
         }
     {offset
       c7RNW: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7RO4; else goto c7RO3;
       c7RO4: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7RO3: // global
           I64[Hp - 8] = GHC.Weak.Weak_con_info;
           P64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RNW_info" {
     block_c7RNW_info:
         const _c7RNW;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.497474495 UTC

[section ""data" . Data.IORef.mkWeakIORef_closure" {
     Data.IORef.mkWeakIORef_closure:
         const Data.IORef.mkWeakIORef_info;
 },
 Data.IORef.mkWeakIORef_entry() //  [R2, R3]
         { []
         }
     {offset
       c7ROq: // global
           R3 = R3;
           R2 = R2;
           call Data.IORef.mkWeakIORef1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.IORef.mkWeakIORef_info" {
     Data.IORef.mkWeakIORef_info:
         const Data.IORef.mkWeakIORef_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.501905846 UTC

[section ""data" . Data.IORef.modifyIORef1_closure" {
     Data.IORef.modifyIORef1_closure:
         const Data.IORef.modifyIORef1_info;
 },
 Data.IORef.modifyIORef1_entry() //  [R2, R3]
         { []
         }
     {offset
       c7ROE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7ROF; else goto c7ROG;
       c7ROF: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.IORef.modifyIORef1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7ROG: // global
           I64[Sp - 16] = block_c7ROB_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7ROQ; else goto c7ROC;
       u7ROQ: // global
           call _c7ROB(R1) args: 0, res: 0, upd: 0;
       c7ROC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.IORef.modifyIORef1_info" {
     Data.IORef.modifyIORef1_info:
         const Data.IORef.modifyIORef1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c7ROB() //  [R1]
         { []
         }
     {offset
       c7ROB: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c7ROL; else goto c7ROK;
       c7ROL: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7ROK: // global
           _s7RN5::P64 = P64[R1 + 7];
           _s7RN8::P64 = P64[_s7RN5::P64 + 8];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = _s7RN8::P64;
           call MO_WriteBarrier();
           P64[_s7RN5::P64 + 8] = Hp - 24;
           call "ccall" arg hints:  [PtrHint,
                                     PtrHint]  result hints:  [] dirty_MUT_VAR(BaseReg, _s7RN5::P64);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7ROB_info" {
     block_c7ROB_info:
         const _c7ROB;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.50799808 UTC

[section ""data" . Data.IORef.modifyIORef_closure" {
     Data.IORef.modifyIORef_closure:
         const Data.IORef.modifyIORef_info;
 },
 Data.IORef.modifyIORef_entry() //  [R2, R3]
         { []
         }
     {offset
       c7RPb: // global
           R3 = R3;
           R2 = R2;
           call Data.IORef.modifyIORef1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.IORef.modifyIORef_info" {
     Data.IORef.modifyIORef_info:
         const Data.IORef.modifyIORef_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.512342115 UTC

[section ""data" . Data.IORef.modifyIORef'1_closure" {
     Data.IORef.modifyIORef'1_closure:
         const Data.IORef.modifyIORef'1_info;
 },
 Data.IORef.modifyIORef'1_entry() //  [R2, R3]
         { []
         }
     {offset
       c7RPp: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7RPq; else goto c7RPr;
       c7RPq: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.IORef.modifyIORef'1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7RPr: // global
           I64[Sp - 16] = block_c7RPm_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7RPB; else goto c7RPn;
       u7RPB: // global
           call _c7RPm(R1) args: 0, res: 0, upd: 0;
       c7RPn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.IORef.modifyIORef'1_info" {
     Data.IORef.modifyIORef'1_info:
         const Data.IORef.modifyIORef'1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c7RPm() //  [R1]
         { []
         }
     {offset
       c7RPm: // global
           I64[Sp] = block_c7RPu_info;
           _s7RNf::P64 = P64[R1 + 7];
           R2 = P64[_s7RNf::P64 + 8];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s7RNf::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RPm_info" {
     block_c7RPm_info:
         const _c7RPm;
         const 1;
         const 30;
 },
 _c7RPu() //  [R1]
         { []
         }
     {offset
       c7RPu: // global
           _s7RNf::P64 = P64[Sp + 8];
           call MO_WriteBarrier();
           P64[_s7RNf::P64 + 8] = R1;
           call "ccall" arg hints:  [PtrHint,
                                     PtrHint]  result hints:  [] dirty_MUT_VAR(BaseReg, _s7RNf::P64);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RPu_info" {
     block_c7RPu_info:
         const _c7RPu;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.519994076 UTC

[section ""data" . Data.IORef.modifyIORef'_closure" {
     Data.IORef.modifyIORef'_closure:
         const Data.IORef.modifyIORef'_info;
 },
 Data.IORef.modifyIORef'_entry() //  [R2, R3]
         { []
         }
     {offset
       c7RPX: // global
           R3 = R3;
           R2 = R2;
           call Data.IORef.modifyIORef'1_entry(R3,
                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.IORef.modifyIORef'_info" {
     Data.IORef.modifyIORef'_info:
         const Data.IORef.modifyIORef'_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.524337366 UTC

[section ""data" . Data.IORef.atomicModifyIORef_closure" {
     Data.IORef.atomicModifyIORef_closure:
         const Data.IORef.atomicModifyIORef_info;
 },
 Data.IORef.atomicModifyIORef_entry() //  [R2, R3]
         { []
         }
     {offset
       c7RQ8: // global
           R3 = R3;
           R2 = R2;
           call GHC.IORef.atomicModifyIORef1_entry(R3,
                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.IORef.atomicModifyIORef_info" {
     Data.IORef.atomicModifyIORef_info:
         const Data.IORef.atomicModifyIORef_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.529708979 UTC

[section ""data" . Data.IORef.atomicModifyIORef'1_closure" {
     Data.IORef.atomicModifyIORef'1_closure:
         const Data.IORef.atomicModifyIORef'1_info;
 },
 sat_s7RNv_entry() //  [R1, R2]
         { []
         }
     {offset
       c7RQv: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7RQz; else goto c7RQA;
       c7RQz: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7RQA: // global
           I64[Sp - 8] = block_c7RQt_info;
           R2 = R2;
           R1 = P64[R1 + 7];
           Sp = Sp - 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s7RNv_info" {
     sat_s7RNv_info:
         const sat_s7RNv_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c7RQt() //  [R1]
         { []
         }
     {offset
       c7RQt: // global
           I64[Sp - 8] = block_c7RQy_info;
           _s7RNr::P64 = R1;
           R1 = P64[R1 + 7];
           P64[Sp] = _s7RNr::P64;
           Sp = Sp - 8;
           call stg_ap_0_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RQt_info" {
     block_c7RQt_info:
         const _c7RQt;
         const 0;
         const 30;
 },
 _c7RQy() //  []
         { []
         }
     {offset
       c7RQy: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RQy_info" {
     block_c7RQy_info:
         const _c7RQy;
         const 1;
         const 30;
 },
 Data.IORef.atomicModifyIORef'1_entry() //  [R2, R3]
         { []
         }
     {offset
       c7RQE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7RQI; else goto c7RQJ;
       c7RQI: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.IORef.atomicModifyIORef'1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7RQJ: // global
           I64[Sp - 16] = block_c7RQj_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7RQQ; else goto c7RQk;
       u7RQQ: // global
           call _c7RQj(R1) args: 0, res: 0, upd: 0;
       c7RQk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.IORef.atomicModifyIORef'1_info" {
     Data.IORef.atomicModifyIORef'1_info:
         const Data.IORef.atomicModifyIORef'1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c7RQj() //  [R1]
         { []
         }
     {offset
       c7RQj: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7RQM; else goto c7RQL;
       c7RQM: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7RQL: // global
           _s7RNp::P64 = P64[R1 + 7];
           I64[Hp - 8] = sat_s7RNv_info;
           P64[Hp] = P64[Sp + 8];
           I64[Sp + 8] = block_c7RQF_info;
           R2 = Hp - 7;
           R1 = _s7RNp::P64;
           Sp = Sp + 8;
           call stg_atomicModifyMutVar#(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RQj_info" {
     block_c7RQj_info:
         const _c7RQj;
         const 1;
         const 30;
 },
 _c7RQF() //  [R1]
         { []
         }
     {offset
       c7RQF: // global
           I64[Sp - 8] = block_c7RQH_info;
           _s7RNy::P64 = R1;
           R1 = R1;
           P64[Sp] = _s7RNy::P64;
           Sp = Sp - 8;
           call stg_ap_0_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RQF_info" {
     block_c7RQF_info:
         const _c7RQF;
         const 0;
         const 30;
 },
 _c7RQH() //  []
         { []
         }
     {offset
       c7RQH: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RQH_info" {
     block_c7RQH_info:
         const _c7RQH;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.54293728 UTC

[section ""data" . Data.IORef.atomicModifyIORef'_closure" {
     Data.IORef.atomicModifyIORef'_closure:
         const Data.IORef.atomicModifyIORef'_info;
 },
 Data.IORef.atomicModifyIORef'_entry() //  [R2, R3]
         { []
         }
     {offset
       c7RRu: // global
           R3 = R3;
           R2 = R2;
           call Data.IORef.atomicModifyIORef'1_entry(R3,
                                                     R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.IORef.atomicModifyIORef'_info" {
     Data.IORef.atomicModifyIORef'_info:
         const Data.IORef.atomicModifyIORef'_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.547903181 UTC

[section ""data" . Data.IORef.atomicWriteIORef1_closure" {
     Data.IORef.atomicWriteIORef1_closure:
         const Data.IORef.atomicWriteIORef1_info;
 },
 sat_s7RNH_entry() //  [R1]
         { []
         }
     {offset
       c7RRQ: // global
           R1 = P64[R1 + 7];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s7RNH_info" {
     sat_s7RNH_info:
         const sat_s7RNH_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Data.IORef.atomicWriteIORef1_entry() //  [R2, R3]
         { []
         }
     {offset
       c7RRT: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7RRX; else goto c7RRY;
       c7RRX: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.IORef.atomicWriteIORef1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7RRY: // global
           I64[Sp - 16] = block_c7RRF_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7RS8; else goto c7RRG;
       u7RS8: // global
           call _c7RRF(R1) args: 0, res: 0, upd: 0;
       c7RRG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.IORef.atomicWriteIORef1_info" {
     Data.IORef.atomicWriteIORef1_info:
         const Data.IORef.atomicWriteIORef1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c7RRF() //  [R1]
         { []
         }
     {offset
       c7RRF: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c7RS1; else goto c7RS0;
       c7RS1: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7RS0: // global
           _s7RNE::P64 = P64[R1 + 7];
           I64[Hp - 32] = (,)_con_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = GHC.Tuple.()_closure+1;
           I64[Hp - 8] = sat_s7RNH_info;
           P64[Hp] = Hp - 31;
           I64[Sp + 8] = block_c7RRU_info;
           R2 = Hp - 7;
           R1 = _s7RNE::P64;
           Sp = Sp + 8;
           call stg_atomicModifyMutVar#(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RRF_info" {
     block_c7RRF_info:
         const _c7RRF;
         const 1;
         const 30;
 },
 _c7RRU() //  [R1]
         { []
         }
     {offset
       c7RRU: // global
           I64[Sp] = block_c7RRW_info;
           R1 = R1;
           if (R1 & 7 != 0) goto u7RS9; else goto c7RS3;
       u7RS9: // global
           call _c7RRW() args: 0, res: 0, upd: 0;
       c7RS3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RRU_info" {
     block_c7RRU_info:
         const _c7RRU;
         const 0;
         const 30;
 },
 _c7RRW() //  []
         { []
         }
     {offset
       c7RRW: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7RRW_info" {
     block_c7RRW_info:
         const _c7RRW;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.558650096 UTC

[section ""data" . Data.IORef.atomicWriteIORef_closure" {
     Data.IORef.atomicWriteIORef_closure:
         const Data.IORef.atomicWriteIORef_info;
 },
 Data.IORef.atomicWriteIORef_entry() //  [R2, R3]
         { []
         }
     {offset
       c7RSJ: // global
           R3 = R3;
           R2 = R2;
           call Data.IORef.atomicWriteIORef1_entry(R3,
                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.IORef.atomicWriteIORef_info" {
     Data.IORef.atomicWriteIORef_info:
         const Data.IORef.atomicWriteIORef_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.56249143 UTC

[section ""cstring" . Data.IORef.$trModule4_bytes" {
     Data.IORef.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.564194234 UTC

[section ""data" . Data.IORef.$trModule3_closure" {
     Data.IORef.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.IORef.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.565931723 UTC

[section ""cstring" . Data.IORef.$trModule2_bytes" {
     Data.IORef.$trModule2_bytes:
         I8[] [68,97,116,97,46,73,79,82,101,102]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.567655414 UTC

[section ""data" . Data.IORef.$trModule1_closure" {
     Data.IORef.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.IORef.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.56949851 UTC

[section ""data" . Data.IORef.$trModule_closure" {
     Data.IORef.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.IORef.$trModule3_closure+1;
         const Data.IORef.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:59.571186503 UTC

[section ""relreadonly" . S7RSV_srt" { S7RSV_srt:
 }]

