
==================== Raw Cmm ====================
2018-03-16 16:00:10.63006454 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:00:10.632264077 UTC

[section ""data" . Data.Ord.$fFunctorDown2_closure" {
     Data.Ord.$fFunctorDown2_closure:
         const Data.Ord.$fFunctorDown2_info;
 },
 Data.Ord.$fFunctorDown2_entry() //  [R2]
         { []
         }
     {offset
       c5d4L: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fFunctorDown2_info" {
     Data.Ord.$fFunctorDown2_info:
         const Data.Ord.$fFunctorDown2_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.638573819 UTC

[section ""data" . Data.Ord.$fFunctorDown1_closure" {
     Data.Ord.$fFunctorDown1_closure:
         const Data.Ord.$fFunctorDown1_info;
 },
 Data.Ord.$fFunctorDown1_entry() //  [R2]
         { []
         }
     {offset
       c5d4W: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fFunctorDown1_info" {
     Data.Ord.$fFunctorDown1_info:
         const Data.Ord.$fFunctorDown1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.64419367 UTC

[section ""data" . Data.Ord.$fFunctorDown_closure" {
     Data.Ord.$fFunctorDown_closure:
         const GHC.Base.C:Functor_con_info;
         const Data.Ord.$fFunctorDown2_closure+1;
         const Data.Ord.$fFunctorDown1_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.647712915 UTC

[section ""data" . Data.Ord.$fApplicativeDown3_closure" {
     Data.Ord.$fApplicativeDown3_closure:
         const Data.Ord.$fApplicativeDown3_info;
 },
 Data.Ord.$fApplicativeDown3_entry() //  [R2]
         { []
         }
     {offset
       c5d58: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fApplicativeDown3_info" {
     Data.Ord.$fApplicativeDown3_info:
         const Data.Ord.$fApplicativeDown3_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.65393893 UTC

[section ""data" . Data.Ord.$fApplicativeDown4_closure" {
     Data.Ord.$fApplicativeDown4_closure:
         const Data.Ord.$fApplicativeDown4_info;
 },
 Data.Ord.$fApplicativeDown4_entry() //  [R2]
         { []
         }
     {offset
       c5d5j: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fApplicativeDown4_info" {
     Data.Ord.$fApplicativeDown4_info:
         const Data.Ord.$fApplicativeDown4_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.659084434 UTC

[section ""data" . Data.Ord.$fApplicativeDown2_closure" {
     Data.Ord.$fApplicativeDown2_closure:
         const Data.Ord.$fApplicativeDown2_info;
 },
 Data.Ord.$fApplicativeDown2_entry() //  [R2, R3]
         { []
         }
     {offset
       c5d5u: // global
           _s5cDu::P64 = R2;
           R2 = R3;
           R1 = _s5cDu::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fApplicativeDown2_info" {
     Data.Ord.$fApplicativeDown2_info:
         const Data.Ord.$fApplicativeDown2_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.665037372 UTC

[section ""data" . Data.Ord.$fApplicativeDown_$c*>_closure" {
     Data.Ord.$fApplicativeDown_$c*>_closure:
         const Data.Ord.$fApplicativeDown_$c*>_info;
 },
 Data.Ord.$fApplicativeDown_$c*>_entry() //  [R3]
         { []
         }
     {offset
       c5d5F: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fApplicativeDown_$c*>_info" {
     Data.Ord.$fApplicativeDown_$c*>_info:
         const Data.Ord.$fApplicativeDown_$c*>_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.671014627 UTC

[section ""data" . Data.Ord.$fApplicativeDown1_closure" {
     Data.Ord.$fApplicativeDown1_closure:
         const Data.Ord.$fApplicativeDown1_info;
 },
 Data.Ord.$fApplicativeDown1_entry() //  [R2]
         { []
         }
     {offset
       c5d5Q: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fApplicativeDown1_info" {
     Data.Ord.$fApplicativeDown1_info:
         const Data.Ord.$fApplicativeDown1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.675985761 UTC

[section ""data" . Data.Ord.$fApplicativeDown_closure" {
     Data.Ord.$fApplicativeDown_closure:
         const GHC.Base.C:Applicative_con_info;
         const Data.Ord.$fFunctorDown_closure+1;
         const Data.Ord.$fApplicativeDown4_closure+1;
         const Data.Ord.$fApplicativeDown3_closure+1;
         const Data.Ord.$fApplicativeDown2_closure+2;
         const Data.Ord.$fApplicativeDown_$c*>_closure+2;
         const Data.Ord.$fApplicativeDown1_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.680712721 UTC

[section ""data" . Data.Ord.$fMonadDown_$c>>=_closure" {
     Data.Ord.$fMonadDown_$c>>=_closure:
         const Data.Ord.$fMonadDown_$c>>=_info;
 },
 Data.Ord.$fMonadDown_$c>>=_entry() //  [R2, R3]
         { []
         }
     {offset
       c5d62: // global
           R2 = R2;
           R1 = R3;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fMonadDown_$c>>=_info" {
     Data.Ord.$fMonadDown_$c>>=_info:
         const Data.Ord.$fMonadDown_$c>>=_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.68770255 UTC

[section ""data" . Data.Ord.$fMonadDown_$c>>_closure" {
     Data.Ord.$fMonadDown_$c>>_closure:
         const Data.Ord.$fMonadDown_$c>>_info;
 },
 Data.Ord.$fMonadDown_$c>>_entry() //  [R2, R3]
         { []
         }
     {offset
       c5d6d: // global
           R3 = R3;
           R2 = R2;
           call Data.Ord.$fApplicativeDown_$c*>_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fMonadDown_$c>>_info" {
     Data.Ord.$fMonadDown_$c>>_info:
         const Data.Ord.$fMonadDown_$c>>_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.693856461 UTC

[section ""data" . lvl_r5cDk_closure" {
     lvl_r5cDk_closure:
         const lvl_r5cDk_info;
         const 0;
 },
 lvl_r5cDk_entry() //  [R2]
         { []
         }
     {offset
       c5d6o: // global
           R2 = R2;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . lvl_r5cDk_info" {
     lvl_r5cDk_info:
         const lvl_r5cDk_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const S5cGK_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.698896764 UTC

[section ""data" . Data.Ord.$fMonadDown_closure" {
     Data.Ord.$fMonadDown_closure:
         const GHC.Base.C:Monad_con_info;
         const Data.Ord.$fApplicativeDown_closure+1;
         const Data.Ord.$fMonadDown_$c>>=_closure+2;
         const Data.Ord.$fMonadDown_$c>>_closure+2;
         const Data.Ord.$fApplicativeDown4_closure+1;
         const lvl_r5cDk_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.705369709 UTC

[section ""data" . Data.Ord.$fSemigroupDown_closure" {
     Data.Ord.$fSemigroupDown_closure:
         const Data.Ord.$fSemigroupDown_info;
 },
 sat_s5cDG_entry() //  [R1]
         { []
         }
     {offset
       c5d6E: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5d6F; else goto c5d6G;
       c5d6F: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5d6G: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.stimes_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cDG_info" {
     sat_s5cDG_info:
         const sat_s5cDG_entry;
         const 1;
         const 16;
 },
 sat_s5cDF_entry() //  [R1]
         { []
         }
     {offset
       c5d6L: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5d6M; else goto c5d6N;
       c5d6M: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5d6N: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.sconcat_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cDF_info" {
     sat_s5cDF_info:
         const sat_s5cDF_entry;
         const 1;
         const 16;
 },
 sat_s5cDE_entry() //  [R1]
         { []
         }
     {offset
       c5d6S: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5d6T; else goto c5d6U;
       c5d6T: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5d6U: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.<>_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cDE_info" {
     sat_s5cDE_info:
         const sat_s5cDE_entry;
         const 1;
         const 16;
 },
 Data.Ord.$fSemigroupDown_entry() //  [R2]
         { []
         }
     {offset
       c5d6W: // global
           Hp = Hp + 104;
           if (Hp > HpLim) (likely: False) goto c5d70; else goto c5d6Z;
       c5d70: // global
           HpAlloc = 104;
           R2 = R2;
           R1 = Data.Ord.$fSemigroupDown_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5d6Z: // global
           I64[Hp - 96] = sat_s5cDG_info;
           P64[Hp - 80] = R2;
           I64[Hp - 72] = sat_s5cDF_info;
           P64[Hp - 56] = R2;
           I64[Hp - 48] = sat_s5cDE_info;
           P64[Hp - 32] = R2;
           I64[Hp - 24] = GHC.Base.C:Semigroup_con_info;
           P64[Hp - 16] = Hp - 48;
           P64[Hp - 8] = Hp - 72;
           P64[Hp] = Hp - 96;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fSemigroupDown_info" {
     Data.Ord.$fSemigroupDown_info:
         const Data.Ord.$fSemigroupDown_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.722734951 UTC

[section ""data" . Data.Ord.$fMonoidDown_$cp1Monoid_closure" {
     Data.Ord.$fMonoidDown_$cp1Monoid_closure:
         const Data.Ord.$fMonoidDown_$cp1Monoid_info;
 },
 sat_s5cDI_entry() //  [R1]
         { []
         }
     {offset
       c5d7t: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5d7u; else goto c5d7v;
       c5d7u: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5d7v: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.$p1Monoid_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cDI_info" {
     sat_s5cDI_info:
         const sat_s5cDI_entry;
         const 1;
         const 16;
 },
 Data.Ord.$fMonoidDown_$cp1Monoid_entry() //  [R2]
         { []
         }
     {offset
       c5d7w: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5d7A; else goto c5d7z;
       c5d7A: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Data.Ord.$fMonoidDown_$cp1Monoid_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5d7z: // global
           I64[Hp - 16] = sat_s5cDI_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           call Data.Ord.$fSemigroupDown_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fMonoidDown_$cp1Monoid_info" {
     Data.Ord.$fMonoidDown_$cp1Monoid_info:
         const Data.Ord.$fMonoidDown_$cp1Monoid_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.736050607 UTC

[section ""data" . Data.Ord.$fMonoidDown_closure" {
     Data.Ord.$fMonoidDown_closure:
         const Data.Ord.$fMonoidDown_info;
 },
 sat_s5cDN_entry() //  [R1]
         { []
         }
     {offset
       c5d7R: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5d7S; else goto c5d7T;
       c5d7S: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5d7T: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.mconcat_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cDN_info" {
     sat_s5cDN_info:
         const sat_s5cDN_entry;
         const 1;
         const 16;
 },
 sat_s5cDM_entry() //  [R1]
         { []
         }
     {offset
       c5d7Y: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5d7Z; else goto c5d80;
       c5d7Z: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5d80: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.mappend_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cDM_info" {
     sat_s5cDM_info:
         const sat_s5cDM_entry;
         const 1;
         const 16;
 },
 sat_s5cDL_entry() //  [R1]
         { []
         }
     {offset
       c5d85: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5d86; else goto c5d87;
       c5d86: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5d87: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.mempty_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cDL_info" {
     sat_s5cDL_info:
         const sat_s5cDL_entry;
         const 1;
         const 16;
 },
 sat_s5cDK_entry() //  [R1]
         { []
         }
     {offset
       c5d8c: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5d8d; else goto c5d8e;
       c5d8d: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5d8e: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Ord.$fMonoidDown_$cp1Monoid_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cDK_info" {
     sat_s5cDK_info:
         const sat_s5cDK_entry;
         const 1;
         const 16;
 },
 Data.Ord.$fMonoidDown_entry() //  [R2]
         { []
         }
     {offset
       c5d8g: // global
           Hp = Hp + 136;
           if (Hp > HpLim) (likely: False) goto c5d8k; else goto c5d8j;
       c5d8k: // global
           HpAlloc = 136;
           R2 = R2;
           R1 = Data.Ord.$fMonoidDown_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5d8j: // global
           I64[Hp - 128] = sat_s5cDN_info;
           P64[Hp - 112] = R2;
           I64[Hp - 104] = sat_s5cDM_info;
           P64[Hp - 88] = R2;
           I64[Hp - 80] = sat_s5cDL_info;
           P64[Hp - 64] = R2;
           I64[Hp - 56] = sat_s5cDK_info;
           P64[Hp - 40] = R2;
           I64[Hp - 32] = GHC.Base.C:Monoid_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 80;
           P64[Hp - 8] = Hp - 104;
           P64[Hp] = Hp - 128;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fMonoidDown_info" {
     Data.Ord.$fMonoidDown_info:
         const Data.Ord.$fMonoidDown_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.759563207 UTC

[section ""data" . Data.Ord.$fNumDown_closure" {
     Data.Ord.$fNumDown_closure:
         const Data.Ord.$fNumDown_info;
 },
 sat_s5cDV_entry() //  [R1]
         { []
         }
     {offset
       c5d8S: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5d8T; else goto c5d8U;
       c5d8T: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5d8U: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Num.fromInteger_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cDV_info" {
     sat_s5cDV_info:
         const sat_s5cDV_entry;
         const 1;
         const 16;
 },
 sat_s5cDU_entry() //  [R1]
         { []
         }
     {offset
       c5d8Z: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5d90; else goto c5d91;
       c5d90: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5d91: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Num.signum_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cDU_info" {
     sat_s5cDU_info:
         const sat_s5cDU_entry;
         const 1;
         const 16;
 },
 sat_s5cDT_entry() //  [R1]
         { []
         }
     {offset
       c5d96: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5d97; else goto c5d98;
       c5d97: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5d98: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Num.abs_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cDT_info" {
     sat_s5cDT_info:
         const sat_s5cDT_entry;
         const 1;
         const 16;
 },
 sat_s5cDS_entry() //  [R1]
         { []
         }
     {offset
       c5d9d: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5d9e; else goto c5d9f;
       c5d9e: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5d9f: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Num.negate_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cDS_info" {
     sat_s5cDS_info:
         const sat_s5cDS_entry;
         const 1;
         const 16;
 },
 sat_s5cDR_entry() //  [R1]
         { []
         }
     {offset
       c5d9k: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5d9l; else goto c5d9m;
       c5d9l: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5d9m: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Num.*_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cDR_info" {
     sat_s5cDR_info:
         const sat_s5cDR_entry;
         const 1;
         const 16;
 },
 sat_s5cDQ_entry() //  [R1]
         { []
         }
     {offset
       c5d9r: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5d9s; else goto c5d9t;
       c5d9s: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5d9t: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Num.-_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cDQ_info" {
     sat_s5cDQ_info:
         const sat_s5cDQ_entry;
         const 1;
         const 16;
 },
 sat_s5cDP_entry() //  [R1]
         { []
         }
     {offset
       c5d9y: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5d9z; else goto c5d9A;
       c5d9z: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5d9A: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Num.+_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cDP_info" {
     sat_s5cDP_info:
         const sat_s5cDP_entry;
         const 1;
         const 16;
 },
 Data.Ord.$fNumDown_entry() //  [R2]
         { []
         }
     {offset
       c5d9C: // global
           Hp = Hp + 232;
           if (Hp > HpLim) (likely: False) goto c5d9G; else goto c5d9F;
       c5d9G: // global
           HpAlloc = 232;
           R2 = R2;
           R1 = Data.Ord.$fNumDown_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5d9F: // global
           I64[Hp - 224] = sat_s5cDV_info;
           P64[Hp - 208] = R2;
           I64[Hp - 200] = sat_s5cDU_info;
           P64[Hp - 184] = R2;
           I64[Hp - 176] = sat_s5cDT_info;
           P64[Hp - 160] = R2;
           I64[Hp - 152] = sat_s5cDS_info;
           P64[Hp - 136] = R2;
           I64[Hp - 128] = sat_s5cDR_info;
           P64[Hp - 112] = R2;
           I64[Hp - 104] = sat_s5cDQ_info;
           P64[Hp - 88] = R2;
           I64[Hp - 80] = sat_s5cDP_info;
           P64[Hp - 64] = R2;
           I64[Hp - 56] = GHC.Num.C:Num_con_info;
           P64[Hp - 48] = Hp - 80;
           P64[Hp - 40] = Hp - 104;
           P64[Hp - 32] = Hp - 128;
           P64[Hp - 24] = Hp - 152;
           P64[Hp - 16] = Hp - 176;
           P64[Hp - 8] = Hp - 200;
           P64[Hp] = Hp - 224;
           R1 = Hp - 55;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fNumDown_info" {
     Data.Ord.$fNumDown_info:
         const Data.Ord.$fNumDown_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.783088537 UTC

[section ""cstring" . Data.Ord.$fReadDown4_bytes" {
     Data.Ord.$fReadDown4_bytes:
         I8[] [68,111,119,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.786168883 UTC

[section ""data" . Data.Ord.$fReadDown3_closure" {
     Data.Ord.$fReadDown3_closure:
         const Data.Ord.$fReadDown3_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Ord.$fReadDown3_entry() //  [R1]
         { []
         }
     {offset
       c5das: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dat; else goto c5dau;
       c5dat: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dau: // global
           (_c5dap::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5dap::I64 == 0) goto c5dar; else goto c5daq;
       c5dar: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5daq: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5dap::I64;
           R2 = Data.Ord.$fReadDown4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Ord.$fReadDown3_info" {
     Data.Ord.$fReadDown3_info:
         const Data.Ord.$fReadDown3_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.79072039 UTC

[section ""data" . Data.Ord.$fReadDown_lexeme_closure" {
     Data.Ord.$fReadDown_lexeme_closure:
         const Text.Read.Lex.Ident_con_info;
         const Data.Ord.$fReadDown3_closure;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.792499475 UTC

[section ""data" . Data.Ord.$fReadDown2_closure" {
     Data.Ord.$fReadDown2_closure:
         const GHC.Types.I#_con_info;
         const 11;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.798573631 UTC

[section ""data" . Data.Ord.$fReadDown1_closure" {
     Data.Ord.$fReadDown1_closure:
         const Data.Ord.$fReadDown1_info;
         const 0;
 },
 sat_s5cE6_entry() //  [R1, R2]
         { []
         }
     {offset
       c5db6: // global
           R2 = R2;
           R1 = P64[R1 + 7];
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cE6_info" {
     sat_s5cE6_info:
         const sat_s5cE6_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_s5cE7_entry() //  [R1, R2]
         { []
         }
     {offset
       c5db9: // global
           _s5cE4::P64 = R2;
           _s5cE7::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c5dba; else goto c5dbb;
       c5dbb: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5dbd; else goto c5dbc;
       c5dbd: // global
           HpAlloc = 16;
           goto c5dba;
       c5dba: // global
           R2 = _s5cE4::P64;
           R1 = _s5cE7::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5dbc: // global
           _s5cDW::P64 = P64[_s5cE7::P64 + 7];
           _s5cE0::P64 = P64[_s5cE7::P64 + 15];
           I64[Hp - 8] = sat_s5cE6_info;
           P64[Hp] = _s5cE0::P64;
           R2 = _s5cDW::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Data.Ord.$fReadDown2_closure+1;
           P64[Sp - 8] = Hp - 7;
           Sp = Sp - 24;
           call GHC.Read.readPrec_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cE7_info" {
     sat_s5cE7_info:
         const sat_s5cE7_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_s5cEa_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dbe: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5dbf; else goto c5dbg;
       c5dbf: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dbg: // global
           I64[Sp - 24] = block_c5daN_info;
           _s5cDW::P64 = P64[R1 + 6];
           R1 = R2;
           P64[Sp - 16] = _s5cDW::P64;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5dbt; else goto c5daO;
       u5dbt: // global
           call _c5daN(R1) args: 0, res: 0, upd: 0;
       c5daO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cEa_info" {
     sat_s5cEa_info:
         const sat_s5cEa_entry;
         const 1;
         const 12884901897;
         const 8589934607;
         const S5cGK_srt+8;
 },
 _c5daN() //  [R1]
         { []
         }
     {offset
       c5daN: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5dbj; else goto c5dbi;
       c5dbj: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5dbi: // global
           if (%MO_S_Gt_W64(I64[R1 + 7], 10)) goto c5dbl; else goto c5dbp;
       c5dbl: // global
           Hp = Hp - 24;
           R1 = Text.ParserCombinators.ReadP.Fail_closure+3;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5dbp: // global
           I64[Hp - 16] = sat_s5cE7_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = P64[Sp + 16];
           I64[Sp + 16] = block_c5dbm_info;
           R3 = Hp - 15;
           R2 = Data.Ord.$fReadDown_lexeme_closure+4;
           Sp = Sp + 16;
           call Text.Read.Lex.$wexpect_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5daN_info" {
     block_c5daN_info:
         const _c5daN;
         const 2;
         const 12884901918;
         const S5cGK_srt+8;
 },
 _c5dbm() //  [R1]
         { []
         }
     {offset
       c5dbm: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5dbs; else goto c5dbr;
       c5dbs: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5dbr: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5dbm_info" {
     block_c5dbm_info:
         const _c5dbm;
         const 0;
         const 30;
 },
 Data.Ord.$fReadDown1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5dbu: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5dby; else goto c5dbx;
       c5dby: // global
           HpAlloc = 16;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$fReadDown1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dbx: // global
           I64[Hp - 8] = sat_s5cEa_info;
           P64[Hp] = R2;
           R4 = R4;
           R3 = R3;
           R2 = Hp - 6;
           call GHC.Read.list3_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fReadDown1_info" {
     Data.Ord.$fReadDown1_info:
         const Data.Ord.$fReadDown1_entry;
         const 0;
         const 64424509454;
         const 12884901911;
         const S5cGK_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.817187321 UTC

[section ""data" . Data.Ord.$fReadDown_$creadsPrec_closure" {
     Data.Ord.$fReadDown_$creadsPrec_closure:
         const Data.Ord.$fReadDown_$creadsPrec_info;
         const 0;
 },
 sat_s5cEd_entry() //  [R1]
         { []
         }
     {offset
       c5dc8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dc9; else goto c5dca;
       c5dc9: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dca: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R4 = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Ord.$fReadDown1_entry(R4,
                                           R3,
                                           R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cEd_info" {
     sat_s5cEd_info:
         const sat_s5cEd_entry;
         const 2;
         const 4294967314;
         const S5cGK_srt+32;
 },
 Data.Ord.$fReadDown_$creadsPrec_entry() //  [R2, R3]
         { []
         }
     {offset
       c5dcb: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5dcf; else goto c5dce;
       c5dcf: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$fReadDown_$creadsPrec_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dce: // global
           I64[Hp - 24] = sat_s5cEd_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R2 = Hp - 24;
           R1 = Text.ParserCombinators.ReadP.run_closure+2;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fReadDown_$creadsPrec_info" {
     Data.Ord.$fReadDown_$creadsPrec_info:
         const Data.Ord.$fReadDown_$creadsPrec_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S5cGK_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.825330693 UTC

[section ""data" . Data.Ord.$fReadDown_$creadListPrec_closure" {
     Data.Ord.$fReadDown_$creadListPrec_closure:
         const Data.Ord.$fReadDown_$creadListPrec_info;
         const 0;
 },
 sat_s5cEf_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dcx: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Ord.$fReadDown1_entry(R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cEf_info" {
     sat_s5cEf_info:
         const sat_s5cEf_entry;
         const 1;
         const 4294967305;
         const 8589934607;
         const S5cGK_srt+32;
 },
 Data.Ord.$fReadDown_$creadListPrec_entry() //  [R2]
         { []
         }
     {offset
       c5dcA: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5dcE; else goto c5dcD;
       c5dcE: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = Data.Ord.$fReadDown_$creadListPrec_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5dcD: // global
           I64[Hp - 8] = sat_s5cEf_info;
           P64[Hp] = R2;
           R2 = Hp - 6;
           call GHC.Read.list_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fReadDown_$creadListPrec_info" {
     Data.Ord.$fReadDown_$creadListPrec_info:
         const Data.Ord.$fReadDown_$creadListPrec_entry;
         const 0;
         const 55834574862;
         const 4294967301;
         const S5cGK_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.834190839 UTC

[section ""data" . Data.Ord.$fReadDown_$creadList_closure" {
     Data.Ord.$fReadDown_$creadList_closure:
         const Data.Ord.$fReadDown_$creadList_info;
         const 0;
 },
 sat_s5cEh_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dcZ: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Ord.$fReadDown1_entry(R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cEh_info" {
     sat_s5cEh_info:
         const sat_s5cEh_entry;
         const 1;
         const 4294967305;
         const 8589934607;
         const S5cGK_srt+32;
 },
 sat_s5cEi_entry() //  [R1]
         { []
         }
     {offset
       c5dd2: // global
           _s5cEi::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto c5dd3; else goto c5dd4;
       c5dd4: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5dd6; else goto c5dd5;
       c5dd6: // global
           HpAlloc = 16;
           goto c5dd3;
       c5dd3: // global
           R1 = _s5cEi::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dd5: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5cEi::P64;
           _s5cEg::P64 = P64[_s5cEi::P64 + 16];
           I64[Hp - 8] = sat_s5cEh_info;
           P64[Hp] = _s5cEg::P64;
           R2 = Hp - 6;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = GHC.Read.$fRead()7_closure;
           P64[Sp - 24] = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           Sp = Sp - 40;
           call GHC.Read.list_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cEi_info" {
     sat_s5cEi_info:
         const sat_s5cEi_entry;
         const 1;
         const 21474836496;
         const S5cGK_srt+32;
 },
 Data.Ord.$fReadDown_$creadList_entry() //  [R2]
         { []
         }
     {offset
       c5dd7: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5ddb; else goto c5dda;
       c5ddb: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Data.Ord.$fReadDown_$creadList_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5dda: // global
           I64[Hp - 16] = sat_s5cEi_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           R1 = Text.ParserCombinators.ReadP.run_closure+2;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fReadDown_$creadList_info" {
     Data.Ord.$fReadDown_$creadList_info:
         const Data.Ord.$fReadDown_$creadList_entry;
         const 0;
         const 90194313230;
         const 4294967301;
         const S5cGK_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.845212391 UTC

[section ""data" . Data.Ord.$fReadDown_closure" {
     Data.Ord.$fReadDown_closure:
         const Data.Ord.$fReadDown_info;
         const 0;
 },
 sat_s5cEn_entry() //  [R1]
         { []
         }
     {offset
       c5ddv: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5ddw; else goto c5ddx;
       c5ddw: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5ddx: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Ord.$fReadDown_$creadListPrec_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cEn_info" {
     sat_s5cEn_info:
         const sat_s5cEn_entry;
         const 1;
         const 4294967312;
         const S5cGK_srt+56;
 },
 sat_s5cEm_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5ddD: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Ord.$fReadDown1_entry(R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cEm_info" {
     sat_s5cEm_info:
         const sat_s5cEm_entry;
         const 1;
         const 4294967305;
         const 8589934607;
         const S5cGK_srt+32;
 },
 sat_s5cEl_entry() //  [R1]
         { []
         }
     {offset
       c5ddK: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5ddL; else goto c5ddM;
       c5ddL: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5ddM: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Ord.$fReadDown_$creadList_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cEl_info" {
     sat_s5cEl_info:
         const sat_s5cEl_entry;
         const 1;
         const 4294967312;
         const S5cGK_srt+64;
 },
 sat_s5cEk_entry() //  [R1, R2]
         { []
         }
     {offset
       c5ddS: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Ord.$fReadDown_$creadsPrec_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cEk_info" {
     sat_s5cEk_info:
         const sat_s5cEk_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5cGK_srt+40;
 },
 Data.Ord.$fReadDown_entry() //  [R2]
         { []
         }
     {offset
       c5ddW: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto c5de0; else goto c5ddZ;
       c5de0: // global
           HpAlloc = 120;
           R2 = R2;
           R1 = Data.Ord.$fReadDown_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5ddZ: // global
           I64[Hp - 112] = sat_s5cEn_info;
           P64[Hp - 96] = R2;
           I64[Hp - 88] = sat_s5cEm_info;
           P64[Hp - 80] = R2;
           I64[Hp - 72] = sat_s5cEl_info;
           P64[Hp - 56] = R2;
           I64[Hp - 48] = sat_s5cEk_info;
           P64[Hp - 40] = R2;
           I64[Hp - 32] = GHC.Read.C:Read_con_info;
           P64[Hp - 24] = Hp - 47;
           P64[Hp - 16] = Hp - 72;
           P64[Hp - 8] = Hp - 86;
           P64[Hp] = Hp - 112;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fReadDown_info" {
     Data.Ord.$fReadDown_info:
         const Data.Ord.$fReadDown_entry;
         const 0;
         const 253403070478;
         const 4294967301;
         const S5cGK_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.858117565 UTC

[section ""cstring" . Data.Ord.$fShowDown3_bytes" {
     Data.Ord.$fShowDown3_bytes:
         I8[] [68,111,119,110,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.860700966 UTC

[section ""data" . Data.Ord.$fShowDown2_closure" {
     Data.Ord.$fShowDown2_closure:
         const Data.Ord.$fShowDown2_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Ord.$fShowDown2_entry() //  [R1]
         { []
         }
     {offset
       c5dev: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dew; else goto c5dex;
       c5dew: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dex: // global
           (_c5des::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5des::I64 == 0) goto c5deu; else goto c5det;
       c5deu: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5det: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5des::I64;
           R2 = Data.Ord.$fShowDown3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Ord.$fShowDown2_info" {
     Data.Ord.$fShowDown2_info:
         const Data.Ord.$fShowDown2_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.871789141 UTC

[section ""data" . Data.Ord.$w$cshowsPrec_closure" {
     Data.Ord.$w$cshowsPrec_closure:
         const Data.Ord.$w$cshowsPrec_info;
         const 0;
 },
 g_s5cEr_entry() //  [R1]
         { []
         }
     {offset
       c5deN: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5deO; else goto c5deP;
       c5deO: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5deP: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Data.Ord.$fReadDown2_closure+1;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 40;
           call GHC.Show.showsPrec_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . g_s5cEr_info" {
     g_s5cEr_info:
         const g_s5cEr_entry;
         const 2;
         const 18;
 },
 sat_s5cEu_entry() //  [R1]
         { []
         }
     {offset
       c5df2: // global
           R2 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cEu_info" {
     sat_s5cEu_info:
         const sat_s5cEu_entry;
         const 2;
         const 18;
 },
 sat_s5cEv_entry() //  [R1, R2]
         { []
         }
     {offset
       c5df5: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5df9; else goto c5df8;
       c5df9: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5df8: // global
           _s5cEr::P64 = P64[R1 + 7];
           I64[Hp - 24] = sat_s5cEu_info;
           P64[Hp - 8] = _s5cEr::P64;
           P64[Hp] = R2;
           R3 = Hp - 24;
           R2 = Data.Ord.$fShowDown2_closure;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cEv_info" {
     sat_s5cEv_info:
         const sat_s5cEv_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5cGK_srt+80;
 },
 sat_s5cEy_entry() //  [R1]
         { []
         }
     {offset
       c5dfp: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5dft; else goto c5dfs;
       c5dft: // global
           HpAlloc = 24;
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dfs: // global
           _s5cEr::P64 = P64[R1 + 16];
           _s5cEw::P64 = P64[R1 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)2_closure;
           P64[Hp] = _s5cEw::P64;
           R2 = Hp - 14;
           R1 = _s5cEr::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cEy_info" {
     sat_s5cEy_info:
         const sat_s5cEy_entry;
         const 2;
         const 18;
 },
 sat_s5cEz_entry() //  [R1]
         { []
         }
     {offset
       c5dfu: // global
           _s5cEz::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5dfv; else goto c5dfw;
       c5dfw: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5dfy; else goto c5dfx;
       c5dfy: // global
           HpAlloc = 32;
           goto c5dfv;
       c5dfv: // global
           R1 = _s5cEz::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dfx: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5cEz::P64;
           _s5cEr::P64 = P64[_s5cEz::P64 + 16];
           _s5cEw::P64 = P64[_s5cEz::P64 + 24];
           I64[Hp - 24] = sat_s5cEy_info;
           P64[Hp - 8] = _s5cEr::P64;
           P64[Hp] = _s5cEw::P64;
           R3 = Hp - 24;
           R2 = Data.Ord.$fShowDown2_closure;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cEz_info" {
     sat_s5cEz_info:
         const sat_s5cEz_entry;
         const 2;
         const 4294967314;
         const S5cGK_srt+80;
 },
 sat_s5cEA_entry() //  [R1, R2]
         { []
         }
     {offset
       c5dfA: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5dfE; else goto c5dfD;
       c5dfE: // global
           HpAlloc = 56;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5dfD: // global
           _s5cEr::P64 = P64[R1 + 7];
           I64[Hp - 48] = sat_s5cEz_info;
           P64[Hp - 32] = _s5cEr::P64;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)4_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cEA_info" {
     sat_s5cEA_info:
         const sat_s5cEA_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5cGK_srt+80;
 },
 Data.Ord.$w$cshowsPrec_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5dfI: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5dfM; else goto c5dfL;
       c5dfM: // global
           HpAlloc = 48;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$w$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dfL: // global
           I64[Hp - 40] = g_s5cEr_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = R4;
           _c5deJ::P64 = Hp - 40;
           if (%MO_S_Lt_W64(R3, 11)) goto c5dfG; else goto c5dfH;
       c5dfG: // global
           I64[Hp - 8] = sat_s5cEv_info;
           P64[Hp] = _c5deJ::P64;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5dfH: // global
           I64[Hp - 8] = sat_s5cEA_info;
           P64[Hp] = _c5deJ::P64;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$w$cshowsPrec_info" {
     Data.Ord.$w$cshowsPrec_info:
         const Data.Ord.$w$cshowsPrec_entry;
         const 0;
         const 12884901902;
         const 12884901909;
         const S5cGK_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.890530211 UTC

[section ""data" . Data.Ord.$fShowDown_$cshowsPrec_closure" {
     Data.Ord.$fShowDown_$cshowsPrec_closure:
         const Data.Ord.$fShowDown_$cshowsPrec_info;
         const 0;
 },
 Data.Ord.$fShowDown_$cshowsPrec_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5dgn: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5dgo; else goto c5dgp;
       c5dgo: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$fShowDown_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dgp: // global
           I64[Sp - 24] = block_c5dgk_info;
           R1 = R3;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5dgt; else goto c5dgl;
       u5dgt: // global
           call _c5dgk(R1) args: 0, res: 0, upd: 0;
       c5dgl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fShowDown_$cshowsPrec_info" {
     Data.Ord.$fShowDown_$cshowsPrec_info:
         const Data.Ord.$fShowDown_$cshowsPrec_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S5cGK_srt+88;
 },
 _c5dgk() //  [R1]
         { []
         }
     {offset
       c5dgk: // global
           R4 = P64[Sp + 16];
           R3 = I64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 24;
           call Data.Ord.$w$cshowsPrec_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5dgk_info" {
     block_c5dgk_info:
         const _c5dgk;
         const 2;
         const 4294967326;
         const S5cGK_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.89866579 UTC

[section ""data" . Data.Ord.$fShowDown_$cshow_closure" {
     Data.Ord.$fShowDown_$cshow_closure:
         const Data.Ord.$fShowDown_$cshow_info;
         const 0;
 },
 sat_s5cEI_entry() //  [R1]
         { []
         }
     {offset
       c5dgL: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5dgM; else goto c5dgN;
       c5dgM: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dgN: // global
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_ppp_info;
           P64[Sp - 24] = Data.Ord.$fReadDown2_closure+1;
           P64[Sp - 16] = P64[R1 + 24];
           P64[Sp - 8] = GHC.Types.[]_closure+1;
           Sp = Sp - 32;
           call GHC.Show.showsPrec_entry(R2) args: 40, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cEI_info" {
     sat_s5cEI_info:
         const sat_s5cEI_entry;
         const 2;
         const 18;
 },
 Data.Ord.$fShowDown_$cshow_entry() //  [R2, R3]
         { []
         }
     {offset
       c5dgO: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5dgS; else goto c5dgR;
       c5dgS: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$fShowDown_$cshow_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dgR: // global
           I64[Hp - 24] = sat_s5cEI_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R3 = Hp - 24;
           R2 = Data.Ord.$fShowDown2_closure;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fShowDown_$cshow_info" {
     Data.Ord.$fShowDown_$cshow_info:
         const Data.Ord.$fShowDown_$cshow_entry;
         const 0;
         const 38654705678;
         const 8589934607;
         const S5cGK_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.907024176 UTC

[section ""data" . Data.Ord.$fShowDown1_closure" {
     Data.Ord.$fShowDown1_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.911550753 UTC

[section ""data" . Data.Ord.$fShowDown_$cshowList_closure" {
     Data.Ord.$fShowDown_$cshowList_closure:
         const Data.Ord.$fShowDown_$cshowList_info;
         const 0;
 },
 sat_s5cEN_entry() //  [R1, R2]
         { []
         }
     {offset
       c5dhc: // global
           R4 = R2;
           R3 = 0;
           R2 = P64[R1 + 7];
           call Data.Ord.$w$cshowsPrec_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cEN_info" {
     sat_s5cEN_info:
         const sat_s5cEN_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5cGK_srt+88;
 },
 Data.Ord.$fShowDown_$cshowList_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5dhf: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5dhj; else goto c5dhi;
       c5dhj: // global
           HpAlloc = 16;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$fShowDown_$cshowList_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dhi: // global
           I64[Hp - 8] = sat_s5cEN_info;
           P64[Hp] = R2;
           R4 = R4;
           R3 = R3;
           R2 = Hp - 7;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fShowDown_$cshowList_info" {
     Data.Ord.$fShowDown_$cshowList_info:
         const Data.Ord.$fShowDown_$cshowList_entry;
         const 0;
         const 38654705678;
         const 12884901911;
         const S5cGK_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.923238988 UTC

[section ""data" . Data.Ord.$fShowDown_closure" {
     Data.Ord.$fShowDown_closure:
         const Data.Ord.$fShowDown_info;
         const 0;
 },
 sat_s5cER_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dhA: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Ord.$fShowDown_$cshowList_entry(R4,
                                                     R3,
                                                     R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cER_info" {
     sat_s5cER_info:
         const sat_s5cER_entry;
         const 1;
         const 4294967305;
         const 8589934607;
         const S5cGK_srt+112;
 },
 sat_s5cEQ_entry() //  [R1, R2]
         { []
         }
     {offset
       c5dhI: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Ord.$fShowDown_$cshow_entry(R3,
                                                 R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cEQ_info" {
     sat_s5cEQ_info:
         const sat_s5cEQ_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5cGK_srt+104;
 },
 sat_s5cEP_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dhQ: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Ord.$fShowDown_$cshowsPrec_entry(R4,
                                                      R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cEP_info" {
     sat_s5cEP_info:
         const sat_s5cEP_entry;
         const 1;
         const 4294967305;
         const 8589934607;
         const S5cGK_srt+96;
 },
 Data.Ord.$fShowDown_entry() //  [R2]
         { []
         }
     {offset
       c5dhU: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto c5dhY; else goto c5dhX;
       c5dhY: // global
           HpAlloc = 80;
           R2 = R2;
           R1 = Data.Ord.$fShowDown_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5dhX: // global
           I64[Hp - 72] = sat_s5cER_info;
           P64[Hp - 64] = R2;
           I64[Hp - 56] = sat_s5cEQ_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = sat_s5cEP_info;
           P64[Hp - 32] = R2;
           I64[Hp - 24] = GHC.Show.C:Show_con_info;
           P64[Hp - 16] = Hp - 38;
           P64[Hp - 8] = Hp - 55;
           P64[Hp] = Hp - 70;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fShowDown_info" {
     Data.Ord.$fShowDown_info:
         const Data.Ord.$fShowDown_entry;
         const 0;
         const 64424509454;
         const 4294967301;
         const S5cGK_srt+96;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.939452868 UTC

[section ""data" . Data.Ord.$fEqDown_closure" {
     Data.Ord.$fEqDown_closure:
         const Data.Ord.$fEqDown_info;
 },
 sat_s5cEU_entry() //  [R1]
         { []
         }
     {offset
       c5dio: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dip; else goto c5diq;
       c5dip: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5diq: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes./=_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cEU_info" {
     sat_s5cEU_info:
         const sat_s5cEU_entry;
         const 1;
         const 16;
 },
 sat_s5cET_entry() //  [R1]
         { []
         }
     {offset
       c5div: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5diw; else goto c5dix;
       c5diw: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dix: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cET_info" {
     sat_s5cET_info:
         const sat_s5cET_entry;
         const 1;
         const 16;
 },
 Data.Ord.$fEqDown_entry() //  [R2]
         { []
         }
     {offset
       c5diz: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c5diD; else goto c5diC;
       c5diD: // global
           HpAlloc = 72;
           R2 = R2;
           R1 = Data.Ord.$fEqDown_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5diC: // global
           I64[Hp - 64] = sat_s5cEU_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = sat_s5cET_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = GHC.Classes.C:Eq_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 64;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fEqDown_info" {
     Data.Ord.$fEqDown_info:
         const Data.Ord.$fEqDown_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.954137613 UTC

[section ""data" . Data.Ord.$fOrdDown_$cp1Ord_closure" {
     Data.Ord.$fOrdDown_$cp1Ord_closure:
         const Data.Ord.$fOrdDown_$cp1Ord_info;
 },
 sat_s5cEW_entry() //  [R1]
         { []
         }
     {offset
       c5dj1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dj2; else goto c5dj3;
       c5dj2: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dj3: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.$p1Ord_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cEW_info" {
     sat_s5cEW_info:
         const sat_s5cEW_entry;
         const 1;
         const 16;
 },
 Data.Ord.$fOrdDown_$cp1Ord_entry() //  [R2]
         { []
         }
     {offset
       c5dj4: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5dj8; else goto c5dj7;
       c5dj8: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Data.Ord.$fOrdDown_$cp1Ord_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5dj7: // global
           I64[Hp - 16] = sat_s5cEW_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           call Data.Ord.$fEqDown_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fOrdDown_$cp1Ord_info" {
     Data.Ord.$fOrdDown_$cp1Ord_info:
         const Data.Ord.$fOrdDown_$cp1Ord_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.964684322 UTC

[section ""data" . Data.Ord.$fOrdDown_$c<_closure" {
     Data.Ord.$fOrdDown_$c<_closure:
         const Data.Ord.$fOrdDown_$c<_info;
 },
 Data.Ord.$fOrdDown_$c<_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5djr: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5djs; else goto c5djt;
       c5djs: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$fOrdDown_$c<_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5djt: // global
           I64[Sp - 8] = block_c5djl_info;
           R2 = R2;
           I64[Sp - 32] = stg_ap_pp_info;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R3;
           Sp = Sp - 32;
           call GHC.Classes.compare_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fOrdDown_$c<_info" {
     Data.Ord.$fOrdDown_$c<_info:
         const Data.Ord.$fOrdDown_$c<_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5djl() //  [R1]
         { []
         }
     {offset
       c5djl: // global
           if (R1 & 7 == 1) goto c5djp; else goto c5djo;
       c5djp: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5djo: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5djl_info" {
     block_c5djl_info:
         const _c5djl;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.975867015 UTC

[section ""data" . Data.Ord.$fOrdDown_$c>=_closure" {
     Data.Ord.$fOrdDown_$c>=_closure:
         const Data.Ord.$fOrdDown_$c>=_info;
 },
 Data.Ord.$fOrdDown_$c>=_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5djW: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5djX; else goto c5djY;
       c5djX: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$fOrdDown_$c>=_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5djY: // global
           I64[Sp - 8] = block_c5djQ_info;
           R2 = R2;
           I64[Sp - 32] = stg_ap_pp_info;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R3;
           Sp = Sp - 32;
           call GHC.Classes.compare_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fOrdDown_$c>=_info" {
     Data.Ord.$fOrdDown_$c>=_info:
         const Data.Ord.$fOrdDown_$c>=_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5djQ() //  [R1]
         { []
         }
     {offset
       c5djQ: // global
           if (R1 & 7 == 1) goto c5djU; else goto c5djT;
       c5djU: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5djT: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5djQ_info" {
     block_c5djQ_info:
         const _c5djQ;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:10.989203063 UTC

[section ""data" . Data.Ord.$fOrdDown_$c>_closure" {
     Data.Ord.$fOrdDown_$c>_closure:
         const Data.Ord.$fOrdDown_$c>_info;
 },
 Data.Ord.$fOrdDown_$c>_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5dkr: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5dks; else goto c5dkt;
       c5dks: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$fOrdDown_$c>_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dkt: // global
           I64[Sp - 8] = block_c5dkl_info;
           R2 = R2;
           I64[Sp - 32] = stg_ap_pp_info;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R3;
           Sp = Sp - 32;
           call GHC.Classes.compare_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fOrdDown_$c>_info" {
     Data.Ord.$fOrdDown_$c>_info:
         const Data.Ord.$fOrdDown_$c>_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5dkl() //  [R1]
         { []
         }
     {offset
       c5dkl: // global
           if (R1 & 7 == 3) goto c5dkp; else goto c5dko;
       c5dkp: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5dko: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5dkl_info" {
     block_c5dkl_info:
         const _c5dkl;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:11.002131164 UTC

[section ""data" . Data.Ord.$fOrdDown_$c<=_closure" {
     Data.Ord.$fOrdDown_$c<=_closure:
         const Data.Ord.$fOrdDown_$c<=_info;
 },
 Data.Ord.$fOrdDown_$c<=_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5dkW: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5dkX; else goto c5dkY;
       c5dkX: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$fOrdDown_$c<=_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dkY: // global
           I64[Sp - 8] = block_c5dkQ_info;
           R2 = R2;
           I64[Sp - 32] = stg_ap_pp_info;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R3;
           Sp = Sp - 32;
           call GHC.Classes.compare_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fOrdDown_$c<=_info" {
     Data.Ord.$fOrdDown_$c<=_info:
         const Data.Ord.$fOrdDown_$c<=_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5dkQ() //  [R1]
         { []
         }
     {offset
       c5dkQ: // global
           if (R1 & 7 == 3) goto c5dkU; else goto c5dkT;
       c5dkU: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5dkT: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5dkQ_info" {
     block_c5dkQ_info:
         const _c5dkQ;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:11.014791186 UTC

[section ""data" . Data.Ord.$fOrdDown_$cmax_closure" {
     Data.Ord.$fOrdDown_$cmax_closure:
         const Data.Ord.$fOrdDown_$cmax_info;
 },
 Data.Ord.$fOrdDown_$cmax_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5dlr: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c5dls; else goto c5dlt;
       c5dls: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$fOrdDown_$cmax_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dlt: // global
           I64[Sp - 24] = block_c5dll_info;
           R2 = R2;
           I64[Sp - 48] = stg_ap_pp_info;
           P64[Sp - 40] = R4;
           P64[Sp - 32] = R3;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 48;
           call GHC.Classes.compare_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fOrdDown_$cmax_info" {
     Data.Ord.$fOrdDown_$cmax_info:
         const Data.Ord.$fOrdDown_$cmax_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5dll() //  [R1]
         { []
         }
     {offset
       c5dll: // global
           if (R1 & 7 == 3) goto c5dlp; else goto c5dlo;
       c5dlp: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5dlo: // global
           R1 = P64[Sp + 16];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5dll_info" {
     block_c5dll_info:
         const _c5dll;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:11.026991242 UTC

[section ""data" . Data.Ord.$fOrdDown_$cmin_closure" {
     Data.Ord.$fOrdDown_$cmin_closure:
         const Data.Ord.$fOrdDown_$cmin_info;
 },
 Data.Ord.$fOrdDown_$cmin_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5dlU: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c5dlV; else goto c5dlW;
       c5dlV: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$fOrdDown_$cmin_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dlW: // global
           I64[Sp - 24] = block_c5dlO_info;
           R2 = R2;
           I64[Sp - 48] = stg_ap_pp_info;
           P64[Sp - 40] = R4;
           P64[Sp - 32] = R3;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 48;
           call GHC.Classes.compare_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fOrdDown_$cmin_info" {
     Data.Ord.$fOrdDown_$cmin_info:
         const Data.Ord.$fOrdDown_$cmin_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5dlO() //  [R1]
         { []
         }
     {offset
       c5dlO: // global
           if (R1 & 7 == 3) goto c5dlS; else goto c5dlR;
       c5dlS: // global
           R1 = P64[Sp + 16];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5dlR: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5dlO_info" {
     block_c5dlO_info:
         const _c5dlO;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:11.045215833 UTC

[section ""data" . Data.Ord.$fOrdDown_closure" {
     Data.Ord.$fOrdDown_closure:
         const Data.Ord.$fOrdDown_info;
 },
 sat_s5cFv_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dmm: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Ord.$fOrdDown_$cmin_entry(R4,
                                               R3,
                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cFv_info" {
     sat_s5cFv_info:
         const sat_s5cFv_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_s5cFu_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dmu: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Ord.$fOrdDown_$cmax_entry(R4,
                                               R3,
                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cFu_info" {
     sat_s5cFu_info:
         const sat_s5cFu_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_s5cFt_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dmC: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Ord.$fOrdDown_$c>=_entry(R4,
                                              R3,
                                              R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cFt_info" {
     sat_s5cFt_info:
         const sat_s5cFt_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_s5cFs_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dmK: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Ord.$fOrdDown_$c>_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cFs_info" {
     sat_s5cFs_info:
         const sat_s5cFs_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_s5cFr_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dmS: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Ord.$fOrdDown_$c<=_entry(R4,
                                              R3,
                                              R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cFr_info" {
     sat_s5cFr_info:
         const sat_s5cFr_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_s5cFq_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dn0: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Ord.$fOrdDown_$c<_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cFq_info" {
     sat_s5cFq_info:
         const sat_s5cFq_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_s5cFp_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dn8: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5dn9; else goto c5dna;
       c5dn9: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dna: // global
           _s5cFn::P64 = R2;
           R2 = P64[R1 + 6];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = _s5cFn::P64;
           Sp = Sp - 24;
           call GHC.Classes.compare_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5cFp_info" {
     sat_s5cFp_info:
         const sat_s5cFp_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_s5cFm_entry() //  [R1]
         { []
         }
     {offset
       c5dnf: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dng; else goto c5dnh;
       c5dng: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dnh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Ord.$fOrdDown_$cp1Ord_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5cFm_info" {
     sat_s5cFm_info:
         const sat_s5cFm_entry;
         const 1;
         const 16;
 },
 Data.Ord.$fOrdDown_entry() //  [R2]
         { []
         }
     {offset
       c5dnj: // global
           Hp = Hp + 208;
           if (Hp > HpLim) (likely: False) goto c5dnn; else goto c5dnm;
       c5dnn: // global
           HpAlloc = 208;
           R2 = R2;
           R1 = Data.Ord.$fOrdDown_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5dnm: // global
           I64[Hp - 200] = sat_s5cFv_info;
           P64[Hp - 192] = R2;
           I64[Hp - 184] = sat_s5cFu_info;
           P64[Hp - 176] = R2;
           I64[Hp - 168] = sat_s5cFt_info;
           P64[Hp - 160] = R2;
           I64[Hp - 152] = sat_s5cFs_info;
           P64[Hp - 144] = R2;
           I64[Hp - 136] = sat_s5cFr_info;
           P64[Hp - 128] = R2;
           I64[Hp - 120] = sat_s5cFq_info;
           P64[Hp - 112] = R2;
           I64[Hp - 104] = sat_s5cFp_info;
           P64[Hp - 96] = R2;
           I64[Hp - 88] = sat_s5cFm_info;
           P64[Hp - 72] = R2;
           I64[Hp - 64] = GHC.Classes.C:Ord_con_info;
           P64[Hp - 56] = Hp - 88;
           P64[Hp - 48] = Hp - 102;
           P64[Hp - 40] = Hp - 118;
           P64[Hp - 32] = Hp - 134;
           P64[Hp - 24] = Hp - 150;
           P64[Hp - 16] = Hp - 166;
           P64[Hp - 8] = Hp - 182;
           P64[Hp] = Hp - 198;
           R1 = Hp - 63;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fOrdDown_info" {
     Data.Ord.$fOrdDown_info:
         const Data.Ord.$fOrdDown_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:11.078017753 UTC

[section ""data" . Data.Ord.comparing_closure" {
     Data.Ord.comparing_closure:
         const Data.Ord.comparing_info;
 },
 Data.Ord.comparing_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5do7: // global
           _s5cFz::P64 = R5;
           _s5cFy::P64 = R4;
           _s5cFx::P64 = R3;
           _s5cFw::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto c5do8; else goto c5do9;
       c5do9: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c5dob; else goto c5doa;
       c5dob: // global
           HpAlloc = 64;
           goto c5do8;
       c5do8: // global
           R5 = _s5cFz::P64;
           R4 = _s5cFy::P64;
           R3 = _s5cFx::P64;
           R2 = _s5cFw::P64;
           R1 = Data.Ord.comparing_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5doa: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = _s5cFx::P64;
           P64[Hp - 32] = _s5cFz::P64;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _s5cFx::P64;
           P64[Hp] = _s5cFy::P64;
           R2 = _s5cFw::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = Hp - 56;
           Sp = Sp - 24;
           call GHC.Classes.compare_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.comparing_info" {
     Data.Ord.comparing_info:
         const Data.Ord.comparing_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:11.084862718 UTC

[section ""cstring" . Data.Ord.$trModule4_bytes" {
     Data.Ord.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:11.08819088 UTC

[section ""data" . Data.Ord.$trModule3_closure" {
     Data.Ord.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Ord.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:11.091642983 UTC

[section ""cstring" . Data.Ord.$trModule2_bytes" {
     Data.Ord.$trModule2_bytes:
         I8[] [68,97,116,97,46,79,114,100]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:11.094925439 UTC

[section ""data" . Data.Ord.$trModule1_closure" {
     Data.Ord.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Ord.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:11.098960186 UTC

[section ""data" . Data.Ord.$trModule_closure" {
     Data.Ord.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Ord.$trModule3_closure+1;
         const Data.Ord.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:11.102167614 UTC

[section ""data" . $krep_r5cDl_closure" {
     $krep_r5cDl_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:11.105556728 UTC

[section ""data" . Data.Ord.$tcDown1_closure" {
     Data.Ord.$tcDown1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Ord.$fReadDown4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:11.108831278 UTC

[section ""data" . Data.Ord.$tcDown_closure" {
     Data.Ord.$tcDown_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Ord.$trModule_closure+1;
         const Data.Ord.$tcDown1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 7479183817722852251;
         const 10417149520322703999;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:11.112904604 UTC

[section ""data" . $krep1_r5cDm_closure" {
     $krep1_r5cDm_closure:
         const :_con_info;
         const $krep_r5cDl_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:11.11598898 UTC

[section ""data" . $krep2_r5cDn_closure" {
     $krep2_r5cDn_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Ord.$tcDown_closure+1;
         const $krep1_r5cDm_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:11.119866272 UTC

[section ""data" . Data.Ord.$tc'Down1_closure" {
     Data.Ord.$tc'Down1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r5cDl_closure+2;
         const $krep2_r5cDn_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:11.12285071 UTC

[section ""cstring" . Data.Ord.$tc'Down3_bytes" {
     Data.Ord.$tc'Down3_bytes:
         I8[] [39,68,111,119,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:11.127828125 UTC

[section ""data" . Data.Ord.$tc'Down2_closure" {
     Data.Ord.$tc'Down2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Ord.$tc'Down3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:11.130880058 UTC

[section ""data" . Data.Ord.$tc'Down_closure" {
     Data.Ord.$tc'Down_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Ord.$trModule_closure+1;
         const Data.Ord.$tc'Down2_closure+1;
         const Data.Ord.$tc'Down1_closure+4;
         const 2181324915805229541;
         const 7680134812570657793;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:11.134668032 UTC

[section ""relreadonly" . S5cGK_srt" {
     S5cGK_srt:
         const GHC.Err.errorWithoutStackTrace_closure;
         const Text.Read.Lex.$wexpect_closure;
         const Data.Ord.$fReadDown_lexeme_closure;
         const GHC.Read.list3_closure;
         const Data.Ord.$fReadDown1_closure;
         const Data.Ord.$fReadDown_$creadsPrec_closure;
         const GHC.Read.list_closure;
         const Data.Ord.$fReadDown_$creadListPrec_closure;
         const Data.Ord.$fReadDown_$creadList_closure;
         const Data.Ord.$fReadDown_closure;
         const Data.Ord.$fShowDown2_closure;
         const Data.Ord.$w$cshowsPrec_closure;
         const Data.Ord.$fShowDown_$cshowsPrec_closure;
         const Data.Ord.$fShowDown_$cshow_closure;
         const Data.Ord.$fShowDown_$cshowList_closure;
         const Data.Ord.$fShowDown_closure;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.23356893 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:00:12.235104865 UTC

[section ""data" . Data.Ord.$fFunctorDown2_closure" {
     Data.Ord.$fFunctorDown2_closure:
         const Data.Ord.$fFunctorDown2_info;
 },
 Data.Ord.$fFunctorDown2_entry() //  [R2]
         { []
         }
     {offset
       c5dqP: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fFunctorDown2_info" {
     Data.Ord.$fFunctorDown2_info:
         const Data.Ord.$fFunctorDown2_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.238657144 UTC

[section ""data" . Data.Ord.$fFunctorDown1_closure" {
     Data.Ord.$fFunctorDown1_closure:
         const Data.Ord.$fFunctorDown1_info;
 },
 Data.Ord.$fFunctorDown1_entry() //  [R2]
         { []
         }
     {offset
       c5dr0: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fFunctorDown1_info" {
     Data.Ord.$fFunctorDown1_info:
         const Data.Ord.$fFunctorDown1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.242218388 UTC

[section ""data" . Data.Ord.$fFunctorDown_closure" {
     Data.Ord.$fFunctorDown_closure:
         const GHC.Base.C:Functor_con_info;
         const Data.Ord.$fFunctorDown2_closure+1;
         const Data.Ord.$fFunctorDown1_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.244265045 UTC

[section ""data" . Data.Ord.$fApplicativeDown3_closure" {
     Data.Ord.$fApplicativeDown3_closure:
         const Data.Ord.$fApplicativeDown3_info;
 },
 Data.Ord.$fApplicativeDown3_entry() //  [R2]
         { []
         }
     {offset
       c5drc: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fApplicativeDown3_info" {
     Data.Ord.$fApplicativeDown3_info:
         const Data.Ord.$fApplicativeDown3_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.248576178 UTC

[section ""data" . Data.Ord.$fApplicativeDown4_closure" {
     Data.Ord.$fApplicativeDown4_closure:
         const Data.Ord.$fApplicativeDown4_info;
 },
 Data.Ord.$fApplicativeDown4_entry() //  [R2]
         { []
         }
     {offset
       c5drn: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fApplicativeDown4_info" {
     Data.Ord.$fApplicativeDown4_info:
         const Data.Ord.$fApplicativeDown4_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.253677295 UTC

[section ""data" . Data.Ord.$fApplicativeDown2_closure" {
     Data.Ord.$fApplicativeDown2_closure:
         const Data.Ord.$fApplicativeDown2_info;
 },
 Data.Ord.$fApplicativeDown2_entry() //  [R2, R3]
         { []
         }
     {offset
       c5dry: // global
           _s5doD::P64 = R2;
           R2 = R3;
           R1 = _s5doD::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fApplicativeDown2_info" {
     Data.Ord.$fApplicativeDown2_info:
         const Data.Ord.$fApplicativeDown2_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.258973001 UTC

[section ""data" . Data.Ord.$fApplicativeDown_$c*>_closure" {
     Data.Ord.$fApplicativeDown_$c*>_closure:
         const Data.Ord.$fApplicativeDown_$c*>_info;
 },
 Data.Ord.$fApplicativeDown_$c*>_entry() //  [R3]
         { []
         }
     {offset
       c5drJ: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fApplicativeDown_$c*>_info" {
     Data.Ord.$fApplicativeDown_$c*>_info:
         const Data.Ord.$fApplicativeDown_$c*>_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.263471569 UTC

[section ""data" . Data.Ord.$fApplicativeDown1_closure" {
     Data.Ord.$fApplicativeDown1_closure:
         const Data.Ord.$fApplicativeDown1_info;
 },
 Data.Ord.$fApplicativeDown1_entry() //  [R2]
         { []
         }
     {offset
       c5drU: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fApplicativeDown1_info" {
     Data.Ord.$fApplicativeDown1_info:
         const Data.Ord.$fApplicativeDown1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.267534941 UTC

[section ""data" . Data.Ord.$fApplicativeDown_closure" {
     Data.Ord.$fApplicativeDown_closure:
         const GHC.Base.C:Applicative_con_info;
         const Data.Ord.$fFunctorDown_closure+1;
         const Data.Ord.$fApplicativeDown4_closure+1;
         const Data.Ord.$fApplicativeDown3_closure+1;
         const Data.Ord.$fApplicativeDown2_closure+2;
         const Data.Ord.$fApplicativeDown_$c*>_closure+2;
         const Data.Ord.$fApplicativeDown1_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.269865068 UTC

[section ""data" . Data.Ord.$fMonadDown_$c>>=_closure" {
     Data.Ord.$fMonadDown_$c>>=_closure:
         const Data.Ord.$fMonadDown_$c>>=_info;
 },
 Data.Ord.$fMonadDown_$c>>=_entry() //  [R2, R3]
         { []
         }
     {offset
       c5ds6: // global
           R2 = R2;
           R1 = R3;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fMonadDown_$c>>=_info" {
     Data.Ord.$fMonadDown_$c>>=_info:
         const Data.Ord.$fMonadDown_$c>>=_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.273713356 UTC

[section ""data" . Data.Ord.$fMonadDown_$c>>_closure" {
     Data.Ord.$fMonadDown_$c>>_closure:
         const Data.Ord.$fMonadDown_$c>>_info;
 },
 Data.Ord.$fMonadDown_$c>>_entry() //  [R2, R3]
         { []
         }
     {offset
       c5dsh: // global
           R3 = R3;
           R2 = R2;
           call Data.Ord.$fApplicativeDown_$c*>_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fMonadDown_$c>>_info" {
     Data.Ord.$fMonadDown_$c>>_info:
         const Data.Ord.$fMonadDown_$c>>_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.276968731 UTC

[section ""data" . lvl_r5cDk_closure" {
     lvl_r5cDk_closure:
         const lvl_r5cDk_info;
         const 0;
 },
 lvl_r5cDk_entry() //  [R2]
         { []
         }
     {offset
       c5dss: // global
           R2 = R2;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . lvl_r5cDk_info" {
     lvl_r5cDk_info:
         const lvl_r5cDk_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const S5dsv_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.280140761 UTC

[section ""data" . Data.Ord.$fMonadDown_closure" {
     Data.Ord.$fMonadDown_closure:
         const GHC.Base.C:Monad_con_info;
         const Data.Ord.$fApplicativeDown_closure+1;
         const Data.Ord.$fMonadDown_$c>>=_closure+2;
         const Data.Ord.$fMonadDown_$c>>_closure+2;
         const Data.Ord.$fApplicativeDown4_closure+1;
         const lvl_r5cDk_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.283723863 UTC

[section ""data" . Data.Ord.$fSemigroupDown_closure" {
     Data.Ord.$fSemigroupDown_closure:
         const Data.Ord.$fSemigroupDown_info;
 },
 sat_s5doP_entry() //  [R1]
         { []
         }
     {offset
       c5dsJ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dsK; else goto c5dsL;
       c5dsK: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dsL: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.stimes_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5doP_info" {
     sat_s5doP_info:
         const sat_s5doP_entry;
         const 1;
         const 16;
 },
 sat_s5doO_entry() //  [R1]
         { []
         }
     {offset
       c5dsQ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dsR; else goto c5dsS;
       c5dsR: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dsS: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.sconcat_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5doO_info" {
     sat_s5doO_info:
         const sat_s5doO_entry;
         const 1;
         const 16;
 },
 sat_s5doN_entry() //  [R1]
         { []
         }
     {offset
       c5dsX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dsY; else goto c5dsZ;
       c5dsY: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dsZ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.<>_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5doN_info" {
     sat_s5doN_info:
         const sat_s5doN_entry;
         const 1;
         const 16;
 },
 Data.Ord.$fSemigroupDown_entry() //  [R2]
         { []
         }
     {offset
       c5dt1: // global
           Hp = Hp + 104;
           if (Hp > HpLim) (likely: False) goto c5dt5; else goto c5dt4;
       c5dt5: // global
           HpAlloc = 104;
           R2 = R2;
           R1 = Data.Ord.$fSemigroupDown_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5dt4: // global
           I64[Hp - 96] = sat_s5doP_info;
           P64[Hp - 80] = R2;
           I64[Hp - 72] = sat_s5doO_info;
           P64[Hp - 56] = R2;
           I64[Hp - 48] = sat_s5doN_info;
           P64[Hp - 32] = R2;
           I64[Hp - 24] = GHC.Base.C:Semigroup_con_info;
           P64[Hp - 16] = Hp - 48;
           P64[Hp - 8] = Hp - 72;
           P64[Hp] = Hp - 96;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fSemigroupDown_info" {
     Data.Ord.$fSemigroupDown_info:
         const Data.Ord.$fSemigroupDown_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.294065234 UTC

[section ""data" . Data.Ord.$fMonoidDown_$cp1Monoid_closure" {
     Data.Ord.$fMonoidDown_$cp1Monoid_closure:
         const Data.Ord.$fMonoidDown_$cp1Monoid_info;
 },
 sat_s5doR_entry() //  [R1]
         { []
         }
     {offset
       c5dtF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dtG; else goto c5dtH;
       c5dtG: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dtH: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.$p1Monoid_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5doR_info" {
     sat_s5doR_info:
         const sat_s5doR_entry;
         const 1;
         const 16;
 },
 Data.Ord.$fMonoidDown_$cp1Monoid_entry() //  [R2]
         { []
         }
     {offset
       c5dtI: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5dtM; else goto c5dtL;
       c5dtM: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Data.Ord.$fMonoidDown_$cp1Monoid_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5dtL: // global
           I64[Hp - 16] = sat_s5doR_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           call Data.Ord.$fSemigroupDown_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fMonoidDown_$cp1Monoid_info" {
     Data.Ord.$fMonoidDown_$cp1Monoid_info:
         const Data.Ord.$fMonoidDown_$cp1Monoid_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.301773908 UTC

[section ""data" . Data.Ord.$fMonoidDown_closure" {
     Data.Ord.$fMonoidDown_closure:
         const Data.Ord.$fMonoidDown_info;
 },
 sat_s5doW_entry() //  [R1]
         { []
         }
     {offset
       c5du5: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5du6; else goto c5du7;
       c5du6: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5du7: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.mconcat_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5doW_info" {
     sat_s5doW_info:
         const sat_s5doW_entry;
         const 1;
         const 16;
 },
 sat_s5doV_entry() //  [R1]
         { []
         }
     {offset
       c5duc: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dud; else goto c5due;
       c5dud: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5due: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.mappend_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5doV_info" {
     sat_s5doV_info:
         const sat_s5doV_entry;
         const 1;
         const 16;
 },
 sat_s5doU_entry() //  [R1]
         { []
         }
     {offset
       c5duj: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5duk; else goto c5dul;
       c5duk: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dul: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.mempty_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5doU_info" {
     sat_s5doU_info:
         const sat_s5doU_entry;
         const 1;
         const 16;
 },
 sat_s5doT_entry() //  [R1]
         { []
         }
     {offset
       c5duq: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dur; else goto c5dus;
       c5dur: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dus: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Ord.$fMonoidDown_$cp1Monoid_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5doT_info" {
     sat_s5doT_info:
         const sat_s5doT_entry;
         const 1;
         const 16;
 },
 Data.Ord.$fMonoidDown_entry() //  [R2]
         { []
         }
     {offset
       c5duu: // global
           Hp = Hp + 136;
           if (Hp > HpLim) (likely: False) goto c5duy; else goto c5dux;
       c5duy: // global
           HpAlloc = 136;
           R2 = R2;
           R1 = Data.Ord.$fMonoidDown_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5dux: // global
           I64[Hp - 128] = sat_s5doW_info;
           P64[Hp - 112] = R2;
           I64[Hp - 104] = sat_s5doV_info;
           P64[Hp - 88] = R2;
           I64[Hp - 80] = sat_s5doU_info;
           P64[Hp - 64] = R2;
           I64[Hp - 56] = sat_s5doT_info;
           P64[Hp - 40] = R2;
           I64[Hp - 32] = GHC.Base.C:Monoid_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 80;
           P64[Hp - 8] = Hp - 104;
           P64[Hp] = Hp - 128;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fMonoidDown_info" {
     Data.Ord.$fMonoidDown_info:
         const Data.Ord.$fMonoidDown_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.317549258 UTC

[section ""data" . Data.Ord.$fNumDown_closure" {
     Data.Ord.$fNumDown_closure:
         const Data.Ord.$fNumDown_info;
 },
 sat_s5dp4_entry() //  [R1]
         { []
         }
     {offset
       c5dvf: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dvg; else goto c5dvh;
       c5dvg: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dvh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Num.fromInteger_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5dp4_info" {
     sat_s5dp4_info:
         const sat_s5dp4_entry;
         const 1;
         const 16;
 },
 sat_s5dp3_entry() //  [R1]
         { []
         }
     {offset
       c5dvm: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dvn; else goto c5dvo;
       c5dvn: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dvo: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Num.signum_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5dp3_info" {
     sat_s5dp3_info:
         const sat_s5dp3_entry;
         const 1;
         const 16;
 },
 sat_s5dp2_entry() //  [R1]
         { []
         }
     {offset
       c5dvt: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dvu; else goto c5dvv;
       c5dvu: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dvv: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Num.abs_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5dp2_info" {
     sat_s5dp2_info:
         const sat_s5dp2_entry;
         const 1;
         const 16;
 },
 sat_s5dp1_entry() //  [R1]
         { []
         }
     {offset
       c5dvA: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dvB; else goto c5dvC;
       c5dvB: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dvC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Num.negate_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5dp1_info" {
     sat_s5dp1_info:
         const sat_s5dp1_entry;
         const 1;
         const 16;
 },
 sat_s5dp0_entry() //  [R1]
         { []
         }
     {offset
       c5dvH: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dvI; else goto c5dvJ;
       c5dvI: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dvJ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Num.*_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5dp0_info" {
     sat_s5dp0_info:
         const sat_s5dp0_entry;
         const 1;
         const 16;
 },
 sat_s5doZ_entry() //  [R1]
         { []
         }
     {offset
       c5dvO: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dvP; else goto c5dvQ;
       c5dvP: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dvQ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Num.-_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5doZ_info" {
     sat_s5doZ_info:
         const sat_s5doZ_entry;
         const 1;
         const 16;
 },
 sat_s5doY_entry() //  [R1]
         { []
         }
     {offset
       c5dvV: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dvW; else goto c5dvX;
       c5dvW: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dvX: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Num.+_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5doY_info" {
     sat_s5doY_info:
         const sat_s5doY_entry;
         const 1;
         const 16;
 },
 Data.Ord.$fNumDown_entry() //  [R2]
         { []
         }
     {offset
       c5dvZ: // global
           Hp = Hp + 232;
           if (Hp > HpLim) (likely: False) goto c5dw3; else goto c5dw2;
       c5dw3: // global
           HpAlloc = 232;
           R2 = R2;
           R1 = Data.Ord.$fNumDown_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5dw2: // global
           I64[Hp - 224] = sat_s5dp4_info;
           P64[Hp - 208] = R2;
           I64[Hp - 200] = sat_s5dp3_info;
           P64[Hp - 184] = R2;
           I64[Hp - 176] = sat_s5dp2_info;
           P64[Hp - 160] = R2;
           I64[Hp - 152] = sat_s5dp1_info;
           P64[Hp - 136] = R2;
           I64[Hp - 128] = sat_s5dp0_info;
           P64[Hp - 112] = R2;
           I64[Hp - 104] = sat_s5doZ_info;
           P64[Hp - 88] = R2;
           I64[Hp - 80] = sat_s5doY_info;
           P64[Hp - 64] = R2;
           I64[Hp - 56] = GHC.Num.C:Num_con_info;
           P64[Hp - 48] = Hp - 80;
           P64[Hp - 40] = Hp - 104;
           P64[Hp - 32] = Hp - 128;
           P64[Hp - 24] = Hp - 152;
           P64[Hp - 16] = Hp - 176;
           P64[Hp - 8] = Hp - 200;
           P64[Hp] = Hp - 224;
           R1 = Hp - 55;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fNumDown_info" {
     Data.Ord.$fNumDown_info:
         const Data.Ord.$fNumDown_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.338123685 UTC

[section ""cstring" . Data.Ord.$fReadDown4_bytes" {
     Data.Ord.$fReadDown4_bytes:
         I8[] [68,111,119,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.342120096 UTC

[section ""data" . Data.Ord.$fReadDown3_closure" {
     Data.Ord.$fReadDown3_closure:
         const Data.Ord.$fReadDown3_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Ord.$fReadDown3_entry() //  [R1]
         { []
         }
     {offset
       c5dx4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dx5; else goto c5dx6;
       c5dx5: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dx6: // global
           (_c5dx1::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5dx1::I64 == 0) goto c5dx3; else goto c5dx2;
       c5dx3: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5dx2: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5dx1::I64;
           R2 = Data.Ord.$fReadDown4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Ord.$fReadDown3_info" {
     Data.Ord.$fReadDown3_info:
         const Data.Ord.$fReadDown3_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.346800281 UTC

[section ""data" . Data.Ord.$fReadDown_lexeme_closure" {
     Data.Ord.$fReadDown_lexeme_closure:
         const Text.Read.Lex.Ident_con_info;
         const Data.Ord.$fReadDown3_closure;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.348685039 UTC

[section ""data" . Data.Ord.$fReadDown2_closure" {
     Data.Ord.$fReadDown2_closure:
         const GHC.Types.I#_con_info;
         const 11;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.357369836 UTC

[section ""data" . Data.Ord.$fReadDown1_closure" {
     Data.Ord.$fReadDown1_closure:
         const Data.Ord.$fReadDown1_info;
         const 0;
 },
 sat_s5dpf_entry() //  [R1, R2]
         { []
         }
     {offset
       c5dxJ: // global
           R2 = R2;
           R1 = P64[R1 + 7];
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dpf_info" {
     sat_s5dpf_info:
         const sat_s5dpf_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_s5dpg_entry() //  [R1, R2]
         { []
         }
     {offset
       c5dxM: // global
           _s5dpd::P64 = R2;
           _s5dpg::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c5dxN; else goto c5dxO;
       c5dxO: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5dxQ; else goto c5dxP;
       c5dxQ: // global
           HpAlloc = 16;
           goto c5dxN;
       c5dxN: // global
           R2 = _s5dpd::P64;
           R1 = _s5dpg::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5dxP: // global
           _s5dp5::P64 = P64[_s5dpg::P64 + 7];
           _s5dp9::P64 = P64[_s5dpg::P64 + 15];
           I64[Hp - 8] = sat_s5dpf_info;
           P64[Hp] = _s5dp9::P64;
           R2 = _s5dp5::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Data.Ord.$fReadDown2_closure+1;
           P64[Sp - 8] = Hp - 7;
           Sp = Sp - 24;
           call GHC.Read.readPrec_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dpg_info" {
     sat_s5dpg_info:
         const sat_s5dpg_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_s5dpj_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dxR: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5dxS; else goto c5dxT;
       c5dxS: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dxT: // global
           I64[Sp - 24] = block_c5dxq_info;
           _s5dp5::P64 = P64[R1 + 6];
           R1 = R2;
           P64[Sp - 16] = _s5dp5::P64;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5dy6; else goto c5dxr;
       u5dy6: // global
           call _c5dxq(R1) args: 0, res: 0, upd: 0;
       c5dxr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dpj_info" {
     sat_s5dpj_info:
         const sat_s5dpj_entry;
         const 1;
         const 12884901897;
         const 8589934607;
         const S5dsv_srt+8;
 },
 _c5dxq() //  [R1]
         { []
         }
     {offset
       c5dxq: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5dxW; else goto c5dxV;
       c5dxW: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5dxV: // global
           if (%MO_S_Gt_W64(I64[R1 + 7], 10)) goto c5dxY; else goto c5dy2;
       c5dxY: // global
           Hp = Hp - 24;
           R1 = Text.ParserCombinators.ReadP.Fail_closure+3;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5dy2: // global
           I64[Hp - 16] = sat_s5dpg_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = P64[Sp + 16];
           I64[Sp + 16] = block_c5dxZ_info;
           R3 = Hp - 15;
           R2 = Data.Ord.$fReadDown_lexeme_closure+4;
           Sp = Sp + 16;
           call Text.Read.Lex.$wexpect_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5dxq_info" {
     block_c5dxq_info:
         const _c5dxq;
         const 2;
         const 12884901918;
         const S5dsv_srt+8;
 },
 _c5dxZ() //  [R1]
         { []
         }
     {offset
       c5dxZ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5dy5; else goto c5dy4;
       c5dy5: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5dy4: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5dxZ_info" {
     block_c5dxZ_info:
         const _c5dxZ;
         const 0;
         const 30;
 },
 Data.Ord.$fReadDown1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5dy7: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5dyb; else goto c5dya;
       c5dyb: // global
           HpAlloc = 16;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$fReadDown1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dya: // global
           I64[Hp - 8] = sat_s5dpj_info;
           P64[Hp] = R2;
           R4 = R4;
           R3 = R3;
           R2 = Hp - 6;
           call GHC.Read.list3_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fReadDown1_info" {
     Data.Ord.$fReadDown1_info:
         const Data.Ord.$fReadDown1_entry;
         const 0;
         const 64424509454;
         const 12884901911;
         const S5dsv_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.379519662 UTC

[section ""data" . Data.Ord.$fReadDown_$creadsPrec_closure" {
     Data.Ord.$fReadDown_$creadsPrec_closure:
         const Data.Ord.$fReadDown_$creadsPrec_info;
         const 0;
 },
 sat_s5dpm_entry() //  [R1]
         { []
         }
     {offset
       c5dyU: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dyV; else goto c5dyW;
       c5dyV: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dyW: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R4 = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Ord.$fReadDown1_entry(R4,
                                           R3,
                                           R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5dpm_info" {
     sat_s5dpm_info:
         const sat_s5dpm_entry;
         const 2;
         const 4294967314;
         const S5dsv_srt+32;
 },
 Data.Ord.$fReadDown_$creadsPrec_entry() //  [R2, R3]
         { []
         }
     {offset
       c5dyX: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5dz1; else goto c5dz0;
       c5dz1: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$fReadDown_$creadsPrec_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dz0: // global
           I64[Hp - 24] = sat_s5dpm_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R2 = Hp - 24;
           R1 = Text.ParserCombinators.ReadP.run_closure+2;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fReadDown_$creadsPrec_info" {
     Data.Ord.$fReadDown_$creadsPrec_info:
         const Data.Ord.$fReadDown_$creadsPrec_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S5dsv_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.389406192 UTC

[section ""data" . Data.Ord.$fReadDown_$creadListPrec_closure" {
     Data.Ord.$fReadDown_$creadListPrec_closure:
         const Data.Ord.$fReadDown_$creadListPrec_info;
         const 0;
 },
 sat_s5dpo_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dzn: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Ord.$fReadDown1_entry(R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dpo_info" {
     sat_s5dpo_info:
         const sat_s5dpo_entry;
         const 1;
         const 4294967305;
         const 8589934607;
         const S5dsv_srt+32;
 },
 Data.Ord.$fReadDown_$creadListPrec_entry() //  [R2]
         { []
         }
     {offset
       c5dzq: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5dzu; else goto c5dzt;
       c5dzu: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = Data.Ord.$fReadDown_$creadListPrec_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5dzt: // global
           I64[Hp - 8] = sat_s5dpo_info;
           P64[Hp] = R2;
           R2 = Hp - 6;
           call GHC.Read.list_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fReadDown_$creadListPrec_info" {
     Data.Ord.$fReadDown_$creadListPrec_info:
         const Data.Ord.$fReadDown_$creadListPrec_entry;
         const 0;
         const 55834574862;
         const 4294967301;
         const S5dsv_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.396329254 UTC

[section ""data" . Data.Ord.$fReadDown_$creadList_closure" {
     Data.Ord.$fReadDown_$creadList_closure:
         const Data.Ord.$fReadDown_$creadList_info;
         const 0;
 },
 sat_s5dpq_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dzQ: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Ord.$fReadDown1_entry(R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dpq_info" {
     sat_s5dpq_info:
         const sat_s5dpq_entry;
         const 1;
         const 4294967305;
         const 8589934607;
         const S5dsv_srt+32;
 },
 sat_s5dpr_entry() //  [R1]
         { []
         }
     {offset
       c5dzT: // global
           _s5dpr::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto c5dzU; else goto c5dzV;
       c5dzV: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5dzX; else goto c5dzW;
       c5dzX: // global
           HpAlloc = 16;
           goto c5dzU;
       c5dzU: // global
           R1 = _s5dpr::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dzW: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5dpr::P64;
           _s5dpp::P64 = P64[_s5dpr::P64 + 16];
           I64[Hp - 8] = sat_s5dpq_info;
           P64[Hp] = _s5dpp::P64;
           R2 = Hp - 6;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = GHC.Read.$fRead()7_closure;
           P64[Sp - 24] = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           Sp = Sp - 40;
           call GHC.Read.list_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5dpr_info" {
     sat_s5dpr_info:
         const sat_s5dpr_entry;
         const 1;
         const 21474836496;
         const S5dsv_srt+32;
 },
 Data.Ord.$fReadDown_$creadList_entry() //  [R2]
         { []
         }
     {offset
       c5dzY: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5dA2; else goto c5dA1;
       c5dA2: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Data.Ord.$fReadDown_$creadList_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5dA1: // global
           I64[Hp - 16] = sat_s5dpr_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           R1 = Text.ParserCombinators.ReadP.run_closure+2;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fReadDown_$creadList_info" {
     Data.Ord.$fReadDown_$creadList_info:
         const Data.Ord.$fReadDown_$creadList_entry;
         const 0;
         const 90194313230;
         const 4294967301;
         const S5dsv_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.405561062 UTC

[section ""data" . Data.Ord.$fReadDown_closure" {
     Data.Ord.$fReadDown_closure:
         const Data.Ord.$fReadDown_info;
         const 0;
 },
 sat_s5dpw_entry() //  [R1]
         { []
         }
     {offset
       c5dAu: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dAv; else goto c5dAw;
       c5dAv: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dAw: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Ord.$fReadDown_$creadListPrec_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5dpw_info" {
     sat_s5dpw_info:
         const sat_s5dpw_entry;
         const 1;
         const 4294967312;
         const S5dsv_srt+56;
 },
 sat_s5dpv_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dAC: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Ord.$fReadDown1_entry(R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dpv_info" {
     sat_s5dpv_info:
         const sat_s5dpv_entry;
         const 1;
         const 4294967305;
         const 8589934607;
         const S5dsv_srt+32;
 },
 sat_s5dpu_entry() //  [R1]
         { []
         }
     {offset
       c5dAJ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dAK; else goto c5dAL;
       c5dAK: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dAL: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Ord.$fReadDown_$creadList_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5dpu_info" {
     sat_s5dpu_info:
         const sat_s5dpu_entry;
         const 1;
         const 4294967312;
         const S5dsv_srt+64;
 },
 sat_s5dpt_entry() //  [R1, R2]
         { []
         }
     {offset
       c5dAR: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Ord.$fReadDown_$creadsPrec_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dpt_info" {
     sat_s5dpt_info:
         const sat_s5dpt_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5dsv_srt+40;
 },
 Data.Ord.$fReadDown_entry() //  [R2]
         { []
         }
     {offset
       c5dAV: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto c5dAZ; else goto c5dAY;
       c5dAZ: // global
           HpAlloc = 120;
           R2 = R2;
           R1 = Data.Ord.$fReadDown_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5dAY: // global
           I64[Hp - 112] = sat_s5dpw_info;
           P64[Hp - 96] = R2;
           I64[Hp - 88] = sat_s5dpv_info;
           P64[Hp - 80] = R2;
           I64[Hp - 72] = sat_s5dpu_info;
           P64[Hp - 56] = R2;
           I64[Hp - 48] = sat_s5dpt_info;
           P64[Hp - 40] = R2;
           I64[Hp - 32] = GHC.Read.C:Read_con_info;
           P64[Hp - 24] = Hp - 47;
           P64[Hp - 16] = Hp - 72;
           P64[Hp - 8] = Hp - 86;
           P64[Hp] = Hp - 112;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fReadDown_info" {
     Data.Ord.$fReadDown_info:
         const Data.Ord.$fReadDown_entry;
         const 0;
         const 253403070478;
         const 4294967301;
         const S5dsv_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.416039444 UTC

[section ""cstring" . Data.Ord.$fShowDown3_bytes" {
     Data.Ord.$fShowDown3_bytes:
         I8[] [68,111,119,110,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.418528592 UTC

[section ""data" . Data.Ord.$fShowDown2_closure" {
     Data.Ord.$fShowDown2_closure:
         const Data.Ord.$fShowDown2_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Ord.$fShowDown2_entry() //  [R1]
         { []
         }
     {offset
       c5dBB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dBC; else goto c5dBD;
       c5dBC: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dBD: // global
           (_c5dBy::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5dBy::I64 == 0) goto c5dBA; else goto c5dBz;
       c5dBA: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5dBz: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5dBy::I64;
           R2 = Data.Ord.$fShowDown3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Ord.$fShowDown2_info" {
     Data.Ord.$fShowDown2_info:
         const Data.Ord.$fShowDown2_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.426596537 UTC

[section ""data" . Data.Ord.$w$cshowsPrec_closure" {
     Data.Ord.$w$cshowsPrec_closure:
         const Data.Ord.$w$cshowsPrec_info;
         const 0;
 },
 g_s5dpA_entry() //  [R1]
         { []
         }
     {offset
       c5dBU: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5dBV; else goto c5dBW;
       c5dBV: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dBW: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Data.Ord.$fReadDown2_closure+1;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 40;
           call GHC.Show.showsPrec_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . g_s5dpA_info" {
     g_s5dpA_info:
         const g_s5dpA_entry;
         const 2;
         const 18;
 },
 sat_s5dpD_entry() //  [R1]
         { []
         }
     {offset
       c5dC9: // global
           R2 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dpD_info" {
     sat_s5dpD_info:
         const sat_s5dpD_entry;
         const 2;
         const 18;
 },
 sat_s5dpE_entry() //  [R1, R2]
         { []
         }
     {offset
       c5dCc: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5dCg; else goto c5dCf;
       c5dCg: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5dCf: // global
           _s5dpA::P64 = P64[R1 + 7];
           I64[Hp - 24] = sat_s5dpD_info;
           P64[Hp - 8] = _s5dpA::P64;
           P64[Hp] = R2;
           R3 = Hp - 24;
           R2 = Data.Ord.$fShowDown2_closure;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dpE_info" {
     sat_s5dpE_info:
         const sat_s5dpE_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5dsv_srt+80;
 },
 sat_s5dpH_entry() //  [R1]
         { []
         }
     {offset
       c5dCw: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5dCA; else goto c5dCz;
       c5dCA: // global
           HpAlloc = 24;
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dCz: // global
           _s5dpA::P64 = P64[R1 + 16];
           _s5dpF::P64 = P64[R1 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)2_closure;
           P64[Hp] = _s5dpF::P64;
           R2 = Hp - 14;
           R1 = _s5dpA::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dpH_info" {
     sat_s5dpH_info:
         const sat_s5dpH_entry;
         const 2;
         const 18;
 },
 sat_s5dpI_entry() //  [R1]
         { []
         }
     {offset
       c5dCB: // global
           _s5dpI::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5dCC; else goto c5dCD;
       c5dCD: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5dCF; else goto c5dCE;
       c5dCF: // global
           HpAlloc = 32;
           goto c5dCC;
       c5dCC: // global
           R1 = _s5dpI::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dCE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5dpI::P64;
           _s5dpA::P64 = P64[_s5dpI::P64 + 16];
           _s5dpF::P64 = P64[_s5dpI::P64 + 24];
           I64[Hp - 24] = sat_s5dpH_info;
           P64[Hp - 8] = _s5dpA::P64;
           P64[Hp] = _s5dpF::P64;
           R3 = Hp - 24;
           R2 = Data.Ord.$fShowDown2_closure;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5dpI_info" {
     sat_s5dpI_info:
         const sat_s5dpI_entry;
         const 2;
         const 4294967314;
         const S5dsv_srt+80;
 },
 sat_s5dpJ_entry() //  [R1, R2]
         { []
         }
     {offset
       c5dCH: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5dCL; else goto c5dCK;
       c5dCL: // global
           HpAlloc = 56;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5dCK: // global
           _s5dpA::P64 = P64[R1 + 7];
           I64[Hp - 48] = sat_s5dpI_info;
           P64[Hp - 32] = _s5dpA::P64;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)4_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dpJ_info" {
     sat_s5dpJ_info:
         const sat_s5dpJ_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5dsv_srt+80;
 },
 Data.Ord.$w$cshowsPrec_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5dCP: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5dCT; else goto c5dCS;
       c5dCT: // global
           HpAlloc = 48;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$w$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dCS: // global
           I64[Hp - 40] = g_s5dpA_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = R4;
           _c5dBQ::P64 = Hp - 40;
           if (%MO_S_Lt_W64(R3, 11)) goto c5dCN; else goto c5dCO;
       c5dCN: // global
           I64[Hp - 8] = sat_s5dpE_info;
           P64[Hp] = _c5dBQ::P64;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5dCO: // global
           I64[Hp - 8] = sat_s5dpJ_info;
           P64[Hp] = _c5dBQ::P64;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$w$cshowsPrec_info" {
     Data.Ord.$w$cshowsPrec_info:
         const Data.Ord.$w$cshowsPrec_entry;
         const 0;
         const 12884901902;
         const 12884901909;
         const S5dsv_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.443650529 UTC

[section ""data" . Data.Ord.$fShowDown_$cshowsPrec_closure" {
     Data.Ord.$fShowDown_$cshowsPrec_closure:
         const Data.Ord.$fShowDown_$cshowsPrec_info;
         const 0;
 },
 Data.Ord.$fShowDown_$cshowsPrec_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5dDI: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5dDJ; else goto c5dDK;
       c5dDJ: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$fShowDown_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dDK: // global
           I64[Sp - 24] = block_c5dDF_info;
           R1 = R3;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5dDO; else goto c5dDG;
       u5dDO: // global
           call _c5dDF(R1) args: 0, res: 0, upd: 0;
       c5dDG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fShowDown_$cshowsPrec_info" {
     Data.Ord.$fShowDown_$cshowsPrec_info:
         const Data.Ord.$fShowDown_$cshowsPrec_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S5dsv_srt+88;
 },
 _c5dDF() //  [R1]
         { []
         }
     {offset
       c5dDF: // global
           R4 = P64[Sp + 16];
           R3 = I64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 24;
           call Data.Ord.$w$cshowsPrec_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5dDF_info" {
     block_c5dDF_info:
         const _c5dDF;
         const 2;
         const 4294967326;
         const S5dsv_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.44998888 UTC

[section ""data" . Data.Ord.$fShowDown_$cshow_closure" {
     Data.Ord.$fShowDown_$cshow_closure:
         const Data.Ord.$fShowDown_$cshow_info;
         const 0;
 },
 sat_s5dpR_entry() //  [R1]
         { []
         }
     {offset
       c5dE7: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5dE8; else goto c5dE9;
       c5dE8: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dE9: // global
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_ppp_info;
           P64[Sp - 24] = Data.Ord.$fReadDown2_closure+1;
           P64[Sp - 16] = P64[R1 + 24];
           P64[Sp - 8] = GHC.Types.[]_closure+1;
           Sp = Sp - 32;
           call GHC.Show.showsPrec_entry(R2) args: 40, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dpR_info" {
     sat_s5dpR_info:
         const sat_s5dpR_entry;
         const 2;
         const 18;
 },
 Data.Ord.$fShowDown_$cshow_entry() //  [R2, R3]
         { []
         }
     {offset
       c5dEa: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5dEe; else goto c5dEd;
       c5dEe: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$fShowDown_$cshow_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dEd: // global
           I64[Hp - 24] = sat_s5dpR_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R3 = Hp - 24;
           R2 = Data.Ord.$fShowDown2_closure;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fShowDown_$cshow_info" {
     Data.Ord.$fShowDown_$cshow_info:
         const Data.Ord.$fShowDown_$cshow_entry;
         const 0;
         const 38654705678;
         const 8589934607;
         const S5dsv_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.455936677 UTC

[section ""data" . Data.Ord.$fShowDown1_closure" {
     Data.Ord.$fShowDown1_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.458657209 UTC

[section ""data" . Data.Ord.$fShowDown_$cshowList_closure" {
     Data.Ord.$fShowDown_$cshowList_closure:
         const Data.Ord.$fShowDown_$cshowList_info;
         const 0;
 },
 sat_s5dpW_entry() //  [R1, R2]
         { []
         }
     {offset
       c5dED: // global
           R4 = R2;
           R3 = 0;
           R2 = P64[R1 + 7];
           call Data.Ord.$w$cshowsPrec_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dpW_info" {
     sat_s5dpW_info:
         const sat_s5dpW_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5dsv_srt+88;
 },
 Data.Ord.$fShowDown_$cshowList_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5dEG: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5dEK; else goto c5dEJ;
       c5dEK: // global
           HpAlloc = 16;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$fShowDown_$cshowList_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dEJ: // global
           I64[Hp - 8] = sat_s5dpW_info;
           P64[Hp] = R2;
           R4 = R4;
           R3 = R3;
           R2 = Hp - 7;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fShowDown_$cshowList_info" {
     Data.Ord.$fShowDown_$cshowList_info:
         const Data.Ord.$fShowDown_$cshowList_entry;
         const 0;
         const 38654705678;
         const 12884901911;
         const S5dsv_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.465415963 UTC

[section ""data" . Data.Ord.$fShowDown_closure" {
     Data.Ord.$fShowDown_closure:
         const Data.Ord.$fShowDown_info;
         const 0;
 },
 sat_s5dq0_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dF2: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Ord.$fShowDown_$cshowList_entry(R4,
                                                     R3,
                                                     R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dq0_info" {
     sat_s5dq0_info:
         const sat_s5dq0_entry;
         const 1;
         const 4294967305;
         const 8589934607;
         const S5dsv_srt+112;
 },
 sat_s5dpZ_entry() //  [R1, R2]
         { []
         }
     {offset
       c5dFa: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Ord.$fShowDown_$cshow_entry(R3,
                                                 R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dpZ_info" {
     sat_s5dpZ_info:
         const sat_s5dpZ_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5dsv_srt+104;
 },
 sat_s5dpY_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dFi: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Ord.$fShowDown_$cshowsPrec_entry(R4,
                                                      R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dpY_info" {
     sat_s5dpY_info:
         const sat_s5dpY_entry;
         const 1;
         const 4294967305;
         const 8589934607;
         const S5dsv_srt+96;
 },
 Data.Ord.$fShowDown_entry() //  [R2]
         { []
         }
     {offset
       c5dFm: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto c5dFq; else goto c5dFp;
       c5dFq: // global
           HpAlloc = 80;
           R2 = R2;
           R1 = Data.Ord.$fShowDown_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5dFp: // global
           I64[Hp - 72] = sat_s5dq0_info;
           P64[Hp - 64] = R2;
           I64[Hp - 56] = sat_s5dpZ_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = sat_s5dpY_info;
           P64[Hp - 32] = R2;
           I64[Hp - 24] = GHC.Show.C:Show_con_info;
           P64[Hp - 16] = Hp - 38;
           P64[Hp - 8] = Hp - 55;
           P64[Hp] = Hp - 70;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fShowDown_info" {
     Data.Ord.$fShowDown_info:
         const Data.Ord.$fShowDown_entry;
         const 0;
         const 64424509454;
         const 4294967301;
         const S5dsv_srt+96;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.475405229 UTC

[section ""data" . Data.Ord.$fEqDown_closure" {
     Data.Ord.$fEqDown_closure:
         const Data.Ord.$fEqDown_info;
 },
 sat_s5dq3_entry() //  [R1]
         { []
         }
     {offset
       c5dFU: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dFV; else goto c5dFW;
       c5dFV: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dFW: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes./=_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5dq3_info" {
     sat_s5dq3_info:
         const sat_s5dq3_entry;
         const 1;
         const 16;
 },
 sat_s5dq2_entry() //  [R1]
         { []
         }
     {offset
       c5dG1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dG2; else goto c5dG3;
       c5dG2: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dG3: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5dq2_info" {
     sat_s5dq2_info:
         const sat_s5dq2_entry;
         const 1;
         const 16;
 },
 Data.Ord.$fEqDown_entry() //  [R2]
         { []
         }
     {offset
       c5dG5: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c5dG9; else goto c5dG8;
       c5dG9: // global
           HpAlloc = 72;
           R2 = R2;
           R1 = Data.Ord.$fEqDown_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5dG8: // global
           I64[Hp - 64] = sat_s5dq3_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = sat_s5dq2_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = GHC.Classes.C:Eq_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 64;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fEqDown_info" {
     Data.Ord.$fEqDown_info:
         const Data.Ord.$fEqDown_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.483717356 UTC

[section ""data" . Data.Ord.$fOrdDown_$cp1Ord_closure" {
     Data.Ord.$fOrdDown_$cp1Ord_closure:
         const Data.Ord.$fOrdDown_$cp1Ord_info;
 },
 sat_s5dq5_entry() //  [R1]
         { []
         }
     {offset
       c5dGC: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dGD; else goto c5dGE;
       c5dGD: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dGE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.$p1Ord_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5dq5_info" {
     sat_s5dq5_info:
         const sat_s5dq5_entry;
         const 1;
         const 16;
 },
 Data.Ord.$fOrdDown_$cp1Ord_entry() //  [R2]
         { []
         }
     {offset
       c5dGF: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5dGJ; else goto c5dGI;
       c5dGJ: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Data.Ord.$fOrdDown_$cp1Ord_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5dGI: // global
           I64[Hp - 16] = sat_s5dq5_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           call Data.Ord.$fEqDown_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fOrdDown_$cp1Ord_info" {
     Data.Ord.$fOrdDown_$cp1Ord_info:
         const Data.Ord.$fOrdDown_$cp1Ord_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.489965327 UTC

[section ""data" . Data.Ord.$fOrdDown_$c<_closure" {
     Data.Ord.$fOrdDown_$c<_closure:
         const Data.Ord.$fOrdDown_$c<_info;
 },
 Data.Ord.$fOrdDown_$c<_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5dH4: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5dH5; else goto c5dH6;
       c5dH5: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$fOrdDown_$c<_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dH6: // global
           I64[Sp - 8] = block_c5dGY_info;
           R2 = R2;
           I64[Sp - 32] = stg_ap_pp_info;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R3;
           Sp = Sp - 32;
           call GHC.Classes.compare_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fOrdDown_$c<_info" {
     Data.Ord.$fOrdDown_$c<_info:
         const Data.Ord.$fOrdDown_$c<_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5dGY() //  [R1]
         { []
         }
     {offset
       c5dGY: // global
           if (R1 & 7 == 1) goto c5dH2; else goto c5dH1;
       c5dH2: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5dH1: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5dGY_info" {
     block_c5dGY_info:
         const _c5dGY;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.496533921 UTC

[section ""data" . Data.Ord.$fOrdDown_$c>=_closure" {
     Data.Ord.$fOrdDown_$c>=_closure:
         const Data.Ord.$fOrdDown_$c>=_info;
 },
 Data.Ord.$fOrdDown_$c>=_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5dHD: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5dHE; else goto c5dHF;
       c5dHE: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$fOrdDown_$c>=_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dHF: // global
           I64[Sp - 8] = block_c5dHx_info;
           R2 = R2;
           I64[Sp - 32] = stg_ap_pp_info;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R3;
           Sp = Sp - 32;
           call GHC.Classes.compare_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fOrdDown_$c>=_info" {
     Data.Ord.$fOrdDown_$c>=_info:
         const Data.Ord.$fOrdDown_$c>=_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5dHx() //  [R1]
         { []
         }
     {offset
       c5dHx: // global
           if (R1 & 7 == 1) goto c5dHB; else goto c5dHA;
       c5dHB: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5dHA: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5dHx_info" {
     block_c5dHx_info:
         const _c5dHx;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.502532575 UTC

[section ""data" . Data.Ord.$fOrdDown_$c>_closure" {
     Data.Ord.$fOrdDown_$c>_closure:
         const Data.Ord.$fOrdDown_$c>_info;
 },
 Data.Ord.$fOrdDown_$c>_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5dIc: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5dId; else goto c5dIe;
       c5dId: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$fOrdDown_$c>_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dIe: // global
           I64[Sp - 8] = block_c5dI6_info;
           R2 = R2;
           I64[Sp - 32] = stg_ap_pp_info;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R3;
           Sp = Sp - 32;
           call GHC.Classes.compare_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fOrdDown_$c>_info" {
     Data.Ord.$fOrdDown_$c>_info:
         const Data.Ord.$fOrdDown_$c>_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5dI6() //  [R1]
         { []
         }
     {offset
       c5dI6: // global
           if (R1 & 7 == 3) goto c5dIa; else goto c5dI9;
       c5dIa: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5dI9: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5dI6_info" {
     block_c5dI6_info:
         const _c5dI6;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.508861766 UTC

[section ""data" . Data.Ord.$fOrdDown_$c<=_closure" {
     Data.Ord.$fOrdDown_$c<=_closure:
         const Data.Ord.$fOrdDown_$c<=_info;
 },
 Data.Ord.$fOrdDown_$c<=_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5dIL: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5dIM; else goto c5dIN;
       c5dIM: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$fOrdDown_$c<=_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dIN: // global
           I64[Sp - 8] = block_c5dIF_info;
           R2 = R2;
           I64[Sp - 32] = stg_ap_pp_info;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R3;
           Sp = Sp - 32;
           call GHC.Classes.compare_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fOrdDown_$c<=_info" {
     Data.Ord.$fOrdDown_$c<=_info:
         const Data.Ord.$fOrdDown_$c<=_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5dIF() //  [R1]
         { []
         }
     {offset
       c5dIF: // global
           if (R1 & 7 == 3) goto c5dIJ; else goto c5dII;
       c5dIJ: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5dII: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5dIF_info" {
     block_c5dIF_info:
         const _c5dIF;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.516045208 UTC

[section ""data" . Data.Ord.$fOrdDown_$cmax_closure" {
     Data.Ord.$fOrdDown_$cmax_closure:
         const Data.Ord.$fOrdDown_$cmax_info;
 },
 Data.Ord.$fOrdDown_$cmax_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5dJk: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c5dJl; else goto c5dJm;
       c5dJl: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$fOrdDown_$cmax_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dJm: // global
           I64[Sp - 24] = block_c5dJe_info;
           R2 = R2;
           I64[Sp - 48] = stg_ap_pp_info;
           P64[Sp - 40] = R4;
           P64[Sp - 32] = R3;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 48;
           call GHC.Classes.compare_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fOrdDown_$cmax_info" {
     Data.Ord.$fOrdDown_$cmax_info:
         const Data.Ord.$fOrdDown_$cmax_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5dJe() //  [R1]
         { []
         }
     {offset
       c5dJe: // global
           if (R1 & 7 == 3) goto c5dJi; else goto c5dJh;
       c5dJi: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5dJh: // global
           R1 = P64[Sp + 16];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5dJe_info" {
     block_c5dJe_info:
         const _c5dJe;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.522353572 UTC

[section ""data" . Data.Ord.$fOrdDown_$cmin_closure" {
     Data.Ord.$fOrdDown_$cmin_closure:
         const Data.Ord.$fOrdDown_$cmin_info;
 },
 Data.Ord.$fOrdDown_$cmin_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5dJP: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c5dJQ; else goto c5dJR;
       c5dJQ: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Ord.$fOrdDown_$cmin_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dJR: // global
           I64[Sp - 24] = block_c5dJJ_info;
           R2 = R2;
           I64[Sp - 48] = stg_ap_pp_info;
           P64[Sp - 40] = R4;
           P64[Sp - 32] = R3;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 48;
           call GHC.Classes.compare_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fOrdDown_$cmin_info" {
     Data.Ord.$fOrdDown_$cmin_info:
         const Data.Ord.$fOrdDown_$cmin_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5dJJ() //  [R1]
         { []
         }
     {offset
       c5dJJ: // global
           if (R1 & 7 == 3) goto c5dJN; else goto c5dJM;
       c5dJN: // global
           R1 = P64[Sp + 16];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5dJM: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5dJJ_info" {
     block_c5dJJ_info:
         const _c5dJJ;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.532539946 UTC

[section ""data" . Data.Ord.$fOrdDown_closure" {
     Data.Ord.$fOrdDown_closure:
         const Data.Ord.$fOrdDown_info;
 },
 sat_s5dqE_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dKj: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Ord.$fOrdDown_$cmin_entry(R4,
                                               R3,
                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dqE_info" {
     sat_s5dqE_info:
         const sat_s5dqE_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_s5dqD_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dKr: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Ord.$fOrdDown_$cmax_entry(R4,
                                               R3,
                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dqD_info" {
     sat_s5dqD_info:
         const sat_s5dqD_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_s5dqC_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dKz: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Ord.$fOrdDown_$c>=_entry(R4,
                                              R3,
                                              R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dqC_info" {
     sat_s5dqC_info:
         const sat_s5dqC_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_s5dqB_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dKH: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Ord.$fOrdDown_$c>_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dqB_info" {
     sat_s5dqB_info:
         const sat_s5dqB_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_s5dqA_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dKP: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Ord.$fOrdDown_$c<=_entry(R4,
                                              R3,
                                              R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dqA_info" {
     sat_s5dqA_info:
         const sat_s5dqA_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_s5dqz_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dKX: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Ord.$fOrdDown_$c<_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dqz_info" {
     sat_s5dqz_info:
         const sat_s5dqz_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_s5dqy_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5dL5: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5dL6; else goto c5dL7;
       c5dL6: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dL7: // global
           _s5dqw::P64 = R2;
           R2 = P64[R1 + 6];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = _s5dqw::P64;
           Sp = Sp - 24;
           call GHC.Classes.compare_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5dqy_info" {
     sat_s5dqy_info:
         const sat_s5dqy_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_s5dqv_entry() //  [R1]
         { []
         }
     {offset
       c5dLc: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5dLd; else goto c5dLe;
       c5dLd: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5dLe: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Ord.$fOrdDown_$cp1Ord_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5dqv_info" {
     sat_s5dqv_info:
         const sat_s5dqv_entry;
         const 1;
         const 16;
 },
 Data.Ord.$fOrdDown_entry() //  [R2]
         { []
         }
     {offset
       c5dLg: // global
           Hp = Hp + 208;
           if (Hp > HpLim) (likely: False) goto c5dLk; else goto c5dLj;
       c5dLk: // global
           HpAlloc = 208;
           R2 = R2;
           R1 = Data.Ord.$fOrdDown_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5dLj: // global
           I64[Hp - 200] = sat_s5dqE_info;
           P64[Hp - 192] = R2;
           I64[Hp - 184] = sat_s5dqD_info;
           P64[Hp - 176] = R2;
           I64[Hp - 168] = sat_s5dqC_info;
           P64[Hp - 160] = R2;
           I64[Hp - 152] = sat_s5dqB_info;
           P64[Hp - 144] = R2;
           I64[Hp - 136] = sat_s5dqA_info;
           P64[Hp - 128] = R2;
           I64[Hp - 120] = sat_s5dqz_info;
           P64[Hp - 112] = R2;
           I64[Hp - 104] = sat_s5dqy_info;
           P64[Hp - 96] = R2;
           I64[Hp - 88] = sat_s5dqv_info;
           P64[Hp - 72] = R2;
           I64[Hp - 64] = GHC.Classes.C:Ord_con_info;
           P64[Hp - 56] = Hp - 88;
           P64[Hp - 48] = Hp - 102;
           P64[Hp - 40] = Hp - 118;
           P64[Hp - 32] = Hp - 134;
           P64[Hp - 24] = Hp - 150;
           P64[Hp - 16] = Hp - 166;
           P64[Hp - 8] = Hp - 182;
           P64[Hp] = Hp - 198;
           R1 = Hp - 63;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.$fOrdDown_info" {
     Data.Ord.$fOrdDown_info:
         const Data.Ord.$fOrdDown_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.550896376 UTC

[section ""data" . Data.Ord.comparing_closure" {
     Data.Ord.comparing_closure:
         const Data.Ord.comparing_info;
 },
 Data.Ord.comparing_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5dMf: // global
           _s5dqI::P64 = R5;
           _s5dqH::P64 = R4;
           _s5dqG::P64 = R3;
           _s5dqF::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto c5dMg; else goto c5dMh;
       c5dMh: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c5dMj; else goto c5dMi;
       c5dMj: // global
           HpAlloc = 64;
           goto c5dMg;
       c5dMg: // global
           R5 = _s5dqI::P64;
           R4 = _s5dqH::P64;
           R3 = _s5dqG::P64;
           R2 = _s5dqF::P64;
           R1 = Data.Ord.comparing_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5dMi: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = _s5dqG::P64;
           P64[Hp - 32] = _s5dqI::P64;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _s5dqG::P64;
           P64[Hp] = _s5dqH::P64;
           R2 = _s5dqF::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = Hp - 56;
           Sp = Sp - 24;
           call GHC.Classes.compare_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Ord.comparing_info" {
     Data.Ord.comparing_info:
         const Data.Ord.comparing_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.556003506 UTC

[section ""cstring" . Data.Ord.$trModule4_bytes" {
     Data.Ord.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.55777122 UTC

[section ""data" . Data.Ord.$trModule3_closure" {
     Data.Ord.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Ord.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.559446383 UTC

[section ""cstring" . Data.Ord.$trModule2_bytes" {
     Data.Ord.$trModule2_bytes:
         I8[] [68,97,116,97,46,79,114,100]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.561223151 UTC

[section ""data" . Data.Ord.$trModule1_closure" {
     Data.Ord.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Ord.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.563343148 UTC

[section ""data" . Data.Ord.$trModule_closure" {
     Data.Ord.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Ord.$trModule3_closure+1;
         const Data.Ord.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.565175192 UTC

[section ""data" . $krep_r5cDl_closure" {
     $krep_r5cDl_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.567500029 UTC

[section ""data" . Data.Ord.$tcDown1_closure" {
     Data.Ord.$tcDown1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Ord.$fReadDown4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.569340704 UTC

[section ""data" . Data.Ord.$tcDown_closure" {
     Data.Ord.$tcDown_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Ord.$trModule_closure+1;
         const Data.Ord.$tcDown1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 7479183817722852251;
         const 10417149520322703999;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.571088762 UTC

[section ""data" . $krep1_r5cDm_closure" {
     $krep1_r5cDm_closure:
         const :_con_info;
         const $krep_r5cDl_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.572856968 UTC

[section ""data" . $krep2_r5cDn_closure" {
     $krep2_r5cDn_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Ord.$tcDown_closure+1;
         const $krep1_r5cDm_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.57469964 UTC

[section ""data" . Data.Ord.$tc'Down1_closure" {
     Data.Ord.$tc'Down1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r5cDl_closure+2;
         const $krep2_r5cDn_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.57656288 UTC

[section ""cstring" . Data.Ord.$tc'Down3_bytes" {
     Data.Ord.$tc'Down3_bytes:
         I8[] [39,68,111,119,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.578926811 UTC

[section ""data" . Data.Ord.$tc'Down2_closure" {
     Data.Ord.$tc'Down2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Ord.$tc'Down3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.580746302 UTC

[section ""data" . Data.Ord.$tc'Down_closure" {
     Data.Ord.$tc'Down_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Ord.$trModule_closure+1;
         const Data.Ord.$tc'Down2_closure+1;
         const Data.Ord.$tc'Down1_closure+4;
         const 2181324915805229541;
         const 7680134812570657793;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:12.583030725 UTC

[section ""relreadonly" . S5dsv_srt" {
     S5dsv_srt:
         const GHC.Err.errorWithoutStackTrace_closure;
         const Text.Read.Lex.$wexpect_closure;
         const Data.Ord.$fReadDown_lexeme_closure;
         const GHC.Read.list3_closure;
         const Data.Ord.$fReadDown1_closure;
         const Data.Ord.$fReadDown_$creadsPrec_closure;
         const GHC.Read.list_closure;
         const Data.Ord.$fReadDown_$creadListPrec_closure;
         const Data.Ord.$fReadDown_$creadList_closure;
         const Data.Ord.$fReadDown_closure;
         const Data.Ord.$fShowDown2_closure;
         const Data.Ord.$w$cshowsPrec_closure;
         const Data.Ord.$fShowDown_$cshowsPrec_closure;
         const Data.Ord.$fShowDown_$cshow_closure;
         const Data.Ord.$fShowDown_$cshowList_closure;
         const Data.Ord.$fShowDown_closure;
 }]

