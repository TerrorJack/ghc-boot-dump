
==================== Tidy Core ====================
2018-03-16 16:02:20.235607485 UTC

Result size of Tidy Core
  = {terms: 1,089, types: 2,272, coercions: 2,234, joins: 0/8}

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$fReadConst3 :: Int
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Data.Functor.Const.$fReadConst3 = GHC.Types.I# 11#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$fReadConst5 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
Data.Functor.Const.$fReadConst5 = "Const"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$fReadConst4 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Data.Functor.Const.$fReadConst4
  = unpackCString# Data.Functor.Const.$fReadConst5

-- RHS size: {terms: 59, types: 105, coercions: 5, joins: 0/3}
Data.Functor.Const.$w$creadsPrec [InlPrag=NOUSERINLINE[0]]
  :: forall k a (b :: k).
     Read a =>
     Int# -> String -> [(Const a b, String)]
[GblId,
 Arity=3,
 Str=<L,U(C(C1(U)),A,A,A)><S,U><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [30 0 0] 402 0}]
Data.Functor.Const.$w$creadsPrec
  = \ (@ k_s74Xh)
      (@ a_s74Xi)
      (@ (b_s74Xj :: k_s74Xh))
      (w_s74Xk :: Read a_s74Xi)
      (ww_s74Xp :: Int#)
      (w1_s74Xm :: String) ->
      letrec {
        go_s74Ye [Occ=LoopBreaker]
          :: [(String, String)] -> [(Const a_s74Xi b_s74Xj, String)]
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        go_s74Ye
          = \ (ds_i6HCZ :: [(String, String)]) ->
              case ds_i6HCZ of {
                [] -> GHC.Types.[] @ (Const a_s74Xi b_s74Xj, String);
                : y_i6HD4 ys_i6HD5 ->
                  case y_i6HD4 of { (ds1_d74LL, s_a735h) ->
                  case eqString ds1_d74LL Data.Functor.Const.$fReadConst4 of {
                    False -> go_s74Ye ys_i6HD5;
                    True ->
                      let {
                        z_X6HFk :: [(Const a_s74Xi b_s74Xj, String)]
                        [LclId]
                        z_X6HFk = go_s74Ye ys_i6HD5 } in
                      letrec {
                        go1_X6HFn [Occ=LoopBreaker]
                          :: [(a_s74Xi, String)] -> [(Const a_s74Xi b_s74Xj, String)]
                        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                        go1_X6HFn
                          = \ (ds2_X6HFp :: [(a_s74Xi, String)]) ->
                              case ds2_X6HFp of {
                                [] -> z_X6HFk;
                                : y1_X6HFx ys1_X6HFz ->
                                  case y1_X6HFx of { (x_a735i, t_a735j) ->
                                  GHC.Types.:
                                    @ (Const a_s74Xi b_s74Xj, String)
                                    (x_a735i
                                     `cast` (Sym (Data.Functor.Const.N:Const[0]
                                                      <k_s74Xh>_N <a_s74Xi>_R <b_s74Xj>_P)
                                             :: (a_s74Xi :: *) ~R# (Const a_s74Xi b_s74Xj :: *)),
                                     t_a735j)
                                    (go1_X6HFn ys1_X6HFz)
                                  }
                              }; } in
                      go1_X6HFn
                        (readsPrec
                           @ a_s74Xi w_s74Xk Data.Functor.Const.$fReadConst3 s_a735h)
                  }
                  }
              }; } in
      readParen
        @ (Const a_s74Xi b_s74Xj)
        (tagToEnum# @ Bool (># ww_s74Xp 10#))
        (\ (r_a735g :: String) ->
           go_s74Ye
             (Text.ParserCombinators.ReadP.run @ String GHC.Read.lex1 r_a735g))
        w1_s74Xm

-- RHS size: {terms: 13, types: 14, coercions: 0, joins: 0/0}
Data.Functor.Const.$fReadConst_$creadsPrec [InlPrag=NOUSERINLINE[0]]
  :: forall k a (b :: k).
     Read a =>
     Int -> Text.ParserCombinators.ReadP.ReadS (Const a b)
[GblId,
 Arity=3,
 Str=<L,U(C(C1(U)),A,A,A)><S(S),1*U(U)><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_s74Xh)
                 (@ a_s74Xi)
                 (@ (b_s74Xj :: k_s74Xh))
                 (w_s74Xk [Occ=Once] :: Read a_s74Xi)
                 (w1_s74Xl [Occ=Once!] :: Int)
                 (w2_s74Xm [Occ=Once] :: String) ->
                 case w1_s74Xl of { I# ww1_s74Xp [Occ=Once] ->
                 Data.Functor.Const.$w$creadsPrec
                   @ k_s74Xh @ a_s74Xi @ b_s74Xj w_s74Xk ww1_s74Xp w2_s74Xm
                 }}]
Data.Functor.Const.$fReadConst_$creadsPrec
  = \ (@ k_s74Xh)
      (@ a_s74Xi)
      (@ (b_s74Xj :: k_s74Xh))
      (w_s74Xk :: Read a_s74Xi)
      (w1_s74Xl :: Int)
      (w2_s74Xm :: String) ->
      case w1_s74Xl of { I# ww1_s74Xp ->
      Data.Functor.Const.$w$creadsPrec
        @ k_s74Xh @ a_s74Xi @ b_s74Xj w_s74Xk ww1_s74Xp w2_s74Xm
      }

-- RHS size: {terms: 16, types: 33, coercions: 0, joins: 0/0}
Data.Functor.Const.$fReadConst2
  :: forall k a (b :: k).
     Read a =>
     Text.ParserCombinators.ReadPrec.Prec
     -> forall b1.
        (Const a b -> Text.ParserCombinators.ReadP.P b1)
        -> Text.ParserCombinators.ReadP.P b1
[GblId,
 Arity=3,
 Str=<L,U(C(C1(U)),A,A,A)><L,U(U)><L,C(U)>m2,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a74v9)
                 (@ a_a74va)
                 (@ (b_a74vb :: k_a74v9))
                 ($dRead_a74vc [Occ=Once] :: Read a_a74va)
                 (n_i74LV [Occ=Once] :: Text.ParserCombinators.ReadPrec.Prec)
                 (@ b1_i74LX)
                 (eta_B1 [Occ=Once]
                    :: Const a_a74va b_a74vb
                       -> Text.ParserCombinators.ReadP.P b1_i74LX) ->
                 case Text.ParserCombinators.ReadP.$wreadS_to_P
                        @ (Const a_a74va b_a74vb)
                        (Data.Functor.Const.$fReadConst_$creadsPrec
                           @ k_a74v9 @ a_a74va @ b_a74vb $dRead_a74vc n_i74LV)
                        @ b1_i74LX
                        eta_B1
                 of
                 { (# ww1_i74M4 [Occ=Once] #) ->
                 Text.ParserCombinators.ReadP.Look @ b1_i74LX ww1_i74M4
                 }}]
Data.Functor.Const.$fReadConst2
  = \ (@ k_a74v9)
      (@ a_a74va)
      (@ (b_a74vb :: k_a74v9))
      ($dRead_a74vc :: Read a_a74va)
      (n_i74LV :: Text.ParserCombinators.ReadPrec.Prec)
      (@ b1_i74LX)
      (eta_B1
         :: Const a_a74va b_a74vb
            -> Text.ParserCombinators.ReadP.P b1_i74LX) ->
      case Text.ParserCombinators.ReadP.$wreadS_to_P
             @ (Const a_a74va b_a74vb)
             (Data.Functor.Const.$fReadConst_$creadsPrec
                @ k_a74v9 @ a_a74va @ b_a74vb $dRead_a74vc n_i74LV)
             @ b1_i74LX
             eta_B1
      of
      { (# ww1_i74M4 #) ->
      Text.ParserCombinators.ReadP.Look @ b1_i74LX ww1_i74M4
      }

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst5 :: Int
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Data.Functor.Const.$fFoldableConst5 = GHC.Types.I# 0#

-- RHS size: {terms: 10, types: 29, coercions: 27, joins: 0/0}
Data.Functor.Const.$fReadConst_$creadList
  :: forall k a (b :: k).
     Read a =>
     Text.ParserCombinators.ReadP.ReadS [Const a b]
[GblId,
 Arity=1,
 Str=<L,U(C(C1(U)),A,A,A)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_X74wR)
                 (@ a_X74wT)
                 (@ (b_X74wV :: k_X74wR))
                 ($dRead_X74wX [Occ=Once] :: Read a_X74wT) ->
                 Text.ParserCombinators.ReadP.run
                   @ [Const a_X74wT b_X74wV]
                   (((((GHC.Read.list
                          @ (Const a_X74wT b_X74wV)
                          ((Data.Functor.Const.$fReadConst2
                              @ k_X74wR @ a_X74wT @ b_X74wV $dRead_X74wX)
                           `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                                    ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                                  <Const
                                                     a_X74wT
                                                     b_X74wV>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                             <Const
                                                                                a_X74wT b_X74wV>_R)
                                   :: (Text.ParserCombinators.ReadPrec.Prec
                                       -> forall b.
                                          (Const a_X74wT b_X74wV
                                           -> Text.ParserCombinators.ReadP.P b)
                                          -> Text.ParserCombinators.ReadP.P b :: *)
                                      ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                                             (Const a_X74wT b_X74wV) :: *))))
                       `cast` (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                   <[Const a_X74wT b_X74wV]>_R
                               :: (Text.ParserCombinators.ReadPrec.ReadPrec
                                     [Const a_X74wT b_X74wV] :: *)
                                  ~R# (Text.ParserCombinators.ReadPrec.Prec
                                       -> Text.ParserCombinators.ReadP.ReadP
                                            [Const a_X74wT b_X74wV] :: *)))
                        Data.Functor.Const.$fFoldableConst5)
                     `cast` (Text.ParserCombinators.ReadP.N:ReadP[0]
                                 <[Const a_X74wT b_X74wV]>_R
                             :: (Text.ParserCombinators.ReadP.ReadP
                                   [Const a_X74wT b_X74wV] :: *)
                                ~R# (forall b.
                                     ([Const a_X74wT b_X74wV] -> Text.ParserCombinators.ReadP.P b)
                                     -> Text.ParserCombinators.ReadP.P b :: *)))
                      @ [Const a_X74wT b_X74wV]
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ [Const a_X74wT b_X74wV]))}]
Data.Functor.Const.$fReadConst_$creadList
  = \ (@ k_X74wR)
      (@ a_X74wT)
      (@ (b_X74wV :: k_X74wR))
      ($dRead_X74wX :: Read a_X74wT) ->
      Text.ParserCombinators.ReadP.run
        @ [Const a_X74wT b_X74wV]
        (((((GHC.Read.list
               @ (Const a_X74wT b_X74wV)
               ((Data.Functor.Const.$fReadConst2
                   @ k_X74wR @ a_X74wT @ b_X74wV $dRead_X74wX)
                `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Const
                                          a_X74wT
                                          b_X74wV>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                  <Const a_X74wT b_X74wV>_R)
                        :: (Text.ParserCombinators.ReadPrec.Prec
                            -> forall b.
                               (Const a_X74wT b_X74wV -> Text.ParserCombinators.ReadP.P b)
                               -> Text.ParserCombinators.ReadP.P b :: *)
                           ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                                  (Const a_X74wT b_X74wV) :: *))))
            `cast` (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                        <[Const a_X74wT b_X74wV]>_R
                    :: (Text.ParserCombinators.ReadPrec.ReadPrec
                          [Const a_X74wT b_X74wV] :: *)
                       ~R# (Text.ParserCombinators.ReadPrec.Prec
                            -> Text.ParserCombinators.ReadP.ReadP
                                 [Const a_X74wT b_X74wV] :: *)))
             Data.Functor.Const.$fFoldableConst5)
          `cast` (Text.ParserCombinators.ReadP.N:ReadP[0]
                      <[Const a_X74wT b_X74wV]>_R
                  :: (Text.ParserCombinators.ReadP.ReadP
                        [Const a_X74wT b_X74wV] :: *)
                     ~R# (forall b.
                          ([Const a_X74wT b_X74wV] -> Text.ParserCombinators.ReadP.P b)
                          -> Text.ParserCombinators.ReadP.P b :: *)))
           @ [Const a_X74wT b_X74wV]
           (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
              @ [Const a_X74wT b_X74wV]))

-- RHS size: {terms: 22, types: 65, coercions: 27, joins: 0/2}
Data.Functor.Const.$w$creadListPrec [InlPrag=NOUSERINLINE[0]]
  :: forall k a (b :: k).
     Read a =>
     forall b1.
     ([Const a b] -> Text.ParserCombinators.ReadP.P b1)
     -> Text.ParserCombinators.ReadP.P b1
[GblId,
 Arity=1,
 Str=<L,U(C(C1(U)),A,A,A)>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 160 60}]
Data.Functor.Const.$w$creadListPrec
  = \ (@ k_s74Xs)
      (@ a_s74Xt)
      (@ (b_s74Xu :: k_s74Xs))
      (w_s74Xv :: Read a_s74Xt) ->
      let {
        w1_s74V0 :: Text.ParserCombinators.ReadP.P [Const a_s74Xt b_s74Xu]
        [LclId]
        w1_s74V0
          = ((((GHC.Read.list
                  @ (Const a_s74Xt b_s74Xu)
                  ((Data.Functor.Const.$fReadConst2
                      @ k_s74Xs @ a_s74Xt @ b_s74Xu w_s74Xv)
                   `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                            ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                          <Const
                                             a_s74Xt
                                             b_s74Xu>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                     <Const a_s74Xt b_s74Xu>_R)
                           :: (Text.ParserCombinators.ReadPrec.Prec
                               -> forall b.
                                  (Const a_s74Xt b_s74Xu -> Text.ParserCombinators.ReadP.P b)
                                  -> Text.ParserCombinators.ReadP.P b :: *)
                              ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                                     (Const a_s74Xt b_s74Xu) :: *))))
               `cast` (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                           <[Const a_s74Xt b_s74Xu]>_R
                       :: (Text.ParserCombinators.ReadPrec.ReadPrec
                             [Const a_s74Xt b_s74Xu] :: *)
                          ~R# (Text.ParserCombinators.ReadPrec.Prec
                               -> Text.ParserCombinators.ReadP.ReadP
                                    [Const a_s74Xt b_s74Xu] :: *)))
                Data.Functor.Const.$fFoldableConst5)
             `cast` (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <[Const a_s74Xt b_s74Xu]>_R
                     :: (Text.ParserCombinators.ReadP.ReadP
                           [Const a_s74Xt b_s74Xu] :: *)
                        ~R# (forall b.
                             ([Const a_s74Xt b_s74Xu] -> Text.ParserCombinators.ReadP.P b)
                             -> Text.ParserCombinators.ReadP.P b :: *)))
              @ [Const a_s74Xt b_s74Xu]
              (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                 @ [Const a_s74Xt b_s74Xu]) } in
      let {
        w2_s74UZ [Dmd=<L,C(U)>]
          :: Text.ParserCombinators.ReadP.ReadS [Const a_s74Xt b_s74Xu]
        [LclId, Arity=1, Unf=OtherCon []]
        w2_s74UZ
          = Text.ParserCombinators.ReadP.run
              @ [Const a_s74Xt b_s74Xu] w1_s74V0 } in
      \ (@ b1_i74Ma)
        (w3_i74Mb
           :: [Const a_s74Xt b_s74Xu]
              -> Text.ParserCombinators.ReadP.P b1_i74Ma) ->
        case Text.ParserCombinators.ReadP.$wreadS_to_P
               @ [Const a_s74Xt b_s74Xu] w2_s74UZ @ b1_i74Ma w3_i74Mb
        of
        { (# ww1_i74Me #) ->
        Text.ParserCombinators.ReadP.Look @ b1_i74Ma ww1_i74Me
        }

-- RHS size: {terms: 7, types: 11, coercions: 0, joins: 0/0}
Data.Functor.Const.$fReadConst1 [InlPrag=NOUSERINLINE[0]]
  :: forall k a (b :: k).
     Read a =>
     Text.ParserCombinators.ReadPrec.Prec
     -> forall b1.
        ([Const a b] -> Text.ParserCombinators.ReadP.P b1)
        -> Text.ParserCombinators.ReadP.P b1
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A,A,A)><L,A>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ k_s74Xs)
                 (@ a_s74Xt)
                 (@ (b_s74Xu :: k_s74Xs))
                 (w_s74Xv [Occ=Once] :: Read a_s74Xt)
                 _ [Occ=Dead] ->
                 Data.Functor.Const.$w$creadListPrec
                   @ k_s74Xs @ a_s74Xt @ b_s74Xu w_s74Xv}]
Data.Functor.Const.$fReadConst1
  = \ (@ k_s74Xs)
      (@ a_s74Xt)
      (@ (b_s74Xu :: k_s74Xs))
      (w_s74Xv :: Read a_s74Xt)
      _ [Occ=Dead] ->
      Data.Functor.Const.$w$creadListPrec
        @ k_s74Xs @ a_s74Xt @ b_s74Xu w_s74Xv

-- RHS size: {terms: 16, types: 35, coercions: 32, joins: 0/1}
Data.Functor.Const.$fReadConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall k a (b :: k). Read a => Read (Const a b)
[GblId[DFunId],
 Arity=1,
 Str=<L,U(C(C1(U)),A,A,A)>m,
 Unf=DFun: \ (@ k_a736A)
             (@ a_a735d)
             (@ (b_a735e :: k_a736A))
             (v_B1 :: Read a_a735d) ->
       GHC.Read.C:Read TYPE: Const a_a735d b_a735e
                       Data.Functor.Const.$fReadConst_$creadsPrec
                         @ k_a736A @ a_a735d @ b_a735e v_B1
                       Data.Functor.Const.$fReadConst_$creadList
                         @ k_a736A @ a_a735d @ b_a735e v_B1
                       (Data.Functor.Const.$fReadConst2
                          @ k_a736A @ a_a735d @ b_a735e v_B1)
                       `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                                ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                              <Const
                                                 a_a735d
                                                 b_a735e>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                         <Const a_a735d b_a735e>_R)
                               :: (Text.ParserCombinators.ReadPrec.Prec
                                   -> forall b.
                                      (Const a_a735d b_a735e -> Text.ParserCombinators.ReadP.P b)
                                      -> Text.ParserCombinators.ReadP.P b :: *)
                                  ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                                         (Const a_a735d b_a735e) :: *))
                       (Data.Functor.Const.$fReadConst1
                          @ k_a736A @ a_a735d @ b_a735e v_B1)
                       `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                                ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                              <[Const
                                                  a_a735d
                                                  b_a735e]>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                           <[Const
                                                                               a_a735d b_a735e]>_R)
                               :: (Text.ParserCombinators.ReadPrec.Prec
                                   -> forall b.
                                      ([Const a_a735d b_a735e] -> Text.ParserCombinators.ReadP.P b)
                                      -> Text.ParserCombinators.ReadP.P b :: *)
                                  ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                                         [Const a_a735d b_a735e] :: *))]
Data.Functor.Const.$fReadConst
  = \ (@ k_X74yN)
      (@ a_X74x0)
      (@ (b_X74x2 :: k_X74yN))
      ($dRead_X74x4 :: Read a_X74x0) ->
      let {
        lvl_s74Yf
          :: forall b1.
             ([Const a_X74x0 b_X74x2] -> Text.ParserCombinators.ReadP.P b1)
             -> Text.ParserCombinators.ReadP.P b1
        [LclId]
        lvl_s74Yf
          = Data.Functor.Const.$w$creadListPrec
              @ k_X74yN @ a_X74x0 @ b_X74x2 $dRead_X74x4 } in
      GHC.Read.C:Read
        @ (Const a_X74x0 b_X74x2)
        (Data.Functor.Const.$fReadConst_$creadsPrec
           @ k_X74yN @ a_X74x0 @ b_X74x2 $dRead_X74x4)
        (Data.Functor.Const.$fReadConst_$creadList
           @ k_X74yN @ a_X74x0 @ b_X74x2 $dRead_X74x4)
        ((Data.Functor.Const.$fReadConst2
            @ k_X74yN @ a_X74x0 @ b_X74x2 $dRead_X74x4)
         `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                  ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                <Const
                                   a_X74x0
                                   b_X74x2>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                           <Const a_X74x0 b_X74x2>_R)
                 :: (Text.ParserCombinators.ReadPrec.Prec
                     -> forall b.
                        (Const a_X74x0 b_X74x2 -> Text.ParserCombinators.ReadP.P b)
                        -> Text.ParserCombinators.ReadP.P b :: *)
                    ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                           (Const a_X74x0 b_X74x2) :: *)))
        ((\ _ [Occ=Dead] -> lvl_s74Yf)
         `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                  ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                <[Const
                                    a_X74x0
                                    b_X74x2]>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                             <[Const a_X74x0 b_X74x2]>_R)
                 :: (Text.ParserCombinators.ReadPrec.Prec
                     -> forall b.
                        ([Const a_X74x0 b_X74x2] -> Text.ParserCombinators.ReadP.P b)
                        -> Text.ParserCombinators.ReadP.P b :: *)
                    ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                           [Const a_X74x0 b_X74x2] :: *)))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$fShowConst2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
Data.Functor.Const.$fShowConst2 = "Const "#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$fShowConst1 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Data.Functor.Const.$fShowConst1
  = unpackCString# Data.Functor.Const.$fShowConst2

-- RHS size: {terms: 31, types: 22, coercions: 4, joins: 0/1}
Data.Functor.Const.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: forall k a (b :: k).
     Show a =>
     Int# -> Const a b -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Str=<L,1*U(1*C1(C1(C(U))),A,A)><S,U><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [30 0 0] 211 120}]
Data.Functor.Const.$w$cshowsPrec
  = \ (@ k_s74Xy)
      (@ a_s74Xz)
      (@ (b_s74XA :: k_s74Xy))
      (w_s74XB :: Show a_s74Xz)
      (ww_s74XG :: Int#)
      (w1_s74XD :: Const a_s74Xz b_s74XA) ->
      let {
        g_s74UV [Dmd=<L,C(U)>] :: String -> String
        [LclId]
        g_s74UV
          = showsPrec
              @ a_s74Xz
              w_s74XB
              Data.Functor.Const.$fReadConst3
              (w1_s74XD
               `cast` (Data.Functor.Const.N:Const[0]
                           <k_s74Xy>_N <a_s74Xz>_R <b_s74XA>_P
                       :: (Const a_s74Xz b_s74XA :: *) ~R# (a_s74Xz :: *))) } in
      case ># ww_s74XG 10# of {
        __DEFAULT ->
          \ (x_i6HAl :: String) ->
            ++ @ Char Data.Functor.Const.$fShowConst1 (g_s74UV x_i6HAl);
        1# ->
          \ (x_i6HAc :: String) ->
            GHC.Types.:
              @ Char
              GHC.Show.$fShow(,)4
              (++
                 @ Char
                 Data.Functor.Const.$fShowConst1
                 (g_s74UV (GHC.Types.: @ Char GHC.Show.$fShow(,)2 x_i6HAc)))
      }

-- RHS size: {terms: 13, types: 17, coercions: 0, joins: 0/0}
Data.Functor.Const.$fShowConst_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: forall k a (b :: k).
     Show a =>
     Int -> Const a b -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Str=<L,1*U(1*C1(C1(C(U))),A,A)><S(S),1*U(U)><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_s74Xy)
                 (@ a_s74Xz)
                 (@ (b_s74XA :: k_s74Xy))
                 (w_s74XB [Occ=Once] :: Show a_s74Xz)
                 (w1_s74XC [Occ=Once!] :: Int)
                 (w2_s74XD [Occ=Once] :: Const a_s74Xz b_s74XA) ->
                 case w1_s74XC of { I# ww1_s74XG [Occ=Once] ->
                 Data.Functor.Const.$w$cshowsPrec
                   @ k_s74Xy @ a_s74Xz @ b_s74XA w_s74XB ww1_s74XG w2_s74XD
                 }}]
Data.Functor.Const.$fShowConst_$cshowsPrec
  = \ (@ k_s74Xy)
      (@ a_s74Xz)
      (@ (b_s74XA :: k_s74Xy))
      (w_s74XB :: Show a_s74Xz)
      (w1_s74XC :: Int)
      (w2_s74XD :: Const a_s74Xz b_s74XA) ->
      case w1_s74XC of { I# ww1_s74XG ->
      Data.Functor.Const.$w$cshowsPrec
        @ k_s74Xy @ a_s74Xz @ b_s74XA w_s74XB ww1_s74XG w2_s74XD
      }

-- RHS size: {terms: 12, types: 14, coercions: 4, joins: 0/0}
Data.Functor.Const.$fShowConst_$cshow
  :: forall k a (b :: k). Show a => Const a b -> String
[GblId,
 Arity=2,
 Str=<L,1*U(1*C1(C1(C1(U))),A,A)><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a74uA)
                 (@ a_a74uB)
                 (@ (b_a74uC :: k_a74uA))
                 ($dShow_a74uD [Occ=Once] :: Show a_a74uB)
                 (x_i6HAp [Occ=Once] :: Const a_a74uB b_a74uC) ->
                 augment
                   @ Char
                   (\ (@ b1_i6HGY)
                      (c_i6HGZ [Occ=Once, OS=OneShot] :: Char -> b1_i6HGY -> b1_i6HGY)
                      (n_i6HH0 [Occ=Once, OS=OneShot] :: b1_i6HGY) ->
                      foldr
                        @ Char @ b1_i6HGY c_i6HGZ n_i6HH0 Data.Functor.Const.$fShowConst1)
                   (showsPrec
                      @ a_a74uB
                      $dShow_a74uD
                      Data.Functor.Const.$fReadConst3
                      (x_i6HAp
                       `cast` (Data.Functor.Const.N:Const[0]
                                   <k_a74uA>_N <a_a74uB>_R <b_a74uC>_P
                               :: (Const a_a74uB b_a74uC :: *) ~R# (a_a74uB :: *)))
                      (GHC.Types.[] @ Char))}]
Data.Functor.Const.$fShowConst_$cshow
  = \ (@ k_a74uA)
      (@ a_a74uB)
      (@ (b_a74uC :: k_a74uA))
      ($dShow_a74uD :: Show a_a74uB)
      (x_i6HAp :: Const a_a74uB b_a74uC) ->
      ++
        @ Char
        Data.Functor.Const.$fShowConst1
        (showsPrec
           @ a_a74uB
           $dShow_a74uD
           Data.Functor.Const.$fReadConst3
           (x_i6HAp
            `cast` (Data.Functor.Const.N:Const[0]
                        <k_a74uA>_N <a_a74uB>_R <b_a74uC>_P
                    :: (Const a_a74uB b_a74uC :: *) ~R# (a_a74uB :: *)))
           (GHC.Types.[] @ Char))

-- RHS size: {terms: 14, types: 24, coercions: 0, joins: 0/0}
Data.Functor.Const.$fShowConst_$cshowList
  :: forall k a (b :: k). Show a => [Const a b] -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Str=<L,U(C(C1(C(U))),A,A)><S,1*U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a74uA)
                 (@ a_a74uB)
                 (@ (b_a74uC :: k_a74uA))
                 ($dShow_a74uD [Occ=Once] :: Show a_a74uB)
                 (ls_i6HAs [Occ=Once] :: [Const a_a74uB b_a74uC])
                 (s_i6HAt [Occ=Once] :: String) ->
                 GHC.Show.showList__
                   @ (Const a_a74uB b_a74uC)
                   (Data.Functor.Const.$fShowConst_$cshowsPrec
                      @ k_a74uA
                      @ a_a74uB
                      @ b_a74uC
                      $dShow_a74uD
                      Data.Functor.Const.$fFoldableConst5)
                   ls_i6HAs
                   s_i6HAt}]
Data.Functor.Const.$fShowConst_$cshowList
  = \ (@ k_a74uA)
      (@ a_a74uB)
      (@ (b_a74uC :: k_a74uA))
      ($dShow_a74uD :: Show a_a74uB)
      (ls_i6HAs :: [Const a_a74uB b_a74uC])
      (s_i6HAt :: String) ->
      GHC.Show.showList__
        @ (Const a_a74uB b_a74uC)
        (\ (w_s74XD :: Const a_a74uB b_a74uC) ->
           Data.Functor.Const.$w$cshowsPrec
             @ k_a74uA @ a_a74uB @ b_a74uC $dShow_a74uD 0# w_s74XD)
        ls_i6HAs
        s_i6HAt

-- RHS size: {terms: 11, types: 20, coercions: 0, joins: 0/0}
Data.Functor.Const.$fShowConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall k a (b :: k). Show a => Show (Const a b)
[GblId[DFunId],
 Arity=1,
 Str=<L,U(C(C1(C(U))),A,A)>m,
 Unf=DFun: \ (@ k_a7368)
             (@ a_a7359)
             (@ (b_a735a :: k_a7368))
             (v_B1 :: Show a_a7359) ->
       GHC.Show.C:Show TYPE: Const a_a7359 b_a735a
                       Data.Functor.Const.$fShowConst_$cshowsPrec
                         @ k_a7368 @ a_a7359 @ b_a735a v_B1
                       Data.Functor.Const.$fShowConst_$cshow
                         @ k_a7368 @ a_a7359 @ b_a735a v_B1
                       Data.Functor.Const.$fShowConst_$cshowList
                         @ k_a7368 @ a_a7359 @ b_a735a v_B1]
Data.Functor.Const.$fShowConst
  = \ (@ k_a74uA)
      (@ a_a74uB)
      (@ (b_a74uC :: k_a74uA))
      ($dShow_a74uD :: Show a_a74uB) ->
      GHC.Show.C:Show
        @ (Const a_a74uB b_a74uC)
        (Data.Functor.Const.$fShowConst_$cshowsPrec
           @ k_a74uA @ a_a74uB @ b_a74uC $dShow_a74uD)
        (Data.Functor.Const.$fShowConst_$cshow
           @ k_a74uA @ a_a74uB @ b_a74uC $dShow_a74uD)
        (Data.Functor.Const.$fShowConst_$cshowList
           @ k_a74uA @ a_a74uB @ b_a74uC $dShow_a74uD)

-- RHS size: {terms: 8, types: 16, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst_$cfoldMap
  :: forall m1 m2 a. Monoid m2 => (a -> m2) -> Const m1 a -> m2
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(LSLL),1*U(A,1*U,A,A)><L,A><L,A>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ m_a74s7)
                 (@ m1_a74sl)
                 (@ a_a74sm)
                 ($dMonoid_a74so [Occ=Once] :: Monoid m1_a74sl)
                 _ [Occ=Dead]
                 _ [Occ=Dead] ->
                 mempty @ m1_a74sl $dMonoid_a74so}]
Data.Functor.Const.$fFoldableConst_$cfoldMap
  = \ (@ m_a74s7)
      (@ m1_a74sl)
      (@ a_a74sm)
      ($dMonoid_a74so :: Monoid m1_a74sl)
      _ [Occ=Dead]
      _ [Occ=Dead] ->
      mempty @ m1_a74sl $dMonoid_a74so

-- RHS size: {terms: 6, types: 12, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst_$cfold
  :: forall m1 m2. Monoid m2 => Const m1 m2 -> m2
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LSLL),1*U(A,1*U,A,A)><L,A>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ m_a74s7)
                 (@ m1_a74sb)
                 ($dMonoid_a74sd [Occ=Once] :: Monoid m1_a74sb)
                 _ [Occ=Dead] ->
                 mempty @ m1_a74sb $dMonoid_a74sd}]
Data.Functor.Const.$fFoldableConst_$cfold
  = \ (@ m_a74s7)
      (@ m1_a74sb)
      ($dMonoid_a74sd :: Monoid m1_a74sb)
      _ [Occ=Dead] ->
      mempty @ m1_a74sb $dMonoid_a74sd

-- RHS size: {terms: 6, types: 12, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst_$csum
  :: forall m a. Num a => Const m a -> a
[GblId,
 Arity=2,
 Str=<S(LLLLLLC(S)),1*U(A,A,A,A,A,A,1*C1(U))><L,A>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ m_a74s7)
                 (@ a_a74uh)
                 ($dNum_a74uj [Occ=Once] :: Num a_a74uh)
                 _ [Occ=Dead] ->
                 Data.Semigroup.Internal.$fMonoidSum2 @ a_a74uh $dNum_a74uj}]
Data.Functor.Const.$fFoldableConst_$csum
  = \ (@ m_a74s7)
      (@ a_a74uh)
      ($dNum_a74uj :: Num a_a74uh)
      _ [Occ=Dead] ->
      Data.Semigroup.Internal.$fMonoidSum2 @ a_a74uh $dNum_a74uj

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
Data.Functor.Const.$fFoldableConst2 = "minimum: empty structure"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst1 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Data.Functor.Const.$fFoldableConst1
  = unpackCString# Data.Functor.Const.$fFoldableConst2

-- RHS size: {terms: 6, types: 13, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst_$cminimum
  :: forall m a. Ord a => Const m a -> a
[GblId,
 Arity=2,
 Str=<B,A><B,A>x,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ m_a74s7) (@ a_a74u7) _ [Occ=Dead] _ [Occ=Dead] ->
                 errorWithoutStackTrace
                   @ 'LiftedRep @ a_a74u7 Data.Functor.Const.$fFoldableConst1}]
Data.Functor.Const.$fFoldableConst_$cminimum
  = \ (@ m_a74s7) (@ a_a74u7) _ [Occ=Dead] _ [Occ=Dead] ->
      errorWithoutStackTrace
        @ 'LiftedRep @ a_a74u7 Data.Functor.Const.$fFoldableConst1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst4 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
Data.Functor.Const.$fFoldableConst4 = "maximum: empty structure"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst3 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Data.Functor.Const.$fFoldableConst3
  = unpackCString# Data.Functor.Const.$fFoldableConst4

-- RHS size: {terms: 6, types: 13, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst_$cmaximum
  :: forall m a. Ord a => Const m a -> a
[GblId,
 Arity=2,
 Str=<B,A><B,A>x,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ m_a74s7) (@ a_a74tX) _ [Occ=Dead] _ [Occ=Dead] ->
                 errorWithoutStackTrace
                   @ 'LiftedRep @ a_a74tX Data.Functor.Const.$fFoldableConst3}]
Data.Functor.Const.$fFoldableConst_$cmaximum
  = \ (@ m_a74s7) (@ a_a74tX) _ [Occ=Dead] _ [Occ=Dead] ->
      errorWithoutStackTrace
        @ 'LiftedRep @ a_a74tX Data.Functor.Const.$fFoldableConst3

-- RHS size: {terms: 6, types: 12, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst_$celem
  :: forall m a. Eq a => a -> Const m a -> Bool
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,A><L,A><L,A>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ m_a74s7)
                 (@ a_a74tN)
                 _ [Occ=Dead]
                 _ [Occ=Dead]
                 _ [Occ=Dead] ->
                 GHC.Types.False}]
Data.Functor.Const.$fFoldableConst_$celem
  = \ (@ m_a74s7)
      (@ a_a74tN)
      _ [Occ=Dead]
      _ [Occ=Dead]
      _ [Occ=Dead] ->
      GHC.Types.False

-- RHS size: {terms: 7, types: 15, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst_$cfoldl
  :: forall m b a. (b -> a -> b) -> b -> Const m a -> b
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,A><S,1*U><L,A>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ m_a74s7)
                 (@ b_a74sP)
                 (@ a_a74sQ)
                 _ [Occ=Dead]
                 (z_X6Kbm [Occ=Once] :: b_a74sP)
                 _ [Occ=Dead] ->
                 z_X6Kbm}]
Data.Functor.Const.$fFoldableConst_$cfoldl
  = \ (@ m_a74s7)
      (@ b_a74sP)
      (@ a_a74sQ)
      _ [Occ=Dead]
      (z_X6Kbm :: b_a74sP)
      _ [Occ=Dead] ->
      z_X6Kbm

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst7 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
Data.Functor.Const.$fFoldableConst7 = "foldl1: empty structure"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst6 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Data.Functor.Const.$fFoldableConst6
  = unpackCString# Data.Functor.Const.$fFoldableConst7

-- RHS size: {terms: 6, types: 14, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst_$cfoldl1
  :: forall m a. (a -> a -> a) -> Const m a -> a
[GblId,
 Arity=2,
 Str=<B,A><B,A>x,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ m_a74s7) (@ a_a74th) _ [Occ=Dead] _ [Occ=Dead] ->
                 errorWithoutStackTrace
                   @ 'LiftedRep @ a_a74th Data.Functor.Const.$fFoldableConst6}]
Data.Functor.Const.$fFoldableConst_$cfoldl1
  = \ (@ m_a74s7) (@ a_a74th) _ [Occ=Dead] _ [Occ=Dead] ->
      errorWithoutStackTrace
        @ 'LiftedRep @ a_a74th Data.Functor.Const.$fFoldableConst6

-- RHS size: {terms: 7, types: 15, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst_$cfoldr'
  :: forall m a b. (a -> b -> b) -> b -> Const m a -> b
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,A><S,1*U><L,A>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ m_a74s7)
                 (@ a_a74sF)
                 (@ b_a74sG)
                 _ [Occ=Dead]
                 (z0_a6K7t [Occ=Once] :: b_a74sG)
                 _ [Occ=Dead] ->
                 z0_a6K7t}]
Data.Functor.Const.$fFoldableConst_$cfoldr'
  = \ (@ m_a74s7)
      (@ a_a74sF)
      (@ b_a74sG)
      _ [Occ=Dead]
      (z0_a6K7t :: b_a74sG)
      _ [Occ=Dead] ->
      z0_a6K7t

-- RHS size: {terms: 4, types: 9, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst_$clength
  :: forall m a. Const m a -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,A>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ m_a74s7) (@ a_a74tF) _ [Occ=Dead] ->
                 Data.Functor.Const.$fFoldableConst5}]
Data.Functor.Const.$fFoldableConst_$clength
  = \ (@ m_a74s7) (@ a_a74tF) _ [Occ=Dead] ->
      Data.Functor.Const.$fFoldableConst5

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst9 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
Data.Functor.Const.$fFoldableConst9 = "foldr1: empty structure"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst8 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Data.Functor.Const.$fFoldableConst8
  = unpackCString# Data.Functor.Const.$fFoldableConst9

-- RHS size: {terms: 6, types: 14, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst_$cfoldr1
  :: forall m a. (a -> a -> a) -> Const m a -> a
[GblId,
 Arity=2,
 Str=<B,A><B,A>x,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ m_a74s7) (@ a_a74t9) _ [Occ=Dead] _ [Occ=Dead] ->
                 errorWithoutStackTrace
                   @ 'LiftedRep @ a_a74t9 Data.Functor.Const.$fFoldableConst8}]
Data.Functor.Const.$fFoldableConst_$cfoldr1
  = \ (@ m_a74s7) (@ a_a74t9) _ [Occ=Dead] _ [Occ=Dead] ->
      errorWithoutStackTrace
        @ 'LiftedRep @ a_a74t9 Data.Functor.Const.$fFoldableConst8

-- RHS size: {terms: 4, types: 9, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst_$cnull
  :: forall m a. Const m a -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,A>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ m_a74s7) (@ a_a74tx) _ [Occ=Dead] -> GHC.Types.True}]
Data.Functor.Const.$fFoldableConst_$cnull
  = \ (@ m_a74s7) (@ a_a74tx) _ [Occ=Dead] -> GHC.Types.True

-- RHS size: {terms: 6, types: 12, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst_$cproduct
  :: forall m a. Num a => Const m a -> a
[GblId,
 Arity=2,
 Str=<S(LLLLLLC(S)),1*U(A,A,A,A,A,A,1*C1(U))><L,A>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ m_a74s7)
                 (@ a_a74ur)
                 ($dNum_a74ut [Occ=Once] :: Num a_a74ur)
                 _ [Occ=Dead] ->
                 Data.Semigroup.Internal.$fMonoidProduct2 @ a_a74ur $dNum_a74ut}]
Data.Functor.Const.$fFoldableConst_$cproduct
  = \ (@ m_a74s7)
      (@ a_a74ur)
      ($dNum_a74ut :: Num a_a74ur)
      _ [Occ=Dead] ->
      Data.Semigroup.Internal.$fMonoidProduct2 @ a_a74ur $dNum_a74ut

-- RHS size: {terms: 4, types: 10, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst_$ctoList [InlPrag=INLINE (sat-args=1)]
  :: forall m a. Const m a -> [a]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,A>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ m_a74s7) (@ a_a74tp) _ [Occ=Dead] ->
                 build
                   @ a_a74tp
                   (\ (@ b_a6KNB)
                      _ [Occ=Dead, OS=OneShot]
                      (n_a6K7X [Occ=Once, OS=OneShot] :: b_a6KNB) ->
                      n_a6K7X)}]
Data.Functor.Const.$fFoldableConst_$ctoList
  = \ (@ m_a74s7) (@ a_a74tp) _ [Occ=Dead] -> GHC.Types.[] @ a_a74tp

-- RHS size: {terms: 18, types: 22, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFoldableConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall m. Foldable (Const m)
[GblId[DFunId],
 Unf=DFun: \ (@ m_a7358) ->
       Data.Foldable.C:Foldable TYPE: Const m_a7358
                                Data.Functor.Const.$fFoldableConst_$cfold @ m_a7358
                                Data.Functor.Const.$fFoldableConst_$cfoldMap @ m_a7358
                                Data.Functor.Const.$fFoldableConst_$cfoldr' @ m_a7358
                                Data.Functor.Const.$fFoldableConst_$cfoldr' @ m_a7358
                                Data.Functor.Const.$fFoldableConst_$cfoldl @ m_a7358
                                Data.Functor.Const.$fFoldableConst_$cfoldl @ m_a7358
                                Data.Functor.Const.$fFoldableConst_$cfoldr1 @ m_a7358
                                Data.Functor.Const.$fFoldableConst_$cfoldl1 @ m_a7358
                                Data.Functor.Const.$fFoldableConst_$ctoList @ m_a7358
                                Data.Functor.Const.$fFoldableConst_$cnull @ m_a7358
                                Data.Functor.Const.$fFoldableConst_$clength @ m_a7358
                                Data.Functor.Const.$fFoldableConst_$celem @ m_a7358
                                Data.Functor.Const.$fFoldableConst_$cmaximum @ m_a7358
                                Data.Functor.Const.$fFoldableConst_$cminimum @ m_a7358
                                Data.Functor.Const.$fFoldableConst_$csum @ m_a7358
                                Data.Functor.Const.$fFoldableConst_$cproduct @ m_a7358]
Data.Functor.Const.$fFoldableConst
  = \ (@ m_a74s7) ->
      Data.Foldable.C:Foldable
        @ (Const m_a74s7)
        (Data.Functor.Const.$fFoldableConst_$cfold @ m_a74s7)
        (Data.Functor.Const.$fFoldableConst_$cfoldMap @ m_a74s7)
        (Data.Functor.Const.$fFoldableConst_$cfoldr' @ m_a74s7)
        (Data.Functor.Const.$fFoldableConst_$cfoldr' @ m_a74s7)
        (Data.Functor.Const.$fFoldableConst_$cfoldl @ m_a74s7)
        (Data.Functor.Const.$fFoldableConst_$cfoldl @ m_a74s7)
        (Data.Functor.Const.$fFoldableConst_$cfoldr1 @ m_a74s7)
        (Data.Functor.Const.$fFoldableConst_$cfoldl1 @ m_a74s7)
        (Data.Functor.Const.$fFoldableConst_$ctoList @ m_a74s7)
        (Data.Functor.Const.$fFoldableConst_$cnull @ m_a74s7)
        (Data.Functor.Const.$fFoldableConst_$clength @ m_a74s7)
        (Data.Functor.Const.$fFoldableConst_$celem @ m_a74s7)
        (Data.Functor.Const.$fFoldableConst_$cmaximum @ m_a74s7)
        (Data.Functor.Const.$fFoldableConst_$cminimum @ m_a74s7)
        (Data.Functor.Const.$fFoldableConst_$csum @ m_a74s7)
        (Data.Functor.Const.$fFoldableConst_$cproduct @ m_a74s7)

-- RHS size: {terms: 6, types: 13, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFunctorConst2
  :: forall m a b. (a -> b) -> Const m a -> Const m a
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,A><S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ m_a74rH)
                 (@ a_a74rL)
                 (@ b_a74rM)
                 _ [Occ=Dead]
                 (ds1_d74Jt [Occ=Once] :: Const m_a74rH a_a74rL) ->
                 ds1_d74Jt}]
Data.Functor.Const.$fFunctorConst2
  = \ (@ m_a74rH)
      (@ a_a74rL)
      (@ b_a74rM)
      _ [Occ=Dead]
      (ds1_d74Jt :: Const m_a74rH a_a74rL) ->
      ds1_d74Jt

-- RHS size: {terms: 6, types: 12, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFunctorConst1
  :: forall b m a. a -> Const m b -> Const m b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,A><S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ b_a74rZ)
                 (@ m_X74vG)
                 (@ a_a74rY)
                 _ [Occ=Dead]
                 (ds_X74Ny [Occ=Once] :: Const m_X74vG b_a74rZ) ->
                 ds_X74Ny}]
Data.Functor.Const.$fFunctorConst1
  = \ (@ b_a74rZ)
      (@ m_X74vG)
      (@ a_a74rY)
      _ [Occ=Dead]
      (ds_X74Ny :: Const m_X74vG b_a74rZ) ->
      ds_X74Ny

-- RHS size: {terms: 6, types: 14, coercions: 53, joins: 0/0}
Data.Functor.Const.$fFunctorConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall m. Functor (Const m)
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ (@ m_a7356) ->
       GHC.Base.C:Functor TYPE: Const m_a7356
                          (Data.Functor.Const.$fFunctorConst2 @ m_a7356)
                          `cast` (forall (a :: <*>_N) (b :: <*>_N).
                                  <a -> b>_R
                                  ->_R <Const m_a7356 a>_R
                                  ->_R Data.Functor.Const.N:Const[0]
                                           <*>_N
                                           <m_a7356>_R
                                           <a>_P ; Sym (Data.Functor.Const.N:Const[0]
                                                            <*>_N <m_a7356>_R <b>_P)
                                  :: (forall a b.
                                      (a -> b) -> Const m_a7356 a -> Const m_a7356 a :: *)
                                     ~R# (forall a b.
                                          (a -> b) -> Const m_a7356 a -> Const m_a7356 b :: *))
                          (\ (@ a_a74rY) (@ b_a74rZ) ->
                             Data.Functor.Const.$fFunctorConst1 @ b_a74rZ @ m_a7356 @ a_a74rY)
                          `cast` (forall (a :: <*>_N) (b :: <*>_N).
                                  <a>_R
                                  ->_R <Const m_a7356 b>_R
                                  ->_R Data.Functor.Const.N:Const[0]
                                           <*>_N
                                           <m_a7356>_R
                                           <b>_P ; Sym (Data.Functor.Const.N:Const[0]
                                                            <*>_N <m_a7356>_R <a>_P)
                                  :: (forall a b. a -> Const m_a7356 b -> Const m_a7356 b :: *)
                                     ~R# (forall a b.
                                          a -> Const m_a7356 b -> Const m_a7356 a :: *))]
Data.Functor.Const.$fFunctorConst
  = \ (@ m_X74vF) ->
      GHC.Base.C:Functor
        @ (Const m_X74vF)
        ((Data.Functor.Const.$fFunctorConst2 @ m_X74vF)
         `cast` (forall (a :: <*>_N) (b :: <*>_N).
                 <a -> b>_R
                 ->_R <Const m_X74vF a>_R
                 ->_R Data.Functor.Const.N:Const[0]
                          <*>_N <m_X74vF>_R <a>_P ; Sym (Data.Functor.Const.N:Const[0]
                                                             <*>_N <m_X74vF>_R <b>_P)
                 :: (forall a b.
                     (a -> b) -> Const m_X74vF a -> Const m_X74vF a :: *)
                    ~R# (forall a b.
                         (a -> b) -> Const m_X74vF a -> Const m_X74vF b :: *)))
        ((\ (@ a_a74rY) (@ b_a74rZ) ->
            Data.Functor.Const.$fFunctorConst1 @ b_a74rZ @ m_X74vF @ a_a74rY)
         `cast` (forall (a :: <*>_N) (b :: <*>_N).
                 <a>_R
                 ->_R <Const m_X74vF b>_R
                 ->_R Data.Functor.Const.N:Const[0]
                          <*>_N <m_X74vF>_R <b>_P ; Sym (Data.Functor.Const.N:Const[0]
                                                             <*>_N <m_X74vF>_R <a>_P)
                 :: (forall a b. a -> Const m_X74vF b -> Const m_X74vF b :: *)
                    ~R# (forall a b. a -> Const m_X74vF b -> Const m_X74vF a :: *)))

-- RHS size: {terms: 40, types: 69, coercions: 147, joins: 0/1}
Data.Functor.Const.$fApplicativeConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall m. Monoid m => Applicative (Const m)
[GblId[DFunId],
 Arity=1,
 Str=<L,U(A,1*U,U,A)>m,
 Unf=DFun: \ (@ m_a7353) (v_B1 :: Monoid m_a7353) ->
       GHC.Base.C:Applicative TYPE: Const m_a7353
                              Data.Functor.Const.$fFunctorConst @ m_a7353
                              (\ (@ a_X74uY) _ [Occ=Dead] -> mempty @ m_a7353 v_B1)
                              `cast` (forall (a :: <*>_N).
                                      <a>_R
                                      ->_R Sym (Data.Functor.Const.N:Const[0]
                                                    <*>_N <m_a7353>_R <a>_P)
                                      :: (forall a. a -> m_a7353 :: *)
                                         ~R# (forall a. a -> Const m_a7353 a :: *))
                              (\ (@ a_X74v8) (@ b_X74va) -> mappend @ m_a7353 v_B1)
                              `cast` (forall (a :: <*>_N) (b :: <*>_N).
                                      Sym (Data.Functor.Const.N:Const[0]
                                               <*>_N <m_a7353>_R <a -> b>_P)
                                      ->_R Sym (Data.Functor.Const.N:Const[0]
                                                    <*>_N <m_a7353>_R <a>_P)
                                      ->_R Sym (Data.Functor.Const.N:Const[0]
                                                    <*>_N <m_a7353>_R <b>_P)
                                      :: (forall a b. m_a7353 -> m_a7353 -> m_a7353 :: *)
                                         ~R# (forall a b.
                                              Const m_a7353 (a -> b)
                                              -> Const m_a7353 a -> Const m_a7353 b :: *))
                              (\ (@ a_X74vu)
                                 (@ b_X74vw)
                                 (@ c_X74vy)
                                 _ [Occ=Dead]
                                 (ds1_X74Ny [Occ=Once] :: Const m_a7353 a_X74vu)
                                 (ds2_X74NA [Occ=Once] :: Const m_a7353 b_X74vw) ->
                                 mappend
                                   @ m_a7353
                                   v_B1
                                   (ds1_X74Ny
                                    `cast` (Data.Functor.Const.N:Const[0]
                                                <*>_N <m_a7353>_R <a_X74vu>_P
                                            :: (Const m_a7353 a_X74vu :: *) ~R# (m_a7353 :: *)))
                                   (ds2_X74NA
                                    `cast` (Data.Functor.Const.N:Const[0]
                                                <*>_N <m_a7353>_R <b_X74vw>_P
                                            :: (Const m_a7353 b_X74vw :: *) ~R# (m_a7353 :: *))))
                              `cast` (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N).
                                      <a -> b -> c>_R
                                      ->_R <Const m_a7353 a>_R
                                      ->_R <Const m_a7353 b>_R
                                      ->_R Sym (Data.Functor.Const.N:Const[0]
                                                    <*>_N <m_a7353>_R <c>_P)
                                      :: (forall a b c.
                                          (a -> b -> c)
                                          -> Const m_a7353 a -> Const m_a7353 b -> m_a7353 :: *)
                                         ~R# (forall a b c.
                                              (a -> b -> c)
                                              -> Const m_a7353 a
                                              -> Const m_a7353 b
                                              -> Const m_a7353 c :: *))
                              (\ (@ a_X74tN)
                                 (@ b_X74tP)
                                 (a1_i74Jh [Occ=Once] :: Const m_a7353 a_X74tN)
                                 (a2_i74Ji [Occ=Once] :: Const m_a7353 b_X74tP) ->
                                 mappend
                                   @ m_a7353
                                   v_B1
                                   (a1_i74Jh
                                    `cast` (Data.Functor.Const.N:Const[0]
                                                <*>_N <m_a7353>_R <a_X74tN>_P
                                            :: (Const m_a7353 a_X74tN :: *) ~R# (m_a7353 :: *)))
                                   (a2_i74Ji
                                    `cast` (Data.Functor.Const.N:Const[0]
                                                <*>_N <m_a7353>_R <b_X74tP>_P
                                            :: (Const m_a7353 b_X74tP :: *) ~R# (m_a7353 :: *))))
                              `cast` (forall (a :: <*>_N) (b :: <*>_N).
                                      <Const m_a7353 a>_R
                                      ->_R <Const m_a7353 b>_R
                                      ->_R Sym (Data.Functor.Const.N:Const[0]
                                                    <*>_N <m_a7353>_R <b>_P)
                                      :: (forall a b.
                                          Const m_a7353 a -> Const m_a7353 b -> m_a7353 :: *)
                                         ~R# (forall a b.
                                              Const m_a7353 a
                                              -> Const m_a7353 b -> Const m_a7353 b :: *))
                              (\ (@ a_a74ry)
                                 (@ b_a74rz)
                                 (ds_X74Ny [Occ=Once] :: Const m_a7353 a_a74ry)
                                 (ds1_X74NA [Occ=Once] :: Const m_a7353 b_a74rz) ->
                                 mappend
                                   @ m_a7353
                                   v_B1
                                   (ds_X74Ny
                                    `cast` (Data.Functor.Const.N:Const[0]
                                                <*>_N <m_a7353>_R <a_a74ry>_P
                                            :: (Const m_a7353 a_a74ry :: *) ~R# (m_a7353 :: *)))
                                   (ds1_X74NA
                                    `cast` (Data.Functor.Const.N:Const[0]
                                                <*>_N <m_a7353>_R <b_a74rz>_P
                                            :: (Const m_a7353 b_a74rz :: *) ~R# (m_a7353 :: *))))
                              `cast` (forall (a :: <*>_N) (b :: <*>_N).
                                      <Const m_a7353 a>_R
                                      ->_R <Const m_a7353 b>_R
                                      ->_R Sym (Data.Functor.Const.N:Const[0]
                                                    <*>_N <m_a7353>_R <a>_P)
                                      :: (forall a b.
                                          Const m_a7353 a -> Const m_a7353 b -> m_a7353 :: *)
                                         ~R# (forall a b.
                                              Const m_a7353 a
                                              -> Const m_a7353 b -> Const m_a7353 a :: *))]
Data.Functor.Const.$fApplicativeConst
  = \ (@ m_X74uM) ($dMonoid_X74uO :: Monoid m_X74uM) ->
      let {
        lvl_s74VB :: m_X74uM
        [LclId]
        lvl_s74VB = mempty @ m_X74uM $dMonoid_X74uO } in
      GHC.Base.C:Applicative
        @ (Const m_X74uM)
        (Data.Functor.Const.$fFunctorConst @ m_X74uM)
        ((\ (@ a_X74uY) _ [Occ=Dead] -> lvl_s74VB)
         `cast` (forall (a :: <*>_N).
                 <a>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0] <*>_N <m_X74uM>_R <a>_P)
                 :: (forall a. a -> m_X74uM :: *)
                    ~R# (forall a. a -> Const m_X74uM a :: *)))
        ((\ (@ a_X74v8) (@ b_X74va) -> mappend @ m_X74uM $dMonoid_X74uO)
         `cast` (forall (a :: <*>_N) (b :: <*>_N).
                 Sym (Data.Functor.Const.N:Const[0] <*>_N <m_X74uM>_R <a -> b>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0] <*>_N <m_X74uM>_R <a>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0] <*>_N <m_X74uM>_R <b>_P)
                 :: (forall a b. m_X74uM -> m_X74uM -> m_X74uM :: *)
                    ~R# (forall a b.
                         Const m_X74uM (a -> b)
                         -> Const m_X74uM a -> Const m_X74uM b :: *)))
        ((\ (@ a_X74vu)
            (@ b_X74vw)
            (@ c_X74vy)
            _ [Occ=Dead]
            (ds1_X74Ny :: Const m_X74uM a_X74vu)
            (ds2_X74NA :: Const m_X74uM b_X74vw) ->
            mappend
              @ m_X74uM
              $dMonoid_X74uO
              (ds1_X74Ny
               `cast` (Data.Functor.Const.N:Const[0] <*>_N <m_X74uM>_R <a_X74vu>_P
                       :: (Const m_X74uM a_X74vu :: *) ~R# (m_X74uM :: *)))
              (ds2_X74NA
               `cast` (Data.Functor.Const.N:Const[0] <*>_N <m_X74uM>_R <b_X74vw>_P
                       :: (Const m_X74uM b_X74vw :: *) ~R# (m_X74uM :: *))))
         `cast` (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N).
                 <a -> b -> c>_R
                 ->_R <Const m_X74uM a>_R
                 ->_R <Const m_X74uM b>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0] <*>_N <m_X74uM>_R <c>_P)
                 :: (forall a b c.
                     (a -> b -> c)
                     -> Const m_X74uM a -> Const m_X74uM b -> m_X74uM :: *)
                    ~R# (forall a b c.
                         (a -> b -> c)
                         -> Const m_X74uM a -> Const m_X74uM b -> Const m_X74uM c :: *)))
        ((\ (@ a_X74tN)
            (@ b_X74tP)
            (a1_i74Jh :: Const m_X74uM a_X74tN)
            (a2_i74Ji :: Const m_X74uM b_X74tP) ->
            mappend
              @ m_X74uM
              $dMonoid_X74uO
              (a1_i74Jh
               `cast` (Data.Functor.Const.N:Const[0] <*>_N <m_X74uM>_R <a_X74tN>_P
                       :: (Const m_X74uM a_X74tN :: *) ~R# (m_X74uM :: *)))
              (a2_i74Ji
               `cast` (Data.Functor.Const.N:Const[0] <*>_N <m_X74uM>_R <b_X74tP>_P
                       :: (Const m_X74uM b_X74tP :: *) ~R# (m_X74uM :: *))))
         `cast` (forall (a :: <*>_N) (b :: <*>_N).
                 <Const m_X74uM a>_R
                 ->_R <Const m_X74uM b>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0] <*>_N <m_X74uM>_R <b>_P)
                 :: (forall a b. Const m_X74uM a -> Const m_X74uM b -> m_X74uM :: *)
                    ~R# (forall a b.
                         Const m_X74uM a -> Const m_X74uM b -> Const m_X74uM b :: *)))
        ((\ (@ a_a74ry)
            (@ b_a74rz)
            (ds_X74Ny :: Const m_X74uM a_a74ry)
            (ds1_X74NA :: Const m_X74uM b_a74rz) ->
            mappend
              @ m_X74uM
              $dMonoid_X74uO
              (ds_X74Ny
               `cast` (Data.Functor.Const.N:Const[0] <*>_N <m_X74uM>_R <a_a74ry>_P
                       :: (Const m_X74uM a_a74ry :: *) ~R# (m_X74uM :: *)))
              (ds1_X74NA
               `cast` (Data.Functor.Const.N:Const[0] <*>_N <m_X74uM>_R <b_a74rz>_P
                       :: (Const m_X74uM b_a74rz :: *) ~R# (m_X74uM :: *))))
         `cast` (forall (a :: <*>_N) (b :: <*>_N).
                 <Const m_X74uM a>_R
                 ->_R <Const m_X74uM b>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0] <*>_N <m_X74uM>_R <a>_P)
                 :: (forall a b. Const m_X74uM a -> Const m_X74uM b -> m_X74uM :: *)
                    ~R# (forall a b.
                         Const m_X74uM a -> Const m_X74uM b -> Const m_X74uM a :: *)))

-- RHS size: {terms: 23, types: 25, coercions: 120, joins: 0/0}
Data.Functor.Const.$fStorableConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a k (b :: k). Storable a => Storable (Const a b)
[GblId[DFunId],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)>m,
 Unf=DFun: \ (@ a_a7351)
             (@ k_a735l)
             (@ (b_a7352 :: k_a735l))
             (v_B1 :: Storable a_a7351) ->
       Foreign.Storable.C:Storable TYPE: Const a_a7351 b_a7352
                                   (Foreign.Storable.sizeOf @ a_a7351 v_B1)
                                   `cast` (Sym (Data.Functor.Const.N:Const[0]
                                                    <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                           ->_R <Int>_R
                                           :: (a_a7351 -> Int :: *)
                                              ~R# (Const a_a7351 b_a7352 -> Int :: *))
                                   (Foreign.Storable.alignment @ a_a7351 v_B1)
                                   `cast` (Sym (Data.Functor.Const.N:Const[0]
                                                    <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                           ->_R <Int>_R
                                           :: (a_a7351 -> Int :: *)
                                              ~R# (Const a_a7351 b_a7352 -> Int :: *))
                                   (Foreign.Storable.peekElemOff @ a_a7351 v_B1)
                                   `cast` ((GHC.Ptr.Ptr
                                              Univ(phantom phantom <*>_N
                                                   :: a_a7351, Const a_a7351 b_a7352))_R
                                           ->_R <Int>_R
                                           ->_R (IO
                                                   (Sym (Data.Functor.Const.N:Const[0]
                                                             <k_a735l>_N
                                                             <a_a7351>_R
                                                             <b_a7352>_P)))_R
                                           :: (GHC.Ptr.Ptr a_a7351 -> Int -> IO a_a7351 :: *)
                                              ~R# (GHC.Ptr.Ptr (Const a_a7351 b_a7352)
                                                   -> Int -> IO (Const a_a7351 b_a7352) :: *))
                                   (Foreign.Storable.pokeElemOff @ a_a7351 v_B1)
                                   `cast` ((GHC.Ptr.Ptr
                                              Univ(phantom phantom <*>_N
                                                   :: a_a7351, Const a_a7351 b_a7352))_R
                                           ->_R <Int>_R
                                           ->_R Sym (Data.Functor.Const.N:Const[0]
                                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                           ->_R <IO ()>_R
                                           :: (GHC.Ptr.Ptr a_a7351 -> Int -> a_a7351 -> IO () :: *)
                                              ~R# (GHC.Ptr.Ptr (Const a_a7351 b_a7352)
                                                   -> Int -> Const a_a7351 b_a7352 -> IO () :: *))
                                   (\ (@ b1_X74uv) ->
                                      Foreign.Storable.peekByteOff @ a_a7351 v_B1 @ b1_X74uv)
                                   `cast` (forall (b1 :: <*>_N).
                                           <GHC.Ptr.Ptr b1>_R
                                           ->_R <Int>_R
                                           ->_R (IO
                                                   (Sym (Data.Functor.Const.N:Const[0]
                                                             <k_a735l>_N
                                                             <a_a7351>_R
                                                             <b_a7352>_P)))_R
                                           :: (forall b1. GHC.Ptr.Ptr b1 -> Int -> IO a_a7351 :: *)
                                              ~R# (forall b1.
                                                   GHC.Ptr.Ptr b1
                                                   -> Int -> IO (Const a_a7351 b_a7352) :: *))
                                   (\ (@ b1_X74uS) ->
                                      Foreign.Storable.pokeByteOff @ a_a7351 v_B1 @ b1_X74uS)
                                   `cast` (forall (b1 :: <*>_N).
                                           <GHC.Ptr.Ptr b1>_R
                                           ->_R <Int>_R
                                           ->_R Sym (Data.Functor.Const.N:Const[0]
                                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                           ->_R <IO ()>_R
                                           :: (forall b1.
                                               GHC.Ptr.Ptr b1 -> Int -> a_a7351 -> IO () :: *)
                                              ~R# (forall b1.
                                                   GHC.Ptr.Ptr b1
                                                   -> Int -> Const a_a7351 b_a7352 -> IO () :: *))
                                   (Foreign.Storable.peek @ a_a7351 v_B1)
                                   `cast` ((GHC.Ptr.Ptr
                                              Univ(phantom phantom <*>_N
                                                   :: a_a7351, Const a_a7351 b_a7352))_R
                                           ->_R (IO
                                                   (Sym (Data.Functor.Const.N:Const[0]
                                                             <k_a735l>_N
                                                             <a_a7351>_R
                                                             <b_a7352>_P)))_R
                                           :: (GHC.Ptr.Ptr a_a7351 -> IO a_a7351 :: *)
                                              ~R# (GHC.Ptr.Ptr (Const a_a7351 b_a7352)
                                                   -> IO (Const a_a7351 b_a7352) :: *))
                                   (Foreign.Storable.poke @ a_a7351 v_B1)
                                   `cast` ((GHC.Ptr.Ptr
                                              Univ(phantom phantom <*>_N
                                                   :: a_a7351, Const a_a7351 b_a7352))_R
                                           ->_R Sym (Data.Functor.Const.N:Const[0]
                                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                           ->_R <IO ()>_R
                                           :: (GHC.Ptr.Ptr a_a7351 -> a_a7351 -> IO () :: *)
                                              ~R# (GHC.Ptr.Ptr (Const a_a7351 b_a7352)
                                                   -> Const a_a7351 b_a7352 -> IO () :: *))]
Data.Functor.Const.$fStorableConst
  = \ (@ a_X74yE)
      (@ k_X74tm)
      (@ (b_X74to :: k_X74tm))
      ($dStorable_X74tq :: Storable a_X74yE) ->
      Foreign.Storable.C:Storable
        @ (Const a_X74yE b_X74to)
        ((Foreign.Storable.sizeOf @ a_X74yE $dStorable_X74tq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74tm>_N <a_X74yE>_R <b_X74to>_P)
                 ->_R <Int>_R
                 :: (a_X74yE -> Int :: *) ~R# (Const a_X74yE b_X74to -> Int :: *)))
        ((Foreign.Storable.alignment @ a_X74yE $dStorable_X74tq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74tm>_N <a_X74yE>_R <b_X74to>_P)
                 ->_R <Int>_R
                 :: (a_X74yE -> Int :: *) ~R# (Const a_X74yE b_X74to -> Int :: *)))
        ((Foreign.Storable.peekElemOff @ a_X74yE $dStorable_X74tq)
         `cast` ((GHC.Ptr.Ptr
                    Univ(phantom phantom <*>_N :: a_X74yE, Const a_X74yE b_X74to))_R
                 ->_R <Int>_R
                 ->_R (IO
                         (Sym (Data.Functor.Const.N:Const[0]
                                   <k_X74tm>_N <a_X74yE>_R <b_X74to>_P)))_R
                 :: (GHC.Ptr.Ptr a_X74yE -> Int -> IO a_X74yE :: *)
                    ~R# (GHC.Ptr.Ptr (Const a_X74yE b_X74to)
                         -> Int -> IO (Const a_X74yE b_X74to) :: *)))
        ((Foreign.Storable.pokeElemOff @ a_X74yE $dStorable_X74tq)
         `cast` ((GHC.Ptr.Ptr
                    Univ(phantom phantom <*>_N :: a_X74yE, Const a_X74yE b_X74to))_R
                 ->_R <Int>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74tm>_N <a_X74yE>_R <b_X74to>_P)
                 ->_R <IO ()>_R
                 :: (GHC.Ptr.Ptr a_X74yE -> Int -> a_X74yE -> IO () :: *)
                    ~R# (GHC.Ptr.Ptr (Const a_X74yE b_X74to)
                         -> Int -> Const a_X74yE b_X74to -> IO () :: *)))
        ((\ (@ b1_X74uv) ->
            Foreign.Storable.peekByteOff @ a_X74yE $dStorable_X74tq @ b1_X74uv)
         `cast` (forall (b1 :: <*>_N).
                 <GHC.Ptr.Ptr b1>_R
                 ->_R <Int>_R
                 ->_R (IO
                         (Sym (Data.Functor.Const.N:Const[0]
                                   <k_X74tm>_N <a_X74yE>_R <b_X74to>_P)))_R
                 :: (forall b1. GHC.Ptr.Ptr b1 -> Int -> IO a_X74yE :: *)
                    ~R# (forall b1.
                         GHC.Ptr.Ptr b1 -> Int -> IO (Const a_X74yE b_X74to) :: *)))
        ((\ (@ b1_X74uS) ->
            Foreign.Storable.pokeByteOff @ a_X74yE $dStorable_X74tq @ b1_X74uS)
         `cast` (forall (b1 :: <*>_N).
                 <GHC.Ptr.Ptr b1>_R
                 ->_R <Int>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74tm>_N <a_X74yE>_R <b_X74to>_P)
                 ->_R <IO ()>_R
                 :: (forall b1. GHC.Ptr.Ptr b1 -> Int -> a_X74yE -> IO () :: *)
                    ~R# (forall b1.
                         GHC.Ptr.Ptr b1 -> Int -> Const a_X74yE b_X74to -> IO () :: *)))
        ((Foreign.Storable.peek @ a_X74yE $dStorable_X74tq)
         `cast` ((GHC.Ptr.Ptr
                    Univ(phantom phantom <*>_N :: a_X74yE, Const a_X74yE b_X74to))_R
                 ->_R (IO
                         (Sym (Data.Functor.Const.N:Const[0]
                                   <k_X74tm>_N <a_X74yE>_R <b_X74to>_P)))_R
                 :: (GHC.Ptr.Ptr a_X74yE -> IO a_X74yE :: *)
                    ~R# (GHC.Ptr.Ptr (Const a_X74yE b_X74to)
                         -> IO (Const a_X74yE b_X74to) :: *)))
        ((Foreign.Storable.poke @ a_X74yE $dStorable_X74tq)
         `cast` ((GHC.Ptr.Ptr
                    Univ(phantom phantom <*>_N :: a_X74yE, Const a_X74yE b_X74to))_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74tm>_N <a_X74yE>_R <b_X74to>_P)
                 ->_R <IO ()>_R
                 :: (GHC.Ptr.Ptr a_X74yE -> a_X74yE -> IO () :: *)
                    ~R# (GHC.Ptr.Ptr (Const a_X74yE b_X74to)
                         -> Const a_X74yE b_X74to -> IO () :: *)))

-- RHS size: {terms: 19, types: 18, coercions: 91, joins: 0/0}
Data.Functor.Const.$fNumConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a k (b :: k). Num a => Num (Const a b)
[GblId[DFunId],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U(1*U,1*U,1*U,1*U,1*U,1*U,1*U)>m,
 Unf=DFun: \ (@ a_a7351)
             (@ k_a735l)
             (@ (b_a7352 :: k_a735l))
             (v_B1 :: Num a_a7351) ->
       GHC.Num.C:Num TYPE: Const a_a7351 b_a7352
                     (GHC.Num.+ @ a_a7351 v_B1)
                     `cast` (Sym (Data.Functor.Const.N:Const[0]
                                      <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                             ->_R Sym (Data.Functor.Const.N:Const[0]
                                           <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                             ->_R Sym (Data.Functor.Const.N:Const[0]
                                           <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                             :: (a_a7351 -> a_a7351 -> a_a7351 :: *)
                                ~R# (Const a_a7351 b_a7352
                                     -> Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                     (GHC.Num.- @ a_a7351 v_B1)
                     `cast` (Sym (Data.Functor.Const.N:Const[0]
                                      <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                             ->_R Sym (Data.Functor.Const.N:Const[0]
                                           <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                             ->_R Sym (Data.Functor.Const.N:Const[0]
                                           <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                             :: (a_a7351 -> a_a7351 -> a_a7351 :: *)
                                ~R# (Const a_a7351 b_a7352
                                     -> Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                     (GHC.Num.* @ a_a7351 v_B1)
                     `cast` (Sym (Data.Functor.Const.N:Const[0]
                                      <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                             ->_R Sym (Data.Functor.Const.N:Const[0]
                                           <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                             ->_R Sym (Data.Functor.Const.N:Const[0]
                                           <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                             :: (a_a7351 -> a_a7351 -> a_a7351 :: *)
                                ~R# (Const a_a7351 b_a7352
                                     -> Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                     (GHC.Num.negate @ a_a7351 v_B1)
                     `cast` (Sym (Data.Functor.Const.N:Const[0]
                                      <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                             ->_R Sym (Data.Functor.Const.N:Const[0]
                                           <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                             :: (a_a7351 -> a_a7351 :: *)
                                ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                     (GHC.Num.abs @ a_a7351 v_B1)
                     `cast` (Sym (Data.Functor.Const.N:Const[0]
                                      <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                             ->_R Sym (Data.Functor.Const.N:Const[0]
                                           <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                             :: (a_a7351 -> a_a7351 :: *)
                                ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                     (GHC.Num.signum @ a_a7351 v_B1)
                     `cast` (Sym (Data.Functor.Const.N:Const[0]
                                      <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                             ->_R Sym (Data.Functor.Const.N:Const[0]
                                           <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                             :: (a_a7351 -> a_a7351 :: *)
                                ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                     (GHC.Num.fromInteger @ a_a7351 v_B1)
                     `cast` (<integer-simple-0.1.1.1:GHC.Integer.Type.Integer>_R
                             ->_R Sym (Data.Functor.Const.N:Const[0]
                                           <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                             :: (integer-simple-0.1.1.1:GHC.Integer.Type.Integer
                                 -> a_a7351 :: *)
                                ~R# (integer-simple-0.1.1.1:GHC.Integer.Type.Integer
                                     -> Const a_a7351 b_a7352 :: *))]
Data.Functor.Const.$fNumConst
  = \ (@ a_X74vO)
      (@ k_X74n3)
      (@ (b_X74n5 :: k_X74n3))
      ($dNum_X74n7 :: Num a_X74vO) ->
      GHC.Num.C:Num
        @ (Const a_X74vO b_X74n5)
        ((GHC.Num.+ @ a_X74vO $dNum_X74n7)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74n3>_N <a_X74vO>_R <b_X74n5>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74n3>_N <a_X74vO>_R <b_X74n5>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74n3>_N <a_X74vO>_R <b_X74n5>_P)
                 :: (a_X74vO -> a_X74vO -> a_X74vO :: *)
                    ~R# (Const a_X74vO b_X74n5
                         -> Const a_X74vO b_X74n5 -> Const a_X74vO b_X74n5 :: *)))
        ((GHC.Num.- @ a_X74vO $dNum_X74n7)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74n3>_N <a_X74vO>_R <b_X74n5>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74n3>_N <a_X74vO>_R <b_X74n5>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74n3>_N <a_X74vO>_R <b_X74n5>_P)
                 :: (a_X74vO -> a_X74vO -> a_X74vO :: *)
                    ~R# (Const a_X74vO b_X74n5
                         -> Const a_X74vO b_X74n5 -> Const a_X74vO b_X74n5 :: *)))
        ((GHC.Num.* @ a_X74vO $dNum_X74n7)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74n3>_N <a_X74vO>_R <b_X74n5>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74n3>_N <a_X74vO>_R <b_X74n5>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74n3>_N <a_X74vO>_R <b_X74n5>_P)
                 :: (a_X74vO -> a_X74vO -> a_X74vO :: *)
                    ~R# (Const a_X74vO b_X74n5
                         -> Const a_X74vO b_X74n5 -> Const a_X74vO b_X74n5 :: *)))
        ((GHC.Num.negate @ a_X74vO $dNum_X74n7)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74n3>_N <a_X74vO>_R <b_X74n5>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74n3>_N <a_X74vO>_R <b_X74n5>_P)
                 :: (a_X74vO -> a_X74vO :: *)
                    ~R# (Const a_X74vO b_X74n5 -> Const a_X74vO b_X74n5 :: *)))
        ((GHC.Num.abs @ a_X74vO $dNum_X74n7)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74n3>_N <a_X74vO>_R <b_X74n5>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74n3>_N <a_X74vO>_R <b_X74n5>_P)
                 :: (a_X74vO -> a_X74vO :: *)
                    ~R# (Const a_X74vO b_X74n5 -> Const a_X74vO b_X74n5 :: *)))
        ((GHC.Num.signum @ a_X74vO $dNum_X74n7)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74n3>_N <a_X74vO>_R <b_X74n5>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74n3>_N <a_X74vO>_R <b_X74n5>_P)
                 :: (a_X74vO -> a_X74vO :: *)
                    ~R# (Const a_X74vO b_X74n5 -> Const a_X74vO b_X74n5 :: *)))
        ((GHC.Num.fromInteger @ a_X74vO $dNum_X74n7)
         `cast` (<integer-simple-0.1.1.1:GHC.Integer.Type.Integer>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74n3>_N <a_X74vO>_R <b_X74n5>_P)
                 :: (integer-simple-0.1.1.1:GHC.Integer.Type.Integer
                     -> a_X74vO :: *)
                    ~R# (integer-simple-0.1.1.1:GHC.Integer.Type.Integer
                         -> Const a_X74vO b_X74n5 :: *)))

-- RHS size: {terms: 7, types: 11, coercions: 0, joins: 0/0}
Data.Functor.Const.$fRealConst_$cp1Real
  :: forall a k (b :: k). Real a => Num (Const a b)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,1*U(1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U),A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_X74qW)
                 (@ k_X74qY)
                 (@ (b_X74r0 :: k_X74qY))
                 ($dReal_X74r2 [Occ=Once] :: Real a_X74qW) ->
                 Data.Functor.Const.$fNumConst
                   @ a_X74qW
                   @ k_X74qY
                   @ b_X74r0
                   (GHC.Real.$p1Real @ a_X74qW $dReal_X74r2)}]
Data.Functor.Const.$fRealConst_$cp1Real
  = \ (@ a_X74qW)
      (@ k_X74qY)
      (@ (b_X74r0 :: k_X74qY))
      ($dReal_X74r2 :: Real a_X74qW) ->
      Data.Functor.Const.$fNumConst
        @ a_X74qW
        @ k_X74qY
        @ b_X74r0
        (GHC.Real.$p1Real @ a_X74qW $dReal_X74r2)

-- RHS size: {terms: 14, types: 19, coercions: 48, joins: 0/0}
Data.Functor.Const.$fSemigroupConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a k (b :: k). Semigroup a => Semigroup (Const a b)
[GblId[DFunId],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U(1*U,1*U,C(U))>m,
 Unf=DFun: \ (@ a_a7351)
             (@ k_a735l)
             (@ (b_a7352 :: k_a735l))
             (v_B1 :: Semigroup a_a7351) ->
       GHC.Base.C:Semigroup TYPE: Const a_a7351 b_a7352
                            (<> @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 -> a_a7351 -> a_a7351 :: *)
                                       ~R# (Const a_a7351 b_a7352
                                            -> Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                            (sconcat @ a_a7351 v_B1)
                            `cast` ((NonEmpty
                                       (Sym (Data.Functor.Const.N:Const[0]
                                                 <k_a735l>_N <a_a7351>_R <b_a7352>_P)))_R
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (NonEmpty a_a7351 -> a_a7351 :: *)
                                       ~R# (NonEmpty (Const a_a7351 b_a7352)
                                            -> Const a_a7351 b_a7352 :: *))
                            (\ (@ b1_X74w0)
                               ($dIntegral_X74FB [Occ=Once] :: Integral b1_X74w0) ->
                               stimes @ a_a7351 v_B1 @ b1_X74w0 $dIntegral_X74FB)
                            `cast` (forall (b1 :: <*>_N).
                                    <Integral b1>_R
                                    ->_R <b1>_R
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (forall b1. Integral b1 => b1 -> a_a7351 -> a_a7351 :: *)
                                       ~R# (forall b1.
                                            Integral b1 =>
                                            b1
                                            -> Const a_a7351 b_a7352
                                            -> Const a_a7351 b_a7352 :: *))]
Data.Functor.Const.$fSemigroupConst
  = \ (@ a_X74EF)
      (@ k_X74lP)
      (@ (b_X74lR :: k_X74lP))
      ($dSemigroup_X74lT :: Semigroup a_X74EF) ->
      GHC.Base.C:Semigroup
        @ (Const a_X74EF b_X74lR)
        ((<> @ a_X74EF $dSemigroup_X74lT)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74lP>_N <a_X74EF>_R <b_X74lR>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74lP>_N <a_X74EF>_R <b_X74lR>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74lP>_N <a_X74EF>_R <b_X74lR>_P)
                 :: (a_X74EF -> a_X74EF -> a_X74EF :: *)
                    ~R# (Const a_X74EF b_X74lR
                         -> Const a_X74EF b_X74lR -> Const a_X74EF b_X74lR :: *)))
        ((sconcat @ a_X74EF $dSemigroup_X74lT)
         `cast` ((NonEmpty
                    (Sym (Data.Functor.Const.N:Const[0]
                              <k_X74lP>_N <a_X74EF>_R <b_X74lR>_P)))_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74lP>_N <a_X74EF>_R <b_X74lR>_P)
                 :: (NonEmpty a_X74EF -> a_X74EF :: *)
                    ~R# (NonEmpty (Const a_X74EF b_X74lR)
                         -> Const a_X74EF b_X74lR :: *)))
        ((\ (@ b1_X74w0) ($dIntegral_X74FB :: Integral b1_X74w0) ->
            stimes @ a_X74EF $dSemigroup_X74lT @ b1_X74w0 $dIntegral_X74FB)
         `cast` (forall (b1 :: <*>_N).
                 <Integral b1>_R
                 ->_R <b1>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74lP>_N <a_X74EF>_R <b_X74lR>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74lP>_N <a_X74EF>_R <b_X74lR>_P)
                 :: (forall b1. Integral b1 => b1 -> a_X74EF -> a_X74EF :: *)
                    ~R# (forall b1.
                         Integral b1 =>
                         b1 -> Const a_X74EF b_X74lR -> Const a_X74EF b_X74lR :: *)))

-- RHS size: {terms: 7, types: 11, coercions: 0, joins: 0/0}
Data.Functor.Const.$fMonoidConst_$cp1Monoid
  :: forall a k (b :: k). Monoid a => Semigroup (Const a b)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,1*U(1*U(1*U,1*U,C(U)),A,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_X74wl)
                 (@ k_X74wo)
                 (@ (b_X74wr :: k_X74wo))
                 ($dMonoid_X74wu [Occ=Once] :: Monoid a_X74wl) ->
                 Data.Functor.Const.$fSemigroupConst
                   @ a_X74wl
                   @ k_X74wo
                   @ b_X74wr
                   (GHC.Base.$p1Monoid @ a_X74wl $dMonoid_X74wu)}]
Data.Functor.Const.$fMonoidConst_$cp1Monoid
  = \ (@ a_X74wl)
      (@ k_X74wo)
      (@ (b_X74wr :: k_X74wo))
      ($dMonoid_X74wu :: Monoid a_X74wl) ->
      Data.Functor.Const.$fSemigroupConst
        @ a_X74wl
        @ k_X74wo
        @ b_X74wr
        (GHC.Base.$p1Monoid @ a_X74wl $dMonoid_X74wu)

-- RHS size: {terms: 13, types: 17, coercions: 34, joins: 0/0}
Data.Functor.Const.$fMonoidConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a k (b :: k). Monoid a => Monoid (Const a b)
[GblId[DFunId],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U(1*U(1*U,1*U,C(U)),1*U,1*U,1*U)>m,
 Unf=DFun: \ (@ a_a7351)
             (@ k_a735l)
             (@ (b_a7352 :: k_a735l))
             (v_B1 :: Monoid a_a7351) ->
       GHC.Base.C:Monoid TYPE: Const a_a7351 b_a7352
                         Data.Functor.Const.$fMonoidConst_$cp1Monoid
                           @ a_a7351 @ k_a735l @ b_a7352 v_B1
                         (mempty @ a_a7351 v_B1)
                         `cast` (Sym (Data.Functor.Const.N:Const[0]
                                          <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                 :: (a_a7351 :: *) ~R# (Const a_a7351 b_a7352 :: *))
                         (mappend @ a_a7351 v_B1)
                         `cast` (Sym (Data.Functor.Const.N:Const[0]
                                          <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                 ->_R Sym (Data.Functor.Const.N:Const[0]
                                               <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                 ->_R Sym (Data.Functor.Const.N:Const[0]
                                               <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                 :: (a_a7351 -> a_a7351 -> a_a7351 :: *)
                                    ~R# (Const a_a7351 b_a7352
                                         -> Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                         (mconcat @ a_a7351 v_B1)
                         `cast` (([Sym (Data.Functor.Const.N:Const[0]
                                            <k_a735l>_N <a_a7351>_R <b_a7352>_P)])_R
                                 ->_R Sym (Data.Functor.Const.N:Const[0]
                                               <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                 :: ([a_a7351] -> a_a7351 :: *)
                                    ~R# ([Const a_a7351 b_a7352] -> Const a_a7351 b_a7352 :: *))]
Data.Functor.Const.$fMonoidConst
  = \ (@ a_X74mU)
      (@ k_X74mW)
      (@ (b_X74mY :: k_X74mW))
      ($dMonoid_X74n0 :: Monoid a_X74mU) ->
      GHC.Base.C:Monoid
        @ (Const a_X74mU b_X74mY)
        (Data.Functor.Const.$fMonoidConst_$cp1Monoid
           @ a_X74mU @ k_X74mW @ b_X74mY $dMonoid_X74n0)
        ((mempty @ a_X74mU $dMonoid_X74n0)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74mW>_N <a_X74mU>_R <b_X74mY>_P)
                 :: (a_X74mU :: *) ~R# (Const a_X74mU b_X74mY :: *)))
        ((mappend @ a_X74mU $dMonoid_X74n0)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74mW>_N <a_X74mU>_R <b_X74mY>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74mW>_N <a_X74mU>_R <b_X74mY>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74mW>_N <a_X74mU>_R <b_X74mY>_P)
                 :: (a_X74mU -> a_X74mU -> a_X74mU :: *)
                    ~R# (Const a_X74mU b_X74mY
                         -> Const a_X74mU b_X74mY -> Const a_X74mU b_X74mY :: *)))
        ((mconcat @ a_X74mU $dMonoid_X74n0)
         `cast` (([Sym (Data.Functor.Const.N:Const[0]
                            <k_X74mW>_N <a_X74mU>_R <b_X74mY>_P)])_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74mW>_N <a_X74mU>_R <b_X74mY>_P)
                 :: ([a_X74mU] -> a_X74mU :: *)
                    ~R# ([Const a_X74mU b_X74mY] -> Const a_X74mU b_X74mY :: *)))

-- RHS size: {terms: 5, types: 11, coercions: 0, joins: 0/0}
Data.Functor.Const.$fGeneric1Const1
  :: forall k a1 (a2 :: k).
     GHC.Generics.Rep1 (Const a1) a2 -> GHC.Generics.Rep1 (Const a1) a2
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ k_a747o)
                 (@ a_a747p)
                 (@ (a1_a747V :: k_a747o))
                 (ds_d74IJ [Occ=Once]
                    :: GHC.Generics.Rep1 (Const a_a747p) a1_a747V) ->
                 ds_d74IJ}]
Data.Functor.Const.$fGeneric1Const1
  = \ (@ k_a747o)
      (@ a_a747p)
      (@ (a1_a747V :: k_a747o))
      (ds_d74IJ :: GHC.Generics.Rep1 (Const a_a747p) a1_a747V) ->
      ds_d74IJ

-- RHS size: {terms: 5, types: 9, coercions: 0, joins: 0/0}
Data.Functor.Const.$fGeneric1Const2
  :: forall k a1 (a2 :: k). Const a1 a2 -> Const a1 a2
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ k_X74ie)
                 (@ a_X74ig)
                 (@ (a1_a747t :: k_X74ie))
                 (x_a73Ra [Occ=Once] :: Const a_X74ig a1_a747t) ->
                 x_a73Ra}]
Data.Functor.Const.$fGeneric1Const2
  = \ (@ k_X74ie)
      (@ a_X74ig)
      (@ (a1_a747t :: k_X74ie))
      (x_a73Ra :: Const a_X74ig a1_a747t) ->
      x_a73Ra

-- RHS size: {terms: 5, types: 12, coercions: 188, joins: 0/0}
Data.Functor.Const.$fGeneric1Const [InlPrag=NOUSERINLINE CONLIKE]
  :: forall k a. Generic1 (Const a)
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ (@ k_a738q) (@ a_a7351) ->
       GHC.Generics.C:Generic1 TYPE: k_a738q
                               TYPE: Const a_a7351
                               (Data.Functor.Const.$fGeneric1Const2 @ k_a738q @ a_a7351)
                               `cast` (forall (a1 :: <k_a738q>_N).
                                       <Const a_a7351 a1>_R
                                       ->_R Data.Functor.Const.N:Const[0]
                                                <k_a738q>_N
                                                <a_a7351>_R
                                                <a1>_P ; (Sym (GHC.Generics.N:K1[0]
                                                                   <k_a738q>_N
                                                                   <GHC.Generics.R>_P
                                                                   <a_a7351>_R
                                                                   <a1>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                                                       <k_a738q>_N
                                                                                       <GHC.Generics.S>_P
                                                                                       <'GHC.Generics.MetaSel
                                                                                          ('Just
                                                                                             "getConst")
                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                          'GHC.Generics.DecidedLazy>_P
                                                                                       <GHC.Generics.K1
                                                                                          GHC.Generics.R
                                                                                          a_a7351>_R) ; (Sym (GHC.Generics.N:M1[0]
                                                                                                                  <k_a738q>_N
                                                                                                                  <GHC.Generics.C>_P
                                                                                                                  <'GHC.Generics.MetaCons
                                                                                                                     "Const"
                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                     'True>_P
                                                                                                                  <GHC.Generics.M1
                                                                                                                     GHC.Generics.S
                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                        ('Just
                                                                                                                           "getConst")
                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                     (GHC.Generics.K1
                                                                                                                        GHC.Generics.R
                                                                                                                        a_a7351)>_R) ; (Sym (GHC.Generics.N:M1[0]
                                                                                                                                                 <k_a738q>_N
                                                                                                                                                 <GHC.Generics.D>_P
                                                                                                                                                 <'GHC.Generics.MetaData
                                                                                                                                                    "Const"
                                                                                                                                                    "Data.Functor.Const"
                                                                                                                                                    "base"
                                                                                                                                                    'True>_P
                                                                                                                                                 <GHC.Generics.M1
                                                                                                                                                    GHC.Generics.C
                                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                                       "Const"
                                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                                       'True)
                                                                                                                                                    (GHC.Generics.M1
                                                                                                                                                       GHC.Generics.S
                                                                                                                                                       ('GHC.Generics.MetaSel
                                                                                                                                                          ('Just
                                                                                                                                                             "getConst")
                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                                                       (GHC.Generics.K1
                                                                                                                                                          GHC.Generics.R
                                                                                                                                                          a_a7351))>_R) ; Sub (Sym (Data.Functor.Const.Rep1_Const[0]
                                                                                                                                                                                        <k_a738q>_N
                                                                                                                                                                                        <a_a7351>_N))))) <a1>_N)
                                       :: (forall (a1 :: k).
                                           Const a_a7351 a1 -> Const a_a7351 a1 :: *)
                                          ~R# (forall (a1 :: k).
                                               Const a_a7351 a1
                                               -> GHC.Generics.Rep1 (Const a_a7351) a1 :: *))
                               (Data.Functor.Const.$fGeneric1Const1 @ k_a738q @ a_a7351)
                               `cast` (forall (a1 :: <k_a738q>_N).
                                       <GHC.Generics.Rep1 (Const a_a7351) a1>_R
                                       ->_R (Sub (Data.Functor.Const.Rep1_Const[0]
                                                      <k_a738q>_N
                                                      <a_a7351>_N) ; (GHC.Generics.N:M1[0]
                                                                          <k_a738q>_N
                                                                          <GHC.Generics.D>_P
                                                                          <'GHC.Generics.MetaData
                                                                             "Const"
                                                                             "Data.Functor.Const"
                                                                             "base"
                                                                             'True>_P
                                                                          <GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "Const"
                                                                                'GHC.Generics.PrefixI
                                                                                'True)
                                                                             (GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('Just
                                                                                      "getConst")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   a_a7351))>_R ; (GHC.Generics.N:M1[0]
                                                                                                       <k_a738q>_N
                                                                                                       <GHC.Generics.C>_P
                                                                                                       <'GHC.Generics.MetaCons
                                                                                                          "Const"
                                                                                                          'GHC.Generics.PrefixI
                                                                                                          'True>_P
                                                                                                       <GHC.Generics.M1
                                                                                                          GHC.Generics.S
                                                                                                          ('GHC.Generics.MetaSel
                                                                                                             ('Just
                                                                                                                "getConst")
                                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                          (GHC.Generics.K1
                                                                                                             GHC.Generics.R
                                                                                                             a_a7351)>_R ; GHC.Generics.N:M1[0]
                                                                                                                               <k_a738q>_N
                                                                                                                               <GHC.Generics.S>_P
                                                                                                                               <'GHC.Generics.MetaSel
                                                                                                                                  ('Just
                                                                                                                                     "getConst")
                                                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                                                  'GHC.Generics.DecidedLazy>_P
                                                                                                                               <GHC.Generics.K1
                                                                                                                                  GHC.Generics.R
                                                                                                                                  a_a7351>_R))) <a1>_N ; (GHC.Generics.N:K1[0]
                                                                                                                                                              <k_a738q>_N
                                                                                                                                                              <GHC.Generics.R>_P
                                                                                                                                                              <a_a7351>_R
                                                                                                                                                              <a1>_P ; Sym (Data.Functor.Const.N:Const[0]
                                                                                                                                                                                <k_a738q>_N
                                                                                                                                                                                <a_a7351>_R
                                                                                                                                                                                <a1>_P))
                                       :: (forall (a1 :: k).
                                           GHC.Generics.Rep1 (Const a_a7351) a1
                                           -> GHC.Generics.Rep1 (Const a_a7351) a1 :: *)
                                          ~R# (forall (a1 :: k).
                                               GHC.Generics.Rep1 (Const a_a7351) a1
                                               -> Const a_a7351 a1 :: *))]
Data.Functor.Const.$fGeneric1Const
  = \ (@ k_X74ik) (@ a_X74im) ->
      GHC.Generics.C:Generic1
        @ k_X74ik
        @ (Const a_X74im)
        ((Data.Functor.Const.$fGeneric1Const2 @ k_X74ik @ a_X74im)
         `cast` (forall (a1 :: <k_X74ik>_N).
                 <Const a_X74im a1>_R
                 ->_R Data.Functor.Const.N:Const[0]
                          <k_X74ik>_N <a_X74im>_R <a1>_P ; (Sym (GHC.Generics.N:K1[0]
                                                                     <k_X74ik>_N
                                                                     <GHC.Generics.R>_P
                                                                     <a_X74im>_R
                                                                     <a1>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                                                         <k_X74ik>_N
                                                                                         <GHC.Generics.S>_P
                                                                                         <'GHC.Generics.MetaSel
                                                                                            ('Just
                                                                                               "getConst")
                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                            'GHC.Generics.DecidedLazy>_P
                                                                                         <GHC.Generics.K1
                                                                                            GHC.Generics.R
                                                                                            a_X74im>_R) ; (Sym (GHC.Generics.N:M1[0]
                                                                                                                    <k_X74ik>_N
                                                                                                                    <GHC.Generics.C>_P
                                                                                                                    <'GHC.Generics.MetaCons
                                                                                                                       "Const"
                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                       'True>_P
                                                                                                                    <GHC.Generics.M1
                                                                                                                       GHC.Generics.S
                                                                                                                       ('GHC.Generics.MetaSel
                                                                                                                          ('Just
                                                                                                                             "getConst")
                                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                       (GHC.Generics.K1
                                                                                                                          GHC.Generics.R
                                                                                                                          a_X74im)>_R) ; (Sym (GHC.Generics.N:M1[0]
                                                                                                                                                   <k_X74ik>_N
                                                                                                                                                   <GHC.Generics.D>_P
                                                                                                                                                   <'GHC.Generics.MetaData
                                                                                                                                                      "Const"
                                                                                                                                                      "Data.Functor.Const"
                                                                                                                                                      "base"
                                                                                                                                                      'True>_P
                                                                                                                                                   <GHC.Generics.M1
                                                                                                                                                      GHC.Generics.C
                                                                                                                                                      ('GHC.Generics.MetaCons
                                                                                                                                                         "Const"
                                                                                                                                                         'GHC.Generics.PrefixI
                                                                                                                                                         'True)
                                                                                                                                                      (GHC.Generics.M1
                                                                                                                                                         GHC.Generics.S
                                                                                                                                                         ('GHC.Generics.MetaSel
                                                                                                                                                            ('Just
                                                                                                                                                               "getConst")
                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                                                                         (GHC.Generics.K1
                                                                                                                                                            GHC.Generics.R
                                                                                                                                                            a_X74im))>_R) ; Sub (Sym (Data.Functor.Const.Rep1_Const[0]
                                                                                                                                                                                          <k_X74ik>_N
                                                                                                                                                                                          <a_X74im>_N))))) <a1>_N)
                 :: (forall (a1 :: k). Const a_X74im a1 -> Const a_X74im a1 :: *)
                    ~R# (forall (a1 :: k).
                         Const a_X74im a1 -> GHC.Generics.Rep1 (Const a_X74im) a1 :: *)))
        ((Data.Functor.Const.$fGeneric1Const1 @ k_X74ik @ a_X74im)
         `cast` (forall (a1 :: <k_X74ik>_N).
                 <GHC.Generics.Rep1 (Const a_X74im) a1>_R
                 ->_R (Sub (Data.Functor.Const.Rep1_Const[0]
                                <k_X74ik>_N <a_X74im>_N) ; (GHC.Generics.N:M1[0]
                                                                <k_X74ik>_N
                                                                <GHC.Generics.D>_P
                                                                <'GHC.Generics.MetaData
                                                                   "Const"
                                                                   "Data.Functor.Const"
                                                                   "base"
                                                                   'True>_P
                                                                <GHC.Generics.M1
                                                                   GHC.Generics.C
                                                                   ('GHC.Generics.MetaCons
                                                                      "Const"
                                                                      'GHC.Generics.PrefixI
                                                                      'True)
                                                                   (GHC.Generics.M1
                                                                      GHC.Generics.S
                                                                      ('GHC.Generics.MetaSel
                                                                         ('Just "getConst")
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.K1
                                                                         GHC.Generics.R
                                                                         a_X74im))>_R ; (GHC.Generics.N:M1[0]
                                                                                             <k_X74ik>_N
                                                                                             <GHC.Generics.C>_P
                                                                                             <'GHC.Generics.MetaCons
                                                                                                "Const"
                                                                                                'GHC.Generics.PrefixI
                                                                                                'True>_P
                                                                                             <GHC.Generics.M1
                                                                                                GHC.Generics.S
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('Just
                                                                                                      "getConst")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.K1
                                                                                                   GHC.Generics.R
                                                                                                   a_X74im)>_R ; GHC.Generics.N:M1[0]
                                                                                                                     <k_X74ik>_N
                                                                                                                     <GHC.Generics.S>_P
                                                                                                                     <'GHC.Generics.MetaSel
                                                                                                                        ('Just
                                                                                                                           "getConst")
                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                        'GHC.Generics.DecidedLazy>_P
                                                                                                                     <GHC.Generics.K1
                                                                                                                        GHC.Generics.R
                                                                                                                        a_X74im>_R))) <a1>_N ; (GHC.Generics.N:K1[0]
                                                                                                                                                    <k_X74ik>_N
                                                                                                                                                    <GHC.Generics.R>_P
                                                                                                                                                    <a_X74im>_R
                                                                                                                                                    <a1>_P ; Sym (Data.Functor.Const.N:Const[0]
                                                                                                                                                                      <k_X74ik>_N
                                                                                                                                                                      <a_X74im>_R
                                                                                                                                                                      <a1>_P))
                 :: (forall (a1 :: k).
                     GHC.Generics.Rep1 (Const a_X74im) a1
                     -> GHC.Generics.Rep1 (Const a_X74im) a1 :: *)
                    ~R# (forall (a1 :: k).
                         GHC.Generics.Rep1 (Const a_X74im) a1 -> Const a_X74im a1 :: *)))

-- RHS size: {terms: 6, types: 12, coercions: 0, joins: 0/0}
Data.Functor.Const.$fGenericConst1
  :: forall a k (b :: k) x.
     GHC.Generics.Rep (Const a b) x -> GHC.Generics.Rep (Const a b) x
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ a_a746m)
                 (@ k_a746n)
                 (@ (b_a746o :: k_a746n))
                 (@ x_a746U)
                 (ds_d74ID [Occ=Once]
                    :: GHC.Generics.Rep (Const a_a746m b_a746o) x_a746U) ->
                 ds_d74ID}]
Data.Functor.Const.$fGenericConst1
  = \ (@ a_a746m)
      (@ k_a746n)
      (@ (b_a746o :: k_a746n))
      (@ x_a746U)
      (ds_d74ID :: GHC.Generics.Rep (Const a_a746m b_a746o) x_a746U) ->
      ds_d74ID

-- RHS size: {terms: 6, types: 10, coercions: 0, joins: 0/0}
Data.Functor.Const.$fGenericConst2
  :: forall a k (b :: k) x. Const a b -> Const a b
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ a_X74hq)
                 (@ k_X74hs)
                 (@ (b_X74hu :: k_X74hs))
                 (@ x_a746s)
                 (x1_a73R6 [Occ=Once] :: Const a_X74hq b_X74hu) ->
                 x1_a73R6}]
Data.Functor.Const.$fGenericConst2
  = \ (@ a_X74hq)
      (@ k_X74hs)
      (@ (b_X74hu :: k_X74hs))
      (@ x_a746s)
      (x1_a73R6 :: Const a_X74hq b_X74hu) ->
      x1_a73R6

-- RHS size: {terms: 6, types: 15, coercions: 210, joins: 0/0}
Data.Functor.Const.$fGenericConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a k (b :: k). Generic (Const a b)
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ (@ a_a7351) (@ k_a735l) (@ (b_a7352 :: k_a735l)) ->
       GHC.Generics.C:Generic TYPE: Const a_a7351 b_a7352
                              (Data.Functor.Const.$fGenericConst2 @ a_a7351 @ k_a735l @ b_a7352)
                              `cast` (forall (x :: <*>_N).
                                      <Const a_a7351 b_a7352>_R
                                      ->_R Data.Functor.Const.N:Const[0]
                                               <k_a735l>_N
                                               <a_a7351>_R
                                               <b_a7352>_P ; (Sym (GHC.Generics.N:K1[0]
                                                                       <*>_N
                                                                       <GHC.Generics.R>_P
                                                                       <a_a7351>_R
                                                                       <x>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                                                          <*>_N
                                                                                          <GHC.Generics.S>_P
                                                                                          <'GHC.Generics.MetaSel
                                                                                             ('Just
                                                                                                "getConst")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy>_P
                                                                                          <GHC.Generics.K1
                                                                                             GHC.Generics.R
                                                                                             a_a7351>_R) ; (Sym (GHC.Generics.N:M1[0]
                                                                                                                     <*>_N
                                                                                                                     <GHC.Generics.C>_P
                                                                                                                     <'GHC.Generics.MetaCons
                                                                                                                        "Const"
                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                        'True>_P
                                                                                                                     <GHC.Generics.M1
                                                                                                                        GHC.Generics.S
                                                                                                                        ('GHC.Generics.MetaSel
                                                                                                                           ('Just
                                                                                                                              "getConst")
                                                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                                                           'GHC.Generics.DecidedLazy)
                                                                                                                        (GHC.Generics.K1
                                                                                                                           GHC.Generics.R
                                                                                                                           a_a7351)>_R) ; (Sym (GHC.Generics.N:M1[0]
                                                                                                                                                    <*>_N
                                                                                                                                                    <GHC.Generics.D>_P
                                                                                                                                                    <'GHC.Generics.MetaData
                                                                                                                                                       "Const"
                                                                                                                                                       "Data.Functor.Const"
                                                                                                                                                       "base"
                                                                                                                                                       'True>_P
                                                                                                                                                    <GHC.Generics.M1
                                                                                                                                                       GHC.Generics.C
                                                                                                                                                       ('GHC.Generics.MetaCons
                                                                                                                                                          "Const"
                                                                                                                                                          'GHC.Generics.PrefixI
                                                                                                                                                          'True)
                                                                                                                                                       (GHC.Generics.M1
                                                                                                                                                          GHC.Generics.S
                                                                                                                                                          ('GHC.Generics.MetaSel
                                                                                                                                                             ('Just
                                                                                                                                                                "getConst")
                                                                                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                                                                          (GHC.Generics.K1
                                                                                                                                                             GHC.Generics.R
                                                                                                                                                             a_a7351))>_R) ; Sub (Sym (Data.Functor.Const.Rep_Const[0]
                                                                                                                                                                                           <a_a7351>_N
                                                                                                                                                                                           <k_a735l>_N
                                                                                                                                                                                           <b_a7352>_N))))) <x>_N)
                                      :: (forall x.
                                          Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *)
                                         ~R# (forall x.
                                              Const a_a7351 b_a7352
                                              -> GHC.Generics.Rep (Const a_a7351 b_a7352) x :: *))
                              (Data.Functor.Const.$fGenericConst1 @ a_a7351 @ k_a735l @ b_a7352)
                              `cast` (forall (x :: <*>_N).
                                      <GHC.Generics.Rep (Const a_a7351 b_a7352) x>_R
                                      ->_R (Sub (Data.Functor.Const.Rep_Const[0]
                                                     <a_a7351>_N
                                                     <k_a735l>_N
                                                     <b_a7352>_N) ; (GHC.Generics.N:M1[0]
                                                                         <*>_N
                                                                         <GHC.Generics.D>_P
                                                                         <'GHC.Generics.MetaData
                                                                            "Const"
                                                                            "Data.Functor.Const"
                                                                            "base"
                                                                            'True>_P
                                                                         <GHC.Generics.M1
                                                                            GHC.Generics.C
                                                                            ('GHC.Generics.MetaCons
                                                                               "Const"
                                                                               'GHC.Generics.PrefixI
                                                                               'True)
                                                                            (GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('Just "getConst")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  a_a7351))>_R ; (GHC.Generics.N:M1[0]
                                                                                                      <*>_N
                                                                                                      <GHC.Generics.C>_P
                                                                                                      <'GHC.Generics.MetaCons
                                                                                                         "Const"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'True>_P
                                                                                                      <GHC.Generics.M1
                                                                                                         GHC.Generics.S
                                                                                                         ('GHC.Generics.MetaSel
                                                                                                            ('Just
                                                                                                               "getConst")
                                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                         (GHC.Generics.K1
                                                                                                            GHC.Generics.R
                                                                                                            a_a7351)>_R ; GHC.Generics.N:M1[0]
                                                                                                                              <*>_N
                                                                                                                              <GHC.Generics.S>_P
                                                                                                                              <'GHC.Generics.MetaSel
                                                                                                                                 ('Just
                                                                                                                                    "getConst")
                                                                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                                                                 'GHC.Generics.DecidedLazy>_P
                                                                                                                              <GHC.Generics.K1
                                                                                                                                 GHC.Generics.R
                                                                                                                                 a_a7351>_R))) <x>_N ; (GHC.Generics.N:K1[0]
                                                                                                                                                            <*>_N
                                                                                                                                                            <GHC.Generics.R>_P
                                                                                                                                                            <a_a7351>_R
                                                                                                                                                            <x>_P ; Sym (Data.Functor.Const.N:Const[0]
                                                                                                                                                                             <k_a735l>_N
                                                                                                                                                                             <a_a7351>_R
                                                                                                                                                                             <b_a7352>_P))
                                      :: (forall x.
                                          GHC.Generics.Rep (Const a_a7351 b_a7352) x
                                          -> GHC.Generics.Rep (Const a_a7351 b_a7352) x :: *)
                                         ~R# (forall x.
                                              GHC.Generics.Rep (Const a_a7351 b_a7352) x
                                              -> Const a_a7351 b_a7352 :: *))]
Data.Functor.Const.$fGenericConst
  = \ (@ a_X74hx) (@ k_X74hz) (@ (b_X74hB :: k_X74hz)) ->
      GHC.Generics.C:Generic
        @ (Const a_X74hx b_X74hB)
        ((Data.Functor.Const.$fGenericConst2 @ a_X74hx @ k_X74hz @ b_X74hB)
         `cast` (forall (x :: <*>_N).
                 <Const a_X74hx b_X74hB>_R
                 ->_R Data.Functor.Const.N:Const[0]
                          <k_X74hz>_N <a_X74hx>_R <b_X74hB>_P ; (Sym (GHC.Generics.N:K1[0]
                                                                          <*>_N
                                                                          <GHC.Generics.R>_P
                                                                          <a_X74hx>_R
                                                                          <x>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                                                             <*>_N
                                                                                             <GHC.Generics.S>_P
                                                                                             <'GHC.Generics.MetaSel
                                                                                                ('Just
                                                                                                   "getConst")
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy>_P
                                                                                             <GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                a_X74hx>_R) ; (Sym (GHC.Generics.N:M1[0]
                                                                                                                        <*>_N
                                                                                                                        <GHC.Generics.C>_P
                                                                                                                        <'GHC.Generics.MetaCons
                                                                                                                           "Const"
                                                                                                                           'GHC.Generics.PrefixI
                                                                                                                           'True>_P
                                                                                                                        <GHC.Generics.M1
                                                                                                                           GHC.Generics.S
                                                                                                                           ('GHC.Generics.MetaSel
                                                                                                                              ('Just
                                                                                                                                 "getConst")
                                                                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                                                                              'GHC.Generics.NoSourceStrictness
                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                           (GHC.Generics.K1
                                                                                                                              GHC.Generics.R
                                                                                                                              a_X74hx)>_R) ; (Sym (GHC.Generics.N:M1[0]
                                                                                                                                                       <*>_N
                                                                                                                                                       <GHC.Generics.D>_P
                                                                                                                                                       <'GHC.Generics.MetaData
                                                                                                                                                          "Const"
                                                                                                                                                          "Data.Functor.Const"
                                                                                                                                                          "base"
                                                                                                                                                          'True>_P
                                                                                                                                                       <GHC.Generics.M1
                                                                                                                                                          GHC.Generics.C
                                                                                                                                                          ('GHC.Generics.MetaCons
                                                                                                                                                             "Const"
                                                                                                                                                             'GHC.Generics.PrefixI
                                                                                                                                                             'True)
                                                                                                                                                          (GHC.Generics.M1
                                                                                                                                                             GHC.Generics.S
                                                                                                                                                             ('GHC.Generics.MetaSel
                                                                                                                                                                ('Just
                                                                                                                                                                   "getConst")
                                                                                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                                                                                'GHC.Generics.DecidedLazy)
                                                                                                                                                             (GHC.Generics.K1
                                                                                                                                                                GHC.Generics.R
                                                                                                                                                                a_X74hx))>_R) ; Sub (Sym (Data.Functor.Const.Rep_Const[0]
                                                                                                                                                                                              <a_X74hx>_N
                                                                                                                                                                                              <k_X74hz>_N
                                                                                                                                                                                              <b_X74hB>_N))))) <x>_N)
                 :: (forall x. Const a_X74hx b_X74hB -> Const a_X74hx b_X74hB :: *)
                    ~R# (forall x.
                         Const a_X74hx b_X74hB
                         -> GHC.Generics.Rep (Const a_X74hx b_X74hB) x :: *)))
        ((Data.Functor.Const.$fGenericConst1 @ a_X74hx @ k_X74hz @ b_X74hB)
         `cast` (forall (x :: <*>_N).
                 <GHC.Generics.Rep (Const a_X74hx b_X74hB) x>_R
                 ->_R (Sub (Data.Functor.Const.Rep_Const[0]
                                <a_X74hx>_N <k_X74hz>_N <b_X74hB>_N) ; (GHC.Generics.N:M1[0]
                                                                            <*>_N
                                                                            <GHC.Generics.D>_P
                                                                            <'GHC.Generics.MetaData
                                                                               "Const"
                                                                               "Data.Functor.Const"
                                                                               "base"
                                                                               'True>_P
                                                                            <GHC.Generics.M1
                                                                               GHC.Generics.C
                                                                               ('GHC.Generics.MetaCons
                                                                                  "Const"
                                                                                  'GHC.Generics.PrefixI
                                                                                  'True)
                                                                               (GHC.Generics.M1
                                                                                  GHC.Generics.S
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('Just
                                                                                        "getConst")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     a_X74hx))>_R ; (GHC.Generics.N:M1[0]
                                                                                                         <*>_N
                                                                                                         <GHC.Generics.C>_P
                                                                                                         <'GHC.Generics.MetaCons
                                                                                                            "Const"
                                                                                                            'GHC.Generics.PrefixI
                                                                                                            'True>_P
                                                                                                         <GHC.Generics.M1
                                                                                                            GHC.Generics.S
                                                                                                            ('GHC.Generics.MetaSel
                                                                                                               ('Just
                                                                                                                  "getConst")
                                                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                                                               'GHC.Generics.NoSourceStrictness
                                                                                                               'GHC.Generics.DecidedLazy)
                                                                                                            (GHC.Generics.K1
                                                                                                               GHC.Generics.R
                                                                                                               a_X74hx)>_R ; GHC.Generics.N:M1[0]
                                                                                                                                 <*>_N
                                                                                                                                 <GHC.Generics.S>_P
                                                                                                                                 <'GHC.Generics.MetaSel
                                                                                                                                    ('Just
                                                                                                                                       "getConst")
                                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                                    'GHC.Generics.DecidedLazy>_P
                                                                                                                                 <GHC.Generics.K1
                                                                                                                                    GHC.Generics.R
                                                                                                                                    a_X74hx>_R))) <x>_N ; (GHC.Generics.N:K1[0]
                                                                                                                                                               <*>_N
                                                                                                                                                               <GHC.Generics.R>_P
                                                                                                                                                               <a_X74hx>_R
                                                                                                                                                               <x>_P ; Sym (Data.Functor.Const.N:Const[0]
                                                                                                                                                                                <k_X74hz>_N
                                                                                                                                                                                <a_X74hx>_R
                                                                                                                                                                                <b_X74hB>_P))
                 :: (forall x.
                     GHC.Generics.Rep (Const a_X74hx b_X74hB) x
                     -> GHC.Generics.Rep (Const a_X74hx b_X74hB) x :: *)
                    ~R# (forall x.
                         GHC.Generics.Rep (Const a_X74hx b_X74hB) x
                         -> Const a_X74hx b_X74hB :: *)))

-- RHS size: {terms: 7, types: 11, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFractionalConst_$cp1Fractional
  :: forall a k (b :: k). Fractional a => Num (Const a b)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,1*U(1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U),A,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_X74st)
                 (@ k_X74h1)
                 (@ (b_X74h3 :: k_X74h1))
                 ($dFractional_X74h5 [Occ=Once] :: Fractional a_X74st) ->
                 Data.Functor.Const.$fNumConst
                   @ a_X74st
                   @ k_X74h1
                   @ b_X74h3
                   (GHC.Real.$p1Fractional @ a_X74st $dFractional_X74h5)}]
Data.Functor.Const.$fFractionalConst_$cp1Fractional
  = \ (@ a_X74st)
      (@ k_X74h1)
      (@ (b_X74h3 :: k_X74h1))
      ($dFractional_X74h5 :: Fractional a_X74st) ->
      Data.Functor.Const.$fNumConst
        @ a_X74st
        @ k_X74h1
        @ b_X74h3
        (GHC.Real.$p1Fractional @ a_X74st $dFractional_X74h5)

-- RHS size: {terms: 13, types: 17, coercions: 36, joins: 0/0}
Data.Functor.Const.$fFractionalConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a k (b :: k). Fractional a => Fractional (Const a b)
[GblId[DFunId],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U(1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U,1*U,1*U)>m,
 Unf=DFun: \ (@ a_a7351)
             (@ k_a735l)
             (@ (b_a7352 :: k_a735l))
             (v_B1 :: Fractional a_a7351) ->
       GHC.Real.C:Fractional TYPE: Const a_a7351 b_a7352
                             Data.Functor.Const.$fFractionalConst_$cp1Fractional
                               @ a_a7351 @ k_a735l @ b_a7352 v_B1
                             (GHC.Real./ @ a_a7351 v_B1)
                             `cast` (Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     ->_R Sym (Data.Functor.Const.N:Const[0]
                                                   <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     ->_R Sym (Data.Functor.Const.N:Const[0]
                                                   <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     :: (a_a7351 -> a_a7351 -> a_a7351 :: *)
                                        ~R# (Const a_a7351 b_a7352
                                             -> Const a_a7351 b_a7352
                                             -> Const a_a7351 b_a7352 :: *))
                             (GHC.Real.recip @ a_a7351 v_B1)
                             `cast` (Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     ->_R Sym (Data.Functor.Const.N:Const[0]
                                                   <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     :: (a_a7351 -> a_a7351 :: *)
                                        ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                             (GHC.Real.fromRational @ a_a7351 v_B1)
                             `cast` (<GHC.Real.Ratio
                                        integer-simple-0.1.1.1:GHC.Integer.Type.Integer>_R
                                     ->_R Sym (Data.Functor.Const.N:Const[0]
                                                   <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     :: (GHC.Real.Ratio
                                           integer-simple-0.1.1.1:GHC.Integer.Type.Integer
                                         -> a_a7351 :: *)
                                        ~R# (GHC.Real.Ratio
                                               integer-simple-0.1.1.1:GHC.Integer.Type.Integer
                                             -> Const a_a7351 b_a7352 :: *))]
Data.Functor.Const.$fFractionalConst
  = \ (@ a_X74h0)
      (@ k_X74h2)
      (@ (b_X74h4 :: k_X74h2))
      ($dFractional_X74h6 :: Fractional a_X74h0) ->
      GHC.Real.C:Fractional
        @ (Const a_X74h0 b_X74h4)
        (Data.Functor.Const.$fFractionalConst_$cp1Fractional
           @ a_X74h0 @ k_X74h2 @ b_X74h4 $dFractional_X74h6)
        ((GHC.Real./ @ a_X74h0 $dFractional_X74h6)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74h2>_N <a_X74h0>_R <b_X74h4>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74h2>_N <a_X74h0>_R <b_X74h4>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74h2>_N <a_X74h0>_R <b_X74h4>_P)
                 :: (a_X74h0 -> a_X74h0 -> a_X74h0 :: *)
                    ~R# (Const a_X74h0 b_X74h4
                         -> Const a_X74h0 b_X74h4 -> Const a_X74h0 b_X74h4 :: *)))
        ((GHC.Real.recip @ a_X74h0 $dFractional_X74h6)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74h2>_N <a_X74h0>_R <b_X74h4>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74h2>_N <a_X74h0>_R <b_X74h4>_P)
                 :: (a_X74h0 -> a_X74h0 :: *)
                    ~R# (Const a_X74h0 b_X74h4 -> Const a_X74h0 b_X74h4 :: *)))
        ((GHC.Real.fromRational @ a_X74h0 $dFractional_X74h6)
         `cast` (<GHC.Real.Ratio
                    integer-simple-0.1.1.1:GHC.Integer.Type.Integer>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74h2>_N <a_X74h0>_R <b_X74h4>_P)
                 :: (GHC.Real.Ratio integer-simple-0.1.1.1:GHC.Integer.Type.Integer
                     -> a_X74h0 :: *)
                    ~R# (GHC.Real.Ratio integer-simple-0.1.1.1:GHC.Integer.Type.Integer
                         -> Const a_X74h0 b_X74h4 :: *)))

-- RHS size: {terms: 7, types: 11, coercions: 0, joins: 0/0}
Data.Functor.Const.$fRealFracConst_$cp2RealFrac
  :: forall a k (b :: k). RealFrac a => Fractional (Const a b)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,1*U(A,1*U(1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U,1*U,1*U),A,A,A,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_X74u4)
                 (@ k_X74u6)
                 (@ (b_X74u8 :: k_X74u6))
                 ($dRealFrac_X74ua [Occ=Once] :: RealFrac a_X74u4) ->
                 Data.Functor.Const.$fFractionalConst
                   @ a_X74u4
                   @ k_X74u6
                   @ b_X74u8
                   (GHC.Real.$p2RealFrac @ a_X74u4 $dRealFrac_X74ua)}]
Data.Functor.Const.$fRealFracConst_$cp2RealFrac
  = \ (@ a_X74u4)
      (@ k_X74u6)
      (@ (b_X74u8 :: k_X74u6))
      ($dRealFrac_X74ua :: RealFrac a_X74u4) ->
      Data.Functor.Const.$fFractionalConst
        @ a_X74u4
        @ k_X74u6
        @ b_X74u8
        (GHC.Real.$p2RealFrac @ a_X74u4 $dRealFrac_X74ua)

-- RHS size: {terms: 7, types: 11, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFloatingConst_$cp1Floating
  :: forall a k (b :: k). Floating a => Fractional (Const a b)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,1*U(1*U(1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U,1*U,1*U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_X74rY)
                 (@ k_X74el)
                 (@ (b_X74en :: k_X74el))
                 ($dFloating_X74ep [Occ=Once] :: Floating a_X74rY) ->
                 Data.Functor.Const.$fFractionalConst
                   @ a_X74rY
                   @ k_X74el
                   @ b_X74en
                   (GHC.Float.$p1Floating @ a_X74rY $dFloating_X74ep)}]
Data.Functor.Const.$fFloatingConst_$cp1Floating
  = \ (@ a_X74rY)
      (@ k_X74el)
      (@ (b_X74en :: k_X74el))
      ($dFloating_X74ep :: Floating a_X74rY) ->
      Data.Functor.Const.$fFractionalConst
        @ a_X74rY
        @ k_X74el
        @ b_X74en
        (GHC.Float.$p1Floating @ a_X74rY $dFloating_X74ep)

-- RHS size: {terms: 51, types: 36, coercions: 248, joins: 0/0}
Data.Functor.Const.$fFloatingConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a k (b :: k). Floating a => Floating (Const a b)
[GblId[DFunId],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U(1*U(1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U,1*U,1*U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
 Unf=DFun: \ (@ a_a7351)
             (@ k_a735l)
             (@ (b_a7352 :: k_a735l))
             (v_B1 :: Floating a_a7351) ->
       GHC.Float.C:Floating TYPE: Const a_a7351 b_a7352
                            Data.Functor.Const.$fFloatingConst_$cp1Floating
                              @ a_a7351 @ k_a735l @ b_a7352 v_B1
                            (GHC.Float.pi @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 :: *) ~R# (Const a_a7351 b_a7352 :: *))
                            (GHC.Float.exp @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 -> a_a7351 :: *)
                                       ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                            (GHC.Float.log @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 -> a_a7351 :: *)
                                       ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                            (GHC.Float.sqrt @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 -> a_a7351 :: *)
                                       ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                            (GHC.Float.** @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 -> a_a7351 -> a_a7351 :: *)
                                       ~R# (Const a_a7351 b_a7352
                                            -> Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                            (GHC.Float.logBase @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 -> a_a7351 -> a_a7351 :: *)
                                       ~R# (Const a_a7351 b_a7352
                                            -> Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                            (GHC.Float.sin @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 -> a_a7351 :: *)
                                       ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                            (GHC.Float.cos @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 -> a_a7351 :: *)
                                       ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                            (GHC.Float.tan @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 -> a_a7351 :: *)
                                       ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                            (GHC.Float.asin @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 -> a_a7351 :: *)
                                       ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                            (GHC.Float.acos @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 -> a_a7351 :: *)
                                       ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                            (GHC.Float.atan @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 -> a_a7351 :: *)
                                       ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                            (GHC.Float.sinh @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 -> a_a7351 :: *)
                                       ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                            (GHC.Float.cosh @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 -> a_a7351 :: *)
                                       ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                            (GHC.Float.tanh @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 -> a_a7351 :: *)
                                       ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                            (GHC.Float.asinh @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 -> a_a7351 :: *)
                                       ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                            (GHC.Float.acosh @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 -> a_a7351 :: *)
                                       ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                            (GHC.Float.atanh @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 -> a_a7351 :: *)
                                       ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                            (GHC.Float.log1p @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 -> a_a7351 :: *)
                                       ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                            (GHC.Float.expm1 @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 -> a_a7351 :: *)
                                       ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                            (GHC.Float.log1pexp @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 -> a_a7351 :: *)
                                       ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                            (GHC.Float.log1mexp @ a_a7351 v_B1)
                            `cast` (Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    ->_R Sym (Data.Functor.Const.N:Const[0]
                                                  <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                    :: (a_a7351 -> a_a7351 :: *)
                                       ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))]
Data.Functor.Const.$fFloatingConst
  = \ (@ a_X74ek)
      (@ k_X74em)
      (@ (b_X74eo :: k_X74em))
      ($dFloating_X74eq :: Floating a_X74ek) ->
      GHC.Float.C:Floating
        @ (Const a_X74ek b_X74eo)
        (Data.Functor.Const.$fFloatingConst_$cp1Floating
           @ a_X74ek @ k_X74em @ b_X74eo $dFloating_X74eq)
        ((GHC.Float.pi @ a_X74ek $dFloating_X74eq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 :: (a_X74ek :: *) ~R# (Const a_X74ek b_X74eo :: *)))
        ((GHC.Float.exp @ a_X74ek $dFloating_X74eq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 :: (a_X74ek -> a_X74ek :: *)
                    ~R# (Const a_X74ek b_X74eo -> Const a_X74ek b_X74eo :: *)))
        ((GHC.Float.log @ a_X74ek $dFloating_X74eq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 :: (a_X74ek -> a_X74ek :: *)
                    ~R# (Const a_X74ek b_X74eo -> Const a_X74ek b_X74eo :: *)))
        ((GHC.Float.sqrt @ a_X74ek $dFloating_X74eq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 :: (a_X74ek -> a_X74ek :: *)
                    ~R# (Const a_X74ek b_X74eo -> Const a_X74ek b_X74eo :: *)))
        ((GHC.Float.** @ a_X74ek $dFloating_X74eq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 :: (a_X74ek -> a_X74ek -> a_X74ek :: *)
                    ~R# (Const a_X74ek b_X74eo
                         -> Const a_X74ek b_X74eo -> Const a_X74ek b_X74eo :: *)))
        ((GHC.Float.logBase @ a_X74ek $dFloating_X74eq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 :: (a_X74ek -> a_X74ek -> a_X74ek :: *)
                    ~R# (Const a_X74ek b_X74eo
                         -> Const a_X74ek b_X74eo -> Const a_X74ek b_X74eo :: *)))
        ((GHC.Float.sin @ a_X74ek $dFloating_X74eq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 :: (a_X74ek -> a_X74ek :: *)
                    ~R# (Const a_X74ek b_X74eo -> Const a_X74ek b_X74eo :: *)))
        ((GHC.Float.cos @ a_X74ek $dFloating_X74eq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 :: (a_X74ek -> a_X74ek :: *)
                    ~R# (Const a_X74ek b_X74eo -> Const a_X74ek b_X74eo :: *)))
        ((GHC.Float.tan @ a_X74ek $dFloating_X74eq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 :: (a_X74ek -> a_X74ek :: *)
                    ~R# (Const a_X74ek b_X74eo -> Const a_X74ek b_X74eo :: *)))
        ((GHC.Float.asin @ a_X74ek $dFloating_X74eq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 :: (a_X74ek -> a_X74ek :: *)
                    ~R# (Const a_X74ek b_X74eo -> Const a_X74ek b_X74eo :: *)))
        ((GHC.Float.acos @ a_X74ek $dFloating_X74eq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 :: (a_X74ek -> a_X74ek :: *)
                    ~R# (Const a_X74ek b_X74eo -> Const a_X74ek b_X74eo :: *)))
        ((GHC.Float.atan @ a_X74ek $dFloating_X74eq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 :: (a_X74ek -> a_X74ek :: *)
                    ~R# (Const a_X74ek b_X74eo -> Const a_X74ek b_X74eo :: *)))
        ((GHC.Float.sinh @ a_X74ek $dFloating_X74eq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 :: (a_X74ek -> a_X74ek :: *)
                    ~R# (Const a_X74ek b_X74eo -> Const a_X74ek b_X74eo :: *)))
        ((GHC.Float.cosh @ a_X74ek $dFloating_X74eq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 :: (a_X74ek -> a_X74ek :: *)
                    ~R# (Const a_X74ek b_X74eo -> Const a_X74ek b_X74eo :: *)))
        ((GHC.Float.tanh @ a_X74ek $dFloating_X74eq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 :: (a_X74ek -> a_X74ek :: *)
                    ~R# (Const a_X74ek b_X74eo -> Const a_X74ek b_X74eo :: *)))
        ((GHC.Float.asinh @ a_X74ek $dFloating_X74eq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 :: (a_X74ek -> a_X74ek :: *)
                    ~R# (Const a_X74ek b_X74eo -> Const a_X74ek b_X74eo :: *)))
        ((GHC.Float.acosh @ a_X74ek $dFloating_X74eq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 :: (a_X74ek -> a_X74ek :: *)
                    ~R# (Const a_X74ek b_X74eo -> Const a_X74ek b_X74eo :: *)))
        ((GHC.Float.atanh @ a_X74ek $dFloating_X74eq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 :: (a_X74ek -> a_X74ek :: *)
                    ~R# (Const a_X74ek b_X74eo -> Const a_X74ek b_X74eo :: *)))
        ((GHC.Float.log1p @ a_X74ek $dFloating_X74eq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 :: (a_X74ek -> a_X74ek :: *)
                    ~R# (Const a_X74ek b_X74eo -> Const a_X74ek b_X74eo :: *)))
        ((GHC.Float.expm1 @ a_X74ek $dFloating_X74eq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 :: (a_X74ek -> a_X74ek :: *)
                    ~R# (Const a_X74ek b_X74eo -> Const a_X74ek b_X74eo :: *)))
        ((GHC.Float.log1pexp @ a_X74ek $dFloating_X74eq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 :: (a_X74ek -> a_X74ek :: *)
                    ~R# (Const a_X74ek b_X74eo -> Const a_X74ek b_X74eo :: *)))
        ((GHC.Float.log1mexp @ a_X74ek $dFloating_X74eq)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74em>_N <a_X74ek>_R <b_X74eo>_P)
                 :: (a_X74ek -> a_X74ek :: *)
                    ~R# (Const a_X74ek b_X74eo -> Const a_X74ek b_X74eo :: *)))

-- RHS size: {terms: 7, types: 11, coercions: 0, joins: 0/0}
Data.Functor.Const.$fRealFloatConst_$cp2RealFloat
  :: forall a k (b :: k). RealFloat a => Floating (Const a b)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,1*U(A,1*U(1*U(1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U,1*U,1*U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_X74yv)
                 (@ k_X74yx)
                 (@ (b_X74yz :: k_X74yx))
                 ($dRealFloat_X74yB [Occ=Once] :: RealFloat a_X74yv) ->
                 Data.Functor.Const.$fFloatingConst
                   @ a_X74yv
                   @ k_X74yx
                   @ b_X74yz
                   (GHC.Float.$p2RealFloat @ a_X74yv $dRealFloat_X74yB)}]
Data.Functor.Const.$fRealFloatConst_$cp2RealFloat
  = \ (@ a_X74yv)
      (@ k_X74yx)
      (@ (b_X74yz :: k_X74yx))
      ($dRealFloat_X74yB :: RealFloat a_X74yv) ->
      Data.Functor.Const.$fFloatingConst
        @ a_X74yv
        @ k_X74yx
        @ b_X74yz
        (GHC.Float.$p2RealFloat @ a_X74yv $dRealFloat_X74yB)

-- RHS size: {terms: 9, types: 13, coercions: 26, joins: 0/0}
Data.Functor.Const.$fEqConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a k (b :: k). Eq a => Eq (Const a b)
[GblId[DFunId],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U(1*U,1*U)>m,
 Unf=DFun: \ (@ a_a7351)
             (@ k_a735l)
             (@ (b_a7352 :: k_a735l))
             (v_B1 :: Eq a_a7351) ->
       GHC.Classes.C:Eq TYPE: Const a_a7351 b_a7352
                        (== @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R <Bool>_R
                                :: (a_a7351 -> a_a7351 -> Bool :: *)
                                   ~R# (Const a_a7351 b_a7352
                                        -> Const a_a7351 b_a7352 -> Bool :: *))
                        (/= @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R <Bool>_R
                                :: (a_a7351 -> a_a7351 -> Bool :: *)
                                   ~R# (Const a_a7351 b_a7352
                                        -> Const a_a7351 b_a7352 -> Bool :: *))]
Data.Functor.Const.$fEqConst
  = \ (@ a_X74rE)
      (@ k_X74du)
      (@ (b_X74dw :: k_X74du))
      ($dEq_X74dy :: Eq a_X74rE) ->
      GHC.Classes.C:Eq
        @ (Const a_X74rE b_X74dw)
        ((== @ a_X74rE $dEq_X74dy)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74du>_N <a_X74rE>_R <b_X74dw>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74du>_N <a_X74rE>_R <b_X74dw>_P)
                 ->_R <Bool>_R
                 :: (a_X74rE -> a_X74rE -> Bool :: *)
                    ~R# (Const a_X74rE b_X74dw -> Const a_X74rE b_X74dw -> Bool :: *)))
        ((/= @ a_X74rE $dEq_X74dy)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74du>_N <a_X74rE>_R <b_X74dw>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74du>_N <a_X74rE>_R <b_X74dw>_P)
                 ->_R <Bool>_R
                 :: (a_X74rE -> a_X74rE -> Bool :: *)
                    ~R# (Const a_X74rE b_X74dw -> Const a_X74rE b_X74dw -> Bool :: *)))

-- RHS size: {terms: 7, types: 11, coercions: 0, joins: 0/0}
Data.Functor.Const.$fOrdConst_$cp1Ord
  :: forall a k (b :: k). Ord a => Eq (Const a b)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,1*U(1*U(1*U,1*U),A,A,A,A,A,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_X74Ir)
                 (@ k_X74ug)
                 (@ (b_X74ui :: k_X74ug))
                 ($dOrd_X74uk [Occ=Once] :: Ord a_X74Ir) ->
                 Data.Functor.Const.$fEqConst
                   @ a_X74Ir
                   @ k_X74ug
                   @ b_X74ui
                   (GHC.Classes.$p1Ord @ a_X74Ir $dOrd_X74uk)}]
Data.Functor.Const.$fOrdConst_$cp1Ord
  = \ (@ a_X74Ir)
      (@ k_X74ug)
      (@ (b_X74ui :: k_X74ug))
      ($dOrd_X74uk :: Ord a_X74Ir) ->
      Data.Functor.Const.$fEqConst
        @ a_X74Ir
        @ k_X74ug
        @ b_X74ui
        (GHC.Classes.$p1Ord @ a_X74Ir $dOrd_X74uk)

-- RHS size: {terms: 21, types: 21, coercions: 99, joins: 0/0}
Data.Functor.Const.$fOrdConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a k (b :: k). Ord a => Ord (Const a b)
[GblId[DFunId],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U(1*U(1*U,1*U),1*U,1*U,1*U,1*U,1*U,1*U,1*U)>m,
 Unf=DFun: \ (@ a_a7351)
             (@ k_a735l)
             (@ (b_a7352 :: k_a735l))
             (v_B1 :: Ord a_a7351) ->
       GHC.Classes.C:Ord TYPE: Const a_a7351 b_a7352
                         Data.Functor.Const.$fOrdConst_$cp1Ord
                           @ a_a7351 @ k_a735l @ b_a7352 v_B1
                         (compare @ a_a7351 v_B1)
                         `cast` (Sym (Data.Functor.Const.N:Const[0]
                                          <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                 ->_R Sym (Data.Functor.Const.N:Const[0]
                                               <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                 ->_R <Ordering>_R
                                 :: (a_a7351 -> a_a7351 -> Ordering :: *)
                                    ~R# (Const a_a7351 b_a7352
                                         -> Const a_a7351 b_a7352 -> Ordering :: *))
                         (< @ a_a7351 v_B1)
                         `cast` (Sym (Data.Functor.Const.N:Const[0]
                                          <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                 ->_R Sym (Data.Functor.Const.N:Const[0]
                                               <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                 ->_R <Bool>_R
                                 :: (a_a7351 -> a_a7351 -> Bool :: *)
                                    ~R# (Const a_a7351 b_a7352
                                         -> Const a_a7351 b_a7352 -> Bool :: *))
                         (<= @ a_a7351 v_B1)
                         `cast` (Sym (Data.Functor.Const.N:Const[0]
                                          <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                 ->_R Sym (Data.Functor.Const.N:Const[0]
                                               <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                 ->_R <Bool>_R
                                 :: (a_a7351 -> a_a7351 -> Bool :: *)
                                    ~R# (Const a_a7351 b_a7352
                                         -> Const a_a7351 b_a7352 -> Bool :: *))
                         (> @ a_a7351 v_B1)
                         `cast` (Sym (Data.Functor.Const.N:Const[0]
                                          <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                 ->_R Sym (Data.Functor.Const.N:Const[0]
                                               <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                 ->_R <Bool>_R
                                 :: (a_a7351 -> a_a7351 -> Bool :: *)
                                    ~R# (Const a_a7351 b_a7352
                                         -> Const a_a7351 b_a7352 -> Bool :: *))
                         (>= @ a_a7351 v_B1)
                         `cast` (Sym (Data.Functor.Const.N:Const[0]
                                          <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                 ->_R Sym (Data.Functor.Const.N:Const[0]
                                               <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                 ->_R <Bool>_R
                                 :: (a_a7351 -> a_a7351 -> Bool :: *)
                                    ~R# (Const a_a7351 b_a7352
                                         -> Const a_a7351 b_a7352 -> Bool :: *))
                         (max @ a_a7351 v_B1)
                         `cast` (Sym (Data.Functor.Const.N:Const[0]
                                          <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                 ->_R Sym (Data.Functor.Const.N:Const[0]
                                               <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                 ->_R Sym (Data.Functor.Const.N:Const[0]
                                               <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                 :: (a_a7351 -> a_a7351 -> a_a7351 :: *)
                                    ~R# (Const a_a7351 b_a7352
                                         -> Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                         (min @ a_a7351 v_B1)
                         `cast` (Sym (Data.Functor.Const.N:Const[0]
                                          <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                 ->_R Sym (Data.Functor.Const.N:Const[0]
                                               <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                 ->_R Sym (Data.Functor.Const.N:Const[0]
                                               <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                 :: (a_a7351 -> a_a7351 -> a_a7351 :: *)
                                    ~R# (Const a_a7351 b_a7352
                                         -> Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))]
Data.Functor.Const.$fOrdConst
  = \ (@ a_X74uf)
      (@ k_X74uh)
      (@ (b_X74uj :: k_X74uh))
      ($dOrd_X74ul :: Ord a_X74uf) ->
      GHC.Classes.C:Ord
        @ (Const a_X74uf b_X74uj)
        (Data.Functor.Const.$fOrdConst_$cp1Ord
           @ a_X74uf @ k_X74uh @ b_X74uj $dOrd_X74ul)
        ((compare @ a_X74uf $dOrd_X74ul)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74uh>_N <a_X74uf>_R <b_X74uj>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74uh>_N <a_X74uf>_R <b_X74uj>_P)
                 ->_R <Ordering>_R
                 :: (a_X74uf -> a_X74uf -> Ordering :: *)
                    ~R# (Const a_X74uf b_X74uj
                         -> Const a_X74uf b_X74uj -> Ordering :: *)))
        ((< @ a_X74uf $dOrd_X74ul)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74uh>_N <a_X74uf>_R <b_X74uj>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74uh>_N <a_X74uf>_R <b_X74uj>_P)
                 ->_R <Bool>_R
                 :: (a_X74uf -> a_X74uf -> Bool :: *)
                    ~R# (Const a_X74uf b_X74uj -> Const a_X74uf b_X74uj -> Bool :: *)))
        ((<= @ a_X74uf $dOrd_X74ul)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74uh>_N <a_X74uf>_R <b_X74uj>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74uh>_N <a_X74uf>_R <b_X74uj>_P)
                 ->_R <Bool>_R
                 :: (a_X74uf -> a_X74uf -> Bool :: *)
                    ~R# (Const a_X74uf b_X74uj -> Const a_X74uf b_X74uj -> Bool :: *)))
        ((> @ a_X74uf $dOrd_X74ul)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74uh>_N <a_X74uf>_R <b_X74uj>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74uh>_N <a_X74uf>_R <b_X74uj>_P)
                 ->_R <Bool>_R
                 :: (a_X74uf -> a_X74uf -> Bool :: *)
                    ~R# (Const a_X74uf b_X74uj -> Const a_X74uf b_X74uj -> Bool :: *)))
        ((>= @ a_X74uf $dOrd_X74ul)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74uh>_N <a_X74uf>_R <b_X74uj>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74uh>_N <a_X74uf>_R <b_X74uj>_P)
                 ->_R <Bool>_R
                 :: (a_X74uf -> a_X74uf -> Bool :: *)
                    ~R# (Const a_X74uf b_X74uj -> Const a_X74uf b_X74uj -> Bool :: *)))
        ((max @ a_X74uf $dOrd_X74ul)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74uh>_N <a_X74uf>_R <b_X74uj>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74uh>_N <a_X74uf>_R <b_X74uj>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74uh>_N <a_X74uf>_R <b_X74uj>_P)
                 :: (a_X74uf -> a_X74uf -> a_X74uf :: *)
                    ~R# (Const a_X74uf b_X74uj
                         -> Const a_X74uf b_X74uj -> Const a_X74uf b_X74uj :: *)))
        ((min @ a_X74uf $dOrd_X74ul)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74uh>_N <a_X74uf>_R <b_X74uj>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74uh>_N <a_X74uf>_R <b_X74uj>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74uh>_N <a_X74uf>_R <b_X74uj>_P)
                 :: (a_X74uf -> a_X74uf -> a_X74uf :: *)
                    ~R# (Const a_X74uf b_X74uj
                         -> Const a_X74uf b_X74uj -> Const a_X74uf b_X74uj :: *)))

-- RHS size: {terms: 7, types: 11, coercions: 0, joins: 0/0}
Data.Functor.Const.$fIxConst_$cp1Ix
  :: forall a k (b :: k). Ix a => Ord (Const a b)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,1*U(1*U(1*U(1*U,1*U),1*U,1*U,1*U,1*U,1*U,1*U,1*U),A,A,A,A,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_X74oV)
                 (@ k_X74oX)
                 (@ (b_X74oZ :: k_X74oX))
                 ($dIx_X74p1 [Occ=Once] :: Ix a_X74oV) ->
                 Data.Functor.Const.$fOrdConst
                   @ a_X74oV
                   @ k_X74oX
                   @ b_X74oZ
                   (GHC.Arr.$p1Ix @ a_X74oV $dIx_X74p1)}]
Data.Functor.Const.$fIxConst_$cp1Ix
  = \ (@ a_X74oV)
      (@ k_X74oX)
      (@ (b_X74oZ :: k_X74oX))
      ($dIx_X74p1 :: Ix a_X74oV) ->
      Data.Functor.Const.$fOrdConst
        @ a_X74oV @ k_X74oX @ b_X74oZ (GHC.Arr.$p1Ix @ a_X74oV $dIx_X74p1)

-- RHS size: {terms: 19, types: 20, coercions: 101, joins: 0/0}
Data.Functor.Const.$fIxConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a k (b :: k). Ix a => Ix (Const a b)
[GblId[DFunId],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U(1*U(1*U(1*U,1*U),1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U,1*U,1*U,1*U,1*U,1*U)>m,
 Unf=DFun: \ (@ a_a7351)
             (@ k_a735l)
             (@ (b_a7352 :: k_a735l))
             (v_B1 :: Ix a_a7351) ->
       GHC.Arr.C:Ix TYPE: Const a_a7351 b_a7352
                    Data.Functor.Const.$fIxConst_$cp1Ix
                      @ a_a7351 @ k_a735l @ b_a7352 v_B1
                    (GHC.Arr.range @ a_a7351 v_B1)
                    `cast` (((,)
                               (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P))
                               (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)))_R
                            ->_R ([Sym (Data.Functor.Const.N:Const[0]
                                            <k_a735l>_N <a_a7351>_R <b_a7352>_P)])_R
                            :: ((a_a7351, a_a7351) -> [a_a7351] :: *)
                               ~R# ((Const a_a7351 b_a7352, Const a_a7351 b_a7352)
                                    -> [Const a_a7351 b_a7352] :: *))
                    (GHC.Arr.index @ a_a7351 v_B1)
                    `cast` (((,)
                               (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P))
                               (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)))_R
                            ->_R Sym (Data.Functor.Const.N:Const[0]
                                          <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                            ->_R <Int>_R
                            :: ((a_a7351, a_a7351) -> a_a7351 -> Int :: *)
                               ~R# ((Const a_a7351 b_a7352, Const a_a7351 b_a7352)
                                    -> Const a_a7351 b_a7352 -> Int :: *))
                    (GHC.Arr.unsafeIndex @ a_a7351 v_B1)
                    `cast` (((,)
                               (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P))
                               (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)))_R
                            ->_R Sym (Data.Functor.Const.N:Const[0]
                                          <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                            ->_R <Int>_R
                            :: ((a_a7351, a_a7351) -> a_a7351 -> Int :: *)
                               ~R# ((Const a_a7351 b_a7352, Const a_a7351 b_a7352)
                                    -> Const a_a7351 b_a7352 -> Int :: *))
                    (GHC.Arr.inRange @ a_a7351 v_B1)
                    `cast` (((,)
                               (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P))
                               (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)))_R
                            ->_R Sym (Data.Functor.Const.N:Const[0]
                                          <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                            ->_R <Bool>_R
                            :: ((a_a7351, a_a7351) -> a_a7351 -> Bool :: *)
                               ~R# ((Const a_a7351 b_a7352, Const a_a7351 b_a7352)
                                    -> Const a_a7351 b_a7352 -> Bool :: *))
                    (GHC.Arr.rangeSize @ a_a7351 v_B1)
                    `cast` (((,)
                               (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P))
                               (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)))_R
                            ->_R <Int>_R
                            :: ((a_a7351, a_a7351) -> Int :: *)
                               ~R# ((Const a_a7351 b_a7352, Const a_a7351 b_a7352) -> Int :: *))
                    (GHC.Arr.unsafeRangeSize @ a_a7351 v_B1)
                    `cast` (((,)
                               (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P))
                               (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)))_R
                            ->_R <Int>_R
                            :: ((a_a7351, a_a7351) -> Int :: *)
                               ~R# ((Const a_a7351 b_a7352, Const a_a7351 b_a7352) -> Int :: *))]
Data.Functor.Const.$fIxConst
  = \ (@ a_X74oW)
      (@ k_X74oY)
      (@ (b_X74p0 :: k_X74oY))
      ($dIx_X74p2 :: Ix a_X74oW) ->
      GHC.Arr.C:Ix
        @ (Const a_X74oW b_X74p0)
        (Data.Functor.Const.$fIxConst_$cp1Ix
           @ a_X74oW @ k_X74oY @ b_X74p0 $dIx_X74p2)
        ((GHC.Arr.range @ a_X74oW $dIx_X74p2)
         `cast` (((,)
                    (Sym (Data.Functor.Const.N:Const[0]
                              <k_X74oY>_N <a_X74oW>_R <b_X74p0>_P))
                    (Sym (Data.Functor.Const.N:Const[0]
                              <k_X74oY>_N <a_X74oW>_R <b_X74p0>_P)))_R
                 ->_R ([Sym (Data.Functor.Const.N:Const[0]
                                 <k_X74oY>_N <a_X74oW>_R <b_X74p0>_P)])_R
                 :: ((a_X74oW, a_X74oW) -> [a_X74oW] :: *)
                    ~R# ((Const a_X74oW b_X74p0, Const a_X74oW b_X74p0)
                         -> [Const a_X74oW b_X74p0] :: *)))
        ((GHC.Arr.index @ a_X74oW $dIx_X74p2)
         `cast` (((,)
                    (Sym (Data.Functor.Const.N:Const[0]
                              <k_X74oY>_N <a_X74oW>_R <b_X74p0>_P))
                    (Sym (Data.Functor.Const.N:Const[0]
                              <k_X74oY>_N <a_X74oW>_R <b_X74p0>_P)))_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74oY>_N <a_X74oW>_R <b_X74p0>_P)
                 ->_R <Int>_R
                 :: ((a_X74oW, a_X74oW) -> a_X74oW -> Int :: *)
                    ~R# ((Const a_X74oW b_X74p0, Const a_X74oW b_X74p0)
                         -> Const a_X74oW b_X74p0 -> Int :: *)))
        ((GHC.Arr.unsafeIndex @ a_X74oW $dIx_X74p2)
         `cast` (((,)
                    (Sym (Data.Functor.Const.N:Const[0]
                              <k_X74oY>_N <a_X74oW>_R <b_X74p0>_P))
                    (Sym (Data.Functor.Const.N:Const[0]
                              <k_X74oY>_N <a_X74oW>_R <b_X74p0>_P)))_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74oY>_N <a_X74oW>_R <b_X74p0>_P)
                 ->_R <Int>_R
                 :: ((a_X74oW, a_X74oW) -> a_X74oW -> Int :: *)
                    ~R# ((Const a_X74oW b_X74p0, Const a_X74oW b_X74p0)
                         -> Const a_X74oW b_X74p0 -> Int :: *)))
        ((GHC.Arr.inRange @ a_X74oW $dIx_X74p2)
         `cast` (((,)
                    (Sym (Data.Functor.Const.N:Const[0]
                              <k_X74oY>_N <a_X74oW>_R <b_X74p0>_P))
                    (Sym (Data.Functor.Const.N:Const[0]
                              <k_X74oY>_N <a_X74oW>_R <b_X74p0>_P)))_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74oY>_N <a_X74oW>_R <b_X74p0>_P)
                 ->_R <Bool>_R
                 :: ((a_X74oW, a_X74oW) -> a_X74oW -> Bool :: *)
                    ~R# ((Const a_X74oW b_X74p0, Const a_X74oW b_X74p0)
                         -> Const a_X74oW b_X74p0 -> Bool :: *)))
        ((GHC.Arr.rangeSize @ a_X74oW $dIx_X74p2)
         `cast` (((,)
                    (Sym (Data.Functor.Const.N:Const[0]
                              <k_X74oY>_N <a_X74oW>_R <b_X74p0>_P))
                    (Sym (Data.Functor.Const.N:Const[0]
                              <k_X74oY>_N <a_X74oW>_R <b_X74p0>_P)))_R
                 ->_R <Int>_R
                 :: ((a_X74oW, a_X74oW) -> Int :: *)
                    ~R# ((Const a_X74oW b_X74p0, Const a_X74oW b_X74p0) -> Int :: *)))
        ((GHC.Arr.unsafeRangeSize @ a_X74oW $dIx_X74p2)
         `cast` (((,)
                    (Sym (Data.Functor.Const.N:Const[0]
                              <k_X74oY>_N <a_X74oW>_R <b_X74p0>_P))
                    (Sym (Data.Functor.Const.N:Const[0]
                              <k_X74oY>_N <a_X74oW>_R <b_X74p0>_P)))_R
                 ->_R <Int>_R
                 :: ((a_X74oW, a_X74oW) -> Int :: *)
                    ~R# ((Const a_X74oW b_X74p0, Const a_X74oW b_X74p0) -> Int :: *)))

-- RHS size: {terms: 7, types: 11, coercions: 0, joins: 0/0}
Data.Functor.Const.$fRealConst_$cp2Real
  :: forall a k (b :: k). Real a => Ord (Const a b)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,1*U(A,1*U(1*U(1*U,1*U),1*U,1*U,1*U,1*U,1*U,1*U,1*U),A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_X74wp)
                 (@ k_X74wr)
                 (@ (b_X74wt :: k_X74wr))
                 ($dReal_X74wv [Occ=Once] :: Real a_X74wp) ->
                 Data.Functor.Const.$fOrdConst
                   @ a_X74wp
                   @ k_X74wr
                   @ b_X74wt
                   (GHC.Real.$p2Real @ a_X74wp $dReal_X74wv)}]
Data.Functor.Const.$fRealConst_$cp2Real
  = \ (@ a_X74wp)
      (@ k_X74wr)
      (@ (b_X74wt :: k_X74wr))
      ($dReal_X74wv :: Real a_X74wp) ->
      Data.Functor.Const.$fOrdConst
        @ a_X74wp
        @ k_X74wr
        @ b_X74wt
        (GHC.Real.$p2Real @ a_X74wp $dReal_X74wv)

-- RHS size: {terms: 11, types: 18, coercions: 8, joins: 0/0}
Data.Functor.Const.$fRealConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a k (b :: k). Real a => Real (Const a b)
[GblId[DFunId],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U(1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U(1*U(1*U,1*U),1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U)>m,
 Unf=DFun: \ (@ a_a7351)
             (@ k_a735l)
             (@ (b_a7352 :: k_a735l))
             (v_B1 :: Real a_a7351) ->
       GHC.Real.C:Real TYPE: Const a_a7351 b_a7352
                       Data.Functor.Const.$fRealConst_$cp1Real
                         @ a_a7351 @ k_a735l @ b_a7352 v_B1
                       Data.Functor.Const.$fRealConst_$cp2Real
                         @ a_a7351 @ k_a735l @ b_a7352 v_B1
                       (GHC.Real.toRational @ a_a7351 v_B1)
                       `cast` (Sym (Data.Functor.Const.N:Const[0]
                                        <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                               ->_R <GHC.Real.Ratio
                                       integer-simple-0.1.1.1:GHC.Integer.Type.Integer>_R
                               :: (a_a7351
                                   -> GHC.Real.Ratio
                                        integer-simple-0.1.1.1:GHC.Integer.Type.Integer :: *)
                                  ~R# (Const a_a7351 b_a7352
                                       -> GHC.Real.Ratio
                                            integer-simple-0.1.1.1:GHC.Integer.Type.Integer :: *))]
Data.Functor.Const.$fRealConst
  = \ (@ a_X74wq)
      (@ k_X74KL)
      (@ (b_X74wu :: k_X74KL))
      ($dReal_X74ww :: Real a_X74wq) ->
      GHC.Real.C:Real
        @ (Const a_X74wq b_X74wu)
        (Data.Functor.Const.$fRealConst_$cp1Real
           @ a_X74wq @ k_X74KL @ b_X74wu $dReal_X74ww)
        (Data.Functor.Const.$fRealConst_$cp2Real
           @ a_X74wq @ k_X74KL @ b_X74wu $dReal_X74ww)
        ((GHC.Real.toRational @ a_X74wq $dReal_X74ww)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74KL>_N <a_X74wq>_R <b_X74wu>_P)
                 ->_R <GHC.Real.Ratio
                         integer-simple-0.1.1.1:GHC.Integer.Type.Integer>_R
                 :: (a_X74wq
                     -> GHC.Real.Ratio
                          integer-simple-0.1.1.1:GHC.Integer.Type.Integer :: *)
                    ~R# (Const a_X74wq b_X74wu
                         -> GHC.Real.Ratio
                              integer-simple-0.1.1.1:GHC.Integer.Type.Integer :: *)))

-- RHS size: {terms: 7, types: 11, coercions: 0, joins: 0/0}
Data.Functor.Const.$fIntegralConst_$cp1Integral
  :: forall a k (b :: k). Integral a => Real (Const a b)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,1*U(1*U(1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U(1*U(1*U,1*U),1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U),A,A,A,A,A,A,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_X74B6)
                 (@ k_X74B9)
                 (@ (b_X74Bc :: k_X74B9))
                 ($dIntegral_X74Bf [Occ=Once] :: Integral a_X74B6) ->
                 Data.Functor.Const.$fRealConst
                   @ a_X74B6
                   @ k_X74B9
                   @ b_X74Bc
                   (GHC.Real.$p1Integral @ a_X74B6 $dIntegral_X74Bf)}]
Data.Functor.Const.$fIntegralConst_$cp1Integral
  = \ (@ a_X74B6)
      (@ k_X74B9)
      (@ (b_X74Bc :: k_X74B9))
      ($dIntegral_X74Bf :: Integral a_X74B6) ->
      Data.Functor.Const.$fRealConst
        @ a_X74B6
        @ k_X74B9
        @ b_X74Bc
        (GHC.Real.$p1Integral @ a_X74B6 $dIntegral_X74Bf)

-- RHS size: {terms: 7, types: 11, coercions: 0, joins: 0/0}
Data.Functor.Const.$fRealFracConst_$cp1RealFrac
  :: forall a k (b :: k). RealFrac a => Real (Const a b)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,1*U(1*U(1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U(1*U(1*U,1*U),1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U),A,A,A,A,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_X74zJ)
                 (@ k_X74zM)
                 (@ (b_X74zP :: k_X74zM))
                 ($dRealFrac_X74zS [Occ=Once] :: RealFrac a_X74zJ) ->
                 Data.Functor.Const.$fRealConst
                   @ a_X74zJ
                   @ k_X74zM
                   @ b_X74zP
                   (GHC.Real.$p1RealFrac @ a_X74zJ $dRealFrac_X74zS)}]
Data.Functor.Const.$fRealFracConst_$cp1RealFrac
  = \ (@ a_X74zJ)
      (@ k_X74zM)
      (@ (b_X74zP :: k_X74zM))
      ($dRealFrac_X74zS :: RealFrac a_X74zJ) ->
      Data.Functor.Const.$fRealConst
        @ a_X74zJ
        @ k_X74zM
        @ b_X74zP
        (GHC.Real.$p1RealFrac @ a_X74zJ $dRealFrac_X74zS)

-- RHS size: {terms: 34, types: 47, coercions: 71, joins: 0/0}
Data.Functor.Const.$fRealFracConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a k (b :: k). RealFrac a => RealFrac (Const a b)
[GblId[DFunId],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U(1*U(1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U(1*U(1*U,1*U),1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U),1*U(1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U,1*U,1*U),C(U),C(U),C(U),C(U),C(U))>m,
 Unf=DFun: \ (@ a_a7351)
             (@ k_a735l)
             (@ (b_a7352 :: k_a735l))
             (v_B1 :: RealFrac a_a7351) ->
       GHC.Real.C:RealFrac TYPE: Const a_a7351 b_a7352
                           Data.Functor.Const.$fRealFracConst_$cp1RealFrac
                             @ a_a7351 @ k_a735l @ b_a7352 v_B1
                           Data.Functor.Const.$fRealFracConst_$cp2RealFrac
                             @ a_a7351 @ k_a735l @ b_a7352 v_B1
                           (\ (@ b1_X74xd)
                              ($dIntegral_X74xg [Occ=Once] :: Integral b1_X74xd) ->
                              GHC.Real.properFraction @ a_a7351 v_B1 @ b1_X74xd $dIntegral_X74xg)
                           `cast` (forall (b1 :: <*>_N).
                                   <Integral b1>_R
                                   ->_R Sym (Data.Functor.Const.N:Const[0]
                                                 <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                   ->_R ((,)
                                           <b1>_R
                                           (Sym (Data.Functor.Const.N:Const[0]
                                                     <k_a735l>_N <a_a7351>_R <b_a7352>_P)))_R
                                   :: (forall b1. Integral b1 => a_a7351 -> (b1, a_a7351) :: *)
                                      ~R# (forall b1.
                                           Integral b1 =>
                                           Const a_a7351 b_a7352
                                           -> (b1, Const a_a7351 b_a7352) :: *))
                           (\ (@ b1_X74xD)
                              ($dIntegral_X74xG [Occ=Once] :: Integral b1_X74xD) ->
                              GHC.Real.truncate @ a_a7351 v_B1 @ b1_X74xD $dIntegral_X74xG)
                           `cast` (forall (b1 :: <*>_N).
                                   <Integral b1>_R
                                   ->_R Sym (Data.Functor.Const.N:Const[0]
                                                 <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                   ->_R <b1>_R
                                   :: (forall b1. Integral b1 => a_a7351 -> b1 :: *)
                                      ~R# (forall b1.
                                           Integral b1 =>
                                           Const a_a7351 b_a7352 -> b1 :: *))
                           (\ (@ b1_X74y2)
                              ($dIntegral_X74y5 [Occ=Once] :: Integral b1_X74y2) ->
                              GHC.Real.round @ a_a7351 v_B1 @ b1_X74y2 $dIntegral_X74y5)
                           `cast` (forall (b1 :: <*>_N).
                                   <Integral b1>_R
                                   ->_R Sym (Data.Functor.Const.N:Const[0]
                                                 <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                   ->_R <b1>_R
                                   :: (forall b1. Integral b1 => a_a7351 -> b1 :: *)
                                      ~R# (forall b1.
                                           Integral b1 =>
                                           Const a_a7351 b_a7352 -> b1 :: *))
                           (\ (@ b1_X74yr)
                              ($dIntegral_X74yu [Occ=Once] :: Integral b1_X74yr) ->
                              GHC.Real.ceiling @ a_a7351 v_B1 @ b1_X74yr $dIntegral_X74yu)
                           `cast` (forall (b1 :: <*>_N).
                                   <Integral b1>_R
                                   ->_R Sym (Data.Functor.Const.N:Const[0]
                                                 <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                   ->_R <b1>_R
                                   :: (forall b1. Integral b1 => a_a7351 -> b1 :: *)
                                      ~R# (forall b1.
                                           Integral b1 =>
                                           Const a_a7351 b_a7352 -> b1 :: *))
                           (\ (@ b1_X74yQ)
                              ($dIntegral_X74yT [Occ=Once] :: Integral b1_X74yQ) ->
                              GHC.Real.floor @ a_a7351 v_B1 @ b1_X74yQ $dIntegral_X74yT)
                           `cast` (forall (b1 :: <*>_N).
                                   <Integral b1>_R
                                   ->_R Sym (Data.Functor.Const.N:Const[0]
                                                 <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                   ->_R <b1>_R
                                   :: (forall b1. Integral b1 => a_a7351 -> b1 :: *)
                                      ~R# (forall b1.
                                           Integral b1 =>
                                           Const a_a7351 b_a7352 -> b1 :: *))]
Data.Functor.Const.$fRealFracConst
  = \ (@ a_X74wT)
      (@ k_X74wV)
      (@ (b_X74wX :: k_X74wV))
      ($dRealFrac_X74wZ :: RealFrac a_X74wT) ->
      GHC.Real.C:RealFrac
        @ (Const a_X74wT b_X74wX)
        (Data.Functor.Const.$fRealFracConst_$cp1RealFrac
           @ a_X74wT @ k_X74wV @ b_X74wX $dRealFrac_X74wZ)
        (Data.Functor.Const.$fRealFracConst_$cp2RealFrac
           @ a_X74wT @ k_X74wV @ b_X74wX $dRealFrac_X74wZ)
        ((\ (@ b1_X74xd) ($dIntegral_X74xg :: Integral b1_X74xd) ->
            GHC.Real.properFraction
              @ a_X74wT $dRealFrac_X74wZ @ b1_X74xd $dIntegral_X74xg)
         `cast` (forall (b1 :: <*>_N).
                 <Integral b1>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74wV>_N <a_X74wT>_R <b_X74wX>_P)
                 ->_R ((,)
                         <b1>_R
                         (Sym (Data.Functor.Const.N:Const[0]
                                   <k_X74wV>_N <a_X74wT>_R <b_X74wX>_P)))_R
                 :: (forall b1. Integral b1 => a_X74wT -> (b1, a_X74wT) :: *)
                    ~R# (forall b1.
                         Integral b1 =>
                         Const a_X74wT b_X74wX -> (b1, Const a_X74wT b_X74wX) :: *)))
        ((\ (@ b1_X74xD) ($dIntegral_X74xG :: Integral b1_X74xD) ->
            GHC.Real.truncate
              @ a_X74wT $dRealFrac_X74wZ @ b1_X74xD $dIntegral_X74xG)
         `cast` (forall (b1 :: <*>_N).
                 <Integral b1>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74wV>_N <a_X74wT>_R <b_X74wX>_P)
                 ->_R <b1>_R
                 :: (forall b1. Integral b1 => a_X74wT -> b1 :: *)
                    ~R# (forall b1. Integral b1 => Const a_X74wT b_X74wX -> b1 :: *)))
        ((\ (@ b1_X74y2) ($dIntegral_X74y5 :: Integral b1_X74y2) ->
            GHC.Real.round
              @ a_X74wT $dRealFrac_X74wZ @ b1_X74y2 $dIntegral_X74y5)
         `cast` (forall (b1 :: <*>_N).
                 <Integral b1>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74wV>_N <a_X74wT>_R <b_X74wX>_P)
                 ->_R <b1>_R
                 :: (forall b1. Integral b1 => a_X74wT -> b1 :: *)
                    ~R# (forall b1. Integral b1 => Const a_X74wT b_X74wX -> b1 :: *)))
        ((\ (@ b1_X74yr) ($dIntegral_X74yu :: Integral b1_X74yr) ->
            GHC.Real.ceiling
              @ a_X74wT $dRealFrac_X74wZ @ b1_X74yr $dIntegral_X74yu)
         `cast` (forall (b1 :: <*>_N).
                 <Integral b1>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74wV>_N <a_X74wT>_R <b_X74wX>_P)
                 ->_R <b1>_R
                 :: (forall b1. Integral b1 => a_X74wT -> b1 :: *)
                    ~R# (forall b1. Integral b1 => Const a_X74wT b_X74wX -> b1 :: *)))
        ((\ (@ b1_X74yQ) ($dIntegral_X74yT :: Integral b1_X74yQ) ->
            GHC.Real.floor
              @ a_X74wT $dRealFrac_X74wZ @ b1_X74yQ $dIntegral_X74yT)
         `cast` (forall (b1 :: <*>_N).
                 <Integral b1>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74wV>_N <a_X74wT>_R <b_X74wX>_P)
                 ->_R <b1>_R
                 :: (forall b1. Integral b1 => a_X74wT -> b1 :: *)
                    ~R# (forall b1. Integral b1 => Const a_X74wT b_X74wX -> b1 :: *)))

-- RHS size: {terms: 7, types: 11, coercions: 0, joins: 0/0}
Data.Functor.Const.$fRealFloatConst_$cp1RealFloat
  :: forall a k (b :: k). RealFloat a => RealFrac (Const a b)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,1*U(1*U(1*U(1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U(1*U(1*U,1*U),1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U),1*U(1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U,1*U,1*U),C(U),C(U),C(U),C(U),C(U)),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_X74za)
                 (@ k_X74zc)
                 (@ (b_X74ze :: k_X74zc))
                 ($dRealFloat_X74zg [Occ=Once] :: RealFloat a_X74za) ->
                 Data.Functor.Const.$fRealFracConst
                   @ a_X74za
                   @ k_X74zc
                   @ b_X74ze
                   (GHC.Float.$p1RealFloat @ a_X74za $dRealFloat_X74zg)}]
Data.Functor.Const.$fRealFloatConst_$cp1RealFloat
  = \ (@ a_X74za)
      (@ k_X74zc)
      (@ (b_X74ze :: k_X74zc))
      ($dRealFloat_X74zg :: RealFloat a_X74za) ->
      Data.Functor.Const.$fRealFracConst
        @ a_X74za
        @ k_X74zc
        @ b_X74ze
        (GHC.Float.$p1RealFloat @ a_X74za $dRealFloat_X74zg)

-- RHS size: {terms: 37, types: 31, coercions: 124, joins: 0/0}
Data.Functor.Const.$fRealFloatConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a k (b :: k). RealFloat a => RealFloat (Const a b)
[GblId[DFunId],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U(1*U(1*U(1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U(1*U(1*U,1*U),1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U),1*U(1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U,1*U,1*U),C(U),C(U),C(U),C(U),C(U)),1*U(1*U(1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U,1*U,1*U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
 Unf=DFun: \ (@ a_a7351)
             (@ k_a735l)
             (@ (b_a7352 :: k_a735l))
             (v_B1 :: RealFloat a_a7351) ->
       GHC.Float.C:RealFloat TYPE: Const a_a7351 b_a7352
                             Data.Functor.Const.$fRealFloatConst_$cp1RealFloat
                               @ a_a7351 @ k_a735l @ b_a7352 v_B1
                             Data.Functor.Const.$fRealFloatConst_$cp2RealFloat
                               @ a_a7351 @ k_a735l @ b_a7352 v_B1
                             (GHC.Float.floatRadix @ a_a7351 v_B1)
                             `cast` (Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     ->_R <integer-simple-0.1.1.1:GHC.Integer.Type.Integer>_R
                                     :: (a_a7351
                                         -> integer-simple-0.1.1.1:GHC.Integer.Type.Integer :: *)
                                        ~R# (Const a_a7351 b_a7352
                                             -> integer-simple-0.1.1.1:GHC.Integer.Type.Integer :: *))
                             (GHC.Float.floatDigits @ a_a7351 v_B1)
                             `cast` (Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     ->_R <Int>_R
                                     :: (a_a7351 -> Int :: *)
                                        ~R# (Const a_a7351 b_a7352 -> Int :: *))
                             (GHC.Float.floatRange @ a_a7351 v_B1)
                             `cast` (Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     ->_R <(Int, Int)>_R
                                     :: (a_a7351 -> (Int, Int) :: *)
                                        ~R# (Const a_a7351 b_a7352 -> (Int, Int) :: *))
                             (GHC.Float.decodeFloat @ a_a7351 v_B1)
                             `cast` (Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     ->_R <(integer-simple-0.1.1.1:GHC.Integer.Type.Integer, Int)>_R
                                     :: (a_a7351
                                         -> (integer-simple-0.1.1.1:GHC.Integer.Type.Integer,
                                             Int) :: *)
                                        ~R# (Const a_a7351 b_a7352
                                             -> (integer-simple-0.1.1.1:GHC.Integer.Type.Integer,
                                                 Int) :: *))
                             (GHC.Float.encodeFloat @ a_a7351 v_B1)
                             `cast` (<integer-simple-0.1.1.1:GHC.Integer.Type.Integer>_R
                                     ->_R <Int>_R
                                     ->_R Sym (Data.Functor.Const.N:Const[0]
                                                   <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     :: (integer-simple-0.1.1.1:GHC.Integer.Type.Integer
                                         -> Int -> a_a7351 :: *)
                                        ~R# (integer-simple-0.1.1.1:GHC.Integer.Type.Integer
                                             -> Int -> Const a_a7351 b_a7352 :: *))
                             (GHC.Float.exponent @ a_a7351 v_B1)
                             `cast` (Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     ->_R <Int>_R
                                     :: (a_a7351 -> Int :: *)
                                        ~R# (Const a_a7351 b_a7352 -> Int :: *))
                             (GHC.Float.significand @ a_a7351 v_B1)
                             `cast` (Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     ->_R Sym (Data.Functor.Const.N:Const[0]
                                                   <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     :: (a_a7351 -> a_a7351 :: *)
                                        ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                             (GHC.Float.scaleFloat @ a_a7351 v_B1)
                             `cast` (<Int>_R
                                     ->_R Sym (Data.Functor.Const.N:Const[0]
                                                   <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     ->_R Sym (Data.Functor.Const.N:Const[0]
                                                   <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     :: (Int -> a_a7351 -> a_a7351 :: *)
                                        ~R# (Int
                                             -> Const a_a7351 b_a7352
                                             -> Const a_a7351 b_a7352 :: *))
                             (GHC.Float.isNaN @ a_a7351 v_B1)
                             `cast` (Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     ->_R <Bool>_R
                                     :: (a_a7351 -> Bool :: *)
                                        ~R# (Const a_a7351 b_a7352 -> Bool :: *))
                             (GHC.Float.isInfinite @ a_a7351 v_B1)
                             `cast` (Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     ->_R <Bool>_R
                                     :: (a_a7351 -> Bool :: *)
                                        ~R# (Const a_a7351 b_a7352 -> Bool :: *))
                             (GHC.Float.isDenormalized @ a_a7351 v_B1)
                             `cast` (Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     ->_R <Bool>_R
                                     :: (a_a7351 -> Bool :: *)
                                        ~R# (Const a_a7351 b_a7352 -> Bool :: *))
                             (GHC.Float.isNegativeZero @ a_a7351 v_B1)
                             `cast` (Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     ->_R <Bool>_R
                                     :: (a_a7351 -> Bool :: *)
                                        ~R# (Const a_a7351 b_a7352 -> Bool :: *))
                             (GHC.Float.isIEEE @ a_a7351 v_B1)
                             `cast` (Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     ->_R <Bool>_R
                                     :: (a_a7351 -> Bool :: *)
                                        ~R# (Const a_a7351 b_a7352 -> Bool :: *))
                             (GHC.Float.atan2 @ a_a7351 v_B1)
                             `cast` (Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     ->_R Sym (Data.Functor.Const.N:Const[0]
                                                   <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     ->_R Sym (Data.Functor.Const.N:Const[0]
                                                   <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                     :: (a_a7351 -> a_a7351 -> a_a7351 :: *)
                                        ~R# (Const a_a7351 b_a7352
                                             -> Const a_a7351 b_a7352
                                             -> Const a_a7351 b_a7352 :: *))]
Data.Functor.Const.$fRealFloatConst
  = \ (@ a_X74zb)
      (@ k_X74zd)
      (@ (b_X74zf :: k_X74zd))
      ($dRealFloat_X74zh :: RealFloat a_X74zb) ->
      GHC.Float.C:RealFloat
        @ (Const a_X74zb b_X74zf)
        (Data.Functor.Const.$fRealFloatConst_$cp1RealFloat
           @ a_X74zb @ k_X74zd @ b_X74zf $dRealFloat_X74zh)
        (Data.Functor.Const.$fRealFloatConst_$cp2RealFloat
           @ a_X74zb @ k_X74zd @ b_X74zf $dRealFloat_X74zh)
        ((GHC.Float.floatRadix @ a_X74zb $dRealFloat_X74zh)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74zd>_N <a_X74zb>_R <b_X74zf>_P)
                 ->_R <integer-simple-0.1.1.1:GHC.Integer.Type.Integer>_R
                 :: (a_X74zb
                     -> integer-simple-0.1.1.1:GHC.Integer.Type.Integer :: *)
                    ~R# (Const a_X74zb b_X74zf
                         -> integer-simple-0.1.1.1:GHC.Integer.Type.Integer :: *)))
        ((GHC.Float.floatDigits @ a_X74zb $dRealFloat_X74zh)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74zd>_N <a_X74zb>_R <b_X74zf>_P)
                 ->_R <Int>_R
                 :: (a_X74zb -> Int :: *) ~R# (Const a_X74zb b_X74zf -> Int :: *)))
        ((GHC.Float.floatRange @ a_X74zb $dRealFloat_X74zh)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74zd>_N <a_X74zb>_R <b_X74zf>_P)
                 ->_R <(Int, Int)>_R
                 :: (a_X74zb -> (Int, Int) :: *)
                    ~R# (Const a_X74zb b_X74zf -> (Int, Int) :: *)))
        ((GHC.Float.decodeFloat @ a_X74zb $dRealFloat_X74zh)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74zd>_N <a_X74zb>_R <b_X74zf>_P)
                 ->_R <(integer-simple-0.1.1.1:GHC.Integer.Type.Integer, Int)>_R
                 :: (a_X74zb
                     -> (integer-simple-0.1.1.1:GHC.Integer.Type.Integer, Int) :: *)
                    ~R# (Const a_X74zb b_X74zf
                         -> (integer-simple-0.1.1.1:GHC.Integer.Type.Integer, Int) :: *)))
        ((GHC.Float.encodeFloat @ a_X74zb $dRealFloat_X74zh)
         `cast` (<integer-simple-0.1.1.1:GHC.Integer.Type.Integer>_R
                 ->_R <Int>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74zd>_N <a_X74zb>_R <b_X74zf>_P)
                 :: (integer-simple-0.1.1.1:GHC.Integer.Type.Integer
                     -> Int -> a_X74zb :: *)
                    ~R# (integer-simple-0.1.1.1:GHC.Integer.Type.Integer
                         -> Int -> Const a_X74zb b_X74zf :: *)))
        ((GHC.Float.exponent @ a_X74zb $dRealFloat_X74zh)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74zd>_N <a_X74zb>_R <b_X74zf>_P)
                 ->_R <Int>_R
                 :: (a_X74zb -> Int :: *) ~R# (Const a_X74zb b_X74zf -> Int :: *)))
        ((GHC.Float.significand @ a_X74zb $dRealFloat_X74zh)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74zd>_N <a_X74zb>_R <b_X74zf>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74zd>_N <a_X74zb>_R <b_X74zf>_P)
                 :: (a_X74zb -> a_X74zb :: *)
                    ~R# (Const a_X74zb b_X74zf -> Const a_X74zb b_X74zf :: *)))
        ((GHC.Float.scaleFloat @ a_X74zb $dRealFloat_X74zh)
         `cast` (<Int>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74zd>_N <a_X74zb>_R <b_X74zf>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74zd>_N <a_X74zb>_R <b_X74zf>_P)
                 :: (Int -> a_X74zb -> a_X74zb :: *)
                    ~R# (Int -> Const a_X74zb b_X74zf -> Const a_X74zb b_X74zf :: *)))
        ((GHC.Float.isNaN @ a_X74zb $dRealFloat_X74zh)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74zd>_N <a_X74zb>_R <b_X74zf>_P)
                 ->_R <Bool>_R
                 :: (a_X74zb -> Bool :: *)
                    ~R# (Const a_X74zb b_X74zf -> Bool :: *)))
        ((GHC.Float.isInfinite @ a_X74zb $dRealFloat_X74zh)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74zd>_N <a_X74zb>_R <b_X74zf>_P)
                 ->_R <Bool>_R
                 :: (a_X74zb -> Bool :: *)
                    ~R# (Const a_X74zb b_X74zf -> Bool :: *)))
        ((GHC.Float.isDenormalized @ a_X74zb $dRealFloat_X74zh)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74zd>_N <a_X74zb>_R <b_X74zf>_P)
                 ->_R <Bool>_R
                 :: (a_X74zb -> Bool :: *)
                    ~R# (Const a_X74zb b_X74zf -> Bool :: *)))
        ((GHC.Float.isNegativeZero @ a_X74zb $dRealFloat_X74zh)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74zd>_N <a_X74zb>_R <b_X74zf>_P)
                 ->_R <Bool>_R
                 :: (a_X74zb -> Bool :: *)
                    ~R# (Const a_X74zb b_X74zf -> Bool :: *)))
        ((GHC.Float.isIEEE @ a_X74zb $dRealFloat_X74zh)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74zd>_N <a_X74zb>_R <b_X74zf>_P)
                 ->_R <Bool>_R
                 :: (a_X74zb -> Bool :: *)
                    ~R# (Const a_X74zb b_X74zf -> Bool :: *)))
        ((GHC.Float.atan2 @ a_X74zb $dRealFloat_X74zh)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74zd>_N <a_X74zb>_R <b_X74zf>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74zd>_N <a_X74zb>_R <b_X74zf>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74zd>_N <a_X74zb>_R <b_X74zf>_P)
                 :: (a_X74zb -> a_X74zb -> a_X74zb :: *)
                    ~R# (Const a_X74zb b_X74zf
                         -> Const a_X74zb b_X74zf -> Const a_X74zb b_X74zf :: *)))

-- RHS size: {terms: 21, types: 19, coercions: 108, joins: 0/0}
Data.Functor.Const.$fEnumConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a k (b :: k). Enum a => Enum (Const a b)
[GblId[DFunId],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)>m,
 Unf=DFun: \ (@ a_a7351)
             (@ k_a735l)
             (@ (b_a7352 :: k_a735l))
             (v_B1 :: Enum a_a7351) ->
       GHC.Enum.C:Enum TYPE: Const a_a7351 b_a7352
                       (GHC.Enum.succ @ a_a7351 v_B1)
                       `cast` (Sym (Data.Functor.Const.N:Const[0]
                                        <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                               ->_R Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                               :: (a_a7351 -> a_a7351 :: *)
                                  ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                       (GHC.Enum.pred @ a_a7351 v_B1)
                       `cast` (Sym (Data.Functor.Const.N:Const[0]
                                        <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                               ->_R Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                               :: (a_a7351 -> a_a7351 :: *)
                                  ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                       (GHC.Enum.toEnum @ a_a7351 v_B1)
                       `cast` (<Int>_R
                               ->_R Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                               :: (Int -> a_a7351 :: *) ~R# (Int -> Const a_a7351 b_a7352 :: *))
                       (GHC.Enum.fromEnum @ a_a7351 v_B1)
                       `cast` (Sym (Data.Functor.Const.N:Const[0]
                                        <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                               ->_R <Int>_R
                               :: (a_a7351 -> Int :: *) ~R# (Const a_a7351 b_a7352 -> Int :: *))
                       (GHC.Enum.enumFrom @ a_a7351 v_B1)
                       `cast` (Sym (Data.Functor.Const.N:Const[0]
                                        <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                               ->_R ([Sym (Data.Functor.Const.N:Const[0]
                                               <k_a735l>_N <a_a7351>_R <b_a7352>_P)])_R
                               :: (a_a7351 -> [a_a7351] :: *)
                                  ~R# (Const a_a7351 b_a7352 -> [Const a_a7351 b_a7352] :: *))
                       (GHC.Enum.enumFromThen @ a_a7351 v_B1)
                       `cast` (Sym (Data.Functor.Const.N:Const[0]
                                        <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                               ->_R Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                               ->_R ([Sym (Data.Functor.Const.N:Const[0]
                                               <k_a735l>_N <a_a7351>_R <b_a7352>_P)])_R
                               :: (a_a7351 -> a_a7351 -> [a_a7351] :: *)
                                  ~R# (Const a_a7351 b_a7352
                                       -> Const a_a7351 b_a7352 -> [Const a_a7351 b_a7352] :: *))
                       (GHC.Enum.enumFromTo @ a_a7351 v_B1)
                       `cast` (Sym (Data.Functor.Const.N:Const[0]
                                        <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                               ->_R Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                               ->_R ([Sym (Data.Functor.Const.N:Const[0]
                                               <k_a735l>_N <a_a7351>_R <b_a7352>_P)])_R
                               :: (a_a7351 -> a_a7351 -> [a_a7351] :: *)
                                  ~R# (Const a_a7351 b_a7352
                                       -> Const a_a7351 b_a7352 -> [Const a_a7351 b_a7352] :: *))
                       (GHC.Enum.enumFromThenTo @ a_a7351 v_B1)
                       `cast` (Sym (Data.Functor.Const.N:Const[0]
                                        <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                               ->_R Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                               ->_R Sym (Data.Functor.Const.N:Const[0]
                                             <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                               ->_R ([Sym (Data.Functor.Const.N:Const[0]
                                               <k_a735l>_N <a_a7351>_R <b_a7352>_P)])_R
                               :: (a_a7351 -> a_a7351 -> a_a7351 -> [a_a7351] :: *)
                                  ~R# (Const a_a7351 b_a7352
                                       -> Const a_a7351 b_a7352
                                       -> Const a_a7351 b_a7352
                                       -> [Const a_a7351 b_a7352] :: *))]
Data.Functor.Const.$fEnumConst
  = \ (@ a_X74rw)
      (@ k_X74co)
      (@ (b_X74cq :: k_X74co))
      ($dEnum_X74cs :: Enum a_X74rw) ->
      GHC.Enum.C:Enum
        @ (Const a_X74rw b_X74cq)
        ((GHC.Enum.succ @ a_X74rw $dEnum_X74cs)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74co>_N <a_X74rw>_R <b_X74cq>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74co>_N <a_X74rw>_R <b_X74cq>_P)
                 :: (a_X74rw -> a_X74rw :: *)
                    ~R# (Const a_X74rw b_X74cq -> Const a_X74rw b_X74cq :: *)))
        ((GHC.Enum.pred @ a_X74rw $dEnum_X74cs)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74co>_N <a_X74rw>_R <b_X74cq>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74co>_N <a_X74rw>_R <b_X74cq>_P)
                 :: (a_X74rw -> a_X74rw :: *)
                    ~R# (Const a_X74rw b_X74cq -> Const a_X74rw b_X74cq :: *)))
        ((GHC.Enum.toEnum @ a_X74rw $dEnum_X74cs)
         `cast` (<Int>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74co>_N <a_X74rw>_R <b_X74cq>_P)
                 :: (Int -> a_X74rw :: *) ~R# (Int -> Const a_X74rw b_X74cq :: *)))
        ((GHC.Enum.fromEnum @ a_X74rw $dEnum_X74cs)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74co>_N <a_X74rw>_R <b_X74cq>_P)
                 ->_R <Int>_R
                 :: (a_X74rw -> Int :: *) ~R# (Const a_X74rw b_X74cq -> Int :: *)))
        ((GHC.Enum.enumFrom @ a_X74rw $dEnum_X74cs)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74co>_N <a_X74rw>_R <b_X74cq>_P)
                 ->_R ([Sym (Data.Functor.Const.N:Const[0]
                                 <k_X74co>_N <a_X74rw>_R <b_X74cq>_P)])_R
                 :: (a_X74rw -> [a_X74rw] :: *)
                    ~R# (Const a_X74rw b_X74cq -> [Const a_X74rw b_X74cq] :: *)))
        ((GHC.Enum.enumFromThen @ a_X74rw $dEnum_X74cs)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74co>_N <a_X74rw>_R <b_X74cq>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74co>_N <a_X74rw>_R <b_X74cq>_P)
                 ->_R ([Sym (Data.Functor.Const.N:Const[0]
                                 <k_X74co>_N <a_X74rw>_R <b_X74cq>_P)])_R
                 :: (a_X74rw -> a_X74rw -> [a_X74rw] :: *)
                    ~R# (Const a_X74rw b_X74cq
                         -> Const a_X74rw b_X74cq -> [Const a_X74rw b_X74cq] :: *)))
        ((GHC.Enum.enumFromTo @ a_X74rw $dEnum_X74cs)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74co>_N <a_X74rw>_R <b_X74cq>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74co>_N <a_X74rw>_R <b_X74cq>_P)
                 ->_R ([Sym (Data.Functor.Const.N:Const[0]
                                 <k_X74co>_N <a_X74rw>_R <b_X74cq>_P)])_R
                 :: (a_X74rw -> a_X74rw -> [a_X74rw] :: *)
                    ~R# (Const a_X74rw b_X74cq
                         -> Const a_X74rw b_X74cq -> [Const a_X74rw b_X74cq] :: *)))
        ((GHC.Enum.enumFromThenTo @ a_X74rw $dEnum_X74cs)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74co>_N <a_X74rw>_R <b_X74cq>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74co>_N <a_X74rw>_R <b_X74cq>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74co>_N <a_X74rw>_R <b_X74cq>_P)
                 ->_R ([Sym (Data.Functor.Const.N:Const[0]
                                 <k_X74co>_N <a_X74rw>_R <b_X74cq>_P)])_R
                 :: (a_X74rw -> a_X74rw -> a_X74rw -> [a_X74rw] :: *)
                    ~R# (Const a_X74rw b_X74cq
                         -> Const a_X74rw b_X74cq
                         -> Const a_X74rw b_X74cq
                         -> [Const a_X74rw b_X74cq] :: *)))

-- RHS size: {terms: 7, types: 11, coercions: 0, joins: 0/0}
Data.Functor.Const.$fIntegralConst_$cp2Integral
  :: forall a k (b :: k). Integral a => Enum (Const a b)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,1*U(A,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U),A,A,A,A,A,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_X74nF)
                 (@ k_X74nH)
                 (@ (b_X74nJ :: k_X74nH))
                 ($dIntegral_X74nL [Occ=Once] :: Integral a_X74nF) ->
                 Data.Functor.Const.$fEnumConst
                   @ a_X74nF
                   @ k_X74nH
                   @ b_X74nJ
                   (GHC.Real.$p2Integral @ a_X74nF $dIntegral_X74nL)}]
Data.Functor.Const.$fIntegralConst_$cp2Integral
  = \ (@ a_X74nF)
      (@ k_X74nH)
      (@ (b_X74nJ :: k_X74nH))
      ($dIntegral_X74nL :: Integral a_X74nF) ->
      Data.Functor.Const.$fEnumConst
        @ a_X74nF
        @ k_X74nH
        @ b_X74nJ
        (GHC.Real.$p2Integral @ a_X74nF $dIntegral_X74nL)

-- RHS size: {terms: 23, types: 24, coercions: 121, joins: 0/0}
Data.Functor.Const.$fIntegralConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a k (b :: k). Integral a => Integral (Const a b)
[GblId[DFunId],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U(1*U(1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U(1*U(1*U,1*U),1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U,1*U,1*U,1*U,1*U,1*U,1*U)>m,
 Unf=DFun: \ (@ a_a7351)
             (@ k_a735l)
             (@ (b_a7352 :: k_a735l))
             (v_B1 :: Integral a_a7351) ->
       GHC.Real.C:Integral TYPE: Const a_a7351 b_a7352
                           Data.Functor.Const.$fIntegralConst_$cp1Integral
                             @ a_a7351 @ k_a735l @ b_a7352 v_B1
                           Data.Functor.Const.$fIntegralConst_$cp2Integral
                             @ a_a7351 @ k_a735l @ b_a7352 v_B1
                           (GHC.Real.quot @ a_a7351 v_B1)
                           `cast` (Sym (Data.Functor.Const.N:Const[0]
                                            <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                   ->_R Sym (Data.Functor.Const.N:Const[0]
                                                 <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                   ->_R Sym (Data.Functor.Const.N:Const[0]
                                                 <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                   :: (a_a7351 -> a_a7351 -> a_a7351 :: *)
                                      ~R# (Const a_a7351 b_a7352
                                           -> Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                           (GHC.Real.rem @ a_a7351 v_B1)
                           `cast` (Sym (Data.Functor.Const.N:Const[0]
                                            <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                   ->_R Sym (Data.Functor.Const.N:Const[0]
                                                 <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                   ->_R Sym (Data.Functor.Const.N:Const[0]
                                                 <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                   :: (a_a7351 -> a_a7351 -> a_a7351 :: *)
                                      ~R# (Const a_a7351 b_a7352
                                           -> Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                           (GHC.Real.div @ a_a7351 v_B1)
                           `cast` (Sym (Data.Functor.Const.N:Const[0]
                                            <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                   ->_R Sym (Data.Functor.Const.N:Const[0]
                                                 <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                   ->_R Sym (Data.Functor.Const.N:Const[0]
                                                 <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                   :: (a_a7351 -> a_a7351 -> a_a7351 :: *)
                                      ~R# (Const a_a7351 b_a7352
                                           -> Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                           (GHC.Real.mod @ a_a7351 v_B1)
                           `cast` (Sym (Data.Functor.Const.N:Const[0]
                                            <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                   ->_R Sym (Data.Functor.Const.N:Const[0]
                                                 <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                   ->_R Sym (Data.Functor.Const.N:Const[0]
                                                 <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                   :: (a_a7351 -> a_a7351 -> a_a7351 :: *)
                                      ~R# (Const a_a7351 b_a7352
                                           -> Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                           (GHC.Real.quotRem @ a_a7351 v_B1)
                           `cast` (Sym (Data.Functor.Const.N:Const[0]
                                            <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                   ->_R Sym (Data.Functor.Const.N:Const[0]
                                                 <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                   ->_R ((,)
                                           (Sym (Data.Functor.Const.N:Const[0]
                                                     <k_a735l>_N <a_a7351>_R <b_a7352>_P))
                                           (Sym (Data.Functor.Const.N:Const[0]
                                                     <k_a735l>_N <a_a7351>_R <b_a7352>_P)))_R
                                   :: (a_a7351 -> a_a7351 -> (a_a7351, a_a7351) :: *)
                                      ~R# (Const a_a7351 b_a7352
                                           -> Const a_a7351 b_a7352
                                           -> (Const a_a7351 b_a7352, Const a_a7351 b_a7352) :: *))
                           (GHC.Real.divMod @ a_a7351 v_B1)
                           `cast` (Sym (Data.Functor.Const.N:Const[0]
                                            <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                   ->_R Sym (Data.Functor.Const.N:Const[0]
                                                 <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                   ->_R ((,)
                                           (Sym (Data.Functor.Const.N:Const[0]
                                                     <k_a735l>_N <a_a7351>_R <b_a7352>_P))
                                           (Sym (Data.Functor.Const.N:Const[0]
                                                     <k_a735l>_N <a_a7351>_R <b_a7352>_P)))_R
                                   :: (a_a7351 -> a_a7351 -> (a_a7351, a_a7351) :: *)
                                      ~R# (Const a_a7351 b_a7352
                                           -> Const a_a7351 b_a7352
                                           -> (Const a_a7351 b_a7352, Const a_a7351 b_a7352) :: *))
                           (GHC.Real.toInteger @ a_a7351 v_B1)
                           `cast` (Sym (Data.Functor.Const.N:Const[0]
                                            <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                   ->_R <integer-simple-0.1.1.1:GHC.Integer.Type.Integer>_R
                                   :: (a_a7351
                                       -> integer-simple-0.1.1.1:GHC.Integer.Type.Integer :: *)
                                      ~R# (Const a_a7351 b_a7352
                                           -> integer-simple-0.1.1.1:GHC.Integer.Type.Integer :: *))]
Data.Functor.Const.$fIntegralConst
  = \ (@ a_X74CS)
      (@ k_X74CV)
      (@ (b_X74CY :: k_X74CV))
      ($dIntegral_X74D1 :: Integral a_X74CS) ->
      GHC.Real.C:Integral
        @ (Const a_X74CS b_X74CY)
        (Data.Functor.Const.$fIntegralConst_$cp1Integral
           @ a_X74CS @ k_X74CV @ b_X74CY $dIntegral_X74D1)
        (Data.Functor.Const.$fIntegralConst_$cp2Integral
           @ a_X74CS @ k_X74CV @ b_X74CY $dIntegral_X74D1)
        ((GHC.Real.quot @ a_X74CS $dIntegral_X74D1)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74CV>_N <a_X74CS>_R <b_X74CY>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74CV>_N <a_X74CS>_R <b_X74CY>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74CV>_N <a_X74CS>_R <b_X74CY>_P)
                 :: (a_X74CS -> a_X74CS -> a_X74CS :: *)
                    ~R# (Const a_X74CS b_X74CY
                         -> Const a_X74CS b_X74CY -> Const a_X74CS b_X74CY :: *)))
        ((GHC.Real.rem @ a_X74CS $dIntegral_X74D1)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74CV>_N <a_X74CS>_R <b_X74CY>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74CV>_N <a_X74CS>_R <b_X74CY>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74CV>_N <a_X74CS>_R <b_X74CY>_P)
                 :: (a_X74CS -> a_X74CS -> a_X74CS :: *)
                    ~R# (Const a_X74CS b_X74CY
                         -> Const a_X74CS b_X74CY -> Const a_X74CS b_X74CY :: *)))
        ((GHC.Real.div @ a_X74CS $dIntegral_X74D1)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74CV>_N <a_X74CS>_R <b_X74CY>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74CV>_N <a_X74CS>_R <b_X74CY>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74CV>_N <a_X74CS>_R <b_X74CY>_P)
                 :: (a_X74CS -> a_X74CS -> a_X74CS :: *)
                    ~R# (Const a_X74CS b_X74CY
                         -> Const a_X74CS b_X74CY -> Const a_X74CS b_X74CY :: *)))
        ((GHC.Real.mod @ a_X74CS $dIntegral_X74D1)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74CV>_N <a_X74CS>_R <b_X74CY>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74CV>_N <a_X74CS>_R <b_X74CY>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74CV>_N <a_X74CS>_R <b_X74CY>_P)
                 :: (a_X74CS -> a_X74CS -> a_X74CS :: *)
                    ~R# (Const a_X74CS b_X74CY
                         -> Const a_X74CS b_X74CY -> Const a_X74CS b_X74CY :: *)))
        ((GHC.Real.quotRem @ a_X74CS $dIntegral_X74D1)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74CV>_N <a_X74CS>_R <b_X74CY>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74CV>_N <a_X74CS>_R <b_X74CY>_P)
                 ->_R ((,)
                         (Sym (Data.Functor.Const.N:Const[0]
                                   <k_X74CV>_N <a_X74CS>_R <b_X74CY>_P))
                         (Sym (Data.Functor.Const.N:Const[0]
                                   <k_X74CV>_N <a_X74CS>_R <b_X74CY>_P)))_R
                 :: (a_X74CS -> a_X74CS -> (a_X74CS, a_X74CS) :: *)
                    ~R# (Const a_X74CS b_X74CY
                         -> Const a_X74CS b_X74CY
                         -> (Const a_X74CS b_X74CY, Const a_X74CS b_X74CY) :: *)))
        ((GHC.Real.divMod @ a_X74CS $dIntegral_X74D1)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74CV>_N <a_X74CS>_R <b_X74CY>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X74CV>_N <a_X74CS>_R <b_X74CY>_P)
                 ->_R ((,)
                         (Sym (Data.Functor.Const.N:Const[0]
                                   <k_X74CV>_N <a_X74CS>_R <b_X74CY>_P))
                         (Sym (Data.Functor.Const.N:Const[0]
                                   <k_X74CV>_N <a_X74CS>_R <b_X74CY>_P)))_R
                 :: (a_X74CS -> a_X74CS -> (a_X74CS, a_X74CS) :: *)
                    ~R# (Const a_X74CS b_X74CY
                         -> Const a_X74CS b_X74CY
                         -> (Const a_X74CS b_X74CY, Const a_X74CS b_X74CY) :: *)))
        ((GHC.Real.toInteger @ a_X74CS $dIntegral_X74D1)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74CV>_N <a_X74CS>_R <b_X74CY>_P)
                 ->_R <integer-simple-0.1.1.1:GHC.Integer.Type.Integer>_R
                 :: (a_X74CS
                     -> integer-simple-0.1.1.1:GHC.Integer.Type.Integer :: *)
                    ~R# (Const a_X74CS b_X74CY
                         -> integer-simple-0.1.1.1:GHC.Integer.Type.Integer :: *)))

-- RHS size: {terms: 9, types: 13, coercions: 10, joins: 0/0}
Data.Functor.Const.$fBoundedConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a k (b :: k). Bounded a => Bounded (Const a b)
[GblId[DFunId],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U(1*U,1*U)>m,
 Unf=DFun: \ (@ a_a7351)
             (@ k_a735l)
             (@ (b_a7352 :: k_a735l))
             (v_B1 :: Bounded a_a7351) ->
       GHC.Enum.C:Bounded TYPE: Const a_a7351 b_a7352
                          (GHC.Enum.minBound @ a_a7351 v_B1)
                          `cast` (Sym (Data.Functor.Const.N:Const[0]
                                           <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                  :: (a_a7351 :: *) ~R# (Const a_a7351 b_a7352 :: *))
                          (GHC.Enum.maxBound @ a_a7351 v_B1)
                          `cast` (Sym (Data.Functor.Const.N:Const[0]
                                           <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                  :: (a_a7351 :: *) ~R# (Const a_a7351 b_a7352 :: *))]
Data.Functor.Const.$fBoundedConst
  = \ (@ a_X74rE)
      (@ k_X74rH)
      (@ (b_X74rK :: k_X74rH))
      ($dBounded_X74rN :: Bounded a_X74rE) ->
      GHC.Enum.C:Bounded
        @ (Const a_X74rE b_X74rK)
        ((GHC.Enum.minBound @ a_X74rE $dBounded_X74rN)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74rH>_N <a_X74rE>_R <b_X74rK>_P)
                 :: (a_X74rE :: *) ~R# (Const a_X74rE b_X74rK :: *)))
        ((GHC.Enum.maxBound @ a_X74rE $dBounded_X74rN)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74rH>_N <a_X74rE>_R <b_X74rK>_P)
                 :: (a_X74rE :: *) ~R# (Const a_X74rE b_X74rK :: *)))

-- RHS size: {terms: 7, types: 11, coercions: 0, joins: 0/0}
Data.Functor.Const.$fBitsConst_$cp1Bits
  :: forall a k (b :: k). Bits a => Eq (Const a b)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,1*U(1*U(1*U,1*U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_X74qk)
                 (@ k_X748O)
                 (@ (b_X748Q :: k_X748O))
                 ($dBits_X748S [Occ=Once] :: Bits a_X74qk) ->
                 Data.Functor.Const.$fEqConst
                   @ a_X74qk
                   @ k_X748O
                   @ b_X748Q
                   (Data.Bits.$p1Bits @ a_X74qk $dBits_X748S)}]
Data.Functor.Const.$fBitsConst_$cp1Bits
  = \ (@ a_X74qk)
      (@ k_X748O)
      (@ (b_X748Q :: k_X748O))
      ($dBits_X748S :: Bits a_X74qk) ->
      Data.Functor.Const.$fEqConst
        @ a_X74qk
        @ k_X748O
        @ b_X748Q
        (Data.Bits.$p1Bits @ a_X74qk $dBits_X748S)

-- RHS size: {terms: 51, types: 36, coercions: 254, joins: 0/0}
Data.Functor.Const.$fBitsConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a k (b :: k). Bits a => Bits (Const a b)
[GblId[DFunId],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U(1*U(1*U,1*U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
 Unf=DFun: \ (@ a_a7351)
             (@ k_a735l)
             (@ (b_a7352 :: k_a735l))
             (v_B1 :: Bits a_a7351) ->
       Data.Bits.C:Bits TYPE: Const a_a7351 b_a7352
                        Data.Functor.Const.$fBitsConst_$cp1Bits
                          @ a_a7351 @ k_a735l @ b_a7352 v_B1
                        (Data.Bits..&. @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                :: (a_a7351 -> a_a7351 -> a_a7351 :: *)
                                   ~R# (Const a_a7351 b_a7352
                                        -> Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                        (Data.Bits..|. @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                :: (a_a7351 -> a_a7351 -> a_a7351 :: *)
                                   ~R# (Const a_a7351 b_a7352
                                        -> Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                        (Data.Bits.xor @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                :: (a_a7351 -> a_a7351 -> a_a7351 :: *)
                                   ~R# (Const a_a7351 b_a7352
                                        -> Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                        (Data.Bits.complement @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                :: (a_a7351 -> a_a7351 :: *)
                                   ~R# (Const a_a7351 b_a7352 -> Const a_a7351 b_a7352 :: *))
                        (Data.Bits.shift @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R <Int>_R
                                ->_R Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                :: (a_a7351 -> Int -> a_a7351 :: *)
                                   ~R# (Const a_a7351 b_a7352 -> Int -> Const a_a7351 b_a7352 :: *))
                        (Data.Bits.rotate @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R <Int>_R
                                ->_R Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                :: (a_a7351 -> Int -> a_a7351 :: *)
                                   ~R# (Const a_a7351 b_a7352 -> Int -> Const a_a7351 b_a7352 :: *))
                        (Data.Bits.zeroBits @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                :: (a_a7351 :: *) ~R# (Const a_a7351 b_a7352 :: *))
                        (Data.Bits.bit @ a_a7351 v_B1)
                        `cast` (<Int>_R
                                ->_R Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                :: (Int -> a_a7351 :: *) ~R# (Int -> Const a_a7351 b_a7352 :: *))
                        (Data.Bits.setBit @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R <Int>_R
                                ->_R Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                :: (a_a7351 -> Int -> a_a7351 :: *)
                                   ~R# (Const a_a7351 b_a7352 -> Int -> Const a_a7351 b_a7352 :: *))
                        (Data.Bits.clearBit @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R <Int>_R
                                ->_R Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                :: (a_a7351 -> Int -> a_a7351 :: *)
                                   ~R# (Const a_a7351 b_a7352 -> Int -> Const a_a7351 b_a7352 :: *))
                        (Data.Bits.complementBit @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R <Int>_R
                                ->_R Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                :: (a_a7351 -> Int -> a_a7351 :: *)
                                   ~R# (Const a_a7351 b_a7352 -> Int -> Const a_a7351 b_a7352 :: *))
                        (Data.Bits.testBit @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R <Int -> Bool>_R
                                :: (a_a7351 -> Int -> Bool :: *)
                                   ~R# (Const a_a7351 b_a7352 -> Int -> Bool :: *))
                        (Data.Bits.bitSizeMaybe @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R <Maybe Int>_R
                                :: (a_a7351 -> Maybe Int :: *)
                                   ~R# (Const a_a7351 b_a7352 -> Maybe Int :: *))
                        (Data.Bits.bitSize @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R <Int>_R
                                :: (a_a7351 -> Int :: *) ~R# (Const a_a7351 b_a7352 -> Int :: *))
                        (Data.Bits.isSigned @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R <Bool>_R
                                :: (a_a7351 -> Bool :: *) ~R# (Const a_a7351 b_a7352 -> Bool :: *))
                        (Data.Bits.shiftL @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R <Int>_R
                                ->_R Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                :: (a_a7351 -> Int -> a_a7351 :: *)
                                   ~R# (Const a_a7351 b_a7352 -> Int -> Const a_a7351 b_a7352 :: *))
                        (Data.Bits.unsafeShiftL @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R <Int>_R
                                ->_R Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                :: (a_a7351 -> Int -> a_a7351 :: *)
                                   ~R# (Const a_a7351 b_a7352 -> Int -> Const a_a7351 b_a7352 :: *))
                        (Data.Bits.shiftR @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R <Int>_R
                                ->_R Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                :: (a_a7351 -> Int -> a_a7351 :: *)
                                   ~R# (Const a_a7351 b_a7352 -> Int -> Const a_a7351 b_a7352 :: *))
                        (Data.Bits.unsafeShiftR @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R <Int>_R
                                ->_R Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                :: (a_a7351 -> Int -> a_a7351 :: *)
                                   ~R# (Const a_a7351 b_a7352 -> Int -> Const a_a7351 b_a7352 :: *))
                        (Data.Bits.rotateL @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R <Int>_R
                                ->_R Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                :: (a_a7351 -> Int -> a_a7351 :: *)
                                   ~R# (Const a_a7351 b_a7352 -> Int -> Const a_a7351 b_a7352 :: *))
                        (Data.Bits.rotateR @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R <Int>_R
                                ->_R Sym (Data.Functor.Const.N:Const[0]
                                              <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                :: (a_a7351 -> Int -> a_a7351 :: *)
                                   ~R# (Const a_a7351 b_a7352 -> Int -> Const a_a7351 b_a7352 :: *))
                        (Data.Bits.popCount @ a_a7351 v_B1)
                        `cast` (Sym (Data.Functor.Const.N:Const[0]
                                         <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                ->_R <Int>_R
                                :: (a_a7351 -> Int :: *) ~R# (Const a_a7351 b_a7352 -> Int :: *))]
Data.Functor.Const.$fBitsConst
  = \ (@ a_X748N)
      (@ k_X748P)
      (@ (b_X748R :: k_X748P))
      ($dBits_X748T :: Bits a_X748N) ->
      Data.Bits.C:Bits
        @ (Const a_X748N b_X748R)
        (Data.Functor.Const.$fBitsConst_$cp1Bits
           @ a_X748N @ k_X748P @ b_X748R $dBits_X748T)
        ((Data.Bits..&. @ a_X748N $dBits_X748T)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 :: (a_X748N -> a_X748N -> a_X748N :: *)
                    ~R# (Const a_X748N b_X748R
                         -> Const a_X748N b_X748R -> Const a_X748N b_X748R :: *)))
        ((Data.Bits..|. @ a_X748N $dBits_X748T)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 :: (a_X748N -> a_X748N -> a_X748N :: *)
                    ~R# (Const a_X748N b_X748R
                         -> Const a_X748N b_X748R -> Const a_X748N b_X748R :: *)))
        ((Data.Bits.xor @ a_X748N $dBits_X748T)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 :: (a_X748N -> a_X748N -> a_X748N :: *)
                    ~R# (Const a_X748N b_X748R
                         -> Const a_X748N b_X748R -> Const a_X748N b_X748R :: *)))
        ((Data.Bits.complement @ a_X748N $dBits_X748T)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 :: (a_X748N -> a_X748N :: *)
                    ~R# (Const a_X748N b_X748R -> Const a_X748N b_X748R :: *)))
        ((Data.Bits.shift @ a_X748N $dBits_X748T)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R <Int>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 :: (a_X748N -> Int -> a_X748N :: *)
                    ~R# (Const a_X748N b_X748R -> Int -> Const a_X748N b_X748R :: *)))
        ((Data.Bits.rotate @ a_X748N $dBits_X748T)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R <Int>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 :: (a_X748N -> Int -> a_X748N :: *)
                    ~R# (Const a_X748N b_X748R -> Int -> Const a_X748N b_X748R :: *)))
        ((Data.Bits.zeroBits @ a_X748N $dBits_X748T)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 :: (a_X748N :: *) ~R# (Const a_X748N b_X748R :: *)))
        ((Data.Bits.bit @ a_X748N $dBits_X748T)
         `cast` (<Int>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 :: (Int -> a_X748N :: *) ~R# (Int -> Const a_X748N b_X748R :: *)))
        ((Data.Bits.setBit @ a_X748N $dBits_X748T)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R <Int>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 :: (a_X748N -> Int -> a_X748N :: *)
                    ~R# (Const a_X748N b_X748R -> Int -> Const a_X748N b_X748R :: *)))
        ((Data.Bits.clearBit @ a_X748N $dBits_X748T)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R <Int>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 :: (a_X748N -> Int -> a_X748N :: *)
                    ~R# (Const a_X748N b_X748R -> Int -> Const a_X748N b_X748R :: *)))
        ((Data.Bits.complementBit @ a_X748N $dBits_X748T)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R <Int>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 :: (a_X748N -> Int -> a_X748N :: *)
                    ~R# (Const a_X748N b_X748R -> Int -> Const a_X748N b_X748R :: *)))
        ((Data.Bits.testBit @ a_X748N $dBits_X748T)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R <Int -> Bool>_R
                 :: (a_X748N -> Int -> Bool :: *)
                    ~R# (Const a_X748N b_X748R -> Int -> Bool :: *)))
        ((Data.Bits.bitSizeMaybe @ a_X748N $dBits_X748T)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R <Maybe Int>_R
                 :: (a_X748N -> Maybe Int :: *)
                    ~R# (Const a_X748N b_X748R -> Maybe Int :: *)))
        ((Data.Bits.bitSize @ a_X748N $dBits_X748T)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R <Int>_R
                 :: (a_X748N -> Int :: *) ~R# (Const a_X748N b_X748R -> Int :: *)))
        ((Data.Bits.isSigned @ a_X748N $dBits_X748T)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R <Bool>_R
                 :: (a_X748N -> Bool :: *)
                    ~R# (Const a_X748N b_X748R -> Bool :: *)))
        ((Data.Bits.shiftL @ a_X748N $dBits_X748T)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R <Int>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 :: (a_X748N -> Int -> a_X748N :: *)
                    ~R# (Const a_X748N b_X748R -> Int -> Const a_X748N b_X748R :: *)))
        ((Data.Bits.unsafeShiftL @ a_X748N $dBits_X748T)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R <Int>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 :: (a_X748N -> Int -> a_X748N :: *)
                    ~R# (Const a_X748N b_X748R -> Int -> Const a_X748N b_X748R :: *)))
        ((Data.Bits.shiftR @ a_X748N $dBits_X748T)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R <Int>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 :: (a_X748N -> Int -> a_X748N :: *)
                    ~R# (Const a_X748N b_X748R -> Int -> Const a_X748N b_X748R :: *)))
        ((Data.Bits.unsafeShiftR @ a_X748N $dBits_X748T)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R <Int>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 :: (a_X748N -> Int -> a_X748N :: *)
                    ~R# (Const a_X748N b_X748R -> Int -> Const a_X748N b_X748R :: *)))
        ((Data.Bits.rotateL @ a_X748N $dBits_X748T)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R <Int>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 :: (a_X748N -> Int -> a_X748N :: *)
                    ~R# (Const a_X748N b_X748R -> Int -> Const a_X748N b_X748R :: *)))
        ((Data.Bits.rotateR @ a_X748N $dBits_X748T)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R <Int>_R
                 ->_R Sym (Data.Functor.Const.N:Const[0]
                               <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 :: (a_X748N -> Int -> a_X748N :: *)
                    ~R# (Const a_X748N b_X748R -> Int -> Const a_X748N b_X748R :: *)))
        ((Data.Bits.popCount @ a_X748N $dBits_X748T)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X748P>_N <a_X748N>_R <b_X748R>_P)
                 ->_R <Int>_R
                 :: (a_X748N -> Int :: *) ~R# (Const a_X748N b_X748R -> Int :: *)))

-- RHS size: {terms: 7, types: 11, coercions: 0, joins: 0/0}
Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits
  :: forall a k (b :: k). FiniteBits a => Bits (Const a b)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,1*U(1*U(1*U(1*U,1*U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U),A,A,A)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_X74z4)
                 (@ k_X74hw)
                 (@ (b_X74hy :: k_X74hw))
                 ($dFiniteBits_X74hA [Occ=Once] :: FiniteBits a_X74z4) ->
                 Data.Functor.Const.$fBitsConst
                   @ a_X74z4
                   @ k_X74hw
                   @ b_X74hy
                   (Data.Bits.$p1FiniteBits @ a_X74z4 $dFiniteBits_X74hA)}]
Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits
  = \ (@ a_X74z4)
      (@ k_X74hw)
      (@ (b_X74hy :: k_X74hw))
      ($dFiniteBits_X74hA :: FiniteBits a_X74z4) ->
      Data.Functor.Const.$fBitsConst
        @ a_X74z4
        @ k_X74hw
        @ b_X74hy
        (Data.Bits.$p1FiniteBits @ a_X74z4 $dFiniteBits_X74hA)

-- RHS size: {terms: 13, types: 17, coercions: 21, joins: 0/0}
Data.Functor.Const.$fFiniteBitsConst [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a k (b :: k). FiniteBits a => FiniteBits (Const a b)
[GblId[DFunId],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U(1*U(1*U(1*U,1*U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U,1*U,1*U)>m,
 Unf=DFun: \ (@ a_a7351)
             (@ k_a735l)
             (@ (b_a7352 :: k_a735l))
             (v_B1 :: FiniteBits a_a7351) ->
       Data.Bits.C:FiniteBits TYPE: Const a_a7351 b_a7352
                              Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits
                                @ a_a7351 @ k_a735l @ b_a7352 v_B1
                              (Data.Bits.finiteBitSize @ a_a7351 v_B1)
                              `cast` (Sym (Data.Functor.Const.N:Const[0]
                                               <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                      ->_R <Int>_R
                                      :: (a_a7351 -> Int :: *)
                                         ~R# (Const a_a7351 b_a7352 -> Int :: *))
                              (Data.Bits.countLeadingZeros @ a_a7351 v_B1)
                              `cast` (Sym (Data.Functor.Const.N:Const[0]
                                               <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                      ->_R <Int>_R
                                      :: (a_a7351 -> Int :: *)
                                         ~R# (Const a_a7351 b_a7352 -> Int :: *))
                              (Data.Bits.countTrailingZeros @ a_a7351 v_B1)
                              `cast` (Sym (Data.Functor.Const.N:Const[0]
                                               <k_a735l>_N <a_a7351>_R <b_a7352>_P)
                                      ->_R <Int>_R
                                      :: (a_a7351 -> Int :: *)
                                         ~R# (Const a_a7351 b_a7352 -> Int :: *))]
Data.Functor.Const.$fFiniteBitsConst
  = \ (@ a_X74hv)
      (@ k_X74hx)
      (@ (b_X74hz :: k_X74hx))
      ($dFiniteBits_X74hB :: FiniteBits a_X74hv) ->
      Data.Bits.C:FiniteBits
        @ (Const a_X74hv b_X74hz)
        (Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits
           @ a_X74hv @ k_X74hx @ b_X74hz $dFiniteBits_X74hB)
        ((Data.Bits.finiteBitSize @ a_X74hv $dFiniteBits_X74hB)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74hx>_N <a_X74hv>_R <b_X74hz>_P)
                 ->_R <Int>_R
                 :: (a_X74hv -> Int :: *) ~R# (Const a_X74hv b_X74hz -> Int :: *)))
        ((Data.Bits.countLeadingZeros @ a_X74hv $dFiniteBits_X74hB)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74hx>_N <a_X74hv>_R <b_X74hz>_P)
                 ->_R <Int>_R
                 :: (a_X74hv -> Int :: *) ~R# (Const a_X74hv b_X74hz -> Int :: *)))
        ((Data.Bits.countTrailingZeros @ a_X74hv $dFiniteBits_X74hB)
         `cast` (Sym (Data.Functor.Const.N:Const[0]
                          <k_X74hx>_N <a_X74hv>_R <b_X74hz>_P)
                 ->_R <Int>_R
                 :: (a_X74hv -> Int :: *) ~R# (Const a_X74hv b_X74hz -> Int :: *)))

-- RHS size: {terms: 5, types: 9, coercions: 0, joins: 0/0}
Data.Functor.Const.getConst1
  :: forall a k (b :: k). Const a b -> Const a b
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ a_a735K)
                 (@ k_a735L)
                 (@ (b_a735M :: k_a735L))
                 (ds_d74IA [Occ=Once] :: Const a_a735K b_a735M) ->
                 ds_d74IA}]
Data.Functor.Const.getConst1
  = \ (@ a_a735K)
      (@ k_a735L)
      (@ (b_a735M :: k_a735L))
      (ds_d74IA :: Const a_a735K b_a735M) ->
      ds_d74IA

-- RHS size: {terms: 1, types: 0, coercions: 17, joins: 0/0}
getConst :: forall a k (b :: k). Const a b -> a
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Data.Functor.Const.getConst1
               `cast` (forall (a :: <*>_N) (k :: <*>_N) (b :: <k>_N).
                       <Const a b>_R ->_R Data.Functor.Const.N:Const[0] <k>_N <a>_R <b>_P
                       :: (forall a k (b :: k). Const a b -> Const a b :: *)
                          ~R# (forall a k (b :: k). Const a b -> a :: *))}]
getConst
  = Data.Functor.Const.getConst1
    `cast` (forall (a :: <*>_N) (k :: <*>_N) (b :: <k>_N).
            <Const a b>_R ->_R Data.Functor.Const.N:Const[0] <k>_N <a>_R <b>_P
            :: (forall a k (b :: k). Const a b -> Const a b :: *)
               ~R# (forall a k (b :: k). Const a b -> a :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$trModule4 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Data.Functor.Const.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$trModule3 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Data.Functor.Const.$trModule3
  = GHC.Types.TrNameS Data.Functor.Const.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$trModule2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 60 0}]
Data.Functor.Const.$trModule2 = "Data.Functor.Const"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$trModule1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Data.Functor.Const.$trModule1
  = GHC.Types.TrNameS Data.Functor.Const.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$trModule :: Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Data.Functor.Const.$trModule
  = GHC.Types.Module
      Data.Functor.Const.$trModule3 Data.Functor.Const.$trModule1

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$krep_r74ZT :: KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep_r74ZT = GHC.Types.KindRepVar 1#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$krep1_r74ZU :: KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep1_r74ZU = GHC.Types.KindRepVar 0#

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep2_r74ZV :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep2_r74ZV = GHC.Types.KindRepFun $krep1_r74ZU GHC.Types.krep$*

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$tcConst1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
Data.Functor.Const.$tcConst1
  = GHC.Types.KindRepFun GHC.Types.krep$* $krep2_r74ZV

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$krep3_r74ZW :: KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep3_r74ZW = GHC.Types.KindRepVar 2#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$tcConst2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Data.Functor.Const.$tcConst2
  = GHC.Types.TrNameS Data.Functor.Const.$fReadConst5

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$tcConst :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Data.Functor.Const.$tcConst
  = GHC.Types.TyCon
      18204097321285842582##
      16882168546145866005##
      Data.Functor.Const.$trModule
      Data.Functor.Const.$tcConst2
      1#
      Data.Functor.Const.$tcConst1

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep4_r74ZX :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep4_r74ZX
  = GHC.Types.: @ KindRep $krep3_r74ZW (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep5_r74ZY :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep5_r74ZY = GHC.Types.: @ KindRep $krep_r74ZT $krep4_r74ZX

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep6_r74ZZ :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep6_r74ZZ = GHC.Types.: @ KindRep $krep1_r74ZU $krep5_r74ZY

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep7_r7500 :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep7_r7500
  = GHC.Types.KindRepTyConApp
      Data.Functor.Const.$tcConst $krep6_r74ZZ

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$tc'Const1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
Data.Functor.Const.$tc'Const1
  = GHC.Types.KindRepFun $krep_r74ZT $krep7_r7500

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$tc'Const3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
Data.Functor.Const.$tc'Const3 = "'Const"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$tc'Const2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Data.Functor.Const.$tc'Const2
  = GHC.Types.TrNameS Data.Functor.Const.$tc'Const3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Data.Functor.Const.$tc'Const :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Data.Functor.Const.$tc'Const
  = GHC.Types.TyCon
      9035619270378585414##
      9797261638746114088##
      Data.Functor.Const.$trModule
      Data.Functor.Const.$tc'Const2
      3#
      Data.Functor.Const.$tc'Const1


