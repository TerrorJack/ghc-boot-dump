
==================== Raw Cmm ====================
2018-03-16 16:12:13.747460467 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:12:13.749225964 UTC

[section ""data" . Data.Functor.Contravariant.contramap_closure" {
     Data.Functor.Contravariant.contramap_closure:
         const Data.Functor.Contravariant.contramap_info;
 },
 Data.Functor.Contravariant.contramap_entry() //  [R2]
         { []
         }
     {offset
       cgl8D: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cgl8E; else goto cgl8F;
       cgl8E: // global
           R2 = R2;
           R1 = Data.Functor.Contravariant.contramap_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgl8F: // global
           I64[Sp - 8] = block_cgl8A_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ugl8J; else goto cgl8B;
       ugl8J: // global
           call _cgl8A(R1) args: 0, res: 0, upd: 0;
       cgl8B: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.contramap_info" {
     Data.Functor.Contravariant.contramap_info:
         const Data.Functor.Contravariant.contramap_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cgl8A() //  [R1]
         { []
         }
     {offset
       cgl8A: // global
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgl8A_info" {
     block_cgl8A_info:
         const _cgl8A;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.754943103 UTC

[section ""data" . Data.Functor.Contravariant.>$_closure" {
     Data.Functor.Contravariant.>$_closure:
         const Data.Functor.Contravariant.>$_info;
 },
 Data.Functor.Contravariant.>$_entry() //  [R2]
         { []
         }
     {offset
       cgl90: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cgl91; else goto cgl92;
       cgl91: // global
           R2 = R2;
           R1 = Data.Functor.Contravariant.>$_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgl92: // global
           I64[Sp - 8] = block_cgl8X_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ugl96; else goto cgl8Y;
       ugl96: // global
           call _cgl8X(R1) args: 0, res: 0, upd: 0;
       cgl8Y: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.>$_info" {
     Data.Functor.Contravariant.>$_info:
         const Data.Functor.Contravariant.>$_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cgl8X() //  [R1]
         { []
         }
     {offset
       cgl8X: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgl8X_info" {
     block_cgl8X_info:
         const _cgl8X;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.759730597 UTC

[section ""cstring" . Data.Functor.Contravariant.$tc'Op3_bytes" {
     Data.Functor.Contravariant.$tc'Op3_bytes:
         I8[] [39,79,112]
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.76145446 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Op2_closure" {
     Data.Functor.Contravariant.$tc'Op2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.Contravariant.$tc'Op3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.763152969 UTC

[section ""cstring" . Data.Functor.Contravariant.$tcOp2_bytes" {
     Data.Functor.Contravariant.$tcOp2_bytes:
         I8[] [79,112]
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.766345828 UTC

[section ""data" . Data.Functor.Contravariant.$tcOp1_closure" {
     Data.Functor.Contravariant.$tcOp1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.Contravariant.$tcOp2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.768037156 UTC

[section ""cstring" . Data.Functor.Contravariant.$tc'Equivalence3_bytes" {
     Data.Functor.Contravariant.$tc'Equivalence3_bytes:
         I8[] [39,69,113,117,105,118,97,108,101,110,99,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.769767472 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Equivalence2_closure" {
     Data.Functor.Contravariant.$tc'Equivalence2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.Contravariant.$tc'Equivalence3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.771417171 UTC

[section ""cstring" . Data.Functor.Contravariant.$tcEquivalence2_bytes" {
     Data.Functor.Contravariant.$tcEquivalence2_bytes:
         I8[] [69,113,117,105,118,97,108,101,110,99,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.773152213 UTC

[section ""data" . Data.Functor.Contravariant.$tcEquivalence1_closure" {
     Data.Functor.Contravariant.$tcEquivalence1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.Contravariant.$tcEquivalence2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.774925731 UTC

[section ""cstring" . Data.Functor.Contravariant.$tc'Comparison3_bytes" {
     Data.Functor.Contravariant.$tc'Comparison3_bytes:
         I8[] [39,67,111,109,112,97,114,105,115,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.77661435 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Comparison2_closure" {
     Data.Functor.Contravariant.$tc'Comparison2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.Contravariant.$tc'Comparison3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.778298863 UTC

[section ""cstring" . Data.Functor.Contravariant.$tcComparison2_bytes" {
     Data.Functor.Contravariant.$tcComparison2_bytes:
         I8[] [67,111,109,112,97,114,105,115,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.780013472 UTC

[section ""data" . Data.Functor.Contravariant.$tcComparison1_closure" {
     Data.Functor.Contravariant.$tcComparison1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.Contravariant.$tcComparison2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.781871624 UTC

[section ""cstring" . Data.Functor.Contravariant.$tc'Predicate3_bytes" {
     Data.Functor.Contravariant.$tc'Predicate3_bytes:
         I8[] [39,80,114,101,100,105,99,97,116,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.783612409 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Predicate2_closure" {
     Data.Functor.Contravariant.$tc'Predicate2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.Contravariant.$tc'Predicate3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.785388206 UTC

[section ""cstring" . Data.Functor.Contravariant.$tcPredicate2_bytes" {
     Data.Functor.Contravariant.$tcPredicate2_bytes:
         I8[] [80,114,101,100,105,99,97,116,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.787126674 UTC

[section ""data" . Data.Functor.Contravariant.$tcPredicate1_closure" {
     Data.Functor.Contravariant.$tcPredicate1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.Contravariant.$tcPredicate2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.788820301 UTC

[section ""cstring" . Data.Functor.Contravariant.$tcContravariant3_bytes" {
     Data.Functor.Contravariant.$tcContravariant3_bytes:
         I8[] [67,111,110,116,114,97,118,97,114,105,97,110,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.791482945 UTC

[section ""data" . Data.Functor.Contravariant.$tcContravariant2_closure" {
     Data.Functor.Contravariant.$tcContravariant2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.Contravariant.$tcContravariant3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.793218435 UTC

[section ""data" . $krep_rgjLa_closure" {
     $krep_rgjLa_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.794925513 UTC

[section ""data" . $krep1_rgjLb_closure" {
     $krep1_rgjLb_closure:
         const :_con_info;
         const $krep_rgjLa_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.796647744 UTC

[section ""data" . $krep2_rgjLc_closure" {
     $krep2_rgjLc_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.798417966 UTC

[section ""data" . $krep3_rgjLd_closure" {
     $krep3_rgjLd_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_rgjLc_closure+2;
         const $krep_rgjLa_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.800120925 UTC

[section ""data" . $krep4_rgjLe_closure" {
     $krep4_rgjLe_closure:
         const :_con_info;
         const $krep2_rgjLc_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.801836998 UTC

[section ""data" . $krep5_rgjLf_closure" {
     $krep5_rgjLf_closure:
         const :_con_info;
         const $krep_rgjLa_closure+2;
         const $krep4_rgjLe_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.803580703 UTC

[section ""data" . $krep6_rgjLg_closure" {
     $krep6_rgjLg_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcBool_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.805803224 UTC

[section ""data" . $krep7_rgjLh_closure" {
     $krep7_rgjLh_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_rgjLa_closure+2;
         const $krep6_rgjLg_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.807504504 UTC

[section ""data" . $krep8_rgjLi_closure" {
     $krep8_rgjLi_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_rgjLa_closure+2;
         const $krep7_rgjLh_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.80919121 UTC

[section ""data" . $krep9_rgjLj_closure" {
     $krep9_rgjLj_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcOrdering_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.810977815 UTC

[section ""data" . $krep10_rgjLk_closure" {
     $krep10_rgjLk_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_rgjLa_closure+2;
         const $krep9_rgjLj_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.812701203 UTC

[section ""data" . $krep11_rgjLl_closure" {
     $krep11_rgjLl_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_rgjLa_closure+2;
         const $krep10_rgjLk_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.814487898 UTC

[section ""data" . $krep12_rgjLm_closure" {
     $krep12_rgjLm_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.816737479 UTC

[section ""data" . Data.Functor.Contravariant.$tcContravariant1_closure" {
     Data.Functor.Contravariant.$tcContravariant1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*Arr*_closure;
         const $krep12_rgjLm_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.818537405 UTC

[section ""cstring" . Data.Functor.Contravariant.$trModule2_bytes" {
     Data.Functor.Contravariant.$trModule2_bytes:
         I8[] [68,97,116,97,46,70,117,110,99,116,111,114,46,67,111,110,116,114,97,118,97,114,105,97,110,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.820194079 UTC

[section ""data" . Data.Functor.Contravariant.$trModule1_closure" {
     Data.Functor.Contravariant.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.Contravariant.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.822248969 UTC

[section ""cstring" . Data.Functor.Contravariant.$trModule4_bytes" {
     Data.Functor.Contravariant.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.82387137 UTC

[section ""data" . Data.Functor.Contravariant.$trModule3_closure" {
     Data.Functor.Contravariant.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.Contravariant.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.825585424 UTC

[section ""data" . Data.Functor.Contravariant.$trModule_closure" {
     Data.Functor.Contravariant.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Functor.Contravariant.$trModule3_closure+1;
         const Data.Functor.Contravariant.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.827376418 UTC

[section ""data" . Data.Functor.Contravariant.$tcContravariant_closure" {
     Data.Functor.Contravariant.$tcContravariant_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Functor.Contravariant.$trModule_closure+1;
         const Data.Functor.Contravariant.$tcContravariant2_closure+1;
         const Data.Functor.Contravariant.$tcContravariant1_closure+4;
         const 1944710495430526909;
         const 15571985404928937498;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.829226615 UTC

[section ""data" . Data.Functor.Contravariant.$tcPredicate_closure" {
     Data.Functor.Contravariant.$tcPredicate_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Functor.Contravariant.$trModule_closure+1;
         const Data.Functor.Contravariant.$tcPredicate1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 9927645946720114643;
         const 17478425232619398566;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.831080091 UTC

[section ""data" . $krep13_rgjLn_closure" {
     $krep13_rgjLn_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Functor.Contravariant.$tcPredicate_closure+1;
         const $krep1_rgjLb_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.832805125 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Predicate1_closure" {
     Data.Functor.Contravariant.$tc'Predicate1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep7_rgjLh_closure+4;
         const $krep13_rgjLn_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.835043668 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Predicate_closure" {
     Data.Functor.Contravariant.$tc'Predicate_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Functor.Contravariant.$trModule_closure+1;
         const Data.Functor.Contravariant.$tc'Predicate2_closure+1;
         const Data.Functor.Contravariant.$tc'Predicate1_closure+4;
         const 10560326927625189840;
         const 8988710799443424590;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.836826522 UTC

[section ""data" . Data.Functor.Contravariant.$tcComparison_closure" {
     Data.Functor.Contravariant.$tcComparison_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Functor.Contravariant.$trModule_closure+1;
         const Data.Functor.Contravariant.$tcComparison1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 8128667979445988110;
         const 9034904213662261762;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.838662625 UTC

[section ""data" . $krep14_rgjLo_closure" {
     $krep14_rgjLo_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Functor.Contravariant.$tcComparison_closure+1;
         const $krep1_rgjLb_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.84031171 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Comparison1_closure" {
     Data.Functor.Contravariant.$tc'Comparison1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_rgjLl_closure+4;
         const $krep14_rgjLo_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.842064011 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Comparison_closure" {
     Data.Functor.Contravariant.$tc'Comparison_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Functor.Contravariant.$trModule_closure+1;
         const Data.Functor.Contravariant.$tc'Comparison2_closure+1;
         const Data.Functor.Contravariant.$tc'Comparison1_closure+4;
         const 11047345948274903716;
         const 12707949450550295743;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.844457645 UTC

[section ""data" . Data.Functor.Contravariant.$tcEquivalence_closure" {
     Data.Functor.Contravariant.$tcEquivalence_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Functor.Contravariant.$trModule_closure+1;
         const Data.Functor.Contravariant.$tcEquivalence1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 9646573079009549553;
         const 12303965936368510845;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.846653559 UTC

[section ""data" . $krep15_rgjLp_closure" {
     $krep15_rgjLp_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Functor.Contravariant.$tcEquivalence_closure+1;
         const $krep1_rgjLb_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.848346071 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Equivalence1_closure" {
     Data.Functor.Contravariant.$tc'Equivalence1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep8_rgjLi_closure+4;
         const $krep15_rgjLp_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.850156835 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Equivalence_closure" {
     Data.Functor.Contravariant.$tc'Equivalence_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Functor.Contravariant.$trModule_closure+1;
         const Data.Functor.Contravariant.$tc'Equivalence2_closure+1;
         const Data.Functor.Contravariant.$tc'Equivalence1_closure+4;
         const 5667737350508967909;
         const 15093804341312440267;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.85201259 UTC

[section ""data" . Data.Functor.Contravariant.$tcOp_closure" {
     Data.Functor.Contravariant.$tcOp_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Functor.Contravariant.$trModule_closure+1;
         const Data.Functor.Contravariant.$tcOp1_closure+1;
         const GHC.Types.krep$*->*->*_closure;
         const 13209106975460307324;
         const 7546944290236364550;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.854182173 UTC

[section ""data" . $krep16_rgjLq_closure" {
     $krep16_rgjLq_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Functor.Contravariant.$tcOp_closure+1;
         const $krep5_rgjLf_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.855776596 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Op1_closure" {
     Data.Functor.Contravariant.$tc'Op1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_rgjLd_closure+4;
         const $krep16_rgjLq_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.857542517 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Op_closure" {
     Data.Functor.Contravariant.$tc'Op_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Functor.Contravariant.$trModule_closure+1;
         const Data.Functor.Contravariant.$tc'Op2_closure+1;
         const Data.Functor.Contravariant.$tc'Op1_closure+4;
         const 12479862397628491530;
         const 1381176546464080972;
         const 2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.860209464 UTC

[section ""data" . Data.Functor.Contravariant.comparisonEquivalence1_closure" {
     Data.Functor.Contravariant.comparisonEquivalence1_closure:
         const Data.Functor.Contravariant.comparisonEquivalence1_info;
 },
 Data.Functor.Contravariant.comparisonEquivalence1_entry() //  [R2,
                                                                R3, R4]
         { []
         }
     {offset
       cglai: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cglaj; else goto cglak;
       cglaj: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.comparisonEquivalence1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglak: // global
           I64[Sp - 8] = block_cglac_info;
           _sgjLI::P64 = R3;
           R3 = R4;
           _sgjLH::P64 = R2;
           R2 = _sgjLI::P64;
           R1 = _sgjLH::P64;
           Sp = Sp - 8;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.comparisonEquivalence1_info" {
     Data.Functor.Contravariant.comparisonEquivalence1_info:
         const Data.Functor.Contravariant.comparisonEquivalence1_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cglac() //  [R1]
         { []
         }
     {offset
       cglac: // global
           if (R1 & 7 == 2) goto cglag; else goto cglaf;
       cglag: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cglaf: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cglac_info" {
     block_cglac_info:
         const _cglac;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.865552945 UTC

[section ""data" . Data.Functor.Contravariant.comparisonEquivalence_closure" {
     Data.Functor.Contravariant.comparisonEquivalence_closure:
         const Data.Functor.Contravariant.comparisonEquivalence_info;
 },
 Data.Functor.Contravariant.comparisonEquivalence_entry() //  [R2,
                                                               R3, R4]
         { []
         }
     {offset
       cglaH: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Data.Functor.Contravariant.comparisonEquivalence1_entry(R4,
                                                                        R3,
                                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.comparisonEquivalence_info" {
     Data.Functor.Contravariant.comparisonEquivalence_info:
         const Data.Functor.Contravariant.comparisonEquivalence_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.868783102 UTC

[section ""data" . Data.Functor.Contravariant.defaultEquivalence_closure" {
     Data.Functor.Contravariant.defaultEquivalence_closure:
         const Data.Functor.Contravariant.defaultEquivalence_info;
 },
 Data.Functor.Contravariant.defaultEquivalence_entry() //  [R2]
         { []
         }
     {offset
       cglaS: // global
           R2 = R2;
           call GHC.Classes.==_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.defaultEquivalence_info" {
     Data.Functor.Contravariant.defaultEquivalence_info:
         const Data.Functor.Contravariant.defaultEquivalence_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.873122464 UTC

[section ""data" . Data.Functor.Contravariant.defaultComparison_closure" {
     Data.Functor.Contravariant.defaultComparison_closure:
         const Data.Functor.Contravariant.defaultComparison_info;
 },
 Data.Functor.Contravariant.defaultComparison_entry() //  [R2]
         { []
         }
     {offset
       cglb3: // global
           R2 = R2;
           call GHC.Classes.compare_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.defaultComparison_info" {
     Data.Functor.Contravariant.defaultComparison_info:
         const Data.Functor.Contravariant.defaultComparison_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.876570303 UTC

[section ""data" . Data.Functor.Contravariant.>$$<_closure" {
     Data.Functor.Contravariant.>$$<_closure:
         const Data.Functor.Contravariant.>$$<_info;
 },
 Data.Functor.Contravariant.>$$<_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cglbe: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cglbf; else goto cglbg;
       cglbf: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.>$$<_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglbg: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.>$$<_info" {
     Data.Functor.Contravariant.>$$<_info:
         const Data.Functor.Contravariant.>$$<_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.880174904 UTC

[section ""data" . Data.Functor.Contravariant.>$<_closure" {
     Data.Functor.Contravariant.>$<_closure:
         const Data.Functor.Contravariant.>$<_info;
 },
 Data.Functor.Contravariant.>$<_entry() //  [R2]
         { []
         }
     {offset
       cglbq: // global
           R2 = R2;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.>$<_info" {
     Data.Functor.Contravariant.>$<_info:
         const Data.Functor.Contravariant.>$<_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.884141758 UTC

[section ""data" . Data.Functor.Contravariant.phantom_closure" {
     Data.Functor.Contravariant.phantom_closure:
         const Data.Functor.Contravariant.phantom_info;
 },
 sat_sgjLS_entry() //  [R1]
         { []
         }
     {offset
       cglbF: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cglbG; else goto cglbH;
       cglbG: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglbH: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = GHC.Tuple.()_closure+1;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 40;
           call GHC.Base.<$_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjLS_info" {
     sat_sgjLS_info:
         const sat_sgjLS_entry;
         const 2;
         const 18;
 },
 Data.Functor.Contravariant.phantom_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cglbI: // global
           _sgjLR::P64 = R4;
           _sgjLQ::P64 = R3;
           _sgjLP::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cglbJ; else goto cglbK;
       cglbK: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglbM; else goto cglbL;
       cglbM: // global
           HpAlloc = 32;
           goto cglbJ;
       cglbJ: // global
           R4 = _sgjLR::P64;
           R3 = _sgjLQ::P64;
           R2 = _sgjLP::P64;
           R1 = Data.Functor.Contravariant.phantom_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglbL: // global
           I64[Hp - 24] = sat_sgjLS_info;
           P64[Hp - 8] = _sgjLP::P64;
           P64[Hp] = _sgjLR::P64;
           R2 = _sgjLQ::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = GHC.Tuple.()_closure+1;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 24;
           call Data.Functor.Contravariant.>$_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.phantom_info" {
     Data.Functor.Contravariant.phantom_info:
         const Data.Functor.Contravariant.phantom_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.890250706 UTC

[section ""data" . Data.Functor.Contravariant.$<_closure" {
     Data.Functor.Contravariant.$<_closure:
         const Data.Functor.Contravariant.$<_info;
 },
 Data.Functor.Contravariant.$<_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cglc2: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cglc3; else goto cglc4;
       cglc3: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$<_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglc4: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call Data.Functor.Contravariant.>$_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$<_info" {
     Data.Functor.Contravariant.$<_info:
         const Data.Functor.Contravariant.$<_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.893838475 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantOp1_closure" {
     Data.Functor.Contravariant.$fContravariantOp1_closure:
         const Data.Functor.Contravariant.$fContravariantOp1_info;
 },
 Data.Functor.Contravariant.$fContravariantOp1_entry() //  [R2, R3]
         { []
         }
     {offset
       cglce: // global
           R2 = R2;
           R1 = R3;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantOp1_info" {
     Data.Functor.Contravariant.$fContravariantOp1_info:
         const Data.Functor.Contravariant.$fContravariantOp1_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.897077309 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantOp2_closure" {
     Data.Functor.Contravariant.$fContravariantOp2_closure:
         const Data.Functor.Contravariant.$fContravariantOp2_info;
 },
 Data.Functor.Contravariant.$fContravariantOp2_entry() //  [R2, R3,
                                                            R4]
         { []
         }
     {offset
       cglcp: // global
           R4 = R4;
           _sgjM0::P64 = R3;
           R3 = R2;
           R2 = _sgjM0::P64;
           call GHC.Base.._entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantOp2_info" {
     Data.Functor.Contravariant.$fContravariantOp2_info:
         const Data.Functor.Contravariant.$fContravariantOp2_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.900633652 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantOp_closure" {
     Data.Functor.Contravariant.$fContravariantOp_closure:
         const Data.Functor.Contravariant.C:Contravariant_con_info;
         const Data.Functor.Contravariant.$fContravariantOp2_closure+3;
         const Data.Functor.Contravariant.$fContravariantOp1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.902696031 UTC

[section ""data" . Data.Functor.Contravariant.getOp1_closure" {
     Data.Functor.Contravariant.getOp1_closure:
         const Data.Functor.Contravariant.getOp1_info;
 },
 Data.Functor.Contravariant.getOp1_entry() //  [R2]
         { []
         }
     {offset
       cglcB: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.getOp1_info" {
     Data.Functor.Contravariant.getOp1_info:
         const Data.Functor.Contravariant.getOp1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.906676554 UTC

[section ""data" . Data.Functor.Contravariant.getOp_closure" {
     Data.Functor.Contravariant.getOp_closure:
         const Data.Functor.Contravariant.getOp_info;
 },
 Data.Functor.Contravariant.getOp_entry() //  [R2]
         { []
         }
     {offset
       cglcM: // global
           R2 = R2;
           call Data.Functor.Contravariant.getOp1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.getOp_info" {
     Data.Functor.Contravariant.getOp_info:
         const Data.Functor.Contravariant.getOp_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.910060013 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantEquivalence1_closure" {
     Data.Functor.Contravariant.$fContravariantEquivalence1_closure:
         const Data.Functor.Contravariant.$fContravariantEquivalence1_info;
 },
 Data.Functor.Contravariant.$fContravariantEquivalence1_entry() //  [R2,
                                                                     R3]
         { []
         }
     {offset
       cglcX: // global
           _sgjM3::P64 = R3;
           R3 = R2;
           R2 = R2;
           R1 = _sgjM3::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantEquivalence1_info" {
     Data.Functor.Contravariant.$fContravariantEquivalence1_info:
         const Data.Functor.Contravariant.$fContravariantEquivalence1_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.91396196 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantEquivalence2_closure" {
     Data.Functor.Contravariant.$fContravariantEquivalence2_closure:
         const Data.Functor.Contravariant.$fContravariantEquivalence2_info;
 },
 Data.Functor.Contravariant.$fContravariantEquivalence2_entry() //  [R2,
                                                                     R3, R4, R5]
         { []
         }
     {offset
       cglda: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cglde; else goto cgldd;
       cglde: // global
           HpAlloc = 64;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantEquivalence2_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgldd: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = R2;
           P64[Hp - 32] = R5;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R4;
           _sgjM7::P64 = R3;
           R3 = Hp - 56;
           R2 = Hp - 24;
           R1 = _sgjM7::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantEquivalence2_info" {
     Data.Functor.Contravariant.$fContravariantEquivalence2_info:
         const Data.Functor.Contravariant.$fContravariantEquivalence2_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.917481318 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantEquivalence_closure" {
     Data.Functor.Contravariant.$fContravariantEquivalence_closure:
         const Data.Functor.Contravariant.C:Contravariant_con_info;
         const Data.Functor.Contravariant.$fContravariantEquivalence2_closure+4;
         const Data.Functor.Contravariant.$fContravariantEquivalence1_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.919520305 UTC

[section ""data" . Data.Functor.Contravariant.getEquivalence1_closure" {
     Data.Functor.Contravariant.getEquivalence1_closure:
         const Data.Functor.Contravariant.getEquivalence1_info;
 },
 Data.Functor.Contravariant.getEquivalence1_entry() //  [R2]
         { []
         }
     {offset
       cgldo: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.getEquivalence1_info" {
     Data.Functor.Contravariant.getEquivalence1_info:
         const Data.Functor.Contravariant.getEquivalence1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.9227916 UTC

[section ""data" . Data.Functor.Contravariant.getEquivalence_closure" {
     Data.Functor.Contravariant.getEquivalence_closure:
         const Data.Functor.Contravariant.getEquivalence_info;
 },
 Data.Functor.Contravariant.getEquivalence_entry() //  [R2]
         { []
         }
     {offset
       cgldz: // global
           R2 = R2;
           call Data.Functor.Contravariant.getEquivalence1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.getEquivalence_info" {
     Data.Functor.Contravariant.getEquivalence_info:
         const Data.Functor.Contravariant.getEquivalence_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.9260299 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantComparison1_closure" {
     Data.Functor.Contravariant.$fContravariantComparison1_closure:
         const Data.Functor.Contravariant.$fContravariantComparison1_info;
 },
 Data.Functor.Contravariant.$fContravariantComparison1_entry() //  [R2,
                                                                    R3]
         { []
         }
     {offset
       cgldK: // global
           _sgjMe::P64 = R3;
           R3 = R2;
           R2 = R2;
           R1 = _sgjMe::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantComparison1_info" {
     Data.Functor.Contravariant.$fContravariantComparison1_info:
         const Data.Functor.Contravariant.$fContravariantComparison1_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.930109963 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantComparison2_closure" {
     Data.Functor.Contravariant.$fContravariantComparison2_closure:
         const Data.Functor.Contravariant.$fContravariantComparison2_info;
 },
 Data.Functor.Contravariant.$fContravariantComparison2_entry() //  [R2,
                                                                    R3, R4, R5]
         { []
         }
     {offset
       cgldX: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cgle1; else goto cgle0;
       cgle1: // global
           HpAlloc = 64;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantComparison2_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgle0: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = R2;
           P64[Hp - 32] = R5;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R4;
           _sgjMi::P64 = R3;
           R3 = Hp - 56;
           R2 = Hp - 24;
           R1 = _sgjMi::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantComparison2_info" {
     Data.Functor.Contravariant.$fContravariantComparison2_info:
         const Data.Functor.Contravariant.$fContravariantComparison2_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.933719792 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantComparison_closure" {
     Data.Functor.Contravariant.$fContravariantComparison_closure:
         const Data.Functor.Contravariant.C:Contravariant_con_info;
         const Data.Functor.Contravariant.$fContravariantComparison2_closure+4;
         const Data.Functor.Contravariant.$fContravariantComparison1_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.936281926 UTC

[section ""data" . Data.Functor.Contravariant.getComparison1_closure" {
     Data.Functor.Contravariant.getComparison1_closure:
         const Data.Functor.Contravariant.getComparison1_info;
 },
 Data.Functor.Contravariant.getComparison1_entry() //  [R2]
         { []
         }
     {offset
       cgleb: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.getComparison1_info" {
     Data.Functor.Contravariant.getComparison1_info:
         const Data.Functor.Contravariant.getComparison1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.939871146 UTC

[section ""data" . Data.Functor.Contravariant.getComparison_closure" {
     Data.Functor.Contravariant.getComparison_closure:
         const Data.Functor.Contravariant.getComparison_info;
 },
 Data.Functor.Contravariant.getComparison_entry() //  [R2]
         { []
         }
     {offset
       cglem: // global
           R2 = R2;
           call Data.Functor.Contravariant.getComparison1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.getComparison_info" {
     Data.Functor.Contravariant.getComparison_info:
         const Data.Functor.Contravariant.getComparison_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.943092999 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantPredicate1_closure" {
     Data.Functor.Contravariant.$fContravariantPredicate1_closure:
         const Data.Functor.Contravariant.$fContravariantPredicate1_info;
 },
 Data.Functor.Contravariant.$fContravariantPredicate1_entry() //  [R2,
                                                                   R3]
         { []
         }
     {offset
       cglex: // global
           R2 = R2;
           R1 = R3;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantPredicate1_info" {
     Data.Functor.Contravariant.$fContravariantPredicate1_info:
         const Data.Functor.Contravariant.$fContravariantPredicate1_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.946435558 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantPredicate2_closure" {
     Data.Functor.Contravariant.$fContravariantPredicate2_closure:
         const Data.Functor.Contravariant.$fContravariantPredicate2_info;
 },
 Data.Functor.Contravariant.$fContravariantPredicate2_entry() //  [R2,
                                                                   R3, R4]
         { []
         }
     {offset
       cgleI: // global
           R4 = R4;
           _sgjMs::P64 = R3;
           R3 = R2;
           R2 = _sgjMs::P64;
           call GHC.Base.._entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantPredicate2_info" {
     Data.Functor.Contravariant.$fContravariantPredicate2_info:
         const Data.Functor.Contravariant.$fContravariantPredicate2_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.949566158 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantPredicate_closure" {
     Data.Functor.Contravariant.$fContravariantPredicate_closure:
         const Data.Functor.Contravariant.C:Contravariant_con_info;
         const Data.Functor.Contravariant.$fContravariantPredicate2_closure+3;
         const Data.Functor.Contravariant.$fContravariantPredicate1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.951486781 UTC

[section ""data" . Data.Functor.Contravariant.getPredicate1_closure" {
     Data.Functor.Contravariant.getPredicate1_closure:
         const Data.Functor.Contravariant.getPredicate1_info;
 },
 Data.Functor.Contravariant.getPredicate1_entry() //  [R2]
         { []
         }
     {offset
       cgleU: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.getPredicate1_info" {
     Data.Functor.Contravariant.getPredicate1_info:
         const Data.Functor.Contravariant.getPredicate1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.955114747 UTC

[section ""data" . Data.Functor.Contravariant.getPredicate_closure" {
     Data.Functor.Contravariant.getPredicate_closure:
         const Data.Functor.Contravariant.getPredicate_info;
 },
 Data.Functor.Contravariant.getPredicate_entry() //  [R2]
         { []
         }
     {offset
       cglf5: // global
           R2 = R2;
           call Data.Functor.Contravariant.getPredicate1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.getPredicate_info" {
     Data.Functor.Contravariant.getPredicate_info:
         const Data.Functor.Contravariant.getPredicate_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.958271994 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantV1_$c>$_closure" {
     Data.Functor.Contravariant.$fContravariantV1_$c>$_closure:
         const Data.Functor.Contravariant.$fContravariantV1_$c>$_info;
 },
 Data.Functor.Contravariant.$fContravariantV1_$c>$_entry() //  [R3]
         { []
         }
     {offset
       cglfg: // global
           R1 = R3 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantV1_$c>$_info" {
     Data.Functor.Contravariant.$fContravariantV1_$c>$_info:
         const Data.Functor.Contravariant.$fContravariantV1_$c>$_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.961671628 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantU1_$c>$_closure" {
     Data.Functor.Contravariant.$fContravariantU1_$c>$_closure:
         const Data.Functor.Contravariant.$fContravariantU1_$c>$_info;
 },
 Data.Functor.Contravariant.$fContravariantU1_$c>$_entry() //  []
         { []
         }
     {offset
       cglft: // global
           R1 = GHC.Generics.U1_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantU1_$c>$_info" {
     Data.Functor.Contravariant.$fContravariantU1_$c>$_info:
         const Data.Functor.Contravariant.$fContravariantU1_$c>$_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.966017304 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantK2_closure" {
     Data.Functor.Contravariant.$fContravariantK2_closure:
         const Data.Functor.Contravariant.$fContravariantK2_info;
 },
 Data.Functor.Contravariant.$fContravariantK2_entry() //  [R3]
         { []
         }
     {offset
       cglfF: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantK2_info" {
     Data.Functor.Contravariant.$fContravariantK2_info:
         const Data.Functor.Contravariant.$fContravariantK2_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.971201211 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariant:*:_$c>$_closure" {
     Data.Functor.Contravariant.$fContravariant:*:_$c>$_closure:
         const Data.Functor.Contravariant.$fContravariant:*:_$c>$_info;
 },
 f1_sgjMI_entry() //  [R1]
         { []
         }
     {offset
       cglg0: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . f1_sgjMI_info" {
     f1_sgjMI_info:
         const f1_sgjMI_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sgjML_entry() //  [R1]
         { []
         }
     {offset
       cglg7: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cglg8; else goto cglg9;
       cglg8: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglg9: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 32];
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjML_info" {
     sat_sgjML_info:
         const sat_sgjML_entry;
         const 3;
         const 15;
 },
 sat_sgjMK_entry() //  [R1]
         { []
         }
     {offset
       cglge: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cglgf; else goto cglgg;
       cglgf: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglgg: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 32];
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjMK_info" {
     sat_sgjMK_info:
         const sat_sgjMK_entry;
         const 3;
         const 15;
 },
 Data.Functor.Contravariant.$fContravariant:*:_$c>$_entry() //  [R2,
                                                                 R3, R4, R5]
         { []
         }
     {offset
       cglgh: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cglgj; else goto cglgk;
       cglgj: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariant:*:_$c>$_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglgk: // global
           I64[Sp - 32] = block_cglfQ_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto uglgo; else goto cglfR;
       uglgo: // global
           call _cglfQ(R1) args: 0, res: 0, upd: 0;
       cglfR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariant:*:_$c>$_info" {
     Data.Functor.Contravariant.$fContravariant:*:_$c>$_info:
         const Data.Functor.Contravariant.$fContravariant:*:_$c>$_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _cglfQ() //  [R1]
         { []
         }
     {offset
       cglfQ: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto cglgn; else goto cglgm;
       cglgn: // global
           HpAlloc = 120;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cglgm: // global
           _sgjMG::P64 = P64[R1 + 7];
           _sgjMH::P64 = P64[R1 + 15];
           I64[Hp - 112] = f1_sgjMI_info;
           P64[Hp - 104] = P64[Sp + 24];
           I64[Hp - 96] = sat_sgjML_info;
           P64[Hp - 80] = P64[Sp + 16];
           P64[Hp - 72] = _sgjMH::P64;
           _cglfV::P64 = Hp - 111;
           P64[Hp - 64] = _cglfV::P64;
           I64[Hp - 56] = sat_sgjMK_info;
           P64[Hp - 40] = P64[Sp + 8];
           P64[Hp - 32] = _sgjMG::P64;
           P64[Hp - 24] = _cglfV::P64;
           I64[Hp - 16] = GHC.Generics.:*:_con_info;
           P64[Hp - 8] = Hp - 56;
           P64[Hp] = Hp - 96;
           R1 = Hp - 15;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cglfQ_info" {
     block_cglfQ_info:
         const _cglfQ;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.98310651 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariant:.:1_closure" {
     Data.Functor.Contravariant.$fContravariant:.:1_closure:
         const Data.Functor.Contravariant.$fContravariant:.:1_info;
 },
 sat_sgjMR_entry() //  [R1]
         { []
         }
     {offset
       cglh6: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjMR_info" {
     sat_sgjMR_info:
         const sat_sgjMR_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sgjMS_entry() //  [R1]
         { []
         }
     {offset
       cglh9: // global
           _sgjMS::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cglha; else goto cglhb;
       cglhb: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cglhd; else goto cglhc;
       cglhd: // global
           HpAlloc = 16;
           goto cglha;
       cglha: // global
           R1 = _sgjMS::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglhc: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sgjMS::P64;
           _sgjMN::P64 = P64[_sgjMS::P64 + 16];
           _sgjMO::P64 = P64[_sgjMS::P64 + 24];
           I64[Hp - 8] = sat_sgjMR_info;
           P64[Hp] = _sgjMO::P64;
           R2 = _sgjMN::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 7;
           Sp = Sp - 32;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjMS_info" {
     sat_sgjMS_info:
         const sat_sgjMS_entry;
         const 2;
         const 18;
 },
 Data.Functor.Contravariant.$fContravariant:.:1_entry() //  [R2, R3,
                                                             R4, R5]
         { []
         }
     {offset
       cglhe: // global
           _sgjMP::P64 = R5;
           _sgjMO::P64 = R4;
           _sgjMN::P64 = R3;
           _sgjMM::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cglhf; else goto cglhg;
       cglhg: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglhi; else goto cglhh;
       cglhi: // global
           HpAlloc = 32;
           goto cglhf;
       cglhf: // global
           R5 = _sgjMP::P64;
           R4 = _sgjMO::P64;
           R3 = _sgjMN::P64;
           R2 = _sgjMM::P64;
           R1 = Data.Functor.Contravariant.$fContravariant:.:1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglhh: // global
           I64[Hp - 24] = sat_sgjMS_info;
           P64[Hp - 8] = _sgjMN::P64;
           P64[Hp] = _sgjMO::P64;
           R2 = _sgjMM::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = _sgjMP::P64;
           Sp = Sp - 24;
           call GHC.Base.fmap_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariant:.:1_info" {
     Data.Functor.Contravariant.$fContravariant:.:1_info:
         const Data.Functor.Contravariant.$fContravariant:.:1_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:13.992185982 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantProduct_$c>$_closure" {
     Data.Functor.Contravariant.$fContravariantProduct_$c>$_closure:
         const Data.Functor.Contravariant.$fContravariantProduct_$c>$_info;
 },
 f1_sgjN0_entry() //  [R1]
         { []
         }
     {offset
       cglhL: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . f1_sgjN0_info" {
     f1_sgjN0_info:
         const f1_sgjN0_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sgjN3_entry() //  [R1]
         { []
         }
     {offset
       cglhS: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cglhT; else goto cglhU;
       cglhT: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglhU: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 32];
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjN3_info" {
     sat_sgjN3_info:
         const sat_sgjN3_entry;
         const 3;
         const 15;
 },
 sat_sgjN2_entry() //  [R1]
         { []
         }
     {offset
       cglhZ: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cgli0; else goto cgli1;
       cgli0: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgli1: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 32];
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjN2_info" {
     sat_sgjN2_info:
         const sat_sgjN2_entry;
         const 3;
         const 15;
 },
 Data.Functor.Contravariant.$fContravariantProduct_$c>$_entry() //  [R2,
                                                                     R3, R4, R5]
         { []
         }
     {offset
       cgli2: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgli4; else goto cgli5;
       cgli4: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantProduct_$c>$_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgli5: // global
           I64[Sp - 32] = block_cglhB_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto ugli9; else goto cglhC;
       ugli9: // global
           call _cglhB(R1) args: 0, res: 0, upd: 0;
       cglhC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantProduct_$c>$_info" {
     Data.Functor.Contravariant.$fContravariantProduct_$c>$_info:
         const Data.Functor.Contravariant.$fContravariantProduct_$c>$_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _cglhB() //  [R1]
         { []
         }
     {offset
       cglhB: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto cgli8; else goto cgli7;
       cgli8: // global
           HpAlloc = 120;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cgli7: // global
           _sgjMY::P64 = P64[R1 + 7];
           _sgjMZ::P64 = P64[R1 + 15];
           I64[Hp - 112] = f1_sgjN0_info;
           P64[Hp - 104] = P64[Sp + 24];
           I64[Hp - 96] = sat_sgjN3_info;
           P64[Hp - 80] = P64[Sp + 16];
           P64[Hp - 72] = _sgjMZ::P64;
           _cglhG::P64 = Hp - 111;
           P64[Hp - 64] = _cglhG::P64;
           I64[Hp - 56] = sat_sgjN2_info;
           P64[Hp - 40] = P64[Sp + 8];
           P64[Hp - 32] = _sgjMY::P64;
           P64[Hp - 24] = _cglhG::P64;
           I64[Hp - 16] = Data.Functor.Product.Pair_con_info;
           P64[Hp - 8] = Hp - 56;
           P64[Hp] = Hp - 96;
           R1 = Hp - 15;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cglhB_info" {
     block_cglhB_info:
         const _cglhB;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.002611626 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantConst1_closure" {
     Data.Functor.Contravariant.$fContravariantConst1_closure:
         const Data.Functor.Contravariant.$fContravariantConst1_info;
 },
 Data.Functor.Contravariant.$fContravariantConst1_entry() //  [R3]
         { []
         }
     {offset
       cgliI: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantConst1_info" {
     Data.Functor.Contravariant.$fContravariantConst1_info:
         const Data.Functor.Contravariant.$fContravariantConst1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.007578496 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantCompose1_closure" {
     Data.Functor.Contravariant.$fContravariantCompose1_closure:
         const Data.Functor.Contravariant.$fContravariantCompose1_info;
 },
 sat_sgjNb_entry() //  [R1]
         { []
         }
     {offset
       cglj2: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjNb_info" {
     sat_sgjNb_info:
         const sat_sgjNb_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sgjNc_entry() //  [R1]
         { []
         }
     {offset
       cglj5: // global
           _sgjNc::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cglj6; else goto cglj7;
       cglj7: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cglj9; else goto cglj8;
       cglj9: // global
           HpAlloc = 16;
           goto cglj6;
       cglj6: // global
           R1 = _sgjNc::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglj8: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sgjNc::P64;
           _sgjN7::P64 = P64[_sgjNc::P64 + 16];
           _sgjN8::P64 = P64[_sgjNc::P64 + 24];
           I64[Hp - 8] = sat_sgjNb_info;
           P64[Hp] = _sgjN8::P64;
           R2 = _sgjN7::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 7;
           Sp = Sp - 32;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjNc_info" {
     sat_sgjNc_info:
         const sat_sgjNc_entry;
         const 2;
         const 18;
 },
 Data.Functor.Contravariant.$fContravariantCompose1_entry() //  [R2,
                                                                 R3, R4, R5]
         { []
         }
     {offset
       cglja: // global
           _sgjN9::P64 = R5;
           _sgjN8::P64 = R4;
           _sgjN7::P64 = R3;
           _sgjN6::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cgljb; else goto cgljc;
       cgljc: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglje; else goto cgljd;
       cglje: // global
           HpAlloc = 32;
           goto cgljb;
       cgljb: // global
           R5 = _sgjN9::P64;
           R4 = _sgjN8::P64;
           R3 = _sgjN7::P64;
           R2 = _sgjN6::P64;
           R1 = Data.Functor.Contravariant.$fContravariantCompose1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgljd: // global
           I64[Hp - 24] = sat_sgjNc_info;
           P64[Hp - 8] = _sgjN7::P64;
           P64[Hp] = _sgjN8::P64;
           R2 = _sgjN6::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = _sgjN9::P64;
           Sp = Sp - 24;
           call GHC.Base.fmap_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantCompose1_info" {
     Data.Functor.Contravariant.$fContravariantCompose1_info:
         const Data.Functor.Contravariant.$fContravariantCompose1_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.014597702 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantProxy_$c>$_closure" {
     Data.Functor.Contravariant.$fContravariantProxy_$c>$_closure:
         const Data.Functor.Contravariant.$fContravariantProxy_$c>$_info;
 },
 Data.Functor.Contravariant.$fContravariantProxy_$c>$_entry() //  []
         { []
         }
     {offset
       cgljx: // global
           R1 = Data.Proxy.Proxy_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantProxy_$c>$_info" {
     Data.Functor.Contravariant.$fContravariantProxy_$c>$_info:
         const Data.Functor.Contravariant.$fContravariantProxy_$c>$_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.018431418 UTC

[section ""data" . Data.Functor.Contravariant.$dm>$_closure" {
     Data.Functor.Contravariant.$dm>$_closure:
         const Data.Functor.Contravariant.$dm>$_info;
 },
 sat_sgjNi_entry() //  [R1]
         { []
         }
     {offset
       cgljO: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjNi_info" {
     sat_sgjNi_info:
         const sat_sgjNi_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Data.Functor.Contravariant.$dm>$_entry() //  [R2, R3]
         { []
         }
     {offset
       cgljR: // global
           _sgjNg::P64 = R3;
           _sgjNf::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cgljS; else goto cgljT;
       cgljT: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cgljV; else goto cgljU;
       cgljV: // global
           HpAlloc = 16;
           goto cgljS;
       cgljS: // global
           R3 = _sgjNg::P64;
           R2 = _sgjNf::P64;
           R1 = Data.Functor.Contravariant.$dm>$_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgljU: // global
           I64[Hp - 8] = sat_sgjNi_info;
           P64[Hp] = _sgjNg::P64;
           R2 = _sgjNf::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 7;
           Sp = Sp - 16;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$dm>$_info" {
     Data.Functor.Contravariant.$dm>$_info:
         const Data.Functor.Contravariant.$dm>$_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.024737109 UTC

[section ""data" . Data.Functor.Contravariant.$fSemigroupOp_closure" {
     Data.Functor.Contravariant.$fSemigroupOp_closure:
         const Data.Functor.Contravariant.$fSemigroupOp_info;
 },
 sat_sgjNm_entry() //  [R1, R2, R3, R4, R5]
         { []
         }
     {offset
       cglke: // global
           R6 = R5;
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 4];
           call GHC.Base.$fSemigroup(->)_$cstimes_entry(R6,
                                                        R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjNm_info" {
     sat_sgjNm_info:
         const sat_sgjNm_entry;
         const 1;
         const 9;
         const 17179869208;
 },
 sat_sgjNl_entry() //  [R1, R2]
         { []
         }
     {offset
       cglkm: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call GHC.Base.$fSemigroup(->)_$csconcat_entry(R3,
                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjNl_info" {
     sat_sgjNl_info:
         const sat_sgjNl_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sgjNk_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cglku: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call GHC.Base.$fSemigroup(->)_$c<>_entry(R5,
                                                    R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjNk_info" {
     sat_sgjNk_info:
         const sat_sgjNk_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 Data.Functor.Contravariant.$fSemigroupOp_entry() //  [R2]
         { []
         }
     {offset
       cglky: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cglkC; else goto cglkB;
       cglkC: // global
           HpAlloc = 80;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fSemigroupOp_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cglkB: // global
           I64[Hp - 72] = sat_sgjNm_info;
           P64[Hp - 64] = R2;
           I64[Hp - 56] = sat_sgjNl_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = sat_sgjNk_info;
           P64[Hp - 32] = R2;
           I64[Hp - 24] = GHC.Base.C:Semigroup_con_info;
           P64[Hp - 16] = Hp - 37;
           P64[Hp - 8] = Hp - 55;
           P64[Hp] = Hp - 68;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fSemigroupOp_info" {
     Data.Functor.Contravariant.$fSemigroupOp_info:
         const Data.Functor.Contravariant.$fSemigroupOp_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.033868733 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidOp_$cp1Monoid_closure" {
     Data.Functor.Contravariant.$fMonoidOp_$cp1Monoid_closure:
         const Data.Functor.Contravariant.$fMonoidOp_$cp1Monoid_info;
 },
 sat_sgjNo_entry() //  [R1]
         { []
         }
     {offset
       cgll2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgll3; else goto cgll4;
       cgll3: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgll4: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.$p1Monoid_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjNo_info" {
     sat_sgjNo_info:
         const sat_sgjNo_entry;
         const 1;
         const 16;
 },
 Data.Functor.Contravariant.$fMonoidOp_$cp1Monoid_entry() //  [R2]
         { []
         }
     {offset
       cgll5: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cgll9; else goto cgll8;
       cgll9: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fMonoidOp_$cp1Monoid_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgll8: // global
           I64[Hp - 16] = sat_sgjNo_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           call Data.Functor.Contravariant.$fSemigroupOp_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fMonoidOp_$cp1Monoid_info" {
     Data.Functor.Contravariant.$fMonoidOp_$cp1Monoid_info:
         const Data.Functor.Contravariant.$fMonoidOp_$cp1Monoid_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.041788129 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidOp_closure" {
     Data.Functor.Contravariant.$fMonoidOp_closure:
         const Data.Functor.Contravariant.$fMonoidOp_info;
 },
 lvl7_sgjNq_entry() //  [R1]
         { []
         }
     {offset
       cgllq: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgllr; else goto cglls;
       cgllr: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglls: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.mempty_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl7_sgjNq_info" {
     lvl7_sgjNq_info:
         const lvl7_sgjNq_entry;
         const 1;
         const 16;
 },
 sat_sgjNv_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglly: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call GHC.Base.$fMonoid(->)_$cmconcat_entry(R4,
                                                      R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjNv_info" {
     sat_sgjNv_info:
         const sat_sgjNv_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgjNu_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cgllG: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call GHC.Base.$fMonoid(->)_$cmappend_entry(R5,
                                                      R4,
                                                      R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjNu_info" {
     sat_sgjNu_info:
         const sat_sgjNu_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 sat_sgjNt_entry() //  [R1]
         { []
         }
     {offset
       cgllO: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjNt_info" {
     sat_sgjNt_info:
         const sat_sgjNt_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sgjNr_entry() //  [R1]
         { []
         }
     {offset
       cgllV: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgllW; else goto cgllX;
       cgllW: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgllX: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Functor.Contravariant.$fMonoidOp_$cp1Monoid_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjNr_info" {
     sat_sgjNr_info:
         const sat_sgjNr_entry;
         const 1;
         const 16;
 },
 Data.Functor.Contravariant.$fMonoidOp_entry() //  [R2]
         { []
         }
     {offset
       cgllZ: // global
           Hp = Hp + 136;
           if (Hp > HpLim) (likely: False) goto cglm3; else goto cglm2;
       cglm3: // global
           HpAlloc = 136;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fMonoidOp_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cglm2: // global
           I64[Hp - 128] = lvl7_sgjNq_info;
           P64[Hp - 112] = R2;
           I64[Hp - 104] = sat_sgjNv_info;
           P64[Hp - 96] = R2;
           I64[Hp - 88] = sat_sgjNu_info;
           P64[Hp - 80] = R2;
           I64[Hp - 72] = sat_sgjNt_info;
           P64[Hp - 64] = Hp - 128;
           I64[Hp - 56] = sat_sgjNr_info;
           P64[Hp - 40] = R2;
           I64[Hp - 32] = GHC.Base.C:Monoid_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 71;
           P64[Hp - 8] = Hp - 85;
           P64[Hp] = Hp - 102;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fMonoidOp_info" {
     Data.Functor.Contravariant.$fMonoidOp_info:
         const Data.Functor.Contravariant.$fMonoidOp_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.053016972 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidComparison3_closure" {
     Data.Functor.Contravariant.$fMonoidComparison3_closure:
         const Data.Functor.Contravariant.$fMonoidComparison3_info;
 },
 Data.Functor.Contravariant.$fMonoidComparison3_entry() //  []
         { []
         }
     {offset
       cglmz: // global
           R1 = GHC.Types.EQ_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fMonoidComparison3_info" {
     Data.Functor.Contravariant.$fMonoidComparison3_info:
         const Data.Functor.Contravariant.$fMonoidComparison3_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.05764679 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidComparison2_closure" {
     Data.Functor.Contravariant.$fMonoidComparison2_closure:
         const Data.Functor.Contravariant.$fMonoidComparison2_info;
 },
 sat_sgjNF_entry() //  [R1, R2]
         { []
         }
     {offset
       cglmZ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cgln0; else goto cgln1;
       cgln0: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgln1: // global
           I64[Sp - 24] = block_cglmS_info;
           _sgjND::P64 = R2;
           R2 = R2;
           _sgjNC::P64 = P64[R1 + 15];
           R1 = P64[R1 + 7];
           P64[Sp - 16] = _sgjNC::P64;
           P64[Sp - 8] = _sgjND::P64;
           Sp = Sp - 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjNF_info" {
     sat_sgjNF_info:
         const sat_sgjNF_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 _cglmS() //  [R1]
         { []
         }
     {offset
       cglmS: // global
           _cglmY::P64 = R1 & 7;
           if (_cglmY::P64 < 3) goto uglnb; else goto cglmX;
       uglnb: // global
           if (_cglmY::P64 < 2) goto cglmV; else goto cglmW;
       cglmV: // global
           R1 = GHC.Types.LT_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cglmW: // global
           R2 = P64[Sp + 16];
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
       cglmX: // global
           R1 = GHC.Types.GT_closure+3;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cglmS_info" {
     block_cglmS_info:
         const _cglmS;
         const 2;
         const 30;
 },
 Data.Functor.Contravariant.$fMonoidComparison2_entry() //  [R2, R3,
                                                             R4]
         { []
         }
     {offset
       cglnc: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cglng; else goto cglnf;
       cglng: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fMonoidComparison2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglnf: // global
           I64[Hp - 80] = stg_ap_2_upd_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = sat_sgjNF_info;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 48;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fMonoidComparison2_info" {
     Data.Functor.Contravariant.$fMonoidComparison2_info:
         const Data.Functor.Contravariant.$fMonoidComparison2_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.066544208 UTC

[section ""data" . Data.Functor.Contravariant.$fSemigroupComparison3_closure" {
     Data.Functor.Contravariant.$fSemigroupComparison3_closure:
         const Data.Functor.Contravariant.$fSemigroupComparison3_info;
 },
 sat_sgjNN_entry() //  [R1, R2]
         { []
         }
     {offset
       cglnQ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cglnR; else goto cglnS;
       cglnR: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cglnS: // global
           I64[Sp - 24] = block_cglnJ_info;
           _sgjNL::P64 = R2;
           R2 = R2;
           _sgjNK::P64 = P64[R1 + 15];
           R1 = P64[R1 + 7];
           P64[Sp - 16] = _sgjNK::P64;
           P64[Sp - 8] = _sgjNL::P64;
           Sp = Sp - 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjNN_info" {
     sat_sgjNN_info:
         const sat_sgjNN_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 _cglnJ() //  [R1]
         { []
         }
     {offset
       cglnJ: // global
           _cglnP::P64 = R1 & 7;
           if (_cglnP::P64 < 3) goto uglo2; else goto cglnO;
       uglo2: // global
           if (_cglnP::P64 < 2) goto cglnM; else goto cglnN;
       cglnM: // global
           R1 = GHC.Types.LT_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cglnN: // global
           R2 = P64[Sp + 16];
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
       cglnO: // global
           R1 = GHC.Types.GT_closure+3;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cglnJ_info" {
     block_cglnJ_info:
         const _cglnJ;
         const 2;
         const 30;
 },
 Data.Functor.Contravariant.$fSemigroupComparison3_entry() //  [R2,
                                                                R3, R4]
         { []
         }
     {offset
       cglo3: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cglo7; else goto cglo6;
       cglo7: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fSemigroupComparison3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglo6: // global
           I64[Hp - 80] = stg_ap_2_upd_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = sat_sgjNN_info;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 48;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fSemigroupComparison3_info" {
     Data.Functor.Contravariant.$fSemigroupComparison3_info:
         const Data.Functor.Contravariant.$fSemigroupComparison3_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.074806032 UTC

[section ""data" . Data.Functor.Contravariant.$fSemigroupComparison1_closure" {
     Data.Functor.Contravariant.$fSemigroupComparison1_closure:
         const Data.Functor.Contravariant.$fSemigroupComparison1_info;
         const 0;
 },
 lvl7_sgjNT_entry() //  [R1]
         { []
         }
     {offset
       cgloy: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgloz; else goto cgloA;
       cgloz: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgloA: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.$fSemigroupOrdering_$cstimes_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl7_sgjNT_info" {
     lvl7_sgjNT_info:
         const lvl7_sgjNT_entry;
         const 1;
         const 4294967312;
         const Sgk42_srt;
 },
 sat_sgjNW_entry() //  [R1, R2]
         { []
         }
     {offset
       cgloH: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgloL; else goto cgloK;
       cgloL: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgloK: // global
           _sgjNP::P64 = P64[R1 + 7];
           _sgjNS::P64 = P64[R1 + 15];
           _sgjNT::P64 = P64[R1 + 23];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjNS::P64;
           P64[Hp] = R2;
           R3 = Hp - 24;
           R2 = _sgjNP::P64;
           R1 = _sgjNT::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjNW_info" {
     sat_sgjNW_info:
         const sat_sgjNW_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 Data.Functor.Contravariant.$fSemigroupComparison1_entry() //  [R2,
                                                                R3, R4, R5]
         { []
         }
     {offset
       cgloM: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cgloQ; else goto cgloP;
       cgloQ: // global
           HpAlloc = 88;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fSemigroupComparison1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgloP: // global
           I64[Hp - 80] = stg_ap_2_upd_info;
           P64[Hp - 64] = R4;
           P64[Hp - 56] = R5;
           I64[Hp - 48] = lvl7_sgjNT_info;
           P64[Hp - 32] = R2;
           I64[Hp - 24] = sat_sgjNW_info;
           P64[Hp - 16] = R3;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 48;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fSemigroupComparison1_info" {
     Data.Functor.Contravariant.$fSemigroupComparison1_info:
         const Data.Functor.Contravariant.$fSemigroupComparison1_entry;
         const 0;
         const 12884901902;
         const 17179869208;
         const Sgk42_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.083788557 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantM1_closure" {
     Data.Functor.Contravariant.$fContravariantM1_closure:
         const Data.Functor.Contravariant.$fContravariantM1_info;
 },
 sat_sgjNZ_entry() //  [R1]
         { []
         }
     {offset
       cglpd: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cglpe; else goto cglpf;
       cglpe: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglpf: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Functor.Contravariant.>$_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjNZ_info" {
     sat_sgjNZ_info:
         const sat_sgjNZ_entry;
         const 1;
         const 16;
 },
 sat_sgjNY_entry() //  [R1]
         { []
         }
     {offset
       cglpk: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cglpl; else goto cglpm;
       cglpl: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglpm: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjNY_info" {
     sat_sgjNY_info:
         const sat_sgjNY_entry;
         const 1;
         const 16;
 },
 Data.Functor.Contravariant.$fContravariantM1_entry() //  [R2]
         { []
         }
     {offset
       cglpo: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cglps; else goto cglpr;
       cglps: // global
           HpAlloc = 72;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantM1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cglpr: // global
           I64[Hp - 64] = sat_sgjNZ_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = sat_sgjNY_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = Data.Functor.Contravariant.C:Contravariant_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 64;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantM1_info" {
     Data.Functor.Contravariant.$fContravariantM1_info:
         const Data.Functor.Contravariant.$fContravariantM1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.091480103 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantRec1_closure" {
     Data.Functor.Contravariant.$fContravariantRec1_closure:
         const Data.Functor.Contravariant.$fContravariantRec1_info;
 },
 sat_sgjO2_entry() //  [R1]
         { []
         }
     {offset
       cglpQ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cglpR; else goto cglpS;
       cglpR: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglpS: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Functor.Contravariant.>$_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjO2_info" {
     sat_sgjO2_info:
         const sat_sgjO2_entry;
         const 1;
         const 16;
 },
 sat_sgjO1_entry() //  [R1]
         { []
         }
     {offset
       cglpX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cglpY; else goto cglpZ;
       cglpY: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglpZ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjO1_info" {
     sat_sgjO1_info:
         const sat_sgjO1_entry;
         const 1;
         const 16;
 },
 Data.Functor.Contravariant.$fContravariantRec1_entry() //  [R2]
         { []
         }
     {offset
       cglq1: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cglq5; else goto cglq4;
       cglq5: // global
           HpAlloc = 72;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantRec1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cglq4: // global
           I64[Hp - 64] = sat_sgjO2_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = sat_sgjO1_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = Data.Functor.Contravariant.C:Contravariant_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 64;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantRec1_info" {
     Data.Functor.Contravariant.$fContravariantRec1_info:
         const Data.Functor.Contravariant.$fContravariantRec1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.099617353 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantAlt_closure" {
     Data.Functor.Contravariant.$fContravariantAlt_closure:
         const Data.Functor.Contravariant.$fContravariantAlt_info;
 },
 sat_sgjO5_entry() //  [R1]
         { []
         }
     {offset
       cglqt: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cglqu; else goto cglqv;
       cglqu: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglqv: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Functor.Contravariant.>$_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjO5_info" {
     sat_sgjO5_info:
         const sat_sgjO5_entry;
         const 1;
         const 16;
 },
 sat_sgjO4_entry() //  [R1]
         { []
         }
     {offset
       cglqA: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cglqB; else goto cglqC;
       cglqB: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglqC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjO4_info" {
     sat_sgjO4_info:
         const sat_sgjO4_entry;
         const 1;
         const 16;
 },
 Data.Functor.Contravariant.$fContravariantAlt_entry() //  [R2]
         { []
         }
     {offset
       cglqE: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cglqI; else goto cglqH;
       cglqI: // global
           HpAlloc = 72;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantAlt_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cglqH: // global
           I64[Hp - 64] = sat_sgjO5_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = sat_sgjO4_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = Data.Functor.Contravariant.C:Contravariant_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 64;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantAlt_info" {
     Data.Functor.Contravariant.$fContravariantAlt_info:
         const Data.Functor.Contravariant.$fContravariantAlt_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.106270275 UTC

[section ""data" . sat_sgjO6_closure" {
     sat_sgjO6_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.107936297 UTC

[section ""data" . sat_sgjO7_closure" {
     sat_sgjO7_closure:
         const :_con_info;
         const sat_sgjO6_closure+1;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.110319833 UTC

[section ""data" . lvl_rgjLr_closure" {
     lvl_rgjLr_closure:
         const lvl_rgjLr_info;
         const 0;
         const 0;
         const 0;
 },
 lvl_rgjLr_entry() //  [R1]
         { []
         }
     {offset
       cglr6: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cglr7; else goto cglr8;
       cglr7: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglr8: // global
           (_cglr3::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_cglr3::I64 == 0) goto cglr5; else goto cglr4;
       cglr5: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       cglr4: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _cglr3::I64;
           R3 = sat_sgjO7_closure+2;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl_rgjLr_info" {
     lvl_rgjLr_info:
         const lvl_rgjLr_entry;
         const 0;
         const 4294967317;
         const Sgk42_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.114840092 UTC

[section ""data" . lvl1_rgjLs_closure" {
     lvl1_rgjLs_closure:
         const lvl1_rgjLs_info;
         const 0;
         const 0;
         const 0;
 },
 lvl1_rgjLs_entry() //  [R1]
         { []
         }
     {offset
       cglrm: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cglrn; else goto cglro;
       cglrn: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglro: // global
           (_cglrj::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_cglrj::I64 == 0) goto cglrl; else goto cglrk;
       cglrl: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       cglrk: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _cglrj::I64;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl1_rgjLs_info" {
     lvl1_rgjLs_info:
         const lvl1_rgjLs_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.122646576 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp_$clog1mexp_closure" {
     Data.Functor.Contravariant.$fFloatingOp_$clog1mexp_closure:
         const Data.Functor.Contravariant.$fFloatingOp_$clog1mexp_info;
         const 0;
 },
 $dFractional_sgjOa_entry() //  [R1]
         { []
         }
     {offset
       cglrE: // global
           R2 = P64[R1 + 16];
           call GHC.Float.$p1Floating_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . $dFractional_sgjOa_info" {
     $dFractional_sgjOa_info:
         const $dFractional_sgjOa_entry;
         const 1;
         const 16;
 },
 $dNum_sgjOb_entry() //  [R1]
         { []
         }
     {offset
       cglrL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cglrM; else goto cglrN;
       cglrM: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglrN: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Real.$p1Fractional_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . $dNum_sgjOb_info" {
     $dNum_sgjOb_info:
         const $dNum_sgjOb_entry;
         const 1;
         const 16;
 },
 x_sgjOc_entry() //  [R1]
         { []
         }
     {offset
       cglrS: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cglrT; else goto cglrU;
       cglrT: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglrU: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = lvl1_rgjLs_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . x_sgjOc_info" {
     x_sgjOc_info:
         const x_sgjOc_entry;
         const 1;
         const 4294967312;
         const Sgk42_srt+24;
 },
 x1_sgjOd_entry() //  [R1]
         { []
         }
     {offset
       cglrZ: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgls0; else goto cgls1;
       cgls0: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgls1: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = lvl_rgjLr_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . x1_sgjOd_info" {
     x1_sgjOd_info:
         const x1_sgjOd_entry;
         const 1;
         const 4294967312;
         const Sgk42_srt+32;
 },
 sat_sgjOg_entry() //  [R1]
         { []
         }
     {offset
       cglsk: // global
           _sgjOg::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cglsl; else goto cglsm;
       cglsm: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglso; else goto cglsn;
       cglso: // global
           HpAlloc = 32;
           goto cglsl;
       cglsl: // global
           R1 = _sgjOg::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglsn: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sgjOg::P64;
           _sgjO8::P64 = P64[_sgjOg::P64 + 16];
           _sgjO9::P64 = P64[_sgjOg::P64 + 24];
           _sgjOe::P64 = P64[_sgjOg::P64 + 32];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjO9::P64;
           P64[Hp] = _sgjOe::P64;
           R2 = _sgjO8::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 24;
           Sp = Sp - 32;
           call GHC.Float.exp_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjOg_info" {
     sat_sgjOg_info:
         const sat_sgjOg_entry;
         const 3;
         const 15;
 },
 sat_sgjOh_entry() //  [R1]
         { []
         }
     {offset
       cglsp: // global
           _sgjOh::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cglsq; else goto cglsr;
       cglsr: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto cglst; else goto cglss;
       cglst: // global
           HpAlloc = 40;
           goto cglsq;
       cglsq: // global
           R1 = _sgjOh::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglss: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sgjOh::P64;
           _sgjO8::P64 = P64[_sgjOh::P64 + 16];
           _sgjO9::P64 = P64[_sgjOh::P64 + 24];
           _sgjOb::P64 = P64[_sgjOh::P64 + 32];
           _sgjOc::P64 = P64[_sgjOh::P64 + 40];
           _sgjOe::P64 = P64[_sgjOh::P64 + 48];
           I64[Hp - 32] = sat_sgjOg_info;
           P64[Hp - 16] = _sgjO8::P64;
           P64[Hp - 8] = _sgjO9::P64;
           P64[Hp] = _sgjOe::P64;
           R2 = _sgjOb::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = _sgjOc::P64;
           P64[Sp - 24] = Hp - 32;
           Sp = Sp - 40;
           call GHC.Num.-_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjOh_info" {
     sat_sgjOh_info:
         const sat_sgjOh_entry;
         const 5;
         const 15;
 },
 sat_sgjOi_entry() //  [R1]
         { []
         }
     {offset
       cglsu: // global
           _sgjOi::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cglsv; else goto cglsw;
       cglsw: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cglsy; else goto cglsx;
       cglsy: // global
           HpAlloc = 56;
           goto cglsv;
       cglsv: // global
           R1 = _sgjOi::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglsx: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sgjOi::P64;
           _sgjO8::P64 = P64[_sgjOi::P64 + 16];
           _sgjO9::P64 = P64[_sgjOi::P64 + 24];
           _sgjOb::P64 = P64[_sgjOi::P64 + 32];
           _sgjOc::P64 = P64[_sgjOi::P64 + 40];
           _sgjOd::P64 = P64[_sgjOi::P64 + 48];
           _sgjOe::P64 = P64[_sgjOi::P64 + 56];
           I64[Hp - 48] = sat_sgjOh_info;
           P64[Hp - 32] = _sgjO8::P64;
           P64[Hp - 24] = _sgjO9::P64;
           P64[Hp - 16] = _sgjOb::P64;
           P64[Hp - 8] = _sgjOc::P64;
           P64[Hp] = _sgjOe::P64;
           R2 = _sgjOb::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = _sgjOd::P64;
           P64[Sp - 24] = Hp - 48;
           Sp = Sp - 40;
           call GHC.Num.+_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjOi_info" {
     sat_sgjOi_info:
         const sat_sgjOi_entry;
         const 6;
         const 15;
 },
 sat_sgjOj_entry() //  [R1, R2]
         { []
         }
     {offset
       cglsz: // global
           _sgjOe::P64 = R2;
           _sgjOj::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cglsA; else goto cglsB;
       cglsB: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cglsD; else goto cglsC;
       cglsD: // global
           HpAlloc = 64;
           goto cglsA;
       cglsA: // global
           R2 = _sgjOe::P64;
           R1 = _sgjOj::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cglsC: // global
           _sgjO8::P64 = P64[_sgjOj::P64 + 7];
           _sgjO9::P64 = P64[_sgjOj::P64 + 15];
           _sgjOb::P64 = P64[_sgjOj::P64 + 23];
           _sgjOc::P64 = P64[_sgjOj::P64 + 31];
           _sgjOd::P64 = P64[_sgjOj::P64 + 39];
           I64[Hp - 56] = sat_sgjOi_info;
           P64[Hp - 40] = _sgjO8::P64;
           P64[Hp - 32] = _sgjO9::P64;
           P64[Hp - 24] = _sgjOb::P64;
           P64[Hp - 16] = _sgjOc::P64;
           P64[Hp - 8] = _sgjOd::P64;
           P64[Hp] = _sgjOe::P64;
           R2 = _sgjO8::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 56;
           Sp = Sp - 16;
           call GHC.Float.log_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjOj_info" {
     sat_sgjOj_info:
         const sat_sgjOj_entry;
         const 5;
         const 8;
         const 4294967301;
 },
 Data.Functor.Contravariant.$fFloatingOp_$clog1mexp_entry() //  [R2,
                                                                 R3]
         { []
         }
     {offset
       cglsE: // global
           Hp = Hp + 144;
           if (Hp > HpLim) (likely: False) goto cglsI; else goto cglsH;
       cglsI: // global
           HpAlloc = 144;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fFloatingOp_$clog1mexp_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cglsH: // global
           I64[Hp - 136] = $dFractional_sgjOa_info;
           P64[Hp - 120] = R2;
           I64[Hp - 112] = $dNum_sgjOb_info;
           P64[Hp - 96] = Hp - 136;
           I64[Hp - 88] = x_sgjOc_info;
           _cglrH::P64 = Hp - 112;
           P64[Hp - 72] = _cglrH::P64;
           I64[Hp - 64] = x1_sgjOd_info;
           P64[Hp - 48] = _cglrH::P64;
           I64[Hp - 40] = sat_sgjOj_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           P64[Hp - 16] = _cglrH::P64;
           P64[Hp - 8] = Hp - 88;
           P64[Hp] = Hp - 64;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp_$clog1mexp_info" {
     Data.Functor.Contravariant.$fFloatingOp_$clog1mexp_info:
         const Data.Functor.Contravariant.$fFloatingOp_$clog1mexp_entry;
         const 0;
         const 30064771086;
         const 8589934607;
         const Sgk42_srt+24;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.143374247 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp_$cexpm1_closure" {
     Data.Functor.Contravariant.$fFloatingOp_$cexpm1_closure:
         const Data.Functor.Contravariant.$fFloatingOp_$cexpm1_info;
         const 0;
 },
 $dFractional_sgjOm_entry() //  [R1]
         { []
         }
     {offset
       cglty: // global
           R2 = P64[R1 + 16];
           call GHC.Float.$p1Floating_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . $dFractional_sgjOm_info" {
     $dFractional_sgjOm_info:
         const $dFractional_sgjOm_entry;
         const 1;
         const 16;
 },
 $dNum_sgjOn_entry() //  [R1]
         { []
         }
     {offset
       cgltF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgltG; else goto cgltH;
       cgltG: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgltH: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Real.$p1Fractional_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . $dNum_sgjOn_info" {
     $dNum_sgjOn_info:
         const $dNum_sgjOn_entry;
         const 1;
         const 16;
 },
 x_sgjOo_entry() //  [R1]
         { []
         }
     {offset
       cgltM: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgltN; else goto cgltO;
       cgltN: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgltO: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = lvl_rgjLr_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . x_sgjOo_info" {
     x_sgjOo_info:
         const x_sgjOo_entry;
         const 1;
         const 4294967312;
         const Sgk42_srt+32;
 },
 sat_sgjOr_entry() //  [R1]
         { []
         }
     {offset
       cgltZ: // global
           _sgjOr::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cglu0; else goto cglu1;
       cglu1: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglu3; else goto cglu2;
       cglu3: // global
           HpAlloc = 32;
           goto cglu0;
       cglu0: // global
           R1 = _sgjOr::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglu2: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sgjOr::P64;
           _sgjOk::P64 = P64[_sgjOr::P64 + 16];
           _sgjOl::P64 = P64[_sgjOr::P64 + 24];
           _sgjOp::P64 = P64[_sgjOr::P64 + 32];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjOl::P64;
           P64[Hp] = _sgjOp::P64;
           R2 = _sgjOk::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 24;
           Sp = Sp - 32;
           call GHC.Float.exp_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjOr_info" {
     sat_sgjOr_info:
         const sat_sgjOr_entry;
         const 3;
         const 15;
 },
 sat_sgjOs_entry() //  [R1, R2]
         { []
         }
     {offset
       cglu4: // global
           _sgjOp::P64 = R2;
           _sgjOs::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto cglu5; else goto cglu6;
       cglu6: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto cglu8; else goto cglu7;
       cglu8: // global
           HpAlloc = 40;
           goto cglu5;
       cglu5: // global
           R2 = _sgjOp::P64;
           R1 = _sgjOs::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cglu7: // global
           _sgjOk::P64 = P64[_sgjOs::P64 + 7];
           _sgjOl::P64 = P64[_sgjOs::P64 + 15];
           _sgjOn::P64 = P64[_sgjOs::P64 + 23];
           _sgjOo::P64 = P64[_sgjOs::P64 + 31];
           I64[Hp - 32] = sat_sgjOr_info;
           P64[Hp - 16] = _sgjOk::P64;
           P64[Hp - 8] = _sgjOl::P64;
           P64[Hp] = _sgjOp::P64;
           R2 = _sgjOn::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 32;
           P64[Sp - 8] = _sgjOo::P64;
           Sp = Sp - 24;
           call GHC.Num.-_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjOs_info" {
     sat_sgjOs_info:
         const sat_sgjOs_entry;
         const 4;
         const 8;
         const 4294967301;
 },
 Data.Functor.Contravariant.$fFloatingOp_$cexpm1_entry() //  [R2,
                                                              R3]
         { []
         }
     {offset
       cglu9: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto cglud; else goto cgluc;
       cglud: // global
           HpAlloc = 112;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fFloatingOp_$cexpm1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgluc: // global
           I64[Hp - 104] = $dFractional_sgjOm_info;
           P64[Hp - 88] = R2;
           I64[Hp - 80] = $dNum_sgjOn_info;
           P64[Hp - 64] = Hp - 104;
           I64[Hp - 56] = x_sgjOo_info;
           _cgltB::P64 = Hp - 80;
           P64[Hp - 40] = _cgltB::P64;
           I64[Hp - 32] = sat_sgjOs_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = R3;
           P64[Hp - 8] = _cgltB::P64;
           P64[Hp] = Hp - 56;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp_$cexpm1_info" {
     Data.Functor.Contravariant.$fFloatingOp_$cexpm1_info:
         const Data.Functor.Contravariant.$fFloatingOp_$cexpm1_entry;
         const 0;
         const 21474836494;
         const 8589934607;
         const Sgk42_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.159179042 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp_$clog1pexp_closure" {
     Data.Functor.Contravariant.$fFloatingOp_$clog1pexp_closure:
         const Data.Functor.Contravariant.$fFloatingOp_$clog1pexp_info;
         const 0;
 },
 $dFractional_sgjOv_entry() //  [R1]
         { []
         }
     {offset
       cgluO: // global
           R2 = P64[R1 + 16];
           call GHC.Float.$p1Floating_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . $dFractional_sgjOv_info" {
     $dFractional_sgjOv_info:
         const $dFractional_sgjOv_entry;
         const 1;
         const 16;
 },
 $dNum_sgjOw_entry() //  [R1]
         { []
         }
     {offset
       cgluV: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgluW; else goto cgluX;
       cgluW: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgluX: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Real.$p1Fractional_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . $dNum_sgjOw_info" {
     $dNum_sgjOw_info:
         const $dNum_sgjOw_entry;
         const 1;
         const 16;
 },
 x_sgjOx_entry() //  [R1]
         { []
         }
     {offset
       cglv2: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cglv3; else goto cglv4;
       cglv3: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglv4: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = lvl_rgjLr_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . x_sgjOx_info" {
     x_sgjOx_info:
         const x_sgjOx_entry;
         const 1;
         const 4294967312;
         const Sgk42_srt+32;
 },
 sat_sgjOA_entry() //  [R1]
         { []
         }
     {offset
       cglvj: // global
           _sgjOA::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cglvk; else goto cglvl;
       cglvl: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglvn; else goto cglvm;
       cglvn: // global
           HpAlloc = 32;
           goto cglvk;
       cglvk: // global
           R1 = _sgjOA::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglvm: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sgjOA::P64;
           _sgjOt::P64 = P64[_sgjOA::P64 + 16];
           _sgjOu::P64 = P64[_sgjOA::P64 + 24];
           _sgjOy::P64 = P64[_sgjOA::P64 + 32];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjOu::P64;
           P64[Hp] = _sgjOy::P64;
           R2 = _sgjOt::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 24;
           Sp = Sp - 32;
           call GHC.Float.exp_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjOA_info" {
     sat_sgjOA_info:
         const sat_sgjOA_entry;
         const 3;
         const 15;
 },
 sat_sgjOB_entry() //  [R1]
         { []
         }
     {offset
       cglvo: // global
           _sgjOB::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cglvp; else goto cglvq;
       cglvq: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto cglvs; else goto cglvr;
       cglvs: // global
           HpAlloc = 40;
           goto cglvp;
       cglvp: // global
           R1 = _sgjOB::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglvr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sgjOB::P64;
           _sgjOt::P64 = P64[_sgjOB::P64 + 16];
           _sgjOu::P64 = P64[_sgjOB::P64 + 24];
           _sgjOw::P64 = P64[_sgjOB::P64 + 32];
           _sgjOx::P64 = P64[_sgjOB::P64 + 40];
           _sgjOy::P64 = P64[_sgjOB::P64 + 48];
           I64[Hp - 32] = sat_sgjOA_info;
           P64[Hp - 16] = _sgjOt::P64;
           P64[Hp - 8] = _sgjOu::P64;
           P64[Hp] = _sgjOy::P64;
           R2 = _sgjOw::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = _sgjOx::P64;
           P64[Sp - 24] = Hp - 32;
           Sp = Sp - 40;
           call GHC.Num.+_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjOB_info" {
     sat_sgjOB_info:
         const sat_sgjOB_entry;
         const 5;
         const 15;
 },
 sat_sgjOC_entry() //  [R1, R2]
         { []
         }
     {offset
       cglvt: // global
           _sgjOy::P64 = R2;
           _sgjOC::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cglvu; else goto cglvv;
       cglvv: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cglvx; else goto cglvw;
       cglvx: // global
           HpAlloc = 56;
           goto cglvu;
       cglvu: // global
           R2 = _sgjOy::P64;
           R1 = _sgjOC::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cglvw: // global
           _sgjOt::P64 = P64[_sgjOC::P64 + 7];
           _sgjOu::P64 = P64[_sgjOC::P64 + 15];
           _sgjOw::P64 = P64[_sgjOC::P64 + 23];
           _sgjOx::P64 = P64[_sgjOC::P64 + 31];
           I64[Hp - 48] = sat_sgjOB_info;
           P64[Hp - 32] = _sgjOt::P64;
           P64[Hp - 24] = _sgjOu::P64;
           P64[Hp - 16] = _sgjOw::P64;
           P64[Hp - 8] = _sgjOx::P64;
           P64[Hp] = _sgjOy::P64;
           R2 = _sgjOt::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 48;
           Sp = Sp - 16;
           call GHC.Float.log_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjOC_info" {
     sat_sgjOC_info:
         const sat_sgjOC_entry;
         const 4;
         const 8;
         const 4294967301;
 },
 Data.Functor.Contravariant.$fFloatingOp_$clog1pexp_entry() //  [R2,
                                                                 R3]
         { []
         }
     {offset
       cglvy: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto cglvC; else goto cglvB;
       cglvC: // global
           HpAlloc = 112;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fFloatingOp_$clog1pexp_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cglvB: // global
           I64[Hp - 104] = $dFractional_sgjOv_info;
           P64[Hp - 88] = R2;
           I64[Hp - 80] = $dNum_sgjOw_info;
           P64[Hp - 64] = Hp - 104;
           I64[Hp - 56] = x_sgjOx_info;
           _cgluR::P64 = Hp - 80;
           P64[Hp - 40] = _cgluR::P64;
           I64[Hp - 32] = sat_sgjOC_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = R3;
           P64[Hp - 8] = _cgluR::P64;
           P64[Hp] = Hp - 56;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp_$clog1pexp_info" {
     Data.Functor.Contravariant.$fFloatingOp_$clog1pexp_info:
         const Data.Functor.Contravariant.$fFloatingOp_$clog1pexp_entry;
         const 0;
         const 38654705678;
         const 8589934607;
         const Sgk42_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.176518405 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp_$clog1p_closure" {
     Data.Functor.Contravariant.$fFloatingOp_$clog1p_closure:
         const Data.Functor.Contravariant.$fFloatingOp_$clog1p_info;
         const 0;
 },
 $dFractional_sgjOF_entry() //  [R1]
         { []
         }
     {offset
       cglwi: // global
           R2 = P64[R1 + 16];
           call GHC.Float.$p1Floating_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . $dFractional_sgjOF_info" {
     $dFractional_sgjOF_info:
         const $dFractional_sgjOF_entry;
         const 1;
         const 16;
 },
 $dNum_sgjOG_entry() //  [R1]
         { []
         }
     {offset
       cglwp: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cglwq; else goto cglwr;
       cglwq: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglwr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Real.$p1Fractional_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . $dNum_sgjOG_info" {
     $dNum_sgjOG_info:
         const $dNum_sgjOG_entry;
         const 1;
         const 16;
 },
 x_sgjOH_entry() //  [R1]
         { []
         }
     {offset
       cglww: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cglwx; else goto cglwy;
       cglwx: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglwy: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = lvl_rgjLr_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . x_sgjOH_info" {
     x_sgjOH_info:
         const x_sgjOH_entry;
         const 1;
         const 4294967312;
         const Sgk42_srt+32;
 },
 sat_sgjOK_entry() //  [R1]
         { []
         }
     {offset
       cglwJ: // global
           _sgjOK::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cglwK; else goto cglwL;
       cglwL: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglwN; else goto cglwM;
       cglwN: // global
           HpAlloc = 32;
           goto cglwK;
       cglwK: // global
           R1 = _sgjOK::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglwM: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sgjOK::P64;
           _sgjOE::P64 = P64[_sgjOK::P64 + 16];
           _sgjOG::P64 = P64[_sgjOK::P64 + 24];
           _sgjOH::P64 = P64[_sgjOK::P64 + 32];
           _sgjOI::P64 = P64[_sgjOK::P64 + 40];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjOE::P64;
           P64[Hp] = _sgjOI::P64;
           R2 = _sgjOG::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = _sgjOH::P64;
           P64[Sp - 24] = Hp - 24;
           Sp = Sp - 40;
           call GHC.Num.+_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjOK_info" {
     sat_sgjOK_info:
         const sat_sgjOK_entry;
         const 4;
         const 15;
 },
 sat_sgjOL_entry() //  [R1, R2]
         { []
         }
     {offset
       cglwO: // global
           _sgjOI::P64 = R2;
           _sgjOL::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cglwP; else goto cglwQ;
       cglwQ: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cglwS; else goto cglwR;
       cglwS: // global
           HpAlloc = 48;
           goto cglwP;
       cglwP: // global
           R2 = _sgjOI::P64;
           R1 = _sgjOL::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cglwR: // global
           _sgjOD::P64 = P64[_sgjOL::P64 + 7];
           _sgjOE::P64 = P64[_sgjOL::P64 + 15];
           _sgjOG::P64 = P64[_sgjOL::P64 + 23];
           _sgjOH::P64 = P64[_sgjOL::P64 + 31];
           I64[Hp - 40] = sat_sgjOK_info;
           P64[Hp - 24] = _sgjOE::P64;
           P64[Hp - 16] = _sgjOG::P64;
           P64[Hp - 8] = _sgjOH::P64;
           P64[Hp] = _sgjOI::P64;
           R2 = _sgjOD::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 40;
           Sp = Sp - 16;
           call GHC.Float.log_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjOL_info" {
     sat_sgjOL_info:
         const sat_sgjOL_entry;
         const 4;
         const 8;
         const 4294967301;
 },
 Data.Functor.Contravariant.$fFloatingOp_$clog1p_entry() //  [R2,
                                                              R3]
         { []
         }
     {offset
       cglwT: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto cglwX; else goto cglwW;
       cglwX: // global
           HpAlloc = 112;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fFloatingOp_$clog1p_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cglwW: // global
           I64[Hp - 104] = $dFractional_sgjOF_info;
           P64[Hp - 88] = R2;
           I64[Hp - 80] = $dNum_sgjOG_info;
           P64[Hp - 64] = Hp - 104;
           I64[Hp - 56] = x_sgjOH_info;
           _cglwl::P64 = Hp - 80;
           P64[Hp - 40] = _cglwl::P64;
           I64[Hp - 32] = sat_sgjOL_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = R3;
           P64[Hp - 8] = _cglwl::P64;
           P64[Hp] = Hp - 56;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp_$clog1p_info" {
     Data.Functor.Contravariant.$fFloatingOp_$clog1p_info:
         const Data.Functor.Contravariant.$fFloatingOp_$clog1p_entry;
         const 0;
         const 73014444046;
         const 8589934607;
         const Sgk42_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.189370193 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp17_closure" {
     Data.Functor.Contravariant.$fFloatingOp17_closure:
         const Data.Functor.Contravariant.$fFloatingOp17_info;
 },
 Data.Functor.Contravariant.$fFloatingOp17_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cglxv: // global
           _sgjOO::P64 = R4;
           _sgjON::P64 = R3;
           _sgjOM::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cglxw; else goto cglxx;
       cglxx: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglxz; else goto cglxy;
       cglxz: // global
           HpAlloc = 32;
           goto cglxw;
       cglxw: // global
           R4 = _sgjOO::P64;
           R3 = _sgjON::P64;
           R2 = _sgjOM::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp17_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglxy: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjON::P64;
           P64[Hp] = _sgjOO::P64;
           R2 = _sgjOM::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.exp_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp17_info" {
     Data.Functor.Contravariant.$fFloatingOp17_info:
         const Data.Functor.Contravariant.$fFloatingOp17_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.19394486 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp16_closure" {
     Data.Functor.Contravariant.$fFloatingOp16_closure:
         const Data.Functor.Contravariant.$fFloatingOp16_info;
 },
 Data.Functor.Contravariant.$fFloatingOp16_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cglxL: // global
           _sgjOS::P64 = R4;
           _sgjOR::P64 = R3;
           _sgjOQ::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cglxM; else goto cglxN;
       cglxN: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglxP; else goto cglxO;
       cglxP: // global
           HpAlloc = 32;
           goto cglxM;
       cglxM: // global
           R4 = _sgjOS::P64;
           R3 = _sgjOR::P64;
           R2 = _sgjOQ::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp16_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglxO: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjOR::P64;
           P64[Hp] = _sgjOS::P64;
           R2 = _sgjOQ::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.log_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp16_info" {
     Data.Functor.Contravariant.$fFloatingOp16_info:
         const Data.Functor.Contravariant.$fFloatingOp16_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.198129275 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp15_closure" {
     Data.Functor.Contravariant.$fFloatingOp15_closure:
         const Data.Functor.Contravariant.$fFloatingOp15_info;
 },
 Data.Functor.Contravariant.$fFloatingOp15_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgly1: // global
           _sgjOW::P64 = R4;
           _sgjOV::P64 = R3;
           _sgjOU::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cgly2; else goto cgly3;
       cgly3: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgly5; else goto cgly4;
       cgly5: // global
           HpAlloc = 32;
           goto cgly2;
       cgly2: // global
           R4 = _sgjOW::P64;
           R3 = _sgjOV::P64;
           R2 = _sgjOU::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp15_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgly4: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjOV::P64;
           P64[Hp] = _sgjOW::P64;
           R2 = _sgjOU::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.sqrt_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp15_info" {
     Data.Functor.Contravariant.$fFloatingOp15_info:
         const Data.Functor.Contravariant.$fFloatingOp15_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.202989545 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp14_closure" {
     Data.Functor.Contravariant.$fFloatingOp14_closure:
         const Data.Functor.Contravariant.$fFloatingOp14_info;
 },
 Data.Functor.Contravariant.$fFloatingOp14_entry() //  [R2, R3, R4,
                                                        R5]
         { []
         }
     {offset
       cglyi: // global
           _sgjP1::P64 = R5;
           _sgjP0::P64 = R4;
           _sgjOZ::P64 = R3;
           _sgjOY::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cglyj; else goto cglyk;
       cglyk: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cglym; else goto cglyl;
       cglym: // global
           HpAlloc = 64;
           goto cglyj;
       cglyj: // global
           R5 = _sgjP1::P64;
           R4 = _sgjP0::P64;
           R3 = _sgjOZ::P64;
           R2 = _sgjOY::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp14_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglyl: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = _sgjP0::P64;
           P64[Hp - 32] = _sgjP1::P64;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjOZ::P64;
           P64[Hp] = _sgjP1::P64;
           R2 = _sgjOY::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = Hp - 56;
           Sp = Sp - 24;
           call GHC.Float.**_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp14_info" {
     Data.Functor.Contravariant.$fFloatingOp14_info:
         const Data.Functor.Contravariant.$fFloatingOp14_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.207441031 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp13_closure" {
     Data.Functor.Contravariant.$fFloatingOp13_closure:
         const Data.Functor.Contravariant.$fFloatingOp13_info;
 },
 Data.Functor.Contravariant.$fFloatingOp13_entry() //  [R2, R3, R4,
                                                        R5]
         { []
         }
     {offset
       cglyA: // global
           _sgjP7::P64 = R5;
           _sgjP6::P64 = R4;
           _sgjP5::P64 = R3;
           _sgjP4::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cglyB; else goto cglyC;
       cglyC: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cglyE; else goto cglyD;
       cglyE: // global
           HpAlloc = 64;
           goto cglyB;
       cglyB: // global
           R5 = _sgjP7::P64;
           R4 = _sgjP6::P64;
           R3 = _sgjP5::P64;
           R2 = _sgjP4::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp13_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglyD: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = _sgjP6::P64;
           P64[Hp - 32] = _sgjP7::P64;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjP5::P64;
           P64[Hp] = _sgjP7::P64;
           R2 = _sgjP4::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = Hp - 56;
           Sp = Sp - 24;
           call GHC.Float.logBase_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp13_info" {
     Data.Functor.Contravariant.$fFloatingOp13_info:
         const Data.Functor.Contravariant.$fFloatingOp13_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.211684621 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp12_closure" {
     Data.Functor.Contravariant.$fFloatingOp12_closure:
         const Data.Functor.Contravariant.$fFloatingOp12_info;
 },
 Data.Functor.Contravariant.$fFloatingOp12_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cglyR: // global
           _sgjPc::P64 = R4;
           _sgjPb::P64 = R3;
           _sgjPa::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cglyS; else goto cglyT;
       cglyT: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglyV; else goto cglyU;
       cglyV: // global
           HpAlloc = 32;
           goto cglyS;
       cglyS: // global
           R4 = _sgjPc::P64;
           R3 = _sgjPb::P64;
           R2 = _sgjPa::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp12_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglyU: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjPb::P64;
           P64[Hp] = _sgjPc::P64;
           R2 = _sgjPa::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.sin_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp12_info" {
     Data.Functor.Contravariant.$fFloatingOp12_info:
         const Data.Functor.Contravariant.$fFloatingOp12_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.215931855 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp11_closure" {
     Data.Functor.Contravariant.$fFloatingOp11_closure:
         const Data.Functor.Contravariant.$fFloatingOp11_info;
 },
 Data.Functor.Contravariant.$fFloatingOp11_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cglz7: // global
           _sgjPg::P64 = R4;
           _sgjPf::P64 = R3;
           _sgjPe::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cglz8; else goto cglz9;
       cglz9: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglzb; else goto cglza;
       cglzb: // global
           HpAlloc = 32;
           goto cglz8;
       cglz8: // global
           R4 = _sgjPg::P64;
           R3 = _sgjPf::P64;
           R2 = _sgjPe::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp11_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglza: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjPf::P64;
           P64[Hp] = _sgjPg::P64;
           R2 = _sgjPe::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.cos_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp11_info" {
     Data.Functor.Contravariant.$fFloatingOp11_info:
         const Data.Functor.Contravariant.$fFloatingOp11_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.220741443 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp10_closure" {
     Data.Functor.Contravariant.$fFloatingOp10_closure:
         const Data.Functor.Contravariant.$fFloatingOp10_info;
 },
 Data.Functor.Contravariant.$fFloatingOp10_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cglzn: // global
           _sgjPk::P64 = R4;
           _sgjPj::P64 = R3;
           _sgjPi::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cglzo; else goto cglzp;
       cglzp: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglzr; else goto cglzq;
       cglzr: // global
           HpAlloc = 32;
           goto cglzo;
       cglzo: // global
           R4 = _sgjPk::P64;
           R3 = _sgjPj::P64;
           R2 = _sgjPi::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp10_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglzq: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjPj::P64;
           P64[Hp] = _sgjPk::P64;
           R2 = _sgjPi::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.tan_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp10_info" {
     Data.Functor.Contravariant.$fFloatingOp10_info:
         const Data.Functor.Contravariant.$fFloatingOp10_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.225219834 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp9_closure" {
     Data.Functor.Contravariant.$fFloatingOp9_closure:
         const Data.Functor.Contravariant.$fFloatingOp9_info;
 },
 Data.Functor.Contravariant.$fFloatingOp9_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cglzD: // global
           _sgjPo::P64 = R4;
           _sgjPn::P64 = R3;
           _sgjPm::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cglzE; else goto cglzF;
       cglzF: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglzH; else goto cglzG;
       cglzH: // global
           HpAlloc = 32;
           goto cglzE;
       cglzE: // global
           R4 = _sgjPo::P64;
           R3 = _sgjPn::P64;
           R2 = _sgjPm::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp9_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglzG: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjPn::P64;
           P64[Hp] = _sgjPo::P64;
           R2 = _sgjPm::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.asin_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp9_info" {
     Data.Functor.Contravariant.$fFloatingOp9_info:
         const Data.Functor.Contravariant.$fFloatingOp9_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.229827938 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp8_closure" {
     Data.Functor.Contravariant.$fFloatingOp8_closure:
         const Data.Functor.Contravariant.$fFloatingOp8_info;
 },
 Data.Functor.Contravariant.$fFloatingOp8_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cglzT: // global
           _sgjPs::P64 = R4;
           _sgjPr::P64 = R3;
           _sgjPq::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cglzU; else goto cglzV;
       cglzV: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglzX; else goto cglzW;
       cglzX: // global
           HpAlloc = 32;
           goto cglzU;
       cglzU: // global
           R4 = _sgjPs::P64;
           R3 = _sgjPr::P64;
           R2 = _sgjPq::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp8_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglzW: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjPr::P64;
           P64[Hp] = _sgjPs::P64;
           R2 = _sgjPq::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.acos_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp8_info" {
     Data.Functor.Contravariant.$fFloatingOp8_info:
         const Data.Functor.Contravariant.$fFloatingOp8_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.23418574 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp7_closure" {
     Data.Functor.Contravariant.$fFloatingOp7_closure:
         const Data.Functor.Contravariant.$fFloatingOp7_info;
 },
 Data.Functor.Contravariant.$fFloatingOp7_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cglA9: // global
           _sgjPw::P64 = R4;
           _sgjPv::P64 = R3;
           _sgjPu::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cglAa; else goto cglAb;
       cglAb: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglAd; else goto cglAc;
       cglAd: // global
           HpAlloc = 32;
           goto cglAa;
       cglAa: // global
           R4 = _sgjPw::P64;
           R3 = _sgjPv::P64;
           R2 = _sgjPu::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp7_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglAc: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjPv::P64;
           P64[Hp] = _sgjPw::P64;
           R2 = _sgjPu::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.atan_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp7_info" {
     Data.Functor.Contravariant.$fFloatingOp7_info:
         const Data.Functor.Contravariant.$fFloatingOp7_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.239305978 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp6_closure" {
     Data.Functor.Contravariant.$fFloatingOp6_closure:
         const Data.Functor.Contravariant.$fFloatingOp6_info;
 },
 Data.Functor.Contravariant.$fFloatingOp6_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cglAp: // global
           _sgjPA::P64 = R4;
           _sgjPz::P64 = R3;
           _sgjPy::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cglAq; else goto cglAr;
       cglAr: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglAt; else goto cglAs;
       cglAt: // global
           HpAlloc = 32;
           goto cglAq;
       cglAq: // global
           R4 = _sgjPA::P64;
           R3 = _sgjPz::P64;
           R2 = _sgjPy::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp6_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglAs: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjPz::P64;
           P64[Hp] = _sgjPA::P64;
           R2 = _sgjPy::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.sinh_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp6_info" {
     Data.Functor.Contravariant.$fFloatingOp6_info:
         const Data.Functor.Contravariant.$fFloatingOp6_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.24374492 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp5_closure" {
     Data.Functor.Contravariant.$fFloatingOp5_closure:
         const Data.Functor.Contravariant.$fFloatingOp5_info;
 },
 Data.Functor.Contravariant.$fFloatingOp5_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cglAF: // global
           _sgjPE::P64 = R4;
           _sgjPD::P64 = R3;
           _sgjPC::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cglAG; else goto cglAH;
       cglAH: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglAJ; else goto cglAI;
       cglAJ: // global
           HpAlloc = 32;
           goto cglAG;
       cglAG: // global
           R4 = _sgjPE::P64;
           R3 = _sgjPD::P64;
           R2 = _sgjPC::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp5_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglAI: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjPD::P64;
           P64[Hp] = _sgjPE::P64;
           R2 = _sgjPC::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.cosh_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp5_info" {
     Data.Functor.Contravariant.$fFloatingOp5_info:
         const Data.Functor.Contravariant.$fFloatingOp5_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.248012448 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp4_closure" {
     Data.Functor.Contravariant.$fFloatingOp4_closure:
         const Data.Functor.Contravariant.$fFloatingOp4_info;
 },
 Data.Functor.Contravariant.$fFloatingOp4_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cglAV: // global
           _sgjPI::P64 = R4;
           _sgjPH::P64 = R3;
           _sgjPG::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cglAW; else goto cglAX;
       cglAX: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglAZ; else goto cglAY;
       cglAZ: // global
           HpAlloc = 32;
           goto cglAW;
       cglAW: // global
           R4 = _sgjPI::P64;
           R3 = _sgjPH::P64;
           R2 = _sgjPG::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp4_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglAY: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjPH::P64;
           P64[Hp] = _sgjPI::P64;
           R2 = _sgjPG::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.tanh_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp4_info" {
     Data.Functor.Contravariant.$fFloatingOp4_info:
         const Data.Functor.Contravariant.$fFloatingOp4_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.252208936 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp3_closure" {
     Data.Functor.Contravariant.$fFloatingOp3_closure:
         const Data.Functor.Contravariant.$fFloatingOp3_info;
 },
 Data.Functor.Contravariant.$fFloatingOp3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cglBb: // global
           _sgjPM::P64 = R4;
           _sgjPL::P64 = R3;
           _sgjPK::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cglBc; else goto cglBd;
       cglBd: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglBf; else goto cglBe;
       cglBf: // global
           HpAlloc = 32;
           goto cglBc;
       cglBc: // global
           R4 = _sgjPM::P64;
           R3 = _sgjPL::P64;
           R2 = _sgjPK::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglBe: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjPL::P64;
           P64[Hp] = _sgjPM::P64;
           R2 = _sgjPK::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.asinh_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp3_info" {
     Data.Functor.Contravariant.$fFloatingOp3_info:
         const Data.Functor.Contravariant.$fFloatingOp3_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.256499808 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp2_closure" {
     Data.Functor.Contravariant.$fFloatingOp2_closure:
         const Data.Functor.Contravariant.$fFloatingOp2_info;
 },
 Data.Functor.Contravariant.$fFloatingOp2_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cglBr: // global
           _sgjPQ::P64 = R4;
           _sgjPP::P64 = R3;
           _sgjPO::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cglBs; else goto cglBt;
       cglBt: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglBv; else goto cglBu;
       cglBv: // global
           HpAlloc = 32;
           goto cglBs;
       cglBs: // global
           R4 = _sgjPQ::P64;
           R3 = _sgjPP::P64;
           R2 = _sgjPO::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglBu: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjPP::P64;
           P64[Hp] = _sgjPQ::P64;
           R2 = _sgjPO::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.acosh_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp2_info" {
     Data.Functor.Contravariant.$fFloatingOp2_info:
         const Data.Functor.Contravariant.$fFloatingOp2_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.260840824 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp1_closure" {
     Data.Functor.Contravariant.$fFloatingOp1_closure:
         const Data.Functor.Contravariant.$fFloatingOp1_info;
 },
 Data.Functor.Contravariant.$fFloatingOp1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cglBH: // global
           _sgjPU::P64 = R4;
           _sgjPT::P64 = R3;
           _sgjPS::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cglBI; else goto cglBJ;
       cglBJ: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglBL; else goto cglBK;
       cglBL: // global
           HpAlloc = 32;
           goto cglBI;
       cglBI: // global
           R4 = _sgjPU::P64;
           R3 = _sgjPT::P64;
           R2 = _sgjPS::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglBK: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjPT::P64;
           P64[Hp] = _sgjPU::P64;
           R2 = _sgjPS::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.atanh_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp1_info" {
     Data.Functor.Contravariant.$fFloatingOp1_info:
         const Data.Functor.Contravariant.$fFloatingOp1_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.265156287 UTC

[section ""data" . Data.Functor.Contravariant.$fFractionalOp2_closure" {
     Data.Functor.Contravariant.$fFractionalOp2_closure:
         const Data.Functor.Contravariant.$fFractionalOp2_info;
 },
 Data.Functor.Contravariant.$fFractionalOp2_entry() //  [R2, R3, R4,
                                                         R5]
         { []
         }
     {offset
       cglBY: // global
           _sgjPZ::P64 = R5;
           _sgjPY::P64 = R4;
           _sgjPX::P64 = R3;
           _sgjPW::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cglBZ; else goto cglC0;
       cglC0: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cglC2; else goto cglC1;
       cglC2: // global
           HpAlloc = 64;
           goto cglBZ;
       cglBZ: // global
           R5 = _sgjPZ::P64;
           R4 = _sgjPY::P64;
           R3 = _sgjPX::P64;
           R2 = _sgjPW::P64;
           R1 = Data.Functor.Contravariant.$fFractionalOp2_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglC1: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = _sgjPY::P64;
           P64[Hp - 32] = _sgjPZ::P64;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjPX::P64;
           P64[Hp] = _sgjPZ::P64;
           R2 = _sgjPW::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = Hp - 56;
           Sp = Sp - 24;
           call GHC.Real./_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFractionalOp2_info" {
     Data.Functor.Contravariant.$fFractionalOp2_info:
         const Data.Functor.Contravariant.$fFractionalOp2_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.269823483 UTC

[section ""data" . Data.Functor.Contravariant.$fFractionalOp1_closure" {
     Data.Functor.Contravariant.$fFractionalOp1_closure:
         const Data.Functor.Contravariant.$fFractionalOp1_info;
 },
 Data.Functor.Contravariant.$fFractionalOp1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cglCf: // global
           _sgjQ4::P64 = R4;
           _sgjQ3::P64 = R3;
           _sgjQ2::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cglCg; else goto cglCh;
       cglCh: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglCj; else goto cglCi;
       cglCj: // global
           HpAlloc = 32;
           goto cglCg;
       cglCg: // global
           R4 = _sgjQ4::P64;
           R3 = _sgjQ3::P64;
           R2 = _sgjQ2::P64;
           R1 = Data.Functor.Contravariant.$fFractionalOp1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglCi: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjQ3::P64;
           P64[Hp] = _sgjQ4::P64;
           R2 = _sgjQ2::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Real.recip_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFractionalOp1_info" {
     Data.Functor.Contravariant.$fFractionalOp1_info:
         const Data.Functor.Contravariant.$fFractionalOp1_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.274667256 UTC

[section ""data" . Data.Functor.Contravariant.$fFractionalOp_$cfromRational_closure" {
     Data.Functor.Contravariant.$fFractionalOp_$cfromRational_closure:
         const Data.Functor.Contravariant.$fFractionalOp_$cfromRational_info;
 },
 x_sgjQ8_entry() //  [R1]
         { []
         }
     {offset
       cglCy: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cglCz; else goto cglCA;
       cglCz: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglCA: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call GHC.Real.fromRational_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . x_sgjQ8_info" {
     x_sgjQ8_info:
         const x_sgjQ8_entry;
         const 2;
         const 18;
 },
 sat_sgjQa_entry() //  [R1]
         { []
         }
     {offset
       cglCG: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjQa_info" {
     sat_sgjQa_info:
         const sat_sgjQa_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Data.Functor.Contravariant.$fFractionalOp_$cfromRational_entry() //  [R2,
                                                                       R3]
         { []
         }
     {offset
       cglCJ: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cglCN; else goto cglCM;
       cglCN: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fFractionalOp_$cfromRational_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cglCM: // global
           I64[Hp - 40] = x_sgjQ8_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = R3;
           I64[Hp - 8] = sat_sgjQa_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFractionalOp_$cfromRational_info" {
     Data.Functor.Contravariant.$fFractionalOp_$cfromRational_info:
         const Data.Functor.Contravariant.$fFractionalOp_$cfromRational_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.283085549 UTC

[section ""data" . Data.Functor.Contravariant.$fNumOp_$cnegate_closure" {
     Data.Functor.Contravariant.$fNumOp_$cnegate_closure:
         const Data.Functor.Contravariant.$fNumOp_$cnegate_info;
         const 0;
 },
 x_sgjQd_entry() //  [R1]
         { []
         }
     {offset
       cglDa: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cglDb; else goto cglDc;
       cglDb: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglDc: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = lvl1_rgjLs_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . x_sgjQd_info" {
     x_sgjQd_info:
         const x_sgjQd_entry;
         const 1;
         const 4294967312;
         const Sgk42_srt+24;
 },
 sat_sgjQg_entry() //  [R1, R2]
         { []
         }
     {offset
       cglDj: // global
           _sgjQe::P64 = R2;
           _sgjQg::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto cglDk; else goto cglDl;
       cglDl: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglDn; else goto cglDm;
       cglDn: // global
           HpAlloc = 32;
           goto cglDk;
       cglDk: // global
           R2 = _sgjQe::P64;
           R1 = _sgjQg::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cglDm: // global
           _sgjQb::P64 = P64[_sgjQg::P64 + 7];
           _sgjQc::P64 = P64[_sgjQg::P64 + 15];
           _sgjQd::P64 = P64[_sgjQg::P64 + 23];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjQc::P64;
           P64[Hp] = _sgjQe::P64;
           R2 = _sgjQb::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _sgjQd::P64;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 24;
           call GHC.Num.-_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjQg_info" {
     sat_sgjQg_info:
         const sat_sgjQg_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 Data.Functor.Contravariant.$fNumOp_$cnegate_entry() //  [R2, R3]
         { []
         }
     {offset
       cglDo: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cglDs; else goto cglDr;
       cglDs: // global
           HpAlloc = 56;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fNumOp_$cnegate_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cglDr: // global
           I64[Hp - 48] = x_sgjQd_info;
           P64[Hp - 32] = R2;
           I64[Hp - 24] = sat_sgjQg_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R3;
           P64[Hp] = Hp - 48;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fNumOp_$cnegate_info" {
     Data.Functor.Contravariant.$fNumOp_$cnegate_info:
         const Data.Functor.Contravariant.$fNumOp_$cnegate_entry;
         const 0;
         const 279172874254;
         const 8589934607;
         const Sgk42_srt+24;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.291216415 UTC

[section ""data" . Data.Functor.Contravariant.$fNumOp5_closure" {
     Data.Functor.Contravariant.$fNumOp5_closure:
         const Data.Functor.Contravariant.$fNumOp5_info;
 },
 Data.Functor.Contravariant.$fNumOp5_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       cglDO: // global
           _sgjQk::P64 = R5;
           _sgjQj::P64 = R4;
           _sgjQi::P64 = R3;
           _sgjQh::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cglDP; else goto cglDQ;
       cglDQ: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cglDS; else goto cglDR;
       cglDS: // global
           HpAlloc = 64;
           goto cglDP;
       cglDP: // global
           R5 = _sgjQk::P64;
           R4 = _sgjQj::P64;
           R3 = _sgjQi::P64;
           R2 = _sgjQh::P64;
           R1 = Data.Functor.Contravariant.$fNumOp5_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglDR: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = _sgjQj::P64;
           P64[Hp - 32] = _sgjQk::P64;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjQi::P64;
           P64[Hp] = _sgjQk::P64;
           R2 = _sgjQh::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = Hp - 56;
           Sp = Sp - 24;
           call GHC.Num.+_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fNumOp5_info" {
     Data.Functor.Contravariant.$fNumOp5_info:
         const Data.Functor.Contravariant.$fNumOp5_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.295430284 UTC

[section ""data" . Data.Functor.Contravariant.$fNumOp4_closure" {
     Data.Functor.Contravariant.$fNumOp4_closure:
         const Data.Functor.Contravariant.$fNumOp4_info;
 },
 Data.Functor.Contravariant.$fNumOp4_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       cglE6: // global
           _sgjQq::P64 = R5;
           _sgjQp::P64 = R4;
           _sgjQo::P64 = R3;
           _sgjQn::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cglE7; else goto cglE8;
       cglE8: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cglEa; else goto cglE9;
       cglEa: // global
           HpAlloc = 64;
           goto cglE7;
       cglE7: // global
           R5 = _sgjQq::P64;
           R4 = _sgjQp::P64;
           R3 = _sgjQo::P64;
           R2 = _sgjQn::P64;
           R1 = Data.Functor.Contravariant.$fNumOp4_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglE9: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = _sgjQp::P64;
           P64[Hp - 32] = _sgjQq::P64;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjQo::P64;
           P64[Hp] = _sgjQq::P64;
           R2 = _sgjQn::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = Hp - 56;
           Sp = Sp - 24;
           call GHC.Num.-_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fNumOp4_info" {
     Data.Functor.Contravariant.$fNumOp4_info:
         const Data.Functor.Contravariant.$fNumOp4_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.299812306 UTC

[section ""data" . Data.Functor.Contravariant.$fNumOp3_closure" {
     Data.Functor.Contravariant.$fNumOp3_closure:
         const Data.Functor.Contravariant.$fNumOp3_info;
 },
 Data.Functor.Contravariant.$fNumOp3_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       cglEo: // global
           _sgjQw::P64 = R5;
           _sgjQv::P64 = R4;
           _sgjQu::P64 = R3;
           _sgjQt::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cglEp; else goto cglEq;
       cglEq: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cglEs; else goto cglEr;
       cglEs: // global
           HpAlloc = 64;
           goto cglEp;
       cglEp: // global
           R5 = _sgjQw::P64;
           R4 = _sgjQv::P64;
           R3 = _sgjQu::P64;
           R2 = _sgjQt::P64;
           R1 = Data.Functor.Contravariant.$fNumOp3_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglEr: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = _sgjQv::P64;
           P64[Hp - 32] = _sgjQw::P64;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjQu::P64;
           P64[Hp] = _sgjQw::P64;
           R2 = _sgjQt::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = Hp - 56;
           Sp = Sp - 24;
           call GHC.Num.*_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fNumOp3_info" {
     Data.Functor.Contravariant.$fNumOp3_info:
         const Data.Functor.Contravariant.$fNumOp3_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.304352472 UTC

[section ""data" . Data.Functor.Contravariant.$fNumOp2_closure" {
     Data.Functor.Contravariant.$fNumOp2_closure:
         const Data.Functor.Contravariant.$fNumOp2_info;
 },
 Data.Functor.Contravariant.$fNumOp2_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cglEF: // global
           _sgjQB::P64 = R4;
           _sgjQA::P64 = R3;
           _sgjQz::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cglEG; else goto cglEH;
       cglEH: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglEJ; else goto cglEI;
       cglEJ: // global
           HpAlloc = 32;
           goto cglEG;
       cglEG: // global
           R4 = _sgjQB::P64;
           R3 = _sgjQA::P64;
           R2 = _sgjQz::P64;
           R1 = Data.Functor.Contravariant.$fNumOp2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglEI: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjQA::P64;
           P64[Hp] = _sgjQB::P64;
           R2 = _sgjQz::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Num.abs_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fNumOp2_info" {
     Data.Functor.Contravariant.$fNumOp2_info:
         const Data.Functor.Contravariant.$fNumOp2_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.308432802 UTC

[section ""data" . Data.Functor.Contravariant.$fNumOp1_closure" {
     Data.Functor.Contravariant.$fNumOp1_closure:
         const Data.Functor.Contravariant.$fNumOp1_info;
 },
 Data.Functor.Contravariant.$fNumOp1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cglEV: // global
           _sgjQF::P64 = R4;
           _sgjQE::P64 = R3;
           _sgjQD::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cglEW; else goto cglEX;
       cglEX: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglEZ; else goto cglEY;
       cglEZ: // global
           HpAlloc = 32;
           goto cglEW;
       cglEW: // global
           R4 = _sgjQF::P64;
           R3 = _sgjQE::P64;
           R2 = _sgjQD::P64;
           R1 = Data.Functor.Contravariant.$fNumOp1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglEY: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjQE::P64;
           P64[Hp] = _sgjQF::P64;
           R2 = _sgjQD::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Num.signum_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fNumOp1_info" {
     Data.Functor.Contravariant.$fNumOp1_info:
         const Data.Functor.Contravariant.$fNumOp1_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.313069332 UTC

[section ""data" . Data.Functor.Contravariant.$fNumOp_$cfromInteger_closure" {
     Data.Functor.Contravariant.$fNumOp_$cfromInteger_closure:
         const Data.Functor.Contravariant.$fNumOp_$cfromInteger_info;
 },
 x_sgjQJ_entry() //  [R1]
         { []
         }
     {offset
       cglFe: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cglFf; else goto cglFg;
       cglFf: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglFg: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . x_sgjQJ_info" {
     x_sgjQJ_info:
         const x_sgjQJ_entry;
         const 2;
         const 18;
 },
 sat_sgjQL_entry() //  [R1]
         { []
         }
     {offset
       cglFm: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjQL_info" {
     sat_sgjQL_info:
         const sat_sgjQL_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Data.Functor.Contravariant.$fNumOp_$cfromInteger_entry() //  [R2,
                                                               R3]
         { []
         }
     {offset
       cglFp: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cglFt; else goto cglFs;
       cglFt: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fNumOp_$cfromInteger_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cglFs: // global
           I64[Hp - 40] = x_sgjQJ_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = R3;
           I64[Hp - 8] = sat_sgjQL_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fNumOp_$cfromInteger_info" {
     Data.Functor.Contravariant.$fNumOp_$cfromInteger_info:
         const Data.Functor.Contravariant.$fNumOp_$cfromInteger_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.322978441 UTC

[section ""data" . Data.Functor.Contravariant.$fNumOp_closure" {
     Data.Functor.Contravariant.$fNumOp_closure:
         const Data.Functor.Contravariant.$fNumOp_info;
         const 0;
 },
 sat_sgjQT_entry() //  [R1, R2]
         { []
         }
     {offset
       cglFR: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Functor.Contravariant.$fNumOp_$cfromInteger_entry(R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjQT_info" {
     sat_sgjQT_info:
         const sat_sgjQT_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sgjQS_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglFZ: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fNumOp1_entry(R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjQS_info" {
     sat_sgjQS_info:
         const sat_sgjQS_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgjQR_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglG7: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fNumOp2_entry(R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjQR_info" {
     sat_sgjQR_info:
         const sat_sgjQR_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgjQQ_entry() //  [R1, R2]
         { []
         }
     {offset
       cglGf: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Functor.Contravariant.$fNumOp_$cnegate_entry(R3,
                                                                  R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjQQ_info" {
     sat_sgjQQ_info:
         const sat_sgjQQ_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const Sgk42_srt+72;
 },
 sat_sgjQP_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cglGn: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Data.Functor.Contravariant.$fNumOp3_entry(R5,
                                                          R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjQP_info" {
     sat_sgjQP_info:
         const sat_sgjQP_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 sat_sgjQO_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cglGv: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Data.Functor.Contravariant.$fNumOp4_entry(R5,
                                                          R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjQO_info" {
     sat_sgjQO_info:
         const sat_sgjQO_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 sat_sgjQN_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cglGD: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Data.Functor.Contravariant.$fNumOp5_entry(R5,
                                                          R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjQN_info" {
     sat_sgjQN_info:
         const sat_sgjQN_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 Data.Functor.Contravariant.$fNumOp_entry() //  [R2]
         { []
         }
     {offset
       cglGH: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto cglGL; else goto cglGK;
       cglGL: // global
           HpAlloc = 176;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fNumOp_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cglGK: // global
           I64[Hp - 168] = sat_sgjQT_info;
           P64[Hp - 160] = R2;
           I64[Hp - 152] = sat_sgjQS_info;
           P64[Hp - 144] = R2;
           I64[Hp - 136] = sat_sgjQR_info;
           P64[Hp - 128] = R2;
           I64[Hp - 120] = sat_sgjQQ_info;
           P64[Hp - 112] = R2;
           I64[Hp - 104] = sat_sgjQP_info;
           P64[Hp - 96] = R2;
           I64[Hp - 88] = sat_sgjQO_info;
           P64[Hp - 80] = R2;
           I64[Hp - 72] = sat_sgjQN_info;
           P64[Hp - 64] = R2;
           I64[Hp - 56] = GHC.Num.C:Num_con_info;
           P64[Hp - 48] = Hp - 69;
           P64[Hp - 40] = Hp - 85;
           P64[Hp - 32] = Hp - 101;
           P64[Hp - 24] = Hp - 119;
           P64[Hp - 16] = Hp - 134;
           P64[Hp - 8] = Hp - 150;
           P64[Hp] = Hp - 167;
           R1 = Hp - 55;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fNumOp_info" {
     Data.Functor.Contravariant.$fNumOp_info:
         const Data.Functor.Contravariant.$fNumOp_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const Sgk42_srt+72;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.337622703 UTC

[section ""data" . Data.Functor.Contravariant.$fFractionalOp_$cp1Fractional_closure" {
     Data.Functor.Contravariant.$fFractionalOp_$cp1Fractional_closure:
         const Data.Functor.Contravariant.$fFractionalOp_$cp1Fractional_info;
         const 0;
 },
 sat_sgjQV_entry() //  [R1]
         { []
         }
     {offset
       cglHr: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cglHs; else goto cglHt;
       cglHs: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglHt: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Real.$p1Fractional_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjQV_info" {
     sat_sgjQV_info:
         const sat_sgjQV_entry;
         const 1;
         const 16;
 },
 Data.Functor.Contravariant.$fFractionalOp_$cp1Fractional_entry() //  [R2]
         { []
         }
     {offset
       cglHu: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cglHy; else goto cglHx;
       cglHy: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fFractionalOp_$cp1Fractional_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cglHx: // global
           I64[Hp - 16] = sat_sgjQV_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           call Data.Functor.Contravariant.$fNumOp_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFractionalOp_$cp1Fractional_info" {
     Data.Functor.Contravariant.$fFractionalOp_$cp1Fractional_info:
         const Data.Functor.Contravariant.$fFractionalOp_$cp1Fractional_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const Sgk42_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.344115336 UTC

[section ""data" . Data.Functor.Contravariant.$fFractionalOp_closure" {
     Data.Functor.Contravariant.$fFractionalOp_closure:
         const Data.Functor.Contravariant.$fFractionalOp_info;
         const 0;
 },
 sat_sgjR0_entry() //  [R1, R2]
         { []
         }
     {offset
       cglHQ: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Functor.Contravariant.$fFractionalOp_$cfromRational_entry(R3,
                                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjR0_info" {
     sat_sgjR0_info:
         const sat_sgjR0_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sgjQZ_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglHY: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFractionalOp1_entry(R4,
                                                                 R3,
                                                                 R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjQZ_info" {
     sat_sgjQZ_info:
         const sat_sgjQZ_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgjQY_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cglI6: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Data.Functor.Contravariant.$fFractionalOp2_entry(R5,
                                                                 R4,
                                                                 R3,
                                                                 R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjQY_info" {
     sat_sgjQY_info:
         const sat_sgjQY_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 sat_sgjQX_entry() //  [R1]
         { []
         }
     {offset
       cglId: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cglIe; else goto cglIf;
       cglIe: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglIf: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Functor.Contravariant.$fFractionalOp_$cp1Fractional_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjQX_info" {
     sat_sgjQX_info:
         const sat_sgjQX_entry;
         const 1;
         const 4294967312;
         const Sgk42_srt+88;
 },
 Data.Functor.Contravariant.$fFractionalOp_entry() //  [R2]
         { []
         }
     {offset
       cglIh: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto cglIl; else goto cglIk;
       cglIl: // global
           HpAlloc = 112;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fFractionalOp_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cglIk: // global
           I64[Hp - 104] = sat_sgjR0_info;
           P64[Hp - 96] = R2;
           I64[Hp - 88] = sat_sgjQZ_info;
           P64[Hp - 80] = R2;
           I64[Hp - 72] = sat_sgjQY_info;
           P64[Hp - 64] = R2;
           I64[Hp - 56] = sat_sgjQX_info;
           P64[Hp - 40] = R2;
           I64[Hp - 32] = GHC.Real.C:Fractional_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 69;
           P64[Hp - 8] = Hp - 86;
           P64[Hp] = Hp - 103;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFractionalOp_info" {
     Data.Functor.Contravariant.$fFractionalOp_info:
         const Data.Functor.Contravariant.$fFractionalOp_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const Sgk42_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.354818158 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp_$cp1Floating_closure" {
     Data.Functor.Contravariant.$fFloatingOp_$cp1Floating_closure:
         const Data.Functor.Contravariant.$fFloatingOp_$cp1Floating_info;
         const 0;
 },
 sat_sgjR2_entry() //  [R1]
         { []
         }
     {offset
       cglIQ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cglIR; else goto cglIS;
       cglIR: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglIS: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Float.$p1Floating_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjR2_info" {
     sat_sgjR2_info:
         const sat_sgjR2_entry;
         const 1;
         const 16;
 },
 Data.Functor.Contravariant.$fFloatingOp_$cp1Floating_entry() //  [R2]
         { []
         }
     {offset
       cglIT: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cglIX; else goto cglIW;
       cglIX: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fFloatingOp_$cp1Floating_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cglIW: // global
           I64[Hp - 16] = sat_sgjR2_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           call Data.Functor.Contravariant.$fFractionalOp_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp_$cp1Floating_info" {
     Data.Functor.Contravariant.$fFloatingOp_$cp1Floating_info:
         const Data.Functor.Contravariant.$fFloatingOp_$cp1Floating_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const Sgk42_srt+96;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.368180687 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp_closure" {
     Data.Functor.Contravariant.$fFloatingOp_closure:
         const Data.Functor.Contravariant.$fFloatingOp_info;
         const 0;
 },
 lvl7_sgjR4_entry() //  [R1]
         { []
         }
     {offset
       cglJe: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cglJf; else goto cglJg;
       cglJf: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglJg: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Float.pi_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl7_sgjR4_info" {
     lvl7_sgjR4_info:
         const lvl7_sgjR4_entry;
         const 1;
         const 16;
 },
 sat_sgjRs_entry() //  [R1, R2]
         { []
         }
     {offset
       cglJm: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Functor.Contravariant.$fFloatingOp_$clog1mexp_entry(R3,
                                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjRs_info" {
     sat_sgjRs_info:
         const sat_sgjRs_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const Sgk42_srt+40;
 },
 sat_sgjRr_entry() //  [R1, R2]
         { []
         }
     {offset
       cglJu: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Functor.Contravariant.$fFloatingOp_$clog1pexp_entry(R3,
                                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjRr_info" {
     sat_sgjRr_info:
         const sat_sgjRr_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const Sgk42_srt+56;
 },
 sat_sgjRq_entry() //  [R1, R2]
         { []
         }
     {offset
       cglJC: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Functor.Contravariant.$fFloatingOp_$cexpm1_entry(R3,
                                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjRq_info" {
     sat_sgjRq_info:
         const sat_sgjRq_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const Sgk42_srt+48;
 },
 sat_sgjRp_entry() //  [R1, R2]
         { []
         }
     {offset
       cglJK: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Functor.Contravariant.$fFloatingOp_$clog1p_entry(R3,
                                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjRp_info" {
     sat_sgjRp_info:
         const sat_sgjRp_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const Sgk42_srt+64;
 },
 sat_sgjRo_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglJS: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp1_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjRo_info" {
     sat_sgjRo_info:
         const sat_sgjRo_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgjRn_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglK0: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjRn_info" {
     sat_sgjRn_info:
         const sat_sgjRn_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgjRm_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglK8: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp3_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjRm_info" {
     sat_sgjRm_info:
         const sat_sgjRm_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgjRl_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglKg: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp4_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjRl_info" {
     sat_sgjRl_info:
         const sat_sgjRl_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgjRk_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglKo: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp5_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjRk_info" {
     sat_sgjRk_info:
         const sat_sgjRk_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgjRj_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglKw: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp6_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjRj_info" {
     sat_sgjRj_info:
         const sat_sgjRj_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgjRi_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglKE: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp7_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjRi_info" {
     sat_sgjRi_info:
         const sat_sgjRi_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgjRh_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglKM: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp8_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjRh_info" {
     sat_sgjRh_info:
         const sat_sgjRh_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgjRg_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglKU: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp9_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjRg_info" {
     sat_sgjRg_info:
         const sat_sgjRg_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgjRf_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglL2: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp10_entry(R4,
                                                                R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjRf_info" {
     sat_sgjRf_info:
         const sat_sgjRf_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgjRe_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglLa: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp11_entry(R4,
                                                                R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjRe_info" {
     sat_sgjRe_info:
         const sat_sgjRe_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgjRd_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglLi: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp12_entry(R4,
                                                                R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjRd_info" {
     sat_sgjRd_info:
         const sat_sgjRd_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgjRc_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cglLq: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Data.Functor.Contravariant.$fFloatingOp13_entry(R5,
                                                                R4,
                                                                R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjRc_info" {
     sat_sgjRc_info:
         const sat_sgjRc_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 sat_sgjRb_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cglLy: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Data.Functor.Contravariant.$fFloatingOp14_entry(R5,
                                                                R4,
                                                                R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjRb_info" {
     sat_sgjRb_info:
         const sat_sgjRb_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 sat_sgjRa_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglLG: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp15_entry(R4,
                                                                R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjRa_info" {
     sat_sgjRa_info:
         const sat_sgjRa_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgjR9_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglLO: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp16_entry(R4,
                                                                R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjR9_info" {
     sat_sgjR9_info:
         const sat_sgjR9_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgjR8_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglLW: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp17_entry(R4,
                                                                R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjR8_info" {
     sat_sgjR8_info:
         const sat_sgjR8_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgjR7_entry() //  [R1]
         { []
         }
     {offset
       cglM4: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjR7_info" {
     sat_sgjR7_info:
         const sat_sgjR7_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sgjR5_entry() //  [R1]
         { []
         }
     {offset
       cglMb: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cglMc; else goto cglMd;
       cglMc: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglMd: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Functor.Contravariant.$fFloatingOp_$cp1Floating_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjR5_info" {
     sat_sgjR5_info:
         const sat_sgjR5_entry;
         const 1;
         const 4294967312;
         const Sgk42_srt+104;
 },
 Data.Functor.Contravariant.$fFloatingOp_entry() //  [R2]
         { []
         }
     {offset
       cglMf: // global
           Hp = Hp + 592;
           if (Hp > HpLim) (likely: False) goto cglMj; else goto cglMi;
       cglMj: // global
           HpAlloc = 592;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fFloatingOp_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cglMi: // global
           I64[Hp - 584] = lvl7_sgjR4_info;
           P64[Hp - 568] = R2;
           I64[Hp - 560] = sat_sgjRs_info;
           P64[Hp - 552] = R2;
           I64[Hp - 544] = sat_sgjRr_info;
           P64[Hp - 536] = R2;
           I64[Hp - 528] = sat_sgjRq_info;
           P64[Hp - 520] = R2;
           I64[Hp - 512] = sat_sgjRp_info;
           P64[Hp - 504] = R2;
           I64[Hp - 496] = sat_sgjRo_info;
           P64[Hp - 488] = R2;
           I64[Hp - 480] = sat_sgjRn_info;
           P64[Hp - 472] = R2;
           I64[Hp - 464] = sat_sgjRm_info;
           P64[Hp - 456] = R2;
           I64[Hp - 448] = sat_sgjRl_info;
           P64[Hp - 440] = R2;
           I64[Hp - 432] = sat_sgjRk_info;
           P64[Hp - 424] = R2;
           I64[Hp - 416] = sat_sgjRj_info;
           P64[Hp - 408] = R2;
           I64[Hp - 400] = sat_sgjRi_info;
           P64[Hp - 392] = R2;
           I64[Hp - 384] = sat_sgjRh_info;
           P64[Hp - 376] = R2;
           I64[Hp - 368] = sat_sgjRg_info;
           P64[Hp - 360] = R2;
           I64[Hp - 352] = sat_sgjRf_info;
           P64[Hp - 344] = R2;
           I64[Hp - 336] = sat_sgjRe_info;
           P64[Hp - 328] = R2;
           I64[Hp - 320] = sat_sgjRd_info;
           P64[Hp - 312] = R2;
           I64[Hp - 304] = sat_sgjRc_info;
           P64[Hp - 296] = R2;
           I64[Hp - 288] = sat_sgjRb_info;
           P64[Hp - 280] = R2;
           I64[Hp - 272] = sat_sgjRa_info;
           P64[Hp - 264] = R2;
           I64[Hp - 256] = sat_sgjR9_info;
           P64[Hp - 248] = R2;
           I64[Hp - 240] = sat_sgjR8_info;
           P64[Hp - 232] = R2;
           I64[Hp - 224] = sat_sgjR7_info;
           P64[Hp - 216] = Hp - 584;
           I64[Hp - 208] = sat_sgjR5_info;
           P64[Hp - 192] = R2;
           I64[Hp - 184] = GHC.Float.C:Floating_con_info;
           P64[Hp - 176] = Hp - 208;
           P64[Hp - 168] = Hp - 223;
           P64[Hp - 160] = Hp - 238;
           P64[Hp - 152] = Hp - 254;
           P64[Hp - 144] = Hp - 270;
           P64[Hp - 136] = Hp - 285;
           P64[Hp - 128] = Hp - 301;
           P64[Hp - 120] = Hp - 318;
           P64[Hp - 112] = Hp - 334;
           P64[Hp - 104] = Hp - 350;
           P64[Hp - 96] = Hp - 366;
           P64[Hp - 88] = Hp - 382;
           P64[Hp - 80] = Hp - 398;
           P64[Hp - 72] = Hp - 414;
           P64[Hp - 64] = Hp - 430;
           P64[Hp - 56] = Hp - 446;
           P64[Hp - 48] = Hp - 462;
           P64[Hp - 40] = Hp - 478;
           P64[Hp - 32] = Hp - 494;
           P64[Hp - 24] = Hp - 511;
           P64[Hp - 16] = Hp - 527;
           P64[Hp - 8] = Hp - 543;
           P64[Hp] = Hp - 559;
           R1 = Hp - 183;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp_info" {
     Data.Functor.Contravariant.$fFloatingOp_info:
         const Data.Functor.Contravariant.$fFloatingOp_entry;
         const 0;
         const 3362959392782;
         const 4294967301;
         const Sgk42_srt+40;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.407673315 UTC

[section ""data" . Data.Functor.Contravariant.$fCategoryTYPEOp1_closure" {
     Data.Functor.Contravariant.$fCategoryTYPEOp1_closure:
         const Data.Functor.Contravariant.$fCategoryTYPEOp1_info;
 },
 Data.Functor.Contravariant.$fCategoryTYPEOp1_entry() //  [R2, R3,
                                                           R4]
         { []
         }
     {offset
       cglO3: // global
           R4 = R4;
           _sgjRu::P64 = R3;
           R3 = R2;
           R2 = _sgjRu::P64;
           call GHC.Base.._entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fCategoryTYPEOp1_info" {
     Data.Functor.Contravariant.$fCategoryTYPEOp1_info:
         const Data.Functor.Contravariant.$fCategoryTYPEOp1_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.411232912 UTC

[section ""data" . Data.Functor.Contravariant.$fCategoryTYPEOp_closure" {
     Data.Functor.Contravariant.$fCategoryTYPEOp_closure:
         const Control.Category.C:Category_con_info;
         const GHC.Base.id_closure+1;
         const Data.Functor.Contravariant.$fCategoryTYPEOp1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.413279705 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidEquivalence3_closure" {
     Data.Functor.Contravariant.$fMonoidEquivalence3_closure:
         const Data.Functor.Contravariant.$fMonoidEquivalence3_info;
 },
 Data.Functor.Contravariant.$fMonoidEquivalence3_entry() //  []
         { []
         }
     {offset
       cglOf: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fMonoidEquivalence3_info" {
     Data.Functor.Contravariant.$fMonoidEquivalence3_info:
         const Data.Functor.Contravariant.$fMonoidEquivalence3_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.418914978 UTC

[section ""data" . Data.Functor.Contravariant.$fSemigroupEquivalence1_closure" {
     Data.Functor.Contravariant.$fSemigroupEquivalence1_closure:
         const Data.Functor.Contravariant.$fSemigroupEquivalence1_info;
 },
 ds_sgjRC_entry() //  [R1]
         { []
         }
     {offset
       cglOB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cglOC; else goto cglOD;
       cglOC: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglOD: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Functor.Contravariant.$fSemigroupEquivalence1_entry(R3,
                                                                         R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds_sgjRC_info" {
     ds_sgjRC_info:
         const ds_sgjRC_entry;
         const 2;
         const 18;
 },
 sat_sgjRG_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglOP: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cglOQ; else goto cglOR;
       cglOQ: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cglOR: // global
           I64[Sp - 32] = block_cglOJ_info;
           _sgjRE::P64 = R3;
           R3 = R3;
           _sgjRD::P64 = R2;
           R2 = R2;
           _sgjRC::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp - 24] = _sgjRC::P64;
           P64[Sp - 16] = _sgjRD::P64;
           P64[Sp - 8] = _sgjRE::P64;
           Sp = Sp - 32;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjRG_info" {
     sat_sgjRG_info:
         const sat_sgjRG_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 _cglOJ() //  [R1]
         { []
         }
     {offset
       cglOJ: // global
           if (R1 & 7 == 1) goto cglOM; else goto cglON;
       cglOM: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cglON: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 16];
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cglOJ_info" {
     block_cglOJ_info:
         const _cglOJ;
         const 3;
         const 30;
 },
 Data.Functor.Contravariant.$fSemigroupEquivalence1_entry() //  [R2,
                                                                 R3]
         { []
         }
     {offset
       cglP2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cglP3; else goto cglP4;
       cglP3: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fSemigroupEquivalence1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cglP4: // global
           I64[Sp - 16] = block_cglOr_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto uglPa; else goto cglOs;
       uglPa: // global
           call _cglOr(R1) args: 0, res: 0, upd: 0;
       cglOs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fSemigroupEquivalence1_info" {
     Data.Functor.Contravariant.$fSemigroupEquivalence1_info:
         const Data.Functor.Contravariant.$fSemigroupEquivalence1_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _cglOr() //  [R1]
         { []
         }
     {offset
       cglOr: // global
           _sgjRx::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto cglOZ; else goto cglP0;
       cglOZ: // global
           R1 = _sgjRx::P64;
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       cglP0: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cglP9; else goto cglP8;
       cglP9: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cglP8: // global
           _sgjRA::P64 = P64[R1 + 6];
           _sgjRB::P64 = P64[R1 + 14];
           I64[Hp - 48] = ds_sgjRC_info;
           P64[Hp - 32] = _sgjRA::P64;
           P64[Hp - 24] = _sgjRB::P64;
           I64[Hp - 16] = sat_sgjRG_info;
           P64[Hp - 8] = _sgjRx::P64;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cglOr_info" {
     block_cglOr_info:
         const _cglOr;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.430514692 UTC

[section ""data" . Data.Functor.Contravariant.$fSemigroupEquivalence_$csconcat_closure" {
     Data.Functor.Contravariant.$fSemigroupEquivalence_$csconcat_closure:
         const Data.Functor.Contravariant.$fSemigroupEquivalence_$csconcat_info;
 },
 Data.Functor.Contravariant.$fSemigroupEquivalence_$csconcat_entry() //  [R2]
         { []
         }
     {offset
       cglPJ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cglPK; else goto cglPL;
       cglPK: // global
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fSemigroupEquivalence_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cglPL: // global
           I64[Sp - 8] = block_cglPG_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uglPP; else goto cglPH;
       uglPP: // global
           call _cglPG(R1) args: 0, res: 0, upd: 0;
       cglPH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fSemigroupEquivalence_$csconcat_info" {
     Data.Functor.Contravariant.$fSemigroupEquivalence_$csconcat_info:
         const Data.Functor.Contravariant.$fSemigroupEquivalence_$csconcat_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cglPG() //  [R1]
         { []
         }
     {offset
       cglPG: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call Data.Functor.Contravariant.$fSemigroupEquivalence1_entry(R3,
                                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cglPG_info" {
     block_cglPG_info:
         const _cglPG;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.436199017 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidEquivalence2_closure" {
     Data.Functor.Contravariant.$fMonoidEquivalence2_closure:
         const Data.Functor.Contravariant.$fMonoidEquivalence2_info;
 },
 Data.Functor.Contravariant.$fMonoidEquivalence2_entry() //  [R2,
                                                              R3, R4, R5]
         { []
         }
     {offset
       cglQ9: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cglQa; else goto cglQb;
       cglQa: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fMonoidEquivalence2_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglQb: // global
           I64[Sp - 32] = block_cglQ3_info;
           _sgjRM::P64 = R3;
           R3 = R5;
           _sgjRL::P64 = R2;
           R2 = R4;
           R1 = _sgjRL::P64;
           P64[Sp - 24] = _sgjRM::P64;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fMonoidEquivalence2_info" {
     Data.Functor.Contravariant.$fMonoidEquivalence2_info:
         const Data.Functor.Contravariant.$fMonoidEquivalence2_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _cglQ3() //  [R1]
         { []
         }
     {offset
       cglQ3: // global
           if (R1 & 7 == 1) goto cglQ6; else goto cglQ7;
       cglQ6: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cglQ7: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 16];
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cglQ3_info" {
     block_cglQ3_info:
         const _cglQ3;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.441831691 UTC

[section ""data" . Data.Functor.Contravariant.$fSemigroupEquivalence_closure" {
     Data.Functor.Contravariant.$fSemigroupEquivalence_closure:
         const GHC.Base.C:Semigroup_con_info;
         const Data.Functor.Contravariant.$fMonoidEquivalence2_closure+4;
         const Data.Functor.Contravariant.$fSemigroupEquivalence_$csconcat_closure+1;
         const Data.Functor.Contravariant.$fSemigroupEquivalence_$cstimes_closure+1;
         const 0;
 },
 section ""data" . Data.Functor.Contravariant.$fSemigroupEquivalence_$cstimes_closure" {
     Data.Functor.Contravariant.$fSemigroupEquivalence_$cstimes_closure:
         const Data.Functor.Contravariant.$fSemigroupEquivalence_$cstimes_info;
         const 0;
 },
 Data.Functor.Contravariant.$fSemigroupEquivalence_$cstimes_entry() //  [R2]
         { []
         }
     {offset
       cglQx: // global
           R3 = Data.Functor.Contravariant.$fSemigroupEquivalence_closure+1;
           R2 = R2;
           R1 = Data.Semigroup.Internal.stimesDefault_closure+4;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fSemigroupEquivalence_$cstimes_info" {
     Data.Functor.Contravariant.$fSemigroupEquivalence_$cstimes_info:
         const Data.Functor.Contravariant.$fSemigroupEquivalence_$cstimes_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const Sgk42_srt+120;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.446988818 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidEquivalence1_closure" {
     Data.Functor.Contravariant.$fMonoidEquivalence1_closure:
         const Data.Functor.Contravariant.$fMonoidEquivalence1_info;
 },
 Data.Functor.Contravariant.$fMonoidEquivalence1_entry() //  [R2,
                                                              R3, R4]
         { []
         }
     {offset
       cglQQ: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cglQR; else goto uglRb;
       cglQR: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fMonoidEquivalence1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       uglRb: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _cglQG() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fMonoidEquivalence1_info" {
     Data.Functor.Contravariant.$fMonoidEquivalence1_info:
         const Data.Functor.Contravariant.$fMonoidEquivalence1_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cglQG() //  []
         { []
         }
     {offset
       cglQG: // global
           _sgjRR::P64 = P64[Sp];
           I64[Sp] = block_cglQJ_info;
           R1 = _sgjRR::P64;
           if (R1 & 7 != 0) goto uglRd; else goto cglQK;
       uglRd: // global
           call _cglQJ(R1) args: 0, res: 0, upd: 0;
       cglQK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cglQJ() //  [R1]
         { []
         }
     {offset
       cglQJ: // global
           if (R1 & 7 == 1) goto cglQN; else goto cglQO;
       cglQN: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cglQO: // global
           I64[Sp - 8] = block_cglQY_info;
           R3 = P64[Sp + 16];
           R2 = P64[Sp + 8];
           _sgjRW::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _sgjRW::P64;
           Sp = Sp - 8;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_cglQJ_info" {
     block_cglQJ_info:
         const _cglQJ;
         const 2;
         const 30;
 },
 _cglQY() //  [R1]
         { []
         }
     {offset
       cglQY: // global
           if (R1 & 7 == 1) goto cglR5; else goto cglR9;
       cglR5: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cglR9: // global
           P64[Sp + 8] = P64[Sp + 8];
           P64[Sp + 16] = P64[Sp + 16];
           P64[Sp + 24] = P64[Sp + 24];
           Sp = Sp + 8;
           call _cglQG() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_cglQY_info" {
     block_cglQY_info:
         const _cglQY;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.454841287 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidEquivalence_closure" {
     Data.Functor.Contravariant.$fMonoidEquivalence_closure:
         const GHC.Base.C:Monoid_con_info;
         const Data.Functor.Contravariant.$fSemigroupEquivalence_closure+1;
         const Data.Functor.Contravariant.$fMonoidEquivalence3_closure+2;
         const Data.Functor.Contravariant.$fMonoidEquivalence2_closure+4;
         const Data.Functor.Contravariant.$fMonoidEquivalence1_closure+3;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.457008118 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidPredicate3_closure" {
     Data.Functor.Contravariant.$fMonoidPredicate3_closure:
         const Data.Functor.Contravariant.$fMonoidPredicate3_info;
 },
 Data.Functor.Contravariant.$fMonoidPredicate3_entry() //  []
         { []
         }
     {offset
       cglRI: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fMonoidPredicate3_info" {
     Data.Functor.Contravariant.$fMonoidPredicate3_info:
         const Data.Functor.Contravariant.$fMonoidPredicate3_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.462443576 UTC

[section ""data" . Data.Functor.Contravariant.$fSemigroupPredicate1_closure" {
     Data.Functor.Contravariant.$fSemigroupPredicate1_closure:
         const Data.Functor.Contravariant.$fSemigroupPredicate1_info;
 },
 ds_sgjS4_entry() //  [R1]
         { []
         }
     {offset
       cglS4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cglS5; else goto cglS6;
       cglS5: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglS6: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Functor.Contravariant.$fSemigroupPredicate1_entry(R3,
                                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds_sgjS4_info" {
     ds_sgjS4_info:
         const ds_sgjS4_entry;
         const 2;
         const 18;
 },
 sat_sgjS7_entry() //  [R1, R2]
         { []
         }
     {offset
       cglSi: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cglSj; else goto cglSk;
       cglSj: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cglSk: // global
           I64[Sp - 24] = block_cglSc_info;
           _sgjS5::P64 = R2;
           R2 = R2;
           _sgjS4::P64 = P64[R1 + 15];
           R1 = P64[R1 + 7];
           P64[Sp - 16] = _sgjS4::P64;
           P64[Sp - 8] = _sgjS5::P64;
           Sp = Sp - 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjS7_info" {
     sat_sgjS7_info:
         const sat_sgjS7_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 _cglSc() //  [R1]
         { []
         }
     {offset
       cglSc: // global
           if (R1 & 7 == 1) goto cglSf; else goto cglSg;
       cglSf: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cglSg: // global
           R2 = P64[Sp + 16];
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cglSc_info" {
     block_cglSc_info:
         const _cglSc;
         const 2;
         const 30;
 },
 Data.Functor.Contravariant.$fSemigroupPredicate1_entry() //  [R2,
                                                               R3]
         { []
         }
     {offset
       cglSv: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cglSw; else goto cglSx;
       cglSw: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fSemigroupPredicate1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cglSx: // global
           I64[Sp - 16] = block_cglRU_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto uglSD; else goto cglRV;
       uglSD: // global
           call _cglRU(R1) args: 0, res: 0, upd: 0;
       cglRV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fSemigroupPredicate1_info" {
     Data.Functor.Contravariant.$fSemigroupPredicate1_info:
         const Data.Functor.Contravariant.$fSemigroupPredicate1_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _cglRU() //  [R1]
         { []
         }
     {offset
       cglRU: // global
           _sgjRZ::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto cglSs; else goto cglSt;
       cglSs: // global
           R1 = _sgjRZ::P64;
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       cglSt: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cglSC; else goto cglSB;
       cglSC: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cglSB: // global
           _sgjS2::P64 = P64[R1 + 6];
           _sgjS3::P64 = P64[R1 + 14];
           I64[Hp - 48] = ds_sgjS4_info;
           P64[Hp - 32] = _sgjS2::P64;
           P64[Hp - 24] = _sgjS3::P64;
           I64[Hp - 16] = sat_sgjS7_info;
           P64[Hp - 8] = _sgjRZ::P64;
           P64[Hp] = Hp - 48;
           R1 = Hp - 15;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cglRU_info" {
     block_cglRU_info:
         const _cglRU;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.474198822 UTC

[section ""data" . Data.Functor.Contravariant.$fSemigroupPredicate_$csconcat_closure" {
     Data.Functor.Contravariant.$fSemigroupPredicate_$csconcat_closure:
         const Data.Functor.Contravariant.$fSemigroupPredicate_$csconcat_info;
 },
 Data.Functor.Contravariant.$fSemigroupPredicate_$csconcat_entry() //  [R2]
         { []
         }
     {offset
       cglTc: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cglTd; else goto cglTe;
       cglTd: // global
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fSemigroupPredicate_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cglTe: // global
           I64[Sp - 8] = block_cglT9_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uglTi; else goto cglTa;
       uglTi: // global
           call _cglT9(R1) args: 0, res: 0, upd: 0;
       cglTa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fSemigroupPredicate_$csconcat_info" {
     Data.Functor.Contravariant.$fSemigroupPredicate_$csconcat_info:
         const Data.Functor.Contravariant.$fSemigroupPredicate_$csconcat_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cglT9() //  [R1]
         { []
         }
     {offset
       cglT9: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call Data.Functor.Contravariant.$fSemigroupPredicate1_entry(R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cglT9_info" {
     block_cglT9_info:
         const _cglT9;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.479717667 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidPredicate2_closure" {
     Data.Functor.Contravariant.$fMonoidPredicate2_closure:
         const Data.Functor.Contravariant.$fMonoidPredicate2_info;
 },
 Data.Functor.Contravariant.$fMonoidPredicate2_entry() //  [R2, R3,
                                                            R4]
         { []
         }
     {offset
       cglTC: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cglTD; else goto cglTE;
       cglTD: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fMonoidPredicate2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglTE: // global
           I64[Sp - 24] = block_cglTw_info;
           _sgjSc::P64 = R2;
           R2 = R4;
           R1 = _sgjSc::P64;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fMonoidPredicate2_info" {
     Data.Functor.Contravariant.$fMonoidPredicate2_info:
         const Data.Functor.Contravariant.$fMonoidPredicate2_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cglTw() //  [R1]
         { []
         }
     {offset
       cglTw: // global
           if (R1 & 7 == 1) goto cglTz; else goto cglTA;
       cglTz: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cglTA: // global
           R2 = P64[Sp + 16];
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cglTw_info" {
     block_cglTw_info:
         const _cglTw;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.484878916 UTC

[section ""data" . Data.Functor.Contravariant.$fSemigroupPredicate_closure" {
     Data.Functor.Contravariant.$fSemigroupPredicate_closure:
         const GHC.Base.C:Semigroup_con_info;
         const Data.Functor.Contravariant.$fMonoidPredicate2_closure+3;
         const Data.Functor.Contravariant.$fSemigroupPredicate_$csconcat_closure+1;
         const Data.Functor.Contravariant.$fSemigroupPredicate_$cstimes_closure+1;
         const 0;
 },
 section ""data" . Data.Functor.Contravariant.$fSemigroupPredicate_$cstimes_closure" {
     Data.Functor.Contravariant.$fSemigroupPredicate_$cstimes_closure:
         const Data.Functor.Contravariant.$fSemigroupPredicate_$cstimes_info;
         const 0;
 },
 Data.Functor.Contravariant.$fSemigroupPredicate_$cstimes_entry() //  [R2]
         { []
         }
     {offset
       cglU0: // global
           R3 = Data.Functor.Contravariant.$fSemigroupPredicate_closure+1;
           R2 = R2;
           R1 = Data.Semigroup.Internal.stimesDefault_closure+4;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fSemigroupPredicate_$cstimes_info" {
     Data.Functor.Contravariant.$fSemigroupPredicate_$cstimes_info:
         const Data.Functor.Contravariant.$fSemigroupPredicate_$cstimes_entry;
         const 0;
         const 21474836494;
         const 4294967301;
         const Sgk42_srt+120;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.490198619 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidPredicate1_closure" {
     Data.Functor.Contravariant.$fMonoidPredicate1_closure:
         const Data.Functor.Contravariant.$fMonoidPredicate1_info;
 },
 Data.Functor.Contravariant.$fMonoidPredicate1_entry() //  [R2, R3]
         { []
         }
     {offset
       cglUj: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cglUk; else goto uglUE;
       cglUk: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fMonoidPredicate1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       uglUE: // global
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call _cglU9() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fMonoidPredicate1_info" {
     Data.Functor.Contravariant.$fMonoidPredicate1_info:
         const Data.Functor.Contravariant.$fMonoidPredicate1_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _cglU9() //  []
         { []
         }
     {offset
       cglU9: // global
           _sgjSh::P64 = P64[Sp];
           I64[Sp] = block_cglUc_info;
           R1 = _sgjSh::P64;
           if (R1 & 7 != 0) goto uglUG; else goto cglUd;
       uglUG: // global
           call _cglUc(R1) args: 0, res: 0, upd: 0;
       cglUd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cglUc() //  [R1]
         { []
         }
     {offset
       cglUc: // global
           if (R1 & 7 == 1) goto cglUg; else goto cglUh;
       cglUg: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cglUh: // global
           I64[Sp - 8] = block_cglUr_info;
           R2 = P64[Sp + 8];
           _sgjSl::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _sgjSl::P64;
           Sp = Sp - 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_cglUc_info" {
     block_cglUc_info:
         const _cglUc;
         const 1;
         const 30;
 },
 _cglUr() //  [R1]
         { []
         }
     {offset
       cglUr: // global
           if (R1 & 7 == 1) goto cglUy; else goto cglUC;
       cglUy: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cglUC: // global
           P64[Sp + 8] = P64[Sp + 8];
           P64[Sp + 16] = P64[Sp + 16];
           Sp = Sp + 8;
           call _cglU9() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_cglUr_info" {
     block_cglUr_info:
         const _cglUr;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.497689127 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidPredicate_closure" {
     Data.Functor.Contravariant.$fMonoidPredicate_closure:
         const GHC.Base.C:Monoid_con_info;
         const Data.Functor.Contravariant.$fSemigroupPredicate_closure+1;
         const Data.Functor.Contravariant.$fMonoidPredicate3_closure+1;
         const Data.Functor.Contravariant.$fMonoidPredicate2_closure+3;
         const Data.Functor.Contravariant.$fMonoidPredicate1_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.500295953 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantProxy_$ccontramap_closure" {
     Data.Functor.Contravariant.$fContravariantProxy_$ccontramap_closure:
         const Data.Functor.Contravariant.$fContravariantProxy_$ccontramap_info;
 },
 Data.Functor.Contravariant.$fContravariantProxy_$ccontramap_entry() //  []
         { []
         }
     {offset
       cglVa: // global
           R1 = Data.Proxy.Proxy_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantProxy_$ccontramap_info" {
     Data.Functor.Contravariant.$fContravariantProxy_$ccontramap_info:
         const Data.Functor.Contravariant.$fContravariantProxy_$ccontramap_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.503388395 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantProxy_closure" {
     Data.Functor.Contravariant.$fContravariantProxy_closure:
         const Data.Functor.Contravariant.C:Contravariant_con_info;
         const Data.Functor.Contravariant.$fContravariantProxy_$ccontramap_closure+2;
         const Data.Functor.Contravariant.$fContravariantProxy_$c>$_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.5061223 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantCompose2_closure" {
     Data.Functor.Contravariant.$fContravariantCompose2_closure:
         const Data.Functor.Contravariant.$fContravariantCompose2_info;
 },
 sat_sgjSt_entry() //  [R1]
         { []
         }
     {offset
       cglVr: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cglVs; else goto cglVt;
       cglVs: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglVt: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjSt_info" {
     sat_sgjSt_info:
         const sat_sgjSt_entry;
         const 2;
         const 18;
 },
 Data.Functor.Contravariant.$fContravariantCompose2_entry() //  [R2,
                                                                 R3, R4, R5]
         { []
         }
     {offset
       cglVu: // global
           _sgjSs::P64 = R5;
           _sgjSr::P64 = R4;
           _sgjSq::P64 = R3;
           _sgjSp::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cglVv; else goto cglVw;
       cglVw: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cglVy; else goto cglVx;
       cglVy: // global
           HpAlloc = 32;
           goto cglVv;
       cglVv: // global
           R5 = _sgjSs::P64;
           R4 = _sgjSr::P64;
           R3 = _sgjSq::P64;
           R2 = _sgjSp::P64;
           R1 = Data.Functor.Contravariant.$fContravariantCompose2_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglVx: // global
           I64[Hp - 24] = sat_sgjSt_info;
           P64[Hp - 8] = _sgjSq::P64;
           P64[Hp] = _sgjSr::P64;
           R2 = _sgjSp::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = _sgjSs::P64;
           Sp = Sp - 24;
           call GHC.Base.fmap_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantCompose2_info" {
     Data.Functor.Contravariant.$fContravariantCompose2_info:
         const Data.Functor.Contravariant.$fContravariantCompose2_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.512762307 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantCompose_closure" {
     Data.Functor.Contravariant.$fContravariantCompose_closure:
         const Data.Functor.Contravariant.$fContravariantCompose_info;
 },
 sat_sgjSx_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglVT: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariantCompose1_entry(R5,
                                                                         R4,
                                                                         R3,
                                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjSx_info" {
     sat_sgjSx_info:
         const sat_sgjSx_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_sgjSw_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglW1: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariantCompose2_entry(R5,
                                                                         R4,
                                                                         R3,
                                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjSw_info" {
     sat_sgjSw_info:
         const sat_sgjSw_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 Data.Functor.Contravariant.$fContravariantCompose_entry() //  [R2,
                                                                R3]
         { []
         }
     {offset
       cglW5: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cglW9; else goto cglW8;
       cglW9: // global
           HpAlloc = 72;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantCompose_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cglW8: // global
           I64[Hp - 64] = sat_sgjSx_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = sat_sgjSw_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = Data.Functor.Contravariant.C:Contravariant_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 62;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantCompose_info" {
     Data.Functor.Contravariant.$fContravariantCompose_info:
         const Data.Functor.Contravariant.$fContravariantCompose_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.519521519 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantConst2_closure" {
     Data.Functor.Contravariant.$fContravariantConst2_closure:
         const Data.Functor.Contravariant.$fContravariantConst2_info;
 },
 Data.Functor.Contravariant.$fContravariantConst2_entry() //  [R3]
         { []
         }
     {offset
       cglWr: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantConst2_info" {
     Data.Functor.Contravariant.$fContravariantConst2_info:
         const Data.Functor.Contravariant.$fContravariantConst2_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.522656362 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantConst_closure" {
     Data.Functor.Contravariant.$fContravariantConst_closure:
         const Data.Functor.Contravariant.C:Contravariant_con_info;
         const Data.Functor.Contravariant.$fContravariantConst2_closure+2;
         const Data.Functor.Contravariant.$fContravariantConst1_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.526295437 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantProduct_$ccontramap_closure" {
     Data.Functor.Contravariant.$fContravariantProduct_$ccontramap_closure:
         const Data.Functor.Contravariant.$fContravariantProduct_$ccontramap_info;
 },
 sat_sgjSI_entry() //  [R1]
         { []
         }
     {offset
       cglWM: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cglWN; else goto cglWO;
       cglWN: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglWO: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = P64[R1 + 32];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjSI_info" {
     sat_sgjSI_info:
         const sat_sgjSI_entry;
         const 3;
         const 15;
 },
 sat_sgjSH_entry() //  [R1]
         { []
         }
     {offset
       cglWT: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cglWU; else goto cglWV;
       cglWU: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglWV: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = P64[R1 + 32];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjSH_info" {
     sat_sgjSH_info:
         const sat_sgjSH_entry;
         const 3;
         const 15;
 },
 Data.Functor.Contravariant.$fContravariantProduct_$ccontramap_entry() //  [R2,
                                                                            R3, R4, R5]
         { []
         }
     {offset
       cglWW: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cglWY; else goto cglWZ;
       cglWY: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantProduct_$ccontramap_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglWZ: // global
           I64[Sp - 32] = block_cglWD_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto uglX3; else goto cglWE;
       uglX3: // global
           call _cglWD(R1) args: 0, res: 0, upd: 0;
       cglWE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantProduct_$ccontramap_info" {
     Data.Functor.Contravariant.$fContravariantProduct_$ccontramap_info:
         const Data.Functor.Contravariant.$fContravariantProduct_$ccontramap_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _cglWD() //  [R1]
         { []
         }
     {offset
       cglWD: // global
           Hp = Hp + 104;
           if (Hp > HpLim) (likely: False) goto cglX2; else goto cglX1;
       cglX2: // global
           HpAlloc = 104;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cglX1: // global
           _sgjSF::P64 = P64[R1 + 7];
           _sgjSG::P64 = P64[R1 + 15];
           I64[Hp - 96] = sat_sgjSI_info;
           P64[Hp - 80] = P64[Sp + 16];
           _sgjSC::P64 = P64[Sp + 24];
           P64[Hp - 72] = _sgjSC::P64;
           P64[Hp - 64] = _sgjSG::P64;
           I64[Hp - 56] = sat_sgjSH_info;
           P64[Hp - 40] = P64[Sp + 8];
           P64[Hp - 32] = _sgjSC::P64;
           P64[Hp - 24] = _sgjSF::P64;
           I64[Hp - 16] = Data.Functor.Product.Pair_con_info;
           P64[Hp - 8] = Hp - 56;
           P64[Hp] = Hp - 96;
           R1 = Hp - 15;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cglWD_info" {
     block_cglWD_info:
         const _cglWD;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.53676682 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantProduct_closure" {
     Data.Functor.Contravariant.$fContravariantProduct_closure:
         const Data.Functor.Contravariant.$fContravariantProduct_info;
 },
 sat_sgjSM_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglXD: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariantProduct_$c>$_entry(R5,
                                                                             R4,
                                                                             R3,
                                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjSM_info" {
     sat_sgjSM_info:
         const sat_sgjSM_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_sgjSL_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglXL: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariantProduct_$ccontramap_entry(R5,
                                                                                    R4,
                                                                                    R3,
                                                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjSL_info" {
     sat_sgjSL_info:
         const sat_sgjSL_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 Data.Functor.Contravariant.$fContravariantProduct_entry() //  [R2,
                                                                R3]
         { []
         }
     {offset
       cglXP: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cglXT; else goto cglXS;
       cglXT: // global
           HpAlloc = 72;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantProduct_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cglXS: // global
           I64[Hp - 64] = sat_sgjSM_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = sat_sgjSL_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = Data.Functor.Contravariant.C:Contravariant_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 62;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantProduct_info" {
     Data.Functor.Contravariant.$fContravariantProduct_info:
         const Data.Functor.Contravariant.$fContravariantProduct_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.546059459 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantSum_$ccontramap_closure" {
     Data.Functor.Contravariant.$fContravariantSum_$ccontramap_closure:
         const Data.Functor.Contravariant.$fContravariantSum_$ccontramap_info;
 },
 sat_sgjST_entry() //  [R1]
         { []
         }
     {offset
       cglYk: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cglYl; else goto cglYm;
       cglYl: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglYm: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = P64[R1 + 32];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjST_info" {
     sat_sgjST_info:
         const sat_sgjST_entry;
         const 3;
         const 15;
 },
 sat_sgjSV_entry() //  [R1]
         { []
         }
     {offset
       cglYt: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cglYu; else goto cglYv;
       cglYu: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cglYv: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = P64[R1 + 32];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjSV_info" {
     sat_sgjSV_info:
         const sat_sgjSV_entry;
         const 3;
         const 15;
 },
 Data.Functor.Contravariant.$fContravariantSum_$ccontramap_entry() //  [R2,
                                                                        R3, R4, R5]
         { []
         }
     {offset
       cglYA: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cglYB; else goto cglYC;
       cglYB: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantSum_$ccontramap_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglYC: // global
           I64[Sp - 32] = block_cglYb_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto uglYL; else goto cglYc;
       uglYL: // global
           call _cglYb(R1) args: 0, res: 0, upd: 0;
       cglYc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantSum_$ccontramap_info" {
     Data.Functor.Contravariant.$fContravariantSum_$ccontramap_info:
         const Data.Functor.Contravariant.$fContravariantSum_$ccontramap_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _cglYb() //  [R1]
         { []
         }
     {offset
       cglYb: // global
           _sgjSP::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto cglYx; else goto cglYy;
       cglYx: // global
           Hp = Hp + 56;
           _sgjSR::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cglYK; else goto cglYF;
       cglYF: // global
           _sgjSS::P64 = P64[_sgjSR::P64 + 7];
           I64[Hp - 48] = sat_sgjST_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _sgjSP::P64;
           P64[Hp - 16] = _sgjSS::P64;
           I64[Hp - 8] = Data.Functor.Sum.InL_con_info;
           P64[Hp] = Hp - 48;
           R1 = Hp - 7;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cglYy: // global
           Hp = Hp + 56;
           _sgjSR::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cglYK; else goto cglYJ;
       cglYK: // global
           HpAlloc = 56;
           R1 = _sgjSR::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cglYJ: // global
           _sgjSU::P64 = P64[_sgjSR::P64 + 6];
           I64[Hp - 48] = sat_sgjSV_info;
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = _sgjSP::P64;
           P64[Hp - 16] = _sgjSU::P64;
           I64[Hp - 8] = Data.Functor.Sum.InR_con_info;
           P64[Hp] = Hp - 48;
           R1 = Hp - 6;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cglYb_info" {
     block_cglYb_info:
         const _cglYb;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.556076785 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantSum_$c>$_closure" {
     Data.Functor.Contravariant.$fContravariantSum_$c>$_closure:
         const Data.Functor.Contravariant.$fContravariantSum_$c>$_info;
 },
 sat_sgjT1_entry() //  [R1]
         { []
         }
     {offset
       cglZo: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjT1_info" {
     sat_sgjT1_info:
         const sat_sgjT1_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Data.Functor.Contravariant.$fContravariantSum_$c>$_entry() //  [R2,
                                                                 R3, R4, R5]
         { []
         }
     {offset
       cglZr: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cglZv; else goto cglZu;
       cglZv: // global
           HpAlloc = 16;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantSum_$c>$_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cglZu: // global
           I64[Hp - 8] = sat_sgjT1_info;
           P64[Hp] = R4;
           R5 = R5;
           R4 = Hp - 7;
           R3 = R3;
           R2 = R2;
           call Data.Functor.Contravariant.$fContravariantSum_$ccontramap_entry(R5,
                                                                                R4,
                                                                                R3,
                                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantSum_$c>$_info" {
     Data.Functor.Contravariant.$fContravariantSum_$c>$_info:
         const Data.Functor.Contravariant.$fContravariantSum_$c>$_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.562311966 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantSum_closure" {
     Data.Functor.Contravariant.$fContravariantSum_closure:
         const Data.Functor.Contravariant.$fContravariantSum_info;
 },
 sat_sgjT5_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglZM: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariantSum_$c>$_entry(R5,
                                                                         R4,
                                                                         R3,
                                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjT5_info" {
     sat_sgjT5_info:
         const sat_sgjT5_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_sgjT4_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cglZU: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariantSum_$ccontramap_entry(R5,
                                                                                R4,
                                                                                R3,
                                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjT4_info" {
     sat_sgjT4_info:
         const sat_sgjT4_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 Data.Functor.Contravariant.$fContravariantSum_entry() //  [R2, R3]
         { []
         }
     {offset
       cglZY: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cgm02; else goto cgm01;
       cgm02: // global
           HpAlloc = 72;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantSum_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgm01: // global
           I64[Hp - 64] = sat_sgjT5_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = sat_sgjT4_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = Data.Functor.Contravariant.C:Contravariant_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 62;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantSum_info" {
     Data.Functor.Contravariant.$fContravariantSum_info:
         const Data.Functor.Contravariant.$fContravariantSum_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.570869801 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariant:+:_$ccontramap_closure" {
     Data.Functor.Contravariant.$fContravariant:+:_$ccontramap_closure:
         const Data.Functor.Contravariant.$fContravariant:+:_$ccontramap_info;
 },
 sat_sgjTc_entry() //  [R1]
         { []
         }
     {offset
       cgm0t: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cgm0u; else goto cgm0v;
       cgm0u: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgm0v: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = P64[R1 + 32];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjTc_info" {
     sat_sgjTc_info:
         const sat_sgjTc_entry;
         const 3;
         const 15;
 },
 sat_sgjTe_entry() //  [R1]
         { []
         }
     {offset
       cgm0C: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cgm0D; else goto cgm0E;
       cgm0D: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgm0E: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = P64[R1 + 32];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjTe_info" {
     sat_sgjTe_info:
         const sat_sgjTe_entry;
         const 3;
         const 15;
 },
 Data.Functor.Contravariant.$fContravariant:+:_$ccontramap_entry() //  [R2,
                                                                        R3, R4, R5]
         { []
         }
     {offset
       cgm0J: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgm0K; else goto cgm0L;
       cgm0K: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariant:+:_$ccontramap_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgm0L: // global
           I64[Sp - 32] = block_cgm0k_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto ugm0U; else goto cgm0l;
       ugm0U: // global
           call _cgm0k(R1) args: 0, res: 0, upd: 0;
       cgm0l: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariant:+:_$ccontramap_info" {
     Data.Functor.Contravariant.$fContravariant:+:_$ccontramap_info:
         const Data.Functor.Contravariant.$fContravariant:+:_$ccontramap_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _cgm0k() //  [R1]
         { []
         }
     {offset
       cgm0k: // global
           _sgjT8::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto cgm0G; else goto cgm0H;
       cgm0G: // global
           Hp = Hp + 56;
           _sgjTa::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cgm0T; else goto cgm0O;
       cgm0O: // global
           _sgjTb::P64 = P64[_sgjTa::P64 + 7];
           I64[Hp - 48] = sat_sgjTc_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _sgjT8::P64;
           P64[Hp - 16] = _sgjTb::P64;
           I64[Hp - 8] = GHC.Generics.L1_con_info;
           P64[Hp] = Hp - 48;
           R1 = Hp - 7;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cgm0H: // global
           Hp = Hp + 56;
           _sgjTa::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cgm0T; else goto cgm0S;
       cgm0T: // global
           HpAlloc = 56;
           R1 = _sgjTa::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cgm0S: // global
           _sgjTd::P64 = P64[_sgjTa::P64 + 6];
           I64[Hp - 48] = sat_sgjTe_info;
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = _sgjT8::P64;
           P64[Hp - 16] = _sgjTd::P64;
           I64[Hp - 8] = GHC.Generics.R1_con_info;
           P64[Hp] = Hp - 48;
           R1 = Hp - 6;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgm0k_info" {
     block_cgm0k_info:
         const _cgm0k;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.581776554 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariant:+:_$c>$_closure" {
     Data.Functor.Contravariant.$fContravariant:+:_$c>$_closure:
         const Data.Functor.Contravariant.$fContravariant:+:_$c>$_info;
 },
 sat_sgjTk_entry() //  [R1]
         { []
         }
     {offset
       cgm1x: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjTk_info" {
     sat_sgjTk_info:
         const sat_sgjTk_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Data.Functor.Contravariant.$fContravariant:+:_$c>$_entry() //  [R2,
                                                                 R3, R4, R5]
         { []
         }
     {offset
       cgm1A: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cgm1E; else goto cgm1D;
       cgm1E: // global
           HpAlloc = 16;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariant:+:_$c>$_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgm1D: // global
           I64[Hp - 8] = sat_sgjTk_info;
           P64[Hp] = R4;
           R5 = R5;
           R4 = Hp - 7;
           R3 = R3;
           R2 = R2;
           call Data.Functor.Contravariant.$fContravariant:+:_$ccontramap_entry(R5,
                                                                                R4,
                                                                                R3,
                                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariant:+:_$c>$_info" {
     Data.Functor.Contravariant.$fContravariant:+:_$c>$_info:
         const Data.Functor.Contravariant.$fContravariant:+:_$c>$_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.587740696 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariant:+:_closure" {
     Data.Functor.Contravariant.$fContravariant:+:_closure:
         const Data.Functor.Contravariant.$fContravariant:+:_info;
 },
 sat_sgjTo_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgm1V: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariant:+:_$c>$_entry(R5,
                                                                         R4,
                                                                         R3,
                                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjTo_info" {
     sat_sgjTo_info:
         const sat_sgjTo_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_sgjTn_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgm23: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariant:+:_$ccontramap_entry(R5,
                                                                                R4,
                                                                                R3,
                                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjTn_info" {
     sat_sgjTn_info:
         const sat_sgjTn_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 Data.Functor.Contravariant.$fContravariant:+:_entry() //  [R2, R3]
         { []
         }
     {offset
       cgm27: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cgm2b; else goto cgm2a;
       cgm2b: // global
           HpAlloc = 72;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariant:+:_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgm2a: // global
           I64[Hp - 64] = sat_sgjTo_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = sat_sgjTn_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = Data.Functor.Contravariant.C:Contravariant_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 62;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariant:+:_info" {
     Data.Functor.Contravariant.$fContravariant:+:_info:
         const Data.Functor.Contravariant.$fContravariant:+:_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.595506241 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariant:.:2_closure" {
     Data.Functor.Contravariant.$fContravariant:.:2_closure:
         const Data.Functor.Contravariant.$fContravariant:.:2_info;
 },
 sat_sgjTt_entry() //  [R1]
         { []
         }
     {offset
       cgm2x: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgm2y; else goto cgm2z;
       cgm2y: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgm2z: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjTt_info" {
     sat_sgjTt_info:
         const sat_sgjTt_entry;
         const 2;
         const 18;
 },
 Data.Functor.Contravariant.$fContravariant:.:2_entry() //  [R2, R3,
                                                             R4, R5]
         { []
         }
     {offset
       cgm2A: // global
           _sgjTs::P64 = R5;
           _sgjTr::P64 = R4;
           _sgjTq::P64 = R3;
           _sgjTp::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cgm2B; else goto cgm2C;
       cgm2C: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgm2E; else goto cgm2D;
       cgm2E: // global
           HpAlloc = 32;
           goto cgm2B;
       cgm2B: // global
           R5 = _sgjTs::P64;
           R4 = _sgjTr::P64;
           R3 = _sgjTq::P64;
           R2 = _sgjTp::P64;
           R1 = Data.Functor.Contravariant.$fContravariant:.:2_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgm2D: // global
           I64[Hp - 24] = sat_sgjTt_info;
           P64[Hp - 8] = _sgjTq::P64;
           P64[Hp] = _sgjTr::P64;
           R2 = _sgjTp::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = _sgjTs::P64;
           Sp = Sp - 24;
           call GHC.Base.fmap_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariant:.:2_info" {
     Data.Functor.Contravariant.$fContravariant:.:2_info:
         const Data.Functor.Contravariant.$fContravariant:.:2_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.602048666 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariant:.:_closure" {
     Data.Functor.Contravariant.$fContravariant:.:_closure:
         const Data.Functor.Contravariant.$fContravariant:.:_info;
 },
 sat_sgjTx_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgm2Z: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariant:.:1_entry(R5,
                                                                     R4,
                                                                     R3,
                                                                     R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjTx_info" {
     sat_sgjTx_info:
         const sat_sgjTx_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_sgjTw_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgm37: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariant:.:2_entry(R5,
                                                                     R4,
                                                                     R3,
                                                                     R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjTw_info" {
     sat_sgjTw_info:
         const sat_sgjTw_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 Data.Functor.Contravariant.$fContravariant:.:_entry() //  [R2, R3]
         { []
         }
     {offset
       cgm3b: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cgm3f; else goto cgm3e;
       cgm3f: // global
           HpAlloc = 72;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariant:.:_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgm3e: // global
           I64[Hp - 64] = sat_sgjTx_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = sat_sgjTw_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = Data.Functor.Contravariant.C:Contravariant_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 62;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariant:.:_info" {
     Data.Functor.Contravariant.$fContravariant:.:_info:
         const Data.Functor.Contravariant.$fContravariant:.:_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.610402601 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariant:*:_$ccontramap_closure" {
     Data.Functor.Contravariant.$fContravariant:*:_$ccontramap_closure:
         const Data.Functor.Contravariant.$fContravariant:*:_$ccontramap_info;
 },
 sat_sgjTG_entry() //  [R1]
         { []
         }
     {offset
       cgm3G: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cgm3H; else goto cgm3I;
       cgm3H: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgm3I: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = P64[R1 + 32];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjTG_info" {
     sat_sgjTG_info:
         const sat_sgjTG_entry;
         const 3;
         const 15;
 },
 sat_sgjTF_entry() //  [R1]
         { []
         }
     {offset
       cgm3N: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cgm3O; else goto cgm3P;
       cgm3O: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgm3P: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = P64[R1 + 32];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgjTF_info" {
     sat_sgjTF_info:
         const sat_sgjTF_entry;
         const 3;
         const 15;
 },
 Data.Functor.Contravariant.$fContravariant:*:_$ccontramap_entry() //  [R2,
                                                                        R3, R4, R5]
         { []
         }
     {offset
       cgm3Q: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgm3S; else goto cgm3T;
       cgm3S: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariant:*:_$ccontramap_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgm3T: // global
           I64[Sp - 32] = block_cgm3x_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto ugm3X; else goto cgm3y;
       ugm3X: // global
           call _cgm3x(R1) args: 0, res: 0, upd: 0;
       cgm3y: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariant:*:_$ccontramap_info" {
     Data.Functor.Contravariant.$fContravariant:*:_$ccontramap_info:
         const Data.Functor.Contravariant.$fContravariant:*:_$ccontramap_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _cgm3x() //  [R1]
         { []
         }
     {offset
       cgm3x: // global
           Hp = Hp + 104;
           if (Hp > HpLim) (likely: False) goto cgm3W; else goto cgm3V;
       cgm3W: // global
           HpAlloc = 104;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cgm3V: // global
           _sgjTD::P64 = P64[R1 + 7];
           _sgjTE::P64 = P64[R1 + 15];
           I64[Hp - 96] = sat_sgjTG_info;
           P64[Hp - 80] = P64[Sp + 16];
           _sgjTA::P64 = P64[Sp + 24];
           P64[Hp - 72] = _sgjTA::P64;
           P64[Hp - 64] = _sgjTE::P64;
           I64[Hp - 56] = sat_sgjTF_info;
           P64[Hp - 40] = P64[Sp + 8];
           P64[Hp - 32] = _sgjTA::P64;
           P64[Hp - 24] = _sgjTD::P64;
           I64[Hp - 16] = GHC.Generics.:*:_con_info;
           P64[Hp - 8] = Hp - 56;
           P64[Hp] = Hp - 96;
           R1 = Hp - 15;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgm3x_info" {
     block_cgm3x_info:
         const _cgm3x;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.621072997 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariant:*:_closure" {
     Data.Functor.Contravariant.$fContravariant:*:_closure:
         const Data.Functor.Contravariant.$fContravariant:*:_info;
 },
 sat_sgjTK_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgm4x: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariant:*:_$c>$_entry(R5,
                                                                         R4,
                                                                         R3,
                                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjTK_info" {
     sat_sgjTK_info:
         const sat_sgjTK_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_sgjTJ_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgm4F: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariant:*:_$ccontramap_entry(R5,
                                                                                R4,
                                                                                R3,
                                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgjTJ_info" {
     sat_sgjTJ_info:
         const sat_sgjTJ_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 Data.Functor.Contravariant.$fContravariant:*:_entry() //  [R2, R3]
         { []
         }
     {offset
       cgm4J: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cgm4N; else goto cgm4M;
       cgm4N: // global
           HpAlloc = 72;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariant:*:_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgm4M: // global
           I64[Hp - 64] = sat_sgjTK_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = sat_sgjTJ_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = Data.Functor.Contravariant.C:Contravariant_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 62;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariant:*:_info" {
     Data.Functor.Contravariant.$fContravariant:*:_info:
         const Data.Functor.Contravariant.$fContravariant:*:_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.627914382 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantK3_closure" {
     Data.Functor.Contravariant.$fContravariantK3_closure:
         const Data.Functor.Contravariant.$fContravariantK3_info;
 },
 Data.Functor.Contravariant.$fContravariantK3_entry() //  [R3]
         { []
         }
     {offset
       cgm55: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantK3_info" {
     Data.Functor.Contravariant.$fContravariantK3_info:
         const Data.Functor.Contravariant.$fContravariantK3_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.631025803 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantK1_closure" {
     Data.Functor.Contravariant.$fContravariantK1_closure:
         const Data.Functor.Contravariant.C:Contravariant_con_info;
         const Data.Functor.Contravariant.$fContravariantK3_closure+2;
         const Data.Functor.Contravariant.$fContravariantK2_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.633041122 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantU1_$ccontramap_closure" {
     Data.Functor.Contravariant.$fContravariantU1_$ccontramap_closure:
         const Data.Functor.Contravariant.$fContravariantU1_$ccontramap_info;
 },
 Data.Functor.Contravariant.$fContravariantU1_$ccontramap_entry() //  []
         { []
         }
     {offset
       cgm5h: // global
           R1 = GHC.Generics.U1_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantU1_$ccontramap_info" {
     Data.Functor.Contravariant.$fContravariantU1_$ccontramap_info:
         const Data.Functor.Contravariant.$fContravariantU1_$ccontramap_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.636359387 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantU1_closure" {
     Data.Functor.Contravariant.$fContravariantU1_closure:
         const Data.Functor.Contravariant.C:Contravariant_con_info;
         const Data.Functor.Contravariant.$fContravariantU1_$ccontramap_closure+2;
         const Data.Functor.Contravariant.$fContravariantU1_$c>$_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.638357217 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantV1_$ccontramap_closure" {
     Data.Functor.Contravariant.$fContravariantV1_$ccontramap_closure:
         const Data.Functor.Contravariant.$fContravariantV1_$ccontramap_info;
 },
 Data.Functor.Contravariant.$fContravariantV1_$ccontramap_entry() //  [R3]
         { []
         }
     {offset
       cgm5u: // global
           R1 = R3 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantV1_$ccontramap_info" {
     Data.Functor.Contravariant.$fContravariantV1_$ccontramap_info:
         const Data.Functor.Contravariant.$fContravariantV1_$ccontramap_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.64146802 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantV1_closure" {
     Data.Functor.Contravariant.$fContravariantV1_closure:
         const Data.Functor.Contravariant.C:Contravariant_con_info;
         const Data.Functor.Contravariant.$fContravariantV1_$ccontramap_closure+2;
         const Data.Functor.Contravariant.$fContravariantV1_$c>$_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.643896966 UTC

[section ""data" . lvl2_rgjLt_closure" {
     lvl2_rgjLt_closure:
         const lvl2_rgjLt_info;
         const 0;
 },
 lvl2_rgjLt_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       cgm5J: // global
           _sgjTV::P64 = R5;
           _sgjTU::P64 = R4;
           _sgjTT::P64 = R3;
           _sgjTS::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cgm5K; else goto cgm5L;
       cgm5L: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgm5N; else goto cgm5M;
       cgm5N: // global
           HpAlloc = 32;
           goto cgm5K;
       cgm5K: // global
           R5 = _sgjTV::P64;
           R4 = _sgjTU::P64;
           R3 = _sgjTT::P64;
           R2 = _sgjTS::P64;
           R1 = lvl2_rgjLt_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgm5M: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgjTU::P64;
           P64[Hp] = _sgjTV::P64;
           R2 = _sgjTS::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _sgjTT::P64;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 24;
           call GHC.Base.$fSemigroupOrdering_$cstimes_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . lvl2_rgjLt_info" {
     lvl2_rgjLt_info:
         const lvl2_rgjLt_entry;
         const 0;
         const 1125904201809934;
         const 17179869208;
         const Sgk42_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.649004719 UTC

[section ""data" . lvl3_rgjLu_closure" {
     lvl3_rgjLu_closure:
         const lvl3_rgjLu_info;
         const 0;
 },
 lvl3_rgjLu_entry() //  [R2]
         { []
         }
     {offset
       cgm61: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cgm62; else goto cgm63;
       cgm62: // global
           R2 = R2;
           R1 = lvl3_rgjLu_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgm63: // global
           I64[Sp - 8] = block_cgm5Y_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ugm67; else goto cgm5Z;
       ugm67: // global
           call _cgm5Y(R1) args: 0, res: 0, upd: 0;
       cgm5Z: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . lvl3_rgjLu_info" {
     lvl3_rgjLu_info:
         const lvl3_rgjLu_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const Sgk42_srt+152;
 },
 _cgm5Y() //  [R1]
         { []
         }
     {offset
       cgm5Y: // global
           R4 = P64[R1 + 15];
           R3 = P64[R1 + 7];
           R2 = GHC.Base.$fSemigroupOrdering_closure;
           Sp = Sp + 8;
           call GHC.Base.$w$csconcat3_entry(R4,
                                            R3,
                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgm5Y_info" {
     block_cgm5Y_info:
         const _cgm5Y;
         const 0;
         const 4294967326;
         const Sgk42_srt+152;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.655562465 UTC

[section ""data" . lvl4_rgjLv_closure" {
     lvl4_rgjLv_closure:
         const lvl4_rgjLv_info;
 },
 lvl4_rgjLv_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgm6s: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cgm6t; else goto cgm6u;
       cgm6t: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = lvl4_rgjLv_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgm6u: // global
           I64[Sp - 24] = block_cgm6l_info;
           _sgjU1::P64 = R2;
           R2 = R4;
           R1 = _sgjU1::P64;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . lvl4_rgjLv_info" {
     lvl4_rgjLv_info:
         const lvl4_rgjLv_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cgm6l() //  [R1]
         { []
         }
     {offset
       cgm6l: // global
           _cgm6r::P64 = R1 & 7;
           if (_cgm6r::P64 < 3) goto ugm6E; else goto cgm6q;
       ugm6E: // global
           if (_cgm6r::P64 < 2) goto cgm6o; else goto cgm6p;
       cgm6o: // global
           R1 = GHC.Types.LT_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cgm6p: // global
           R2 = P64[Sp + 16];
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
       cgm6q: // global
           R1 = GHC.Types.GT_closure+3;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgm6l_info" {
     block_cgm6l_info:
         const _cgm6l;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.660522892 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidComparison_$s$fSemigroup(->)_closure" {
     Data.Functor.Contravariant.$fMonoidComparison_$s$fSemigroup(->)_closure:
         const GHC.Base.C:Semigroup_con_info;
         const lvl4_rgjLv_closure+3;
         const lvl3_rgjLu_closure+1;
         const lvl2_rgjLt_closure+4;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.663332328 UTC

[section ""data" . Data.Functor.Contravariant.$fSemigroupComparison2_closure" {
     Data.Functor.Contravariant.$fSemigroupComparison2_closure:
         const Data.Functor.Contravariant.$fSemigroupComparison2_info;
         const 0;
 },
 Data.Functor.Contravariant.$fSemigroupComparison2_entry() //  [R2]
         { []
         }
     {offset
       cgm6Y: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cgm6Z; else goto cgm70;
       cgm6Z: // global
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fSemigroupComparison2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgm70: // global
           I64[Sp - 8] = block_cgm6V_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ugm74; else goto cgm6W;
       ugm74: // global
           call _cgm6V(R1) args: 0, res: 0, upd: 0;
       cgm6W: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fSemigroupComparison2_info" {
     Data.Functor.Contravariant.$fSemigroupComparison2_info:
         const Data.Functor.Contravariant.$fSemigroupComparison2_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const Sgk42_srt+168;
 },
 _cgm6V() //  [R1]
         { []
         }
     {offset
       cgm6V: // global
           R4 = P64[R1 + 15];
           R3 = P64[R1 + 7];
           R2 = Data.Functor.Contravariant.$fMonoidComparison_$s$fSemigroup(->)_closure+1;
           Sp = Sp + 8;
           call GHC.Base.$w$csconcat3_entry(R4,
                                            R3,
                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgm6V_info" {
     block_cgm6V_info:
         const _cgm6V;
         const 0;
         const 4294967326;
         const Sgk42_srt+168;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.667979397 UTC

[section ""data" . Data.Functor.Contravariant.$fSemigroupComparison_closure" {
     Data.Functor.Contravariant.$fSemigroupComparison_closure:
         const GHC.Base.C:Semigroup_con_info;
         const Data.Functor.Contravariant.$fSemigroupComparison3_closure+3;
         const Data.Functor.Contravariant.$fSemigroupComparison2_closure+1;
         const Data.Functor.Contravariant.$fSemigroupComparison1_closure+4;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.670089888 UTC

[section ""data" . lvl5_rgjLw_closure" {
     lvl5_rgjLw_closure:
         const lvl5_rgjLw_info;
 },
 lvl5_rgjLw_entry() //  []
         { []
         }
     {offset
       cgm7j: // global
           R1 = GHC.Types.EQ_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . lvl5_rgjLw_info" {
     lvl5_rgjLw_info:
         const lvl5_rgjLw_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.673382301 UTC

[section ""data" . lvl6_rgjLx_closure" {
     lvl6_rgjLx_closure:
         const lvl6_rgjLx_info;
         const 0;
 },
 lvl6_rgjLx_entry() //  [R2, R3]
         { []
         }
     {offset
       cgm7v: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Base.$fMonoidOrdering_closure;
           call GHC.Base.$fMonoid(->)_$cmconcat_entry(R4,
                                                      R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . lvl6_rgjLx_info" {
     lvl6_rgjLx_info:
         const lvl6_rgjLx_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const Sgk42_srt+184;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.676411157 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidComparison_$s$fMonoid(->)_closure" {
     Data.Functor.Contravariant.$fMonoidComparison_$s$fMonoid(->)_closure:
         const GHC.Base.C:Monoid_con_info;
         const Data.Functor.Contravariant.$fMonoidComparison_$s$fSemigroup(->)_closure+1;
         const lvl5_rgjLw_closure+1;
         const lvl4_rgjLv_closure+3;
         const lvl6_rgjLx_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.679032051 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidComparison1_closure" {
     Data.Functor.Contravariant.$fMonoidComparison1_closure:
         const Data.Functor.Contravariant.$fMonoidComparison1_info;
         const 0;
 },
 Data.Functor.Contravariant.$fMonoidComparison1_entry() //  [R2, R3]
         { []
         }
     {offset
       cgm7H: // global
           R4 = R3;
           R3 = R2;
           R2 = Data.Functor.Contravariant.$fMonoidComparison_$s$fMonoid(->)_closure+1;
           call GHC.Base.$fMonoid(->)_$cmconcat_entry(R4,
                                                      R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fMonoidComparison1_info" {
     Data.Functor.Contravariant.$fMonoidComparison1_info:
         const Data.Functor.Contravariant.$fMonoidComparison1_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const Sgk42_srt+192;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.682256062 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidComparison_closure" {
     Data.Functor.Contravariant.$fMonoidComparison_closure:
         const GHC.Base.C:Monoid_con_info;
         const Data.Functor.Contravariant.$fSemigroupComparison_closure+1;
         const Data.Functor.Contravariant.$fMonoidComparison3_closure+2;
         const Data.Functor.Contravariant.$fMonoidComparison2_closure+3;
         const Data.Functor.Contravariant.$fMonoidComparison1_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.684580491 UTC

[section ""data" . Data.Functor.Contravariant.C:Contravariant_closure" {
     Data.Functor.Contravariant.C:Contravariant_closure:
         const Data.Functor.Contravariant.C:Contravariant_info;
 },
 Data.Functor.Contravariant.C:Contravariant_entry() //  [R2, R3]
         { []
         }
     {offset
       cgm7U: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cgm7Y; else goto cgm7X;
       cgm7Y: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.C:Contravariant_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgm7X: // global
           I64[Hp - 16] = Data.Functor.Contravariant.C:Contravariant_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.C:Contravariant_info" {
     Data.Functor.Contravariant.C:Contravariant_info:
         const Data.Functor.Contravariant.C:Contravariant_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.688519733 UTC

[section ""cstring" . igl8v_str" {
     igl8v_str:
         I8[] [98,97,115,101,58,68,97,116,97,46,70,117,110,99,116,111,114,46,67,111,110,116,114,97,118,97,114,105,97,110,116,46,67,58,67,111,110,116,114,97,118,97,114,105,97,110,116]
 },
 Data.Functor.Contravariant.C:Contravariant_con_entry() //  [R1]
         { []
         }
     {offset
       cgm84: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.C:Contravariant_con_info" {
     Data.Functor.Contravariant.C:Contravariant_con_info:
         const Data.Functor.Contravariant.C:Contravariant_con_entry;
         const 2;
         const 4;
         const igl8v_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:14.691681673 UTC

[section ""relreadonly" . Sgk42_srt" {
     Sgk42_srt:
         const GHC.Base.$fSemigroupOrdering_$cstimes_closure;
         const Data.Functor.Contravariant.$fSemigroupComparison1_closure;
         const sat_sgjO7_closure;
         const lvl1_rgjLs_closure;
         const lvl_rgjLr_closure;
         const Data.Functor.Contravariant.$fFloatingOp_$clog1mexp_closure;
         const Data.Functor.Contravariant.$fFloatingOp_$cexpm1_closure;
         const Data.Functor.Contravariant.$fFloatingOp_$clog1pexp_closure;
         const Data.Functor.Contravariant.$fFloatingOp_$clog1p_closure;
         const Data.Functor.Contravariant.$fNumOp_$cnegate_closure;
         const Data.Functor.Contravariant.$fNumOp_closure;
         const Data.Functor.Contravariant.$fFractionalOp_$cp1Fractional_closure;
         const Data.Functor.Contravariant.$fFractionalOp_closure;
         const Data.Functor.Contravariant.$fFloatingOp_$cp1Floating_closure;
         const Data.Functor.Contravariant.$fFloatingOp_closure;
         const Data.Semigroup.Internal.stimesDefault_closure;
         const Data.Functor.Contravariant.$fSemigroupEquivalence_closure;
         const Data.Functor.Contravariant.$fSemigroupPredicate_closure;
         const lvl2_rgjLt_closure;
         const GHC.Base.$fSemigroupOrdering_closure;
         const lvl3_rgjLu_closure;
         const Data.Functor.Contravariant.$fMonoidComparison_$s$fSemigroup(->)_closure;
         const Data.Functor.Contravariant.$fSemigroupComparison2_closure;
         const GHC.Base.$fMonoidOrdering_closure;
         const Data.Functor.Contravariant.$fMonoidComparison_$s$fMonoid(->)_closure;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.688168586 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:12:16.690216486 UTC

[section ""data" . Data.Functor.Contravariant.contramap_closure" {
     Data.Functor.Contravariant.contramap_closure:
         const Data.Functor.Contravariant.contramap_info;
 },
 Data.Functor.Contravariant.contramap_entry() //  [R2]
         { []
         }
     {offset
       cgmgT: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cgmgU; else goto cgmgV;
       cgmgU: // global
           R2 = R2;
           R1 = Data.Functor.Contravariant.contramap_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgmgV: // global
           I64[Sp - 8] = block_cgmgQ_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ugmgZ; else goto cgmgR;
       ugmgZ: // global
           call _cgmgQ(R1) args: 0, res: 0, upd: 0;
       cgmgR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.contramap_info" {
     Data.Functor.Contravariant.contramap_info:
         const Data.Functor.Contravariant.contramap_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cgmgQ() //  [R1]
         { []
         }
     {offset
       cgmgQ: // global
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgmgQ_info" {
     block_cgmgQ_info:
         const _cgmgQ;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.696055713 UTC

[section ""data" . Data.Functor.Contravariant.>$_closure" {
     Data.Functor.Contravariant.>$_closure:
         const Data.Functor.Contravariant.>$_info;
 },
 Data.Functor.Contravariant.>$_entry() //  [R2]
         { []
         }
     {offset
       cgmhh: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cgmhi; else goto cgmhj;
       cgmhi: // global
           R2 = R2;
           R1 = Data.Functor.Contravariant.>$_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgmhj: // global
           I64[Sp - 8] = block_cgmhe_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ugmhn; else goto cgmhf;
       ugmhn: // global
           call _cgmhe(R1) args: 0, res: 0, upd: 0;
       cgmhf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.>$_info" {
     Data.Functor.Contravariant.>$_info:
         const Data.Functor.Contravariant.>$_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cgmhe() //  [R1]
         { []
         }
     {offset
       cgmhe: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgmhe_info" {
     block_cgmhe_info:
         const _cgmhe;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.701123362 UTC

[section ""cstring" . Data.Functor.Contravariant.$tc'Op3_bytes" {
     Data.Functor.Contravariant.$tc'Op3_bytes:
         I8[] [39,79,112]
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.703057389 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Op2_closure" {
     Data.Functor.Contravariant.$tc'Op2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.Contravariant.$tc'Op3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.704993283 UTC

[section ""cstring" . Data.Functor.Contravariant.$tcOp2_bytes" {
     Data.Functor.Contravariant.$tcOp2_bytes:
         I8[] [79,112]
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.706872251 UTC

[section ""data" . Data.Functor.Contravariant.$tcOp1_closure" {
     Data.Functor.Contravariant.$tcOp1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.Contravariant.$tcOp2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.708674267 UTC

[section ""cstring" . Data.Functor.Contravariant.$tc'Equivalence3_bytes" {
     Data.Functor.Contravariant.$tc'Equivalence3_bytes:
         I8[] [39,69,113,117,105,118,97,108,101,110,99,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.711545986 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Equivalence2_closure" {
     Data.Functor.Contravariant.$tc'Equivalence2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.Contravariant.$tc'Equivalence3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.713392179 UTC

[section ""cstring" . Data.Functor.Contravariant.$tcEquivalence2_bytes" {
     Data.Functor.Contravariant.$tcEquivalence2_bytes:
         I8[] [69,113,117,105,118,97,108,101,110,99,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.715059685 UTC

[section ""data" . Data.Functor.Contravariant.$tcEquivalence1_closure" {
     Data.Functor.Contravariant.$tcEquivalence1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.Contravariant.$tcEquivalence2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.716811079 UTC

[section ""cstring" . Data.Functor.Contravariant.$tc'Comparison3_bytes" {
     Data.Functor.Contravariant.$tc'Comparison3_bytes:
         I8[] [39,67,111,109,112,97,114,105,115,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.7189985 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Comparison2_closure" {
     Data.Functor.Contravariant.$tc'Comparison2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.Contravariant.$tc'Comparison3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.720736059 UTC

[section ""cstring" . Data.Functor.Contravariant.$tcComparison2_bytes" {
     Data.Functor.Contravariant.$tcComparison2_bytes:
         I8[] [67,111,109,112,97,114,105,115,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.722572373 UTC

[section ""data" . Data.Functor.Contravariant.$tcComparison1_closure" {
     Data.Functor.Contravariant.$tcComparison1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.Contravariant.$tcComparison2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.72441689 UTC

[section ""cstring" . Data.Functor.Contravariant.$tc'Predicate3_bytes" {
     Data.Functor.Contravariant.$tc'Predicate3_bytes:
         I8[] [39,80,114,101,100,105,99,97,116,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.726401221 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Predicate2_closure" {
     Data.Functor.Contravariant.$tc'Predicate2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.Contravariant.$tc'Predicate3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.728157688 UTC

[section ""cstring" . Data.Functor.Contravariant.$tcPredicate2_bytes" {
     Data.Functor.Contravariant.$tcPredicate2_bytes:
         I8[] [80,114,101,100,105,99,97,116,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.729976283 UTC

[section ""data" . Data.Functor.Contravariant.$tcPredicate1_closure" {
     Data.Functor.Contravariant.$tcPredicate1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.Contravariant.$tcPredicate2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.731716433 UTC

[section ""cstring" . Data.Functor.Contravariant.$tcContravariant3_bytes" {
     Data.Functor.Contravariant.$tcContravariant3_bytes:
         I8[] [67,111,110,116,114,97,118,97,114,105,97,110,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.733546865 UTC

[section ""data" . Data.Functor.Contravariant.$tcContravariant2_closure" {
     Data.Functor.Contravariant.$tcContravariant2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.Contravariant.$tcContravariant3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.735328225 UTC

[section ""data" . $krep_rgjLa_closure" {
     $krep_rgjLa_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.737893981 UTC

[section ""data" . $krep1_rgjLb_closure" {
     $krep1_rgjLb_closure:
         const :_con_info;
         const $krep_rgjLa_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.739667819 UTC

[section ""data" . $krep2_rgjLc_closure" {
     $krep2_rgjLc_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.741514402 UTC

[section ""data" . $krep3_rgjLd_closure" {
     $krep3_rgjLd_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_rgjLc_closure+2;
         const $krep_rgjLa_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.743234002 UTC

[section ""data" . $krep4_rgjLe_closure" {
     $krep4_rgjLe_closure:
         const :_con_info;
         const $krep2_rgjLc_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.744994317 UTC

[section ""data" . $krep5_rgjLf_closure" {
     $krep5_rgjLf_closure:
         const :_con_info;
         const $krep_rgjLa_closure+2;
         const $krep4_rgjLe_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.746823096 UTC

[section ""data" . $krep6_rgjLg_closure" {
     $krep6_rgjLg_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcBool_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.748624525 UTC

[section ""data" . $krep7_rgjLh_closure" {
     $krep7_rgjLh_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_rgjLa_closure+2;
         const $krep6_rgjLg_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.750682228 UTC

[section ""data" . $krep8_rgjLi_closure" {
     $krep8_rgjLi_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_rgjLa_closure+2;
         const $krep7_rgjLh_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.752425142 UTC

[section ""data" . $krep9_rgjLj_closure" {
     $krep9_rgjLj_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcOrdering_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.754152204 UTC

[section ""data" . $krep10_rgjLk_closure" {
     $krep10_rgjLk_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_rgjLa_closure+2;
         const $krep9_rgjLj_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.755930069 UTC

[section ""data" . $krep11_rgjLl_closure" {
     $krep11_rgjLl_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_rgjLa_closure+2;
         const $krep10_rgjLk_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.757751867 UTC

[section ""data" . $krep12_rgjLm_closure" {
     $krep12_rgjLm_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.759550186 UTC

[section ""data" . Data.Functor.Contravariant.$tcContravariant1_closure" {
     Data.Functor.Contravariant.$tcContravariant1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*Arr*_closure;
         const $krep12_rgjLm_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.761407986 UTC

[section ""cstring" . Data.Functor.Contravariant.$trModule2_bytes" {
     Data.Functor.Contravariant.$trModule2_bytes:
         I8[] [68,97,116,97,46,70,117,110,99,116,111,114,46,67,111,110,116,114,97,118,97,114,105,97,110,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.763687105 UTC

[section ""data" . Data.Functor.Contravariant.$trModule1_closure" {
     Data.Functor.Contravariant.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.Contravariant.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.765368729 UTC

[section ""cstring" . Data.Functor.Contravariant.$trModule4_bytes" {
     Data.Functor.Contravariant.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.767046629 UTC

[section ""data" . Data.Functor.Contravariant.$trModule3_closure" {
     Data.Functor.Contravariant.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.Contravariant.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.768852591 UTC

[section ""data" . Data.Functor.Contravariant.$trModule_closure" {
     Data.Functor.Contravariant.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Functor.Contravariant.$trModule3_closure+1;
         const Data.Functor.Contravariant.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.770717479 UTC

[section ""data" . Data.Functor.Contravariant.$tcContravariant_closure" {
     Data.Functor.Contravariant.$tcContravariant_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Functor.Contravariant.$trModule_closure+1;
         const Data.Functor.Contravariant.$tcContravariant2_closure+1;
         const Data.Functor.Contravariant.$tcContravariant1_closure+4;
         const 1944710495430526909;
         const 15571985404928937498;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.772696062 UTC

[section ""data" . Data.Functor.Contravariant.$tcPredicate_closure" {
     Data.Functor.Contravariant.$tcPredicate_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Functor.Contravariant.$trModule_closure+1;
         const Data.Functor.Contravariant.$tcPredicate1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 9927645946720114643;
         const 17478425232619398566;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.774638869 UTC

[section ""data" . $krep13_rgjLn_closure" {
     $krep13_rgjLn_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Functor.Contravariant.$tcPredicate_closure+1;
         const $krep1_rgjLb_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.776405725 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Predicate1_closure" {
     Data.Functor.Contravariant.$tc'Predicate1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep7_rgjLh_closure+4;
         const $krep13_rgjLn_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.778672727 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Predicate_closure" {
     Data.Functor.Contravariant.$tc'Predicate_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Functor.Contravariant.$trModule_closure+1;
         const Data.Functor.Contravariant.$tc'Predicate2_closure+1;
         const Data.Functor.Contravariant.$tc'Predicate1_closure+4;
         const 10560326927625189840;
         const 8988710799443424590;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.780572488 UTC

[section ""data" . Data.Functor.Contravariant.$tcComparison_closure" {
     Data.Functor.Contravariant.$tcComparison_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Functor.Contravariant.$trModule_closure+1;
         const Data.Functor.Contravariant.$tcComparison1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 8128667979445988110;
         const 9034904213662261762;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.782504272 UTC

[section ""data" . $krep14_rgjLo_closure" {
     $krep14_rgjLo_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Functor.Contravariant.$tcComparison_closure+1;
         const $krep1_rgjLb_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.78425869 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Comparison1_closure" {
     Data.Functor.Contravariant.$tc'Comparison1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_rgjLl_closure+4;
         const $krep14_rgjLo_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.786545141 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Comparison_closure" {
     Data.Functor.Contravariant.$tc'Comparison_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Functor.Contravariant.$trModule_closure+1;
         const Data.Functor.Contravariant.$tc'Comparison2_closure+1;
         const Data.Functor.Contravariant.$tc'Comparison1_closure+4;
         const 11047345948274903716;
         const 12707949450550295743;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.788496699 UTC

[section ""data" . Data.Functor.Contravariant.$tcEquivalence_closure" {
     Data.Functor.Contravariant.$tcEquivalence_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Functor.Contravariant.$trModule_closure+1;
         const Data.Functor.Contravariant.$tcEquivalence1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 9646573079009549553;
         const 12303965936368510845;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.790976678 UTC

[section ""data" . $krep15_rgjLp_closure" {
     $krep15_rgjLp_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Functor.Contravariant.$tcEquivalence_closure+1;
         const $krep1_rgjLb_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.792741772 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Equivalence1_closure" {
     Data.Functor.Contravariant.$tc'Equivalence1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep8_rgjLi_closure+4;
         const $krep15_rgjLp_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.794522814 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Equivalence_closure" {
     Data.Functor.Contravariant.$tc'Equivalence_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Functor.Contravariant.$trModule_closure+1;
         const Data.Functor.Contravariant.$tc'Equivalence2_closure+1;
         const Data.Functor.Contravariant.$tc'Equivalence1_closure+4;
         const 5667737350508967909;
         const 15093804341312440267;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.796433363 UTC

[section ""data" . Data.Functor.Contravariant.$tcOp_closure" {
     Data.Functor.Contravariant.$tcOp_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Functor.Contravariant.$trModule_closure+1;
         const Data.Functor.Contravariant.$tcOp1_closure+1;
         const GHC.Types.krep$*->*->*_closure;
         const 13209106975460307324;
         const 7546944290236364550;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.799390636 UTC

[section ""data" . $krep16_rgjLq_closure" {
     $krep16_rgjLq_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Functor.Contravariant.$tcOp_closure+1;
         const $krep5_rgjLf_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.801052563 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Op1_closure" {
     Data.Functor.Contravariant.$tc'Op1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_rgjLd_closure+4;
         const $krep16_rgjLq_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.802834542 UTC

[section ""data" . Data.Functor.Contravariant.$tc'Op_closure" {
     Data.Functor.Contravariant.$tc'Op_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Functor.Contravariant.$trModule_closure+1;
         const Data.Functor.Contravariant.$tc'Op2_closure+1;
         const Data.Functor.Contravariant.$tc'Op1_closure+4;
         const 12479862397628491530;
         const 1381176546464080972;
         const 2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.805585234 UTC

[section ""data" . Data.Functor.Contravariant.comparisonEquivalence1_closure" {
     Data.Functor.Contravariant.comparisonEquivalence1_closure:
         const Data.Functor.Contravariant.comparisonEquivalence1_info;
 },
 Data.Functor.Contravariant.comparisonEquivalence1_entry() //  [R2,
                                                                R3, R4]
         { []
         }
     {offset
       cgmiA: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cgmiB; else goto cgmiC;
       cgmiB: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.comparisonEquivalence1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmiC: // global
           I64[Sp - 8] = block_cgmiu_info;
           _sgm8k::P64 = R3;
           R3 = R4;
           _sgm8j::P64 = R2;
           R2 = _sgm8k::P64;
           R1 = _sgm8j::P64;
           Sp = Sp - 8;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.comparisonEquivalence1_info" {
     Data.Functor.Contravariant.comparisonEquivalence1_info:
         const Data.Functor.Contravariant.comparisonEquivalence1_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cgmiu() //  [R1]
         { []
         }
     {offset
       cgmiu: // global
           if (R1 & 7 == 2) goto cgmiy; else goto cgmix;
       cgmiy: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cgmix: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgmiu_info" {
     block_cgmiu_info:
         const _cgmiu;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.811029055 UTC

[section ""data" . Data.Functor.Contravariant.comparisonEquivalence_closure" {
     Data.Functor.Contravariant.comparisonEquivalence_closure:
         const Data.Functor.Contravariant.comparisonEquivalence_info;
 },
 Data.Functor.Contravariant.comparisonEquivalence_entry() //  [R2,
                                                               R3, R4]
         { []
         }
     {offset
       cgmj2: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Data.Functor.Contravariant.comparisonEquivalence1_entry(R4,
                                                                        R3,
                                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.comparisonEquivalence_info" {
     Data.Functor.Contravariant.comparisonEquivalence_info:
         const Data.Functor.Contravariant.comparisonEquivalence_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.814679415 UTC

[section ""data" . Data.Functor.Contravariant.defaultEquivalence_closure" {
     Data.Functor.Contravariant.defaultEquivalence_closure:
         const Data.Functor.Contravariant.defaultEquivalence_info;
 },
 Data.Functor.Contravariant.defaultEquivalence_entry() //  [R2]
         { []
         }
     {offset
       cgmjd: // global
           R2 = R2;
           call GHC.Classes.==_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.defaultEquivalence_info" {
     Data.Functor.Contravariant.defaultEquivalence_info:
         const Data.Functor.Contravariant.defaultEquivalence_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.818065951 UTC

[section ""data" . Data.Functor.Contravariant.defaultComparison_closure" {
     Data.Functor.Contravariant.defaultComparison_closure:
         const Data.Functor.Contravariant.defaultComparison_info;
 },
 Data.Functor.Contravariant.defaultComparison_entry() //  [R2]
         { []
         }
     {offset
       cgmjo: // global
           R2 = R2;
           call GHC.Classes.compare_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.defaultComparison_info" {
     Data.Functor.Contravariant.defaultComparison_info:
         const Data.Functor.Contravariant.defaultComparison_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.822442334 UTC

[section ""data" . Data.Functor.Contravariant.>$$<_closure" {
     Data.Functor.Contravariant.>$$<_closure:
         const Data.Functor.Contravariant.>$$<_info;
 },
 Data.Functor.Contravariant.>$$<_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgmjz: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cgmjA; else goto cgmjB;
       cgmjA: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.>$$<_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmjB: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.>$$<_info" {
     Data.Functor.Contravariant.>$$<_info:
         const Data.Functor.Contravariant.>$$<_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.826253898 UTC

[section ""data" . Data.Functor.Contravariant.>$<_closure" {
     Data.Functor.Contravariant.>$<_closure:
         const Data.Functor.Contravariant.>$<_info;
 },
 Data.Functor.Contravariant.>$<_entry() //  [R2]
         { []
         }
     {offset
       cgmjM: // global
           R2 = R2;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.>$<_info" {
     Data.Functor.Contravariant.>$<_info:
         const Data.Functor.Contravariant.>$<_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.830433485 UTC

[section ""data" . Data.Functor.Contravariant.phantom_closure" {
     Data.Functor.Contravariant.phantom_closure:
         const Data.Functor.Contravariant.phantom_info;
 },
 sat_sgm8u_entry() //  [R1]
         { []
         }
     {offset
       cgmk1: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cgmk2; else goto cgmk3;
       cgmk2: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmk3: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = GHC.Tuple.()_closure+1;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 40;
           call GHC.Base.<$_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgm8u_info" {
     sat_sgm8u_info:
         const sat_sgm8u_entry;
         const 2;
         const 18;
 },
 Data.Functor.Contravariant.phantom_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgmk4: // global
           _sgm8t::P64 = R4;
           _sgm8s::P64 = R3;
           _sgm8r::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cgmk5; else goto cgmk6;
       cgmk6: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmk8; else goto cgmk7;
       cgmk8: // global
           HpAlloc = 32;
           goto cgmk5;
       cgmk5: // global
           R4 = _sgm8t::P64;
           R3 = _sgm8s::P64;
           R2 = _sgm8r::P64;
           R1 = Data.Functor.Contravariant.phantom_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmk7: // global
           I64[Hp - 24] = sat_sgm8u_info;
           P64[Hp - 8] = _sgm8r::P64;
           P64[Hp] = _sgm8t::P64;
           R2 = _sgm8s::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = GHC.Tuple.()_closure+1;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 24;
           call Data.Functor.Contravariant.>$_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.phantom_info" {
     Data.Functor.Contravariant.phantom_info:
         const Data.Functor.Contravariant.phantom_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.836416677 UTC

[section ""data" . Data.Functor.Contravariant.$<_closure" {
     Data.Functor.Contravariant.$<_closure:
         const Data.Functor.Contravariant.$<_info;
 },
 Data.Functor.Contravariant.$<_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgmkw: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cgmkx; else goto cgmky;
       cgmkx: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$<_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmky: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call Data.Functor.Contravariant.>$_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$<_info" {
     Data.Functor.Contravariant.$<_info:
         const Data.Functor.Contravariant.$<_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.84058026 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantOp1_closure" {
     Data.Functor.Contravariant.$fContravariantOp1_closure:
         const Data.Functor.Contravariant.$fContravariantOp1_info;
 },
 Data.Functor.Contravariant.$fContravariantOp1_entry() //  [R2, R3]
         { []
         }
     {offset
       cgmkJ: // global
           R2 = R2;
           R1 = R3;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantOp1_info" {
     Data.Functor.Contravariant.$fContravariantOp1_info:
         const Data.Functor.Contravariant.$fContravariantOp1_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.844017546 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantOp2_closure" {
     Data.Functor.Contravariant.$fContravariantOp2_closure:
         const Data.Functor.Contravariant.$fContravariantOp2_info;
 },
 Data.Functor.Contravariant.$fContravariantOp2_entry() //  [R2, R3,
                                                            R4]
         { []
         }
     {offset
       cgmkU: // global
           R4 = R4;
           _sgm8C::P64 = R3;
           R3 = R2;
           R2 = _sgm8C::P64;
           call GHC.Base.._entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantOp2_info" {
     Data.Functor.Contravariant.$fContravariantOp2_info:
         const Data.Functor.Contravariant.$fContravariantOp2_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.847311469 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantOp_closure" {
     Data.Functor.Contravariant.$fContravariantOp_closure:
         const Data.Functor.Contravariant.C:Contravariant_con_info;
         const Data.Functor.Contravariant.$fContravariantOp2_closure+3;
         const Data.Functor.Contravariant.$fContravariantOp1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.849752178 UTC

[section ""data" . Data.Functor.Contravariant.getOp1_closure" {
     Data.Functor.Contravariant.getOp1_closure:
         const Data.Functor.Contravariant.getOp1_info;
 },
 Data.Functor.Contravariant.getOp1_entry() //  [R2]
         { []
         }
     {offset
       cgml6: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.getOp1_info" {
     Data.Functor.Contravariant.getOp1_info:
         const Data.Functor.Contravariant.getOp1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.853380109 UTC

[section ""data" . Data.Functor.Contravariant.getOp_closure" {
     Data.Functor.Contravariant.getOp_closure:
         const Data.Functor.Contravariant.getOp_info;
 },
 Data.Functor.Contravariant.getOp_entry() //  [R2]
         { []
         }
     {offset
       cgmlh: // global
           R2 = R2;
           call Data.Functor.Contravariant.getOp1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.getOp_info" {
     Data.Functor.Contravariant.getOp_info:
         const Data.Functor.Contravariant.getOp_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.857318778 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantEquivalence1_closure" {
     Data.Functor.Contravariant.$fContravariantEquivalence1_closure:
         const Data.Functor.Contravariant.$fContravariantEquivalence1_info;
 },
 Data.Functor.Contravariant.$fContravariantEquivalence1_entry() //  [R2,
                                                                     R3]
         { []
         }
     {offset
       cgmls: // global
           _sgm8F::P64 = R3;
           R3 = R2;
           R2 = R2;
           R1 = _sgm8F::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantEquivalence1_info" {
     Data.Functor.Contravariant.$fContravariantEquivalence1_info:
         const Data.Functor.Contravariant.$fContravariantEquivalence1_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.861101453 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantEquivalence2_closure" {
     Data.Functor.Contravariant.$fContravariantEquivalence2_closure:
         const Data.Functor.Contravariant.$fContravariantEquivalence2_info;
 },
 Data.Functor.Contravariant.$fContravariantEquivalence2_entry() //  [R2,
                                                                     R3, R4, R5]
         { []
         }
     {offset
       cgmlF: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cgmlJ; else goto cgmlI;
       cgmlJ: // global
           HpAlloc = 64;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantEquivalence2_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmlI: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = R2;
           P64[Hp - 32] = R5;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R4;
           _sgm8J::P64 = R3;
           R3 = Hp - 56;
           R2 = Hp - 24;
           R1 = _sgm8J::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantEquivalence2_info" {
     Data.Functor.Contravariant.$fContravariantEquivalence2_info:
         const Data.Functor.Contravariant.$fContravariantEquivalence2_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.864741292 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantEquivalence_closure" {
     Data.Functor.Contravariant.$fContravariantEquivalence_closure:
         const Data.Functor.Contravariant.C:Contravariant_con_info;
         const Data.Functor.Contravariant.$fContravariantEquivalence2_closure+4;
         const Data.Functor.Contravariant.$fContravariantEquivalence1_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.86726779 UTC

[section ""data" . Data.Functor.Contravariant.getEquivalence1_closure" {
     Data.Functor.Contravariant.getEquivalence1_closure:
         const Data.Functor.Contravariant.getEquivalence1_info;
 },
 Data.Functor.Contravariant.getEquivalence1_entry() //  [R2]
         { []
         }
     {offset
       cgmlV: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.getEquivalence1_info" {
     Data.Functor.Contravariant.getEquivalence1_info:
         const Data.Functor.Contravariant.getEquivalence1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.870681403 UTC

[section ""data" . Data.Functor.Contravariant.getEquivalence_closure" {
     Data.Functor.Contravariant.getEquivalence_closure:
         const Data.Functor.Contravariant.getEquivalence_info;
 },
 Data.Functor.Contravariant.getEquivalence_entry() //  [R2]
         { []
         }
     {offset
       cgmm6: // global
           R2 = R2;
           call Data.Functor.Contravariant.getEquivalence1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.getEquivalence_info" {
     Data.Functor.Contravariant.getEquivalence_info:
         const Data.Functor.Contravariant.getEquivalence_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.874400583 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantComparison1_closure" {
     Data.Functor.Contravariant.$fContravariantComparison1_closure:
         const Data.Functor.Contravariant.$fContravariantComparison1_info;
 },
 Data.Functor.Contravariant.$fContravariantComparison1_entry() //  [R2,
                                                                    R3]
         { []
         }
     {offset
       cgmmh: // global
           _sgm8Q::P64 = R3;
           R3 = R2;
           R2 = R2;
           R1 = _sgm8Q::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantComparison1_info" {
     Data.Functor.Contravariant.$fContravariantComparison1_info:
         const Data.Functor.Contravariant.$fContravariantComparison1_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.878137674 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantComparison2_closure" {
     Data.Functor.Contravariant.$fContravariantComparison2_closure:
         const Data.Functor.Contravariant.$fContravariantComparison2_info;
 },
 Data.Functor.Contravariant.$fContravariantComparison2_entry() //  [R2,
                                                                    R3, R4, R5]
         { []
         }
     {offset
       cgmmu: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cgmmy; else goto cgmmx;
       cgmmy: // global
           HpAlloc = 64;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantComparison2_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmmx: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = R2;
           P64[Hp - 32] = R5;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R4;
           _sgm8U::P64 = R3;
           R3 = Hp - 56;
           R2 = Hp - 24;
           R1 = _sgm8U::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantComparison2_info" {
     Data.Functor.Contravariant.$fContravariantComparison2_info:
         const Data.Functor.Contravariant.$fContravariantComparison2_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.881806087 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantComparison_closure" {
     Data.Functor.Contravariant.$fContravariantComparison_closure:
         const Data.Functor.Contravariant.C:Contravariant_con_info;
         const Data.Functor.Contravariant.$fContravariantComparison2_closure+4;
         const Data.Functor.Contravariant.$fContravariantComparison1_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.883891618 UTC

[section ""data" . Data.Functor.Contravariant.getComparison1_closure" {
     Data.Functor.Contravariant.getComparison1_closure:
         const Data.Functor.Contravariant.getComparison1_info;
 },
 Data.Functor.Contravariant.getComparison1_entry() //  [R2]
         { []
         }
     {offset
       cgmmK: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.getComparison1_info" {
     Data.Functor.Contravariant.getComparison1_info:
         const Data.Functor.Contravariant.getComparison1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.888011155 UTC

[section ""data" . Data.Functor.Contravariant.getComparison_closure" {
     Data.Functor.Contravariant.getComparison_closure:
         const Data.Functor.Contravariant.getComparison_info;
 },
 Data.Functor.Contravariant.getComparison_entry() //  [R2]
         { []
         }
     {offset
       cgmmV: // global
           R2 = R2;
           call Data.Functor.Contravariant.getComparison1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.getComparison_info" {
     Data.Functor.Contravariant.getComparison_info:
         const Data.Functor.Contravariant.getComparison_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.891263361 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantPredicate1_closure" {
     Data.Functor.Contravariant.$fContravariantPredicate1_closure:
         const Data.Functor.Contravariant.$fContravariantPredicate1_info;
 },
 Data.Functor.Contravariant.$fContravariantPredicate1_entry() //  [R2,
                                                                   R3]
         { []
         }
     {offset
       cgmn6: // global
           R2 = R2;
           R1 = R3;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantPredicate1_info" {
     Data.Functor.Contravariant.$fContravariantPredicate1_info:
         const Data.Functor.Contravariant.$fContravariantPredicate1_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.894737602 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantPredicate2_closure" {
     Data.Functor.Contravariant.$fContravariantPredicate2_closure:
         const Data.Functor.Contravariant.$fContravariantPredicate2_info;
 },
 Data.Functor.Contravariant.$fContravariantPredicate2_entry() //  [R2,
                                                                   R3, R4]
         { []
         }
     {offset
       cgmnh: // global
           R4 = R4;
           _sgm94::P64 = R3;
           R3 = R2;
           R2 = _sgm94::P64;
           call GHC.Base.._entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantPredicate2_info" {
     Data.Functor.Contravariant.$fContravariantPredicate2_info:
         const Data.Functor.Contravariant.$fContravariantPredicate2_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.898047901 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantPredicate_closure" {
     Data.Functor.Contravariant.$fContravariantPredicate_closure:
         const Data.Functor.Contravariant.C:Contravariant_con_info;
         const Data.Functor.Contravariant.$fContravariantPredicate2_closure+3;
         const Data.Functor.Contravariant.$fContravariantPredicate1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.900161659 UTC

[section ""data" . Data.Functor.Contravariant.getPredicate1_closure" {
     Data.Functor.Contravariant.getPredicate1_closure:
         const Data.Functor.Contravariant.getPredicate1_info;
 },
 Data.Functor.Contravariant.getPredicate1_entry() //  [R2]
         { []
         }
     {offset
       cgmnt: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.getPredicate1_info" {
     Data.Functor.Contravariant.getPredicate1_info:
         const Data.Functor.Contravariant.getPredicate1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.903670578 UTC

[section ""data" . Data.Functor.Contravariant.getPredicate_closure" {
     Data.Functor.Contravariant.getPredicate_closure:
         const Data.Functor.Contravariant.getPredicate_info;
 },
 Data.Functor.Contravariant.getPredicate_entry() //  [R2]
         { []
         }
     {offset
       cgmnE: // global
           R2 = R2;
           call Data.Functor.Contravariant.getPredicate1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.getPredicate_info" {
     Data.Functor.Contravariant.getPredicate_info:
         const Data.Functor.Contravariant.getPredicate_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.907097844 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantV1_$c>$_closure" {
     Data.Functor.Contravariant.$fContravariantV1_$c>$_closure:
         const Data.Functor.Contravariant.$fContravariantV1_$c>$_info;
 },
 Data.Functor.Contravariant.$fContravariantV1_$c>$_entry() //  [R3]
         { []
         }
     {offset
       cgmnP: // global
           R1 = R3 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantV1_$c>$_info" {
     Data.Functor.Contravariant.$fContravariantV1_$c>$_info:
         const Data.Functor.Contravariant.$fContravariantV1_$c>$_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.910451995 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantU1_$c>$_closure" {
     Data.Functor.Contravariant.$fContravariantU1_$c>$_closure:
         const Data.Functor.Contravariant.$fContravariantU1_$c>$_info;
 },
 Data.Functor.Contravariant.$fContravariantU1_$c>$_entry() //  []
         { []
         }
     {offset
       cgmo2: // global
           R1 = GHC.Generics.U1_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantU1_$c>$_info" {
     Data.Functor.Contravariant.$fContravariantU1_$c>$_info:
         const Data.Functor.Contravariant.$fContravariantU1_$c>$_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.913923728 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantK2_closure" {
     Data.Functor.Contravariant.$fContravariantK2_closure:
         const Data.Functor.Contravariant.$fContravariantK2_info;
 },
 Data.Functor.Contravariant.$fContravariantK2_entry() //  [R3]
         { []
         }
     {offset
       cgmof: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantK2_info" {
     Data.Functor.Contravariant.$fContravariantK2_info:
         const Data.Functor.Contravariant.$fContravariantK2_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.919670607 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariant:*:_$c>$_closure" {
     Data.Functor.Contravariant.$fContravariant:*:_$c>$_closure:
         const Data.Functor.Contravariant.$fContravariant:*:_$c>$_info;
 },
 f1_sgm9k_entry() //  [R1]
         { []
         }
     {offset
       cgmoA: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . f1_sgm9k_info" {
     f1_sgm9k_info:
         const f1_sgm9k_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sgm9n_entry() //  [R1]
         { []
         }
     {offset
       cgmoH: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cgmoI; else goto cgmoJ;
       cgmoI: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmoJ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 32];
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgm9n_info" {
     sat_sgm9n_info:
         const sat_sgm9n_entry;
         const 3;
         const 15;
 },
 sat_sgm9m_entry() //  [R1]
         { []
         }
     {offset
       cgmoO: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cgmoP; else goto cgmoQ;
       cgmoP: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmoQ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 32];
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgm9m_info" {
     sat_sgm9m_info:
         const sat_sgm9m_entry;
         const 3;
         const 15;
 },
 Data.Functor.Contravariant.$fContravariant:*:_$c>$_entry() //  [R2,
                                                                 R3, R4, R5]
         { []
         }
     {offset
       cgmoR: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgmoT; else goto cgmoU;
       cgmoT: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariant:*:_$c>$_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmoU: // global
           I64[Sp - 32] = block_cgmoq_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto ugmoY; else goto cgmor;
       ugmoY: // global
           call _cgmoq(R1) args: 0, res: 0, upd: 0;
       cgmor: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariant:*:_$c>$_info" {
     Data.Functor.Contravariant.$fContravariant:*:_$c>$_info:
         const Data.Functor.Contravariant.$fContravariant:*:_$c>$_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _cgmoq() //  [R1]
         { []
         }
     {offset
       cgmoq: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto cgmoX; else goto cgmoW;
       cgmoX: // global
           HpAlloc = 120;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cgmoW: // global
           _sgm9i::P64 = P64[R1 + 7];
           _sgm9j::P64 = P64[R1 + 15];
           I64[Hp - 112] = f1_sgm9k_info;
           P64[Hp - 104] = P64[Sp + 24];
           I64[Hp - 96] = sat_sgm9n_info;
           P64[Hp - 80] = P64[Sp + 16];
           P64[Hp - 72] = _sgm9j::P64;
           _cgmov::P64 = Hp - 111;
           P64[Hp - 64] = _cgmov::P64;
           I64[Hp - 56] = sat_sgm9m_info;
           P64[Hp - 40] = P64[Sp + 8];
           P64[Hp - 32] = _sgm9i::P64;
           P64[Hp - 24] = _cgmov::P64;
           I64[Hp - 16] = GHC.Generics.:*:_con_info;
           P64[Hp - 8] = Hp - 56;
           P64[Hp] = Hp - 96;
           R1 = Hp - 15;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgmoq_info" {
     block_cgmoq_info:
         const _cgmoq;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.932026492 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariant:.:1_closure" {
     Data.Functor.Contravariant.$fContravariant:.:1_closure:
         const Data.Functor.Contravariant.$fContravariant:.:1_info;
 },
 sat_sgm9t_entry() //  [R1]
         { []
         }
     {offset
       cgmpP: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgm9t_info" {
     sat_sgm9t_info:
         const sat_sgm9t_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sgm9u_entry() //  [R1]
         { []
         }
     {offset
       cgmpS: // global
           _sgm9u::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cgmpT; else goto cgmpU;
       cgmpU: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cgmpW; else goto cgmpV;
       cgmpW: // global
           HpAlloc = 16;
           goto cgmpT;
       cgmpT: // global
           R1 = _sgm9u::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmpV: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sgm9u::P64;
           _sgm9p::P64 = P64[_sgm9u::P64 + 16];
           _sgm9q::P64 = P64[_sgm9u::P64 + 24];
           I64[Hp - 8] = sat_sgm9t_info;
           P64[Hp] = _sgm9q::P64;
           R2 = _sgm9p::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 7;
           Sp = Sp - 32;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgm9u_info" {
     sat_sgm9u_info:
         const sat_sgm9u_entry;
         const 2;
         const 18;
 },
 Data.Functor.Contravariant.$fContravariant:.:1_entry() //  [R2, R3,
                                                             R4, R5]
         { []
         }
     {offset
       cgmpX: // global
           _sgm9r::P64 = R5;
           _sgm9q::P64 = R4;
           _sgm9p::P64 = R3;
           _sgm9o::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cgmpY; else goto cgmpZ;
       cgmpZ: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmq1; else goto cgmq0;
       cgmq1: // global
           HpAlloc = 32;
           goto cgmpY;
       cgmpY: // global
           R5 = _sgm9r::P64;
           R4 = _sgm9q::P64;
           R3 = _sgm9p::P64;
           R2 = _sgm9o::P64;
           R1 = Data.Functor.Contravariant.$fContravariant:.:1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmq0: // global
           I64[Hp - 24] = sat_sgm9u_info;
           P64[Hp - 8] = _sgm9p::P64;
           P64[Hp] = _sgm9q::P64;
           R2 = _sgm9o::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = _sgm9r::P64;
           Sp = Sp - 24;
           call GHC.Base.fmap_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariant:.:1_info" {
     Data.Functor.Contravariant.$fContravariant:.:1_info:
         const Data.Functor.Contravariant.$fContravariant:.:1_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.941173164 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantProduct_$c>$_closure" {
     Data.Functor.Contravariant.$fContravariantProduct_$c>$_closure:
         const Data.Functor.Contravariant.$fContravariantProduct_$c>$_info;
 },
 f1_sgm9C_entry() //  [R1]
         { []
         }
     {offset
       cgmqz: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . f1_sgm9C_info" {
     f1_sgm9C_info:
         const f1_sgm9C_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sgm9F_entry() //  [R1]
         { []
         }
     {offset
       cgmqG: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cgmqH; else goto cgmqI;
       cgmqH: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmqI: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 32];
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgm9F_info" {
     sat_sgm9F_info:
         const sat_sgm9F_entry;
         const 3;
         const 15;
 },
 sat_sgm9E_entry() //  [R1]
         { []
         }
     {offset
       cgmqN: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cgmqO; else goto cgmqP;
       cgmqO: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmqP: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 32];
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgm9E_info" {
     sat_sgm9E_info:
         const sat_sgm9E_entry;
         const 3;
         const 15;
 },
 Data.Functor.Contravariant.$fContravariantProduct_$c>$_entry() //  [R2,
                                                                     R3, R4, R5]
         { []
         }
     {offset
       cgmqQ: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgmqS; else goto cgmqT;
       cgmqS: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantProduct_$c>$_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmqT: // global
           I64[Sp - 32] = block_cgmqp_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto ugmqX; else goto cgmqq;
       ugmqX: // global
           call _cgmqp(R1) args: 0, res: 0, upd: 0;
       cgmqq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantProduct_$c>$_info" {
     Data.Functor.Contravariant.$fContravariantProduct_$c>$_info:
         const Data.Functor.Contravariant.$fContravariantProduct_$c>$_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _cgmqp() //  [R1]
         { []
         }
     {offset
       cgmqp: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto cgmqW; else goto cgmqV;
       cgmqW: // global
           HpAlloc = 120;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cgmqV: // global
           _sgm9A::P64 = P64[R1 + 7];
           _sgm9B::P64 = P64[R1 + 15];
           I64[Hp - 112] = f1_sgm9C_info;
           P64[Hp - 104] = P64[Sp + 24];
           I64[Hp - 96] = sat_sgm9F_info;
           P64[Hp - 80] = P64[Sp + 16];
           P64[Hp - 72] = _sgm9B::P64;
           _cgmqu::P64 = Hp - 111;
           P64[Hp - 64] = _cgmqu::P64;
           I64[Hp - 56] = sat_sgm9E_info;
           P64[Hp - 40] = P64[Sp + 8];
           P64[Hp - 32] = _sgm9A::P64;
           P64[Hp - 24] = _cgmqu::P64;
           I64[Hp - 16] = Data.Functor.Product.Pair_con_info;
           P64[Hp - 8] = Hp - 56;
           P64[Hp] = Hp - 96;
           R1 = Hp - 15;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgmqp_info" {
     block_cgmqp_info:
         const _cgmqp;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.952921886 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantConst1_closure" {
     Data.Functor.Contravariant.$fContravariantConst1_closure:
         const Data.Functor.Contravariant.$fContravariantConst1_info;
 },
 Data.Functor.Contravariant.$fContravariantConst1_entry() //  [R3]
         { []
         }
     {offset
       cgmrF: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantConst1_info" {
     Data.Functor.Contravariant.$fContravariantConst1_info:
         const Data.Functor.Contravariant.$fContravariantConst1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.957615437 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantCompose1_closure" {
     Data.Functor.Contravariant.$fContravariantCompose1_closure:
         const Data.Functor.Contravariant.$fContravariantCompose1_info;
 },
 sat_sgm9N_entry() //  [R1]
         { []
         }
     {offset
       cgmrZ: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgm9N_info" {
     sat_sgm9N_info:
         const sat_sgm9N_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sgm9O_entry() //  [R1]
         { []
         }
     {offset
       cgms2: // global
           _sgm9O::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cgms3; else goto cgms4;
       cgms4: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cgms6; else goto cgms5;
       cgms6: // global
           HpAlloc = 16;
           goto cgms3;
       cgms3: // global
           R1 = _sgm9O::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgms5: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sgm9O::P64;
           _sgm9J::P64 = P64[_sgm9O::P64 + 16];
           _sgm9K::P64 = P64[_sgm9O::P64 + 24];
           I64[Hp - 8] = sat_sgm9N_info;
           P64[Hp] = _sgm9K::P64;
           R2 = _sgm9J::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 7;
           Sp = Sp - 32;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgm9O_info" {
     sat_sgm9O_info:
         const sat_sgm9O_entry;
         const 2;
         const 18;
 },
 Data.Functor.Contravariant.$fContravariantCompose1_entry() //  [R2,
                                                                 R3, R4, R5]
         { []
         }
     {offset
       cgms7: // global
           _sgm9L::P64 = R5;
           _sgm9K::P64 = R4;
           _sgm9J::P64 = R3;
           _sgm9I::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cgms8; else goto cgms9;
       cgms9: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmsb; else goto cgmsa;
       cgmsb: // global
           HpAlloc = 32;
           goto cgms8;
       cgms8: // global
           R5 = _sgm9L::P64;
           R4 = _sgm9K::P64;
           R3 = _sgm9J::P64;
           R2 = _sgm9I::P64;
           R1 = Data.Functor.Contravariant.$fContravariantCompose1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmsa: // global
           I64[Hp - 24] = sat_sgm9O_info;
           P64[Hp - 8] = _sgm9J::P64;
           P64[Hp] = _sgm9K::P64;
           R2 = _sgm9I::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = _sgm9L::P64;
           Sp = Sp - 24;
           call GHC.Base.fmap_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantCompose1_info" {
     Data.Functor.Contravariant.$fContravariantCompose1_info:
         const Data.Functor.Contravariant.$fContravariantCompose1_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.96567424 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantProxy_$c>$_closure" {
     Data.Functor.Contravariant.$fContravariantProxy_$c>$_closure:
         const Data.Functor.Contravariant.$fContravariantProxy_$c>$_info;
 },
 Data.Functor.Contravariant.$fContravariantProxy_$c>$_entry() //  []
         { []
         }
     {offset
       cgmsz: // global
           R1 = Data.Proxy.Proxy_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantProxy_$c>$_info" {
     Data.Functor.Contravariant.$fContravariantProxy_$c>$_info:
         const Data.Functor.Contravariant.$fContravariantProxy_$c>$_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.969499381 UTC

[section ""data" . Data.Functor.Contravariant.$dm>$_closure" {
     Data.Functor.Contravariant.$dm>$_closure:
         const Data.Functor.Contravariant.$dm>$_info;
 },
 sat_sgm9U_entry() //  [R1]
         { []
         }
     {offset
       cgmsR: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgm9U_info" {
     sat_sgm9U_info:
         const sat_sgm9U_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Data.Functor.Contravariant.$dm>$_entry() //  [R2, R3]
         { []
         }
     {offset
       cgmsU: // global
           _sgm9S::P64 = R3;
           _sgm9R::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cgmsV; else goto cgmsW;
       cgmsW: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cgmsY; else goto cgmsX;
       cgmsY: // global
           HpAlloc = 16;
           goto cgmsV;
       cgmsV: // global
           R3 = _sgm9S::P64;
           R2 = _sgm9R::P64;
           R1 = Data.Functor.Contravariant.$dm>$_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmsX: // global
           I64[Hp - 8] = sat_sgm9U_info;
           P64[Hp] = _sgm9S::P64;
           R2 = _sgm9R::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 7;
           Sp = Sp - 16;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$dm>$_info" {
     Data.Functor.Contravariant.$dm>$_info:
         const Data.Functor.Contravariant.$dm>$_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.976016923 UTC

[section ""data" . Data.Functor.Contravariant.$fSemigroupOp_closure" {
     Data.Functor.Contravariant.$fSemigroupOp_closure:
         const Data.Functor.Contravariant.$fSemigroupOp_info;
 },
 sat_sgm9Y_entry() //  [R1, R2, R3, R4, R5]
         { []
         }
     {offset
       cgmtj: // global
           R6 = R5;
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 4];
           call GHC.Base.$fSemigroup(->)_$cstimes_entry(R6,
                                                        R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgm9Y_info" {
     sat_sgm9Y_info:
         const sat_sgm9Y_entry;
         const 1;
         const 9;
         const 17179869208;
 },
 sat_sgm9X_entry() //  [R1, R2]
         { []
         }
     {offset
       cgmtr: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call GHC.Base.$fSemigroup(->)_$csconcat_entry(R3,
                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgm9X_info" {
     sat_sgm9X_info:
         const sat_sgm9X_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sgm9W_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cgmtz: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call GHC.Base.$fSemigroup(->)_$c<>_entry(R5,
                                                    R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgm9W_info" {
     sat_sgm9W_info:
         const sat_sgm9W_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 Data.Functor.Contravariant.$fSemigroupOp_entry() //  [R2]
         { []
         }
     {offset
       cgmtD: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cgmtH; else goto cgmtG;
       cgmtH: // global
           HpAlloc = 80;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fSemigroupOp_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgmtG: // global
           I64[Hp - 72] = sat_sgm9Y_info;
           P64[Hp - 64] = R2;
           I64[Hp - 56] = sat_sgm9X_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = sat_sgm9W_info;
           P64[Hp - 32] = R2;
           I64[Hp - 24] = GHC.Base.C:Semigroup_con_info;
           P64[Hp - 16] = Hp - 37;
           P64[Hp - 8] = Hp - 55;
           P64[Hp] = Hp - 68;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fSemigroupOp_info" {
     Data.Functor.Contravariant.$fSemigroupOp_info:
         const Data.Functor.Contravariant.$fSemigroupOp_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.98480659 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidOp_$cp1Monoid_closure" {
     Data.Functor.Contravariant.$fMonoidOp_$cp1Monoid_closure:
         const Data.Functor.Contravariant.$fMonoidOp_$cp1Monoid_info;
 },
 sat_sgma0_entry() //  [R1]
         { []
         }
     {offset
       cgmub: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgmuc; else goto cgmud;
       cgmuc: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmud: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.$p1Monoid_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgma0_info" {
     sat_sgma0_info:
         const sat_sgma0_entry;
         const 1;
         const 16;
 },
 Data.Functor.Contravariant.$fMonoidOp_$cp1Monoid_entry() //  [R2]
         { []
         }
     {offset
       cgmue: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cgmui; else goto cgmuh;
       cgmui: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fMonoidOp_$cp1Monoid_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgmuh: // global
           I64[Hp - 16] = sat_sgma0_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           call Data.Functor.Contravariant.$fSemigroupOp_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fMonoidOp_$cp1Monoid_info" {
     Data.Functor.Contravariant.$fMonoidOp_$cp1Monoid_info:
         const Data.Functor.Contravariant.$fMonoidOp_$cp1Monoid_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:16.99230281 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidOp_closure" {
     Data.Functor.Contravariant.$fMonoidOp_closure:
         const Data.Functor.Contravariant.$fMonoidOp_info;
 },
 lvl7_sgma2_entry() //  [R1]
         { []
         }
     {offset
       cgmuB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgmuC; else goto cgmuD;
       cgmuC: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmuD: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.mempty_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl7_sgma2_info" {
     lvl7_sgma2_info:
         const lvl7_sgma2_entry;
         const 1;
         const 16;
 },
 sat_sgma7_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgmuJ: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call GHC.Base.$fMonoid(->)_$cmconcat_entry(R4,
                                                      R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgma7_info" {
     sat_sgma7_info:
         const sat_sgma7_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgma6_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cgmuR: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call GHC.Base.$fMonoid(->)_$cmappend_entry(R5,
                                                      R4,
                                                      R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgma6_info" {
     sat_sgma6_info:
         const sat_sgma6_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 sat_sgma5_entry() //  [R1]
         { []
         }
     {offset
       cgmuZ: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgma5_info" {
     sat_sgma5_info:
         const sat_sgma5_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sgma3_entry() //  [R1]
         { []
         }
     {offset
       cgmv6: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgmv7; else goto cgmv8;
       cgmv7: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmv8: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Functor.Contravariant.$fMonoidOp_$cp1Monoid_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgma3_info" {
     sat_sgma3_info:
         const sat_sgma3_entry;
         const 1;
         const 16;
 },
 Data.Functor.Contravariant.$fMonoidOp_entry() //  [R2]
         { []
         }
     {offset
       cgmva: // global
           Hp = Hp + 136;
           if (Hp > HpLim) (likely: False) goto cgmve; else goto cgmvd;
       cgmve: // global
           HpAlloc = 136;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fMonoidOp_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgmvd: // global
           I64[Hp - 128] = lvl7_sgma2_info;
           P64[Hp - 112] = R2;
           I64[Hp - 104] = sat_sgma7_info;
           P64[Hp - 96] = R2;
           I64[Hp - 88] = sat_sgma6_info;
           P64[Hp - 80] = R2;
           I64[Hp - 72] = sat_sgma5_info;
           P64[Hp - 64] = Hp - 128;
           I64[Hp - 56] = sat_sgma3_info;
           P64[Hp - 40] = R2;
           I64[Hp - 32] = GHC.Base.C:Monoid_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 71;
           P64[Hp - 8] = Hp - 85;
           P64[Hp] = Hp - 102;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fMonoidOp_info" {
     Data.Functor.Contravariant.$fMonoidOp_info:
         const Data.Functor.Contravariant.$fMonoidOp_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.004544709 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidComparison3_closure" {
     Data.Functor.Contravariant.$fMonoidComparison3_closure:
         const Data.Functor.Contravariant.$fMonoidComparison3_info;
 },
 Data.Functor.Contravariant.$fMonoidComparison3_entry() //  []
         { []
         }
     {offset
       cgmvS: // global
           R1 = GHC.Types.EQ_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fMonoidComparison3_info" {
     Data.Functor.Contravariant.$fMonoidComparison3_info:
         const Data.Functor.Contravariant.$fMonoidComparison3_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.009143094 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidComparison2_closure" {
     Data.Functor.Contravariant.$fMonoidComparison2_closure:
         const Data.Functor.Contravariant.$fMonoidComparison2_info;
 },
 sat_sgmah_entry() //  [R1, R2]
         { []
         }
     {offset
       cgmwj: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cgmwk; else goto cgmwl;
       cgmwk: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgmwl: // global
           I64[Sp - 24] = block_cgmwc_info;
           _sgmaf::P64 = R2;
           R2 = R2;
           _sgmae::P64 = P64[R1 + 15];
           R1 = P64[R1 + 7];
           P64[Sp - 16] = _sgmae::P64;
           P64[Sp - 8] = _sgmaf::P64;
           Sp = Sp - 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmah_info" {
     sat_sgmah_info:
         const sat_sgmah_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 _cgmwc() //  [R1]
         { []
         }
     {offset
       cgmwc: // global
           _cgmwi::P64 = R1 & 7;
           if (_cgmwi::P64 < 3) goto ugmwv; else goto cgmwh;
       ugmwv: // global
           if (_cgmwi::P64 < 2) goto cgmwf; else goto cgmwg;
       cgmwf: // global
           R1 = GHC.Types.LT_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cgmwg: // global
           R2 = P64[Sp + 16];
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
       cgmwh: // global
           R1 = GHC.Types.GT_closure+3;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgmwc_info" {
     block_cgmwc_info:
         const _cgmwc;
         const 2;
         const 30;
 },
 Data.Functor.Contravariant.$fMonoidComparison2_entry() //  [R2, R3,
                                                             R4]
         { []
         }
     {offset
       cgmww: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cgmwA; else goto cgmwz;
       cgmwA: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fMonoidComparison2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmwz: // global
           I64[Hp - 80] = stg_ap_2_upd_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = sat_sgmah_info;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 48;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fMonoidComparison2_info" {
     Data.Functor.Contravariant.$fMonoidComparison2_info:
         const Data.Functor.Contravariant.$fMonoidComparison2_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.017957544 UTC

[section ""data" . Data.Functor.Contravariant.$fSemigroupComparison3_closure" {
     Data.Functor.Contravariant.$fSemigroupComparison3_closure:
         const Data.Functor.Contravariant.$fSemigroupComparison3_info;
 },
 sat_sgmap_entry() //  [R1, R2]
         { []
         }
     {offset
       cgmxg: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cgmxh; else goto cgmxi;
       cgmxh: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgmxi: // global
           I64[Sp - 24] = block_cgmx9_info;
           _sgman::P64 = R2;
           R2 = R2;
           _sgmam::P64 = P64[R1 + 15];
           R1 = P64[R1 + 7];
           P64[Sp - 16] = _sgmam::P64;
           P64[Sp - 8] = _sgman::P64;
           Sp = Sp - 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmap_info" {
     sat_sgmap_info:
         const sat_sgmap_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 _cgmx9() //  [R1]
         { []
         }
     {offset
       cgmx9: // global
           _cgmxf::P64 = R1 & 7;
           if (_cgmxf::P64 < 3) goto ugmxs; else goto cgmxe;
       ugmxs: // global
           if (_cgmxf::P64 < 2) goto cgmxc; else goto cgmxd;
       cgmxc: // global
           R1 = GHC.Types.LT_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cgmxd: // global
           R2 = P64[Sp + 16];
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
       cgmxe: // global
           R1 = GHC.Types.GT_closure+3;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgmx9_info" {
     block_cgmx9_info:
         const _cgmx9;
         const 2;
         const 30;
 },
 Data.Functor.Contravariant.$fSemigroupComparison3_entry() //  [R2,
                                                                R3, R4]
         { []
         }
     {offset
       cgmxt: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cgmxx; else goto cgmxw;
       cgmxx: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fSemigroupComparison3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmxw: // global
           I64[Hp - 80] = stg_ap_2_upd_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = sat_sgmap_info;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 48;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fSemigroupComparison3_info" {
     Data.Functor.Contravariant.$fSemigroupComparison3_info:
         const Data.Functor.Contravariant.$fSemigroupComparison3_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.026729179 UTC

[section ""data" . Data.Functor.Contravariant.$fSemigroupComparison1_closure" {
     Data.Functor.Contravariant.$fSemigroupComparison1_closure:
         const Data.Functor.Contravariant.$fSemigroupComparison1_info;
         const 0;
 },
 lvl7_sgmav_entry() //  [R1]
         { []
         }
     {offset
       cgmy4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgmy5; else goto cgmy6;
       cgmy5: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmy6: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.$fSemigroupOrdering_$cstimes_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl7_sgmav_info" {
     lvl7_sgmav_info:
         const lvl7_sgmav_entry;
         const 1;
         const 4294967312;
         const Sgmyn_srt;
 },
 sat_sgmay_entry() //  [R1, R2]
         { []
         }
     {offset
       cgmyd: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmyh; else goto cgmyg;
       cgmyh: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgmyg: // global
           _sgmar::P64 = P64[R1 + 7];
           _sgmau::P64 = P64[R1 + 15];
           _sgmav::P64 = P64[R1 + 23];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmau::P64;
           P64[Hp] = R2;
           R3 = Hp - 24;
           R2 = _sgmar::P64;
           R1 = _sgmav::P64;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmay_info" {
     sat_sgmay_info:
         const sat_sgmay_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 Data.Functor.Contravariant.$fSemigroupComparison1_entry() //  [R2,
                                                                R3, R4, R5]
         { []
         }
     {offset
       cgmyi: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cgmym; else goto cgmyl;
       cgmym: // global
           HpAlloc = 88;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fSemigroupComparison1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmyl: // global
           I64[Hp - 80] = stg_ap_2_upd_info;
           P64[Hp - 64] = R4;
           P64[Hp - 56] = R5;
           I64[Hp - 48] = lvl7_sgmav_info;
           P64[Hp - 32] = R2;
           I64[Hp - 24] = sat_sgmay_info;
           P64[Hp - 16] = R3;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 48;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fSemigroupComparison1_info" {
     Data.Functor.Contravariant.$fSemigroupComparison1_info:
         const Data.Functor.Contravariant.$fSemigroupComparison1_entry;
         const 0;
         const 12884901902;
         const 17179869208;
         const Sgmyn_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.035883007 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantM1_closure" {
     Data.Functor.Contravariant.$fContravariantM1_closure:
         const Data.Functor.Contravariant.$fContravariantM1_info;
 },
 sat_sgmaB_entry() //  [R1]
         { []
         }
     {offset
       cgmyP: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgmyQ; else goto cgmyR;
       cgmyQ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmyR: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Functor.Contravariant.>$_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmaB_info" {
     sat_sgmaB_info:
         const sat_sgmaB_entry;
         const 1;
         const 16;
 },
 sat_sgmaA_entry() //  [R1]
         { []
         }
     {offset
       cgmyW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgmyX; else goto cgmyY;
       cgmyX: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmyY: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmaA_info" {
     sat_sgmaA_info:
         const sat_sgmaA_entry;
         const 1;
         const 16;
 },
 Data.Functor.Contravariant.$fContravariantM1_entry() //  [R2]
         { []
         }
     {offset
       cgmz0: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cgmz4; else goto cgmz3;
       cgmz4: // global
           HpAlloc = 72;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantM1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgmz3: // global
           I64[Hp - 64] = sat_sgmaB_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = sat_sgmaA_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = Data.Functor.Contravariant.C:Contravariant_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 64;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantM1_info" {
     Data.Functor.Contravariant.$fContravariantM1_info:
         const Data.Functor.Contravariant.$fContravariantM1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.043885874 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantRec1_closure" {
     Data.Functor.Contravariant.$fContravariantRec1_closure:
         const Data.Functor.Contravariant.$fContravariantRec1_info;
 },
 sat_sgmaE_entry() //  [R1]
         { []
         }
     {offset
       cgmzx: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgmzy; else goto cgmzz;
       cgmzy: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmzz: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Functor.Contravariant.>$_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmaE_info" {
     sat_sgmaE_info:
         const sat_sgmaE_entry;
         const 1;
         const 16;
 },
 sat_sgmaD_entry() //  [R1]
         { []
         }
     {offset
       cgmzE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgmzF; else goto cgmzG;
       cgmzF: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmzG: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmaD_info" {
     sat_sgmaD_info:
         const sat_sgmaD_entry;
         const 1;
         const 16;
 },
 Data.Functor.Contravariant.$fContravariantRec1_entry() //  [R2]
         { []
         }
     {offset
       cgmzI: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cgmzM; else goto cgmzL;
       cgmzM: // global
           HpAlloc = 72;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantRec1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgmzL: // global
           I64[Hp - 64] = sat_sgmaE_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = sat_sgmaD_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = Data.Functor.Contravariant.C:Contravariant_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 64;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantRec1_info" {
     Data.Functor.Contravariant.$fContravariantRec1_info:
         const Data.Functor.Contravariant.$fContravariantRec1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.052200316 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantAlt_closure" {
     Data.Functor.Contravariant.$fContravariantAlt_closure:
         const Data.Functor.Contravariant.$fContravariantAlt_info;
 },
 sat_sgmaH_entry() //  [R1]
         { []
         }
     {offset
       cgmAf: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgmAg; else goto cgmAh;
       cgmAg: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmAh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Functor.Contravariant.>$_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmaH_info" {
     sat_sgmaH_info:
         const sat_sgmaH_entry;
         const 1;
         const 16;
 },
 sat_sgmaG_entry() //  [R1]
         { []
         }
     {offset
       cgmAm: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgmAn; else goto cgmAo;
       cgmAn: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmAo: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmaG_info" {
     sat_sgmaG_info:
         const sat_sgmaG_entry;
         const 1;
         const 16;
 },
 Data.Functor.Contravariant.$fContravariantAlt_entry() //  [R2]
         { []
         }
     {offset
       cgmAq: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cgmAu; else goto cgmAt;
       cgmAu: // global
           HpAlloc = 72;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantAlt_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgmAt: // global
           I64[Hp - 64] = sat_sgmaH_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = sat_sgmaG_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = Data.Functor.Contravariant.C:Contravariant_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 64;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantAlt_info" {
     Data.Functor.Contravariant.$fContravariantAlt_info:
         const Data.Functor.Contravariant.$fContravariantAlt_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.058926117 UTC

[section ""data" . sat_sgmaI_closure" {
     sat_sgmaI_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.060659172 UTC

[section ""data" . sat_sgmaJ_closure" {
     sat_sgmaJ_closure:
         const :_con_info;
         const sat_sgmaI_closure+1;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.063315179 UTC

[section ""data" . lvl_rgjLr_closure" {
     lvl_rgjLr_closure:
         const lvl_rgjLr_info;
         const 0;
         const 0;
         const 0;
 },
 lvl_rgjLr_entry() //  [R1]
         { []
         }
     {offset
       cgmAX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgmAY; else goto cgmAZ;
       cgmAY: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmAZ: // global
           (_cgmAU::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_cgmAU::I64 == 0) goto cgmAW; else goto cgmAV;
       cgmAW: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       cgmAV: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _cgmAU::I64;
           R3 = sat_sgmaJ_closure+2;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl_rgjLr_info" {
     lvl_rgjLr_info:
         const lvl_rgjLr_entry;
         const 0;
         const 4294967317;
         const Sgmyn_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.067731476 UTC

[section ""data" . lvl1_rgjLs_closure" {
     lvl1_rgjLs_closure:
         const lvl1_rgjLs_info;
         const 0;
         const 0;
         const 0;
 },
 lvl1_rgjLs_entry() //  [R1]
         { []
         }
     {offset
       cgmBf: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgmBg; else goto cgmBh;
       cgmBg: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmBh: // global
           (_cgmBc::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_cgmBc::I64 == 0) goto cgmBe; else goto cgmBd;
       cgmBe: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       cgmBd: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _cgmBc::I64;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl1_rgjLs_info" {
     lvl1_rgjLs_info:
         const lvl1_rgjLs_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.076993906 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp_$clog1mexp_closure" {
     Data.Functor.Contravariant.$fFloatingOp_$clog1mexp_closure:
         const Data.Functor.Contravariant.$fFloatingOp_$clog1mexp_info;
         const 0;
 },
 $dFractional_sgmaM_entry() //  [R1]
         { []
         }
     {offset
       cgmBA: // global
           R2 = P64[R1 + 16];
           call GHC.Float.$p1Floating_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . $dFractional_sgmaM_info" {
     $dFractional_sgmaM_info:
         const $dFractional_sgmaM_entry;
         const 1;
         const 16;
 },
 $dNum_sgmaN_entry() //  [R1]
         { []
         }
     {offset
       cgmBH: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgmBI; else goto cgmBJ;
       cgmBI: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmBJ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Real.$p1Fractional_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . $dNum_sgmaN_info" {
     $dNum_sgmaN_info:
         const $dNum_sgmaN_entry;
         const 1;
         const 16;
 },
 x_sgmaO_entry() //  [R1]
         { []
         }
     {offset
       cgmBO: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgmBP; else goto cgmBQ;
       cgmBP: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmBQ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = lvl1_rgjLs_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . x_sgmaO_info" {
     x_sgmaO_info:
         const x_sgmaO_entry;
         const 1;
         const 4294967312;
         const Sgmyn_srt+24;
 },
 x1_sgmaP_entry() //  [R1]
         { []
         }
     {offset
       cgmBV: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgmBW; else goto cgmBX;
       cgmBW: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmBX: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = lvl_rgjLr_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . x1_sgmaP_info" {
     x1_sgmaP_info:
         const x1_sgmaP_entry;
         const 1;
         const 4294967312;
         const Sgmyn_srt+32;
 },
 sat_sgmaS_entry() //  [R1]
         { []
         }
     {offset
       cgmCg: // global
           _sgmaS::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cgmCh; else goto cgmCi;
       cgmCi: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmCk; else goto cgmCj;
       cgmCk: // global
           HpAlloc = 32;
           goto cgmCh;
       cgmCh: // global
           R1 = _sgmaS::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmCj: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sgmaS::P64;
           _sgmaK::P64 = P64[_sgmaS::P64 + 16];
           _sgmaL::P64 = P64[_sgmaS::P64 + 24];
           _sgmaQ::P64 = P64[_sgmaS::P64 + 32];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmaL::P64;
           P64[Hp] = _sgmaQ::P64;
           R2 = _sgmaK::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 24;
           Sp = Sp - 32;
           call GHC.Float.exp_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmaS_info" {
     sat_sgmaS_info:
         const sat_sgmaS_entry;
         const 3;
         const 15;
 },
 sat_sgmaT_entry() //  [R1]
         { []
         }
     {offset
       cgmCl: // global
           _sgmaT::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cgmCm; else goto cgmCn;
       cgmCn: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto cgmCp; else goto cgmCo;
       cgmCp: // global
           HpAlloc = 40;
           goto cgmCm;
       cgmCm: // global
           R1 = _sgmaT::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmCo: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sgmaT::P64;
           _sgmaK::P64 = P64[_sgmaT::P64 + 16];
           _sgmaL::P64 = P64[_sgmaT::P64 + 24];
           _sgmaN::P64 = P64[_sgmaT::P64 + 32];
           _sgmaO::P64 = P64[_sgmaT::P64 + 40];
           _sgmaQ::P64 = P64[_sgmaT::P64 + 48];
           I64[Hp - 32] = sat_sgmaS_info;
           P64[Hp - 16] = _sgmaK::P64;
           P64[Hp - 8] = _sgmaL::P64;
           P64[Hp] = _sgmaQ::P64;
           R2 = _sgmaN::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = _sgmaO::P64;
           P64[Sp - 24] = Hp - 32;
           Sp = Sp - 40;
           call GHC.Num.-_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmaT_info" {
     sat_sgmaT_info:
         const sat_sgmaT_entry;
         const 5;
         const 15;
 },
 sat_sgmaU_entry() //  [R1]
         { []
         }
     {offset
       cgmCq: // global
           _sgmaU::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cgmCr; else goto cgmCs;
       cgmCs: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cgmCu; else goto cgmCt;
       cgmCu: // global
           HpAlloc = 56;
           goto cgmCr;
       cgmCr: // global
           R1 = _sgmaU::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmCt: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sgmaU::P64;
           _sgmaK::P64 = P64[_sgmaU::P64 + 16];
           _sgmaL::P64 = P64[_sgmaU::P64 + 24];
           _sgmaN::P64 = P64[_sgmaU::P64 + 32];
           _sgmaO::P64 = P64[_sgmaU::P64 + 40];
           _sgmaP::P64 = P64[_sgmaU::P64 + 48];
           _sgmaQ::P64 = P64[_sgmaU::P64 + 56];
           I64[Hp - 48] = sat_sgmaT_info;
           P64[Hp - 32] = _sgmaK::P64;
           P64[Hp - 24] = _sgmaL::P64;
           P64[Hp - 16] = _sgmaN::P64;
           P64[Hp - 8] = _sgmaO::P64;
           P64[Hp] = _sgmaQ::P64;
           R2 = _sgmaN::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = _sgmaP::P64;
           P64[Sp - 24] = Hp - 48;
           Sp = Sp - 40;
           call GHC.Num.+_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmaU_info" {
     sat_sgmaU_info:
         const sat_sgmaU_entry;
         const 6;
         const 15;
 },
 sat_sgmaV_entry() //  [R1, R2]
         { []
         }
     {offset
       cgmCv: // global
           _sgmaQ::P64 = R2;
           _sgmaV::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cgmCw; else goto cgmCx;
       cgmCx: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cgmCz; else goto cgmCy;
       cgmCz: // global
           HpAlloc = 64;
           goto cgmCw;
       cgmCw: // global
           R2 = _sgmaQ::P64;
           R1 = _sgmaV::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgmCy: // global
           _sgmaK::P64 = P64[_sgmaV::P64 + 7];
           _sgmaL::P64 = P64[_sgmaV::P64 + 15];
           _sgmaN::P64 = P64[_sgmaV::P64 + 23];
           _sgmaO::P64 = P64[_sgmaV::P64 + 31];
           _sgmaP::P64 = P64[_sgmaV::P64 + 39];
           I64[Hp - 56] = sat_sgmaU_info;
           P64[Hp - 40] = _sgmaK::P64;
           P64[Hp - 32] = _sgmaL::P64;
           P64[Hp - 24] = _sgmaN::P64;
           P64[Hp - 16] = _sgmaO::P64;
           P64[Hp - 8] = _sgmaP::P64;
           P64[Hp] = _sgmaQ::P64;
           R2 = _sgmaK::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 56;
           Sp = Sp - 16;
           call GHC.Float.log_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmaV_info" {
     sat_sgmaV_info:
         const sat_sgmaV_entry;
         const 5;
         const 8;
         const 4294967301;
 },
 Data.Functor.Contravariant.$fFloatingOp_$clog1mexp_entry() //  [R2,
                                                                 R3]
         { []
         }
     {offset
       cgmCA: // global
           Hp = Hp + 144;
           if (Hp > HpLim) (likely: False) goto cgmCE; else goto cgmCD;
       cgmCE: // global
           HpAlloc = 144;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fFloatingOp_$clog1mexp_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmCD: // global
           I64[Hp - 136] = $dFractional_sgmaM_info;
           P64[Hp - 120] = R2;
           I64[Hp - 112] = $dNum_sgmaN_info;
           P64[Hp - 96] = Hp - 136;
           I64[Hp - 88] = x_sgmaO_info;
           _cgmBD::P64 = Hp - 112;
           P64[Hp - 72] = _cgmBD::P64;
           I64[Hp - 64] = x1_sgmaP_info;
           P64[Hp - 48] = _cgmBD::P64;
           I64[Hp - 40] = sat_sgmaV_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           P64[Hp - 16] = _cgmBD::P64;
           P64[Hp - 8] = Hp - 88;
           P64[Hp] = Hp - 64;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp_$clog1mexp_info" {
     Data.Functor.Contravariant.$fFloatingOp_$clog1mexp_info:
         const Data.Functor.Contravariant.$fFloatingOp_$clog1mexp_entry;
         const 0;
         const 30064771086;
         const 8589934607;
         const Sgmyn_srt+24;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.098152908 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp_$cexpm1_closure" {
     Data.Functor.Contravariant.$fFloatingOp_$cexpm1_closure:
         const Data.Functor.Contravariant.$fFloatingOp_$cexpm1_info;
         const 0;
 },
 $dFractional_sgmaY_entry() //  [R1]
         { []
         }
     {offset
       cgmDR: // global
           R2 = P64[R1 + 16];
           call GHC.Float.$p1Floating_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . $dFractional_sgmaY_info" {
     $dFractional_sgmaY_info:
         const $dFractional_sgmaY_entry;
         const 1;
         const 16;
 },
 $dNum_sgmaZ_entry() //  [R1]
         { []
         }
     {offset
       cgmDY: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgmDZ; else goto cgmE0;
       cgmDZ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmE0: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Real.$p1Fractional_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . $dNum_sgmaZ_info" {
     $dNum_sgmaZ_info:
         const $dNum_sgmaZ_entry;
         const 1;
         const 16;
 },
 x_sgmb0_entry() //  [R1]
         { []
         }
     {offset
       cgmE5: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgmE6; else goto cgmE7;
       cgmE6: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmE7: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = lvl_rgjLr_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . x_sgmb0_info" {
     x_sgmb0_info:
         const x_sgmb0_entry;
         const 1;
         const 4294967312;
         const Sgmyn_srt+32;
 },
 sat_sgmb3_entry() //  [R1]
         { []
         }
     {offset
       cgmEi: // global
           _sgmb3::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cgmEj; else goto cgmEk;
       cgmEk: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmEm; else goto cgmEl;
       cgmEm: // global
           HpAlloc = 32;
           goto cgmEj;
       cgmEj: // global
           R1 = _sgmb3::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmEl: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sgmb3::P64;
           _sgmaW::P64 = P64[_sgmb3::P64 + 16];
           _sgmaX::P64 = P64[_sgmb3::P64 + 24];
           _sgmb1::P64 = P64[_sgmb3::P64 + 32];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmaX::P64;
           P64[Hp] = _sgmb1::P64;
           R2 = _sgmaW::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 24;
           Sp = Sp - 32;
           call GHC.Float.exp_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmb3_info" {
     sat_sgmb3_info:
         const sat_sgmb3_entry;
         const 3;
         const 15;
 },
 sat_sgmb4_entry() //  [R1, R2]
         { []
         }
     {offset
       cgmEn: // global
           _sgmb1::P64 = R2;
           _sgmb4::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto cgmEo; else goto cgmEp;
       cgmEp: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto cgmEr; else goto cgmEq;
       cgmEr: // global
           HpAlloc = 40;
           goto cgmEo;
       cgmEo: // global
           R2 = _sgmb1::P64;
           R1 = _sgmb4::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgmEq: // global
           _sgmaW::P64 = P64[_sgmb4::P64 + 7];
           _sgmaX::P64 = P64[_sgmb4::P64 + 15];
           _sgmaZ::P64 = P64[_sgmb4::P64 + 23];
           _sgmb0::P64 = P64[_sgmb4::P64 + 31];
           I64[Hp - 32] = sat_sgmb3_info;
           P64[Hp - 16] = _sgmaW::P64;
           P64[Hp - 8] = _sgmaX::P64;
           P64[Hp] = _sgmb1::P64;
           R2 = _sgmaZ::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 32;
           P64[Sp - 8] = _sgmb0::P64;
           Sp = Sp - 24;
           call GHC.Num.-_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmb4_info" {
     sat_sgmb4_info:
         const sat_sgmb4_entry;
         const 4;
         const 8;
         const 4294967301;
 },
 Data.Functor.Contravariant.$fFloatingOp_$cexpm1_entry() //  [R2,
                                                              R3]
         { []
         }
     {offset
       cgmEs: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto cgmEw; else goto cgmEv;
       cgmEw: // global
           HpAlloc = 112;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fFloatingOp_$cexpm1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmEv: // global
           I64[Hp - 104] = $dFractional_sgmaY_info;
           P64[Hp - 88] = R2;
           I64[Hp - 80] = $dNum_sgmaZ_info;
           P64[Hp - 64] = Hp - 104;
           I64[Hp - 56] = x_sgmb0_info;
           _cgmDU::P64 = Hp - 80;
           P64[Hp - 40] = _cgmDU::P64;
           I64[Hp - 32] = sat_sgmb4_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = R3;
           P64[Hp - 8] = _cgmDU::P64;
           P64[Hp] = Hp - 56;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp_$cexpm1_info" {
     Data.Functor.Contravariant.$fFloatingOp_$cexpm1_info:
         const Data.Functor.Contravariant.$fFloatingOp_$cexpm1_entry;
         const 0;
         const 21474836494;
         const 8589934607;
         const Sgmyn_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.113983419 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp_$clog1pexp_closure" {
     Data.Functor.Contravariant.$fFloatingOp_$clog1pexp_closure:
         const Data.Functor.Contravariant.$fFloatingOp_$clog1pexp_info;
         const 0;
 },
 $dFractional_sgmb7_entry() //  [R1]
         { []
         }
     {offset
       cgmFk: // global
           R2 = P64[R1 + 16];
           call GHC.Float.$p1Floating_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . $dFractional_sgmb7_info" {
     $dFractional_sgmb7_info:
         const $dFractional_sgmb7_entry;
         const 1;
         const 16;
 },
 $dNum_sgmb8_entry() //  [R1]
         { []
         }
     {offset
       cgmFr: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgmFs; else goto cgmFt;
       cgmFs: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmFt: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Real.$p1Fractional_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . $dNum_sgmb8_info" {
     $dNum_sgmb8_info:
         const $dNum_sgmb8_entry;
         const 1;
         const 16;
 },
 x_sgmb9_entry() //  [R1]
         { []
         }
     {offset
       cgmFy: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgmFz; else goto cgmFA;
       cgmFz: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmFA: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = lvl_rgjLr_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . x_sgmb9_info" {
     x_sgmb9_info:
         const x_sgmb9_entry;
         const 1;
         const 4294967312;
         const Sgmyn_srt+32;
 },
 sat_sgmbc_entry() //  [R1]
         { []
         }
     {offset
       cgmFP: // global
           _sgmbc::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cgmFQ; else goto cgmFR;
       cgmFR: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmFT; else goto cgmFS;
       cgmFT: // global
           HpAlloc = 32;
           goto cgmFQ;
       cgmFQ: // global
           R1 = _sgmbc::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmFS: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sgmbc::P64;
           _sgmb5::P64 = P64[_sgmbc::P64 + 16];
           _sgmb6::P64 = P64[_sgmbc::P64 + 24];
           _sgmba::P64 = P64[_sgmbc::P64 + 32];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmb6::P64;
           P64[Hp] = _sgmba::P64;
           R2 = _sgmb5::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 24;
           Sp = Sp - 32;
           call GHC.Float.exp_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmbc_info" {
     sat_sgmbc_info:
         const sat_sgmbc_entry;
         const 3;
         const 15;
 },
 sat_sgmbd_entry() //  [R1]
         { []
         }
     {offset
       cgmFU: // global
           _sgmbd::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cgmFV; else goto cgmFW;
       cgmFW: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto cgmFY; else goto cgmFX;
       cgmFY: // global
           HpAlloc = 40;
           goto cgmFV;
       cgmFV: // global
           R1 = _sgmbd::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmFX: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sgmbd::P64;
           _sgmb5::P64 = P64[_sgmbd::P64 + 16];
           _sgmb6::P64 = P64[_sgmbd::P64 + 24];
           _sgmb8::P64 = P64[_sgmbd::P64 + 32];
           _sgmb9::P64 = P64[_sgmbd::P64 + 40];
           _sgmba::P64 = P64[_sgmbd::P64 + 48];
           I64[Hp - 32] = sat_sgmbc_info;
           P64[Hp - 16] = _sgmb5::P64;
           P64[Hp - 8] = _sgmb6::P64;
           P64[Hp] = _sgmba::P64;
           R2 = _sgmb8::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = _sgmb9::P64;
           P64[Sp - 24] = Hp - 32;
           Sp = Sp - 40;
           call GHC.Num.+_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmbd_info" {
     sat_sgmbd_info:
         const sat_sgmbd_entry;
         const 5;
         const 15;
 },
 sat_sgmbe_entry() //  [R1, R2]
         { []
         }
     {offset
       cgmFZ: // global
           _sgmba::P64 = R2;
           _sgmbe::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cgmG0; else goto cgmG1;
       cgmG1: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cgmG3; else goto cgmG2;
       cgmG3: // global
           HpAlloc = 56;
           goto cgmG0;
       cgmG0: // global
           R2 = _sgmba::P64;
           R1 = _sgmbe::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgmG2: // global
           _sgmb5::P64 = P64[_sgmbe::P64 + 7];
           _sgmb6::P64 = P64[_sgmbe::P64 + 15];
           _sgmb8::P64 = P64[_sgmbe::P64 + 23];
           _sgmb9::P64 = P64[_sgmbe::P64 + 31];
           I64[Hp - 48] = sat_sgmbd_info;
           P64[Hp - 32] = _sgmb5::P64;
           P64[Hp - 24] = _sgmb6::P64;
           P64[Hp - 16] = _sgmb8::P64;
           P64[Hp - 8] = _sgmb9::P64;
           P64[Hp] = _sgmba::P64;
           R2 = _sgmb5::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 48;
           Sp = Sp - 16;
           call GHC.Float.log_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmbe_info" {
     sat_sgmbe_info:
         const sat_sgmbe_entry;
         const 4;
         const 8;
         const 4294967301;
 },
 Data.Functor.Contravariant.$fFloatingOp_$clog1pexp_entry() //  [R2,
                                                                 R3]
         { []
         }
     {offset
       cgmG4: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto cgmG8; else goto cgmG7;
       cgmG8: // global
           HpAlloc = 112;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fFloatingOp_$clog1pexp_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmG7: // global
           I64[Hp - 104] = $dFractional_sgmb7_info;
           P64[Hp - 88] = R2;
           I64[Hp - 80] = $dNum_sgmb8_info;
           P64[Hp - 64] = Hp - 104;
           I64[Hp - 56] = x_sgmb9_info;
           _cgmFn::P64 = Hp - 80;
           P64[Hp - 40] = _cgmFn::P64;
           I64[Hp - 32] = sat_sgmbe_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = R3;
           P64[Hp - 8] = _cgmFn::P64;
           P64[Hp] = Hp - 56;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp_$clog1pexp_info" {
     Data.Functor.Contravariant.$fFloatingOp_$clog1pexp_info:
         const Data.Functor.Contravariant.$fFloatingOp_$clog1pexp_entry;
         const 0;
         const 38654705678;
         const 8589934607;
         const Sgmyn_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.132695612 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp_$clog1p_closure" {
     Data.Functor.Contravariant.$fFloatingOp_$clog1p_closure:
         const Data.Functor.Contravariant.$fFloatingOp_$clog1p_info;
         const 0;
 },
 $dFractional_sgmbh_entry() //  [R1]
         { []
         }
     {offset
       cgmH4: // global
           R2 = P64[R1 + 16];
           call GHC.Float.$p1Floating_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . $dFractional_sgmbh_info" {
     $dFractional_sgmbh_info:
         const $dFractional_sgmbh_entry;
         const 1;
         const 16;
 },
 $dNum_sgmbi_entry() //  [R1]
         { []
         }
     {offset
       cgmHb: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgmHc; else goto cgmHd;
       cgmHc: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmHd: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Real.$p1Fractional_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . $dNum_sgmbi_info" {
     $dNum_sgmbi_info:
         const $dNum_sgmbi_entry;
         const 1;
         const 16;
 },
 x_sgmbj_entry() //  [R1]
         { []
         }
     {offset
       cgmHi: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgmHj; else goto cgmHk;
       cgmHj: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmHk: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = lvl_rgjLr_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . x_sgmbj_info" {
     x_sgmbj_info:
         const x_sgmbj_entry;
         const 1;
         const 4294967312;
         const Sgmyn_srt+32;
 },
 sat_sgmbm_entry() //  [R1]
         { []
         }
     {offset
       cgmHv: // global
           _sgmbm::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cgmHw; else goto cgmHx;
       cgmHx: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmHz; else goto cgmHy;
       cgmHz: // global
           HpAlloc = 32;
           goto cgmHw;
       cgmHw: // global
           R1 = _sgmbm::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmHy: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sgmbm::P64;
           _sgmbg::P64 = P64[_sgmbm::P64 + 16];
           _sgmbi::P64 = P64[_sgmbm::P64 + 24];
           _sgmbj::P64 = P64[_sgmbm::P64 + 32];
           _sgmbk::P64 = P64[_sgmbm::P64 + 40];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmbg::P64;
           P64[Hp] = _sgmbk::P64;
           R2 = _sgmbi::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = _sgmbj::P64;
           P64[Sp - 24] = Hp - 24;
           Sp = Sp - 40;
           call GHC.Num.+_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmbm_info" {
     sat_sgmbm_info:
         const sat_sgmbm_entry;
         const 4;
         const 15;
 },
 sat_sgmbn_entry() //  [R1, R2]
         { []
         }
     {offset
       cgmHA: // global
           _sgmbk::P64 = R2;
           _sgmbn::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cgmHB; else goto cgmHC;
       cgmHC: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cgmHE; else goto cgmHD;
       cgmHE: // global
           HpAlloc = 48;
           goto cgmHB;
       cgmHB: // global
           R2 = _sgmbk::P64;
           R1 = _sgmbn::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgmHD: // global
           _sgmbf::P64 = P64[_sgmbn::P64 + 7];
           _sgmbg::P64 = P64[_sgmbn::P64 + 15];
           _sgmbi::P64 = P64[_sgmbn::P64 + 23];
           _sgmbj::P64 = P64[_sgmbn::P64 + 31];
           I64[Hp - 40] = sat_sgmbm_info;
           P64[Hp - 24] = _sgmbg::P64;
           P64[Hp - 16] = _sgmbi::P64;
           P64[Hp - 8] = _sgmbj::P64;
           P64[Hp] = _sgmbk::P64;
           R2 = _sgmbf::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 40;
           Sp = Sp - 16;
           call GHC.Float.log_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmbn_info" {
     sat_sgmbn_info:
         const sat_sgmbn_entry;
         const 4;
         const 8;
         const 4294967301;
 },
 Data.Functor.Contravariant.$fFloatingOp_$clog1p_entry() //  [R2,
                                                              R3]
         { []
         }
     {offset
       cgmHF: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto cgmHJ; else goto cgmHI;
       cgmHJ: // global
           HpAlloc = 112;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fFloatingOp_$clog1p_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmHI: // global
           I64[Hp - 104] = $dFractional_sgmbh_info;
           P64[Hp - 88] = R2;
           I64[Hp - 80] = $dNum_sgmbi_info;
           P64[Hp - 64] = Hp - 104;
           I64[Hp - 56] = x_sgmbj_info;
           _cgmH7::P64 = Hp - 80;
           P64[Hp - 40] = _cgmH7::P64;
           I64[Hp - 32] = sat_sgmbn_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = R3;
           P64[Hp - 8] = _cgmH7::P64;
           P64[Hp] = Hp - 56;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp_$clog1p_info" {
     Data.Functor.Contravariant.$fFloatingOp_$clog1p_info:
         const Data.Functor.Contravariant.$fFloatingOp_$clog1p_entry;
         const 0;
         const 73014444046;
         const 8589934607;
         const Sgmyn_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.145400305 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp17_closure" {
     Data.Functor.Contravariant.$fFloatingOp17_closure:
         const Data.Functor.Contravariant.$fFloatingOp17_info;
 },
 Data.Functor.Contravariant.$fFloatingOp17_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgmIu: // global
           _sgmbq::P64 = R4;
           _sgmbp::P64 = R3;
           _sgmbo::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cgmIv; else goto cgmIw;
       cgmIw: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmIy; else goto cgmIx;
       cgmIy: // global
           HpAlloc = 32;
           goto cgmIv;
       cgmIv: // global
           R4 = _sgmbq::P64;
           R3 = _sgmbp::P64;
           R2 = _sgmbo::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp17_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmIx: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmbp::P64;
           P64[Hp] = _sgmbq::P64;
           R2 = _sgmbo::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.exp_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp17_info" {
     Data.Functor.Contravariant.$fFloatingOp17_info:
         const Data.Functor.Contravariant.$fFloatingOp17_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.149907983 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp16_closure" {
     Data.Functor.Contravariant.$fFloatingOp16_closure:
         const Data.Functor.Contravariant.$fFloatingOp16_info;
 },
 Data.Functor.Contravariant.$fFloatingOp16_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgmIM: // global
           _sgmbu::P64 = R4;
           _sgmbt::P64 = R3;
           _sgmbs::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cgmIN; else goto cgmIO;
       cgmIO: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmIQ; else goto cgmIP;
       cgmIQ: // global
           HpAlloc = 32;
           goto cgmIN;
       cgmIN: // global
           R4 = _sgmbu::P64;
           R3 = _sgmbt::P64;
           R2 = _sgmbs::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp16_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmIP: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmbt::P64;
           P64[Hp] = _sgmbu::P64;
           R2 = _sgmbs::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.log_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp16_info" {
     Data.Functor.Contravariant.$fFloatingOp16_info:
         const Data.Functor.Contravariant.$fFloatingOp16_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.154314068 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp15_closure" {
     Data.Functor.Contravariant.$fFloatingOp15_closure:
         const Data.Functor.Contravariant.$fFloatingOp15_info;
 },
 Data.Functor.Contravariant.$fFloatingOp15_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgmJ4: // global
           _sgmby::P64 = R4;
           _sgmbx::P64 = R3;
           _sgmbw::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cgmJ5; else goto cgmJ6;
       cgmJ6: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmJ8; else goto cgmJ7;
       cgmJ8: // global
           HpAlloc = 32;
           goto cgmJ5;
       cgmJ5: // global
           R4 = _sgmby::P64;
           R3 = _sgmbx::P64;
           R2 = _sgmbw::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp15_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmJ7: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmbx::P64;
           P64[Hp] = _sgmby::P64;
           R2 = _sgmbw::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.sqrt_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp15_info" {
     Data.Functor.Contravariant.$fFloatingOp15_info:
         const Data.Functor.Contravariant.$fFloatingOp15_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.15896696 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp14_closure" {
     Data.Functor.Contravariant.$fFloatingOp14_closure:
         const Data.Functor.Contravariant.$fFloatingOp14_info;
 },
 Data.Functor.Contravariant.$fFloatingOp14_entry() //  [R2, R3, R4,
                                                        R5]
         { []
         }
     {offset
       cgmJn: // global
           _sgmbD::P64 = R5;
           _sgmbC::P64 = R4;
           _sgmbB::P64 = R3;
           _sgmbA::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cgmJo; else goto cgmJp;
       cgmJp: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cgmJr; else goto cgmJq;
       cgmJr: // global
           HpAlloc = 64;
           goto cgmJo;
       cgmJo: // global
           R5 = _sgmbD::P64;
           R4 = _sgmbC::P64;
           R3 = _sgmbB::P64;
           R2 = _sgmbA::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp14_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmJq: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = _sgmbC::P64;
           P64[Hp - 32] = _sgmbD::P64;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmbB::P64;
           P64[Hp] = _sgmbD::P64;
           R2 = _sgmbA::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = Hp - 56;
           Sp = Sp - 24;
           call GHC.Float.**_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp14_info" {
     Data.Functor.Contravariant.$fFloatingOp14_info:
         const Data.Functor.Contravariant.$fFloatingOp14_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.164696218 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp13_closure" {
     Data.Functor.Contravariant.$fFloatingOp13_closure:
         const Data.Functor.Contravariant.$fFloatingOp13_info;
 },
 Data.Functor.Contravariant.$fFloatingOp13_entry() //  [R2, R3, R4,
                                                        R5]
         { []
         }
     {offset
       cgmJI: // global
           _sgmbJ::P64 = R5;
           _sgmbI::P64 = R4;
           _sgmbH::P64 = R3;
           _sgmbG::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cgmJJ; else goto cgmJK;
       cgmJK: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cgmJM; else goto cgmJL;
       cgmJM: // global
           HpAlloc = 64;
           goto cgmJJ;
       cgmJJ: // global
           R5 = _sgmbJ::P64;
           R4 = _sgmbI::P64;
           R3 = _sgmbH::P64;
           R2 = _sgmbG::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp13_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmJL: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = _sgmbI::P64;
           P64[Hp - 32] = _sgmbJ::P64;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmbH::P64;
           P64[Hp] = _sgmbJ::P64;
           R2 = _sgmbG::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = Hp - 56;
           Sp = Sp - 24;
           call GHC.Float.logBase_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp13_info" {
     Data.Functor.Contravariant.$fFloatingOp13_info:
         const Data.Functor.Contravariant.$fFloatingOp13_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.169115148 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp12_closure" {
     Data.Functor.Contravariant.$fFloatingOp12_closure:
         const Data.Functor.Contravariant.$fFloatingOp12_info;
 },
 Data.Functor.Contravariant.$fFloatingOp12_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgmK2: // global
           _sgmbO::P64 = R4;
           _sgmbN::P64 = R3;
           _sgmbM::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cgmK3; else goto cgmK4;
       cgmK4: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmK6; else goto cgmK5;
       cgmK6: // global
           HpAlloc = 32;
           goto cgmK3;
       cgmK3: // global
           R4 = _sgmbO::P64;
           R3 = _sgmbN::P64;
           R2 = _sgmbM::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp12_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmK5: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmbN::P64;
           P64[Hp] = _sgmbO::P64;
           R2 = _sgmbM::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.sin_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp12_info" {
     Data.Functor.Contravariant.$fFloatingOp12_info:
         const Data.Functor.Contravariant.$fFloatingOp12_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.173420308 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp11_closure" {
     Data.Functor.Contravariant.$fFloatingOp11_closure:
         const Data.Functor.Contravariant.$fFloatingOp11_info;
 },
 Data.Functor.Contravariant.$fFloatingOp11_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgmKk: // global
           _sgmbS::P64 = R4;
           _sgmbR::P64 = R3;
           _sgmbQ::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cgmKl; else goto cgmKm;
       cgmKm: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmKo; else goto cgmKn;
       cgmKo: // global
           HpAlloc = 32;
           goto cgmKl;
       cgmKl: // global
           R4 = _sgmbS::P64;
           R3 = _sgmbR::P64;
           R2 = _sgmbQ::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp11_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmKn: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmbR::P64;
           P64[Hp] = _sgmbS::P64;
           R2 = _sgmbQ::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.cos_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp11_info" {
     Data.Functor.Contravariant.$fFloatingOp11_info:
         const Data.Functor.Contravariant.$fFloatingOp11_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.177712103 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp10_closure" {
     Data.Functor.Contravariant.$fFloatingOp10_closure:
         const Data.Functor.Contravariant.$fFloatingOp10_info;
 },
 Data.Functor.Contravariant.$fFloatingOp10_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgmKC: // global
           _sgmbW::P64 = R4;
           _sgmbV::P64 = R3;
           _sgmbU::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cgmKD; else goto cgmKE;
       cgmKE: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmKG; else goto cgmKF;
       cgmKG: // global
           HpAlloc = 32;
           goto cgmKD;
       cgmKD: // global
           R4 = _sgmbW::P64;
           R3 = _sgmbV::P64;
           R2 = _sgmbU::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp10_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmKF: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmbV::P64;
           P64[Hp] = _sgmbW::P64;
           R2 = _sgmbU::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.tan_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp10_info" {
     Data.Functor.Contravariant.$fFloatingOp10_info:
         const Data.Functor.Contravariant.$fFloatingOp10_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.182168381 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp9_closure" {
     Data.Functor.Contravariant.$fFloatingOp9_closure:
         const Data.Functor.Contravariant.$fFloatingOp9_info;
 },
 Data.Functor.Contravariant.$fFloatingOp9_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgmKU: // global
           _sgmc0::P64 = R4;
           _sgmbZ::P64 = R3;
           _sgmbY::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cgmKV; else goto cgmKW;
       cgmKW: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmKY; else goto cgmKX;
       cgmKY: // global
           HpAlloc = 32;
           goto cgmKV;
       cgmKV: // global
           R4 = _sgmc0::P64;
           R3 = _sgmbZ::P64;
           R2 = _sgmbY::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp9_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmKX: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmbZ::P64;
           P64[Hp] = _sgmc0::P64;
           R2 = _sgmbY::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.asin_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp9_info" {
     Data.Functor.Contravariant.$fFloatingOp9_info:
         const Data.Functor.Contravariant.$fFloatingOp9_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.186319712 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp8_closure" {
     Data.Functor.Contravariant.$fFloatingOp8_closure:
         const Data.Functor.Contravariant.$fFloatingOp8_info;
 },
 Data.Functor.Contravariant.$fFloatingOp8_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgmLc: // global
           _sgmc4::P64 = R4;
           _sgmc3::P64 = R3;
           _sgmc2::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cgmLd; else goto cgmLe;
       cgmLe: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmLg; else goto cgmLf;
       cgmLg: // global
           HpAlloc = 32;
           goto cgmLd;
       cgmLd: // global
           R4 = _sgmc4::P64;
           R3 = _sgmc3::P64;
           R2 = _sgmc2::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp8_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmLf: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmc3::P64;
           P64[Hp] = _sgmc4::P64;
           R2 = _sgmc2::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.acos_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp8_info" {
     Data.Functor.Contravariant.$fFloatingOp8_info:
         const Data.Functor.Contravariant.$fFloatingOp8_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.190571708 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp7_closure" {
     Data.Functor.Contravariant.$fFloatingOp7_closure:
         const Data.Functor.Contravariant.$fFloatingOp7_info;
 },
 Data.Functor.Contravariant.$fFloatingOp7_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgmLu: // global
           _sgmc8::P64 = R4;
           _sgmc7::P64 = R3;
           _sgmc6::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cgmLv; else goto cgmLw;
       cgmLw: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmLy; else goto cgmLx;
       cgmLy: // global
           HpAlloc = 32;
           goto cgmLv;
       cgmLv: // global
           R4 = _sgmc8::P64;
           R3 = _sgmc7::P64;
           R2 = _sgmc6::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp7_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmLx: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmc7::P64;
           P64[Hp] = _sgmc8::P64;
           R2 = _sgmc6::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.atan_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp7_info" {
     Data.Functor.Contravariant.$fFloatingOp7_info:
         const Data.Functor.Contravariant.$fFloatingOp7_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.194754119 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp6_closure" {
     Data.Functor.Contravariant.$fFloatingOp6_closure:
         const Data.Functor.Contravariant.$fFloatingOp6_info;
 },
 Data.Functor.Contravariant.$fFloatingOp6_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgmLM: // global
           _sgmcc::P64 = R4;
           _sgmcb::P64 = R3;
           _sgmca::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cgmLN; else goto cgmLO;
       cgmLO: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmLQ; else goto cgmLP;
       cgmLQ: // global
           HpAlloc = 32;
           goto cgmLN;
       cgmLN: // global
           R4 = _sgmcc::P64;
           R3 = _sgmcb::P64;
           R2 = _sgmca::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp6_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmLP: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmcb::P64;
           P64[Hp] = _sgmcc::P64;
           R2 = _sgmca::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.sinh_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp6_info" {
     Data.Functor.Contravariant.$fFloatingOp6_info:
         const Data.Functor.Contravariant.$fFloatingOp6_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.199638943 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp5_closure" {
     Data.Functor.Contravariant.$fFloatingOp5_closure:
         const Data.Functor.Contravariant.$fFloatingOp5_info;
 },
 Data.Functor.Contravariant.$fFloatingOp5_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgmM4: // global
           _sgmcg::P64 = R4;
           _sgmcf::P64 = R3;
           _sgmce::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cgmM5; else goto cgmM6;
       cgmM6: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmM8; else goto cgmM7;
       cgmM8: // global
           HpAlloc = 32;
           goto cgmM5;
       cgmM5: // global
           R4 = _sgmcg::P64;
           R3 = _sgmcf::P64;
           R2 = _sgmce::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp5_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmM7: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmcf::P64;
           P64[Hp] = _sgmcg::P64;
           R2 = _sgmce::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.cosh_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp5_info" {
     Data.Functor.Contravariant.$fFloatingOp5_info:
         const Data.Functor.Contravariant.$fFloatingOp5_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.204200931 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp4_closure" {
     Data.Functor.Contravariant.$fFloatingOp4_closure:
         const Data.Functor.Contravariant.$fFloatingOp4_info;
 },
 Data.Functor.Contravariant.$fFloatingOp4_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgmMm: // global
           _sgmck::P64 = R4;
           _sgmcj::P64 = R3;
           _sgmci::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cgmMn; else goto cgmMo;
       cgmMo: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmMq; else goto cgmMp;
       cgmMq: // global
           HpAlloc = 32;
           goto cgmMn;
       cgmMn: // global
           R4 = _sgmck::P64;
           R3 = _sgmcj::P64;
           R2 = _sgmci::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp4_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmMp: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmcj::P64;
           P64[Hp] = _sgmck::P64;
           R2 = _sgmci::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.tanh_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp4_info" {
     Data.Functor.Contravariant.$fFloatingOp4_info:
         const Data.Functor.Contravariant.$fFloatingOp4_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.208465162 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp3_closure" {
     Data.Functor.Contravariant.$fFloatingOp3_closure:
         const Data.Functor.Contravariant.$fFloatingOp3_info;
 },
 Data.Functor.Contravariant.$fFloatingOp3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgmME: // global
           _sgmco::P64 = R4;
           _sgmcn::P64 = R3;
           _sgmcm::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cgmMF; else goto cgmMG;
       cgmMG: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmMI; else goto cgmMH;
       cgmMI: // global
           HpAlloc = 32;
           goto cgmMF;
       cgmMF: // global
           R4 = _sgmco::P64;
           R3 = _sgmcn::P64;
           R2 = _sgmcm::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmMH: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmcn::P64;
           P64[Hp] = _sgmco::P64;
           R2 = _sgmcm::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.asinh_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp3_info" {
     Data.Functor.Contravariant.$fFloatingOp3_info:
         const Data.Functor.Contravariant.$fFloatingOp3_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.212687202 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp2_closure" {
     Data.Functor.Contravariant.$fFloatingOp2_closure:
         const Data.Functor.Contravariant.$fFloatingOp2_info;
 },
 Data.Functor.Contravariant.$fFloatingOp2_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgmMW: // global
           _sgmcs::P64 = R4;
           _sgmcr::P64 = R3;
           _sgmcq::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cgmMX; else goto cgmMY;
       cgmMY: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmN0; else goto cgmMZ;
       cgmN0: // global
           HpAlloc = 32;
           goto cgmMX;
       cgmMX: // global
           R4 = _sgmcs::P64;
           R3 = _sgmcr::P64;
           R2 = _sgmcq::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmMZ: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmcr::P64;
           P64[Hp] = _sgmcs::P64;
           R2 = _sgmcq::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.acosh_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp2_info" {
     Data.Functor.Contravariant.$fFloatingOp2_info:
         const Data.Functor.Contravariant.$fFloatingOp2_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.216865755 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp1_closure" {
     Data.Functor.Contravariant.$fFloatingOp1_closure:
         const Data.Functor.Contravariant.$fFloatingOp1_info;
 },
 Data.Functor.Contravariant.$fFloatingOp1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgmNe: // global
           _sgmcw::P64 = R4;
           _sgmcv::P64 = R3;
           _sgmcu::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cgmNf; else goto cgmNg;
       cgmNg: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmNi; else goto cgmNh;
       cgmNi: // global
           HpAlloc = 32;
           goto cgmNf;
       cgmNf: // global
           R4 = _sgmcw::P64;
           R3 = _sgmcv::P64;
           R2 = _sgmcu::P64;
           R1 = Data.Functor.Contravariant.$fFloatingOp1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmNh: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmcv::P64;
           P64[Hp] = _sgmcw::P64;
           R2 = _sgmcu::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Float.atanh_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp1_info" {
     Data.Functor.Contravariant.$fFloatingOp1_info:
         const Data.Functor.Contravariant.$fFloatingOp1_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.221218404 UTC

[section ""data" . Data.Functor.Contravariant.$fFractionalOp2_closure" {
     Data.Functor.Contravariant.$fFractionalOp2_closure:
         const Data.Functor.Contravariant.$fFractionalOp2_info;
 },
 Data.Functor.Contravariant.$fFractionalOp2_entry() //  [R2, R3, R4,
                                                         R5]
         { []
         }
     {offset
       cgmNx: // global
           _sgmcB::P64 = R5;
           _sgmcA::P64 = R4;
           _sgmcz::P64 = R3;
           _sgmcy::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cgmNy; else goto cgmNz;
       cgmNz: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cgmNB; else goto cgmNA;
       cgmNB: // global
           HpAlloc = 64;
           goto cgmNy;
       cgmNy: // global
           R5 = _sgmcB::P64;
           R4 = _sgmcA::P64;
           R3 = _sgmcz::P64;
           R2 = _sgmcy::P64;
           R1 = Data.Functor.Contravariant.$fFractionalOp2_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmNA: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = _sgmcA::P64;
           P64[Hp - 32] = _sgmcB::P64;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmcz::P64;
           P64[Hp] = _sgmcB::P64;
           R2 = _sgmcy::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = Hp - 56;
           Sp = Sp - 24;
           call GHC.Real./_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFractionalOp2_info" {
     Data.Functor.Contravariant.$fFractionalOp2_info:
         const Data.Functor.Contravariant.$fFractionalOp2_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.226062289 UTC

[section ""data" . Data.Functor.Contravariant.$fFractionalOp1_closure" {
     Data.Functor.Contravariant.$fFractionalOp1_closure:
         const Data.Functor.Contravariant.$fFractionalOp1_info;
 },
 Data.Functor.Contravariant.$fFractionalOp1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgmNR: // global
           _sgmcG::P64 = R4;
           _sgmcF::P64 = R3;
           _sgmcE::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cgmNS; else goto cgmNT;
       cgmNT: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmNV; else goto cgmNU;
       cgmNV: // global
           HpAlloc = 32;
           goto cgmNS;
       cgmNS: // global
           R4 = _sgmcG::P64;
           R3 = _sgmcF::P64;
           R2 = _sgmcE::P64;
           R1 = Data.Functor.Contravariant.$fFractionalOp1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmNU: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmcF::P64;
           P64[Hp] = _sgmcG::P64;
           R2 = _sgmcE::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Real.recip_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFractionalOp1_info" {
     Data.Functor.Contravariant.$fFractionalOp1_info:
         const Data.Functor.Contravariant.$fFractionalOp1_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.23113267 UTC

[section ""data" . Data.Functor.Contravariant.$fFractionalOp_$cfromRational_closure" {
     Data.Functor.Contravariant.$fFractionalOp_$cfromRational_closure:
         const Data.Functor.Contravariant.$fFractionalOp_$cfromRational_info;
 },
 x_sgmcK_entry() //  [R1]
         { []
         }
     {offset
       cgmOc: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgmOd; else goto cgmOe;
       cgmOd: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmOe: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call GHC.Real.fromRational_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . x_sgmcK_info" {
     x_sgmcK_info:
         const x_sgmcK_entry;
         const 2;
         const 18;
 },
 sat_sgmcM_entry() //  [R1]
         { []
         }
     {offset
       cgmOk: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmcM_info" {
     sat_sgmcM_info:
         const sat_sgmcM_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Data.Functor.Contravariant.$fFractionalOp_$cfromRational_entry() //  [R2,
                                                                       R3]
         { []
         }
     {offset
       cgmOn: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cgmOr; else goto cgmOq;
       cgmOr: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fFractionalOp_$cfromRational_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmOq: // global
           I64[Hp - 40] = x_sgmcK_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = R3;
           I64[Hp - 8] = sat_sgmcM_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFractionalOp_$cfromRational_info" {
     Data.Functor.Contravariant.$fFractionalOp_$cfromRational_info:
         const Data.Functor.Contravariant.$fFractionalOp_$cfromRational_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.239948402 UTC

[section ""data" . Data.Functor.Contravariant.$fNumOp_$cnegate_closure" {
     Data.Functor.Contravariant.$fNumOp_$cnegate_closure:
         const Data.Functor.Contravariant.$fNumOp_$cnegate_info;
         const 0;
 },
 x_sgmcP_entry() //  [R1]
         { []
         }
     {offset
       cgmOS: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgmOT; else goto cgmOU;
       cgmOT: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmOU: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = lvl1_rgjLs_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . x_sgmcP_info" {
     x_sgmcP_info:
         const x_sgmcP_entry;
         const 1;
         const 4294967312;
         const Sgmyn_srt+24;
 },
 sat_sgmcS_entry() //  [R1, R2]
         { []
         }
     {offset
       cgmP1: // global
           _sgmcQ::P64 = R2;
           _sgmcS::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto cgmP2; else goto cgmP3;
       cgmP3: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmP5; else goto cgmP4;
       cgmP5: // global
           HpAlloc = 32;
           goto cgmP2;
       cgmP2: // global
           R2 = _sgmcQ::P64;
           R1 = _sgmcS::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgmP4: // global
           _sgmcN::P64 = P64[_sgmcS::P64 + 7];
           _sgmcO::P64 = P64[_sgmcS::P64 + 15];
           _sgmcP::P64 = P64[_sgmcS::P64 + 23];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmcO::P64;
           P64[Hp] = _sgmcQ::P64;
           R2 = _sgmcN::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _sgmcP::P64;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 24;
           call GHC.Num.-_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmcS_info" {
     sat_sgmcS_info:
         const sat_sgmcS_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 Data.Functor.Contravariant.$fNumOp_$cnegate_entry() //  [R2, R3]
         { []
         }
     {offset
       cgmP6: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cgmPa; else goto cgmP9;
       cgmPa: // global
           HpAlloc = 56;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fNumOp_$cnegate_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmP9: // global
           I64[Hp - 48] = x_sgmcP_info;
           P64[Hp - 32] = R2;
           I64[Hp - 24] = sat_sgmcS_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R3;
           P64[Hp] = Hp - 48;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fNumOp_$cnegate_info" {
     Data.Functor.Contravariant.$fNumOp_$cnegate_info:
         const Data.Functor.Contravariant.$fNumOp_$cnegate_entry;
         const 0;
         const 279172874254;
         const 8589934607;
         const Sgmyn_srt+24;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.248220759 UTC

[section ""data" . Data.Functor.Contravariant.$fNumOp5_closure" {
     Data.Functor.Contravariant.$fNumOp5_closure:
         const Data.Functor.Contravariant.$fNumOp5_info;
 },
 Data.Functor.Contravariant.$fNumOp5_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       cgmPD: // global
           _sgmcW::P64 = R5;
           _sgmcV::P64 = R4;
           _sgmcU::P64 = R3;
           _sgmcT::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cgmPE; else goto cgmPF;
       cgmPF: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cgmPH; else goto cgmPG;
       cgmPH: // global
           HpAlloc = 64;
           goto cgmPE;
       cgmPE: // global
           R5 = _sgmcW::P64;
           R4 = _sgmcV::P64;
           R3 = _sgmcU::P64;
           R2 = _sgmcT::P64;
           R1 = Data.Functor.Contravariant.$fNumOp5_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmPG: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = _sgmcV::P64;
           P64[Hp - 32] = _sgmcW::P64;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmcU::P64;
           P64[Hp] = _sgmcW::P64;
           R2 = _sgmcT::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = Hp - 56;
           Sp = Sp - 24;
           call GHC.Num.+_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fNumOp5_info" {
     Data.Functor.Contravariant.$fNumOp5_info:
         const Data.Functor.Contravariant.$fNumOp5_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.252640069 UTC

[section ""data" . Data.Functor.Contravariant.$fNumOp4_closure" {
     Data.Functor.Contravariant.$fNumOp4_closure:
         const Data.Functor.Contravariant.$fNumOp4_info;
 },
 Data.Functor.Contravariant.$fNumOp4_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       cgmPY: // global
           _sgmd2::P64 = R5;
           _sgmd1::P64 = R4;
           _sgmd0::P64 = R3;
           _sgmcZ::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cgmPZ; else goto cgmQ0;
       cgmQ0: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cgmQ2; else goto cgmQ1;
       cgmQ2: // global
           HpAlloc = 64;
           goto cgmPZ;
       cgmPZ: // global
           R5 = _sgmd2::P64;
           R4 = _sgmd1::P64;
           R3 = _sgmd0::P64;
           R2 = _sgmcZ::P64;
           R1 = Data.Functor.Contravariant.$fNumOp4_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmQ1: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = _sgmd1::P64;
           P64[Hp - 32] = _sgmd2::P64;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmd0::P64;
           P64[Hp] = _sgmd2::P64;
           R2 = _sgmcZ::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = Hp - 56;
           Sp = Sp - 24;
           call GHC.Num.-_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fNumOp4_info" {
     Data.Functor.Contravariant.$fNumOp4_info:
         const Data.Functor.Contravariant.$fNumOp4_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.257144502 UTC

[section ""data" . Data.Functor.Contravariant.$fNumOp3_closure" {
     Data.Functor.Contravariant.$fNumOp3_closure:
         const Data.Functor.Contravariant.$fNumOp3_info;
 },
 Data.Functor.Contravariant.$fNumOp3_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       cgmQj: // global
           _sgmd8::P64 = R5;
           _sgmd7::P64 = R4;
           _sgmd6::P64 = R3;
           _sgmd5::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cgmQk; else goto cgmQl;
       cgmQl: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cgmQn; else goto cgmQm;
       cgmQn: // global
           HpAlloc = 64;
           goto cgmQk;
       cgmQk: // global
           R5 = _sgmd8::P64;
           R4 = _sgmd7::P64;
           R3 = _sgmd6::P64;
           R2 = _sgmd5::P64;
           R1 = Data.Functor.Contravariant.$fNumOp3_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmQm: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = _sgmd7::P64;
           P64[Hp - 32] = _sgmd8::P64;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmd6::P64;
           P64[Hp] = _sgmd8::P64;
           R2 = _sgmd5::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = Hp - 56;
           Sp = Sp - 24;
           call GHC.Num.*_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fNumOp3_info" {
     Data.Functor.Contravariant.$fNumOp3_info:
         const Data.Functor.Contravariant.$fNumOp3_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.261860876 UTC

[section ""data" . Data.Functor.Contravariant.$fNumOp2_closure" {
     Data.Functor.Contravariant.$fNumOp2_closure:
         const Data.Functor.Contravariant.$fNumOp2_info;
 },
 Data.Functor.Contravariant.$fNumOp2_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgmQD: // global
           _sgmdd::P64 = R4;
           _sgmdc::P64 = R3;
           _sgmdb::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cgmQE; else goto cgmQF;
       cgmQF: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmQH; else goto cgmQG;
       cgmQH: // global
           HpAlloc = 32;
           goto cgmQE;
       cgmQE: // global
           R4 = _sgmdd::P64;
           R3 = _sgmdc::P64;
           R2 = _sgmdb::P64;
           R1 = Data.Functor.Contravariant.$fNumOp2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmQG: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmdc::P64;
           P64[Hp] = _sgmdd::P64;
           R2 = _sgmdb::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Num.abs_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fNumOp2_info" {
     Data.Functor.Contravariant.$fNumOp2_info:
         const Data.Functor.Contravariant.$fNumOp2_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.266320808 UTC

[section ""data" . Data.Functor.Contravariant.$fNumOp1_closure" {
     Data.Functor.Contravariant.$fNumOp1_closure:
         const Data.Functor.Contravariant.$fNumOp1_info;
 },
 Data.Functor.Contravariant.$fNumOp1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgmQV: // global
           _sgmdh::P64 = R4;
           _sgmdg::P64 = R3;
           _sgmdf::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cgmQW; else goto cgmQX;
       cgmQX: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgmQZ; else goto cgmQY;
       cgmQZ: // global
           HpAlloc = 32;
           goto cgmQW;
       cgmQW: // global
           R4 = _sgmdh::P64;
           R3 = _sgmdg::P64;
           R2 = _sgmdf::P64;
           R1 = Data.Functor.Contravariant.$fNumOp1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmQY: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmdg::P64;
           P64[Hp] = _sgmdh::P64;
           R2 = _sgmdf::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Num.signum_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fNumOp1_info" {
     Data.Functor.Contravariant.$fNumOp1_info:
         const Data.Functor.Contravariant.$fNumOp1_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.271447112 UTC

[section ""data" . Data.Functor.Contravariant.$fNumOp_$cfromInteger_closure" {
     Data.Functor.Contravariant.$fNumOp_$cfromInteger_closure:
         const Data.Functor.Contravariant.$fNumOp_$cfromInteger_info;
 },
 x_sgmdl_entry() //  [R1]
         { []
         }
     {offset
       cgmRg: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgmRh; else goto cgmRi;
       cgmRh: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmRi: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . x_sgmdl_info" {
     x_sgmdl_info:
         const x_sgmdl_entry;
         const 2;
         const 18;
 },
 sat_sgmdn_entry() //  [R1]
         { []
         }
     {offset
       cgmRo: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdn_info" {
     sat_sgmdn_info:
         const sat_sgmdn_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Data.Functor.Contravariant.$fNumOp_$cfromInteger_entry() //  [R2,
                                                               R3]
         { []
         }
     {offset
       cgmRr: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cgmRv; else goto cgmRu;
       cgmRv: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fNumOp_$cfromInteger_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgmRu: // global
           I64[Hp - 40] = x_sgmdl_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = R3;
           I64[Hp - 8] = sat_sgmdn_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fNumOp_$cfromInteger_info" {
     Data.Functor.Contravariant.$fNumOp_$cfromInteger_info:
         const Data.Functor.Contravariant.$fNumOp_$cfromInteger_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.281620058 UTC

[section ""data" . Data.Functor.Contravariant.$fNumOp_closure" {
     Data.Functor.Contravariant.$fNumOp_closure:
         const Data.Functor.Contravariant.$fNumOp_info;
         const 0;
 },
 sat_sgmdv_entry() //  [R1, R2]
         { []
         }
     {offset
       cgmRX: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Functor.Contravariant.$fNumOp_$cfromInteger_entry(R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdv_info" {
     sat_sgmdv_info:
         const sat_sgmdv_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sgmdu_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgmS5: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fNumOp1_entry(R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdu_info" {
     sat_sgmdu_info:
         const sat_sgmdu_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgmdt_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgmSd: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fNumOp2_entry(R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdt_info" {
     sat_sgmdt_info:
         const sat_sgmdt_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgmds_entry() //  [R1, R2]
         { []
         }
     {offset
       cgmSl: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Functor.Contravariant.$fNumOp_$cnegate_entry(R3,
                                                                  R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmds_info" {
     sat_sgmds_info:
         const sat_sgmds_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const Sgmyn_srt+72;
 },
 sat_sgmdr_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cgmSt: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Data.Functor.Contravariant.$fNumOp3_entry(R5,
                                                          R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdr_info" {
     sat_sgmdr_info:
         const sat_sgmdr_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 sat_sgmdq_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cgmSB: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Data.Functor.Contravariant.$fNumOp4_entry(R5,
                                                          R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdq_info" {
     sat_sgmdq_info:
         const sat_sgmdq_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 sat_sgmdp_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cgmSJ: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Data.Functor.Contravariant.$fNumOp5_entry(R5,
                                                          R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdp_info" {
     sat_sgmdp_info:
         const sat_sgmdp_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 Data.Functor.Contravariant.$fNumOp_entry() //  [R2]
         { []
         }
     {offset
       cgmSN: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto cgmSR; else goto cgmSQ;
       cgmSR: // global
           HpAlloc = 176;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fNumOp_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgmSQ: // global
           I64[Hp - 168] = sat_sgmdv_info;
           P64[Hp - 160] = R2;
           I64[Hp - 152] = sat_sgmdu_info;
           P64[Hp - 144] = R2;
           I64[Hp - 136] = sat_sgmdt_info;
           P64[Hp - 128] = R2;
           I64[Hp - 120] = sat_sgmds_info;
           P64[Hp - 112] = R2;
           I64[Hp - 104] = sat_sgmdr_info;
           P64[Hp - 96] = R2;
           I64[Hp - 88] = sat_sgmdq_info;
           P64[Hp - 80] = R2;
           I64[Hp - 72] = sat_sgmdp_info;
           P64[Hp - 64] = R2;
           I64[Hp - 56] = GHC.Num.C:Num_con_info;
           P64[Hp - 48] = Hp - 69;
           P64[Hp - 40] = Hp - 85;
           P64[Hp - 32] = Hp - 101;
           P64[Hp - 24] = Hp - 119;
           P64[Hp - 16] = Hp - 134;
           P64[Hp - 8] = Hp - 150;
           P64[Hp] = Hp - 167;
           R1 = Hp - 55;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fNumOp_info" {
     Data.Functor.Contravariant.$fNumOp_info:
         const Data.Functor.Contravariant.$fNumOp_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const Sgmyn_srt+72;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.296610985 UTC

[section ""data" . Data.Functor.Contravariant.$fFractionalOp_$cp1Fractional_closure" {
     Data.Functor.Contravariant.$fFractionalOp_$cp1Fractional_closure:
         const Data.Functor.Contravariant.$fFractionalOp_$cp1Fractional_info;
         const 0;
 },
 sat_sgmdx_entry() //  [R1]
         { []
         }
     {offset
       cgmTF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgmTG; else goto cgmTH;
       cgmTG: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmTH: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Real.$p1Fractional_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmdx_info" {
     sat_sgmdx_info:
         const sat_sgmdx_entry;
         const 1;
         const 16;
 },
 Data.Functor.Contravariant.$fFractionalOp_$cp1Fractional_entry() //  [R2]
         { []
         }
     {offset
       cgmTI: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cgmTM; else goto cgmTL;
       cgmTM: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fFractionalOp_$cp1Fractional_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgmTL: // global
           I64[Hp - 16] = sat_sgmdx_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           call Data.Functor.Contravariant.$fNumOp_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFractionalOp_$cp1Fractional_info" {
     Data.Functor.Contravariant.$fFractionalOp_$cp1Fractional_info:
         const Data.Functor.Contravariant.$fFractionalOp_$cp1Fractional_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const Sgmyn_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.303356163 UTC

[section ""data" . Data.Functor.Contravariant.$fFractionalOp_closure" {
     Data.Functor.Contravariant.$fFractionalOp_closure:
         const Data.Functor.Contravariant.$fFractionalOp_info;
         const 0;
 },
 sat_sgmdC_entry() //  [R1, R2]
         { []
         }
     {offset
       cgmU6: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Functor.Contravariant.$fFractionalOp_$cfromRational_entry(R3,
                                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdC_info" {
     sat_sgmdC_info:
         const sat_sgmdC_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sgmdB_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgmUe: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFractionalOp1_entry(R4,
                                                                 R3,
                                                                 R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdB_info" {
     sat_sgmdB_info:
         const sat_sgmdB_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgmdA_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cgmUm: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Data.Functor.Contravariant.$fFractionalOp2_entry(R5,
                                                                 R4,
                                                                 R3,
                                                                 R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdA_info" {
     sat_sgmdA_info:
         const sat_sgmdA_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 sat_sgmdz_entry() //  [R1]
         { []
         }
     {offset
       cgmUt: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgmUu; else goto cgmUv;
       cgmUu: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmUv: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Functor.Contravariant.$fFractionalOp_$cp1Fractional_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmdz_info" {
     sat_sgmdz_info:
         const sat_sgmdz_entry;
         const 1;
         const 4294967312;
         const Sgmyn_srt+88;
 },
 Data.Functor.Contravariant.$fFractionalOp_entry() //  [R2]
         { []
         }
     {offset
       cgmUx: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto cgmUB; else goto cgmUA;
       cgmUB: // global
           HpAlloc = 112;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fFractionalOp_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgmUA: // global
           I64[Hp - 104] = sat_sgmdC_info;
           P64[Hp - 96] = R2;
           I64[Hp - 88] = sat_sgmdB_info;
           P64[Hp - 80] = R2;
           I64[Hp - 72] = sat_sgmdA_info;
           P64[Hp - 64] = R2;
           I64[Hp - 56] = sat_sgmdz_info;
           P64[Hp - 40] = R2;
           I64[Hp - 32] = GHC.Real.C:Fractional_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 69;
           P64[Hp - 8] = Hp - 86;
           P64[Hp] = Hp - 103;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFractionalOp_info" {
     Data.Functor.Contravariant.$fFractionalOp_info:
         const Data.Functor.Contravariant.$fFractionalOp_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const Sgmyn_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.314299596 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp_$cp1Floating_closure" {
     Data.Functor.Contravariant.$fFloatingOp_$cp1Floating_closure:
         const Data.Functor.Contravariant.$fFloatingOp_$cp1Floating_info;
         const 0;
 },
 sat_sgmdE_entry() //  [R1]
         { []
         }
     {offset
       cgmVc: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgmVd; else goto cgmVe;
       cgmVd: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmVe: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Float.$p1Floating_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmdE_info" {
     sat_sgmdE_info:
         const sat_sgmdE_entry;
         const 1;
         const 16;
 },
 Data.Functor.Contravariant.$fFloatingOp_$cp1Floating_entry() //  [R2]
         { []
         }
     {offset
       cgmVf: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cgmVj; else goto cgmVi;
       cgmVj: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fFloatingOp_$cp1Floating_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgmVi: // global
           I64[Hp - 16] = sat_sgmdE_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           call Data.Functor.Contravariant.$fFractionalOp_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp_$cp1Floating_info" {
     Data.Functor.Contravariant.$fFloatingOp_$cp1Floating_info:
         const Data.Functor.Contravariant.$fFloatingOp_$cp1Floating_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const Sgmyn_srt+96;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.328027306 UTC

[section ""data" . Data.Functor.Contravariant.$fFloatingOp_closure" {
     Data.Functor.Contravariant.$fFloatingOp_closure:
         const Data.Functor.Contravariant.$fFloatingOp_info;
         const 0;
 },
 lvl7_sgmdG_entry() //  [R1]
         { []
         }
     {offset
       cgmVC: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgmVD; else goto cgmVE;
       cgmVD: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmVE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Float.pi_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl7_sgmdG_info" {
     lvl7_sgmdG_info:
         const lvl7_sgmdG_entry;
         const 1;
         const 16;
 },
 sat_sgme4_entry() //  [R1, R2]
         { []
         }
     {offset
       cgmVK: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Functor.Contravariant.$fFloatingOp_$clog1mexp_entry(R3,
                                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgme4_info" {
     sat_sgme4_info:
         const sat_sgme4_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const Sgmyn_srt+40;
 },
 sat_sgme3_entry() //  [R1, R2]
         { []
         }
     {offset
       cgmVS: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Functor.Contravariant.$fFloatingOp_$clog1pexp_entry(R3,
                                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgme3_info" {
     sat_sgme3_info:
         const sat_sgme3_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const Sgmyn_srt+56;
 },
 sat_sgme2_entry() //  [R1, R2]
         { []
         }
     {offset
       cgmW0: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Functor.Contravariant.$fFloatingOp_$cexpm1_entry(R3,
                                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgme2_info" {
     sat_sgme2_info:
         const sat_sgme2_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const Sgmyn_srt+48;
 },
 sat_sgme1_entry() //  [R1, R2]
         { []
         }
     {offset
       cgmW8: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Functor.Contravariant.$fFloatingOp_$clog1p_entry(R3,
                                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgme1_info" {
     sat_sgme1_info:
         const sat_sgme1_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const Sgmyn_srt+64;
 },
 sat_sgme0_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgmWg: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp1_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgme0_info" {
     sat_sgme0_info:
         const sat_sgme0_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgmdZ_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgmWo: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdZ_info" {
     sat_sgmdZ_info:
         const sat_sgmdZ_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgmdY_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgmWw: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp3_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdY_info" {
     sat_sgmdY_info:
         const sat_sgmdY_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgmdX_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgmWE: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp4_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdX_info" {
     sat_sgmdX_info:
         const sat_sgmdX_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgmdW_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgmWM: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp5_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdW_info" {
     sat_sgmdW_info:
         const sat_sgmdW_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgmdV_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgmWU: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp6_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdV_info" {
     sat_sgmdV_info:
         const sat_sgmdV_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgmdU_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgmX2: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp7_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdU_info" {
     sat_sgmdU_info:
         const sat_sgmdU_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgmdT_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgmXa: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp8_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdT_info" {
     sat_sgmdT_info:
         const sat_sgmdT_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgmdS_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgmXi: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp9_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdS_info" {
     sat_sgmdS_info:
         const sat_sgmdS_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgmdR_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgmXq: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp10_entry(R4,
                                                                R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdR_info" {
     sat_sgmdR_info:
         const sat_sgmdR_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgmdQ_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgmXy: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp11_entry(R4,
                                                                R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdQ_info" {
     sat_sgmdQ_info:
         const sat_sgmdQ_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgmdP_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgmXG: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp12_entry(R4,
                                                                R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdP_info" {
     sat_sgmdP_info:
         const sat_sgmdP_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgmdO_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cgmXO: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Data.Functor.Contravariant.$fFloatingOp13_entry(R5,
                                                                R4,
                                                                R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdO_info" {
     sat_sgmdO_info:
         const sat_sgmdO_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 sat_sgmdN_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cgmXW: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Data.Functor.Contravariant.$fFloatingOp14_entry(R5,
                                                                R4,
                                                                R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdN_info" {
     sat_sgmdN_info:
         const sat_sgmdN_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 sat_sgmdM_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgmY4: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp15_entry(R4,
                                                                R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdM_info" {
     sat_sgmdM_info:
         const sat_sgmdM_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgmdL_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgmYc: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp16_entry(R4,
                                                                R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdL_info" {
     sat_sgmdL_info:
         const sat_sgmdL_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgmdK_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgmYk: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fFloatingOp17_entry(R4,
                                                                R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdK_info" {
     sat_sgmdK_info:
         const sat_sgmdK_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sgmdJ_entry() //  [R1]
         { []
         }
     {offset
       cgmYs: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmdJ_info" {
     sat_sgmdJ_info:
         const sat_sgmdJ_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sgmdH_entry() //  [R1]
         { []
         }
     {offset
       cgmYz: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgmYA; else goto cgmYB;
       cgmYA: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgmYB: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Functor.Contravariant.$fFloatingOp_$cp1Floating_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmdH_info" {
     sat_sgmdH_info:
         const sat_sgmdH_entry;
         const 1;
         const 4294967312;
         const Sgmyn_srt+104;
 },
 Data.Functor.Contravariant.$fFloatingOp_entry() //  [R2]
         { []
         }
     {offset
       cgmYD: // global
           Hp = Hp + 592;
           if (Hp > HpLim) (likely: False) goto cgmYH; else goto cgmYG;
       cgmYH: // global
           HpAlloc = 592;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fFloatingOp_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgmYG: // global
           I64[Hp - 584] = lvl7_sgmdG_info;
           P64[Hp - 568] = R2;
           I64[Hp - 560] = sat_sgme4_info;
           P64[Hp - 552] = R2;
           I64[Hp - 544] = sat_sgme3_info;
           P64[Hp - 536] = R2;
           I64[Hp - 528] = sat_sgme2_info;
           P64[Hp - 520] = R2;
           I64[Hp - 512] = sat_sgme1_info;
           P64[Hp - 504] = R2;
           I64[Hp - 496] = sat_sgme0_info;
           P64[Hp - 488] = R2;
           I64[Hp - 480] = sat_sgmdZ_info;
           P64[Hp - 472] = R2;
           I64[Hp - 464] = sat_sgmdY_info;
           P64[Hp - 456] = R2;
           I64[Hp - 448] = sat_sgmdX_info;
           P64[Hp - 440] = R2;
           I64[Hp - 432] = sat_sgmdW_info;
           P64[Hp - 424] = R2;
           I64[Hp - 416] = sat_sgmdV_info;
           P64[Hp - 408] = R2;
           I64[Hp - 400] = sat_sgmdU_info;
           P64[Hp - 392] = R2;
           I64[Hp - 384] = sat_sgmdT_info;
           P64[Hp - 376] = R2;
           I64[Hp - 368] = sat_sgmdS_info;
           P64[Hp - 360] = R2;
           I64[Hp - 352] = sat_sgmdR_info;
           P64[Hp - 344] = R2;
           I64[Hp - 336] = sat_sgmdQ_info;
           P64[Hp - 328] = R2;
           I64[Hp - 320] = sat_sgmdP_info;
           P64[Hp - 312] = R2;
           I64[Hp - 304] = sat_sgmdO_info;
           P64[Hp - 296] = R2;
           I64[Hp - 288] = sat_sgmdN_info;
           P64[Hp - 280] = R2;
           I64[Hp - 272] = sat_sgmdM_info;
           P64[Hp - 264] = R2;
           I64[Hp - 256] = sat_sgmdL_info;
           P64[Hp - 248] = R2;
           I64[Hp - 240] = sat_sgmdK_info;
           P64[Hp - 232] = R2;
           I64[Hp - 224] = sat_sgmdJ_info;
           P64[Hp - 216] = Hp - 584;
           I64[Hp - 208] = sat_sgmdH_info;
           P64[Hp - 192] = R2;
           I64[Hp - 184] = GHC.Float.C:Floating_con_info;
           P64[Hp - 176] = Hp - 208;
           P64[Hp - 168] = Hp - 223;
           P64[Hp - 160] = Hp - 238;
           P64[Hp - 152] = Hp - 254;
           P64[Hp - 144] = Hp - 270;
           P64[Hp - 136] = Hp - 285;
           P64[Hp - 128] = Hp - 301;
           P64[Hp - 120] = Hp - 318;
           P64[Hp - 112] = Hp - 334;
           P64[Hp - 104] = Hp - 350;
           P64[Hp - 96] = Hp - 366;
           P64[Hp - 88] = Hp - 382;
           P64[Hp - 80] = Hp - 398;
           P64[Hp - 72] = Hp - 414;
           P64[Hp - 64] = Hp - 430;
           P64[Hp - 56] = Hp - 446;
           P64[Hp - 48] = Hp - 462;
           P64[Hp - 40] = Hp - 478;
           P64[Hp - 32] = Hp - 494;
           P64[Hp - 24] = Hp - 511;
           P64[Hp - 16] = Hp - 527;
           P64[Hp - 8] = Hp - 543;
           P64[Hp] = Hp - 559;
           R1 = Hp - 183;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fFloatingOp_info" {
     Data.Functor.Contravariant.$fFloatingOp_info:
         const Data.Functor.Contravariant.$fFloatingOp_entry;
         const 0;
         const 3362959392782;
         const 4294967301;
         const Sgmyn_srt+40;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.368509302 UTC

[section ""data" . Data.Functor.Contravariant.$fCategoryTYPEOp1_closure" {
     Data.Functor.Contravariant.$fCategoryTYPEOp1_closure:
         const Data.Functor.Contravariant.$fCategoryTYPEOp1_info;
 },
 Data.Functor.Contravariant.$fCategoryTYPEOp1_entry() //  [R2, R3,
                                                           R4]
         { []
         }
     {offset
       cgn0S: // global
           R4 = R4;
           _sgme6::P64 = R3;
           R3 = R2;
           R2 = _sgme6::P64;
           call GHC.Base.._entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fCategoryTYPEOp1_info" {
     Data.Functor.Contravariant.$fCategoryTYPEOp1_info:
         const Data.Functor.Contravariant.$fCategoryTYPEOp1_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.372232538 UTC

[section ""data" . Data.Functor.Contravariant.$fCategoryTYPEOp_closure" {
     Data.Functor.Contravariant.$fCategoryTYPEOp_closure:
         const Control.Category.C:Category_con_info;
         const GHC.Base.id_closure+1;
         const Data.Functor.Contravariant.$fCategoryTYPEOp1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.374390229 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidEquivalence3_closure" {
     Data.Functor.Contravariant.$fMonoidEquivalence3_closure:
         const Data.Functor.Contravariant.$fMonoidEquivalence3_info;
 },
 Data.Functor.Contravariant.$fMonoidEquivalence3_entry() //  []
         { []
         }
     {offset
       cgn14: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fMonoidEquivalence3_info" {
     Data.Functor.Contravariant.$fMonoidEquivalence3_info:
         const Data.Functor.Contravariant.$fMonoidEquivalence3_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.379942817 UTC

[section ""data" . Data.Functor.Contravariant.$fSemigroupEquivalence1_closure" {
     Data.Functor.Contravariant.$fSemigroupEquivalence1_closure:
         const Data.Functor.Contravariant.$fSemigroupEquivalence1_info;
 },
 ds_sgmee_entry() //  [R1]
         { []
         }
     {offset
       cgn1r: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgn1s; else goto cgn1t;
       cgn1s: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgn1t: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Functor.Contravariant.$fSemigroupEquivalence1_entry(R3,
                                                                         R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds_sgmee_info" {
     ds_sgmee_info:
         const ds_sgmee_entry;
         const 2;
         const 18;
 },
 sat_sgmei_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgn1F: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgn1G; else goto cgn1H;
       cgn1G: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgn1H: // global
           I64[Sp - 32] = block_cgn1z_info;
           _sgmeg::P64 = R3;
           R3 = R3;
           _sgmef::P64 = R2;
           R2 = R2;
           _sgmee::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp - 24] = _sgmee::P64;
           P64[Sp - 16] = _sgmef::P64;
           P64[Sp - 8] = _sgmeg::P64;
           Sp = Sp - 32;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmei_info" {
     sat_sgmei_info:
         const sat_sgmei_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 _cgn1z() //  [R1]
         { []
         }
     {offset
       cgn1z: // global
           if (R1 & 7 == 1) goto cgn1C; else goto cgn1D;
       cgn1C: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cgn1D: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 16];
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgn1z_info" {
     block_cgn1z_info:
         const _cgn1z;
         const 3;
         const 30;
 },
 Data.Functor.Contravariant.$fSemigroupEquivalence1_entry() //  [R2,
                                                                 R3]
         { []
         }
     {offset
       cgn1S: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgn1T; else goto cgn1U;
       cgn1T: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fSemigroupEquivalence1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgn1U: // global
           I64[Sp - 16] = block_cgn1h_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto ugn20; else goto cgn1i;
       ugn20: // global
           call _cgn1h(R1) args: 0, res: 0, upd: 0;
       cgn1i: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fSemigroupEquivalence1_info" {
     Data.Functor.Contravariant.$fSemigroupEquivalence1_info:
         const Data.Functor.Contravariant.$fSemigroupEquivalence1_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _cgn1h() //  [R1]
         { []
         }
     {offset
       cgn1h: // global
           _sgme9::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto cgn1P; else goto cgn1Q;
       cgn1P: // global
           R1 = _sgme9::P64;
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       cgn1Q: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cgn1Z; else goto cgn1Y;
       cgn1Z: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cgn1Y: // global
           _sgmec::P64 = P64[R1 + 6];
           _sgmed::P64 = P64[R1 + 14];
           I64[Hp - 48] = ds_sgmee_info;
           P64[Hp - 32] = _sgmec::P64;
           P64[Hp - 24] = _sgmed::P64;
           I64[Hp - 16] = sat_sgmei_info;
           P64[Hp - 8] = _sgme9::P64;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgn1h_info" {
     block_cgn1h_info:
         const _cgn1h;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.391611347 UTC

[section ""data" . Data.Functor.Contravariant.$fSemigroupEquivalence_$csconcat_closure" {
     Data.Functor.Contravariant.$fSemigroupEquivalence_$csconcat_closure:
         const Data.Functor.Contravariant.$fSemigroupEquivalence_$csconcat_info;
 },
 Data.Functor.Contravariant.$fSemigroupEquivalence_$csconcat_entry() //  [R2]
         { []
         }
     {offset
       cgn2F: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cgn2G; else goto cgn2H;
       cgn2G: // global
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fSemigroupEquivalence_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgn2H: // global
           I64[Sp - 8] = block_cgn2C_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ugn2L; else goto cgn2D;
       ugn2L: // global
           call _cgn2C(R1) args: 0, res: 0, upd: 0;
       cgn2D: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fSemigroupEquivalence_$csconcat_info" {
     Data.Functor.Contravariant.$fSemigroupEquivalence_$csconcat_info:
         const Data.Functor.Contravariant.$fSemigroupEquivalence_$csconcat_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cgn2C() //  [R1]
         { []
         }
     {offset
       cgn2C: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call Data.Functor.Contravariant.$fSemigroupEquivalence1_entry(R3,
                                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgn2C_info" {
     block_cgn2C_info:
         const _cgn2C;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.397943219 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidEquivalence2_closure" {
     Data.Functor.Contravariant.$fMonoidEquivalence2_closure:
         const Data.Functor.Contravariant.$fMonoidEquivalence2_info;
 },
 Data.Functor.Contravariant.$fMonoidEquivalence2_entry() //  [R2,
                                                              R3, R4, R5]
         { []
         }
     {offset
       cgn36: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgn37; else goto cgn38;
       cgn37: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fMonoidEquivalence2_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgn38: // global
           I64[Sp - 32] = block_cgn30_info;
           _sgmeo::P64 = R3;
           R3 = R5;
           _sgmen::P64 = R2;
           R2 = R4;
           R1 = _sgmen::P64;
           P64[Sp - 24] = _sgmeo::P64;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fMonoidEquivalence2_info" {
     Data.Functor.Contravariant.$fMonoidEquivalence2_info:
         const Data.Functor.Contravariant.$fMonoidEquivalence2_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _cgn30() //  [R1]
         { []
         }
     {offset
       cgn30: // global
           if (R1 & 7 == 1) goto cgn33; else goto cgn34;
       cgn33: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cgn34: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 16];
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgn30_info" {
     block_cgn30_info:
         const _cgn30;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.403823352 UTC

[section ""data" . Data.Functor.Contravariant.$fSemigroupEquivalence_closure" {
     Data.Functor.Contravariant.$fSemigroupEquivalence_closure:
         const GHC.Base.C:Semigroup_con_info;
         const Data.Functor.Contravariant.$fMonoidEquivalence2_closure+4;
         const Data.Functor.Contravariant.$fSemigroupEquivalence_$csconcat_closure+1;
         const Data.Functor.Contravariant.$fSemigroupEquivalence_$cstimes_closure+1;
         const 0;
 },
 section ""data" . Data.Functor.Contravariant.$fSemigroupEquivalence_$cstimes_closure" {
     Data.Functor.Contravariant.$fSemigroupEquivalence_$cstimes_closure:
         const Data.Functor.Contravariant.$fSemigroupEquivalence_$cstimes_info;
         const 0;
 },
 Data.Functor.Contravariant.$fSemigroupEquivalence_$cstimes_entry() //  [R2]
         { []
         }
     {offset
       cgn3w: // global
           R3 = Data.Functor.Contravariant.$fSemigroupEquivalence_closure+1;
           R2 = R2;
           R1 = Data.Semigroup.Internal.stimesDefault_closure+4;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fSemigroupEquivalence_$cstimes_info" {
     Data.Functor.Contravariant.$fSemigroupEquivalence_$cstimes_info:
         const Data.Functor.Contravariant.$fSemigroupEquivalence_$cstimes_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const Sgmyn_srt+120;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.409066932 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidEquivalence1_closure" {
     Data.Functor.Contravariant.$fMonoidEquivalence1_closure:
         const Data.Functor.Contravariant.$fMonoidEquivalence1_info;
 },
 Data.Functor.Contravariant.$fMonoidEquivalence1_entry() //  [R2,
                                                              R3, R4]
         { []
         }
     {offset
       cgn3Q: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgn3R; else goto ugn4b;
       cgn3R: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fMonoidEquivalence1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       ugn4b: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _cgn3G() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fMonoidEquivalence1_info" {
     Data.Functor.Contravariant.$fMonoidEquivalence1_info:
         const Data.Functor.Contravariant.$fMonoidEquivalence1_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cgn3G() //  []
         { []
         }
     {offset
       cgn3G: // global
           _sgmet::P64 = P64[Sp];
           I64[Sp] = block_cgn3J_info;
           R1 = _sgmet::P64;
           if (R1 & 7 != 0) goto ugn4d; else goto cgn3K;
       ugn4d: // global
           call _cgn3J(R1) args: 0, res: 0, upd: 0;
       cgn3K: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cgn3J() //  [R1]
         { []
         }
     {offset
       cgn3J: // global
           if (R1 & 7 == 1) goto cgn3N; else goto cgn3O;
       cgn3N: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cgn3O: // global
           I64[Sp - 8] = block_cgn3Y_info;
           R3 = P64[Sp + 16];
           R2 = P64[Sp + 8];
           _sgmey::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _sgmey::P64;
           Sp = Sp - 8;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_cgn3J_info" {
     block_cgn3J_info:
         const _cgn3J;
         const 2;
         const 30;
 },
 _cgn3Y() //  [R1]
         { []
         }
     {offset
       cgn3Y: // global
           if (R1 & 7 == 1) goto cgn45; else goto cgn49;
       cgn45: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cgn49: // global
           P64[Sp + 8] = P64[Sp + 8];
           P64[Sp + 16] = P64[Sp + 16];
           P64[Sp + 24] = P64[Sp + 24];
           Sp = Sp + 8;
           call _cgn3G() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_cgn3Y_info" {
     block_cgn3Y_info:
         const _cgn3Y;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.416871755 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidEquivalence_closure" {
     Data.Functor.Contravariant.$fMonoidEquivalence_closure:
         const GHC.Base.C:Monoid_con_info;
         const Data.Functor.Contravariant.$fSemigroupEquivalence_closure+1;
         const Data.Functor.Contravariant.$fMonoidEquivalence3_closure+2;
         const Data.Functor.Contravariant.$fMonoidEquivalence2_closure+4;
         const Data.Functor.Contravariant.$fMonoidEquivalence1_closure+3;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.419041612 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidPredicate3_closure" {
     Data.Functor.Contravariant.$fMonoidPredicate3_closure:
         const Data.Functor.Contravariant.$fMonoidPredicate3_info;
 },
 Data.Functor.Contravariant.$fMonoidPredicate3_entry() //  []
         { []
         }
     {offset
       cgn4M: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fMonoidPredicate3_info" {
     Data.Functor.Contravariant.$fMonoidPredicate3_info:
         const Data.Functor.Contravariant.$fMonoidPredicate3_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.424531686 UTC

[section ""data" . Data.Functor.Contravariant.$fSemigroupPredicate1_closure" {
     Data.Functor.Contravariant.$fSemigroupPredicate1_closure:
         const Data.Functor.Contravariant.$fSemigroupPredicate1_info;
 },
 ds_sgmeG_entry() //  [R1]
         { []
         }
     {offset
       cgn59: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgn5a; else goto cgn5b;
       cgn5a: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgn5b: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Functor.Contravariant.$fSemigroupPredicate1_entry(R3,
                                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds_sgmeG_info" {
     ds_sgmeG_info:
         const ds_sgmeG_entry;
         const 2;
         const 18;
 },
 sat_sgmeJ_entry() //  [R1, R2]
         { []
         }
     {offset
       cgn5n: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cgn5o; else goto cgn5p;
       cgn5o: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgn5p: // global
           I64[Sp - 24] = block_cgn5h_info;
           _sgmeH::P64 = R2;
           R2 = R2;
           _sgmeG::P64 = P64[R1 + 15];
           R1 = P64[R1 + 7];
           P64[Sp - 16] = _sgmeG::P64;
           P64[Sp - 8] = _sgmeH::P64;
           Sp = Sp - 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmeJ_info" {
     sat_sgmeJ_info:
         const sat_sgmeJ_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 _cgn5h() //  [R1]
         { []
         }
     {offset
       cgn5h: // global
           if (R1 & 7 == 1) goto cgn5k; else goto cgn5l;
       cgn5k: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cgn5l: // global
           R2 = P64[Sp + 16];
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgn5h_info" {
     block_cgn5h_info:
         const _cgn5h;
         const 2;
         const 30;
 },
 Data.Functor.Contravariant.$fSemigroupPredicate1_entry() //  [R2,
                                                               R3]
         { []
         }
     {offset
       cgn5A: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cgn5B; else goto cgn5C;
       cgn5B: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fSemigroupPredicate1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgn5C: // global
           I64[Sp - 16] = block_cgn4Z_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto ugn5I; else goto cgn50;
       ugn5I: // global
           call _cgn4Z(R1) args: 0, res: 0, upd: 0;
       cgn50: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fSemigroupPredicate1_info" {
     Data.Functor.Contravariant.$fSemigroupPredicate1_info:
         const Data.Functor.Contravariant.$fSemigroupPredicate1_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _cgn4Z() //  [R1]
         { []
         }
     {offset
       cgn4Z: // global
           _sgmeB::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto cgn5x; else goto cgn5y;
       cgn5x: // global
           R1 = _sgmeB::P64;
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       cgn5y: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cgn5H; else goto cgn5G;
       cgn5H: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cgn5G: // global
           _sgmeE::P64 = P64[R1 + 6];
           _sgmeF::P64 = P64[R1 + 14];
           I64[Hp - 48] = ds_sgmeG_info;
           P64[Hp - 32] = _sgmeE::P64;
           P64[Hp - 24] = _sgmeF::P64;
           I64[Hp - 16] = sat_sgmeJ_info;
           P64[Hp - 8] = _sgmeB::P64;
           P64[Hp] = Hp - 48;
           R1 = Hp - 15;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgn4Z_info" {
     block_cgn4Z_info:
         const _cgn4Z;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.436632368 UTC

[section ""data" . Data.Functor.Contravariant.$fSemigroupPredicate_$csconcat_closure" {
     Data.Functor.Contravariant.$fSemigroupPredicate_$csconcat_closure:
         const Data.Functor.Contravariant.$fSemigroupPredicate_$csconcat_info;
 },
 Data.Functor.Contravariant.$fSemigroupPredicate_$csconcat_entry() //  [R2]
         { []
         }
     {offset
       cgn6n: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cgn6o; else goto cgn6p;
       cgn6o: // global
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fSemigroupPredicate_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgn6p: // global
           I64[Sp - 8] = block_cgn6k_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ugn6t; else goto cgn6l;
       ugn6t: // global
           call _cgn6k(R1) args: 0, res: 0, upd: 0;
       cgn6l: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fSemigroupPredicate_$csconcat_info" {
     Data.Functor.Contravariant.$fSemigroupPredicate_$csconcat_info:
         const Data.Functor.Contravariant.$fSemigroupPredicate_$csconcat_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cgn6k() //  [R1]
         { []
         }
     {offset
       cgn6k: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call Data.Functor.Contravariant.$fSemigroupPredicate1_entry(R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgn6k_info" {
     block_cgn6k_info:
         const _cgn6k;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.443135714 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidPredicate2_closure" {
     Data.Functor.Contravariant.$fMonoidPredicate2_closure:
         const Data.Functor.Contravariant.$fMonoidPredicate2_info;
 },
 Data.Functor.Contravariant.$fMonoidPredicate2_entry() //  [R2, R3,
                                                            R4]
         { []
         }
     {offset
       cgn6O: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cgn6P; else goto cgn6Q;
       cgn6P: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fMonoidPredicate2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgn6Q: // global
           I64[Sp - 24] = block_cgn6I_info;
           _sgmeO::P64 = R2;
           R2 = R4;
           R1 = _sgmeO::P64;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fMonoidPredicate2_info" {
     Data.Functor.Contravariant.$fMonoidPredicate2_info:
         const Data.Functor.Contravariant.$fMonoidPredicate2_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cgn6I() //  [R1]
         { []
         }
     {offset
       cgn6I: // global
           if (R1 & 7 == 1) goto cgn6L; else goto cgn6M;
       cgn6L: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cgn6M: // global
           R2 = P64[Sp + 16];
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgn6I_info" {
     block_cgn6I_info:
         const _cgn6I;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.448746356 UTC

[section ""data" . Data.Functor.Contravariant.$fSemigroupPredicate_closure" {
     Data.Functor.Contravariant.$fSemigroupPredicate_closure:
         const GHC.Base.C:Semigroup_con_info;
         const Data.Functor.Contravariant.$fMonoidPredicate2_closure+3;
         const Data.Functor.Contravariant.$fSemigroupPredicate_$csconcat_closure+1;
         const Data.Functor.Contravariant.$fSemigroupPredicate_$cstimes_closure+1;
         const 0;
 },
 section ""data" . Data.Functor.Contravariant.$fSemigroupPredicate_$cstimes_closure" {
     Data.Functor.Contravariant.$fSemigroupPredicate_$cstimes_closure:
         const Data.Functor.Contravariant.$fSemigroupPredicate_$cstimes_info;
         const 0;
 },
 Data.Functor.Contravariant.$fSemigroupPredicate_$cstimes_entry() //  [R2]
         { []
         }
     {offset
       cgn7e: // global
           R3 = Data.Functor.Contravariant.$fSemigroupPredicate_closure+1;
           R2 = R2;
           R1 = Data.Semigroup.Internal.stimesDefault_closure+4;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fSemigroupPredicate_$cstimes_info" {
     Data.Functor.Contravariant.$fSemigroupPredicate_$cstimes_info:
         const Data.Functor.Contravariant.$fSemigroupPredicate_$cstimes_entry;
         const 0;
         const 21474836494;
         const 4294967301;
         const Sgmyn_srt+120;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.454170243 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidPredicate1_closure" {
     Data.Functor.Contravariant.$fMonoidPredicate1_closure:
         const Data.Functor.Contravariant.$fMonoidPredicate1_info;
 },
 Data.Functor.Contravariant.$fMonoidPredicate1_entry() //  [R2, R3]
         { []
         }
     {offset
       cgn7y: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cgn7z; else goto ugn7T;
       cgn7z: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fMonoidPredicate1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ugn7T: // global
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call _cgn7o() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fMonoidPredicate1_info" {
     Data.Functor.Contravariant.$fMonoidPredicate1_info:
         const Data.Functor.Contravariant.$fMonoidPredicate1_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _cgn7o() //  []
         { []
         }
     {offset
       cgn7o: // global
           _sgmeT::P64 = P64[Sp];
           I64[Sp] = block_cgn7r_info;
           R1 = _sgmeT::P64;
           if (R1 & 7 != 0) goto ugn7V; else goto cgn7s;
       ugn7V: // global
           call _cgn7r(R1) args: 0, res: 0, upd: 0;
       cgn7s: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cgn7r() //  [R1]
         { []
         }
     {offset
       cgn7r: // global
           if (R1 & 7 == 1) goto cgn7v; else goto cgn7w;
       cgn7v: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cgn7w: // global
           I64[Sp - 8] = block_cgn7G_info;
           R2 = P64[Sp + 8];
           _sgmeX::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _sgmeX::P64;
           Sp = Sp - 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_cgn7r_info" {
     block_cgn7r_info:
         const _cgn7r;
         const 1;
         const 30;
 },
 _cgn7G() //  [R1]
         { []
         }
     {offset
       cgn7G: // global
           if (R1 & 7 == 1) goto cgn7N; else goto cgn7R;
       cgn7N: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cgn7R: // global
           P64[Sp + 8] = P64[Sp + 8];
           P64[Sp + 16] = P64[Sp + 16];
           Sp = Sp + 8;
           call _cgn7o() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_cgn7G_info" {
     block_cgn7G_info:
         const _cgn7G;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.462119586 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidPredicate_closure" {
     Data.Functor.Contravariant.$fMonoidPredicate_closure:
         const GHC.Base.C:Monoid_con_info;
         const Data.Functor.Contravariant.$fSemigroupPredicate_closure+1;
         const Data.Functor.Contravariant.$fMonoidPredicate3_closure+1;
         const Data.Functor.Contravariant.$fMonoidPredicate2_closure+3;
         const Data.Functor.Contravariant.$fMonoidPredicate1_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.464271381 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantProxy_$ccontramap_closure" {
     Data.Functor.Contravariant.$fContravariantProxy_$ccontramap_closure:
         const Data.Functor.Contravariant.$fContravariantProxy_$ccontramap_info;
 },
 Data.Functor.Contravariant.$fContravariantProxy_$ccontramap_entry() //  []
         { []
         }
     {offset
       cgn8t: // global
           R1 = Data.Proxy.Proxy_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantProxy_$ccontramap_info" {
     Data.Functor.Contravariant.$fContravariantProxy_$ccontramap_info:
         const Data.Functor.Contravariant.$fContravariantProxy_$ccontramap_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.468293431 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantProxy_closure" {
     Data.Functor.Contravariant.$fContravariantProxy_closure:
         const Data.Functor.Contravariant.C:Contravariant_con_info;
         const Data.Functor.Contravariant.$fContravariantProxy_$ccontramap_closure+2;
         const Data.Functor.Contravariant.$fContravariantProxy_$c>$_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.471230384 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantCompose2_closure" {
     Data.Functor.Contravariant.$fContravariantCompose2_closure:
         const Data.Functor.Contravariant.$fContravariantCompose2_info;
 },
 sat_sgmf5_entry() //  [R1]
         { []
         }
     {offset
       cgn8L: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgn8M; else goto cgn8N;
       cgn8M: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgn8N: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmf5_info" {
     sat_sgmf5_info:
         const sat_sgmf5_entry;
         const 2;
         const 18;
 },
 Data.Functor.Contravariant.$fContravariantCompose2_entry() //  [R2,
                                                                 R3, R4, R5]
         { []
         }
     {offset
       cgn8O: // global
           _sgmf4::P64 = R5;
           _sgmf3::P64 = R4;
           _sgmf2::P64 = R3;
           _sgmf1::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cgn8P; else goto cgn8Q;
       cgn8Q: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgn8S; else goto cgn8R;
       cgn8S: // global
           HpAlloc = 32;
           goto cgn8P;
       cgn8P: // global
           R5 = _sgmf4::P64;
           R4 = _sgmf3::P64;
           R3 = _sgmf2::P64;
           R2 = _sgmf1::P64;
           R1 = Data.Functor.Contravariant.$fContravariantCompose2_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgn8R: // global
           I64[Hp - 24] = sat_sgmf5_info;
           P64[Hp - 8] = _sgmf2::P64;
           P64[Hp] = _sgmf3::P64;
           R2 = _sgmf1::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = _sgmf4::P64;
           Sp = Sp - 24;
           call GHC.Base.fmap_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantCompose2_info" {
     Data.Functor.Contravariant.$fContravariantCompose2_info:
         const Data.Functor.Contravariant.$fContravariantCompose2_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.477986776 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantCompose_closure" {
     Data.Functor.Contravariant.$fContravariantCompose_closure:
         const Data.Functor.Contravariant.$fContravariantCompose_info;
 },
 sat_sgmf9_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgn9h: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariantCompose1_entry(R5,
                                                                         R4,
                                                                         R3,
                                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmf9_info" {
     sat_sgmf9_info:
         const sat_sgmf9_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_sgmf8_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgn9p: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariantCompose2_entry(R5,
                                                                         R4,
                                                                         R3,
                                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmf8_info" {
     sat_sgmf8_info:
         const sat_sgmf8_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 Data.Functor.Contravariant.$fContravariantCompose_entry() //  [R2,
                                                                R3]
         { []
         }
     {offset
       cgn9t: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cgn9x; else goto cgn9w;
       cgn9x: // global
           HpAlloc = 72;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantCompose_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgn9w: // global
           I64[Hp - 64] = sat_sgmf9_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = sat_sgmf8_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = Data.Functor.Contravariant.C:Contravariant_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 62;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantCompose_info" {
     Data.Functor.Contravariant.$fContravariantCompose_info:
         const Data.Functor.Contravariant.$fContravariantCompose_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.485329506 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantConst2_closure" {
     Data.Functor.Contravariant.$fContravariantConst2_closure:
         const Data.Functor.Contravariant.$fContravariantConst2_info;
 },
 Data.Functor.Contravariant.$fContravariantConst2_entry() //  [R3]
         { []
         }
     {offset
       cgn9S: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantConst2_info" {
     Data.Functor.Contravariant.$fContravariantConst2_info:
         const Data.Functor.Contravariant.$fContravariantConst2_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.488475383 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantConst_closure" {
     Data.Functor.Contravariant.$fContravariantConst_closure:
         const Data.Functor.Contravariant.C:Contravariant_con_info;
         const Data.Functor.Contravariant.$fContravariantConst2_closure+2;
         const Data.Functor.Contravariant.$fContravariantConst1_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.492484253 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantProduct_$ccontramap_closure" {
     Data.Functor.Contravariant.$fContravariantProduct_$ccontramap_closure:
         const Data.Functor.Contravariant.$fContravariantProduct_$ccontramap_info;
 },
 sat_sgmfk_entry() //  [R1]
         { []
         }
     {offset
       cgnad: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cgnae; else goto cgnaf;
       cgnae: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgnaf: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = P64[R1 + 32];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmfk_info" {
     sat_sgmfk_info:
         const sat_sgmfk_entry;
         const 3;
         const 15;
 },
 sat_sgmfj_entry() //  [R1]
         { []
         }
     {offset
       cgnak: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cgnal; else goto cgnam;
       cgnal: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgnam: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = P64[R1 + 32];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmfj_info" {
     sat_sgmfj_info:
         const sat_sgmfj_entry;
         const 3;
         const 15;
 },
 Data.Functor.Contravariant.$fContravariantProduct_$ccontramap_entry() //  [R2,
                                                                            R3, R4, R5]
         { []
         }
     {offset
       cgnan: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgnap; else goto cgnaq;
       cgnap: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantProduct_$ccontramap_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgnaq: // global
           I64[Sp - 32] = block_cgna4_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto ugnau; else goto cgna5;
       ugnau: // global
           call _cgna4(R1) args: 0, res: 0, upd: 0;
       cgna5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantProduct_$ccontramap_info" {
     Data.Functor.Contravariant.$fContravariantProduct_$ccontramap_info:
         const Data.Functor.Contravariant.$fContravariantProduct_$ccontramap_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _cgna4() //  [R1]
         { []
         }
     {offset
       cgna4: // global
           Hp = Hp + 104;
           if (Hp > HpLim) (likely: False) goto cgnat; else goto cgnas;
       cgnat: // global
           HpAlloc = 104;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cgnas: // global
           _sgmfh::P64 = P64[R1 + 7];
           _sgmfi::P64 = P64[R1 + 15];
           I64[Hp - 96] = sat_sgmfk_info;
           P64[Hp - 80] = P64[Sp + 16];
           _sgmfe::P64 = P64[Sp + 24];
           P64[Hp - 72] = _sgmfe::P64;
           P64[Hp - 64] = _sgmfi::P64;
           I64[Hp - 56] = sat_sgmfj_info;
           P64[Hp - 40] = P64[Sp + 8];
           P64[Hp - 32] = _sgmfe::P64;
           P64[Hp - 24] = _sgmfh::P64;
           I64[Hp - 16] = Data.Functor.Product.Pair_con_info;
           P64[Hp - 8] = Hp - 56;
           P64[Hp] = Hp - 96;
           R1 = Hp - 15;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgna4_info" {
     block_cgna4_info:
         const _cgna4;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.503104554 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantProduct_closure" {
     Data.Functor.Contravariant.$fContravariantProduct_closure:
         const Data.Functor.Contravariant.$fContravariantProduct_info;
 },
 sat_sgmfo_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgnbc: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariantProduct_$c>$_entry(R5,
                                                                             R4,
                                                                             R3,
                                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmfo_info" {
     sat_sgmfo_info:
         const sat_sgmfo_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_sgmfn_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgnbk: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariantProduct_$ccontramap_entry(R5,
                                                                                    R4,
                                                                                    R3,
                                                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmfn_info" {
     sat_sgmfn_info:
         const sat_sgmfn_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 Data.Functor.Contravariant.$fContravariantProduct_entry() //  [R2,
                                                                R3]
         { []
         }
     {offset
       cgnbo: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cgnbs; else goto cgnbr;
       cgnbs: // global
           HpAlloc = 72;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantProduct_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgnbr: // global
           I64[Hp - 64] = sat_sgmfo_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = sat_sgmfn_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = Data.Functor.Contravariant.C:Contravariant_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 62;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantProduct_info" {
     Data.Functor.Contravariant.$fContravariantProduct_info:
         const Data.Functor.Contravariant.$fContravariantProduct_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.512799734 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantSum_$ccontramap_closure" {
     Data.Functor.Contravariant.$fContravariantSum_$ccontramap_closure:
         const Data.Functor.Contravariant.$fContravariantSum_$ccontramap_info;
 },
 sat_sgmfv_entry() //  [R1]
         { []
         }
     {offset
       cgnbW: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cgnbX; else goto cgnbY;
       cgnbX: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgnbY: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = P64[R1 + 32];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmfv_info" {
     sat_sgmfv_info:
         const sat_sgmfv_entry;
         const 3;
         const 15;
 },
 sat_sgmfx_entry() //  [R1]
         { []
         }
     {offset
       cgnc5: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cgnc6; else goto cgnc7;
       cgnc6: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgnc7: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = P64[R1 + 32];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmfx_info" {
     sat_sgmfx_info:
         const sat_sgmfx_entry;
         const 3;
         const 15;
 },
 Data.Functor.Contravariant.$fContravariantSum_$ccontramap_entry() //  [R2,
                                                                        R3, R4, R5]
         { []
         }
     {offset
       cgncc: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgncd; else goto cgnce;
       cgncd: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantSum_$ccontramap_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgnce: // global
           I64[Sp - 32] = block_cgnbN_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto ugncn; else goto cgnbO;
       ugncn: // global
           call _cgnbN(R1) args: 0, res: 0, upd: 0;
       cgnbO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantSum_$ccontramap_info" {
     Data.Functor.Contravariant.$fContravariantSum_$ccontramap_info:
         const Data.Functor.Contravariant.$fContravariantSum_$ccontramap_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _cgnbN() //  [R1]
         { []
         }
     {offset
       cgnbN: // global
           _sgmfr::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto cgnc9; else goto cgnca;
       cgnc9: // global
           Hp = Hp + 56;
           _sgmft::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cgncm; else goto cgnch;
       cgnch: // global
           _sgmfu::P64 = P64[_sgmft::P64 + 7];
           I64[Hp - 48] = sat_sgmfv_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _sgmfr::P64;
           P64[Hp - 16] = _sgmfu::P64;
           I64[Hp - 8] = Data.Functor.Sum.InL_con_info;
           P64[Hp] = Hp - 48;
           R1 = Hp - 7;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cgnca: // global
           Hp = Hp + 56;
           _sgmft::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cgncm; else goto cgncl;
       cgncm: // global
           HpAlloc = 56;
           R1 = _sgmft::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cgncl: // global
           _sgmfw::P64 = P64[_sgmft::P64 + 6];
           I64[Hp - 48] = sat_sgmfx_info;
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = _sgmfr::P64;
           P64[Hp - 16] = _sgmfw::P64;
           I64[Hp - 8] = Data.Functor.Sum.InR_con_info;
           P64[Hp] = Hp - 48;
           R1 = Hp - 6;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgnbN_info" {
     block_cgnbN_info:
         const _cgnbN;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.523138908 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantSum_$c>$_closure" {
     Data.Functor.Contravariant.$fContravariantSum_$c>$_closure:
         const Data.Functor.Contravariant.$fContravariantSum_$c>$_info;
 },
 sat_sgmfD_entry() //  [R1]
         { []
         }
     {offset
       cgnd9: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmfD_info" {
     sat_sgmfD_info:
         const sat_sgmfD_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Data.Functor.Contravariant.$fContravariantSum_$c>$_entry() //  [R2,
                                                                 R3, R4, R5]
         { []
         }
     {offset
       cgndc: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cgndg; else goto cgndf;
       cgndg: // global
           HpAlloc = 16;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantSum_$c>$_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgndf: // global
           I64[Hp - 8] = sat_sgmfD_info;
           P64[Hp] = R4;
           R5 = R5;
           R4 = Hp - 7;
           R3 = R3;
           R2 = R2;
           call Data.Functor.Contravariant.$fContravariantSum_$ccontramap_entry(R5,
                                                                                R4,
                                                                                R3,
                                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantSum_$c>$_info" {
     Data.Functor.Contravariant.$fContravariantSum_$c>$_info:
         const Data.Functor.Contravariant.$fContravariantSum_$c>$_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.529135881 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantSum_closure" {
     Data.Functor.Contravariant.$fContravariantSum_closure:
         const Data.Functor.Contravariant.$fContravariantSum_info;
 },
 sat_sgmfH_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgndy: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariantSum_$c>$_entry(R5,
                                                                         R4,
                                                                         R3,
                                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmfH_info" {
     sat_sgmfH_info:
         const sat_sgmfH_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_sgmfG_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgndG: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariantSum_$ccontramap_entry(R5,
                                                                                R4,
                                                                                R3,
                                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmfG_info" {
     sat_sgmfG_info:
         const sat_sgmfG_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 Data.Functor.Contravariant.$fContravariantSum_entry() //  [R2, R3]
         { []
         }
     {offset
       cgndK: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cgndO; else goto cgndN;
       cgndO: // global
           HpAlloc = 72;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariantSum_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgndN: // global
           I64[Hp - 64] = sat_sgmfH_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = sat_sgmfG_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = Data.Functor.Contravariant.C:Contravariant_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 62;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantSum_info" {
     Data.Functor.Contravariant.$fContravariantSum_info:
         const Data.Functor.Contravariant.$fContravariantSum_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.53822939 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariant:+:_$ccontramap_closure" {
     Data.Functor.Contravariant.$fContravariant:+:_$ccontramap_closure:
         const Data.Functor.Contravariant.$fContravariant:+:_$ccontramap_info;
 },
 sat_sgmfO_entry() //  [R1]
         { []
         }
     {offset
       cgnei: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cgnej; else goto cgnek;
       cgnej: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgnek: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = P64[R1 + 32];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmfO_info" {
     sat_sgmfO_info:
         const sat_sgmfO_entry;
         const 3;
         const 15;
 },
 sat_sgmfQ_entry() //  [R1]
         { []
         }
     {offset
       cgner: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cgnes; else goto cgnet;
       cgnes: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgnet: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = P64[R1 + 32];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmfQ_info" {
     sat_sgmfQ_info:
         const sat_sgmfQ_entry;
         const 3;
         const 15;
 },
 Data.Functor.Contravariant.$fContravariant:+:_$ccontramap_entry() //  [R2,
                                                                        R3, R4, R5]
         { []
         }
     {offset
       cgney: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgnez; else goto cgneA;
       cgnez: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariant:+:_$ccontramap_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgneA: // global
           I64[Sp - 32] = block_cgne9_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto ugneJ; else goto cgnea;
       ugneJ: // global
           call _cgne9(R1) args: 0, res: 0, upd: 0;
       cgnea: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariant:+:_$ccontramap_info" {
     Data.Functor.Contravariant.$fContravariant:+:_$ccontramap_info:
         const Data.Functor.Contravariant.$fContravariant:+:_$ccontramap_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _cgne9() //  [R1]
         { []
         }
     {offset
       cgne9: // global
           _sgmfK::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto cgnev; else goto cgnew;
       cgnev: // global
           Hp = Hp + 56;
           _sgmfM::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cgneI; else goto cgneD;
       cgneD: // global
           _sgmfN::P64 = P64[_sgmfM::P64 + 7];
           I64[Hp - 48] = sat_sgmfO_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _sgmfK::P64;
           P64[Hp - 16] = _sgmfN::P64;
           I64[Hp - 8] = GHC.Generics.L1_con_info;
           P64[Hp] = Hp - 48;
           R1 = Hp - 7;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cgnew: // global
           Hp = Hp + 56;
           _sgmfM::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cgneI; else goto cgneH;
       cgneI: // global
           HpAlloc = 56;
           R1 = _sgmfM::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cgneH: // global
           _sgmfP::P64 = P64[_sgmfM::P64 + 6];
           I64[Hp - 48] = sat_sgmfQ_info;
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = _sgmfK::P64;
           P64[Hp - 16] = _sgmfP::P64;
           I64[Hp - 8] = GHC.Generics.R1_con_info;
           P64[Hp] = Hp - 48;
           R1 = Hp - 6;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgne9_info" {
     block_cgne9_info:
         const _cgne9;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.549187004 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariant:+:_$c>$_closure" {
     Data.Functor.Contravariant.$fContravariant:+:_$c>$_closure:
         const Data.Functor.Contravariant.$fContravariant:+:_$c>$_info;
 },
 sat_sgmfW_entry() //  [R1]
         { []
         }
     {offset
       cgnfv: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmfW_info" {
     sat_sgmfW_info:
         const sat_sgmfW_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Data.Functor.Contravariant.$fContravariant:+:_$c>$_entry() //  [R2,
                                                                 R3, R4, R5]
         { []
         }
     {offset
       cgnfy: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cgnfC; else goto cgnfB;
       cgnfC: // global
           HpAlloc = 16;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariant:+:_$c>$_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgnfB: // global
           I64[Hp - 8] = sat_sgmfW_info;
           P64[Hp] = R4;
           R5 = R5;
           R4 = Hp - 7;
           R3 = R3;
           R2 = R2;
           call Data.Functor.Contravariant.$fContravariant:+:_$ccontramap_entry(R5,
                                                                                R4,
                                                                                R3,
                                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariant:+:_$c>$_info" {
     Data.Functor.Contravariant.$fContravariant:+:_$c>$_info:
         const Data.Functor.Contravariant.$fContravariant:+:_$c>$_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.555743188 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariant:+:_closure" {
     Data.Functor.Contravariant.$fContravariant:+:_closure:
         const Data.Functor.Contravariant.$fContravariant:+:_info;
 },
 sat_sgmg0_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgnfU: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariant:+:_$c>$_entry(R5,
                                                                         R4,
                                                                         R3,
                                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmg0_info" {
     sat_sgmg0_info:
         const sat_sgmg0_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_sgmfZ_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgng2: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariant:+:_$ccontramap_entry(R5,
                                                                                R4,
                                                                                R3,
                                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmfZ_info" {
     sat_sgmfZ_info:
         const sat_sgmfZ_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 Data.Functor.Contravariant.$fContravariant:+:_entry() //  [R2, R3]
         { []
         }
     {offset
       cgng6: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cgnga; else goto cgng9;
       cgnga: // global
           HpAlloc = 72;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariant:+:_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgng9: // global
           I64[Hp - 64] = sat_sgmg0_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = sat_sgmfZ_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = Data.Functor.Contravariant.C:Contravariant_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 62;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariant:+:_info" {
     Data.Functor.Contravariant.$fContravariant:+:_info:
         const Data.Functor.Contravariant.$fContravariant:+:_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.563819665 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariant:.:2_closure" {
     Data.Functor.Contravariant.$fContravariant:.:2_closure:
         const Data.Functor.Contravariant.$fContravariant:.:2_info;
 },
 sat_sgmg5_entry() //  [R1]
         { []
         }
     {offset
       cgngz: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgngA; else goto cgngB;
       cgngA: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgngB: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmg5_info" {
     sat_sgmg5_info:
         const sat_sgmg5_entry;
         const 2;
         const 18;
 },
 Data.Functor.Contravariant.$fContravariant:.:2_entry() //  [R2, R3,
                                                             R4, R5]
         { []
         }
     {offset
       cgngC: // global
           _sgmg4::P64 = R5;
           _sgmg3::P64 = R4;
           _sgmg2::P64 = R3;
           _sgmg1::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cgngD; else goto cgngE;
       cgngE: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgngG; else goto cgngF;
       cgngG: // global
           HpAlloc = 32;
           goto cgngD;
       cgngD: // global
           R5 = _sgmg4::P64;
           R4 = _sgmg3::P64;
           R3 = _sgmg2::P64;
           R2 = _sgmg1::P64;
           R1 = Data.Functor.Contravariant.$fContravariant:.:2_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgngF: // global
           I64[Hp - 24] = sat_sgmg5_info;
           P64[Hp - 8] = _sgmg2::P64;
           P64[Hp] = _sgmg3::P64;
           R2 = _sgmg1::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = _sgmg4::P64;
           Sp = Sp - 24;
           call GHC.Base.fmap_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariant:.:2_info" {
     Data.Functor.Contravariant.$fContravariant:.:2_info:
         const Data.Functor.Contravariant.$fContravariant:.:2_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.57073276 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariant:.:_closure" {
     Data.Functor.Contravariant.$fContravariant:.:_closure:
         const Data.Functor.Contravariant.$fContravariant:.:_info;
 },
 sat_sgmg9_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgnh5: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariant:.:1_entry(R5,
                                                                     R4,
                                                                     R3,
                                                                     R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmg9_info" {
     sat_sgmg9_info:
         const sat_sgmg9_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_sgmg8_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgnhd: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariant:.:2_entry(R5,
                                                                     R4,
                                                                     R3,
                                                                     R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmg8_info" {
     sat_sgmg8_info:
         const sat_sgmg8_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 Data.Functor.Contravariant.$fContravariant:.:_entry() //  [R2, R3]
         { []
         }
     {offset
       cgnhh: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cgnhl; else goto cgnhk;
       cgnhl: // global
           HpAlloc = 72;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariant:.:_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgnhk: // global
           I64[Hp - 64] = sat_sgmg9_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = sat_sgmg8_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = Data.Functor.Contravariant.C:Contravariant_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 62;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariant:.:_info" {
     Data.Functor.Contravariant.$fContravariant:.:_info:
         const Data.Functor.Contravariant.$fContravariant:.:_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.579820935 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariant:*:_$ccontramap_closure" {
     Data.Functor.Contravariant.$fContravariant:*:_$ccontramap_closure:
         const Data.Functor.Contravariant.$fContravariant:*:_$ccontramap_info;
 },
 sat_sgmgi_entry() //  [R1]
         { []
         }
     {offset
       cgnhP: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cgnhQ; else goto cgnhR;
       cgnhQ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgnhR: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = P64[R1 + 32];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmgi_info" {
     sat_sgmgi_info:
         const sat_sgmgi_entry;
         const 3;
         const 15;
 },
 sat_sgmgh_entry() //  [R1]
         { []
         }
     {offset
       cgnhW: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cgnhX; else goto cgnhY;
       cgnhX: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cgnhY: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = P64[R1 + 32];
           Sp = Sp - 40;
           call Data.Functor.Contravariant.contramap_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sgmgh_info" {
     sat_sgmgh_info:
         const sat_sgmgh_entry;
         const 3;
         const 15;
 },
 Data.Functor.Contravariant.$fContravariant:*:_$ccontramap_entry() //  [R2,
                                                                        R3, R4, R5]
         { []
         }
     {offset
       cgnhZ: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cgni1; else goto cgni2;
       cgni1: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariant:*:_$ccontramap_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgni2: // global
           I64[Sp - 32] = block_cgnhG_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto ugni6; else goto cgnhH;
       ugni6: // global
           call _cgnhG(R1) args: 0, res: 0, upd: 0;
       cgnhH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariant:*:_$ccontramap_info" {
     Data.Functor.Contravariant.$fContravariant:*:_$ccontramap_info:
         const Data.Functor.Contravariant.$fContravariant:*:_$ccontramap_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _cgnhG() //  [R1]
         { []
         }
     {offset
       cgnhG: // global
           Hp = Hp + 104;
           if (Hp > HpLim) (likely: False) goto cgni5; else goto cgni4;
       cgni5: // global
           HpAlloc = 104;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cgni4: // global
           _sgmgf::P64 = P64[R1 + 7];
           _sgmgg::P64 = P64[R1 + 15];
           I64[Hp - 96] = sat_sgmgi_info;
           P64[Hp - 80] = P64[Sp + 16];
           _sgmgc::P64 = P64[Sp + 24];
           P64[Hp - 72] = _sgmgc::P64;
           P64[Hp - 64] = _sgmgg::P64;
           I64[Hp - 56] = sat_sgmgh_info;
           P64[Hp - 40] = P64[Sp + 8];
           P64[Hp - 32] = _sgmgc::P64;
           P64[Hp - 24] = _sgmgf::P64;
           I64[Hp - 16] = GHC.Generics.:*:_con_info;
           P64[Hp - 8] = Hp - 56;
           P64[Hp] = Hp - 96;
           R1 = Hp - 15;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgnhG_info" {
     block_cgnhG_info:
         const _cgnhG;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.591345722 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariant:*:_closure" {
     Data.Functor.Contravariant.$fContravariant:*:_closure:
         const Data.Functor.Contravariant.$fContravariant:*:_info;
 },
 sat_sgmgm_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgniO: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariant:*:_$c>$_entry(R5,
                                                                         R4,
                                                                         R3,
                                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmgm_info" {
     sat_sgmgm_info:
         const sat_sgmgm_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_sgmgl_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cgniW: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Functor.Contravariant.$fContravariant:*:_$ccontramap_entry(R5,
                                                                                R4,
                                                                                R3,
                                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sgmgl_info" {
     sat_sgmgl_info:
         const sat_sgmgl_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 Data.Functor.Contravariant.$fContravariant:*:_entry() //  [R2, R3]
         { []
         }
     {offset
       cgnj0: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cgnj4; else goto cgnj3;
       cgnj4: // global
           HpAlloc = 72;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fContravariant:*:_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgnj3: // global
           I64[Hp - 64] = sat_sgmgm_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = sat_sgmgl_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = Data.Functor.Contravariant.C:Contravariant_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 62;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariant:*:_info" {
     Data.Functor.Contravariant.$fContravariant:*:_info:
         const Data.Functor.Contravariant.$fContravariant:*:_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.598371193 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantK3_closure" {
     Data.Functor.Contravariant.$fContravariantK3_closure:
         const Data.Functor.Contravariant.$fContravariantK3_info;
 },
 Data.Functor.Contravariant.$fContravariantK3_entry() //  [R3]
         { []
         }
     {offset
       cgnjp: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantK3_info" {
     Data.Functor.Contravariant.$fContravariantK3_info:
         const Data.Functor.Contravariant.$fContravariantK3_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.60164097 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantK1_closure" {
     Data.Functor.Contravariant.$fContravariantK1_closure:
         const Data.Functor.Contravariant.C:Contravariant_con_info;
         const Data.Functor.Contravariant.$fContravariantK3_closure+2;
         const Data.Functor.Contravariant.$fContravariantK2_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.603741151 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantU1_$ccontramap_closure" {
     Data.Functor.Contravariant.$fContravariantU1_$ccontramap_closure:
         const Data.Functor.Contravariant.$fContravariantU1_$ccontramap_info;
 },
 Data.Functor.Contravariant.$fContravariantU1_$ccontramap_entry() //  []
         { []
         }
     {offset
       cgnjB: // global
           R1 = GHC.Generics.U1_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantU1_$ccontramap_info" {
     Data.Functor.Contravariant.$fContravariantU1_$ccontramap_info:
         const Data.Functor.Contravariant.$fContravariantU1_$ccontramap_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.607084514 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantU1_closure" {
     Data.Functor.Contravariant.$fContravariantU1_closure:
         const Data.Functor.Contravariant.C:Contravariant_con_info;
         const Data.Functor.Contravariant.$fContravariantU1_$ccontramap_closure+2;
         const Data.Functor.Contravariant.$fContravariantU1_$c>$_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.609224828 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantV1_$ccontramap_closure" {
     Data.Functor.Contravariant.$fContravariantV1_$ccontramap_closure:
         const Data.Functor.Contravariant.$fContravariantV1_$ccontramap_info;
 },
 Data.Functor.Contravariant.$fContravariantV1_$ccontramap_entry() //  [R3]
         { []
         }
     {offset
       cgnjP: // global
           R1 = R3 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fContravariantV1_$ccontramap_info" {
     Data.Functor.Contravariant.$fContravariantV1_$ccontramap_info:
         const Data.Functor.Contravariant.$fContravariantV1_$ccontramap_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.612719971 UTC

[section ""data" . Data.Functor.Contravariant.$fContravariantV1_closure" {
     Data.Functor.Contravariant.$fContravariantV1_closure:
         const Data.Functor.Contravariant.C:Contravariant_con_info;
         const Data.Functor.Contravariant.$fContravariantV1_$ccontramap_closure+2;
         const Data.Functor.Contravariant.$fContravariantV1_$c>$_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.615403139 UTC

[section ""data" . lvl2_rgjLt_closure" {
     lvl2_rgjLt_closure:
         const lvl2_rgjLt_info;
         const 0;
 },
 lvl2_rgjLt_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       cgnk4: // global
           _sgmgx::P64 = R5;
           _sgmgw::P64 = R4;
           _sgmgv::P64 = R3;
           _sgmgu::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cgnk5; else goto cgnk6;
       cgnk6: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cgnk8; else goto cgnk7;
       cgnk8: // global
           HpAlloc = 32;
           goto cgnk5;
       cgnk5: // global
           R5 = _sgmgx::P64;
           R4 = _sgmgw::P64;
           R3 = _sgmgv::P64;
           R2 = _sgmgu::P64;
           R1 = lvl2_rgjLt_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgnk7: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sgmgw::P64;
           P64[Hp] = _sgmgx::P64;
           R2 = _sgmgu::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _sgmgv::P64;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 24;
           call GHC.Base.$fSemigroupOrdering_$cstimes_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . lvl2_rgjLt_info" {
     lvl2_rgjLt_info:
         const lvl2_rgjLt_entry;
         const 0;
         const 1125904201809934;
         const 17179869208;
         const Sgmyn_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.620362298 UTC

[section ""data" . lvl3_rgjLu_closure" {
     lvl3_rgjLu_closure:
         const lvl3_rgjLu_info;
         const 0;
 },
 lvl3_rgjLu_entry() //  [R2]
         { []
         }
     {offset
       cgnko: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cgnkp; else goto cgnkq;
       cgnkp: // global
           R2 = R2;
           R1 = lvl3_rgjLu_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgnkq: // global
           I64[Sp - 8] = block_cgnkl_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ugnku; else goto cgnkm;
       ugnku: // global
           call _cgnkl(R1) args: 0, res: 0, upd: 0;
       cgnkm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . lvl3_rgjLu_info" {
     lvl3_rgjLu_info:
         const lvl3_rgjLu_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const Sgmyn_srt+152;
 },
 _cgnkl() //  [R1]
         { []
         }
     {offset
       cgnkl: // global
           R4 = P64[R1 + 15];
           R3 = P64[R1 + 7];
           R2 = GHC.Base.$fSemigroupOrdering_closure;
           Sp = Sp + 8;
           call GHC.Base.$w$csconcat3_entry(R4,
                                            R3,
                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgnkl_info" {
     block_cgnkl_info:
         const _cgnkl;
         const 0;
         const 4294967326;
         const Sgmyn_srt+152;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.626975033 UTC

[section ""data" . lvl4_rgjLv_closure" {
     lvl4_rgjLv_closure:
         const lvl4_rgjLv_info;
 },
 lvl4_rgjLv_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cgnkQ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cgnkR; else goto cgnkS;
       cgnkR: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = lvl4_rgjLv_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cgnkS: // global
           I64[Sp - 24] = block_cgnkJ_info;
           _sgmgD::P64 = R2;
           R2 = R4;
           R1 = _sgmgD::P64;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . lvl4_rgjLv_info" {
     lvl4_rgjLv_info:
         const lvl4_rgjLv_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cgnkJ() //  [R1]
         { []
         }
     {offset
       cgnkJ: // global
           _cgnkP::P64 = R1 & 7;
           if (_cgnkP::P64 < 3) goto ugnl2; else goto cgnkO;
       ugnl2: // global
           if (_cgnkP::P64 < 2) goto cgnkM; else goto cgnkN;
       cgnkM: // global
           R1 = GHC.Types.LT_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cgnkN: // global
           R2 = P64[Sp + 16];
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
       cgnkO: // global
           R1 = GHC.Types.GT_closure+3;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgnkJ_info" {
     block_cgnkJ_info:
         const _cgnkJ;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.632172643 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidComparison_$s$fSemigroup(->)_closure" {
     Data.Functor.Contravariant.$fMonoidComparison_$s$fSemigroup(->)_closure:
         const GHC.Base.C:Semigroup_con_info;
         const lvl4_rgjLv_closure+3;
         const lvl3_rgjLu_closure+1;
         const lvl2_rgjLt_closure+4;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.634793311 UTC

[section ""data" . Data.Functor.Contravariant.$fSemigroupComparison2_closure" {
     Data.Functor.Contravariant.$fSemigroupComparison2_closure:
         const Data.Functor.Contravariant.$fSemigroupComparison2_info;
         const 0;
 },
 Data.Functor.Contravariant.$fSemigroupComparison2_entry() //  [R2]
         { []
         }
     {offset
       cgnlp: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cgnlq; else goto cgnlr;
       cgnlq: // global
           R2 = R2;
           R1 = Data.Functor.Contravariant.$fSemigroupComparison2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cgnlr: // global
           I64[Sp - 8] = block_cgnlm_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ugnlv; else goto cgnln;
       ugnlv: // global
           call _cgnlm(R1) args: 0, res: 0, upd: 0;
       cgnln: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fSemigroupComparison2_info" {
     Data.Functor.Contravariant.$fSemigroupComparison2_info:
         const Data.Functor.Contravariant.$fSemigroupComparison2_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const Sgmyn_srt+168;
 },
 _cgnlm() //  [R1]
         { []
         }
     {offset
       cgnlm: // global
           R4 = P64[R1 + 15];
           R3 = P64[R1 + 7];
           R2 = Data.Functor.Contravariant.$fMonoidComparison_$s$fSemigroup(->)_closure+1;
           Sp = Sp + 8;
           call GHC.Base.$w$csconcat3_entry(R4,
                                            R3,
                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cgnlm_info" {
     block_cgnlm_info:
         const _cgnlm;
         const 0;
         const 4294967326;
         const Sgmyn_srt+168;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.639955808 UTC

[section ""data" . Data.Functor.Contravariant.$fSemigroupComparison_closure" {
     Data.Functor.Contravariant.$fSemigroupComparison_closure:
         const GHC.Base.C:Semigroup_con_info;
         const Data.Functor.Contravariant.$fSemigroupComparison3_closure+3;
         const Data.Functor.Contravariant.$fSemigroupComparison2_closure+1;
         const Data.Functor.Contravariant.$fSemigroupComparison1_closure+4;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.642071985 UTC

[section ""data" . lvl5_rgjLw_closure" {
     lvl5_rgjLw_closure:
         const lvl5_rgjLw_info;
 },
 lvl5_rgjLw_entry() //  []
         { []
         }
     {offset
       cgnlL: // global
           R1 = GHC.Types.EQ_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . lvl5_rgjLw_info" {
     lvl5_rgjLw_info:
         const lvl5_rgjLw_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.645559809 UTC

[section ""data" . lvl6_rgjLx_closure" {
     lvl6_rgjLx_closure:
         const lvl6_rgjLx_info;
         const 0;
 },
 lvl6_rgjLx_entry() //  [R2, R3]
         { []
         }
     {offset
       cgnlY: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Base.$fMonoidOrdering_closure;
           call GHC.Base.$fMonoid(->)_$cmconcat_entry(R4,
                                                      R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . lvl6_rgjLx_info" {
     lvl6_rgjLx_info:
         const lvl6_rgjLx_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const Sgmyn_srt+184;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.648724764 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidComparison_$s$fMonoid(->)_closure" {
     Data.Functor.Contravariant.$fMonoidComparison_$s$fMonoid(->)_closure:
         const GHC.Base.C:Monoid_con_info;
         const Data.Functor.Contravariant.$fMonoidComparison_$s$fSemigroup(->)_closure+1;
         const lvl5_rgjLw_closure+1;
         const lvl4_rgjLv_closure+3;
         const lvl6_rgjLx_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.651481576 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidComparison1_closure" {
     Data.Functor.Contravariant.$fMonoidComparison1_closure:
         const Data.Functor.Contravariant.$fMonoidComparison1_info;
         const 0;
 },
 Data.Functor.Contravariant.$fMonoidComparison1_entry() //  [R2, R3]
         { []
         }
     {offset
       cgnma: // global
           R4 = R3;
           R3 = R2;
           R2 = Data.Functor.Contravariant.$fMonoidComparison_$s$fMonoid(->)_closure+1;
           call GHC.Base.$fMonoid(->)_$cmconcat_entry(R4,
                                                      R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.$fMonoidComparison1_info" {
     Data.Functor.Contravariant.$fMonoidComparison1_info:
         const Data.Functor.Contravariant.$fMonoidComparison1_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const Sgmyn_srt+192;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.655368366 UTC

[section ""data" . Data.Functor.Contravariant.$fMonoidComparison_closure" {
     Data.Functor.Contravariant.$fMonoidComparison_closure:
         const GHC.Base.C:Monoid_con_info;
         const Data.Functor.Contravariant.$fSemigroupComparison_closure+1;
         const Data.Functor.Contravariant.$fMonoidComparison3_closure+2;
         const Data.Functor.Contravariant.$fMonoidComparison2_closure+3;
         const Data.Functor.Contravariant.$fMonoidComparison1_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.6578916 UTC

[section ""data" . Data.Functor.Contravariant.C:Contravariant_closure" {
     Data.Functor.Contravariant.C:Contravariant_closure:
         const Data.Functor.Contravariant.C:Contravariant_info;
 },
 Data.Functor.Contravariant.C:Contravariant_entry() //  [R2, R3]
         { []
         }
     {offset
       cgnmn: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cgnmr; else goto cgnmq;
       cgnmr: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.Contravariant.C:Contravariant_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cgnmq: // global
           I64[Hp - 16] = Data.Functor.Contravariant.C:Contravariant_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.C:Contravariant_info" {
     Data.Functor.Contravariant.C:Contravariant_info:
         const Data.Functor.Contravariant.C:Contravariant_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.661852533 UTC

[section ""cstring" . ignmz_str" {
     ignmz_str:
         I8[] [98,97,115,101,58,68,97,116,97,46,70,117,110,99,116,111,114,46,67,111,110,116,114,97,118,97,114,105,97,110,116,46,67,58,67,111,110,116,114,97,118,97,114,105,97,110,116]
 },
 Data.Functor.Contravariant.C:Contravariant_con_entry() //  [R1]
         { []
         }
     {offset
       cgnmy: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.Contravariant.C:Contravariant_con_info" {
     Data.Functor.Contravariant.C:Contravariant_con_info:
         const Data.Functor.Contravariant.C:Contravariant_con_entry;
         const 2;
         const 4;
         const ignmz_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:12:17.665148951 UTC

[section ""relreadonly" . Sgmyn_srt" {
     Sgmyn_srt:
         const GHC.Base.$fSemigroupOrdering_$cstimes_closure;
         const Data.Functor.Contravariant.$fSemigroupComparison1_closure;
         const sat_sgmaJ_closure;
         const lvl1_rgjLs_closure;
         const lvl_rgjLr_closure;
         const Data.Functor.Contravariant.$fFloatingOp_$clog1mexp_closure;
         const Data.Functor.Contravariant.$fFloatingOp_$cexpm1_closure;
         const Data.Functor.Contravariant.$fFloatingOp_$clog1pexp_closure;
         const Data.Functor.Contravariant.$fFloatingOp_$clog1p_closure;
         const Data.Functor.Contravariant.$fNumOp_$cnegate_closure;
         const Data.Functor.Contravariant.$fNumOp_closure;
         const Data.Functor.Contravariant.$fFractionalOp_$cp1Fractional_closure;
         const Data.Functor.Contravariant.$fFractionalOp_closure;
         const Data.Functor.Contravariant.$fFloatingOp_$cp1Floating_closure;
         const Data.Functor.Contravariant.$fFloatingOp_closure;
         const Data.Semigroup.Internal.stimesDefault_closure;
         const Data.Functor.Contravariant.$fSemigroupEquivalence_closure;
         const Data.Functor.Contravariant.$fSemigroupPredicate_closure;
         const lvl2_rgjLt_closure;
         const GHC.Base.$fSemigroupOrdering_closure;
         const lvl3_rgjLu_closure;
         const Data.Functor.Contravariant.$fMonoidComparison_$s$fSemigroup(->)_closure;
         const Data.Functor.Contravariant.$fSemigroupComparison2_closure;
         const GHC.Base.$fMonoidOrdering_closure;
         const Data.Functor.Contravariant.$fMonoidComparison_$s$fMonoid(->)_closure;
 }]

