
==================== Asm code ====================
2018-03-16 16:11:55.752653653 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fEq1Product_$cliftEq_closure
.type Data.Functor.Product.$fEq1Product_$cliftEq_closure, @object
Data.Functor.Product.$fEq1Product_$cliftEq_closure:
	.quad	Data.Functor.Product.$fEq1Product_$cliftEq_info


==================== Asm code ====================
2018-03-16 16:11:55.75377366 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fEq1Product_$cliftEq_entry
.type Data.Functor.Product.$fEq1Product_$cliftEq_entry, @object
Data.Functor.Product.$fEq1Product_$cliftEq_entry:
_cg8iW:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8j0
_cg8j1:
	movq $block_cg8iT_info,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg8iT
_cg8iU:
	movq (%rbx),%rax
	jmp *(%rax)
_cg8j0:
	movl $Data.Functor.Product.$fEq1Product_$cliftEq_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fEq1Product_$cliftEq_entry, .-Data.Functor.Product.$fEq1Product_$cliftEq_entry


==================== Asm code ====================
2018-03-16 16:11:55.75446087 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fEq1Product_$cliftEq_info
.type Data.Functor.Product.$fEq1Product_$cliftEq_info, @object
Data.Functor.Product.$fEq1Product_$cliftEq_info:
	.quad	Data.Functor.Product.$fEq1Product_$cliftEq_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:11:55.755214117 UTC

.section .text
.align 8
_cg8iT:
_cg8iT:
	movq $block_cg8iZ_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cg8iZ
_cg8j3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg8iT, .-_cg8iT


==================== Asm code ====================
2018-03-16 16:11:55.755925587 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8iT_info:
	.quad	_cg8iT
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:55.756625231 UTC

.section .text
.align 8
_cg8iZ:
_cg8iZ:
	movq $block_cg8j7_info,(%rbp)
	movq 7(%rbx),%rdi
	movq 40(%rbp),%rsi
	movq 32(%rbp),%r14
	movq 15(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,40(%rbp)
	jmp stg_ap_ppp_fast
	.size _cg8iZ, .-_cg8iZ


==================== Asm code ====================
2018-03-16 16:11:55.757288425 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8iZ_info:
	.quad	_cg8iZ
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:55.758000066 UTC

.section .text
.align 8
_cg8j7:
_cg8j7:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cg8je
_cg8ji:
	movq 40(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 32(%rbp),%r14
	movq 24(%rbp),%rbx
	addq $48,%rbp
	jmp stg_ap_ppp_fast
_cg8je:
	movl $GHC.Types.False_closure+1,%ebx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cg8j7, .-_cg8j7


==================== Asm code ====================
2018-03-16 16:11:55.758655849 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8j7_info:
	.quad	_cg8j7
	.quad	133
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:55.761067471 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fEq1Product_closure
.type Data.Functor.Product.$fEq1Product_closure, @object
Data.Functor.Product.$fEq1Product_closure:
	.quad	Data.Functor.Product.$fEq1Product_info


==================== Asm code ====================
2018-03-16 16:11:55.761760606 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fEq1Product_entry
.type Data.Functor.Product.$fEq1Product_entry, @object
Data.Functor.Product.$fEq1Product_entry:
_cg8jJ:
	jmp Data.Functor.Product.$fEq1Product_$cliftEq_entry
	.size Data.Functor.Product.$fEq1Product_entry, .-Data.Functor.Product.$fEq1Product_entry


==================== Asm code ====================
2018-03-16 16:11:55.762409011 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fEq1Product_info
.type Data.Functor.Product.$fEq1Product_info, @object
Data.Functor.Product.$fEq1Product_info:
	.quad	Data.Functor.Product.$fEq1Product_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:11:55.766491515 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cliftCompare_closure
.type Data.Functor.Product.$w$cliftCompare_closure, @object
Data.Functor.Product.$w$cliftCompare_closure:
	.quad	Data.Functor.Product.$w$cliftCompare_info


==================== Asm code ====================
2018-03-16 16:11:55.767224108 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cliftCompare_slow
.type Data.Functor.Product.$w$cliftCompare_slow, @object
Data.Functor.Product.$w$cliftCompare_slow:
_cg8jR:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$w$cliftCompare_entry
	.size Data.Functor.Product.$w$cliftCompare_slow, .-Data.Functor.Product.$w$cliftCompare_slow


==================== Asm code ====================
2018-03-16 16:11:55.768128567 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cliftCompare_entry
.type Data.Functor.Product.$w$cliftCompare_entry, @object
Data.Functor.Product.$w$cliftCompare_entry:
_cg8k2:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8k3
_cg8k4:
	movq $block_cg8jV_info,-24(%rbp)
	movq $stg_ap_ppp_info,-56(%rbp)
	movq %rdi,-48(%rbp)
	movq %r8,-40(%rbp)
	movq (%rbp),%rax
	movq %rax,-32(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rsi,(%rbp)
	addq $-56,%rbp
	jmp Data.Functor.Classes.liftCompare_entry
_cg8k3:
	movl $Data.Functor.Product.$w$cliftCompare_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cliftCompare_entry, .-Data.Functor.Product.$w$cliftCompare_entry


==================== Asm code ====================
2018-03-16 16:11:55.768930292 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cliftCompare_info
.type Data.Functor.Product.$w$cliftCompare_info, @object
Data.Functor.Product.$w$cliftCompare_info:
	.quad	Data.Functor.Product.$w$cliftCompare_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	Data.Functor.Product.$w$cliftCompare_slow


==================== Asm code ====================
2018-03-16 16:11:55.769845799 UTC

.section .text
.align 8
_cg8jV:
_cg8jV:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ug8ke
_cg8k0:
	movl $GHC.Types.GT_closure+3,%ebx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ug8ke:
	cmpq $2,%rbx
	jb _cg8jY
_cg8jZ:
	movq 24(%rbp),%r14
	movq 8(%rbp),%rax
	movq $stg_ap_ppp_info,8(%rbp)
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp Data.Functor.Classes.liftCompare_entry
_cg8jY:
	movl $GHC.Types.LT_closure+1,%ebx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cg8jV, .-_cg8jV


==================== Asm code ====================
2018-03-16 16:11:55.770621697 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8jV_info:
	.quad	_cg8jV
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:55.775692063 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrd1Product_$cliftCompare_closure
.type Data.Functor.Product.$fOrd1Product_$cliftCompare_closure, @object
Data.Functor.Product.$fOrd1Product_$cliftCompare_closure:
	.quad	Data.Functor.Product.$fOrd1Product_$cliftCompare_info


==================== Asm code ====================
2018-03-16 16:11:55.776552289 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrd1Product_$cliftCompare_entry
.type Data.Functor.Product.$fOrd1Product_$cliftCompare_entry, @object
Data.Functor.Product.$fOrd1Product_$cliftCompare_entry:
_cg8kA:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8kE
_cg8kF:
	movq $block_cg8kx_info,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg8kx
_cg8ky:
	movq (%rbx),%rax
	jmp *(%rax)
_cg8kE:
	movl $Data.Functor.Product.$fOrd1Product_$cliftCompare_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrd1Product_$cliftCompare_entry, .-Data.Functor.Product.$fOrd1Product_$cliftCompare_entry


==================== Asm code ====================
2018-03-16 16:11:55.777272213 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrd1Product_$cliftCompare_info
.type Data.Functor.Product.$fOrd1Product_$cliftCompare_info, @object
Data.Functor.Product.$fOrd1Product_$cliftCompare_info:
	.quad	Data.Functor.Product.$fOrd1Product_$cliftCompare_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:11:55.778041035 UTC

.section .text
.align 8
_cg8kx:
_cg8kx:
	movq $block_cg8kD_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cg8kD
_cg8kH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg8kx, .-_cg8kx


==================== Asm code ====================
2018-03-16 16:11:55.778668552 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8kx_info:
	.quad	_cg8kx
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:55.779370836 UTC

.section .text
.align 8
_cg8kD:
_cg8kD:
	movq 8(%rbp),%r9
	movq 40(%rbp),%r8
	movq 32(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cliftCompare_entry
	.size _cg8kD, .-_cg8kD


==================== Asm code ====================
2018-03-16 16:11:55.779979777 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8kD_info:
	.quad	_cg8kD
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:55.783874194 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cp1Ord1_closure
.type Data.Functor.Product.$w$cp1Ord1_closure, @object
Data.Functor.Product.$w$cp1Ord1_closure:
	.quad	Data.Functor.Product.$w$cp1Ord1_info


==================== Asm code ====================
2018-03-16 16:11:55.784563863 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cp1Ord1_slow
.type Data.Functor.Product.$w$cp1Ord1_slow, @object
Data.Functor.Product.$w$cp1Ord1_slow:
_cg8l4:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$w$cp1Ord1_entry
	.size Data.Functor.Product.$w$cp1Ord1_slow, .-Data.Functor.Product.$w$cp1Ord1_slow


==================== Asm code ====================
2018-03-16 16:11:55.785798074 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cp1Ord1_entry
.type Data.Functor.Product.$w$cp1Ord1_entry, @object
Data.Functor.Product.$w$cp1Ord1_entry:
_cg8le:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8lf
_cg8lg:
	movq $block_cg8l8_info,-24(%rbp)
	movq $stg_ap_ppp_info,-56(%rbp)
	movq %rdi,-48(%rbp)
	movq %r8,-40(%rbp)
	movq (%rbp),%rax
	movq %rax,-32(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rsi,(%rbp)
	addq $-56,%rbp
	jmp Data.Functor.Classes.$p1Ord1_entry
_cg8lf:
	movl $Data.Functor.Product.$w$cp1Ord1_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cp1Ord1_entry, .-Data.Functor.Product.$w$cp1Ord1_entry


==================== Asm code ====================
2018-03-16 16:11:55.786523648 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cp1Ord1_info
.type Data.Functor.Product.$w$cp1Ord1_info, @object
Data.Functor.Product.$w$cp1Ord1_info:
	.quad	Data.Functor.Product.$w$cp1Ord1_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	Data.Functor.Product.$w$cp1Ord1_slow


==================== Asm code ====================
2018-03-16 16:11:55.787254499 UTC

.section .text
.align 8
_cg8l8:
_cg8l8:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cg8lb
_cg8lc:
	movq 24(%rbp),%r14
	movq 8(%rbp),%rax
	movq $stg_ap_ppp_info,8(%rbp)
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp Data.Functor.Classes.$p1Ord1_entry
_cg8lb:
	movl $GHC.Types.False_closure+1,%ebx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cg8l8, .-_cg8l8


==================== Asm code ====================
2018-03-16 16:11:55.787951387 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8l8_info:
	.quad	_cg8l8
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:55.791886548 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrd1Product1_closure
.type Data.Functor.Product.$fOrd1Product1_closure, @object
Data.Functor.Product.$fOrd1Product1_closure:
	.quad	Data.Functor.Product.$fOrd1Product1_info


==================== Asm code ====================
2018-03-16 16:11:55.792718733 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrd1Product1_entry
.type Data.Functor.Product.$fOrd1Product1_entry, @object
Data.Functor.Product.$fOrd1Product1_entry:
_cg8lI:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8lM
_cg8lN:
	movq $block_cg8lF_info,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg8lF
_cg8lG:
	movq (%rbx),%rax
	jmp *(%rax)
_cg8lM:
	movl $Data.Functor.Product.$fOrd1Product1_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrd1Product1_entry, .-Data.Functor.Product.$fOrd1Product1_entry


==================== Asm code ====================
2018-03-16 16:11:55.793453517 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrd1Product1_info
.type Data.Functor.Product.$fOrd1Product1_info, @object
Data.Functor.Product.$fOrd1Product1_info:
	.quad	Data.Functor.Product.$fOrd1Product1_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:11:55.794229388 UTC

.section .text
.align 8
_cg8lF:
_cg8lF:
	movq $block_cg8lL_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cg8lL
_cg8lP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg8lF, .-_cg8lF


==================== Asm code ====================
2018-03-16 16:11:55.794916742 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8lF_info:
	.quad	_cg8lF
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:55.795629362 UTC

.section .text
.align 8
_cg8lL:
_cg8lL:
	movq 8(%rbp),%r9
	movq 40(%rbp),%r8
	movq 32(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cp1Ord1_entry
	.size _cg8lL, .-_cg8lL


==================== Asm code ====================
2018-03-16 16:11:55.796318462 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8lL_info:
	.quad	_cg8lL
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:55.800479248 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrd1Product_closure
.type Data.Functor.Product.$fOrd1Product_closure, @object
Data.Functor.Product.$fOrd1Product_closure:
	.quad	Data.Functor.Product.$fOrd1Product_info


==================== Asm code ====================
2018-03-16 16:11:55.801177833 UTC

.section .text
.align 8
sat_sg5pf_entry:
_cg8mk:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$fOrd1Product_$cliftCompare_entry
	.size sat_sg5pf_entry, .-sat_sg5pf_entry


==================== Asm code ====================
2018-03-16 16:11:55.80187267 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5pf_info:
	.quad	sat_sg5pf_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:55.802552982 UTC

.section .text
.align 8
sat_sg5pe_entry:
_cg8ms:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$fOrd1Product1_entry
	.size sat_sg5pe_entry, .-sat_sg5pe_entry


==================== Asm code ====================
2018-03-16 16:11:55.803698384 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5pe_info:
	.quad	sat_sg5pe_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:55.804486865 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrd1Product_entry
.type Data.Functor.Product.$fOrd1Product_entry, @object
Data.Functor.Product.$fOrd1Product_entry:
_cg8mw:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cg8mA
_cg8mz:
	movq $sat_sg5pf_info,-64(%r12)
	movq %r14,-56(%r12)
	movq %rsi,-48(%r12)
	movq $sat_sg5pe_info,-40(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq $Data.Functor.Classes.C:Ord1_con_info,-16(%r12)
	leaq -37(%r12),%rax
	movq %rax,-8(%r12)
	leaq -61(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg8mA:
	movq $72,904(%r13)
	movl $Data.Functor.Product.$fOrd1Product_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrd1Product_entry, .-Data.Functor.Product.$fOrd1Product_entry


==================== Asm code ====================
2018-03-16 16:11:55.805205597 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrd1Product_info
.type Data.Functor.Product.$fOrd1Product_info, @object
Data.Functor.Product.$fOrd1Product_info:
	.quad	Data.Functor.Product.$fOrd1Product_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:55.806982344 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Product.$fRead1Product3_bytes
.type Data.Functor.Product.$fRead1Product3_bytes, @object
Data.Functor.Product.$fRead1Product3_bytes:
	.asciz "Pair"


==================== Asm code ====================
2018-03-16 16:11:55.810220649 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product2_closure
.type Data.Functor.Product.$fRead1Product2_closure, @object
Data.Functor.Product.$fRead1Product2_closure:
	.quad	Data.Functor.Product.$fRead1Product2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:55.811136703 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fRead1Product2_entry
.type Data.Functor.Product.$fRead1Product2_entry, @object
Data.Functor.Product.$fRead1Product2_entry:
_cg8mV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8mW
_cg8mX:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cg8mU
_cg8mT:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Data.Functor.Product.$fRead1Product3_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cg8mW:
	jmp *-16(%r13)
_cg8mU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Product.$fRead1Product2_entry, .-Data.Functor.Product.$fRead1Product2_entry


==================== Asm code ====================
2018-03-16 16:11:55.811865444 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product2_info
.type Data.Functor.Product.$fRead1Product2_info, @object
Data.Functor.Product.$fRead1Product2_info:
	.quad	Data.Functor.Product.$fRead1Product2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:11:55.813719719 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product1_closure
.type Data.Functor.Product.$fRead1Product1_closure, @object
Data.Functor.Product.$fRead1Product1_closure:
	.quad	Text.Read.Lex.Ident_con_info
	.quad	Data.Functor.Product.$fRead1Product2_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:55.815531073 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product_lvl3_closure
.type Data.Functor.Product.$fRead1Product_lvl3_closure, @object
Data.Functor.Product.$fRead1Product_lvl3_closure:
	.quad	GHC.Types.I#_con_info
	.quad	11


==================== Asm code ====================
2018-03-16 16:11:55.825575879 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product_$cliftReadPrec_closure
.type Data.Functor.Product.$fRead1Product_$cliftReadPrec_closure, @object
Data.Functor.Product.$fRead1Product_$cliftReadPrec_closure:
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:55.826496651 UTC

.section .text
.align 8
reader_sg5pk_entry:
_cg8nf:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8ng
_cg8nh:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp Data.Functor.Classes.liftReadPrec_entry
_cg8ng:
	jmp *-16(%r13)
	.size reader_sg5pk_entry, .-reader_sg5pk_entry


==================== Asm code ====================
2018-03-16 16:11:55.827259343 UTC

.section .data.rel.ro
.align 8
.align 1
reader_sg5pk_info:
	.quad	reader_sg5pk_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:55.828099759 UTC

.section .text
.align 8
reader1_sg5pl_entry:
_cg8nm:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8nn
_cg8no:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp Data.Functor.Classes.liftReadPrec_entry
_cg8nn:
	jmp *-16(%r13)
	.size reader1_sg5pl_entry, .-reader1_sg5pl_entry


==================== Asm code ====================
2018-03-16 16:11:55.828883074 UTC

.section .data.rel.ro
.align 8
.align 1
reader1_sg5pl_info:
	.quad	reader1_sg5pl_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:55.829759755 UTC

.section .text
.align 8
sat_sg5pu_entry:
_cg8nO:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cg8nS
_cg8nR:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%r14
	movq %rax,%rbx
	jmp stg_ap_p_fast
_cg8nS:
	movq $24,904(%r13)
	jmp *-8(%r13)
	.size sat_sg5pu_entry, .-sat_sg5pu_entry


==================== Asm code ====================
2018-03-16 16:11:55.830481102 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5pu_info:
	.quad	sat_sg5pu_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:55.831863778 UTC

.section .text
.align 8
sat_sg5pv_entry:
_cg8nT:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cg8nX
_cg8nW:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sg5pu_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rsi
	movl $Data.Functor.Product.$fRead1Product_lvl3_closure+1,%r14d
	movq %rax,%rbx
	jmp stg_ap_pp_fast
_cg8nX:
	movq $24,904(%r13)
	jmp *-8(%r13)
	.size sat_sg5pv_entry, .-sat_sg5pv_entry


==================== Asm code ====================
2018-03-16 16:11:55.832556402 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5pv_info:
	.quad	sat_sg5pv_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:55.833882511 UTC

.section .text
.align 8
sat_sg5pw_entry:
_cg8nY:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cg8o2
_cg8o1:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq $sat_sg5pv_info,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rsi
	movl $Data.Functor.Product.$fRead1Product_lvl3_closure+1,%r14d
	movq %rax,%rbx
	jmp stg_ap_pp_fast
_cg8o2:
	movq $24,904(%r13)
	jmp *-8(%r13)
	.size sat_sg5pw_entry, .-sat_sg5pw_entry


==================== Asm code ====================
2018-03-16 16:11:55.834560187 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5pw_info:
	.quad	sat_sg5pw_entry
	.quad	3
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:55.835402331 UTC

.section .text
.align 8
$wlvl_sg5pm_entry:
_cg8o6:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8o7
_cg8o8:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cg8oa
_cg8o9:
	cmpq $10,%r14
	jg _cg8o4
_cg8o5:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $sat_sg5pw_info,-24(%r12)
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rsi,(%r12)
	movq $block_cg8ob_info,-8(%rbp)
	leaq -23(%r12),%rsi
	movl $Data.Functor.Product.$fRead1Product1_closure+4,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_cg8oa:
	movq $32,904(%r13)
_cg8o7:
	jmp *-8(%r13)
_cg8o4:
	addq $-32,%r12
	movl $Text.ParserCombinators.ReadP.Fail_closure+3,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wlvl_sg5pm_entry, .-$wlvl_sg5pm_entry


==================== Asm code ====================
2018-03-16 16:11:55.836183956 UTC

.section .data.rel.ro
.align 8
.align 1
$wlvl_sg5pm_info:
	.quad	$wlvl_sg5pm_entry
	.quad	2
	.quad	12884901899
	.quad	8589934605
	.quad	Sg5Oh_srt


==================== Asm code ====================
2018-03-16 16:11:55.836925196 UTC

.section .text
.align 8
_cg8ob:
_cg8ob:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cg8og
_cg8of:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg8og:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg8ob, .-_cg8ob


==================== Asm code ====================
2018-03-16 16:11:55.837631007 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8ob_info:
	.quad	_cg8ob
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:55.83840385 UTC

.section .text
.align 8
lvl9_sg5pz_entry:
_cg8op:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8oq
_cg8or:
	movq $block_cg8om_info,-24(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cg8om
_cg8on:
	movq (%rbx),%rax
	jmp *(%rax)
_cg8oq:
	jmp *-8(%r13)
	.size lvl9_sg5pz_entry, .-lvl9_sg5pz_entry


==================== Asm code ====================
2018-03-16 16:11:55.839075372 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_sg5pz_info:
	.quad	lvl9_sg5pz_entry
	.quad	1
	.quad	12884901897
	.quad	8589934607
	.quad	Sg5Oh_srt


==================== Asm code ====================
2018-03-16 16:11:55.839787484 UTC

.section .text
.align 8
_cg8om:
_cg8om:
	movq 16(%rbp),%rsi
	movq 7(%rbx),%r14
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp $wlvl_sg5pm_entry
	.size _cg8om, .-_cg8om


==================== Asm code ====================
2018-03-16 16:11:55.840399113 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8om_info:
	.quad	_cg8om
	.quad	2
	.quad	12884901918
	.quad	Sg5Oh_srt


==================== Asm code ====================
2018-03-16 16:11:55.84105006 UTC

.section .text
.align 8
sat_sg5pG_entry:
_cg8oB:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Read.list3_entry
	.size sat_sg5pG_entry, .-sat_sg5pG_entry


==================== Asm code ====================
2018-03-16 16:11:55.842030204 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5pG_info:
	.quad	sat_sg5pG_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	Sg5Oh_srt+16


==================== Asm code ====================
2018-03-16 16:11:55.843442618 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry
.type Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry, @object
Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry:
_cg8oE:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cg8oI
_cg8oH:
	movq $reader_sg5pk_info,-128(%r12)
	movq %r14,-112(%r12)
	movq %rdi,-104(%r12)
	movq %r8,-96(%r12)
	movq $reader1_sg5pl_info,-88(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq $$wlvl_sg5pm_info,-48(%r12)
	leaq -128(%r12),%rax
	movq %rax,-40(%r12)
	leaq -88(%r12),%rax
	movq %rax,-32(%r12)
	movq $lvl9_sg5pz_info,-24(%r12)
	leaq -46(%r12),%rax
	movq %rax,-16(%r12)
	movq $sat_sg5pG_info,-8(%r12)
	leaq -22(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg8oI:
	movq $136,904(%r13)
	movl $Data.Functor.Product.$fRead1Product_$cliftReadPrec_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry, .-Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry


==================== Asm code ====================
2018-03-16 16:11:55.84487259 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product_$cliftReadPrec_info
.type Data.Functor.Product.$fRead1Product_$cliftReadPrec_info, @object
Data.Functor.Product.$fRead1Product_$cliftReadPrec_info:
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry
	.quad	0
	.quad	64424509454
	.quad	17179869208
	.quad	Sg5Oh_srt


==================== Asm code ====================
2018-03-16 16:11:55.856811456 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product_$cliftReadsPrec_closure
.type Data.Functor.Product.$fRead1Product_$cliftReadsPrec_closure, @object
Data.Functor.Product.$fRead1Product_$cliftReadsPrec_closure:
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:55.85808159 UTC

.section .text
.align 8
sat_sg5pR_entry:
_cg8pN:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8pO
_cg8pP:
	movq $block_cg8pK_info,-8(%rbp)
	movq 6(%rbx),%r14
	addq $-8,%rbp
	jmp Text.ParserCombinators.ReadP.$wreadS_to_P_entry
_cg8pO:
	jmp *-8(%r13)
	.size sat_sg5pR_entry, .-sat_sg5pR_entry


==================== Asm code ====================
2018-03-16 16:11:55.859103032 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5pR_info:
	.quad	sat_sg5pR_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:55.860242124 UTC

.section .text
.align 8
_cg8pK:
_cg8pK:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cg8pS
_cg8pR:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg8pS:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg8pK, .-_cg8pK


==================== Asm code ====================
2018-03-16 16:11:55.861355109 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8pK_info:
	.quad	_cg8pK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:55.862415675 UTC

.section .text
.align 8
sat_sg5pM_entry:
_cg8pY:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp Text.ParserCombinators.ReadPrec.readS_to_Prec1_entry
	.size sat_sg5pM_entry, .-sat_sg5pM_entry


==================== Asm code ====================
2018-03-16 16:11:55.863351689 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5pM_info:
	.quad	sat_sg5pM_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:55.864747095 UTC

.section .text
.align 8
ds_sg5pL_entry:
_cg8q1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8q2
_cg8q3:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cg8q5
_cg8q4:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	movq $sat_sg5pR_info,-24(%r12)
	movq %rbx,-16(%r12)
	movq $sat_sg5pM_info,-8(%r12)
	movq %rdx,(%r12)
	leaq -22(%r12),%r8
	leaq -7(%r12),%rdi
	movq %rcx,%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry
_cg8q5:
	movq $32,904(%r13)
_cg8q2:
	jmp *-16(%r13)
	.size ds_sg5pL_entry, .-ds_sg5pL_entry


==================== Asm code ====================
2018-03-16 16:11:55.866066072 UTC

.section .data.rel.ro
.align 8
.align 1
ds_sg5pL_info:
	.quad	ds_sg5pL_entry
	.quad	4
	.quad	4294967311
	.quad	Sg5Oh_srt+24


==================== Asm code ====================
2018-03-16 16:11:55.867133755 UTC

.section .text
.align 8
sat_sg5pT_entry:
_cg8qf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8qg
_cg8qh:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,%esi
	movq 24(%rbx),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp stg_ap_pp_fast
_cg8qg:
	jmp *-16(%r13)
	.size sat_sg5pT_entry, .-sat_sg5pT_entry


==================== Asm code ====================
2018-03-16 16:11:55.867911619 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5pT_info:
	.quad	sat_sg5pT_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:11:55.86872539 UTC

.section .text
.align 8
sat_sg5pU_entry:
_cg8qi:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cg8qm
_cg8ql:
	movq 7(%rbx),%rax
	movq $sat_sg5pT_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -24(%r12),%r14
	movl $Text.ParserCombinators.ReadP.run_closure+2,%ebx
	jmp stg_ap_p_fast
_cg8qm:
	movq $32,904(%r13)
	jmp *-8(%r13)
	.size sat_sg5pU_entry, .-sat_sg5pU_entry


==================== Asm code ====================
2018-03-16 16:11:55.869637586 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5pU_info:
	.quad	sat_sg5pU_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:55.87092355 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fRead1Product_$cliftReadsPrec_entry
.type Data.Functor.Product.$fRead1Product_$cliftReadsPrec_entry, @object
Data.Functor.Product.$fRead1Product_$cliftReadsPrec_entry:
_cg8qn:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cg8qr
_cg8qq:
	movq $ds_sg5pL_info,-56(%r12)
	movq %r14,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq $sat_sg5pU_info,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg8qr:
	movq $64,904(%r13)
	movl $Data.Functor.Product.$fRead1Product_$cliftReadsPrec_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fRead1Product_$cliftReadsPrec_entry, .-Data.Functor.Product.$fRead1Product_$cliftReadsPrec_entry


==================== Asm code ====================
2018-03-16 16:11:55.871640577 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product_$cliftReadsPrec_info
.type Data.Functor.Product.$fRead1Product_$cliftReadsPrec_info, @object
Data.Functor.Product.$fRead1Product_$cliftReadsPrec_info:
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	17179869208
	.quad	Sg5Oh_srt+24


==================== Asm code ====================
2018-03-16 16:11:55.875030767 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product_$cliftReadListPrec_closure
.type Data.Functor.Product.$fRead1Product_$cliftReadListPrec_closure, @object
Data.Functor.Product.$fRead1Product_$cliftReadListPrec_closure:
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadListPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:55.875746425 UTC

.section .text
.align 8
sat_sg5pZ_entry:
_cg8r2:
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	jmp Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry
	.size sat_sg5pZ_entry, .-sat_sg5pZ_entry


==================== Asm code ====================
2018-03-16 16:11:55.87636625 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5pZ_info:
	.quad	sat_sg5pZ_entry
	.quad	4
	.quad	4294967311
	.quad	Sg5Oh_srt+24


==================== Asm code ====================
2018-03-16 16:11:55.877108482 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fRead1Product_$cliftReadListPrec_entry
.type Data.Functor.Product.$fRead1Product_$cliftReadListPrec_entry, @object
Data.Functor.Product.$fRead1Product_$cliftReadListPrec_entry:
_cg8r5:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cg8r9
_cg8r8:
	movq $sat_sg5pZ_info,-40(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	leaq -40(%r12),%r14
	jmp GHC.Read.list_entry
_cg8r9:
	movq $48,904(%r13)
	movl $Data.Functor.Product.$fRead1Product_$cliftReadListPrec_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fRead1Product_$cliftReadListPrec_entry, .-Data.Functor.Product.$fRead1Product_$cliftReadListPrec_entry


==================== Asm code ====================
2018-03-16 16:11:55.877904227 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product_$cliftReadListPrec_info
.type Data.Functor.Product.$fRead1Product_$cliftReadListPrec_info, @object
Data.Functor.Product.$fRead1Product_$cliftReadListPrec_info:
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadListPrec_entry
	.quad	0
	.quad	55834574862
	.quad	17179869208
	.quad	Sg5Oh_srt+24


==================== Asm code ====================
2018-03-16 16:11:55.884165388 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product_closure
.type Data.Functor.Product.$fRead1Product_closure, @object
Data.Functor.Product.$fRead1Product_closure:
	.quad	Data.Functor.Product.$fRead1Product_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:55.884933759 UTC

.section .text
.align 8
sat_sg5q5_entry:
_cg8rq:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fRead1Product_$cliftReadListPrec_entry
	.size sat_sg5q5_entry, .-sat_sg5q5_entry


==================== Asm code ====================
2018-03-16 16:11:55.885617845 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5q5_info:
	.quad	sat_sg5q5_entry
	.quad	2
	.quad	4294967307
	.quad	8589934607
	.quad	Sg5Oh_srt+48


==================== Asm code ====================
2018-03-16 16:11:55.88634309 UTC

.section .text
.align 8
sat_sg5q4_entry:
_cg8ry:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry
	.size sat_sg5q4_entry, .-sat_sg5q4_entry


==================== Asm code ====================
2018-03-16 16:11:55.886973496 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5q4_info:
	.quad	sat_sg5q4_entry
	.quad	2
	.quad	4294967307
	.quad	8589934607
	.quad	Sg5Oh_srt+24


==================== Asm code ====================
2018-03-16 16:11:55.88775066 UTC

.section .text
.align 8
sat_sg5q3_entry:
_cg8rF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8rG
_cg8rH:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fRead1Product_$cliftReadList_entry
_cg8rG:
	jmp *-16(%r13)
	.size sat_sg5q3_entry, .-sat_sg5q3_entry


==================== Asm code ====================
2018-03-16 16:11:55.888394193 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5q3_info:
	.quad	sat_sg5q3_entry
	.quad	2
	.quad	4294967314
	.quad	Sg5Oh_srt+56


==================== Asm code ====================
2018-03-16 16:11:55.889104742 UTC

.section .text
.align 8
sat_sg5q2_entry:
_cg8rN:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fRead1Product_$cliftReadsPrec_entry
	.size sat_sg5q2_entry, .-sat_sg5q2_entry


==================== Asm code ====================
2018-03-16 16:11:55.890048528 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5q2_info:
	.quad	sat_sg5q2_entry
	.quad	2
	.quad	4294967307
	.quad	8589934607
	.quad	Sg5Oh_srt+32


==================== Asm code ====================
2018-03-16 16:11:55.890914859 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fRead1Product_entry
.type Data.Functor.Product.$fRead1Product_entry, @object
Data.Functor.Product.$fRead1Product_entry:
_cg8rR:
	addq $144,%r12
	cmpq 856(%r13),%r12
	ja _cg8rV
_cg8rU:
	movq $sat_sg5q5_info,-136(%r12)
	movq %r14,-128(%r12)
	movq %rsi,-120(%r12)
	movq $sat_sg5q4_info,-112(%r12)
	movq %r14,-104(%r12)
	movq %rsi,-96(%r12)
	movq $sat_sg5q3_info,-88(%r12)
	movq %r14,-72(%r12)
	movq %rsi,-64(%r12)
	movq $sat_sg5q2_info,-56(%r12)
	movq %r14,-48(%r12)
	movq %rsi,-40(%r12)
	movq $Data.Functor.Classes.C:Read1_con_info,-32(%r12)
	leaq -54(%r12),%rax
	movq %rax,-24(%r12)
	leaq -88(%r12),%rax
	movq %rax,-16(%r12)
	leaq -110(%r12),%rax
	movq %rax,-8(%r12)
	leaq -134(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg8rV:
	movq $144,904(%r13)
	movl $Data.Functor.Product.$fRead1Product_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fRead1Product_entry, .-Data.Functor.Product.$fRead1Product_entry


==================== Asm code ====================
2018-03-16 16:11:55.891812344 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product_info
.type Data.Functor.Product.$fRead1Product_info, @object
Data.Functor.Product.$fRead1Product_info:
	.quad	Data.Functor.Product.$fRead1Product_entry
	.quad	0
	.quad	253403070478
	.quad	8589934607
	.quad	Sg5Oh_srt+24


==================== Asm code ====================
2018-03-16 16:11:55.892443706 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product_$cliftReadList_closure
.type Data.Functor.Product.$fRead1Product_$cliftReadList_closure, @object
Data.Functor.Product.$fRead1Product_$cliftReadList_closure:
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:55.893304103 UTC

.section .text
.align 8
sat_sg5q8_entry:
_cg8s4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8s5
_cg8s6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fRead1Product_entry
_cg8s5:
	jmp *-16(%r13)
	.size sat_sg5q8_entry, .-sat_sg5q8_entry


==================== Asm code ====================
2018-03-16 16:11:55.894047283 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5q8_info:
	.quad	sat_sg5q8_entry
	.quad	2
	.quad	4294967314
	.quad	Sg5Oh_srt+64


==================== Asm code ====================
2018-03-16 16:11:55.894852615 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fRead1Product_$cliftReadList_entry
.type Data.Functor.Product.$fRead1Product_$cliftReadList_entry, @object
Data.Functor.Product.$fRead1Product_$cliftReadList_entry:
_cg8s7:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cg8sb
_cg8sa:
	movq $sat_sg5q8_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movl $Data.Functor.Classes.liftReadListDefault_closure+3,%ebx
	jmp stg_ap_p_fast
_cg8sb:
	movq $32,904(%r13)
	movl $Data.Functor.Product.$fRead1Product_$cliftReadList_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fRead1Product_$cliftReadList_entry, .-Data.Functor.Product.$fRead1Product_$cliftReadList_entry


==================== Asm code ====================
2018-03-16 16:11:55.895609186 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product_$cliftReadList_info
.type Data.Functor.Product.$fRead1Product_$cliftReadList_info, @object
Data.Functor.Product.$fRead1Product_$cliftReadList_info:
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadList_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	Sg5Oh_srt+56


==================== Asm code ====================
2018-03-16 16:11:55.90117401 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cliftShowsPrec_closure
.type Data.Functor.Product.$w$cliftShowsPrec_closure, @object
Data.Functor.Product.$w$cliftShowsPrec_closure:
	.quad	Data.Functor.Product.$w$cliftShowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:55.901978548 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cliftShowsPrec_slow
.type Data.Functor.Product.$w$cliftShowsPrec_slow, @object
Data.Functor.Product.$w$cliftShowsPrec_slow:
_cg8sH:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$w$cliftShowsPrec_entry
	.size Data.Functor.Product.$w$cliftShowsPrec_slow, .-Data.Functor.Product.$w$cliftShowsPrec_slow


==================== Asm code ====================
2018-03-16 16:11:55.902812297 UTC

.section .text
.align 8
sat_sg5qh_entry:
_cg8sP:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8sQ
_cg8sR:
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp Data.Functor.Classes.liftShowsPrec_entry
_cg8sQ:
	jmp *-16(%r13)
	.size sat_sg5qh_entry, .-sat_sg5qh_entry


==================== Asm code ====================
2018-03-16 16:11:55.903492455 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5qh_info:
	.quad	sat_sg5qh_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:55.904224098 UTC

.section .text
.align 8
sat_sg5qg_entry:
_cg8sW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8sX
_cg8sY:
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp Data.Functor.Classes.liftShowsPrec_entry
_cg8sX:
	jmp *-16(%r13)
	.size sat_sg5qg_entry, .-sat_sg5qg_entry


==================== Asm code ====================
2018-03-16 16:11:55.904943507 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5qg_info:
	.quad	sat_sg5qg_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:55.905851183 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cliftShowsPrec_entry
.type Data.Functor.Product.$w$cliftShowsPrec_entry, @object
Data.Functor.Product.$w$cliftShowsPrec_entry:
_cg8sZ:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cg8t3
_cg8t2:
	movq $sat_sg5qh_info,-72(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq $sat_sg5qg_info,-32(%r12)
	movq %r14,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	movq %r9,%rax
	movq (%rbp),%r9
	movq %rax,%r8
	movl $Data.Functor.Product.$fRead1Product2_closure,%edi
	leaq -72(%r12),%rsi
	leaq -32(%r12),%r14
	addq $8,%rbp
	jmp Data.Functor.Classes.$wshowsBinaryWith_entry
_cg8t3:
	movq $80,904(%r13)
	movl $Data.Functor.Product.$w$cliftShowsPrec_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cliftShowsPrec_entry, .-Data.Functor.Product.$w$cliftShowsPrec_entry


==================== Asm code ====================
2018-03-16 16:11:55.906666226 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cliftShowsPrec_info
.type Data.Functor.Product.$w$cliftShowsPrec_info, @object
Data.Functor.Product.$w$cliftShowsPrec_info:
	.quad	Data.Functor.Product.$w$cliftShowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	30064771072
	.quad	Sg5Oh_srt+72
	.quad	1031
	.quad	Data.Functor.Product.$w$cliftShowsPrec_slow


==================== Asm code ====================
2018-03-16 16:11:55.911193714 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fShow1Product_$cliftShowsPrec_closure
.type Data.Functor.Product.$fShow1Product_$cliftShowsPrec_closure, @object
Data.Functor.Product.$fShow1Product_$cliftShowsPrec_closure:
	.quad	Data.Functor.Product.$fShow1Product_$cliftShowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:55.912050091 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fShow1Product_$cliftShowsPrec_entry
.type Data.Functor.Product.$fShow1Product_$cliftShowsPrec_entry, @object
Data.Functor.Product.$fShow1Product_$cliftShowsPrec_entry:
_cg8tt:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8tx
_cg8ty:
	movq $block_cg8tq_info,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg8tq
_cg8tr:
	movq (%rbx),%rax
	jmp *(%rax)
_cg8tx:
	movl $Data.Functor.Product.$fShow1Product_$cliftShowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fShow1Product_$cliftShowsPrec_entry, .-Data.Functor.Product.$fShow1Product_$cliftShowsPrec_entry


==================== Asm code ====================
2018-03-16 16:11:55.912815534 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fShow1Product_$cliftShowsPrec_info
.type Data.Functor.Product.$fShow1Product_$cliftShowsPrec_info, @object
Data.Functor.Product.$fShow1Product_$cliftShowsPrec_info:
	.quad	Data.Functor.Product.$fShow1Product_$cliftShowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	25769803802
	.quad	Sg5Oh_srt+80


==================== Asm code ====================
2018-03-16 16:11:55.913566735 UTC

.section .text
.align 8
_cg8tq:
_cg8tq:
	movq $block_cg8tw_info,(%rbp)
	movq 7(%rbx),%rax
	movq 40(%rbp),%rbx
	movq %rax,40(%rbp)
	testb $7,%bl
	jne _cg8tw
_cg8tA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg8tq, .-_cg8tq


==================== Asm code ====================
2018-03-16 16:11:55.914179287 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8tq_info:
	.quad	_cg8tq
	.quad	5
	.quad	4294967326
	.quad	Sg5Oh_srt+80


==================== Asm code ====================
2018-03-16 16:11:55.914885028 UTC

.section .text
.align 8
_cg8tw:
_cg8tw:
	movq 40(%rbp),%r9
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cliftShowsPrec_entry
	.size _cg8tw, .-_cg8tw


==================== Asm code ====================
2018-03-16 16:11:55.915529317 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8tw_info:
	.quad	_cg8tw
	.quad	1029
	.quad	4294967326
	.quad	Sg5Oh_srt+80


==================== Asm code ====================
2018-03-16 16:11:55.917424798 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct4_closure
.type Data.Functor.Product.$fFoldableProduct4_closure, @object
Data.Functor.Product.$fFoldableProduct4_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:55.922147893 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fShow1Product_$cliftShowList_closure
.type Data.Functor.Product.$fShow1Product_$cliftShowList_closure, @object
Data.Functor.Product.$fShow1Product_$cliftShowList_closure:
	.quad	Data.Functor.Product.$fShow1Product_$cliftShowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:55.923102769 UTC

.section .text
.align 8
sat_sg5qD_entry:
_cg8u9:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8ua
_cg8ub:
	movq $block_cg8u6_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg8u6
_cg8u7:
	movq (%rbx),%rax
	jmp *(%rax)
_cg8ua:
	jmp *-8(%r13)
	.size sat_sg5qD_entry, .-sat_sg5qD_entry


==================== Asm code ====================
2018-03-16 16:11:55.923852471 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5qD_info:
	.quad	sat_sg5qD_entry
	.quad	4
	.quad	4294967304
	.quad	4294967301
	.quad	Sg5Oh_srt+80


==================== Asm code ====================
2018-03-16 16:11:55.924611075 UTC

.section .text
.align 8
_cg8u6:
_cg8u6:
	xorl %r9d,%r9d
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,24(%rbp)
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp Data.Functor.Product.$w$cliftShowsPrec_entry
	.size _cg8u6, .-_cg8u6


==================== Asm code ====================
2018-03-16 16:11:55.925352123 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8u6_info:
	.quad	_cg8u6
	.quad	4
	.quad	4294967326
	.quad	Sg5Oh_srt+80


==================== Asm code ====================
2018-03-16 16:11:55.926195914 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fShow1Product_$cliftShowList_entry
.type Data.Functor.Product.$fShow1Product_$cliftShowList_entry, @object
Data.Functor.Product.$fShow1Product_$cliftShowList_entry:
_cg8ug:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cg8uk
_cg8uj:
	movq $sat_sg5qD_info,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	movq (%rbp),%rdi
	movq %r9,%rsi
	leaq -31(%r12),%r14
	addq $8,%rbp
	jmp GHC.Show.showList___entry
_cg8uk:
	movq $40,904(%r13)
	movl $Data.Functor.Product.$fShow1Product_$cliftShowList_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fShow1Product_$cliftShowList_entry, .-Data.Functor.Product.$fShow1Product_$cliftShowList_entry


==================== Asm code ====================
2018-03-16 16:11:55.927465045 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fShow1Product_$cliftShowList_info
.type Data.Functor.Product.$fShow1Product_$cliftShowList_info, @object
Data.Functor.Product.$fShow1Product_$cliftShowList_info:
	.quad	Data.Functor.Product.$fShow1Product_$cliftShowList_entry
	.quad	0
	.quad	21474836494
	.quad	25769803802
	.quad	Sg5Oh_srt+80


==================== Asm code ====================
2018-03-16 16:11:55.931868028 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fShow1Product_closure
.type Data.Functor.Product.$fShow1Product_closure, @object
Data.Functor.Product.$fShow1Product_closure:
	.quad	Data.Functor.Product.$fShow1Product_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:55.93268869 UTC

.section .text
.align 8
sat_sg5qH_entry:
_cg8uI:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8uJ
_cg8uK:
	movq %rdi,%r9
	movq %r8,%rax
	movq %rsi,%r8
	movq %r14,%rdi
	movq 12(%rbx),%rsi
	movq 4(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp Data.Functor.Product.$fShow1Product_$cliftShowList_entry
_cg8uJ:
	jmp *-8(%r13)
	.size sat_sg5qH_entry, .-sat_sg5qH_entry


==================== Asm code ====================
2018-03-16 16:11:55.933871626 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5qH_info:
	.quad	sat_sg5qH_entry
	.quad	2
	.quad	4294967307
	.quad	17179869208
	.quad	Sg5Oh_srt+96


==================== Asm code ====================
2018-03-16 16:11:55.934621788 UTC

.section .text
.align 8
sat_sg5qG_entry:
_cg8uQ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8uR
_cg8uS:
	movq %rdi,%r9
	movq %r8,%rax
	movq %rsi,%r8
	movq %r14,%rdi
	movq 12(%rbx),%rsi
	movq 4(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp Data.Functor.Product.$fShow1Product_$cliftShowsPrec_entry
_cg8uR:
	jmp *-8(%r13)
	.size sat_sg5qG_entry, .-sat_sg5qG_entry


==================== Asm code ====================
2018-03-16 16:11:55.935327843 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5qG_info:
	.quad	sat_sg5qG_entry
	.quad	2
	.quad	4294967307
	.quad	17179869208
	.quad	Sg5Oh_srt+88


==================== Asm code ====================
2018-03-16 16:11:55.936180195 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fShow1Product_entry
.type Data.Functor.Product.$fShow1Product_entry, @object
Data.Functor.Product.$fShow1Product_entry:
_cg8uU:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cg8uY
_cg8uX:
	movq $sat_sg5qH_info,-64(%r12)
	movq %r14,-56(%r12)
	movq %rsi,-48(%r12)
	movq $sat_sg5qG_info,-40(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq $Data.Functor.Classes.C:Show1_con_info,-16(%r12)
	leaq -36(%r12),%rax
	movq %rax,-8(%r12)
	leaq -60(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg8uY:
	movq $72,904(%r13)
	movl $Data.Functor.Product.$fShow1Product_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fShow1Product_entry, .-Data.Functor.Product.$fShow1Product_entry


==================== Asm code ====================
2018-03-16 16:11:55.936875535 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fShow1Product_info
.type Data.Functor.Product.$fShow1Product_info, @object
Data.Functor.Product.$fShow1Product_info:
	.quad	Data.Functor.Product.$fShow1Product_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	Sg5Oh_srt+88


==================== Asm code ====================
2018-03-16 16:11:55.941736195 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$c==_closure
.type Data.Functor.Product.$w$c==_closure, @object
Data.Functor.Product.$w$c==_closure:
	.quad	Data.Functor.Product.$w$c==_info


==================== Asm code ====================
2018-03-16 16:11:55.942470901 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$c==_slow
.type Data.Functor.Product.$w$c==_slow, @object
Data.Functor.Product.$w$c==_slow:
_cg8vf:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$w$c==_entry
	.size Data.Functor.Product.$w$c==_slow, .-Data.Functor.Product.$w$c==_slow


==================== Asm code ====================
2018-03-16 16:11:55.943288439 UTC

.section .text
.align 8
eq_sg5qP_entry:
_cg8vn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8vo
_cg8vp:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Classes.==_entry
_cg8vo:
	jmp *-16(%r13)
	.size eq_sg5qP_entry, .-eq_sg5qP_entry


==================== Asm code ====================
2018-03-16 16:11:55.943954594 UTC

.section .data.rel.ro
.align 8
.align 1
eq_sg5qP_info:
	.quad	eq_sg5qP_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:55.94484323 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$c==_entry
.type Data.Functor.Product.$w$c==_entry, @object
Data.Functor.Product.$w$c==_entry:
_cg8vw:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8vx
_cg8vy:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cg8vA
_cg8vz:
	movq $eq_sg5qP_info,-16(%r12)
	movq %rdi,(%r12)
	movq $block_cg8vq_info,-24(%rbp)
	movq (%rbp),%rdi
	movq %rsi,%rax
	movq %r8,%rsi
	leaq -16(%r12),%rbx
	movq %r14,%rcx
	movq %rbx,%r14
	movq %rbx,%rdx
	movq %rcx,%rbx
	movq %rax,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rdx,(%rbp)
	addq $-24,%rbp
	jmp stg_ap_ppp_fast
_cg8vA:
	movq $24,904(%r13)
_cg8vx:
	movl $Data.Functor.Product.$w$c==_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$c==_entry, .-Data.Functor.Product.$w$c==_entry


==================== Asm code ====================
2018-03-16 16:11:55.945682666 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$c==_info
.type Data.Functor.Product.$w$c==_info, @object
Data.Functor.Product.$w$c==_info:
	.quad	Data.Functor.Product.$w$c==_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	Data.Functor.Product.$w$c==_slow


==================== Asm code ====================
2018-03-16 16:11:55.94645017 UTC

.section .text
.align 8
_cg8vq:
_cg8vq:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cg8vt
_cg8vu:
	movq 32(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 24(%rbp),%r14
	movq 8(%rbp),%rbx
	addq $40,%rbp
	jmp stg_ap_ppp_fast
_cg8vt:
	movl $GHC.Types.False_closure+1,%ebx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cg8vq, .-_cg8vq


==================== Asm code ====================
2018-03-16 16:11:55.947127806 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8vq_info:
	.quad	_cg8vq
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:55.951281586 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fEqProduct_$c==_closure
.type Data.Functor.Product.$fEqProduct_$c==_closure, @object
Data.Functor.Product.$fEqProduct_$c==_closure:
	.quad	Data.Functor.Product.$fEqProduct_$c==_info


==================== Asm code ====================
2018-03-16 16:11:55.952179569 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fEqProduct_$c==_entry
.type Data.Functor.Product.$fEqProduct_$c==_entry, @object
Data.Functor.Product.$fEqProduct_$c==_entry:
_cg8w5:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8w9
_cg8wa:
	movq $block_cg8w2_info,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg8w2
_cg8w3:
	movq (%rbx),%rax
	jmp *(%rax)
_cg8w9:
	movl $Data.Functor.Product.$fEqProduct_$c==_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fEqProduct_$c==_entry, .-Data.Functor.Product.$fEqProduct_$c==_entry


==================== Asm code ====================
2018-03-16 16:11:55.952932818 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fEqProduct_$c==_info
.type Data.Functor.Product.$fEqProduct_$c==_info, @object
Data.Functor.Product.$fEqProduct_$c==_info:
	.quad	Data.Functor.Product.$fEqProduct_$c==_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:11:55.954342681 UTC

.section .text
.align 8
_cg8w2:
_cg8w2:
	movq $block_cg8w8_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cg8w8
_cg8wc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg8w2, .-_cg8w2


==================== Asm code ====================
2018-03-16 16:11:55.955073058 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8w2_info:
	.quad	_cg8w2
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:55.956288838 UTC

.section .text
.align 8
_cg8w8:
_cg8w8:
	movq 8(%rbp),%r9
	movq 40(%rbp),%r8
	movq 32(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$c==_entry
	.size _cg8w8, .-_cg8w8


==================== Asm code ====================
2018-03-16 16:11:55.956937068 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8w8_info:
	.quad	_cg8w8
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:55.96291188 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fEqProduct_$c/=_closure
.type Data.Functor.Product.$fEqProduct_$c/=_closure, @object
Data.Functor.Product.$fEqProduct_$c/=_closure:
	.quad	Data.Functor.Product.$fEqProduct_$c/=_info


==================== Asm code ====================
2018-03-16 16:11:55.963687174 UTC

.section .text
.align 8
eq_sg5rd_entry:
_cg8wQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8wR
_cg8wS:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Classes.==_entry
_cg8wR:
	jmp *-16(%r13)
	.size eq_sg5rd_entry, .-eq_sg5rd_entry


==================== Asm code ====================
2018-03-16 16:11:55.964292234 UTC

.section .data.rel.ro
.align 8
.align 1
eq_sg5rd_info:
	.quad	eq_sg5rd_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:55.965076769 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fEqProduct_$c/=_entry
.type Data.Functor.Product.$fEqProduct_$c/=_entry, @object
Data.Functor.Product.$fEqProduct_$c/=_entry:
_cg8wT:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8wU
_cg8wV:
	movq $block_cg8wC_info,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg8wC
_cg8wD:
	movq (%rbx),%rax
	jmp *(%rax)
_cg8wU:
	movl $Data.Functor.Product.$fEqProduct_$c/=_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fEqProduct_$c/=_entry, .-Data.Functor.Product.$fEqProduct_$c/=_entry


==================== Asm code ====================
2018-03-16 16:11:55.965870365 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fEqProduct_$c/=_info
.type Data.Functor.Product.$fEqProduct_$c/=_info, @object
Data.Functor.Product.$fEqProduct_$c/=_info:
	.quad	Data.Functor.Product.$fEqProduct_$c/=_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:11:55.966609152 UTC

.section .text
.align 8
_cg8wC:
_cg8wC:
	movq $block_cg8wH_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cg8wH
_cg8wI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg8wC, .-_cg8wC


==================== Asm code ====================
2018-03-16 16:11:55.967219382 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8wC_info:
	.quad	_cg8wC
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:55.967989527 UTC

.section .text
.align 8
_cg8wH:
_cg8wH:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cg8x0
_cg8wZ:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $eq_sg5rd_info,-16(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,(%r12)
	movq $block_cg8wX_info,(%rbp)
	movq %rax,%rdi
	movq 40(%rbp),%rsi
	leaq -16(%r12),%rax
	movq %rax,%r14
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,32(%rbp)
	movq %rax,40(%rbp)
	jmp stg_ap_ppp_fast
_cg8x0:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg8wH, .-_cg8wH


==================== Asm code ====================
2018-03-16 16:11:55.968703932 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8wH_info:
	.quad	_cg8wH
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:55.969515657 UTC

.section .text
.align 8
_cg8wX:
_cg8wX:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ug8xo
_cg8xb:
	movq 40(%rbp),%rax
	movq $block_cg8x9_info,40(%rbp)
	movq 32(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq %rax,%r14
	movq 24(%rbp),%rbx
	addq $40,%rbp
	jmp stg_ap_ppp_fast
_ug8xo:
	addq $48,%rbp
	jmp _cg8xh
	.size _cg8wX, .-_cg8wX


==================== Asm code ====================
2018-03-16 16:11:55.970204591 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8wX_info:
	.quad	_cg8wX
	.quad	133
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:55.970910828 UTC

.section .text
.align 8
_cg8x9:
_cg8x9:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ug8xp
_cg8xl:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ug8xp:
	addq $8,%rbp
	jmp _cg8xh
	.size _cg8x9, .-_cg8x9


==================== Asm code ====================
2018-03-16 16:11:55.971563462 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8x9_info:
	.quad	_cg8x9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:55.972203871 UTC

.section .text
.align 8
_cg8xh:
_cg8xh:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cg8xh, .-_cg8xh


==================== Asm code ====================
2018-03-16 16:11:55.97614585 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fEqProduct_closure
.type Data.Functor.Product.$fEqProduct_closure, @object
Data.Functor.Product.$fEqProduct_closure:
	.quad	Data.Functor.Product.$fEqProduct_info


==================== Asm code ====================
2018-03-16 16:11:55.976793149 UTC

.section .text
.align 8
sat_sg5rk_entry:
_cg8y9:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fEqProduct_$c/=_entry
	.size sat_sg5rk_entry, .-sat_sg5rk_entry


==================== Asm code ====================
2018-03-16 16:11:55.977481305 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5rk_info:
	.quad	sat_sg5rk_entry
	.quad	3
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:55.978142538 UTC

.section .text
.align 8
sat_sg5rj_entry:
_cg8yh:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fEqProduct_$c==_entry
	.size sat_sg5rj_entry, .-sat_sg5rj_entry


==================== Asm code ====================
2018-03-16 16:11:55.97882526 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5rj_info:
	.quad	sat_sg5rj_entry
	.quad	3
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:55.979654204 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fEqProduct_entry
.type Data.Functor.Product.$fEqProduct_entry, @object
Data.Functor.Product.$fEqProduct_entry:
_cg8yl:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cg8yp
_cg8yo:
	movq $sat_sg5rk_info,-80(%r12)
	movq %r14,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq $sat_sg5rj_info,-48(%r12)
	movq %r14,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq $GHC.Classes.C:Eq_con_info,-16(%r12)
	leaq -46(%r12),%rax
	movq %rax,-8(%r12)
	leaq -78(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg8yp:
	movq $88,904(%r13)
	movl $Data.Functor.Product.$fEqProduct_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fEqProduct_entry, .-Data.Functor.Product.$fEqProduct_entry


==================== Asm code ====================
2018-03-16 16:11:55.980435415 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fEqProduct_info
.type Data.Functor.Product.$fEqProduct_info, @object
Data.Functor.Product.$fEqProduct_info:
	.quad	Data.Functor.Product.$fEqProduct_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:55.987241698 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$ccompare_closure
.type Data.Functor.Product.$fOrdProduct_$ccompare_closure, @object
Data.Functor.Product.$fOrdProduct_$ccompare_closure:
	.quad	Data.Functor.Product.$fOrdProduct_$ccompare_info


==================== Asm code ====================
2018-03-16 16:11:55.987977769 UTC

.section .text
.align 8
w_sg5rw_entry:
_cg8yV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8yW
_cg8yX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Classes.compare_entry
_cg8yW:
	jmp *-16(%r13)
	.size w_sg5rw_entry, .-w_sg5rw_entry


==================== Asm code ====================
2018-03-16 16:11:55.988611913 UTC

.section .data.rel.ro
.align 8
.align 1
w_sg5rw_info:
	.quad	w_sg5rw_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:55.989474491 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrdProduct_$ccompare_entry
.type Data.Functor.Product.$fOrdProduct_$ccompare_entry, @object
Data.Functor.Product.$fOrdProduct_$ccompare_entry:
_cg8yY:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8yZ
_cg8z0:
	movq $block_cg8yH_info,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg8yH
_cg8yI:
	movq (%rbx),%rax
	jmp *(%rax)
_cg8yZ:
	movl $Data.Functor.Product.$fOrdProduct_$ccompare_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrdProduct_$ccompare_entry, .-Data.Functor.Product.$fOrdProduct_$ccompare_entry


==================== Asm code ====================
2018-03-16 16:11:55.990165791 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$ccompare_info
.type Data.Functor.Product.$fOrdProduct_$ccompare_info, @object
Data.Functor.Product.$fOrdProduct_$ccompare_info:
	.quad	Data.Functor.Product.$fOrdProduct_$ccompare_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:11:55.990900866 UTC

.section .text
.align 8
_cg8yH:
_cg8yH:
	movq $block_cg8yM_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cg8yM
_cg8yN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg8yH, .-_cg8yH


==================== Asm code ====================
2018-03-16 16:11:55.991542114 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8yH_info:
	.quad	_cg8yH
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:55.992328638 UTC

.section .text
.align 8
_cg8yM:
_cg8yM:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cg8z5
_cg8z4:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $w_sg5rw_info,-16(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,(%r12)
	movq $block_cg8z2_info,(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_ppp_info,-32(%rbp)
	leaq -16(%r12),%rcx
	movq %rcx,-24(%rbp)
	movq 40(%rbp),%rdx
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rbx,32(%rbp)
	movq %rcx,40(%rbp)
	addq $-32,%rbp
	jmp Data.Functor.Classes.liftCompare_entry
_cg8z5:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg8yM, .-_cg8yM


==================== Asm code ====================
2018-03-16 16:11:55.993046641 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8yM_info:
	.quad	_cg8yM
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:55.993873084 UTC

.section .text
.align 8
_cg8z2:
_cg8z2:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ug8zl
_cg8zj:
	movl $GHC.Types.GT_closure+3,%ebx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ug8zl:
	cmpq $2,%rbx
	jb _cg8zb
_cg8zf:
	movq 24(%rbp),%r14
	movq $stg_ap_ppp_info,16(%rbp)
	movq 40(%rbp),%rax
	movq %rax,24(%rbp)
	movq 32(%rbp),%rax
	movq 8(%rbp),%rbx
	movq %rbx,32(%rbp)
	movq %rax,40(%rbp)
	addq $16,%rbp
	jmp Data.Functor.Classes.liftCompare_entry
_cg8zb:
	movl $GHC.Types.LT_closure+1,%ebx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cg8z2, .-_cg8z2


==================== Asm code ====================
2018-03-16 16:11:55.994580042 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8z2_info:
	.quad	_cg8z2
	.quad	133
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:55.999314311 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$cp1Ord_closure
.type Data.Functor.Product.$fOrdProduct_$cp1Ord_closure, @object
Data.Functor.Product.$fOrdProduct_$cp1Ord_closure:
	.quad	Data.Functor.Product.$fOrdProduct_$cp1Ord_info


==================== Asm code ====================
2018-03-16 16:11:56.000058523 UTC

.section .text
.align 8
sat_sg5rD_entry:
_cg8zX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8zY
_cg8zZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Classes.$p1Ord_entry
_cg8zY:
	jmp *-16(%r13)
	.size sat_sg5rD_entry, .-sat_sg5rD_entry


==================== Asm code ====================
2018-03-16 16:11:56.000666207 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5rD_info:
	.quad	sat_sg5rD_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.001387558 UTC

.section .text
.align 8
sat_sg5rC_entry:
_cg8A4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8A5
_cg8A6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Classes.$p1Ord1_entry
_cg8A5:
	jmp *-16(%r13)
	.size sat_sg5rC_entry, .-sat_sg5rC_entry


==================== Asm code ====================
2018-03-16 16:11:56.001988212 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5rC_info:
	.quad	sat_sg5rC_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.002658237 UTC

.section .text
.align 8
sat_sg5rB_entry:
_cg8Ab:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Ac
_cg8Ad:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Classes.$p1Ord1_entry
_cg8Ac:
	jmp *-16(%r13)
	.size sat_sg5rB_entry, .-sat_sg5rB_entry


==================== Asm code ====================
2018-03-16 16:11:56.003252243 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5rB_info:
	.quad	sat_sg5rB_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.003977602 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrdProduct_$cp1Ord_entry
.type Data.Functor.Product.$fOrdProduct_$cp1Ord_entry, @object
Data.Functor.Product.$fOrdProduct_$cp1Ord_entry:
_cg8Ae:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cg8Ai
_cg8Ah:
	movq $sat_sg5rD_info,-64(%r12)
	movq %rdi,-48(%r12)
	movq $sat_sg5rC_info,-40(%r12)
	movq %rsi,-24(%r12)
	movq $sat_sg5rB_info,-16(%r12)
	movq %r14,(%r12)
	leaq -64(%r12),%rdi
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp Data.Functor.Product.$fEqProduct_entry
_cg8Ai:
	movq $72,904(%r13)
	movl $Data.Functor.Product.$fOrdProduct_$cp1Ord_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrdProduct_$cp1Ord_entry, .-Data.Functor.Product.$fOrdProduct_$cp1Ord_entry


==================== Asm code ====================
2018-03-16 16:11:56.004662889 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$cp1Ord_info
.type Data.Functor.Product.$fOrdProduct_$cp1Ord_info, @object
Data.Functor.Product.$fOrdProduct_$cp1Ord_info:
	.quad	Data.Functor.Product.$fOrdProduct_$cp1Ord_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:56.010446 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$c<_closure
.type Data.Functor.Product.$w$c<_closure, @object
Data.Functor.Product.$w$c<_closure:
	.quad	Data.Functor.Product.$w$c<_info


==================== Asm code ====================
2018-03-16 16:11:56.011155227 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$c<_slow
.type Data.Functor.Product.$w$c<_slow, @object
Data.Functor.Product.$w$c<_slow:
_cg8AA:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$w$c<_entry
	.size Data.Functor.Product.$w$c<_slow, .-Data.Functor.Product.$w$c<_slow


==================== Asm code ====================
2018-03-16 16:11:56.011988823 UTC

.section .text
.align 8
comp_sg5rL_entry:
_cg8AI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8AJ
_cg8AK:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Classes.compare_entry
_cg8AJ:
	jmp *-16(%r13)
	.size comp_sg5rL_entry, .-comp_sg5rL_entry


==================== Asm code ====================
2018-03-16 16:11:56.012674965 UTC

.section .data.rel.ro
.align 8
.align 1
comp_sg5rL_info:
	.quad	comp_sg5rL_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.014612702 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$c<_entry
.type Data.Functor.Product.$w$c<_entry, @object
Data.Functor.Product.$w$c<_entry:
_cg8AS:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8AT
_cg8AU:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cg8AW
_cg8AV:
	movq $comp_sg5rL_info,-16(%r12)
	movq %rdi,(%r12)
	movq $block_cg8AL_info,-24(%rbp)
	movq $stg_ap_ppp_info,-56(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-48(%rbp)
	movq %r8,-40(%rbp)
	movq (%rbp),%rbx
	movq %rbx,-32(%rbp)
	movq %rsi,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rax,(%rbp)
	addq $-56,%rbp
	jmp Data.Functor.Classes.liftCompare_entry
_cg8AW:
	movq $24,904(%r13)
_cg8AT:
	movl $Data.Functor.Product.$w$c<_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$c<_entry, .-Data.Functor.Product.$w$c<_entry


==================== Asm code ====================
2018-03-16 16:11:56.015632602 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$c<_info
.type Data.Functor.Product.$w$c<_info, @object
Data.Functor.Product.$w$c<_info:
	.quad	Data.Functor.Product.$w$c<_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	Data.Functor.Product.$w$c<_slow


==================== Asm code ====================
2018-03-16 16:11:56.016421199 UTC

.section .text
.align 8
_cg8AL:
_cg8AL:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ug8Bi
_ug8Bj:
	addq $40,%rbp
	jmp _cg8AQ
_ug8Bk:
	addq $40,%rbp
	jmp _cg8Bd
_ug8Bi:
	cmpq $2,%rbx
	jb _ug8Bk
_cg8AP:
	movq 32(%rbp),%rax
	movq $block_cg8B2_info,32(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_ppp_info,(%rbp)
	movq 24(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,24(%rbp)
	jmp Data.Functor.Classes.liftCompare_entry
	.size _cg8AL, .-_cg8AL


==================== Asm code ====================
2018-03-16 16:11:56.017123268 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8AL_info:
	.quad	_cg8AL
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.017812779 UTC

.section .text
.align 8
_cg8B2:
_cg8B2:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ug8Bl
_ug8Bm:
	addq $8,%rbp
	jmp _cg8AQ
_ug8Bl:
	addq $8,%rbp
	jmp _cg8Bd
	.size _cg8B2, .-_cg8B2


==================== Asm code ====================
2018-03-16 16:11:56.018413002 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8B2_info:
	.quad	_cg8B2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.01901463 UTC

.section .text
.align 8
_cg8Bd:
_cg8Bd:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cg8Bd, .-_cg8Bd


==================== Asm code ====================
2018-03-16 16:11:56.019662811 UTC

.section .text
.align 8
_cg8AQ:
_cg8AQ:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cg8AQ, .-_cg8AQ


==================== Asm code ====================
2018-03-16 16:11:56.023677921 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$c<_closure
.type Data.Functor.Product.$fOrdProduct_$c<_closure, @object
Data.Functor.Product.$fOrdProduct_$c<_closure:
	.quad	Data.Functor.Product.$fOrdProduct_$c<_info


==================== Asm code ====================
2018-03-16 16:11:56.02446037 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrdProduct_$c<_entry
.type Data.Functor.Product.$fOrdProduct_$c<_entry, @object
Data.Functor.Product.$fOrdProduct_$c<_entry:
_cg8C0:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8C4
_cg8C5:
	movq $block_cg8BX_info,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg8BX
_cg8BY:
	movq (%rbx),%rax
	jmp *(%rax)
_cg8C4:
	movl $Data.Functor.Product.$fOrdProduct_$c<_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrdProduct_$c<_entry, .-Data.Functor.Product.$fOrdProduct_$c<_entry


==================== Asm code ====================
2018-03-16 16:11:56.025131356 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$c<_info
.type Data.Functor.Product.$fOrdProduct_$c<_info, @object
Data.Functor.Product.$fOrdProduct_$c<_info:
	.quad	Data.Functor.Product.$fOrdProduct_$c<_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:11:56.025937131 UTC

.section .text
.align 8
_cg8BX:
_cg8BX:
	movq $block_cg8C3_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cg8C3
_cg8C7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg8BX, .-_cg8BX


==================== Asm code ====================
2018-03-16 16:11:56.026632401 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8BX_info:
	.quad	_cg8BX
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.027348608 UTC

.section .text
.align 8
_cg8C3:
_cg8C3:
	movq 8(%rbp),%r9
	movq 40(%rbp),%r8
	movq 32(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$c<_entry
	.size _cg8C3, .-_cg8C3


==================== Asm code ====================
2018-03-16 16:11:56.027959917 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8C3_info:
	.quad	_cg8C3
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.033916119 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$c>=_closure
.type Data.Functor.Product.$w$c>=_closure, @object
Data.Functor.Product.$w$c>=_closure:
	.quad	Data.Functor.Product.$w$c>=_info


==================== Asm code ====================
2018-03-16 16:11:56.034605172 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$c>=_slow
.type Data.Functor.Product.$w$c>=_slow, @object
Data.Functor.Product.$w$c>=_slow:
_cg8Cu:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$w$c>=_entry
	.size Data.Functor.Product.$w$c>=_slow, .-Data.Functor.Product.$w$c>=_slow


==================== Asm code ====================
2018-03-16 16:11:56.035366136 UTC

.section .text
.align 8
comp_sg5s6_entry:
_cg8CC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8CD
_cg8CE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Classes.compare_entry
_cg8CD:
	jmp *-16(%r13)
	.size comp_sg5s6_entry, .-comp_sg5s6_entry


==================== Asm code ====================
2018-03-16 16:11:56.036054693 UTC

.section .data.rel.ro
.align 8
.align 1
comp_sg5s6_info:
	.quad	comp_sg5s6_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.036989089 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$c>=_entry
.type Data.Functor.Product.$w$c>=_entry, @object
Data.Functor.Product.$w$c>=_entry:
_cg8CM:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8CN
_cg8CO:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cg8CQ
_cg8CP:
	movq $comp_sg5s6_info,-16(%r12)
	movq %rdi,(%r12)
	movq $block_cg8CF_info,-24(%rbp)
	movq $stg_ap_ppp_info,-56(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-48(%rbp)
	movq %r8,-40(%rbp)
	movq (%rbp),%rbx
	movq %rbx,-32(%rbp)
	movq %rsi,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rax,(%rbp)
	addq $-56,%rbp
	jmp Data.Functor.Classes.liftCompare_entry
_cg8CQ:
	movq $24,904(%r13)
_cg8CN:
	movl $Data.Functor.Product.$w$c>=_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$c>=_entry, .-Data.Functor.Product.$w$c>=_entry


==================== Asm code ====================
2018-03-16 16:11:56.037887165 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$c>=_info
.type Data.Functor.Product.$w$c>=_info, @object
Data.Functor.Product.$w$c>=_info:
	.quad	Data.Functor.Product.$w$c>=_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	Data.Functor.Product.$w$c>=_slow


==================== Asm code ====================
2018-03-16 16:11:56.038709043 UTC

.section .text
.align 8
_cg8CF:
_cg8CF:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ug8Dc
_ug8Dd:
	addq $40,%rbp
	jmp _cg8CK
_ug8De:
	addq $40,%rbp
	jmp _cg8D7
_ug8Dc:
	cmpq $2,%rbx
	jb _ug8De
_cg8CJ:
	movq 32(%rbp),%rax
	movq $block_cg8CW_info,32(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_ppp_info,(%rbp)
	movq 24(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,24(%rbp)
	jmp Data.Functor.Classes.liftCompare_entry
	.size _cg8CF, .-_cg8CF


==================== Asm code ====================
2018-03-16 16:11:56.039430072 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8CF_info:
	.quad	_cg8CF
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.040142867 UTC

.section .text
.align 8
_cg8CW:
_cg8CW:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ug8Df
_ug8Dg:
	addq $8,%rbp
	jmp _cg8CK
_ug8Df:
	addq $8,%rbp
	jmp _cg8D7
	.size _cg8CW, .-_cg8CW


==================== Asm code ====================
2018-03-16 16:11:56.040797539 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8CW_info:
	.quad	_cg8CW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.041563585 UTC

.section .text
.align 8
_cg8D7:
_cg8D7:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cg8D7, .-_cg8D7


==================== Asm code ====================
2018-03-16 16:11:56.042223174 UTC

.section .text
.align 8
_cg8CK:
_cg8CK:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cg8CK, .-_cg8CK


==================== Asm code ====================
2018-03-16 16:11:56.046621144 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$c>=_closure
.type Data.Functor.Product.$fOrdProduct_$c>=_closure, @object
Data.Functor.Product.$fOrdProduct_$c>=_closure:
	.quad	Data.Functor.Product.$fOrdProduct_$c>=_info


==================== Asm code ====================
2018-03-16 16:11:56.047382263 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrdProduct_$c>=_entry
.type Data.Functor.Product.$fOrdProduct_$c>=_entry, @object
Data.Functor.Product.$fOrdProduct_$c>=_entry:
_cg8DU:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8DY
_cg8DZ:
	movq $block_cg8DR_info,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg8DR
_cg8DS:
	movq (%rbx),%rax
	jmp *(%rax)
_cg8DY:
	movl $Data.Functor.Product.$fOrdProduct_$c>=_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrdProduct_$c>=_entry, .-Data.Functor.Product.$fOrdProduct_$c>=_entry


==================== Asm code ====================
2018-03-16 16:11:56.048131695 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$c>=_info
.type Data.Functor.Product.$fOrdProduct_$c>=_info, @object
Data.Functor.Product.$fOrdProduct_$c>=_info:
	.quad	Data.Functor.Product.$fOrdProduct_$c>=_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:11:56.048831233 UTC

.section .text
.align 8
_cg8DR:
_cg8DR:
	movq $block_cg8DX_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cg8DX
_cg8E1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg8DR, .-_cg8DR


==================== Asm code ====================
2018-03-16 16:11:56.049764079 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8DR_info:
	.quad	_cg8DR
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.050463264 UTC

.section .text
.align 8
_cg8DX:
_cg8DX:
	movq 8(%rbp),%r9
	movq 40(%rbp),%r8
	movq 32(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$c>=_entry
	.size _cg8DX, .-_cg8DX


==================== Asm code ====================
2018-03-16 16:11:56.051097571 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8DX_info:
	.quad	_cg8DX
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.056781892 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$c>_closure
.type Data.Functor.Product.$w$c>_closure, @object
Data.Functor.Product.$w$c>_closure:
	.quad	Data.Functor.Product.$w$c>_info


==================== Asm code ====================
2018-03-16 16:11:56.057558947 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$c>_slow
.type Data.Functor.Product.$w$c>_slow, @object
Data.Functor.Product.$w$c>_slow:
_cg8Eo:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$w$c>_entry
	.size Data.Functor.Product.$w$c>_slow, .-Data.Functor.Product.$w$c>_slow


==================== Asm code ====================
2018-03-16 16:11:56.05832489 UTC

.section .text
.align 8
comp_sg5sr_entry:
_cg8Ew:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Ex
_cg8Ey:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Classes.compare_entry
_cg8Ex:
	jmp *-16(%r13)
	.size comp_sg5sr_entry, .-comp_sg5sr_entry


==================== Asm code ====================
2018-03-16 16:11:56.058975298 UTC

.section .data.rel.ro
.align 8
.align 1
comp_sg5sr_info:
	.quad	comp_sg5sr_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.059842091 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$c>_entry
.type Data.Functor.Product.$w$c>_entry, @object
Data.Functor.Product.$w$c>_entry:
_cg8EG:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8EH
_cg8EI:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cg8EK
_cg8EJ:
	movq $comp_sg5sr_info,-16(%r12)
	movq %rdi,(%r12)
	movq $block_cg8Ez_info,-24(%rbp)
	movq $stg_ap_ppp_info,-56(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-48(%rbp)
	movq %r8,-40(%rbp)
	movq (%rbp),%rbx
	movq %rbx,-32(%rbp)
	movq %rsi,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rax,(%rbp)
	addq $-56,%rbp
	jmp Data.Functor.Classes.liftCompare_entry
_cg8EK:
	movq $24,904(%r13)
_cg8EH:
	movl $Data.Functor.Product.$w$c>_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$c>_entry, .-Data.Functor.Product.$w$c>_entry


==================== Asm code ====================
2018-03-16 16:11:56.060680859 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$c>_info
.type Data.Functor.Product.$w$c>_info, @object
Data.Functor.Product.$w$c>_info:
	.quad	Data.Functor.Product.$w$c>_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	Data.Functor.Product.$w$c>_slow


==================== Asm code ====================
2018-03-16 16:11:56.061567043 UTC

.section .text
.align 8
_cg8Ez:
_cg8Ez:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ug8F6
_ug8F7:
	addq $40,%rbp
	jmp _cg8EE
_ug8F8:
	addq $40,%rbp
	jmp _cg8EX
_ug8F6:
	cmpq $2,%rbx
	jb _ug8F8
_cg8ED:
	movq 32(%rbp),%rax
	movq $block_cg8EQ_info,32(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_ppp_info,(%rbp)
	movq 24(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,24(%rbp)
	jmp Data.Functor.Classes.liftCompare_entry
	.size _cg8Ez, .-_cg8Ez


==================== Asm code ====================
2018-03-16 16:11:56.062286881 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8Ez_info:
	.quad	_cg8Ez
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.06296425 UTC

.section .text
.align 8
_cg8EQ:
_cg8EQ:
	andl $7,%ebx
	cmpq $3,%rbx
	je _ug8F9
_ug8Fa:
	addq $8,%rbp
	jmp _cg8EX
_ug8F9:
	addq $8,%rbp
	jmp _cg8EE
	.size _cg8EQ, .-_cg8EQ


==================== Asm code ====================
2018-03-16 16:11:56.06353274 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8EQ_info:
	.quad	_cg8EQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.064210247 UTC

.section .text
.align 8
_cg8EX:
_cg8EX:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cg8EX, .-_cg8EX


==================== Asm code ====================
2018-03-16 16:11:56.064937956 UTC

.section .text
.align 8
_cg8EE:
_cg8EE:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cg8EE, .-_cg8EE


==================== Asm code ====================
2018-03-16 16:11:56.069525887 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$c>_closure
.type Data.Functor.Product.$fOrdProduct_$c>_closure, @object
Data.Functor.Product.$fOrdProduct_$c>_closure:
	.quad	Data.Functor.Product.$fOrdProduct_$c>_info


==================== Asm code ====================
2018-03-16 16:11:56.070421801 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrdProduct_$c>_entry
.type Data.Functor.Product.$fOrdProduct_$c>_entry, @object
Data.Functor.Product.$fOrdProduct_$c>_entry:
_cg8FO:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8FS
_cg8FT:
	movq $block_cg8FL_info,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg8FL
_cg8FM:
	movq (%rbx),%rax
	jmp *(%rax)
_cg8FS:
	movl $Data.Functor.Product.$fOrdProduct_$c>_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrdProduct_$c>_entry, .-Data.Functor.Product.$fOrdProduct_$c>_entry


==================== Asm code ====================
2018-03-16 16:11:56.071674866 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$c>_info
.type Data.Functor.Product.$fOrdProduct_$c>_info, @object
Data.Functor.Product.$fOrdProduct_$c>_info:
	.quad	Data.Functor.Product.$fOrdProduct_$c>_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:11:56.072422114 UTC

.section .text
.align 8
_cg8FL:
_cg8FL:
	movq $block_cg8FR_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cg8FR
_cg8FV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg8FL, .-_cg8FL


==================== Asm code ====================
2018-03-16 16:11:56.073072094 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8FL_info:
	.quad	_cg8FL
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.073764962 UTC

.section .text
.align 8
_cg8FR:
_cg8FR:
	movq 8(%rbp),%r9
	movq 40(%rbp),%r8
	movq 32(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$c>_entry
	.size _cg8FR, .-_cg8FR


==================== Asm code ====================
2018-03-16 16:11:56.074400839 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8FR_info:
	.quad	_cg8FR
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.082888561 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$c<=_closure
.type Data.Functor.Product.$w$c<=_closure, @object
Data.Functor.Product.$w$c<=_closure:
	.quad	Data.Functor.Product.$w$c<=_info


==================== Asm code ====================
2018-03-16 16:11:56.08395472 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$c<=_slow
.type Data.Functor.Product.$w$c<=_slow, @object
Data.Functor.Product.$w$c<=_slow:
_cg8Gi:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$w$c<=_entry
	.size Data.Functor.Product.$w$c<=_slow, .-Data.Functor.Product.$w$c<=_slow


==================== Asm code ====================
2018-03-16 16:11:56.085052299 UTC

.section .text
.align 8
comp_sg5sM_entry:
_cg8Gq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Gr
_cg8Gs:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Classes.compare_entry
_cg8Gr:
	jmp *-16(%r13)
	.size comp_sg5sM_entry, .-comp_sg5sM_entry


==================== Asm code ====================
2018-03-16 16:11:56.08600252 UTC

.section .data.rel.ro
.align 8
.align 1
comp_sg5sM_info:
	.quad	comp_sg5sM_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.08686247 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$c<=_entry
.type Data.Functor.Product.$w$c<=_entry, @object
Data.Functor.Product.$w$c<=_entry:
_cg8GA:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8GB
_cg8GC:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cg8GE
_cg8GD:
	movq $comp_sg5sM_info,-16(%r12)
	movq %rdi,(%r12)
	movq $block_cg8Gt_info,-24(%rbp)
	movq $stg_ap_ppp_info,-56(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-48(%rbp)
	movq %r8,-40(%rbp)
	movq (%rbp),%rbx
	movq %rbx,-32(%rbp)
	movq %rsi,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rax,(%rbp)
	addq $-56,%rbp
	jmp Data.Functor.Classes.liftCompare_entry
_cg8GE:
	movq $24,904(%r13)
_cg8GB:
	movl $Data.Functor.Product.$w$c<=_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$c<=_entry, .-Data.Functor.Product.$w$c<=_entry


==================== Asm code ====================
2018-03-16 16:11:56.087645578 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$c<=_info
.type Data.Functor.Product.$w$c<=_info, @object
Data.Functor.Product.$w$c<=_info:
	.quad	Data.Functor.Product.$w$c<=_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	Data.Functor.Product.$w$c<=_slow


==================== Asm code ====================
2018-03-16 16:11:56.088456067 UTC

.section .text
.align 8
_cg8Gt:
_cg8Gt:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ug8H0
_ug8H1:
	addq $40,%rbp
	jmp _cg8Gy
_ug8H2:
	addq $40,%rbp
	jmp _cg8GR
_ug8H0:
	cmpq $2,%rbx
	jb _ug8H2
_cg8Gx:
	movq 32(%rbp),%rax
	movq $block_cg8GK_info,32(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_ppp_info,(%rbp)
	movq 24(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,24(%rbp)
	jmp Data.Functor.Classes.liftCompare_entry
	.size _cg8Gt, .-_cg8Gt


==================== Asm code ====================
2018-03-16 16:11:56.089142997 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8Gt_info:
	.quad	_cg8Gt
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.089911357 UTC

.section .text
.align 8
_cg8GK:
_cg8GK:
	andl $7,%ebx
	cmpq $3,%rbx
	je _ug8H3
_ug8H4:
	addq $8,%rbp
	jmp _cg8GR
_ug8H3:
	addq $8,%rbp
	jmp _cg8Gy
	.size _cg8GK, .-_cg8GK


==================== Asm code ====================
2018-03-16 16:11:56.090486114 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8GK_info:
	.quad	_cg8GK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.091143737 UTC

.section .text
.align 8
_cg8GR:
_cg8GR:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cg8GR, .-_cg8GR


==================== Asm code ====================
2018-03-16 16:11:56.091806454 UTC

.section .text
.align 8
_cg8Gy:
_cg8Gy:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cg8Gy, .-_cg8Gy


==================== Asm code ====================
2018-03-16 16:11:56.095903902 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$c<=_closure
.type Data.Functor.Product.$fOrdProduct_$c<=_closure, @object
Data.Functor.Product.$fOrdProduct_$c<=_closure:
	.quad	Data.Functor.Product.$fOrdProduct_$c<=_info


==================== Asm code ====================
2018-03-16 16:11:56.096746667 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrdProduct_$c<=_entry
.type Data.Functor.Product.$fOrdProduct_$c<=_entry, @object
Data.Functor.Product.$fOrdProduct_$c<=_entry:
_cg8HI:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8HM
_cg8HN:
	movq $block_cg8HF_info,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg8HF
_cg8HG:
	movq (%rbx),%rax
	jmp *(%rax)
_cg8HM:
	movl $Data.Functor.Product.$fOrdProduct_$c<=_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrdProduct_$c<=_entry, .-Data.Functor.Product.$fOrdProduct_$c<=_entry


==================== Asm code ====================
2018-03-16 16:11:56.097552521 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$c<=_info
.type Data.Functor.Product.$fOrdProduct_$c<=_info, @object
Data.Functor.Product.$fOrdProduct_$c<=_info:
	.quad	Data.Functor.Product.$fOrdProduct_$c<=_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:11:56.098318469 UTC

.section .text
.align 8
_cg8HF:
_cg8HF:
	movq $block_cg8HL_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cg8HL
_cg8HP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg8HF, .-_cg8HF


==================== Asm code ====================
2018-03-16 16:11:56.099053704 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8HF_info:
	.quad	_cg8HF
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.099746943 UTC

.section .text
.align 8
_cg8HL:
_cg8HL:
	movq 8(%rbp),%r9
	movq 40(%rbp),%r8
	movq 32(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$c<=_entry
	.size _cg8HL, .-_cg8HL


==================== Asm code ====================
2018-03-16 16:11:56.100406397 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8HL_info:
	.quad	_cg8HL
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.107386497 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$cmax_closure
.type Data.Functor.Product.$fOrdProduct_$cmax_closure, @object
Data.Functor.Product.$fOrdProduct_$cmax_closure:
	.quad	Data.Functor.Product.$fOrdProduct_$cmax_info


==================== Asm code ====================
2018-03-16 16:11:56.108108695 UTC

.section .text
.align 8
comp_sg5tb_entry:
_cg8It:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Iu
_cg8Iv:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Classes.compare_entry
_cg8Iu:
	jmp *-16(%r13)
	.size comp_sg5tb_entry, .-comp_sg5tb_entry


==================== Asm code ====================
2018-03-16 16:11:56.108721244 UTC

.section .data.rel.ro
.align 8
.align 1
comp_sg5tb_info:
	.quad	comp_sg5tb_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.109776549 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrdProduct_$cmax_entry
.type Data.Functor.Product.$fOrdProduct_$cmax_entry, @object
Data.Functor.Product.$fOrdProduct_$cmax_entry:
_cg8Iw:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Ix
_cg8Iy:
	movq $block_cg8If_info,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg8If
_cg8Ig:
	movq (%rbx),%rax
	jmp *(%rax)
_cg8Ix:
	movl $Data.Functor.Product.$fOrdProduct_$cmax_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrdProduct_$cmax_entry, .-Data.Functor.Product.$fOrdProduct_$cmax_entry


==================== Asm code ====================
2018-03-16 16:11:56.110443877 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$cmax_info
.type Data.Functor.Product.$fOrdProduct_$cmax_info, @object
Data.Functor.Product.$fOrdProduct_$cmax_info:
	.quad	Data.Functor.Product.$fOrdProduct_$cmax_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:11:56.111203922 UTC

.section .text
.align 8
_cg8If:
_cg8If:
	movq $block_cg8Ik_info,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 32(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cg8Ik
_cg8Il:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg8If, .-_cg8If


==================== Asm code ====================
2018-03-16 16:11:56.111821744 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8If_info:
	.quad	_cg8If
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.112617038 UTC

.section .text
.align 8
_cg8Ik:
_cg8Ik:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cg8ID
_cg8IC:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq $comp_sg5tb_info,-16(%r12)
	movq 40(%rbp),%rdx
	movq %rdx,(%r12)
	movq $block_cg8IA_info,(%rbp)
	movq 24(%rbp),%r14
	movq $stg_ap_ppp_info,-32(%rbp)
	leaq -16(%r12),%rdx
	movq %rdx,-24(%rbp)
	movq 16(%rbp),%rsi
	movq %rsi,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rcx,16(%rbp)
	movq %rbx,24(%rbp)
	movq %rdx,40(%rbp)
	addq $-32,%rbp
	jmp Data.Functor.Classes.liftCompare_entry
_cg8ID:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg8Ik, .-_cg8Ik


==================== Asm code ====================
2018-03-16 16:11:56.11363884 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8Ik_info:
	.quad	_cg8Ik
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.114406655 UTC

.section .text
.align 8
_cg8IA:
_cg8IA:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ug8J5
_ug8J6:
	addq $48,%rbp
	jmp _cg8J2
_ug8J7:
	addq $24,%rbp
	jmp _cg8IU
_ug8J5:
	cmpq $2,%rbx
	jb _ug8J7
_cg8IO:
	movq 16(%rbp),%rax
	movq $block_cg8IM_info,16(%rbp)
	movq 32(%rbp),%r14
	movq $stg_ap_ppp_info,-16(%rbp)
	movq 40(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq 8(%rbp),%rbx
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	addq $-16,%rbp
	jmp Data.Functor.Classes.liftCompare_entry
	.size _cg8IA, .-_cg8IA


==================== Asm code ====================
2018-03-16 16:11:56.115122621 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8IA_info:
	.quad	_cg8IA
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.11574643 UTC

.section .text
.align 8
_cg8IM:
_cg8IM:
	andl $7,%ebx
	cmpq $3,%rbx
	je _ug8J8
_ug8J9:
	addq $8,%rbp
	jmp _cg8IU
_ug8J8:
	addq $32,%rbp
	jmp _cg8J2
	.size _cg8IM, .-_cg8IM


==================== Asm code ====================
2018-03-16 16:11:56.11636453 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8IM_info:
	.quad	_cg8IM
	.quad	388
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.117000557 UTC

.section .text
.align 8
_cg8IU:
_cg8IU:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg8IU, .-_cg8IU


==================== Asm code ====================
2018-03-16 16:11:56.117787425 UTC

.section .text
.align 8
_cg8J2:
_cg8J2:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg8J2, .-_cg8J2


==================== Asm code ====================
2018-03-16 16:11:56.124757116 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$cmin_closure
.type Data.Functor.Product.$fOrdProduct_$cmin_closure, @object
Data.Functor.Product.$fOrdProduct_$cmin_closure:
	.quad	Data.Functor.Product.$fOrdProduct_$cmin_info


==================== Asm code ====================
2018-03-16 16:11:56.125589627 UTC

.section .text
.align 8
comp_sg5tp_entry:
_cg8Ka:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Kb
_cg8Kc:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Classes.compare_entry
_cg8Kb:
	jmp *-16(%r13)
	.size comp_sg5tp_entry, .-comp_sg5tp_entry


==================== Asm code ====================
2018-03-16 16:11:56.126294875 UTC

.section .data.rel.ro
.align 8
.align 1
comp_sg5tp_info:
	.quad	comp_sg5tp_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.127048032 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrdProduct_$cmin_entry
.type Data.Functor.Product.$fOrdProduct_$cmin_entry, @object
Data.Functor.Product.$fOrdProduct_$cmin_entry:
_cg8Kd:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Ke
_cg8Kf:
	movq $block_cg8JW_info,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg8JW
_cg8JX:
	movq (%rbx),%rax
	jmp *(%rax)
_cg8Ke:
	movl $Data.Functor.Product.$fOrdProduct_$cmin_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrdProduct_$cmin_entry, .-Data.Functor.Product.$fOrdProduct_$cmin_entry


==================== Asm code ====================
2018-03-16 16:11:56.127808846 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$cmin_info
.type Data.Functor.Product.$fOrdProduct_$cmin_info, @object
Data.Functor.Product.$fOrdProduct_$cmin_info:
	.quad	Data.Functor.Product.$fOrdProduct_$cmin_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:11:56.12859682 UTC

.section .text
.align 8
_cg8JW:
_cg8JW:
	movq $block_cg8K1_info,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 32(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cg8K1
_cg8K2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg8JW, .-_cg8JW


==================== Asm code ====================
2018-03-16 16:11:56.129269099 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8JW_info:
	.quad	_cg8JW
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.130147779 UTC

.section .text
.align 8
_cg8K1:
_cg8K1:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cg8Kk
_cg8Kj:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq $comp_sg5tp_info,-16(%r12)
	movq 40(%rbp),%rdx
	movq %rdx,(%r12)
	movq $block_cg8Kh_info,(%rbp)
	movq 24(%rbp),%r14
	movq $stg_ap_ppp_info,-32(%rbp)
	leaq -16(%r12),%rdx
	movq %rdx,-24(%rbp)
	movq 16(%rbp),%rsi
	movq %rsi,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rcx,16(%rbp)
	movq %rbx,24(%rbp)
	movq %rdx,40(%rbp)
	addq $-32,%rbp
	jmp Data.Functor.Classes.liftCompare_entry
_cg8Kk:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg8K1, .-_cg8K1


==================== Asm code ====================
2018-03-16 16:11:56.130864949 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8K1_info:
	.quad	_cg8K1
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.132216729 UTC

.section .text
.align 8
_cg8Kh:
_cg8Kh:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ug8KM
_ug8KN:
	addq $24,%rbp
	jmp _cg8KJ
_ug8KO:
	addq $48,%rbp
	jmp _cg8KB
_ug8KM:
	cmpq $2,%rbx
	jb _ug8KO
_cg8Kv:
	movq 16(%rbp),%rax
	movq $block_cg8Kt_info,16(%rbp)
	movq 32(%rbp),%r14
	movq $stg_ap_ppp_info,-16(%rbp)
	movq 40(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq 8(%rbp),%rbx
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	addq $-16,%rbp
	jmp Data.Functor.Classes.liftCompare_entry
	.size _cg8Kh, .-_cg8Kh


==================== Asm code ====================
2018-03-16 16:11:56.132940845 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8Kh_info:
	.quad	_cg8Kh
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.133703498 UTC

.section .text
.align 8
_cg8Kt:
_cg8Kt:
	andl $7,%ebx
	cmpq $3,%rbx
	je _ug8KP
_ug8KQ:
	addq $32,%rbp
	jmp _cg8KB
_ug8KP:
	addq $8,%rbp
	jmp _cg8KJ
	.size _cg8Kt, .-_cg8Kt


==================== Asm code ====================
2018-03-16 16:11:56.134295338 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8Kt_info:
	.quad	_cg8Kt
	.quad	388
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.134966783 UTC

.section .text
.align 8
_cg8KB:
_cg8KB:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg8KB, .-_cg8KB


==================== Asm code ====================
2018-03-16 16:11:56.135582436 UTC

.section .text
.align 8
_cg8KJ:
_cg8KJ:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg8KJ, .-_cg8KJ


==================== Asm code ====================
2018-03-16 16:11:56.143825578 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_closure
.type Data.Functor.Product.$fOrdProduct_closure, @object
Data.Functor.Product.$fOrdProduct_closure:
	.quad	Data.Functor.Product.$fOrdProduct_info


==================== Asm code ====================
2018-03-16 16:11:56.144525761 UTC

.section .text
.align 8
sat_sg5tC_entry:
_cg8LI:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fOrdProduct_$cmin_entry
	.size sat_sg5tC_entry, .-sat_sg5tC_entry


==================== Asm code ====================
2018-03-16 16:11:56.145141223 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5tC_info:
	.quad	sat_sg5tC_entry
	.quad	3
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.145849782 UTC

.section .text
.align 8
sat_sg5tB_entry:
_cg8LQ:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fOrdProduct_$cmax_entry
	.size sat_sg5tB_entry, .-sat_sg5tB_entry


==================== Asm code ====================
2018-03-16 16:11:56.146465129 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5tB_info:
	.quad	sat_sg5tB_entry
	.quad	3
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.147143058 UTC

.section .text
.align 8
sat_sg5tA_entry:
_cg8LY:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fOrdProduct_$c>=_entry
	.size sat_sg5tA_entry, .-sat_sg5tA_entry


==================== Asm code ====================
2018-03-16 16:11:56.147794468 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5tA_info:
	.quad	sat_sg5tA_entry
	.quad	3
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.148484997 UTC

.section .text
.align 8
sat_sg5tz_entry:
_cg8M6:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fOrdProduct_$c>_entry
	.size sat_sg5tz_entry, .-sat_sg5tz_entry


==================== Asm code ====================
2018-03-16 16:11:56.149090543 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5tz_info:
	.quad	sat_sg5tz_entry
	.quad	3
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.150208801 UTC

.section .text
.align 8
sat_sg5ty_entry:
_cg8Me:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fOrdProduct_$c<=_entry
	.size sat_sg5ty_entry, .-sat_sg5ty_entry


==================== Asm code ====================
2018-03-16 16:11:56.150838717 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5ty_info:
	.quad	sat_sg5ty_entry
	.quad	3
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.151529173 UTC

.section .text
.align 8
sat_sg5tx_entry:
_cg8Mm:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fOrdProduct_$c<_entry
	.size sat_sg5tx_entry, .-sat_sg5tx_entry


==================== Asm code ====================
2018-03-16 16:11:56.152175 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5tx_info:
	.quad	sat_sg5tx_entry
	.quad	3
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.15277965 UTC

.section .text
.align 8
sat_sg5tw_entry:
_cg8Mu:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fOrdProduct_$ccompare_entry
	.size sat_sg5tw_entry, .-sat_sg5tw_entry


==================== Asm code ====================
2018-03-16 16:11:56.153516313 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5tw_info:
	.quad	sat_sg5tw_entry
	.quad	3
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.154300466 UTC

.section .text
.align 8
sat_sg5tv_entry:
_cg8MB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8MC
_cg8MD:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fOrdProduct_$cp1Ord_entry
_cg8MC:
	jmp *-16(%r13)
	.size sat_sg5tv_entry, .-sat_sg5tv_entry


==================== Asm code ====================
2018-03-16 16:11:56.155037699 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5tv_info:
	.quad	sat_sg5tv_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.156074391 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrdProduct_entry
.type Data.Functor.Product.$fOrdProduct_entry, @object
Data.Functor.Product.$fOrdProduct_entry:
_cg8MF:
	addq $336,%r12
	cmpq 856(%r13),%r12
	ja _cg8MJ
_cg8MI:
	movq $sat_sg5tC_info,-328(%r12)
	movq %r14,-320(%r12)
	movq %rsi,-312(%r12)
	movq %rdi,-304(%r12)
	movq $sat_sg5tB_info,-296(%r12)
	movq %r14,-288(%r12)
	movq %rsi,-280(%r12)
	movq %rdi,-272(%r12)
	movq $sat_sg5tA_info,-264(%r12)
	movq %r14,-256(%r12)
	movq %rsi,-248(%r12)
	movq %rdi,-240(%r12)
	movq $sat_sg5tz_info,-232(%r12)
	movq %r14,-224(%r12)
	movq %rsi,-216(%r12)
	movq %rdi,-208(%r12)
	movq $sat_sg5ty_info,-200(%r12)
	movq %r14,-192(%r12)
	movq %rsi,-184(%r12)
	movq %rdi,-176(%r12)
	movq $sat_sg5tx_info,-168(%r12)
	movq %r14,-160(%r12)
	movq %rsi,-152(%r12)
	movq %rdi,-144(%r12)
	movq $sat_sg5tw_info,-136(%r12)
	movq %r14,-128(%r12)
	movq %rsi,-120(%r12)
	movq %rdi,-112(%r12)
	movq $sat_sg5tv_info,-104(%r12)
	movq %r14,-88(%r12)
	movq %rsi,-80(%r12)
	movq %rdi,-72(%r12)
	movq $GHC.Classes.C:Ord_con_info,-64(%r12)
	leaq -104(%r12),%rax
	movq %rax,-56(%r12)
	leaq -134(%r12),%rax
	movq %rax,-48(%r12)
	leaq -166(%r12),%rax
	movq %rax,-40(%r12)
	leaq -198(%r12),%rax
	movq %rax,-32(%r12)
	leaq -230(%r12),%rax
	movq %rax,-24(%r12)
	leaq -262(%r12),%rax
	movq %rax,-16(%r12)
	leaq -294(%r12),%rax
	movq %rax,-8(%r12)
	leaq -326(%r12),%rax
	movq %rax,(%r12)
	leaq -63(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg8MJ:
	movq $336,904(%r13)
	movl $Data.Functor.Product.$fOrdProduct_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrdProduct_entry, .-Data.Functor.Product.$fOrdProduct_entry


==================== Asm code ====================
2018-03-16 16:11:56.157115848 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_info
.type Data.Functor.Product.$fOrdProduct_info, @object
Data.Functor.Product.$fOrdProduct_info:
	.quad	Data.Functor.Product.$fOrdProduct_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:56.161872874 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fReadProduct_$creadPrec_closure
.type Data.Functor.Product.$fReadProduct_$creadPrec_closure, @object
Data.Functor.Product.$fReadProduct_$creadPrec_closure:
	.quad	Data.Functor.Product.$fReadProduct_$creadPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.162624596 UTC

.section .text
.align 8
sat_sg5tH_entry:
_cg8Nu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Nv
_cg8Nw:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Read.readListPrec_entry
_cg8Nv:
	jmp *-16(%r13)
	.size sat_sg5tH_entry, .-sat_sg5tH_entry


==================== Asm code ====================
2018-03-16 16:11:56.163267752 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5tH_info:
	.quad	sat_sg5tH_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.163953786 UTC

.section .text
.align 8
sat_sg5tG_entry:
_cg8NB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8NC
_cg8ND:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Read.readPrec_entry
_cg8NC:
	jmp *-16(%r13)
	.size sat_sg5tG_entry, .-sat_sg5tG_entry


==================== Asm code ====================
2018-03-16 16:11:56.164597226 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5tG_info:
	.quad	sat_sg5tG_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.165413308 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fReadProduct_$creadPrec_entry
.type Data.Functor.Product.$fReadProduct_$creadPrec_entry, @object
Data.Functor.Product.$fReadProduct_$creadPrec_entry:
_cg8NE:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cg8NI
_cg8NH:
	movq $sat_sg5tH_info,-40(%r12)
	movq %rdi,-24(%r12)
	movq $sat_sg5tG_info,-16(%r12)
	movq %rdi,(%r12)
	leaq -40(%r12),%r8
	leaq -16(%r12),%rdi
	jmp Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry
_cg8NI:
	movq $48,904(%r13)
	movl $Data.Functor.Product.$fReadProduct_$creadPrec_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fReadProduct_$creadPrec_entry, .-Data.Functor.Product.$fReadProduct_$creadPrec_entry


==================== Asm code ====================
2018-03-16 16:11:56.166062103 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fReadProduct_$creadPrec_info
.type Data.Functor.Product.$fReadProduct_$creadPrec_info, @object
Data.Functor.Product.$fReadProduct_$creadPrec_info:
	.quad	Data.Functor.Product.$fReadProduct_$creadPrec_entry
	.quad	0
	.quad	8800387989518
	.quad	12884901911
	.quad	Sg5Oh_srt+24


==================== Asm code ====================
2018-03-16 16:11:56.172105203 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fReadProduct_$creadsPrec_closure
.type Data.Functor.Product.$fReadProduct_$creadsPrec_closure, @object
Data.Functor.Product.$fReadProduct_$creadsPrec_closure:
	.quad	Data.Functor.Product.$fReadProduct_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.172909818 UTC

.section .text
.align 8
sat_sg5tN_entry:
_cg8O7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8O8
_cg8O9:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Read.readListPrec_entry
_cg8O8:
	jmp *-16(%r13)
	.size sat_sg5tN_entry, .-sat_sg5tN_entry


==================== Asm code ====================
2018-03-16 16:11:56.173663436 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5tN_info:
	.quad	sat_sg5tN_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.174371598 UTC

.section .text
.align 8
sat_sg5tM_entry:
_cg8Oe:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Of
_cg8Og:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Read.readPrec_entry
_cg8Of:
	jmp *-16(%r13)
	.size sat_sg5tM_entry, .-sat_sg5tM_entry


==================== Asm code ====================
2018-03-16 16:11:56.175027829 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5tM_info:
	.quad	sat_sg5tM_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.175866266 UTC

.section .text
.align 8
ds_sg5tL_entry:
_cg8Oh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Oi
_cg8Oj:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cg8Ol
_cg8Ok:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_sg5tN_info,-40(%r12)
	movq %rbx,-24(%r12)
	movq $sat_sg5tM_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -40(%r12),%r8
	leaq -16(%r12),%rdi
	movq %rcx,%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry
_cg8Ol:
	movq $48,904(%r13)
_cg8Oi:
	jmp *-16(%r13)
	.size ds_sg5tL_entry, .-ds_sg5tL_entry


==================== Asm code ====================
2018-03-16 16:11:56.176614776 UTC

.section .data.rel.ro
.align 8
.align 1
ds_sg5tL_info:
	.quad	ds_sg5tL_entry
	.quad	3
	.quad	4294967311
	.quad	Sg5Oh_srt+24


==================== Asm code ====================
2018-03-16 16:11:56.177425418 UTC

.section .text
.align 8
sat_sg5tP_entry:
_cg8Ov:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Ow
_cg8Ox:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,%esi
	movq 24(%rbx),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp stg_ap_pp_fast
_cg8Ow:
	jmp *-16(%r13)
	.size sat_sg5tP_entry, .-sat_sg5tP_entry


==================== Asm code ====================
2018-03-16 16:11:56.178118203 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5tP_info:
	.quad	sat_sg5tP_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:11:56.178903005 UTC

.section .text
.align 8
sat_sg5tQ_entry:
_cg8Oy:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cg8OC
_cg8OB:
	movq 7(%rbx),%rax
	movq $sat_sg5tP_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -24(%r12),%r14
	movl $Text.ParserCombinators.ReadP.run_closure+2,%ebx
	jmp stg_ap_p_fast
_cg8OC:
	movq $32,904(%r13)
	jmp *-8(%r13)
	.size sat_sg5tQ_entry, .-sat_sg5tQ_entry


==================== Asm code ====================
2018-03-16 16:11:56.17957766 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5tQ_info:
	.quad	sat_sg5tQ_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:56.180345954 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fReadProduct_$creadsPrec_entry
.type Data.Functor.Product.$fReadProduct_$creadsPrec_entry, @object
Data.Functor.Product.$fReadProduct_$creadsPrec_entry:
_cg8OD:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cg8OH
_cg8OG:
	movq $ds_sg5tL_info,-48(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq $sat_sg5tQ_info,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg8OH:
	movq $56,904(%r13)
	movl $Data.Functor.Product.$fReadProduct_$creadsPrec_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fReadProduct_$creadsPrec_entry, .-Data.Functor.Product.$fReadProduct_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 16:11:56.181091145 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fReadProduct_$creadsPrec_info
.type Data.Functor.Product.$fReadProduct_$creadsPrec_info, @object
Data.Functor.Product.$fReadProduct_$creadsPrec_info:
	.quad	Data.Functor.Product.$fReadProduct_$creadsPrec_entry
	.quad	0
	.quad	17596481011726
	.quad	12884901911
	.quad	Sg5Oh_srt+24


==================== Asm code ====================
2018-03-16 16:11:56.186578761 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fReadProduct_$creadListPrec_closure
.type Data.Functor.Product.$fReadProduct_$creadListPrec_closure, @object
Data.Functor.Product.$fReadProduct_$creadListPrec_closure:
	.quad	Data.Functor.Product.$fReadProduct_$creadListPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.18736527 UTC

.section .text
.align 8
sat_sg5tV_entry:
_cg8Pj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Pk
_cg8Pl:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Read.readListPrec_entry
_cg8Pk:
	jmp *-16(%r13)
	.size sat_sg5tV_entry, .-sat_sg5tV_entry


==================== Asm code ====================
2018-03-16 16:11:56.188050804 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5tV_info:
	.quad	sat_sg5tV_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.189571925 UTC

.section .text
.align 8
sat_sg5tU_entry:
_cg8Pq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Pr
_cg8Ps:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Read.readPrec_entry
_cg8Pr:
	jmp *-16(%r13)
	.size sat_sg5tU_entry, .-sat_sg5tU_entry


==================== Asm code ====================
2018-03-16 16:11:56.190197727 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5tU_info:
	.quad	sat_sg5tU_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.190976418 UTC

.section .text
.align 8
sat_sg5tW_entry:
_cg8Pt:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cg8Px
_cg8Pw:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_sg5tV_info,-40(%r12)
	movq %rbx,-24(%r12)
	movq $sat_sg5tU_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -40(%r12),%r8
	leaq -16(%r12),%rdi
	movq %rcx,%rsi
	movq %rax,%r14
	jmp Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry
_cg8Px:
	movq $48,904(%r13)
	jmp *-16(%r13)
	.size sat_sg5tW_entry, .-sat_sg5tW_entry


==================== Asm code ====================
2018-03-16 16:11:56.191695214 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5tW_info:
	.quad	sat_sg5tW_entry
	.quad	3
	.quad	4294967311
	.quad	Sg5Oh_srt+24


==================== Asm code ====================
2018-03-16 16:11:56.192458947 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fReadProduct_$creadListPrec_entry
.type Data.Functor.Product.$fReadProduct_$creadListPrec_entry, @object
Data.Functor.Product.$fReadProduct_$creadListPrec_entry:
_cg8Py:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cg8PC
_cg8PB:
	movq $sat_sg5tW_info,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -32(%r12),%r14
	jmp GHC.Read.list_entry
_cg8PC:
	movq $40,904(%r13)
	movl $Data.Functor.Product.$fReadProduct_$creadListPrec_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fReadProduct_$creadListPrec_entry, .-Data.Functor.Product.$fReadProduct_$creadListPrec_entry


==================== Asm code ====================
2018-03-16 16:11:56.193182586 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fReadProduct_$creadListPrec_info
.type Data.Functor.Product.$fReadProduct_$creadListPrec_info, @object
Data.Functor.Product.$fReadProduct_$creadListPrec_info:
	.quad	Data.Functor.Product.$fReadProduct_$creadListPrec_entry
	.quad	0
	.quad	35205846925326
	.quad	12884901911
	.quad	Sg5Oh_srt+24


==================== Asm code ====================
2018-03-16 16:11:56.196658897 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fReadProduct_$creadList_closure
.type Data.Functor.Product.$fReadProduct_$creadList_closure, @object
Data.Functor.Product.$fReadProduct_$creadList_closure:
	.quad	Data.Functor.Product.$fReadProduct_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.198585019 UTC

.section .text
.align 8
sat_sg5u0_entry:
_cg8Q0:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Q1
_cg8Q2:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq $GHC.Read.$fRead()7_closure,-32(%rbp)
	movq $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,-24(%rbp)
	addq $-40,%rbp
	jmp Data.Functor.Product.$fReadProduct_$creadListPrec_entry
_cg8Q1:
	jmp *-16(%r13)
	.size sat_sg5u0_entry, .-sat_sg5u0_entry


==================== Asm code ====================
2018-03-16 16:11:56.19927604 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5u0_info:
	.quad	sat_sg5u0_entry
	.quad	3
	.quad	4294967311
	.quad	Sg5Oh_srt+128


==================== Asm code ====================
2018-03-16 16:11:56.199990738 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fReadProduct_$creadList_entry
.type Data.Functor.Product.$fReadProduct_$creadList_entry, @object
Data.Functor.Product.$fReadProduct_$creadList_entry:
_cg8Q3:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cg8Q7
_cg8Q6:
	movq $sat_sg5u0_info,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -32(%r12),%r14
	movl $Text.ParserCombinators.ReadP.run_closure+2,%ebx
	jmp stg_ap_p_fast
_cg8Q7:
	movq $40,904(%r13)
	movl $Data.Functor.Product.$fReadProduct_$creadList_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fReadProduct_$creadList_entry, .-Data.Functor.Product.$fReadProduct_$creadList_entry


==================== Asm code ====================
2018-03-16 16:11:56.200684503 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fReadProduct_$creadList_info
.type Data.Functor.Product.$fReadProduct_$creadList_info, @object
Data.Functor.Product.$fReadProduct_$creadList_info:
	.quad	Data.Functor.Product.$fReadProduct_$creadList_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	Sg5Oh_srt+128


==================== Asm code ====================
2018-03-16 16:11:56.209372992 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fReadProduct_closure
.type Data.Functor.Product.$fReadProduct_closure, @object
Data.Functor.Product.$fReadProduct_closure:
	.quad	Data.Functor.Product.$fReadProduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.210546064 UTC

.section .text
.align 8
sat_sg5u7_entry:
_cg8Qo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Qp
_cg8Qq:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fReadProduct_$creadListPrec_entry
_cg8Qp:
	jmp *-16(%r13)
	.size sat_sg5u7_entry, .-sat_sg5u7_entry


==================== Asm code ====================
2018-03-16 16:11:56.211484563 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5u7_info:
	.quad	sat_sg5u7_entry
	.quad	3
	.quad	4294967311
	.quad	Sg5Oh_srt+128


==================== Asm code ====================
2018-03-16 16:11:56.212610373 UTC

.section .text
.align 8
sat_sg5u6_entry:
_cg8Qv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Qw
_cg8Qx:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fReadProduct_$creadPrec_entry
_cg8Qw:
	jmp *-16(%r13)
	.size sat_sg5u6_entry, .-sat_sg5u6_entry


==================== Asm code ====================
2018-03-16 16:11:56.21469291 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5u6_info:
	.quad	sat_sg5u6_entry
	.quad	3
	.quad	4294967311
	.quad	Sg5Oh_srt+112


==================== Asm code ====================
2018-03-16 16:11:56.215842724 UTC

.section .text
.align 8
sat_sg5u5_entry:
_cg8QC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8QD
_cg8QE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fReadProduct_$creadList_entry
_cg8QD:
	jmp *-16(%r13)
	.size sat_sg5u5_entry, .-sat_sg5u5_entry


==================== Asm code ====================
2018-03-16 16:11:56.21700689 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5u5_info:
	.quad	sat_sg5u5_entry
	.quad	3
	.quad	4294967311
	.quad	Sg5Oh_srt+136


==================== Asm code ====================
2018-03-16 16:11:56.218173294 UTC

.section .text
.align 8
sat_sg5u4_entry:
_cg8QJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8QK
_cg8QL:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fReadProduct_$creadsPrec_entry
_cg8QK:
	jmp *-16(%r13)
	.size sat_sg5u4_entry, .-sat_sg5u4_entry


==================== Asm code ====================
2018-03-16 16:11:56.219298521 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5u4_info:
	.quad	sat_sg5u4_entry
	.quad	3
	.quad	4294967311
	.quad	Sg5Oh_srt+120


==================== Asm code ====================
2018-03-16 16:11:56.220686469 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fReadProduct_entry
.type Data.Functor.Product.$fReadProduct_entry, @object
Data.Functor.Product.$fReadProduct_entry:
_cg8QN:
	addq $200,%r12
	cmpq 856(%r13),%r12
	ja _cg8QR
_cg8QQ:
	movq $sat_sg5u7_info,-192(%r12)
	movq %r14,-176(%r12)
	movq %rsi,-168(%r12)
	movq %rdi,-160(%r12)
	movq $sat_sg5u6_info,-152(%r12)
	movq %r14,-136(%r12)
	movq %rsi,-128(%r12)
	movq %rdi,-120(%r12)
	movq $sat_sg5u5_info,-112(%r12)
	movq %r14,-96(%r12)
	movq %rsi,-88(%r12)
	movq %rdi,-80(%r12)
	movq $sat_sg5u4_info,-72(%r12)
	movq %r14,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq $GHC.Read.C:Read_con_info,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	leaq -112(%r12),%rax
	movq %rax,-16(%r12)
	leaq -152(%r12),%rax
	movq %rax,-8(%r12)
	leaq -192(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg8QR:
	movq $200,904(%r13)
	movl $Data.Functor.Product.$fReadProduct_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fReadProduct_entry, .-Data.Functor.Product.$fReadProduct_entry


==================== Asm code ====================
2018-03-16 16:11:56.222033938 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fReadProduct_info
.type Data.Functor.Product.$fReadProduct_info, @object
Data.Functor.Product.$fReadProduct_info:
	.quad	Data.Functor.Product.$fReadProduct_entry
	.quad	0
	.quad	133143986190
	.quad	12884901911
	.quad	Sg5Oh_srt+112


==================== Asm code ====================
2018-03-16 16:11:56.232779188 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cshowsPrec_closure
.type Data.Functor.Product.$w$cshowsPrec_closure, @object
Data.Functor.Product.$w$cshowsPrec_closure:
	.quad	Data.Functor.Product.$w$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.234004884 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cshowsPrec_slow
.type Data.Functor.Product.$w$cshowsPrec_slow, @object
Data.Functor.Product.$w$cshowsPrec_slow:
_cg8Ri:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$w$cshowsPrec_entry
	.size Data.Functor.Product.$w$cshowsPrec_slow, .-Data.Functor.Product.$w$cshowsPrec_slow


==================== Asm code ====================
2018-03-16 16:11:56.235238846 UTC

.section .text
.align 8
sp_sg5ue_entry:
_cg8Rq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Rr
_cg8Rs:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Show.showsPrec_entry
_cg8Rr:
	jmp *-16(%r13)
	.size sp_sg5ue_entry, .-sp_sg5ue_entry


==================== Asm code ====================
2018-03-16 16:11:56.236278673 UTC

.section .data.rel.ro
.align 8
.align 1
sp_sg5ue_info:
	.quad	sp_sg5ue_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.237817946 UTC

.section .text
.align 8
sl_sg5uf_entry:
_cg8Rx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Ry
_cg8Rz:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Show.showList_entry
_cg8Ry:
	jmp *-16(%r13)
	.size sl_sg5uf_entry, .-sl_sg5uf_entry


==================== Asm code ====================
2018-03-16 16:11:56.238802834 UTC

.section .data.rel.ro
.align 8
.align 1
sl_sg5uf_info:
	.quad	sl_sg5uf_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.239877515 UTC

.section .text
.align 8
sat_sg5uh_entry:
_cg8RE:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8RF
_cg8RG:
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp Data.Functor.Classes.liftShowsPrec_entry
_cg8RF:
	jmp *-16(%r13)
	.size sat_sg5uh_entry, .-sat_sg5uh_entry


==================== Asm code ====================
2018-03-16 16:11:56.24089811 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5uh_info:
	.quad	sat_sg5uh_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.242012474 UTC

.section .text
.align 8
sat_sg5ug_entry:
_cg8RL:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8RM
_cg8RN:
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp Data.Functor.Classes.liftShowsPrec_entry
_cg8RM:
	jmp *-16(%r13)
	.size sat_sg5ug_entry, .-sat_sg5ug_entry


==================== Asm code ====================
2018-03-16 16:11:56.243104367 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5ug_info:
	.quad	sat_sg5ug_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.244448318 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cshowsPrec_entry
.type Data.Functor.Product.$w$cshowsPrec_entry, @object
Data.Functor.Product.$w$cshowsPrec_entry:
_cg8RO:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _cg8RS
_cg8RR:
	movq $sp_sg5ue_info,-120(%r12)
	movq %rdi,-104(%r12)
	movq $sl_sg5uf_info,-96(%r12)
	movq %rdi,-80(%r12)
	movq $sat_sg5uh_info,-72(%r12)
	movq %rsi,-56(%r12)
	leaq -120(%r12),%rax
	movq %rax,-48(%r12)
	leaq -96(%r12),%rbx
	movq %rbx,-40(%r12)
	movq $sat_sg5ug_info,-32(%r12)
	movq %r14,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movl $Data.Functor.Product.$fRead1Product2_closure,%edi
	leaq -72(%r12),%rsi
	leaq -32(%r12),%r14
	jmp Data.Functor.Classes.$wshowsBinaryWith_entry
_cg8RS:
	movq $128,904(%r13)
	movl $Data.Functor.Product.$w$cshowsPrec_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cshowsPrec_entry, .-Data.Functor.Product.$w$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:11:56.245797225 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cshowsPrec_info
.type Data.Functor.Product.$w$cshowsPrec_info, @object
Data.Functor.Product.$w$cshowsPrec_info:
	.quad	Data.Functor.Product.$w$cshowsPrec_entry
	.quad	0
	.quad	4402341478414
	.quad	25769803776
	.quad	Sg5Oh_srt+72
	.quad	518
	.quad	Data.Functor.Product.$w$cshowsPrec_slow


==================== Asm code ====================
2018-03-16 16:11:56.252452008 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fShowProduct_$cshowsPrec_closure
.type Data.Functor.Product.$fShowProduct_$cshowsPrec_closure, @object
Data.Functor.Product.$fShowProduct_$cshowsPrec_closure:
	.quad	Data.Functor.Product.$fShowProduct_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.253672164 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fShowProduct_$cshowsPrec_entry
.type Data.Functor.Product.$fShowProduct_$cshowsPrec_entry, @object
Data.Functor.Product.$fShowProduct_$cshowsPrec_entry:
_cg8Sq:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Su
_cg8Sv:
	movq $block_cg8Sn_info,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg8Sn
_cg8So:
	movq (%rbx),%rax
	jmp *(%rax)
_cg8Su:
	movl $Data.Functor.Product.$fShowProduct_$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fShowProduct_$cshowsPrec_entry, .-Data.Functor.Product.$fShowProduct_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:11:56.254771002 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fShowProduct_$cshowsPrec_info
.type Data.Functor.Product.$fShowProduct_$cshowsPrec_info, @object
Data.Functor.Product.$fShowProduct_$cshowsPrec_info:
	.quad	Data.Functor.Product.$fShowProduct_$cshowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	21474836505
	.quad	Sg5Oh_srt+152


==================== Asm code ====================
2018-03-16 16:11:56.255865803 UTC

.section .text
.align 8
_cg8Sn:
_cg8Sn:
	movq $block_cg8St_info,(%rbp)
	movq 7(%rbx),%rax
	movq 32(%rbp),%rbx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _cg8St
_cg8Sx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg8Sn, .-_cg8Sn


==================== Asm code ====================
2018-03-16 16:11:56.256854135 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8Sn_info:
	.quad	_cg8Sn
	.quad	4
	.quad	4294967326
	.quad	Sg5Oh_srt+152


==================== Asm code ====================
2018-03-16 16:11:56.25788955 UTC

.section .text
.align 8
_cg8St:
_cg8St:
	movq 7(%rbx),%r9
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cshowsPrec_entry
	.size _cg8St, .-_cg8St


==================== Asm code ====================
2018-03-16 16:11:56.258814715 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8St_info:
	.quad	_cg8St
	.quad	516
	.quad	4294967326
	.quad	Sg5Oh_srt+152


==================== Asm code ====================
2018-03-16 16:11:56.267675838 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cshow_closure
.type Data.Functor.Product.$w$cshow_closure, @object
Data.Functor.Product.$w$cshow_closure:
	.quad	Data.Functor.Product.$w$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.268487365 UTC

.section .text
.align 8
sp_sg5ux_entry:
_cg8T0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8T1
_cg8T2:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Show.showsPrec_entry
_cg8T1:
	jmp *-16(%r13)
	.size sp_sg5ux_entry, .-sp_sg5ux_entry


==================== Asm code ====================
2018-03-16 16:11:56.269196372 UTC

.section .data.rel.ro
.align 8
.align 1
sp_sg5ux_info:
	.quad	sp_sg5ux_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.270029185 UTC

.section .text
.align 8
sl_sg5uy_entry:
_cg8T7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8T8
_cg8T9:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Show.showList_entry
_cg8T8:
	jmp *-16(%r13)
	.size sl_sg5uy_entry, .-sl_sg5uy_entry


==================== Asm code ====================
2018-03-16 16:11:56.271241858 UTC

.section .data.rel.ro
.align 8
.align 1
sl_sg5uy_info:
	.quad	sl_sg5uy_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.271979359 UTC

.section .text
.align 8
sat_sg5uz_entry:
_cg8Ti:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Tj
_cg8Tk:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppppp_info,-64(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-56(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-48(%rbp)
	movq $Data.Functor.Classes.$fRead1Const1_closure,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq $GHC.Types.[]_closure+1,-24(%rbp)
	addq $-64,%rbp
	jmp Data.Functor.Classes.liftShowsPrec_entry
_cg8Tj:
	jmp *-16(%r13)
	.size sat_sg5uz_entry, .-sat_sg5uz_entry


==================== Asm code ====================
2018-03-16 16:11:56.272696694 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5uz_info:
	.quad	sat_sg5uz_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.273665522 UTC

.section .text
.align 8
sat_sg5uB_entry:
_cg8Tm:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Tn
_cg8To:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cg8Tq
_cg8Tp:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	movq $sat_sg5uz_info,-64(%r12)
	movq %rcx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $Data.Functor.Classes.showsUnaryWith1_closure,-8(%r12)
	leaq -64(%r12),%rcx
	movq %rcx,(%r12)
	movq %rax,%r14
	movq $stg_ap_ppppp_info,-64(%rbp)
	movq %rdi,-56(%rbp)
	movq %rbx,-48(%rbp)
	movq $Data.Functor.Classes.$fRead1Const1_closure,-40(%rbp)
	movq %rdx,-32(%rbp)
	leaq -14(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-64,%rbp
	jmp Data.Functor.Classes.liftShowsPrec_entry
_cg8Tq:
	movq $72,904(%r13)
_cg8Tn:
	jmp *-16(%r13)
	.size sat_sg5uB_entry, .-sat_sg5uB_entry


==================== Asm code ====================
2018-03-16 16:11:56.274528143 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5uB_info:
	.quad	sat_sg5uB_entry
	.quad	6
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.275341571 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cshow_entry
.type Data.Functor.Product.$w$cshow_entry, @object
Data.Functor.Product.$w$cshow_entry:
_cg8Ts:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cg8Tw
_cg8Tv:
	movq $sp_sg5ux_info,-128(%r12)
	movq %rdi,-112(%r12)
	movq $sl_sg5uy_info,-104(%r12)
	movq %rdi,-88(%r12)
	movq $sat_sg5uB_info,-80(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	leaq -128(%r12),%rax
	movq %rax,-32(%r12)
	leaq -104(%r12),%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $Data.Functor.Classes.showsUnaryWith1_closure,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	movl $Data.Functor.Product.$fRead1Product2_closure,%r14d
	jmp GHC.Base.++_entry
_cg8Tw:
	movq $136,904(%r13)
	movl $Data.Functor.Product.$w$cshow_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cshow_entry, .-Data.Functor.Product.$w$cshow_entry


==================== Asm code ====================
2018-03-16 16:11:56.276162353 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cshow_info
.type Data.Functor.Product.$w$cshow_info, @object
Data.Functor.Product.$w$cshow_info:
	.quad	Data.Functor.Product.$w$cshow_entry
	.quad	0
	.quad	17596481011726
	.quad	21474836505
	.quad	Sg5Oh_srt+72


==================== Asm code ====================
2018-03-16 16:11:56.279633153 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fShowProduct_$cshow_closure
.type Data.Functor.Product.$fShowProduct_$cshow_closure, @object
Data.Functor.Product.$fShowProduct_$cshow_closure:
	.quad	Data.Functor.Product.$fShowProduct_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.280480459 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fShowProduct_$cshow_entry
.type Data.Functor.Product.$fShowProduct_$cshow_entry, @object
Data.Functor.Product.$fShowProduct_$cshow_entry:
_cg8U6:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8U7
_cg8U8:
	movq $block_cg8U3_info,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cg8U3
_cg8U4:
	movq (%rbx),%rax
	jmp *(%rax)
_cg8U7:
	movl $Data.Functor.Product.$fShowProduct_$cshow_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fShowProduct_$cshow_entry, .-Data.Functor.Product.$fShowProduct_$cshow_entry


==================== Asm code ====================
2018-03-16 16:11:56.281179771 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fShowProduct_$cshow_info
.type Data.Functor.Product.$fShowProduct_$cshow_info, @object
Data.Functor.Product.$fShowProduct_$cshow_info:
	.quad	Data.Functor.Product.$fShowProduct_$cshow_entry
	.quad	0
	.quad	12884901902
	.quad	17179869208
	.quad	Sg5Oh_srt+168


==================== Asm code ====================
2018-03-16 16:11:56.281911837 UTC

.section .text
.align 8
_cg8U3:
_cg8U3:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cshow_entry
	.size _cg8U3, .-_cg8U3


==================== Asm code ====================
2018-03-16 16:11:56.282548435 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8U3_info:
	.quad	_cg8U3
	.quad	3
	.quad	4294967326
	.quad	Sg5Oh_srt+168


==================== Asm code ====================
2018-03-16 16:11:56.288053542 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fShowProduct_$cshowList_closure
.type Data.Functor.Product.$fShowProduct_$cshowList_closure, @object
Data.Functor.Product.$fShowProduct_$cshowList_closure:
	.quad	Data.Functor.Product.$fShowProduct_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.28889901 UTC

.section .text
.align 8
lvl9_sg5uP_entry:
_cg8Uu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Uv
_cg8Uw:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Show.showsPrec_entry
_cg8Uv:
	jmp *-16(%r13)
	.size lvl9_sg5uP_entry, .-lvl9_sg5uP_entry


==================== Asm code ====================
2018-03-16 16:11:56.289561225 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_sg5uP_info:
	.quad	lvl9_sg5uP_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.290260746 UTC

.section .text
.align 8
lvl10_sg5uQ_entry:
_cg8UB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8UC
_cg8UD:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Show.showList_entry
_cg8UC:
	jmp *-16(%r13)
	.size lvl10_sg5uQ_entry, .-lvl10_sg5uQ_entry


==================== Asm code ====================
2018-03-16 16:11:56.290908527 UTC

.section .data.rel.ro
.align 8
.align 1
lvl10_sg5uQ_info:
	.quad	lvl10_sg5uQ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.291756802 UTC

.section .text
.align 8
sat_sg5uV_entry:
_cg8UM:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8UN
_cg8UO:
	movq $block_cg8UJ_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg8UJ
_cg8UK:
	movq (%rbx),%rax
	jmp *(%rax)
_cg8UN:
	jmp *-8(%r13)
	.size sat_sg5uV_entry, .-sat_sg5uV_entry


==================== Asm code ====================
2018-03-16 16:11:56.292528259 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5uV_info:
	.quad	sat_sg5uV_entry
	.quad	4
	.quad	4294967304
	.quad	4294967301
	.quad	Sg5Oh_srt+80


==================== Asm code ====================
2018-03-16 16:11:56.293363931 UTC

.section .text
.align 8
_cg8UJ:
_cg8UJ:
	xorl %r9d,%r9d
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,24(%rbp)
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp Data.Functor.Product.$w$cliftShowsPrec_entry
	.size _cg8UJ, .-_cg8UJ


==================== Asm code ====================
2018-03-16 16:11:56.294084577 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8UJ_info:
	.quad	_cg8UJ
	.quad	4
	.quad	4294967326
	.quad	Sg5Oh_srt+80


==================== Asm code ====================
2018-03-16 16:11:56.294943599 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fShowProduct_$cshowList_entry
.type Data.Functor.Product.$fShowProduct_$cshowList_entry, @object
Data.Functor.Product.$fShowProduct_$cshowList_entry:
_cg8UT:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cg8UX
_cg8UW:
	movq $lvl9_sg5uP_info,-80(%r12)
	movq %rdi,-64(%r12)
	movq $lvl10_sg5uQ_info,-56(%r12)
	movq %rdi,-40(%r12)
	movq $sat_sg5uV_info,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	leaq -80(%r12),%rax
	movq %rax,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	movq %r9,%rdi
	movq %r8,%rsi
	leaq -31(%r12),%r14
	jmp GHC.Show.showList___entry
_cg8UX:
	movq $88,904(%r13)
	movl $Data.Functor.Product.$fShowProduct_$cshowList_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fShowProduct_$cshowList_entry, .-Data.Functor.Product.$fShowProduct_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:11:56.295765558 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fShowProduct_$cshowList_info
.type Data.Functor.Product.$fShowProduct_$cshowList_info, @object
Data.Functor.Product.$fShowProduct_$cshowList_info:
	.quad	Data.Functor.Product.$fShowProduct_$cshowList_entry
	.quad	0
	.quad	35188667056142
	.quad	21474836505
	.quad	Sg5Oh_srt+80


==================== Asm code ====================
2018-03-16 16:11:56.30102456 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fShowProduct_closure
.type Data.Functor.Product.$fShowProduct_closure, @object
Data.Functor.Product.$fShowProduct_closure:
	.quad	Data.Functor.Product.$fShowProduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.302028322 UTC

.section .text
.align 8
sat_sg5v1_entry:
_cg8Vv:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fShowProduct_$cshowList_entry
	.size sat_sg5v1_entry, .-sat_sg5v1_entry


==================== Asm code ====================
2018-03-16 16:11:56.302684415 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5v1_info:
	.quad	sat_sg5v1_entry
	.quad	3
	.quad	4294967304
	.quad	8589934607
	.quad	Sg5Oh_srt+184


==================== Asm code ====================
2018-03-16 16:11:56.303329584 UTC

.section .text
.align 8
sat_sg5v0_entry:
_cg8VD:
	movq %r14,%r8
	movq 23(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fShowProduct_$cshow_entry
	.size sat_sg5v0_entry, .-sat_sg5v0_entry


==================== Asm code ====================
2018-03-16 16:11:56.303944389 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5v0_info:
	.quad	sat_sg5v0_entry
	.quad	3
	.quad	4294967304
	.quad	4294967301
	.quad	Sg5Oh_srt+176


==================== Asm code ====================
2018-03-16 16:11:56.304601189 UTC

.section .text
.align 8
sat_sg5uZ_entry:
_cg8VL:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fShowProduct_$cshowsPrec_entry
	.size sat_sg5uZ_entry, .-sat_sg5uZ_entry


==================== Asm code ====================
2018-03-16 16:11:56.30522661 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5uZ_info:
	.quad	sat_sg5uZ_entry
	.quad	3
	.quad	4294967304
	.quad	8589934607
	.quad	Sg5Oh_srt+160


==================== Asm code ====================
2018-03-16 16:11:56.306131427 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fShowProduct_entry
.type Data.Functor.Product.$fShowProduct_entry, @object
Data.Functor.Product.$fShowProduct_entry:
_cg8VP:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _cg8VT
_cg8VS:
	movq $sat_sg5v1_info,-120(%r12)
	movq %r14,-112(%r12)
	movq %rsi,-104(%r12)
	movq %rdi,-96(%r12)
	movq $sat_sg5v0_info,-88(%r12)
	movq %r14,-80(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq $sat_sg5uZ_info,-56(%r12)
	movq %r14,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq $GHC.Show.C:Show_con_info,-24(%r12)
	leaq -54(%r12),%rax
	movq %rax,-16(%r12)
	leaq -87(%r12),%rax
	movq %rax,-8(%r12)
	leaq -118(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg8VT:
	movq $128,904(%r13)
	movl $Data.Functor.Product.$fShowProduct_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fShowProduct_entry, .-Data.Functor.Product.$fShowProduct_entry


==================== Asm code ====================
2018-03-16 16:11:56.306870406 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fShowProduct_info
.type Data.Functor.Product.$fShowProduct_info, @object
Data.Functor.Product.$fShowProduct_info:
	.quad	Data.Functor.Product.$fShowProduct_entry
	.quad	0
	.quad	124554051598
	.quad	12884901911
	.quad	Sg5Oh_srt+160


==================== Asm code ====================
2018-03-16 16:11:56.311807184 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFunctorProduct_$cfmap_closure
.type Data.Functor.Product.$fFunctorProduct_$cfmap_closure, @object
Data.Functor.Product.$fFunctorProduct_$cfmap_closure:
	.quad	Data.Functor.Product.$fFunctorProduct_$cfmap_info


==================== Asm code ====================
2018-03-16 16:11:56.312608399 UTC

.section .text
.align 8
sat_sg5va_entry:
_cg8Wo:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Wp
_cg8Wq:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.fmap_entry
_cg8Wp:
	jmp *-16(%r13)
	.size sat_sg5va_entry, .-sat_sg5va_entry


==================== Asm code ====================
2018-03-16 16:11:56.31373735 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5va_info:
	.quad	sat_sg5va_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.314509208 UTC

.section .text
.align 8
sat_sg5v9_entry:
_cg8Wv:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Ww
_cg8Wx:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.fmap_entry
_cg8Ww:
	jmp *-16(%r13)
	.size sat_sg5v9_entry, .-sat_sg5v9_entry


==================== Asm code ====================
2018-03-16 16:11:56.315183088 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5v9_info:
	.quad	sat_sg5v9_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.31595019 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFunctorProduct_$cfmap_entry
.type Data.Functor.Product.$fFunctorProduct_$cfmap_entry, @object
Data.Functor.Product.$fFunctorProduct_$cfmap_entry:
_cg8Wy:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8WA
_cg8WB:
	movq $block_cg8Wf_info,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cg8Wf
_cg8Wg:
	movq (%rbx),%rax
	jmp *(%rax)
_cg8WA:
	movl $Data.Functor.Product.$fFunctorProduct_$cfmap_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFunctorProduct_$cfmap_entry, .-Data.Functor.Product.$fFunctorProduct_$cfmap_entry


==================== Asm code ====================
2018-03-16 16:11:56.316643184 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFunctorProduct_$cfmap_info
.type Data.Functor.Product.$fFunctorProduct_$cfmap_info, @object
Data.Functor.Product.$fFunctorProduct_$cfmap_info:
	.quad	Data.Functor.Product.$fFunctorProduct_$cfmap_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:11:56.317471728 UTC

.section .text
.align 8
_cg8Wf:
_cg8Wf:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cg8WE
_cg8WD:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sg5va_info,-96(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	movq $sat_sg5v9_info,-56(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg8WE:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg8Wf, .-_cg8Wf


==================== Asm code ====================
2018-03-16 16:11:56.31821834 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8Wf_info:
	.quad	_cg8Wf
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.323731105 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFunctorProduct_$c<$_closure
.type Data.Functor.Product.$fFunctorProduct_$c<$_closure, @object
Data.Functor.Product.$fFunctorProduct_$c<$_closure:
	.quad	Data.Functor.Product.$fFunctorProduct_$c<$_info


==================== Asm code ====================
2018-03-16 16:11:56.324412208 UTC

.section .text
.align 8
f1_sg5vi_entry:
_cg8Xk:
	movq 7(%rbx),%rbx
	jmp stg_ap_0_fast
	.size f1_sg5vi_entry, .-f1_sg5vi_entry


==================== Asm code ====================
2018-03-16 16:11:56.325020177 UTC

.section .data.rel.ro
.align 8
.align 1
f1_sg5vi_info:
	.quad	f1_sg5vi_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:56.325846877 UTC

.section .text
.align 8
sat_sg5vl_entry:
_cg8Xr:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Xs
_cg8Xt:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.fmap_entry
_cg8Xs:
	jmp *-16(%r13)
	.size sat_sg5vl_entry, .-sat_sg5vl_entry


==================== Asm code ====================
2018-03-16 16:11:56.326554926 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5vl_info:
	.quad	sat_sg5vl_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.327816977 UTC

.section .text
.align 8
sat_sg5vk_entry:
_cg8Xy:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Xz
_cg8XA:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.fmap_entry
_cg8Xz:
	jmp *-16(%r13)
	.size sat_sg5vk_entry, .-sat_sg5vk_entry


==================== Asm code ====================
2018-03-16 16:11:56.328494391 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5vk_info:
	.quad	sat_sg5vk_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.329584982 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFunctorProduct_$c<$_entry
.type Data.Functor.Product.$fFunctorProduct_$c<$_entry, @object
Data.Functor.Product.$fFunctorProduct_$c<$_entry:
_cg8XB:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8XD
_cg8XE:
	movq $block_cg8Xa_info,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cg8Xa
_cg8Xb:
	movq (%rbx),%rax
	jmp *(%rax)
_cg8XD:
	movl $Data.Functor.Product.$fFunctorProduct_$c<$_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFunctorProduct_$c<$_entry, .-Data.Functor.Product.$fFunctorProduct_$c<$_entry


==================== Asm code ====================
2018-03-16 16:11:56.33027797 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFunctorProduct_$c<$_info
.type Data.Functor.Product.$fFunctorProduct_$c<$_info, @object
Data.Functor.Product.$fFunctorProduct_$c<$_info:
	.quad	Data.Functor.Product.$fFunctorProduct_$c<$_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:11:56.331052522 UTC

.section .text
.align 8
_cg8Xa:
_cg8Xa:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _cg8XH
_cg8XG:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $f1_sg5vi_info,-112(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-104(%r12)
	movq $sat_sg5vl_info,-96(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-72(%r12)
	leaq -111(%r12),%rbx
	movq %rbx,-64(%r12)
	movq $sat_sg5vk_info,-56(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-40(%r12)
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg8XH:
	movq $120,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg8Xa, .-_cg8Xa


==================== Asm code ====================
2018-03-16 16:11:56.331829314 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8Xa_info:
	.quad	_cg8Xa
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.335561406 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFunctorProduct_closure
.type Data.Functor.Product.$fFunctorProduct_closure, @object
Data.Functor.Product.$fFunctorProduct_closure:
	.quad	Data.Functor.Product.$fFunctorProduct_info


==================== Asm code ====================
2018-03-16 16:11:56.336268096 UTC

.section .text
.align 8
sat_sg5vp_entry:
_cg8Ym:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fFunctorProduct_$c<$_entry
	.size sat_sg5vp_entry, .-sat_sg5vp_entry


==================== Asm code ====================
2018-03-16 16:11:56.336810759 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5vp_info:
	.quad	sat_sg5vp_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.337561955 UTC

.section .text
.align 8
sat_sg5vo_entry:
_cg8Yu:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fFunctorProduct_$cfmap_entry
	.size sat_sg5vo_entry, .-sat_sg5vo_entry


==================== Asm code ====================
2018-03-16 16:11:56.338247562 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5vo_info:
	.quad	sat_sg5vo_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.339044969 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFunctorProduct_entry
.type Data.Functor.Product.$fFunctorProduct_entry, @object
Data.Functor.Product.$fFunctorProduct_entry:
_cg8Yy:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cg8YC
_cg8YB:
	movq $sat_sg5vp_info,-64(%r12)
	movq %r14,-56(%r12)
	movq %rsi,-48(%r12)
	movq $sat_sg5vo_info,-40(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq $GHC.Base.C:Functor_con_info,-16(%r12)
	leaq -38(%r12),%rax
	movq %rax,-8(%r12)
	leaq -62(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg8YC:
	movq $72,904(%r13)
	movl $Data.Functor.Product.$fFunctorProduct_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFunctorProduct_entry, .-Data.Functor.Product.$fFunctorProduct_entry


==================== Asm code ====================
2018-03-16 16:11:56.339759172 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFunctorProduct_info
.type Data.Functor.Product.$fFunctorProduct_info, @object
Data.Functor.Product.$fFunctorProduct_info:
	.quad	Data.Functor.Product.$fFunctorProduct_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.34418766 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldMap_closure
.type Data.Functor.Product.$w$cfoldMap_closure, @object
Data.Functor.Product.$w$cfoldMap_closure:
	.quad	Data.Functor.Product.$w$cfoldMap_info


==================== Asm code ====================
2018-03-16 16:11:56.344993938 UTC

.section .text
.align 8
sat_sg5vx_entry:
_cg8YY:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8YZ
_cg8Z0:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp Data.Foldable.foldMap_entry
_cg8YZ:
	jmp *-16(%r13)
	.size sat_sg5vx_entry, .-sat_sg5vx_entry


==================== Asm code ====================
2018-03-16 16:11:56.34571183 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5vx_info:
	.quad	sat_sg5vx_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.346489362 UTC

.section .text
.align 8
sat_sg5vw_entry:
_cg8Z5:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Z6
_cg8Z7:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp Data.Foldable.foldMap_entry
_cg8Z6:
	jmp *-16(%r13)
	.size sat_sg5vw_entry, .-sat_sg5vw_entry


==================== Asm code ====================
2018-03-16 16:11:56.347215991 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5vw_info:
	.quad	sat_sg5vw_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.348174302 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cfoldMap_entry
.type Data.Functor.Product.$w$cfoldMap_entry, @object
Data.Functor.Product.$w$cfoldMap_entry:
_cg8Z8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8Z9
_cg8Za:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cg8Zc
_cg8Zb:
	movq $sat_sg5vx_info,-88(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq (%rbp),%rax
	movq %rax,-48(%r12)
	movq $sat_sg5vw_info,-40(%r12)
	movq %r14,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %r9,(%r12)
	movq %rdi,%r14
	movq $stg_ap_pp_info,-16(%rbp)
	leaq -40(%r12),%rax
	movq %rax,-8(%rbp)
	leaq -88(%r12),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.mappend_entry
_cg8Zc:
	movq $96,904(%r13)
_cg8Z9:
	movl $Data.Functor.Product.$w$cfoldMap_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cfoldMap_entry, .-Data.Functor.Product.$w$cfoldMap_entry


==================== Asm code ====================
2018-03-16 16:11:56.348995251 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldMap_info
.type Data.Functor.Product.$w$cfoldMap_info, @object
Data.Functor.Product.$w$cfoldMap_info:
	.quad	Data.Functor.Product.$w$cfoldMap_entry
	.quad	0
	.quad	14
	.quad	25769803802


==================== Asm code ====================
2018-03-16 16:11:56.352596046 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldMap_closure
.type Data.Functor.Product.$fFoldableProduct_$cfoldMap_closure, @object
Data.Functor.Product.$fFoldableProduct_$cfoldMap_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldMap_info


==================== Asm code ====================
2018-03-16 16:11:56.353867532 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cfoldMap_entry
.type Data.Functor.Product.$fFoldableProduct_$cfoldMap_entry, @object
Data.Functor.Product.$fFoldableProduct_$cfoldMap_entry:
_cg8ZG:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8ZH
_cg8ZI:
	movq $block_cg8ZD_info,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg8ZD
_cg8ZE:
	movq (%rbx),%rax
	jmp *(%rax)
_cg8ZH:
	movl $Data.Functor.Product.$fFoldableProduct_$cfoldMap_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cfoldMap_entry, .-Data.Functor.Product.$fFoldableProduct_$cfoldMap_entry


==================== Asm code ====================
2018-03-16 16:11:56.354574791 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldMap_info
.type Data.Functor.Product.$fFoldableProduct_$cfoldMap_info, @object
Data.Functor.Product.$fFoldableProduct_$cfoldMap_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldMap_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:11:56.355837849 UTC

.section .text
.align 8
_cg8ZD:
_cg8ZD:
	movq 7(%rbx),%r9
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cfoldMap_entry
	.size _cg8ZD, .-_cg8ZD


==================== Asm code ====================
2018-03-16 16:11:56.356516174 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8ZD_info:
	.quad	_cg8ZD
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.359697361 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfold_closure
.type Data.Functor.Product.$fFoldableProduct_$cfold_closure, @object
Data.Functor.Product.$fFoldableProduct_$cfold_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfold_info


==================== Asm code ====================
2018-03-16 16:11:56.360493636 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cfold_entry
.type Data.Functor.Product.$fFoldableProduct_$cfold_entry, @object
Data.Functor.Product.$fFoldableProduct_$cfold_entry:
_cg904:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cg905
_cg906:
	movq $block_cg901_info,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cg901
_cg902:
	movq (%rbx),%rax
	jmp *(%rax)
_cg905:
	movl $Data.Functor.Product.$fFoldableProduct_$cfold_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cfold_entry, .-Data.Functor.Product.$fFoldableProduct_$cfold_entry


==================== Asm code ====================
2018-03-16 16:11:56.361200245 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfold_info
.type Data.Functor.Product.$fFoldableProduct_$cfold_info, @object
Data.Functor.Product.$fFoldableProduct_$cfold_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfold_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:11:56.36192578 UTC

.section .text
.align 8
_cg901:
_cg901:
	movq 7(%rbx),%r9
	movl $GHC.Base.id_closure+1,%r8d
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,24(%rbp)
	addq $24,%rbp
	jmp Data.Functor.Product.$w$cfoldMap_entry
	.size _cg901, .-_cg901


==================== Asm code ====================
2018-03-16 16:11:56.3625953 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg901_info:
	.quad	_cg901
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.364717976 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct1_closure
.type Data.Functor.Product.$fFoldableProduct1_closure, @object
Data.Functor.Product.$fFoldableProduct1_closure:
	.quad	Data.Functor.Product.$fFoldableProduct1_info


==================== Asm code ====================
2018-03-16 16:11:56.36577857 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct1_entry
.type Data.Functor.Product.$fFoldableProduct1_entry, @object
Data.Functor.Product.$fFoldableProduct1_entry:
_cg90p:
	movq %r14,%rbx
	jmp stg_ap_0_fast
	.size Data.Functor.Product.$fFoldableProduct1_entry, .-Data.Functor.Product.$fFoldableProduct1_entry


==================== Asm code ====================
2018-03-16 16:11:56.366376714 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct1_info
.type Data.Functor.Product.$fFoldableProduct1_info, @object
Data.Functor.Product.$fFoldableProduct1_info:
	.quad	Data.Functor.Product.$fFoldableProduct1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:56.372879855 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$csum_closure
.type Data.Functor.Product.$fFoldableProduct_$csum_closure, @object
Data.Functor.Product.$fFoldableProduct_$csum_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$csum_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.37369592 UTC

.section .text
.align 8
$dMonoid_sg5vR_entry:
_cg90E:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg90F
_cg90G:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Semigroup.Internal.$fMonoidSum_entry
_cg90F:
	jmp *-16(%r13)
	.size $dMonoid_sg5vR_entry, .-$dMonoid_sg5vR_entry


==================== Asm code ====================
2018-03-16 16:11:56.374360136 UTC

.section .data.rel.ro
.align 8
.align 1
$dMonoid_sg5vR_info:
	.quad	$dMonoid_sg5vR_entry
	.quad	1
	.quad	4294967312
	.quad	Sg5Oh_srt+200


==================== Asm code ====================
2018-03-16 16:11:56.375125454 UTC

.section .text
.align 8
sat_sg5vX_entry:
_cg90V:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg90W
_cg90X:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq $Data.Functor.Product.$fFoldableProduct1_closure+1,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp Data.Foldable.foldMap_entry
_cg90W:
	jmp *-16(%r13)
	.size sat_sg5vX_entry, .-sat_sg5vX_entry


==================== Asm code ====================
2018-03-16 16:11:56.375828873 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5vX_info:
	.quad	sat_sg5vX_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.376608138 UTC

.section .text
.align 8
sat_sg5vW_entry:
_cg912:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg913
_cg914:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq $Data.Functor.Product.$fFoldableProduct1_closure+1,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp Data.Foldable.foldMap_entry
_cg913:
	jmp *-16(%r13)
	.size sat_sg5vW_entry, .-sat_sg5vW_entry


==================== Asm code ====================
2018-03-16 16:11:56.377385851 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5vW_info:
	.quad	sat_sg5vW_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.378263452 UTC

.section .text
.align 8
sat_sg5vY_entry:
_cg915:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg916
_cg917:
	movq $block_cg90M_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg90M
_cg90N:
	movq (%rbx),%rax
	jmp *(%rax)
_cg916:
	jmp *-8(%r13)
	.size sat_sg5vY_entry, .-sat_sg5vY_entry


==================== Asm code ====================
2018-03-16 16:11:56.379019433 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5vY_info:
	.quad	sat_sg5vY_entry
	.quad	4
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:56.379897437 UTC

.section .text
.align 8
_cg90M:
_cg90M:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cg91a
_cg919:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sg5vX_info,-72(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-56(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-48(%r12)
	movq %rbx,-40(%r12)
	movq $sat_sg5vW_info,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	movq 24(%rbp),%r14
	movq $stg_ap_pp_info,16(%rbp)
	leaq -32(%r12),%rax
	movq %rax,24(%rbp)
	leaq -72(%r12),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp GHC.Num.+_entry
_cg91a:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg90M, .-_cg90M


==================== Asm code ====================
2018-03-16 16:11:56.380704376 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg90M_info:
	.quad	_cg90M
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.381563256 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$csum_entry
.type Data.Functor.Product.$fFoldableProduct_$csum_entry, @object
Data.Functor.Product.$fFoldableProduct_$csum_entry:
_cg91c:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cg91g
_cg91f:
	movq $$dMonoid_sg5vR_info,-56(%r12)
	movq %rdi,-40(%r12)
	movq $sat_sg5vY_info,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg91g:
	movq $64,904(%r13)
	movl $Data.Functor.Product.$fFoldableProduct_$csum_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$csum_entry, .-Data.Functor.Product.$fFoldableProduct_$csum_entry


==================== Asm code ====================
2018-03-16 16:11:56.382385661 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$csum_info
.type Data.Functor.Product.$fFoldableProduct_$csum_info, @object
Data.Functor.Product.$fFoldableProduct_$csum_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$csum_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	Sg5Oh_srt+200


==================== Asm code ====================
2018-03-16 16:11:56.384746931 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl_rg5nW_bytes:
	.asciz "minimum: empty structure"


==================== Asm code ====================
2018-03-16 16:11:56.387906389 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct2_closure
.type Data.Functor.Product.$fFoldableProduct2_closure, @object
Data.Functor.Product.$fFoldableProduct2_closure:
	.quad	Data.Functor.Product.$fFoldableProduct2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.38886479 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct2_entry
.type Data.Functor.Product.$fFoldableProduct2_entry, @object
Data.Functor.Product.$fFoldableProduct2_entry:
_cg91Y:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cg91Z
_cg920:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cg91V
_cg91U:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_cg91W_info,-24(%rbp)
	movl $lvl_rg5nW_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_cg91Z:
	jmp *-16(%r13)
_cg91V:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Product.$fFoldableProduct2_entry, .-Data.Functor.Product.$fFoldableProduct2_entry


==================== Asm code ====================
2018-03-16 16:11:56.389844497 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct2_info
.type Data.Functor.Product.$fFoldableProduct2_info, @object
Data.Functor.Product.$fFoldableProduct2_info:
	.quad	Data.Functor.Product.$fFoldableProduct2_entry
	.quad	0
	.quad	4294967317
	.quad	Sg5Oh_srt+216


==================== Asm code ====================
2018-03-16 16:11:56.390574111 UTC

.section .text
.align 8
_cg91W:
_cg91W:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size _cg91W, .-_cg91W


==================== Asm code ====================
2018-03-16 16:11:56.391190794 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg91W_info:
	.quad	_cg91W
	.quad	0
	.quad	4294967326
	.quad	Sg5Oh_srt+216


==================== Asm code ====================
2018-03-16 16:11:56.399170133 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cminimum_closure
.type Data.Functor.Product.$fFoldableProduct_$cminimum_closure, @object
Data.Functor.Product.$fFoldableProduct_$cminimum_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cminimum_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.400032125 UTC

.section .text
.align 8
$dMonoid_sg5w3_entry:
_cg92m:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg92n
_cg92o:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Utils.$fMonoidMin_entry
_cg92n:
	jmp *-16(%r13)
	.size $dMonoid_sg5w3_entry, .-$dMonoid_sg5w3_entry


==================== Asm code ====================
2018-03-16 16:11:56.400649724 UTC

.section .data.rel.ro
.align 8
.align 1
$dMonoid_sg5w3_info:
	.quad	$dMonoid_sg5w3_entry
	.quad	1
	.quad	4294967312
	.quad	Sg5Oh_srt+224


==================== Asm code ====================
2018-03-16 16:11:56.401518224 UTC

.section .text
.align 8
sat_sg5wf_entry:
_cg92x:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cg92y
_cg92z:
	movq $block_cg92u_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg92u
_cg92v:
	movq (%rbx),%rax
	jmp *(%rax)
_cg92y:
	jmp *-8(%r13)
	.size sat_sg5wf_entry, .-sat_sg5wf_entry


==================== Asm code ====================
2018-03-16 16:11:56.402213063 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5wf_info:
	.quad	sat_sg5wf_entry
	.quad	4
	.quad	4294967304
	.quad	4294967301
	.quad	Sg5Oh_srt+232


==================== Asm code ====================
2018-03-16 16:11:56.4029449 UTC

.section .text
.align 8
_cg92u:
_cg92u:
	movq $block_cg92C_info,(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_ppp_info,-32(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-24(%rbp)
	movq $GHC.Base.Just_closure+1,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,16(%rbp)
	addq $-32,%rbp
	jmp Data.Foldable.foldMap_entry
	.size _cg92u, .-_cg92u


==================== Asm code ====================
2018-03-16 16:11:56.40362374 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg92u_info:
	.quad	_cg92u
	.quad	4
	.quad	4294967326
	.quad	Sg5Oh_srt+232


==================== Asm code ====================
2018-03-16 16:11:56.404449264 UTC

.section .text
.align 8
_cg92C:
_cg92C:
	movq 8(%rbp),%rax
	movq 32(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq %rbx,%rsi
	andl $7,%esi
	cmpq $1,%rsi
	je _cg92K
_cg92Z:
	movq $block_cg92X_info,16(%rbp)
	movq %rax,%r14
	movq $stg_ap_ppp_info,-16(%rbp)
	movq %rcx,-8(%rbp)
	movq $GHC.Base.Just_closure+1,(%rbp)
	movq %rdx,8(%rbp)
	movq 6(%rbx),%rax
	movq %rax,32(%rbp)
	addq $-16,%rbp
	jmp Data.Foldable.foldMap_entry
_cg92K:
	movq $block_cg92H_info,32(%rbp)
	movq %rax,%r14
	movq $stg_ap_ppp_info,(%rbp)
	movq %rcx,8(%rbp)
	movq $GHC.Base.Just_closure+1,16(%rbp)
	movq %rdx,24(%rbp)
	jmp Data.Foldable.foldMap_entry
	.size _cg92C, .-_cg92C


==================== Asm code ====================
2018-03-16 16:11:56.405304782 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg92C_info:
	.quad	_cg92C
	.quad	4
	.quad	4294967326
	.quad	Sg5Oh_srt+232


==================== Asm code ====================
2018-03-16 16:11:56.406090994 UTC

.section .text
.align 8
_cg92H:
_cg92H:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cg92Q
_cg92U:
	movq 6(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
_cg92Q:
	movl $Data.Functor.Product.$fFoldableProduct2_closure,%ebx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cg92H, .-_cg92H


==================== Asm code ====================
2018-03-16 16:11:56.406818355 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg92H_info:
	.quad	_cg92H
	.quad	0
	.quad	4294967326
	.quad	Sg5Oh_srt+232


==================== Asm code ====================
2018-03-16 16:11:56.407628121 UTC

.section .text
.align 8
_cg92X:
_cg92X:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ug93p
_cg93a:
	movq $block_cg938_info,(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 6(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.<=_entry
_ug93p:
	addq $16,%rbp
	jmp _cg93g
	.size _cg92X, .-_cg92X


==================== Asm code ====================
2018-03-16 16:11:56.40834179 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg92X_info:
	.quad	_cg92X
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.409131898 UTC

.section .text
.align 8
_cg938:
_cg938:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ug93q
_cg93k:
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp stg_ap_0_fast
_ug93q:
	addq $16,%rbp
	jmp _cg93g
	.size _cg938, .-_cg938


==================== Asm code ====================
2018-03-16 16:11:56.410544066 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg938_info:
	.quad	_cg938
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.411208634 UTC

.section .text
.align 8
_cg93g:
_cg93g:
	movq (%rbp),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cg93g, .-_cg93g


==================== Asm code ====================
2018-03-16 16:11:56.412080308 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cminimum_entry
.type Data.Functor.Product.$fFoldableProduct_$cminimum_entry, @object
Data.Functor.Product.$fFoldableProduct_$cminimum_entry:
_cg93u:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cg93y
_cg93x:
	movq $$dMonoid_sg5w3_info,-56(%r12)
	movq %rdi,-40(%r12)
	movq $sat_sg5wf_info,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg93y:
	movq $64,904(%r13)
	movl $Data.Functor.Product.$fFoldableProduct_$cminimum_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cminimum_entry, .-Data.Functor.Product.$fFoldableProduct_$cminimum_entry


==================== Asm code ====================
2018-03-16 16:11:56.41350151 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cminimum_info
.type Data.Functor.Product.$fFoldableProduct_$cminimum_info, @object
Data.Functor.Product.$fFoldableProduct_$cminimum_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cminimum_entry
	.quad	0
	.quad	30064771086
	.quad	12884901911
	.quad	Sg5Oh_srt+224


==================== Asm code ====================
2018-03-16 16:11:56.415305499 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl1_rg5nX_bytes:
	.asciz "maximum: empty structure"


==================== Asm code ====================
2018-03-16 16:11:56.418444632 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct3_closure
.type Data.Functor.Product.$fFoldableProduct3_closure, @object
Data.Functor.Product.$fFoldableProduct3_closure:
	.quad	Data.Functor.Product.$fFoldableProduct3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.419426925 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct3_entry
.type Data.Functor.Product.$fFoldableProduct3_entry, @object
Data.Functor.Product.$fFoldableProduct3_entry:
_cg94r:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cg94s
_cg94t:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cg94o
_cg94n:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_cg94p_info,-24(%rbp)
	movl $lvl1_rg5nX_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_cg94s:
	jmp *-16(%r13)
_cg94o:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Product.$fFoldableProduct3_entry, .-Data.Functor.Product.$fFoldableProduct3_entry


==================== Asm code ====================
2018-03-16 16:11:56.420211816 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct3_info
.type Data.Functor.Product.$fFoldableProduct3_info, @object
Data.Functor.Product.$fFoldableProduct3_info:
	.quad	Data.Functor.Product.$fFoldableProduct3_entry
	.quad	0
	.quad	4294967317
	.quad	Sg5Oh_srt+216


==================== Asm code ====================
2018-03-16 16:11:56.420923019 UTC

.section .text
.align 8
_cg94p:
_cg94p:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size _cg94p, .-_cg94p


==================== Asm code ====================
2018-03-16 16:11:56.421606087 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg94p_info:
	.quad	_cg94p
	.quad	0
	.quad	4294967326
	.quad	Sg5Oh_srt+216


==================== Asm code ====================
2018-03-16 16:11:56.429311274 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cmaximum_closure
.type Data.Functor.Product.$fFoldableProduct_$cmaximum_closure, @object
Data.Functor.Product.$fFoldableProduct_$cmaximum_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cmaximum_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.430179393 UTC

.section .text
.align 8
$dMonoid_sg5wk_entry:
_cg94P:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg94Q
_cg94R:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Utils.$fMonoidMax_entry
_cg94Q:
	jmp *-16(%r13)
	.size $dMonoid_sg5wk_entry, .-$dMonoid_sg5wk_entry


==================== Asm code ====================
2018-03-16 16:11:56.430845321 UTC

.section .data.rel.ro
.align 8
.align 1
$dMonoid_sg5wk_info:
	.quad	$dMonoid_sg5wk_entry
	.quad	1
	.quad	4294967312
	.quad	Sg5Oh_srt+248


==================== Asm code ====================
2018-03-16 16:11:56.431717235 UTC

.section .text
.align 8
sat_sg5ww_entry:
_cg950:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cg951
_cg952:
	movq $block_cg94X_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg94X
_cg94Y:
	movq (%rbx),%rax
	jmp *(%rax)
_cg951:
	jmp *-8(%r13)
	.size sat_sg5ww_entry, .-sat_sg5ww_entry


==================== Asm code ====================
2018-03-16 16:11:56.432414648 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5ww_info:
	.quad	sat_sg5ww_entry
	.quad	4
	.quad	4294967304
	.quad	4294967301
	.quad	Sg5Oh_srt+256


==================== Asm code ====================
2018-03-16 16:11:56.433143232 UTC

.section .text
.align 8
_cg94X:
_cg94X:
	movq $block_cg955_info,(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_ppp_info,-32(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-24(%rbp)
	movq $GHC.Base.Just_closure+1,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,16(%rbp)
	addq $-32,%rbp
	jmp Data.Foldable.foldMap_entry
	.size _cg94X, .-_cg94X


==================== Asm code ====================
2018-03-16 16:11:56.433879196 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg94X_info:
	.quad	_cg94X
	.quad	4
	.quad	4294967326
	.quad	Sg5Oh_srt+256


==================== Asm code ====================
2018-03-16 16:11:56.434794307 UTC

.section .text
.align 8
_cg955:
_cg955:
	movq 8(%rbp),%rax
	movq 32(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq %rbx,%rsi
	andl $7,%esi
	cmpq $1,%rsi
	je _cg95d
_cg95s:
	movq $block_cg95q_info,16(%rbp)
	movq %rax,%r14
	movq $stg_ap_ppp_info,-16(%rbp)
	movq %rcx,-8(%rbp)
	movq $GHC.Base.Just_closure+1,(%rbp)
	movq %rdx,8(%rbp)
	movq 6(%rbx),%rax
	movq %rax,32(%rbp)
	addq $-16,%rbp
	jmp Data.Foldable.foldMap_entry
_cg95d:
	movq $block_cg95a_info,32(%rbp)
	movq %rax,%r14
	movq $stg_ap_ppp_info,(%rbp)
	movq %rcx,8(%rbp)
	movq $GHC.Base.Just_closure+1,16(%rbp)
	movq %rdx,24(%rbp)
	jmp Data.Foldable.foldMap_entry
	.size _cg955, .-_cg955


==================== Asm code ====================
2018-03-16 16:11:56.435608915 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg955_info:
	.quad	_cg955
	.quad	4
	.quad	4294967326
	.quad	Sg5Oh_srt+256


==================== Asm code ====================
2018-03-16 16:11:56.436388663 UTC

.section .text
.align 8
_cg95a:
_cg95a:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cg95j
_cg95n:
	movq 6(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
_cg95j:
	movl $Data.Functor.Product.$fFoldableProduct3_closure,%ebx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cg95a, .-_cg95a


==================== Asm code ====================
2018-03-16 16:11:56.437121913 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg95a_info:
	.quad	_cg95a
	.quad	0
	.quad	4294967326
	.quad	Sg5Oh_srt+256


==================== Asm code ====================
2018-03-16 16:11:56.438302843 UTC

.section .text
.align 8
_cg95q:
_cg95q:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ug95S
_cg95D:
	movq $block_cg95B_info,(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 6(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.>=_entry
_ug95S:
	addq $16,%rbp
	jmp _cg95J
	.size _cg95q, .-_cg95q


==================== Asm code ====================
2018-03-16 16:11:56.439002306 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg95q_info:
	.quad	_cg95q
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.439774212 UTC

.section .text
.align 8
_cg95B:
_cg95B:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ug95T
_cg95N:
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp stg_ap_0_fast
_ug95T:
	addq $16,%rbp
	jmp _cg95J
	.size _cg95B, .-_cg95B


==================== Asm code ====================
2018-03-16 16:11:56.440472263 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg95B_info:
	.quad	_cg95B
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.44173173 UTC

.section .text
.align 8
_cg95J:
_cg95J:
	movq (%rbp),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cg95J, .-_cg95J


==================== Asm code ====================
2018-03-16 16:11:56.442538052 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cmaximum_entry
.type Data.Functor.Product.$fFoldableProduct_$cmaximum_entry, @object
Data.Functor.Product.$fFoldableProduct_$cmaximum_entry:
_cg95X:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cg961
_cg960:
	movq $$dMonoid_sg5wk_info,-56(%r12)
	movq %rdi,-40(%r12)
	movq $sat_sg5ww_info,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg961:
	movq $64,904(%r13)
	movl $Data.Functor.Product.$fFoldableProduct_$cmaximum_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cmaximum_entry, .-Data.Functor.Product.$fFoldableProduct_$cmaximum_entry


==================== Asm code ====================
2018-03-16 16:11:56.443277461 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cmaximum_info
.type Data.Functor.Product.$fFoldableProduct_$cmaximum_info, @object
Data.Functor.Product.$fFoldableProduct_$cmaximum_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cmaximum_entry
	.quad	0
	.quad	30064771086
	.quad	12884901911
	.quad	Sg5Oh_srt+248


==================== Asm code ====================
2018-03-16 16:11:56.449680227 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$celem_closure
.type Data.Functor.Product.$fFoldableProduct_$celem_closure, @object
Data.Functor.Product.$fFoldableProduct_$celem_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$celem_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.450594991 UTC

.section .text
.align 8
f1_sg5wB_entry:
_cg96T:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cg96U
_cg96V:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Classes.==_entry
_cg96U:
	jmp *-16(%r13)
	.size f1_sg5wB_entry, .-f1_sg5wB_entry


==================== Asm code ====================
2018-03-16 16:11:56.451301085 UTC

.section .data.rel.ro
.align 8
.align 1
f1_sg5wB_info:
	.quad	f1_sg5wB_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:11:56.45212337 UTC

.section .text
.align 8
sat_sg5wH_entry:
_cg974:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cg975
_cg976:
	movq $block_cg971_info,-32(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rax,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cg971
_cg972:
	movq (%rbx),%rax
	jmp *(%rax)
_cg975:
	jmp *-8(%r13)
	.size sat_sg5wH_entry, .-sat_sg5wH_entry


==================== Asm code ====================
2018-03-16 16:11:56.452839249 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5wH_info:
	.quad	sat_sg5wH_entry
	.quad	3
	.quad	4294967304
	.quad	4294967301
	.quad	Sg5Oh_srt+272


==================== Asm code ====================
2018-03-16 16:11:56.453580217 UTC

.section .text
.align 8
_cg971:
_cg971:
	movq $block_cg979_info,(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_ppp_info,-32(%rbp)
	movq $Data.Semigroup.Internal.$fMonoidAny_closure,-24(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq %rax,8(%rbp)
	addq $-32,%rbp
	jmp Data.Foldable.foldMap_entry
	.size _cg971, .-_cg971


==================== Asm code ====================
2018-03-16 16:11:56.454314541 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg971_info:
	.quad	_cg971
	.quad	3
	.quad	4294967326
	.quad	Sg5Oh_srt+272


==================== Asm code ====================
2018-03-16 16:11:56.455144439 UTC

.section .text
.align 8
_cg979:
_cg979:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cg97g
_cg97k:
	movl $GHC.Types.True_closure+2,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg97g:
	movq 16(%rbp),%r14
	movq $stg_ap_ppp_info,(%rbp)
	movq 8(%rbp),%rax
	movq $Data.Semigroup.Internal.$fMonoidAny_closure,8(%rbp)
	movq 24(%rbp),%rbx
	movq %rbx,16(%rbp)
	movq %rax,24(%rbp)
	jmp Data.Foldable.foldMap_entry
	.size _cg979, .-_cg979


==================== Asm code ====================
2018-03-16 16:11:56.455868262 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg979_info:
	.quad	_cg979
	.quad	3
	.quad	4294967326
	.quad	Sg5Oh_srt+272


==================== Asm code ====================
2018-03-16 16:11:56.456674546 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$celem_entry
.type Data.Functor.Product.$fFoldableProduct_$celem_entry, @object
Data.Functor.Product.$fFoldableProduct_$celem_entry:
_cg97n:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cg97r
_cg97q:
	movq $f1_sg5wB_info,-56(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq $sat_sg5wH_info,-24(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg97r:
	movq $64,904(%r13)
	movl $Data.Functor.Product.$fFoldableProduct_$celem_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$celem_entry, .-Data.Functor.Product.$fFoldableProduct_$celem_entry


==================== Asm code ====================
2018-03-16 16:11:56.457770206 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$celem_info
.type Data.Functor.Product.$fFoldableProduct_$celem_info, @object
Data.Functor.Product.$fFoldableProduct_$celem_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$celem_entry
	.quad	0
	.quad	12884901902
	.quad	17179869208
	.quad	Sg5Oh_srt+272


==================== Asm code ====================
2018-03-16 16:11:56.460704407 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct8_closure
.type Data.Functor.Product.$fFoldableProduct8_closure, @object
Data.Functor.Product.$fFoldableProduct8_closure:
	.quad	Data.Functor.Product.$fFoldableProduct8_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.461730456 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct8_entry
.type Data.Functor.Product.$fFoldableProduct8_entry, @object
Data.Functor.Product.$fFoldableProduct8_entry:
_cg981:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg982
_cg983:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cg980
_cg97Z:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Data.Semigroup.Internal.$fMonoidEndo_closure,%r14d
	addq $-16,%rbp
	jmp Data.Semigroup.Internal.$fMonoidDual_entry
_cg982:
	jmp *-16(%r13)
_cg980:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Product.$fFoldableProduct8_entry, .-Data.Functor.Product.$fFoldableProduct8_entry


==================== Asm code ====================
2018-03-16 16:11:56.462442908 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct8_info
.type Data.Functor.Product.$fFoldableProduct8_info, @object
Data.Functor.Product.$fFoldableProduct8_info:
	.quad	Data.Functor.Product.$fFoldableProduct8_entry
	.quad	0
	.quad	4294967317
	.quad	Sg5Oh_srt+288


==================== Asm code ====================
2018-03-16 16:11:56.467301325 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldl_closure
.type Data.Functor.Product.$w$cfoldl_closure, @object
Data.Functor.Product.$w$cfoldl_closure:
	.quad	Data.Functor.Product.$w$cfoldl_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.46806313 UTC

.section .text
.align 8
f1_sg5wO_entry:
_cg98k:
	movq %rsi,%rax
	movq %r14,%rsi
	movq %rax,%r14
	movq 6(%rbx),%rbx
	jmp stg_ap_pp_fast
	.size f1_sg5wO_entry, .-f1_sg5wO_entry


==================== Asm code ====================
2018-03-16 16:11:56.468706656 UTC

.section .data.rel.ro
.align 8
.align 1
f1_sg5wO_info:
	.quad	f1_sg5wO_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.469584728 UTC

.section .text
.align 8
sat_sg5wR_entry:
_cg98r:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cg98s
_cg98t:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pppp_info,-56(%rbp)
	movq $Data.Functor.Product.$fFoldableProduct8_closure,-48(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-56,%rbp
	jmp Data.Foldable.foldMap_entry
_cg98s:
	jmp *-16(%r13)
	.size sat_sg5wR_entry, .-sat_sg5wR_entry


==================== Asm code ====================
2018-03-16 16:11:56.470364912 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5wR_info:
	.quad	sat_sg5wR_entry
	.quad	4
	.quad	4294967311
	.quad	Sg5Oh_srt+296


==================== Asm code ====================
2018-03-16 16:11:56.471358166 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cfoldl_entry
.type Data.Functor.Product.$w$cfoldl_entry, @object
Data.Functor.Product.$w$cfoldl_entry:
_cg98u:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cg98v
_cg98w:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cg98y
_cg98x:
	movq $f1_sg5wO_info,-56(%r12)
	movq %rdi,-48(%r12)
	movq $sat_sg5wR_info,-40(%r12)
	movq %r14,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	leaq -54(%r12),%rax
	movq %rax,(%r12)
	movq %rsi,%r14
	movq $stg_ap_pppp_info,-32(%rbp)
	movq $Data.Functor.Product.$fFoldableProduct8_closure,-24(%rbp)
	movq %rax,-16(%rbp)
	movq (%rbp),%rax
	movq %rax,-8(%rbp)
	leaq -40(%r12),%rax
	movq %rax,(%rbp)
	addq $-32,%rbp
	jmp Data.Foldable.foldMap_entry
_cg98y:
	movq $64,904(%r13)
_cg98v:
	movl $Data.Functor.Product.$w$cfoldl_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cfoldl_entry, .-Data.Functor.Product.$w$cfoldl_entry


==================== Asm code ====================
2018-03-16 16:11:56.47283002 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldl_info
.type Data.Functor.Product.$w$cfoldl_info, @object
Data.Functor.Product.$w$cfoldl_info:
	.quad	Data.Functor.Product.$w$cfoldl_entry
	.quad	0
	.quad	12884901902
	.quad	25769803802
	.quad	Sg5Oh_srt+296


==================== Asm code ====================
2018-03-16 16:11:56.476624674 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldl_closure
.type Data.Functor.Product.$fFoldableProduct_$cfoldl_closure, @object
Data.Functor.Product.$fFoldableProduct_$cfoldl_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldl_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.477563004 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cfoldl_entry
.type Data.Functor.Product.$fFoldableProduct_$cfoldl_entry, @object
Data.Functor.Product.$fFoldableProduct_$cfoldl_entry:
_cg98X:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg98Y
_cg98Z:
	movq $block_cg98U_info,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg98U
_cg98V:
	movq (%rbx),%rax
	jmp *(%rax)
_cg98Y:
	movl $Data.Functor.Product.$fFoldableProduct_$cfoldl_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cfoldl_entry, .-Data.Functor.Product.$fFoldableProduct_$cfoldl_entry


==================== Asm code ====================
2018-03-16 16:11:56.478306002 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldl_info
.type Data.Functor.Product.$fFoldableProduct_$cfoldl_info, @object
Data.Functor.Product.$fFoldableProduct_$cfoldl_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldl_entry
	.quad	0
	.quad	12884901902
	.quad	21474836505
	.quad	Sg5Oh_srt+304


==================== Asm code ====================
2018-03-16 16:11:56.479002046 UTC

.section .text
.align 8
_cg98U:
_cg98U:
	movq 7(%rbx),%r9
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cfoldl_entry
	.size _cg98U, .-_cg98U


==================== Asm code ====================
2018-03-16 16:11:56.479661309 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg98U_info:
	.quad	_cg98U
	.quad	4
	.quad	4294967326
	.quad	Sg5Oh_srt+304


==================== Asm code ====================
2018-03-16 16:11:56.481463058 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl2_rg5nY_bytes:
	.asciz "foldl1: empty structure"


==================== Asm code ====================
2018-03-16 16:11:56.484579581 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct7_closure
.type Data.Functor.Product.$fFoldableProduct7_closure, @object
Data.Functor.Product.$fFoldableProduct7_closure:
	.quad	Data.Functor.Product.$fFoldableProduct7_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.485587012 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct7_entry
.type Data.Functor.Product.$fFoldableProduct7_entry, @object
Data.Functor.Product.$fFoldableProduct7_entry:
_cg99n:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cg99o
_cg99p:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cg99k
_cg99j:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_cg99l_info,-24(%rbp)
	movl $lvl2_rg5nY_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_cg99o:
	jmp *-16(%r13)
_cg99k:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Product.$fFoldableProduct7_entry, .-Data.Functor.Product.$fFoldableProduct7_entry


==================== Asm code ====================
2018-03-16 16:11:56.486318323 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct7_info
.type Data.Functor.Product.$fFoldableProduct7_info, @object
Data.Functor.Product.$fFoldableProduct7_info:
	.quad	Data.Functor.Product.$fFoldableProduct7_entry
	.quad	0
	.quad	4294967317
	.quad	Sg5Oh_srt+216


==================== Asm code ====================
2018-03-16 16:11:56.487005749 UTC

.section .text
.align 8
_cg99l:
_cg99l:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size _cg99l, .-_cg99l


==================== Asm code ====================
2018-03-16 16:11:56.487653971 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg99l_info:
	.quad	_cg99l
	.quad	0
	.quad	4294967326
	.quad	Sg5Oh_srt+216


==================== Asm code ====================
2018-03-16 16:11:56.494898413 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldl1_closure
.type Data.Functor.Product.$w$cfoldl1_closure, @object
Data.Functor.Product.$w$cfoldl1_closure:
	.quad	Data.Functor.Product.$w$cfoldl1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.495948419 UTC

.section .text
.align 8
sat_sg5xb_entry:
_cg99X:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg99Y
_cg99Z:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cg99Q_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg99Q
_cg99R:
	movq (%rbx),%rax
	jmp *(%rax)
_cg99Y:
	jmp *-16(%r13)
	.size sat_sg5xb_entry, .-sat_sg5xb_entry


==================== Asm code ====================
2018-03-16 16:11:56.496683048 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5xb_info:
	.quad	sat_sg5xb_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.497548153 UTC

.section .text
.align 8
_cg99Q:
_cg99Q:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cg99U
_cg99V:
	movq %rax,%rsi
	movq 6(%rbx),%r14
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp stg_ap_pp_fast
_cg99U:
	movq %rax,%rbx
	addq $24,%rbp
	jmp stg_ap_0_fast
	.size _cg99Q, .-_cg99Q


==================== Asm code ====================
2018-03-16 16:11:56.498308137 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg99Q_info:
	.quad	_cg99Q
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.499236483 UTC

.section .text
.align 8
f1_sg5x6_entry:
_cg9a8:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cg9ac
_cg9ab:
	movq 6(%rbx),%rax
	movq $sat_sg5xb_info,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq $GHC.Base.Just_con_info,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg9ac:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size f1_sg5x6_entry, .-f1_sg5x6_entry


==================== Asm code ====================
2018-03-16 16:11:56.49994007 UTC

.section .data.rel.ro
.align 8
.align 1
f1_sg5x6_info:
	.quad	f1_sg5x6_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.500766899 UTC

.section .text
.align 8
sat_sg5xc_entry:
_cg9ah:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9ai
_cg9aj:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pppp_info,-56(%rbp)
	movq $Data.Functor.Product.$fFoldableProduct8_closure,-48(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq $GHC.Base.Nothing_closure+1,-24(%rbp)
	addq $-56,%rbp
	jmp Data.Foldable.foldMap_entry
_cg9ai:
	jmp *-16(%r13)
	.size sat_sg5xc_entry, .-sat_sg5xc_entry


==================== Asm code ====================
2018-03-16 16:11:56.501527197 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5xc_info:
	.quad	sat_sg5xc_entry
	.quad	3
	.quad	4294967311
	.quad	Sg5Oh_srt+296


==================== Asm code ====================
2018-03-16 16:11:56.503062586 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cfoldl1_entry
.type Data.Functor.Product.$w$cfoldl1_entry, @object
Data.Functor.Product.$w$cfoldl1_entry:
_cg9aq:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9ar
_cg9as:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cg9au
_cg9at:
	movq $f1_sg5x6_info,-48(%r12)
	movq %rdi,-40(%r12)
	movq $sat_sg5xc_info,-32(%r12)
	movq %r14,-16(%r12)
	movq %r8,-8(%r12)
	leaq -46(%r12),%rax
	movq %rax,(%r12)
	movq $block_cg9ak_info,-8(%rbp)
	movq %rsi,%r14
	movq $stg_ap_pppp_info,-48(%rbp)
	movq $Data.Functor.Product.$fFoldableProduct8_closure,-40(%rbp)
	movq %rax,-32(%rbp)
	movq %r9,-24(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-16(%rbp)
	addq $-48,%rbp
	jmp Data.Foldable.foldMap_entry
_cg9au:
	movq $56,904(%r13)
_cg9ar:
	movl $Data.Functor.Product.$w$cfoldl1_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cfoldl1_entry, .-Data.Functor.Product.$w$cfoldl1_entry


==================== Asm code ====================
2018-03-16 16:11:56.503846046 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldl1_info
.type Data.Functor.Product.$w$cfoldl1_info, @object
Data.Functor.Product.$w$cfoldl1_info:
	.quad	Data.Functor.Product.$w$cfoldl1_entry
	.quad	0
	.quad	107374182414
	.quad	21474836505
	.quad	Sg5Oh_srt+296


==================== Asm code ====================
2018-03-16 16:11:56.504579786 UTC

.section .text
.align 8
_cg9ak:
_cg9ak:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cg9an
_cg9ao:
	movq 6(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
_cg9an:
	movl $Data.Functor.Product.$fFoldableProduct7_closure,%ebx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cg9ak, .-_cg9ak


==================== Asm code ====================
2018-03-16 16:11:56.505172203 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9ak_info:
	.quad	_cg9ak
	.quad	0
	.quad	4294967326
	.quad	Sg5Oh_srt+328


==================== Asm code ====================
2018-03-16 16:11:56.508645799 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldl1_closure
.type Data.Functor.Product.$fFoldableProduct_$cfoldl1_closure, @object
Data.Functor.Product.$fFoldableProduct_$cfoldl1_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldl1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.509664654 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cfoldl1_entry
.type Data.Functor.Product.$fFoldableProduct_$cfoldl1_entry, @object
Data.Functor.Product.$fFoldableProduct_$cfoldl1_entry:
_cg9be:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9bf
_cg9bg:
	movq $block_cg9bb_info,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cg9bb
_cg9bc:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9bf:
	movl $Data.Functor.Product.$fFoldableProduct_$cfoldl1_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cfoldl1_entry, .-Data.Functor.Product.$fFoldableProduct_$cfoldl1_entry


==================== Asm code ====================
2018-03-16 16:11:56.510417222 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldl1_info
.type Data.Functor.Product.$fFoldableProduct_$cfoldl1_info, @object
Data.Functor.Product.$fFoldableProduct_$cfoldl1_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldl1_entry
	.quad	0
	.quad	21474836494
	.quad	17179869208
	.quad	Sg5Oh_srt+320


==================== Asm code ====================
2018-03-16 16:11:56.511111668 UTC

.section .text
.align 8
_cg9bb:
_cg9bb:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cfoldl1_entry
	.size _cg9bb, .-_cg9bb


==================== Asm code ====================
2018-03-16 16:11:56.511731385 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9bb_info:
	.quad	_cg9bb
	.quad	3
	.quad	4294967326
	.quad	Sg5Oh_srt+320


==================== Asm code ====================
2018-03-16 16:11:56.516946983 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldr'_closure
.type Data.Functor.Product.$w$cfoldr'_closure, @object
Data.Functor.Product.$w$cfoldr'_closure:
	.quad	Data.Functor.Product.$w$cfoldr'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.517880028 UTC

.section .text
.align 8
f1_sg5xs_entry:
_cg9bF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9bG
_cg9bH:
	movq $block_cg9bD_info,-16(%rbp)
	movq %rsi,%rax
	movq %rdi,%rsi
	movq 5(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_pp_fast
_cg9bG:
	jmp *-8(%r13)
	.size f1_sg5xs_entry, .-f1_sg5xs_entry


==================== Asm code ====================
2018-03-16 16:11:56.518541629 UTC

.section .data.rel.ro
.align 8
.align 1
f1_sg5xs_info:
	.quad	f1_sg5xs_entry
	.quad	1
	.quad	9
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:56.519232467 UTC

.section .text
.align 8
_cg9bD:
_cg9bD:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_p_fast
	.size _cg9bD, .-_cg9bD


==================== Asm code ====================
2018-03-16 16:11:56.519820117 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9bD_info:
	.quad	_cg9bD
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.520625563 UTC

.section .text
.align 8
sat_sg5xx_entry:
_cg9bN:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9bO
_cg9bP:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pppp_info,-56(%rbp)
	movq $Data.Functor.Product.$fFoldableProduct8_closure,-48(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq $GHC.Base.id_closure+1,-24(%rbp)
	addq $-56,%rbp
	jmp Data.Foldable.foldMap_entry
_cg9bO:
	jmp *-16(%r13)
	.size sat_sg5xx_entry, .-sat_sg5xx_entry


==================== Asm code ====================
2018-03-16 16:11:56.521713376 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5xx_info:
	.quad	sat_sg5xx_entry
	.quad	3
	.quad	4294967311
	.quad	Sg5Oh_srt+296


==================== Asm code ====================
2018-03-16 16:11:56.522567483 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cfoldr'_entry
.type Data.Functor.Product.$w$cfoldr'_entry, @object
Data.Functor.Product.$w$cfoldr'_entry:
_cg9bQ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9bR
_cg9bS:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cg9bU
_cg9bT:
	movq $f1_sg5xs_info,-48(%r12)
	movq %rdi,-40(%r12)
	movq $sat_sg5xx_info,-32(%r12)
	movq %r14,-16(%r12)
	movq %r9,-8(%r12)
	leaq -45(%r12),%rax
	movq %rax,(%r12)
	movq %rsi,%r14
	movq $stg_ap_ppppp_info,-40(%rbp)
	movq $Data.Functor.Product.$fFoldableProduct8_closure,-32(%rbp)
	movq %rax,-24(%rbp)
	movq (%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-8(%rbp)
	movq %r8,(%rbp)
	addq $-40,%rbp
	jmp Data.Foldable.foldMap_entry
_cg9bU:
	movq $56,904(%r13)
_cg9bR:
	movl $Data.Functor.Product.$w$cfoldr'_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cfoldr'_entry, .-Data.Functor.Product.$w$cfoldr'_entry


==================== Asm code ====================
2018-03-16 16:11:56.523414231 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldr'_info
.type Data.Functor.Product.$w$cfoldr'_info, @object
Data.Functor.Product.$w$cfoldr'_info:
	.quad	Data.Functor.Product.$w$cfoldr'_entry
	.quad	0
	.quad	279172874254
	.quad	25769803802
	.quad	Sg5Oh_srt+296


==================== Asm code ====================
2018-03-16 16:11:56.527249134 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldr'_closure
.type Data.Functor.Product.$fFoldableProduct_$cfoldr'_closure, @object
Data.Functor.Product.$fFoldableProduct_$cfoldr'_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldr'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.528213788 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cfoldr'_entry
.type Data.Functor.Product.$fFoldableProduct_$cfoldr'_entry, @object
Data.Functor.Product.$fFoldableProduct_$cfoldr'_entry:
_cg9cm:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9cn
_cg9co:
	movq $block_cg9cj_info,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg9cj
_cg9ck:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9cn:
	movl $Data.Functor.Product.$fFoldableProduct_$cfoldr'_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cfoldr'_entry, .-Data.Functor.Product.$fFoldableProduct_$cfoldr'_entry


==================== Asm code ====================
2018-03-16 16:11:56.528977152 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldr'_info
.type Data.Functor.Product.$fFoldableProduct_$cfoldr'_info, @object
Data.Functor.Product.$fFoldableProduct_$cfoldr'_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldr'_entry
	.quad	0
	.quad	12884901902
	.quad	21474836505
	.quad	Sg5Oh_srt+344


==================== Asm code ====================
2018-03-16 16:11:56.529751361 UTC

.section .text
.align 8
_cg9cj:
_cg9cj:
	movq 7(%rbx),%r9
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cfoldr'_entry
	.size _cg9cj, .-_cg9cj


==================== Asm code ====================
2018-03-16 16:11:56.530408519 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9cj_info:
	.quad	_cg9cj
	.quad	4
	.quad	4294967326
	.quad	Sg5Oh_srt+344


==================== Asm code ====================
2018-03-16 16:11:56.535171843 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldr_closure
.type Data.Functor.Product.$w$cfoldr_closure, @object
Data.Functor.Product.$w$cfoldr_closure:
	.quad	Data.Functor.Product.$w$cfoldr_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.536117115 UTC

.section .text
.align 8
sat_sg5xM_entry:
_cg9cL:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9cM
_cg9cN:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pppp_info,-56(%rbp)
	movq $Data.Semigroup.Internal.$fMonoidEndo_closure,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-56,%rbp
	jmp Data.Foldable.foldMap_entry
_cg9cM:
	jmp *-16(%r13)
	.size sat_sg5xM_entry, .-sat_sg5xM_entry


==================== Asm code ====================
2018-03-16 16:11:56.536787434 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5xM_info:
	.quad	sat_sg5xM_entry
	.quad	4
	.quad	4294967311
	.quad	Sg5Oh_srt+288


==================== Asm code ====================
2018-03-16 16:11:56.537714141 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cfoldr_entry
.type Data.Functor.Product.$w$cfoldr_entry, @object
Data.Functor.Product.$w$cfoldr_entry:
_cg9cO:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9cP
_cg9cQ:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cg9cS
_cg9cR:
	movq $sat_sg5xM_info,-40(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq (%rbp),%rax
	movq %rax,(%r12)
	movq $stg_ap_pppp_info,-32(%rbp)
	movq $Data.Semigroup.Internal.$fMonoidEndo_closure,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	leaq -40(%r12),%rax
	movq %rax,(%rbp)
	addq $-32,%rbp
	jmp Data.Foldable.foldMap_entry
_cg9cS:
	movq $48,904(%r13)
_cg9cP:
	movl $Data.Functor.Product.$w$cfoldr_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cfoldr_entry, .-Data.Functor.Product.$w$cfoldr_entry


==================== Asm code ====================
2018-03-16 16:11:56.538470811 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldr_info
.type Data.Functor.Product.$w$cfoldr_info, @object
Data.Functor.Product.$w$cfoldr_info:
	.quad	Data.Functor.Product.$w$cfoldr_entry
	.quad	0
	.quad	2203318222862
	.quad	25769803802
	.quad	Sg5Oh_srt+288


==================== Asm code ====================
2018-03-16 16:11:56.542665736 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldr_closure
.type Data.Functor.Product.$fFoldableProduct_$cfoldr_closure, @object
Data.Functor.Product.$fFoldableProduct_$cfoldr_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldr_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.543675672 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cfoldr_entry
.type Data.Functor.Product.$fFoldableProduct_$cfoldr_entry, @object
Data.Functor.Product.$fFoldableProduct_$cfoldr_entry:
_cg9de:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9df
_cg9dg:
	movq $block_cg9db_info,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg9db
_cg9dc:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9df:
	movl $Data.Functor.Product.$fFoldableProduct_$cfoldr_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cfoldr_entry, .-Data.Functor.Product.$fFoldableProduct_$cfoldr_entry


==================== Asm code ====================
2018-03-16 16:11:56.544393849 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldr_info
.type Data.Functor.Product.$fFoldableProduct_$cfoldr_info, @object
Data.Functor.Product.$fFoldableProduct_$cfoldr_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldr_entry
	.quad	0
	.quad	12884901902
	.quad	21474836505
	.quad	Sg5Oh_srt+360


==================== Asm code ====================
2018-03-16 16:11:56.545184635 UTC

.section .text
.align 8
_cg9db:
_cg9db:
	movq 7(%rbx),%r9
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cfoldr_entry
	.size _cg9db, .-_cg9db


==================== Asm code ====================
2018-03-16 16:11:56.545833988 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9db_info:
	.quad	_cg9db
	.quad	4
	.quad	4294967326
	.quad	Sg5Oh_srt+360


==================== Asm code ====================
2018-03-16 16:11:56.551127376 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldl'_closure
.type Data.Functor.Product.$w$cfoldl'_closure, @object
Data.Functor.Product.$w$cfoldl'_closure:
	.quad	Data.Functor.Product.$w$cfoldl'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.552063106 UTC

.section .text
.align 8
f1_sg5y1_entry:
_cg9dG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9dH
_cg9dI:
	movq $block_cg9dE_info,-16(%rbp)
	movq %rsi,%rax
	movq %r14,%rsi
	movq %rdi,%r14
	movq 5(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_pp_fast
_cg9dH:
	jmp *-8(%r13)
	.size f1_sg5y1_entry, .-f1_sg5y1_entry


==================== Asm code ====================
2018-03-16 16:11:56.552736323 UTC

.section .data.rel.ro
.align 8
.align 1
f1_sg5y1_info:
	.quad	f1_sg5y1_entry
	.quad	1
	.quad	9
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:56.553397615 UTC

.section .text
.align 8
_cg9dE:
_cg9dE:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_p_fast
	.size _cg9dE, .-_cg9dE


==================== Asm code ====================
2018-03-16 16:11:56.553980875 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9dE_info:
	.quad	_cg9dE
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.554787748 UTC

.section .text
.align 8
sat_sg5y6_entry:
_cg9dO:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9dP
_cg9dQ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pppp_info,-56(%rbp)
	movq $Data.Semigroup.Internal.$fMonoidEndo_closure,-48(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq $GHC.Base.id_closure+1,-24(%rbp)
	addq $-56,%rbp
	jmp Data.Foldable.foldMap_entry
_cg9dP:
	jmp *-16(%r13)
	.size sat_sg5y6_entry, .-sat_sg5y6_entry


==================== Asm code ====================
2018-03-16 16:11:56.555519678 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5y6_info:
	.quad	sat_sg5y6_entry
	.quad	3
	.quad	4294967311
	.quad	Sg5Oh_srt+288


==================== Asm code ====================
2018-03-16 16:11:56.556496269 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cfoldl'_entry
.type Data.Functor.Product.$w$cfoldl'_entry, @object
Data.Functor.Product.$w$cfoldl'_entry:
_cg9dR:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9dS
_cg9dT:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cg9dV
_cg9dU:
	movq $f1_sg5y1_info,-48(%r12)
	movq %rdi,-40(%r12)
	movq $sat_sg5y6_info,-32(%r12)
	movq %rsi,-16(%r12)
	movq (%rbp),%rax
	movq %rax,-8(%r12)
	leaq -45(%r12),%rax
	movq %rax,(%r12)
	movq $stg_ap_ppppp_info,-40(%rbp)
	movq $Data.Semigroup.Internal.$fMonoidEndo_closure,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %r9,-16(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-8(%rbp)
	movq %r8,(%rbp)
	addq $-40,%rbp
	jmp Data.Foldable.foldMap_entry
_cg9dV:
	movq $56,904(%r13)
_cg9dS:
	movl $Data.Functor.Product.$w$cfoldl'_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cfoldl'_entry, .-Data.Functor.Product.$w$cfoldl'_entry


==================== Asm code ====================
2018-03-16 16:11:56.557422599 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldl'_info
.type Data.Functor.Product.$w$cfoldl'_info, @object
Data.Functor.Product.$w$cfoldl'_info:
	.quad	Data.Functor.Product.$w$cfoldl'_entry
	.quad	0
	.quad	8800387989518
	.quad	25769803802
	.quad	Sg5Oh_srt+288


==================== Asm code ====================
2018-03-16 16:11:56.56122555 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldl'_closure
.type Data.Functor.Product.$fFoldableProduct_$cfoldl'_closure, @object
Data.Functor.Product.$fFoldableProduct_$cfoldl'_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldl'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.563242571 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cfoldl'_entry
.type Data.Functor.Product.$fFoldableProduct_$cfoldl'_entry, @object
Data.Functor.Product.$fFoldableProduct_$cfoldl'_entry:
_cg9en:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9eo
_cg9ep:
	movq $block_cg9ek_info,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg9ek
_cg9el:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9eo:
	movl $Data.Functor.Product.$fFoldableProduct_$cfoldl'_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cfoldl'_entry, .-Data.Functor.Product.$fFoldableProduct_$cfoldl'_entry


==================== Asm code ====================
2018-03-16 16:11:56.563987307 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldl'_info
.type Data.Functor.Product.$fFoldableProduct_$cfoldl'_info, @object
Data.Functor.Product.$fFoldableProduct_$cfoldl'_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldl'_entry
	.quad	0
	.quad	12884901902
	.quad	21474836505
	.quad	Sg5Oh_srt+376


==================== Asm code ====================
2018-03-16 16:11:56.564705269 UTC

.section .text
.align 8
_cg9ek:
_cg9ek:
	movq 7(%rbx),%r9
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cfoldl'_entry
	.size _cg9ek, .-_cg9ek


==================== Asm code ====================
2018-03-16 16:11:56.565396538 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9ek_info:
	.quad	_cg9ek
	.quad	4
	.quad	4294967326
	.quad	Sg5Oh_srt+376


==================== Asm code ====================
2018-03-16 16:11:56.568797385 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct5_closure
.type Data.Functor.Product.$fFoldableProduct5_closure, @object
Data.Functor.Product.$fFoldableProduct5_closure:
	.quad	Data.Functor.Product.$fFoldableProduct5_info


==================== Asm code ====================
2018-03-16 16:11:56.56969248 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct5_entry
.type Data.Functor.Product.$fFoldableProduct5_entry, @object
Data.Functor.Product.$fFoldableProduct5_entry:
_cg9eL:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9eS
_cg9eT:
	movq $block_cg9eI_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cg9eI
_cg9eJ:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9eS:
	movl $Data.Functor.Product.$fFoldableProduct5_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct5_entry, .-Data.Functor.Product.$fFoldableProduct5_entry


==================== Asm code ====================
2018-03-16 16:11:56.570357123 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct5_info
.type Data.Functor.Product.$fFoldableProduct5_info, @object
Data.Functor.Product.$fFoldableProduct5_info:
	.quad	Data.Functor.Product.$fFoldableProduct5_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.571120213 UTC

.section .text
.align 8
_cg9eI:
_cg9eI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cg9eW
_cg9eV:
	movq 7(%rbx),%rax
	incq %rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg9eW:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg9eI, .-_cg9eI


==================== Asm code ====================
2018-03-16 16:11:56.571779017 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9eI_info:
	.quad	_cg9eI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.575315737 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$clength_closure
.type Data.Functor.Product.$fFoldableProduct_$clength_closure, @object
Data.Functor.Product.$fFoldableProduct_$clength_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$clength_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.576205857 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$clength_entry
.type Data.Functor.Product.$fFoldableProduct_$clength_entry, @object
Data.Functor.Product.$fFoldableProduct_$clength_entry:
_cg9fg:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9fh
_cg9fi:
	movq $block_cg9fd_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cg9fd
_cg9fe:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9fh:
	movl $Data.Functor.Product.$fFoldableProduct_$clength_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$clength_entry, .-Data.Functor.Product.$fFoldableProduct_$clength_entry


==================== Asm code ====================
2018-03-16 16:11:56.576938489 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$clength_info
.type Data.Functor.Product.$fFoldableProduct_$clength_info, @object
Data.Functor.Product.$fFoldableProduct_$clength_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$clength_entry
	.quad	0
	.quad	21474836494
	.quad	12884901911
	.quad	Sg5Oh_srt+376


==================== Asm code ====================
2018-03-16 16:11:56.577679762 UTC

.section .text
.align 8
_cg9fd:
_cg9fd:
	movq 7(%rbx),%r9
	movl $Data.Functor.Product.$fFoldableProduct4_closure+1,%r8d
	movl $Data.Functor.Product.$fFoldableProduct5_closure+2,%edi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,16(%rbp)
	addq $16,%rbp
	jmp Data.Functor.Product.$w$cfoldl'_entry
	.size _cg9fd, .-_cg9fd


==================== Asm code ====================
2018-03-16 16:11:56.578354929 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9fd_info:
	.quad	_cg9fd
	.quad	2
	.quad	4294967326
	.quad	Sg5Oh_srt+376


==================== Asm code ====================
2018-03-16 16:11:56.580216333 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl3_rg5nZ_bytes:
	.asciz "foldr1: empty structure"


==================== Asm code ====================
2018-03-16 16:11:56.583425665 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct9_closure
.type Data.Functor.Product.$fFoldableProduct9_closure, @object
Data.Functor.Product.$fFoldableProduct9_closure:
	.quad	Data.Functor.Product.$fFoldableProduct9_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.584414645 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct9_entry
.type Data.Functor.Product.$fFoldableProduct9_entry, @object
Data.Functor.Product.$fFoldableProduct9_entry:
_cg9fG:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9fH
_cg9fI:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cg9fD
_cg9fC:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_cg9fE_info,-24(%rbp)
	movl $lvl3_rg5nZ_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_cg9fH:
	jmp *-16(%r13)
_cg9fD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Product.$fFoldableProduct9_entry, .-Data.Functor.Product.$fFoldableProduct9_entry


==================== Asm code ====================
2018-03-16 16:11:56.585221509 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct9_info
.type Data.Functor.Product.$fFoldableProduct9_info, @object
Data.Functor.Product.$fFoldableProduct9_info:
	.quad	Data.Functor.Product.$fFoldableProduct9_entry
	.quad	0
	.quad	4294967317
	.quad	Sg5Oh_srt+216


==================== Asm code ====================
2018-03-16 16:11:56.585961992 UTC

.section .text
.align 8
_cg9fE:
_cg9fE:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size _cg9fE, .-_cg9fE


==================== Asm code ====================
2018-03-16 16:11:56.586593841 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9fE_info:
	.quad	_cg9fE
	.quad	0
	.quad	4294967326
	.quad	Sg5Oh_srt+216


==================== Asm code ====================
2018-03-16 16:11:56.594045866 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldr1_closure
.type Data.Functor.Product.$w$cfoldr1_closure, @object
Data.Functor.Product.$w$cfoldr1_closure:
	.quad	Data.Functor.Product.$w$cfoldr1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.594973239 UTC

.section .text
.align 8
sat_sg5yB_entry:
_cg9gg:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9gh
_cg9gi:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cg9g9_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg9g9
_cg9ga:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9gh:
	jmp *-16(%r13)
	.size sat_sg5yB_entry, .-sat_sg5yB_entry


==================== Asm code ====================
2018-03-16 16:11:56.595734165 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5yB_info:
	.quad	sat_sg5yB_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.596479158 UTC

.section .text
.align 8
_cg9g9:
_cg9g9:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cg9gd
_cg9ge:
	movq 6(%rbx),%rsi
	movq %rax,%r14
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp stg_ap_pp_fast
_cg9gd:
	movq %rax,%rbx
	addq $24,%rbp
	jmp stg_ap_0_fast
	.size _cg9g9, .-_cg9g9


==================== Asm code ====================
2018-03-16 16:11:56.597204661 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9g9_info:
	.quad	_cg9g9
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.598441686 UTC

.section .text
.align 8
w3_sg5yw_entry:
_cg9gr:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cg9gv
_cg9gu:
	movq 6(%rbx),%rax
	movq $sat_sg5yB_info,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq $GHC.Base.Just_con_info,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg9gv:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size w3_sg5yw_entry, .-w3_sg5yw_entry


==================== Asm code ====================
2018-03-16 16:11:56.599179605 UTC

.section .data.rel.ro
.align 8
.align 1
w3_sg5yw_info:
	.quad	w3_sg5yw_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.59994738 UTC

.section .text
.align 8
sat_sg5yC_entry:
_cg9gA:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9gB
_cg9gC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pppp_info,-56(%rbp)
	movq $Data.Semigroup.Internal.$fMonoidEndo_closure,-48(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq $GHC.Base.Nothing_closure+1,-24(%rbp)
	addq $-56,%rbp
	jmp Data.Foldable.foldMap_entry
_cg9gB:
	jmp *-16(%r13)
	.size sat_sg5yC_entry, .-sat_sg5yC_entry


==================== Asm code ====================
2018-03-16 16:11:56.600657872 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5yC_info:
	.quad	sat_sg5yC_entry
	.quad	3
	.quad	4294967311
	.quad	Sg5Oh_srt+288


==================== Asm code ====================
2018-03-16 16:11:56.601579062 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cfoldr1_entry
.type Data.Functor.Product.$w$cfoldr1_entry, @object
Data.Functor.Product.$w$cfoldr1_entry:
_cg9gJ:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9gK
_cg9gL:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cg9gN
_cg9gM:
	movq $w3_sg5yw_info,-48(%r12)
	movq %rdi,-40(%r12)
	movq $sat_sg5yC_info,-32(%r12)
	movq %rsi,-16(%r12)
	movq %r9,-8(%r12)
	leaq -46(%r12),%rax
	movq %rax,(%r12)
	movq $block_cg9gD_info,-8(%rbp)
	movq $stg_ap_pppp_info,-48(%rbp)
	movq $Data.Semigroup.Internal.$fMonoidEndo_closure,-40(%rbp)
	movq %rax,-32(%rbp)
	movq %r8,-24(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-16(%rbp)
	addq $-48,%rbp
	jmp Data.Foldable.foldMap_entry
_cg9gN:
	movq $56,904(%r13)
_cg9gK:
	movl $Data.Functor.Product.$w$cfoldr1_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cfoldr1_entry, .-Data.Functor.Product.$w$cfoldr1_entry


==================== Asm code ====================
2018-03-16 16:11:56.602424762 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldr1_info
.type Data.Functor.Product.$w$cfoldr1_info, @object
Data.Functor.Product.$w$cfoldr1_info:
	.quad	Data.Functor.Product.$w$cfoldr1_entry
	.quad	0
	.quad	211110527500302
	.quad	21474836505
	.quad	Sg5Oh_srt+288


==================== Asm code ====================
2018-03-16 16:11:56.603212057 UTC

.section .text
.align 8
_cg9gD:
_cg9gD:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cg9gG
_cg9gH:
	movq 6(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
_cg9gG:
	movl $Data.Functor.Product.$fFoldableProduct9_closure,%ebx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cg9gD, .-_cg9gD


==================== Asm code ====================
2018-03-16 16:11:56.603934663 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9gD_info:
	.quad	_cg9gD
	.quad	0
	.quad	4294967326
	.quad	Sg5Oh_srt+408


==================== Asm code ====================
2018-03-16 16:11:56.607729617 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldr1_closure
.type Data.Functor.Product.$fFoldableProduct_$cfoldr1_closure, @object
Data.Functor.Product.$fFoldableProduct_$cfoldr1_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldr1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.608660214 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cfoldr1_entry
.type Data.Functor.Product.$fFoldableProduct_$cfoldr1_entry, @object
Data.Functor.Product.$fFoldableProduct_$cfoldr1_entry:
_cg9hx:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9hy
_cg9hz:
	movq $block_cg9hu_info,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cg9hu
_cg9hv:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9hy:
	movl $Data.Functor.Product.$fFoldableProduct_$cfoldr1_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cfoldr1_entry, .-Data.Functor.Product.$fFoldableProduct_$cfoldr1_entry


==================== Asm code ====================
2018-03-16 16:11:56.609426806 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldr1_info
.type Data.Functor.Product.$fFoldableProduct_$cfoldr1_info, @object
Data.Functor.Product.$fFoldableProduct_$cfoldr1_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldr1_entry
	.quad	0
	.quad	21474836494
	.quad	17179869208
	.quad	Sg5Oh_srt+400


==================== Asm code ====================
2018-03-16 16:11:56.610189275 UTC

.section .text
.align 8
_cg9hu:
_cg9hu:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cfoldr1_entry
	.size _cg9hu, .-_cg9hu


==================== Asm code ====================
2018-03-16 16:11:56.610813814 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9hu_info:
	.quad	_cg9hu
	.quad	3
	.quad	4294967326
	.quad	Sg5Oh_srt+400


==================== Asm code ====================
2018-03-16 16:11:56.613355488 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct6_closure
.type Data.Functor.Product.$fFoldableProduct6_closure, @object
Data.Functor.Product.$fFoldableProduct6_closure:
	.quad	Data.Functor.Product.$fFoldableProduct6_info


==================== Asm code ====================
2018-03-16 16:11:56.614145806 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct6_entry
.type Data.Functor.Product.$fFoldableProduct6_entry, @object
Data.Functor.Product.$fFoldableProduct6_entry:
_cg9hR:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size Data.Functor.Product.$fFoldableProduct6_entry, .-Data.Functor.Product.$fFoldableProduct6_entry


==================== Asm code ====================
2018-03-16 16:11:56.615037193 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct6_info
.type Data.Functor.Product.$fFoldableProduct6_info, @object
Data.Functor.Product.$fFoldableProduct6_info:
	.quad	Data.Functor.Product.$fFoldableProduct6_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.623507503 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cnull_closure
.type Data.Functor.Product.$fFoldableProduct_$cnull_closure, @object
Data.Functor.Product.$fFoldableProduct_$cnull_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cnull_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.624851048 UTC

.section .text
.align 8
sat_sg5yU_entry:
_cg9ic:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9id
_cg9ie:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pppp_info,-56(%rbp)
	movq $Data.Semigroup.Internal.$fMonoidEndo_closure,-48(%rbp)
	movq $Data.Functor.Product.$fFoldableProduct6_closure+2,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq $GHC.Types.True_closure+2,-24(%rbp)
	addq $-56,%rbp
	jmp Data.Foldable.foldMap_entry
_cg9id:
	jmp *-16(%r13)
	.size sat_sg5yU_entry, .-sat_sg5yU_entry


==================== Asm code ====================
2018-03-16 16:11:56.62596335 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5yU_info:
	.quad	sat_sg5yU_entry
	.quad	2
	.quad	4294967314
	.quad	Sg5Oh_srt+288


==================== Asm code ====================
2018-03-16 16:11:56.627088169 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cnull_entry
.type Data.Functor.Product.$fFoldableProduct_$cnull_entry, @object
Data.Functor.Product.$fFoldableProduct_$cnull_entry:
_cg9if:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9ig
_cg9ih:
	movq $block_cg9i3_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cg9i3
_cg9i4:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9ig:
	movl $Data.Functor.Product.$fFoldableProduct_$cnull_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cnull_entry, .-Data.Functor.Product.$fFoldableProduct_$cnull_entry


==================== Asm code ====================
2018-03-16 16:11:56.628232507 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cnull_info
.type Data.Functor.Product.$fFoldableProduct_$cnull_info, @object
Data.Functor.Product.$fFoldableProduct_$cnull_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cnull_entry
	.quad	0
	.quad	562954248388622
	.quad	12884901911
	.quad	Sg5Oh_srt+288


==================== Asm code ====================
2018-03-16 16:11:56.629671948 UTC

.section .text
.align 8
_cg9i3:
_cg9i3:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cg9ik
_cg9ij:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sg5yU_info,-24(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%r14
	movq $stg_ap_pppp_info,-16(%rbp)
	movq $Data.Semigroup.Internal.$fMonoidEndo_closure,-8(%rbp)
	movq $Data.Functor.Product.$fFoldableProduct6_closure+2,(%rbp)
	movq %rax,8(%rbp)
	leaq -24(%r12),%rax
	movq %rax,16(%rbp)
	addq $-16,%rbp
	jmp Data.Foldable.foldMap_entry
_cg9ik:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg9i3, .-_cg9i3


==================== Asm code ====================
2018-03-16 16:11:56.630405981 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9i3_info:
	.quad	_cg9i3
	.quad	2
	.quad	4294967326
	.quad	Sg5Oh_srt+288


==================== Asm code ====================
2018-03-16 16:11:56.637235418 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cproduct_closure
.type Data.Functor.Product.$fFoldableProduct_$cproduct_closure, @object
Data.Functor.Product.$fFoldableProduct_$cproduct_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cproduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.638470592 UTC

.section .text
.align 8
$dMonoid_sg5yY_entry:
_cg9iK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9iL
_cg9iM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Semigroup.Internal.$fMonoidProduct_entry
_cg9iL:
	jmp *-16(%r13)
	.size $dMonoid_sg5yY_entry, .-$dMonoid_sg5yY_entry


==================== Asm code ====================
2018-03-16 16:11:56.639122823 UTC

.section .data.rel.ro
.align 8
.align 1
$dMonoid_sg5yY_info:
	.quad	$dMonoid_sg5yY_entry
	.quad	1
	.quad	4294967312
	.quad	Sg5Oh_srt+432


==================== Asm code ====================
2018-03-16 16:11:56.639940924 UTC

.section .text
.align 8
sat_sg5z4_entry:
_cg9j1:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9j2
_cg9j3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq $Data.Functor.Product.$fFoldableProduct1_closure+1,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp Data.Foldable.foldMap_entry
_cg9j2:
	jmp *-16(%r13)
	.size sat_sg5z4_entry, .-sat_sg5z4_entry


==================== Asm code ====================
2018-03-16 16:11:56.640650827 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5z4_info:
	.quad	sat_sg5z4_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.641524996 UTC

.section .text
.align 8
sat_sg5z3_entry:
_cg9j8:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9j9
_cg9ja:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq $Data.Functor.Product.$fFoldableProduct1_closure+1,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp Data.Foldable.foldMap_entry
_cg9j9:
	jmp *-16(%r13)
	.size sat_sg5z3_entry, .-sat_sg5z3_entry


==================== Asm code ====================
2018-03-16 16:11:56.642230541 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5z3_info:
	.quad	sat_sg5z3_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.643095229 UTC

.section .text
.align 8
sat_sg5z5_entry:
_cg9jb:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9jc
_cg9jd:
	movq $block_cg9iS_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg9iS
_cg9iT:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9jc:
	jmp *-8(%r13)
	.size sat_sg5z5_entry, .-sat_sg5z5_entry


==================== Asm code ====================
2018-03-16 16:11:56.643819557 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5z5_info:
	.quad	sat_sg5z5_entry
	.quad	4
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:56.644645455 UTC

.section .text
.align 8
_cg9iS:
_cg9iS:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cg9jg
_cg9jf:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sg5z4_info,-72(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-56(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-48(%r12)
	movq %rbx,-40(%r12)
	movq $sat_sg5z3_info,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	movq 24(%rbp),%r14
	movq $stg_ap_pp_info,16(%rbp)
	leaq -32(%r12),%rax
	movq %rax,24(%rbp)
	leaq -72(%r12),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp GHC.Num.*_entry
_cg9jg:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg9iS, .-_cg9iS


==================== Asm code ====================
2018-03-16 16:11:56.645490997 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9iS_info:
	.quad	_cg9iS
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.646367832 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cproduct_entry
.type Data.Functor.Product.$fFoldableProduct_$cproduct_entry, @object
Data.Functor.Product.$fFoldableProduct_$cproduct_entry:
_cg9ji:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cg9jm
_cg9jl:
	movq $$dMonoid_sg5yY_info,-56(%r12)
	movq %rdi,-40(%r12)
	movq $sat_sg5z5_info,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg9jm:
	movq $64,904(%r13)
	movl $Data.Functor.Product.$fFoldableProduct_$cproduct_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cproduct_entry, .-Data.Functor.Product.$fFoldableProduct_$cproduct_entry


==================== Asm code ====================
2018-03-16 16:11:56.647165421 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cproduct_info
.type Data.Functor.Product.$fFoldableProduct_$cproduct_info, @object
Data.Functor.Product.$fFoldableProduct_$cproduct_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cproduct_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	Sg5Oh_srt+432


==================== Asm code ====================
2018-03-16 16:11:56.652316851 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$ctoList_closure
.type Data.Functor.Product.$fFoldableProduct_$ctoList_closure, @object
Data.Functor.Product.$fFoldableProduct_$ctoList_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$ctoList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.653232622 UTC

.section .text
.align 8
sat_sg5zc_entry:
_cg9k8:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9k9
_cg9ka:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pppp_info,-56(%rbp)
	movq $Data.Semigroup.Internal.$fMonoidEndo_closure,-48(%rbp)
	movq $GHC.Types.:_closure+2,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq $GHC.Types.[]_closure+1,-24(%rbp)
	addq $-56,%rbp
	jmp Data.Foldable.foldMap_entry
_cg9k9:
	jmp *-16(%r13)
	.size sat_sg5zc_entry, .-sat_sg5zc_entry


==================== Asm code ====================
2018-03-16 16:11:56.65456877 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zc_info:
	.quad	sat_sg5zc_entry
	.quad	2
	.quad	4294967314
	.quad	Sg5Oh_srt+288


==================== Asm code ====================
2018-03-16 16:11:56.655404613 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$ctoList_entry
.type Data.Functor.Product.$fFoldableProduct_$ctoList_entry, @object
Data.Functor.Product.$fFoldableProduct_$ctoList_entry:
_cg9kb:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9kc
_cg9kd:
	movq $block_cg9jZ_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cg9jZ
_cg9k0:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9kc:
	movl $Data.Functor.Product.$fFoldableProduct_$ctoList_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$ctoList_entry, .-Data.Functor.Product.$fFoldableProduct_$ctoList_entry


==================== Asm code ====================
2018-03-16 16:11:56.656072476 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$ctoList_info
.type Data.Functor.Product.$fFoldableProduct_$ctoList_info, @object
Data.Functor.Product.$fFoldableProduct_$ctoList_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$ctoList_entry
	.quad	0
	.quad	4503603922337806
	.quad	12884901911
	.quad	Sg5Oh_srt+288


==================== Asm code ====================
2018-03-16 16:11:56.656881326 UTC

.section .text
.align 8
_cg9jZ:
_cg9jZ:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cg9kg
_cg9kf:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sg5zc_info,-24(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%r14
	movq $stg_ap_pppp_info,-16(%rbp)
	movq $Data.Semigroup.Internal.$fMonoidEndo_closure,-8(%rbp)
	movq $GHC.Types.:_closure+2,(%rbp)
	movq %rax,8(%rbp)
	leaq -24(%r12),%rax
	movq %rax,16(%rbp)
	addq $-16,%rbp
	jmp Data.Foldable.foldMap_entry
_cg9kg:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg9jZ, .-_cg9jZ


==================== Asm code ====================
2018-03-16 16:11:56.657662489 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9jZ_info:
	.quad	_cg9jZ
	.quad	2
	.quad	4294967326
	.quad	Sg5Oh_srt+288


==================== Asm code ====================
2018-03-16 16:11:56.669974593 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_closure
.type Data.Functor.Product.$fFoldableProduct_closure, @object
Data.Functor.Product.$fFoldableProduct_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.670755965 UTC

.section .text
.align 8
sat_sg5zu_entry:
_cg9kH:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cproduct_entry
	.size sat_sg5zu_entry, .-sat_sg5zu_entry


==================== Asm code ====================
2018-03-16 16:11:56.67134406 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zu_info:
	.quad	sat_sg5zu_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	Sg5Oh_srt+440


==================== Asm code ====================
2018-03-16 16:11:56.671966669 UTC

.section .text
.align 8
sat_sg5zt_entry:
_cg9kP:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$csum_entry
	.size sat_sg5zt_entry, .-sat_sg5zt_entry


==================== Asm code ====================
2018-03-16 16:11:56.67266094 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zt_info:
	.quad	sat_sg5zt_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	Sg5Oh_srt+208


==================== Asm code ====================
2018-03-16 16:11:56.673371194 UTC

.section .text
.align 8
sat_sg5zs_entry:
_cg9kX:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cminimum_entry
	.size sat_sg5zs_entry, .-sat_sg5zs_entry


==================== Asm code ====================
2018-03-16 16:11:56.673977435 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zs_info:
	.quad	sat_sg5zs_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	Sg5Oh_srt+240


==================== Asm code ====================
2018-03-16 16:11:56.674672278 UTC

.section .text
.align 8
sat_sg5zr_entry:
_cg9l5:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cmaximum_entry
	.size sat_sg5zr_entry, .-sat_sg5zr_entry


==================== Asm code ====================
2018-03-16 16:11:56.675266659 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zr_info:
	.quad	sat_sg5zr_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	Sg5Oh_srt+264


==================== Asm code ====================
2018-03-16 16:11:56.675974379 UTC

.section .text
.align 8
sat_sg5zq_entry:
_cg9ld:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$celem_entry
	.size sat_sg5zq_entry, .-sat_sg5zq_entry


==================== Asm code ====================
2018-03-16 16:11:56.676679936 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zq_info:
	.quad	sat_sg5zq_entry
	.quad	2
	.quad	4294967307
	.quad	8589934607
	.quad	Sg5Oh_srt+280


==================== Asm code ====================
2018-03-16 16:11:56.677387661 UTC

.section .text
.align 8
sat_sg5zp_entry:
_cg9ll:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$clength_entry
	.size sat_sg5zp_entry, .-sat_sg5zp_entry


==================== Asm code ====================
2018-03-16 16:11:56.678069803 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zp_info:
	.quad	sat_sg5zp_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	Sg5Oh_srt+392


==================== Asm code ====================
2018-03-16 16:11:56.678780734 UTC

.section .text
.align 8
sat_sg5zo_entry:
_cg9lt:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cnull_entry
	.size sat_sg5zo_entry, .-sat_sg5zo_entry


==================== Asm code ====================
2018-03-16 16:11:56.679427524 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zo_info:
	.quad	sat_sg5zo_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	Sg5Oh_srt+424


==================== Asm code ====================
2018-03-16 16:11:56.680093568 UTC

.section .text
.align 8
sat_sg5zn_entry:
_cg9lB:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$ctoList_entry
	.size sat_sg5zn_entry, .-sat_sg5zn_entry


==================== Asm code ====================
2018-03-16 16:11:56.680747746 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zn_info:
	.quad	sat_sg5zn_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	Sg5Oh_srt+448


==================== Asm code ====================
2018-03-16 16:11:56.681494264 UTC

.section .text
.align 8
sat_sg5zm_entry:
_cg9lJ:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cfoldl1_entry
	.size sat_sg5zm_entry, .-sat_sg5zm_entry


==================== Asm code ====================
2018-03-16 16:11:56.682720991 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zm_info:
	.quad	sat_sg5zm_entry
	.quad	2
	.quad	4294967307
	.quad	8589934607
	.quad	Sg5Oh_srt+336


==================== Asm code ====================
2018-03-16 16:11:56.683510893 UTC

.section .text
.align 8
sat_sg5zl_entry:
_cg9lR:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cfoldr1_entry
	.size sat_sg5zl_entry, .-sat_sg5zl_entry


==================== Asm code ====================
2018-03-16 16:11:56.684125647 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zl_info:
	.quad	sat_sg5zl_entry
	.quad	2
	.quad	4294967307
	.quad	8589934607
	.quad	Sg5Oh_srt+416


==================== Asm code ====================
2018-03-16 16:11:56.684776162 UTC

.section .text
.align 8
sat_sg5zk_entry:
_cg9lZ:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cfoldl'_entry
	.size sat_sg5zk_entry, .-sat_sg5zk_entry


==================== Asm code ====================
2018-03-16 16:11:56.685412959 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zk_info:
	.quad	sat_sg5zk_entry
	.quad	2
	.quad	4294967307
	.quad	12884901911
	.quad	Sg5Oh_srt+384


==================== Asm code ====================
2018-03-16 16:11:56.686086371 UTC

.section .text
.align 8
sat_sg5zj_entry:
_cg9m7:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cfoldl_entry
	.size sat_sg5zj_entry, .-sat_sg5zj_entry


==================== Asm code ====================
2018-03-16 16:11:56.686690837 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zj_info:
	.quad	sat_sg5zj_entry
	.quad	2
	.quad	4294967307
	.quad	12884901911
	.quad	Sg5Oh_srt+312


==================== Asm code ====================
2018-03-16 16:11:56.687346845 UTC

.section .text
.align 8
sat_sg5zi_entry:
_cg9mf:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cfoldr'_entry
	.size sat_sg5zi_entry, .-sat_sg5zi_entry


==================== Asm code ====================
2018-03-16 16:11:56.687958979 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zi_info:
	.quad	sat_sg5zi_entry
	.quad	2
	.quad	4294967307
	.quad	12884901911
	.quad	Sg5Oh_srt+352


==================== Asm code ====================
2018-03-16 16:11:56.688672659 UTC

.section .text
.align 8
sat_sg5zh_entry:
_cg9mn:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cfoldr_entry
	.size sat_sg5zh_entry, .-sat_sg5zh_entry


==================== Asm code ====================
2018-03-16 16:11:56.689319001 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zh_info:
	.quad	sat_sg5zh_entry
	.quad	2
	.quad	4294967307
	.quad	12884901911
	.quad	Sg5Oh_srt+368


==================== Asm code ====================
2018-03-16 16:11:56.689986681 UTC

.section .text
.align 8
sat_sg5zg_entry:
_cg9mv:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cfoldMap_entry
	.size sat_sg5zg_entry, .-sat_sg5zg_entry


==================== Asm code ====================
2018-03-16 16:11:56.690666494 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zg_info:
	.quad	sat_sg5zg_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:56.691328852 UTC

.section .text
.align 8
sat_sg5zf_entry:
_cg9mD:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cfold_entry
	.size sat_sg5zf_entry, .-sat_sg5zf_entry


==================== Asm code ====================
2018-03-16 16:11:56.691936931 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zf_info:
	.quad	sat_sg5zf_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.693086315 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_entry
.type Data.Functor.Product.$fFoldableProduct_entry, @object
Data.Functor.Product.$fFoldableProduct_entry:
_cg9mH:
	addq $520,%r12
	cmpq 856(%r13),%r12
	ja _cg9mL
_cg9mK:
	movq $sat_sg5zu_info,-512(%r12)
	movq %r14,-504(%r12)
	movq %rsi,-496(%r12)
	movq $sat_sg5zt_info,-488(%r12)
	movq %r14,-480(%r12)
	movq %rsi,-472(%r12)
	movq $sat_sg5zs_info,-464(%r12)
	movq %r14,-456(%r12)
	movq %rsi,-448(%r12)
	movq $sat_sg5zr_info,-440(%r12)
	movq %r14,-432(%r12)
	movq %rsi,-424(%r12)
	movq $sat_sg5zq_info,-416(%r12)
	movq %r14,-408(%r12)
	movq %rsi,-400(%r12)
	movq $sat_sg5zp_info,-392(%r12)
	movq %r14,-384(%r12)
	movq %rsi,-376(%r12)
	movq $sat_sg5zo_info,-368(%r12)
	movq %r14,-360(%r12)
	movq %rsi,-352(%r12)
	movq $sat_sg5zn_info,-344(%r12)
	movq %r14,-336(%r12)
	movq %rsi,-328(%r12)
	movq $sat_sg5zm_info,-320(%r12)
	movq %r14,-312(%r12)
	movq %rsi,-304(%r12)
	movq $sat_sg5zl_info,-296(%r12)
	movq %r14,-288(%r12)
	movq %rsi,-280(%r12)
	movq $sat_sg5zk_info,-272(%r12)
	movq %r14,-264(%r12)
	movq %rsi,-256(%r12)
	movq $sat_sg5zj_info,-248(%r12)
	movq %r14,-240(%r12)
	movq %rsi,-232(%r12)
	movq $sat_sg5zi_info,-224(%r12)
	movq %r14,-216(%r12)
	movq %rsi,-208(%r12)
	movq $sat_sg5zh_info,-200(%r12)
	movq %r14,-192(%r12)
	movq %rsi,-184(%r12)
	movq $sat_sg5zg_info,-176(%r12)
	movq %r14,-168(%r12)
	movq %rsi,-160(%r12)
	movq $sat_sg5zf_info,-152(%r12)
	movq %r14,-144(%r12)
	movq %rsi,-136(%r12)
	movq $Data.Foldable.C:Foldable_con_info,-128(%r12)
	leaq -150(%r12),%rax
	movq %rax,-120(%r12)
	leaq -173(%r12),%rax
	movq %rax,-112(%r12)
	leaq -197(%r12),%rax
	movq %rax,-104(%r12)
	leaq -221(%r12),%rax
	movq %rax,-96(%r12)
	leaq -245(%r12),%rax
	movq %rax,-88(%r12)
	leaq -269(%r12),%rax
	movq %rax,-80(%r12)
	leaq -294(%r12),%rax
	movq %rax,-72(%r12)
	leaq -318(%r12),%rax
	movq %rax,-64(%r12)
	leaq -343(%r12),%rax
	movq %rax,-56(%r12)
	leaq -367(%r12),%rax
	movq %rax,-48(%r12)
	leaq -391(%r12),%rax
	movq %rax,-40(%r12)
	leaq -414(%r12),%rax
	movq %rax,-32(%r12)
	leaq -439(%r12),%rax
	movq %rax,-24(%r12)
	leaq -463(%r12),%rax
	movq %rax,-16(%r12)
	leaq -487(%r12),%rax
	movq %rax,-8(%r12)
	leaq -511(%r12),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg9mL:
	movq $520,904(%r13)
	movl $Data.Functor.Product.$fFoldableProduct_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_entry, .-Data.Functor.Product.$fFoldableProduct_entry


==================== Asm code ====================
2018-03-16 16:11:56.694314219 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_info
.type Data.Functor.Product.$fFoldableProduct_info, @object
Data.Functor.Product.$fFoldableProduct_info:
	.quad	Data.Functor.Product.$fFoldableProduct_entry
	.quad	0
	.quad	-1381159704553586674
	.quad	8589934607
	.quad	Sg5Oh_srt+208


==================== Asm code ====================
2018-03-16 16:11:56.699106614 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$ctraverse_closure
.type Data.Functor.Product.$w$ctraverse_closure, @object
Data.Functor.Product.$w$ctraverse_closure:
	.quad	Data.Functor.Product.$w$ctraverse_info


==================== Asm code ====================
2018-03-16 16:11:56.69999832 UTC

.section .text
.align 8
sat_sg5zC_entry:
_cg9o1:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9o2
_cg9o3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp Data.Traversable.traverse_entry
_cg9o2:
	jmp *-16(%r13)
	.size sat_sg5zC_entry, .-sat_sg5zC_entry


==================== Asm code ====================
2018-03-16 16:11:56.700620778 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zC_info:
	.quad	sat_sg5zC_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.701423094 UTC

.section .text
.align 8
sat_sg5zB_entry:
_cg9o8:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9o9
_cg9oa:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp Data.Traversable.traverse_entry
_cg9o9:
	jmp *-16(%r13)
	.size sat_sg5zB_entry, .-sat_sg5zB_entry


==================== Asm code ====================
2018-03-16 16:11:56.702111962 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zB_info:
	.quad	sat_sg5zB_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.703116619 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$ctraverse_entry
.type Data.Functor.Product.$w$ctraverse_entry, @object
Data.Functor.Product.$w$ctraverse_entry:
_cg9ob:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9oc
_cg9od:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cg9of
_cg9oe:
	movq $sat_sg5zC_info,-88(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq (%rbp),%rax
	movq %rax,-48(%r12)
	movq $sat_sg5zB_info,-40(%r12)
	movq %r14,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %r9,(%r12)
	movq %rdi,%r14
	movq $stg_ap_ppp_info,-24(%rbp)
	movq $Data.Functor.Product.Pair_closure+2,-16(%rbp)
	leaq -40(%r12),%rax
	movq %rax,-8(%rbp)
	leaq -88(%r12),%rax
	movq %rax,(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.liftA2_entry
_cg9of:
	movq $96,904(%r13)
_cg9oc:
	movl $Data.Functor.Product.$w$ctraverse_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$ctraverse_entry, .-Data.Functor.Product.$w$ctraverse_entry


==================== Asm code ====================
2018-03-16 16:11:56.703947172 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$ctraverse_info
.type Data.Functor.Product.$w$ctraverse_info, @object
Data.Functor.Product.$w$ctraverse_info:
	.quad	Data.Functor.Product.$w$ctraverse_entry
	.quad	0
	.quad	14
	.quad	25769803802


==================== Asm code ====================
2018-03-16 16:11:56.708360334 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$ctraverse_closure
.type Data.Functor.Product.$fTraversableProduct_$ctraverse_closure, @object
Data.Functor.Product.$fTraversableProduct_$ctraverse_closure:
	.quad	Data.Functor.Product.$fTraversableProduct_$ctraverse_info


==================== Asm code ====================
2018-03-16 16:11:56.70937689 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fTraversableProduct_$ctraverse_entry
.type Data.Functor.Product.$fTraversableProduct_$ctraverse_entry, @object
Data.Functor.Product.$fTraversableProduct_$ctraverse_entry:
_cg9oJ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9oK
_cg9oL:
	movq $block_cg9oG_info,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg9oG
_cg9oH:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9oK:
	movl $Data.Functor.Product.$fTraversableProduct_$ctraverse_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fTraversableProduct_$ctraverse_entry, .-Data.Functor.Product.$fTraversableProduct_$ctraverse_entry


==================== Asm code ====================
2018-03-16 16:11:56.710117835 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$ctraverse_info
.type Data.Functor.Product.$fTraversableProduct_$ctraverse_info, @object
Data.Functor.Product.$fTraversableProduct_$ctraverse_info:
	.quad	Data.Functor.Product.$fTraversableProduct_$ctraverse_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:11:56.711439467 UTC

.section .text
.align 8
_cg9oG:
_cg9oG:
	movq 7(%rbx),%r9
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$ctraverse_entry
	.size _cg9oG, .-_cg9oG


==================== Asm code ====================
2018-03-16 16:11:56.71213462 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9oG_info:
	.quad	_cg9oG
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.715956768 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$cp2Traversable_closure
.type Data.Functor.Product.$fTraversableProduct_$cp2Traversable_closure, @object
Data.Functor.Product.$fTraversableProduct_$cp2Traversable_closure:
	.quad	Data.Functor.Product.$fTraversableProduct_$cp2Traversable_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.716793391 UTC

.section .text
.align 8
sat_sg5zO_entry:
_cg9p8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9p9
_cg9pa:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Traversable.$p2Traversable_entry
_cg9p9:
	jmp *-16(%r13)
	.size sat_sg5zO_entry, .-sat_sg5zO_entry


==================== Asm code ====================
2018-03-16 16:11:56.71752129 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zO_info:
	.quad	sat_sg5zO_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.71827744 UTC

.section .text
.align 8
sat_sg5zN_entry:
_cg9pf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9pg
_cg9ph:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Traversable.$p2Traversable_entry
_cg9pg:
	jmp *-16(%r13)
	.size sat_sg5zN_entry, .-sat_sg5zN_entry


==================== Asm code ====================
2018-03-16 16:11:56.718936317 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zN_info:
	.quad	sat_sg5zN_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.719725441 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fTraversableProduct_$cp2Traversable_entry
.type Data.Functor.Product.$fTraversableProduct_$cp2Traversable_entry, @object
Data.Functor.Product.$fTraversableProduct_$cp2Traversable_entry:
_cg9pi:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cg9pm
_cg9pl:
	movq $sat_sg5zO_info,-40(%r12)
	movq %rsi,-24(%r12)
	movq $sat_sg5zN_info,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp Data.Functor.Product.$fFoldableProduct_entry
_cg9pm:
	movq $48,904(%r13)
	movl $Data.Functor.Product.$fTraversableProduct_$cp2Traversable_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fTraversableProduct_$cp2Traversable_entry, .-Data.Functor.Product.$fTraversableProduct_$cp2Traversable_entry


==================== Asm code ====================
2018-03-16 16:11:56.720462725 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$cp2Traversable_info
.type Data.Functor.Product.$fTraversableProduct_$cp2Traversable_info, @object
Data.Functor.Product.$fTraversableProduct_$cp2Traversable_info:
	.quad	Data.Functor.Product.$fTraversableProduct_$cp2Traversable_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	Sg5Oh_srt+456


==================== Asm code ====================
2018-03-16 16:11:56.724808707 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$cp1Traversable_closure
.type Data.Functor.Product.$fTraversableProduct_$cp1Traversable_closure, @object
Data.Functor.Product.$fTraversableProduct_$cp1Traversable_closure:
	.quad	Data.Functor.Product.$fTraversableProduct_$cp1Traversable_info


==================== Asm code ====================
2018-03-16 16:11:56.725792111 UTC

.section .text
.align 8
sat_sg5zS_entry:
_cg9pH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9pI
_cg9pJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Traversable.$p1Traversable_entry
_cg9pI:
	jmp *-16(%r13)
	.size sat_sg5zS_entry, .-sat_sg5zS_entry


==================== Asm code ====================
2018-03-16 16:11:56.726471876 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zS_info:
	.quad	sat_sg5zS_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.72721418 UTC

.section .text
.align 8
sat_sg5zR_entry:
_cg9pO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9pP
_cg9pQ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Traversable.$p1Traversable_entry
_cg9pP:
	jmp *-16(%r13)
	.size sat_sg5zR_entry, .-sat_sg5zR_entry


==================== Asm code ====================
2018-03-16 16:11:56.727851408 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5zR_info:
	.quad	sat_sg5zR_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.728629248 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fTraversableProduct_$cp1Traversable_entry
.type Data.Functor.Product.$fTraversableProduct_$cp1Traversable_entry, @object
Data.Functor.Product.$fTraversableProduct_$cp1Traversable_entry:
_cg9pR:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cg9pV
_cg9pU:
	movq $sat_sg5zS_info,-40(%r12)
	movq %rsi,-24(%r12)
	movq $sat_sg5zR_info,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp Data.Functor.Product.$fFunctorProduct_entry
_cg9pV:
	movq $48,904(%r13)
	movl $Data.Functor.Product.$fTraversableProduct_$cp1Traversable_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fTraversableProduct_$cp1Traversable_entry, .-Data.Functor.Product.$fTraversableProduct_$cp1Traversable_entry


==================== Asm code ====================
2018-03-16 16:11:56.729360946 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$cp1Traversable_info
.type Data.Functor.Product.$fTraversableProduct_$cp1Traversable_info, @object
Data.Functor.Product.$fTraversableProduct_$cp1Traversable_info:
	.quad	Data.Functor.Product.$fTraversableProduct_$cp1Traversable_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.73289271 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$csequenceA_closure
.type Data.Functor.Product.$fTraversableProduct_$csequenceA_closure, @object
Data.Functor.Product.$fTraversableProduct_$csequenceA_closure:
	.quad	Data.Functor.Product.$fTraversableProduct_$csequenceA_info


==================== Asm code ====================
2018-03-16 16:11:56.733907665 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fTraversableProduct_$csequenceA_entry
.type Data.Functor.Product.$fTraversableProduct_$csequenceA_entry, @object
Data.Functor.Product.$fTraversableProduct_$csequenceA_entry:
_cg9qf:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9qg
_cg9qh:
	movq $block_cg9qc_info,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cg9qc
_cg9qd:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9qg:
	movl $Data.Functor.Product.$fTraversableProduct_$csequenceA_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fTraversableProduct_$csequenceA_entry, .-Data.Functor.Product.$fTraversableProduct_$csequenceA_entry


==================== Asm code ====================
2018-03-16 16:11:56.734671165 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$csequenceA_info
.type Data.Functor.Product.$fTraversableProduct_$csequenceA_info, @object
Data.Functor.Product.$fTraversableProduct_$csequenceA_info:
	.quad	Data.Functor.Product.$fTraversableProduct_$csequenceA_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:11:56.735404808 UTC

.section .text
.align 8
_cg9qc:
_cg9qc:
	movq 7(%rbx),%r9
	movl $GHC.Base.id_closure+1,%r8d
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,24(%rbp)
	addq $24,%rbp
	jmp Data.Functor.Product.$w$ctraverse_entry
	.size _cg9qc, .-_cg9qc


==================== Asm code ====================
2018-03-16 16:11:56.736126466 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9qc_info:
	.quad	_cg9qc
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.740959929 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$cmapM_closure
.type Data.Functor.Product.$fTraversableProduct_$cmapM_closure, @object
Data.Functor.Product.$fTraversableProduct_$cmapM_closure:
	.quad	Data.Functor.Product.$fTraversableProduct_$cmapM_info


==================== Asm code ====================
2018-03-16 16:11:56.742070374 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fTraversableProduct_$cmapM_entry
.type Data.Functor.Product.$fTraversableProduct_$cmapM_entry, @object
Data.Functor.Product.$fTraversableProduct_$cmapM_entry:
_cg9qD:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9qH
_cg9qI:
	movq $block_cg9qA_info,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg9qA
_cg9qB:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9qH:
	movl $Data.Functor.Product.$fTraversableProduct_$cmapM_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fTraversableProduct_$cmapM_entry, .-Data.Functor.Product.$fTraversableProduct_$cmapM_entry


==================== Asm code ====================
2018-03-16 16:11:56.742793852 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$cmapM_info
.type Data.Functor.Product.$fTraversableProduct_$cmapM_info, @object
Data.Functor.Product.$fTraversableProduct_$cmapM_info:
	.quad	Data.Functor.Product.$fTraversableProduct_$cmapM_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:11:56.743482657 UTC

.section .text
.align 8
_cg9qA:
_cg9qA:
	movq $block_cg9qG_info,-8(%rbp)
	movq 24(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq %rax,24(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$p1Monad_entry
	.size _cg9qA, .-_cg9qA


==================== Asm code ====================
2018-03-16 16:11:56.744111808 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9qA_info:
	.quad	_cg9qA
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.744793732 UTC

.section .text
.align 8
_cg9qG:
_cg9qG:
	movq 32(%rbp),%r9
	movq 40(%rbp),%r8
	movq %rbx,%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 8(%rbp),%rax
	movq %rax,40(%rbp)
	addq $40,%rbp
	jmp Data.Functor.Product.$w$ctraverse_entry
	.size _cg9qG, .-_cg9qG


==================== Asm code ====================
2018-03-16 16:11:56.745484044 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9qG_info:
	.quad	_cg9qG
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.74920134 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$csequence_closure
.type Data.Functor.Product.$fTraversableProduct_$csequence_closure, @object
Data.Functor.Product.$fTraversableProduct_$csequence_closure:
	.quad	Data.Functor.Product.$fTraversableProduct_$csequence_info


==================== Asm code ====================
2018-03-16 16:11:56.750119988 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fTraversableProduct_$csequence_entry
.type Data.Functor.Product.$fTraversableProduct_$csequence_entry, @object
Data.Functor.Product.$fTraversableProduct_$csequence_entry:
_cg9rb:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9rf
_cg9rg:
	movq $block_cg9r8_info,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cg9r8
_cg9r9:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9rf:
	movl $Data.Functor.Product.$fTraversableProduct_$csequence_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fTraversableProduct_$csequence_entry, .-Data.Functor.Product.$fTraversableProduct_$csequence_entry


==================== Asm code ====================
2018-03-16 16:11:56.75082558 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$csequence_info
.type Data.Functor.Product.$fTraversableProduct_$csequence_info, @object
Data.Functor.Product.$fTraversableProduct_$csequence_info:
	.quad	Data.Functor.Product.$fTraversableProduct_$csequence_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:11:56.751513712 UTC

.section .text
.align 8
_cg9r8:
_cg9r8:
	movq $block_cg9re_info,-8(%rbp)
	movq 24(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq %rax,24(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$p1Monad_entry
	.size _cg9r8, .-_cg9r8


==================== Asm code ====================
2018-03-16 16:11:56.752134 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9r8_info:
	.quad	_cg9r8
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.752748942 UTC

.section .text
.align 8
_cg9re:
_cg9re:
	movq 32(%rbp),%r9
	movl $GHC.Base.id_closure+1,%r8d
	movq %rbx,%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 8(%rbp),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$ctraverse_entry
	.size _cg9re, .-_cg9re


==================== Asm code ====================
2018-03-16 16:11:56.753456193 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9re_info:
	.quad	_cg9re
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.760428948 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_closure
.type Data.Functor.Product.$fTraversableProduct_closure, @object
Data.Functor.Product.$fTraversableProduct_closure:
	.quad	Data.Functor.Product.$fTraversableProduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.76120397 UTC

.section .text
.align 8
sat_sg5Ao_entry:
_cg9rL:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fTraversableProduct_$csequence_entry
	.size sat_sg5Ao_entry, .-sat_sg5Ao_entry


==================== Asm code ====================
2018-03-16 16:11:56.761871971 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Ao_info:
	.quad	sat_sg5Ao_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.76254376 UTC

.section .text
.align 8
sat_sg5An_entry:
_cg9rT:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$fTraversableProduct_$cmapM_entry
	.size sat_sg5An_entry, .-sat_sg5An_entry


==================== Asm code ====================
2018-03-16 16:11:56.763183798 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5An_info:
	.quad	sat_sg5An_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:56.763903447 UTC

.section .text
.align 8
sat_sg5Am_entry:
_cg9s1:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fTraversableProduct_$csequenceA_entry
	.size sat_sg5Am_entry, .-sat_sg5Am_entry


==================== Asm code ====================
2018-03-16 16:11:56.764547358 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Am_info:
	.quad	sat_sg5Am_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.765308835 UTC

.section .text
.align 8
sat_sg5Al_entry:
_cg9s9:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$fTraversableProduct_$ctraverse_entry
	.size sat_sg5Al_entry, .-sat_sg5Al_entry


==================== Asm code ====================
2018-03-16 16:11:56.765981421 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Al_info:
	.quad	sat_sg5Al_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:56.766787088 UTC

.section .text
.align 8
sat_sg5Ak_entry:
_cg9sg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9sh
_cg9si:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fTraversableProduct_$cp2Traversable_entry
_cg9sh:
	jmp *-16(%r13)
	.size sat_sg5Ak_entry, .-sat_sg5Ak_entry


==================== Asm code ====================
2018-03-16 16:11:56.767508885 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Ak_info:
	.quad	sat_sg5Ak_entry
	.quad	2
	.quad	4294967314
	.quad	Sg5Oh_srt+464


==================== Asm code ====================
2018-03-16 16:11:56.76831475 UTC

.section .text
.align 8
sat_sg5Aj_entry:
_cg9sn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9so
_cg9sp:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fTraversableProduct_$cp1Traversable_entry
_cg9so:
	jmp *-16(%r13)
	.size sat_sg5Aj_entry, .-sat_sg5Aj_entry


==================== Asm code ====================
2018-03-16 16:11:56.769029267 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Aj_info:
	.quad	sat_sg5Aj_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:11:56.770603486 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fTraversableProduct_entry
.type Data.Functor.Product.$fTraversableProduct_entry, @object
Data.Functor.Product.$fTraversableProduct_entry:
_cg9sr:
	addq $216,%r12
	cmpq 856(%r13),%r12
	ja _cg9sv
_cg9su:
	movq $sat_sg5Ao_info,-208(%r12)
	movq %r14,-200(%r12)
	movq %rsi,-192(%r12)
	movq $sat_sg5An_info,-184(%r12)
	movq %r14,-176(%r12)
	movq %rsi,-168(%r12)
	movq $sat_sg5Am_info,-160(%r12)
	movq %r14,-152(%r12)
	movq %rsi,-144(%r12)
	movq $sat_sg5Al_info,-136(%r12)
	movq %r14,-128(%r12)
	movq %rsi,-120(%r12)
	movq $sat_sg5Ak_info,-112(%r12)
	movq %r14,-96(%r12)
	movq %rsi,-88(%r12)
	movq $sat_sg5Aj_info,-80(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq $Data.Traversable.C:Traversable_con_info,-48(%r12)
	leaq -80(%r12),%rax
	movq %rax,-40(%r12)
	leaq -112(%r12),%rax
	movq %rax,-32(%r12)
	leaq -133(%r12),%rax
	movq %rax,-24(%r12)
	leaq -158(%r12),%rax
	movq %rax,-16(%r12)
	leaq -181(%r12),%rax
	movq %rax,-8(%r12)
	leaq -206(%r12),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg9sv:
	movq $216,904(%r13)
	movl $Data.Functor.Product.$fTraversableProduct_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fTraversableProduct_entry, .-Data.Functor.Product.$fTraversableProduct_entry


==================== Asm code ====================
2018-03-16 16:11:56.771543651 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_info
.type Data.Functor.Product.$fTraversableProduct_info, @object
Data.Functor.Product.$fTraversableProduct_info:
	.quad	Data.Functor.Product.$fTraversableProduct_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	Sg5Oh_srt+464


==================== Asm code ====================
2018-03-16 16:11:56.778200638 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$cliftA2_closure
.type Data.Functor.Product.$fApplicativeProduct_$cliftA2_closure, @object
Data.Functor.Product.$fApplicativeProduct_$cliftA2_closure:
	.quad	Data.Functor.Product.$fApplicativeProduct_$cliftA2_info


==================== Asm code ====================
2018-03-16 16:11:56.779169674 UTC

.section .text
.align 8
sat_sg5AB_entry:
_cg9tj:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9tk
_cg9tl:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.liftA2_entry
_cg9tk:
	jmp *-16(%r13)
	.size sat_sg5AB_entry, .-sat_sg5AB_entry


==================== Asm code ====================
2018-03-16 16:11:56.779915461 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5AB_info:
	.quad	sat_sg5AB_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.780735643 UTC

.section .text
.align 8
sat_sg5AA_entry:
_cg9tq:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9tr
_cg9ts:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.liftA2_entry
_cg9tr:
	jmp *-16(%r13)
	.size sat_sg5AA_entry, .-sat_sg5AA_entry


==================== Asm code ====================
2018-03-16 16:11:56.781521254 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5AA_info:
	.quad	sat_sg5AA_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.78241369 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fApplicativeProduct_$cliftA2_entry
.type Data.Functor.Product.$fApplicativeProduct_$cliftA2_entry, @object
Data.Functor.Product.$fApplicativeProduct_$cliftA2_entry:
_cg9tt:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9tv
_cg9tw:
	movq $block_cg9t5_info,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg9t5
_cg9t6:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9tv:
	movl $Data.Functor.Product.$fApplicativeProduct_$cliftA2_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fApplicativeProduct_$cliftA2_entry, .-Data.Functor.Product.$fApplicativeProduct_$cliftA2_entry


==================== Asm code ====================
2018-03-16 16:11:56.783151422 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$cliftA2_info
.type Data.Functor.Product.$fApplicativeProduct_$cliftA2_info, @object
Data.Functor.Product.$fApplicativeProduct_$cliftA2_info:
	.quad	Data.Functor.Product.$fApplicativeProduct_$cliftA2_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:11:56.783948111 UTC

.section .text
.align 8
_cg9t5:
_cg9t5:
	movq $block_cg9ta_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cg9ta
_cg9tb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg9t5, .-_cg9t5


==================== Asm code ====================
2018-03-16 16:11:56.784614132 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9t5_info:
	.quad	_cg9t5
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.785513121 UTC

.section .text
.align 8
_cg9ta:
_cg9ta:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _cg9tA
_cg9tz:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sg5AB_info,-112(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-96(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-88(%r12)
	movq 8(%rbp),%rdx
	movq %rdx,-80(%r12)
	movq %rbx,-72(%r12)
	movq $sat_sg5AA_info,-64(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq %rcx,-40(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	leaq -64(%r12),%rax
	movq %rax,-8(%r12)
	leaq -112(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg9tA:
	movq $120,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg9ta, .-_cg9ta


==================== Asm code ====================
2018-03-16 16:11:56.786320964 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9ta_info:
	.quad	_cg9ta
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.792152197 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$c<*>_closure
.type Data.Functor.Product.$fApplicativeProduct_$c<*>_closure, @object
Data.Functor.Product.$fApplicativeProduct_$c<*>_closure:
	.quad	Data.Functor.Product.$fApplicativeProduct_$c<*>_info


==================== Asm code ====================
2018-03-16 16:11:56.793130957 UTC

.section .text
.align 8
sat_sg5AN_entry:
_cg9ut:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9uu
_cg9uv:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<*>_entry
_cg9uu:
	jmp *-16(%r13)
	.size sat_sg5AN_entry, .-sat_sg5AN_entry


==================== Asm code ====================
2018-03-16 16:11:56.79416532 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5AN_info:
	.quad	sat_sg5AN_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.794950995 UTC

.section .text
.align 8
sat_sg5AM_entry:
_cg9uA:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9uB
_cg9uC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<*>_entry
_cg9uB:
	jmp *-16(%r13)
	.size sat_sg5AM_entry, .-sat_sg5AM_entry


==================== Asm code ====================
2018-03-16 16:11:56.795712841 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5AM_info:
	.quad	sat_sg5AM_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.796619198 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fApplicativeProduct_$c<*>_entry
.type Data.Functor.Product.$fApplicativeProduct_$c<*>_entry, @object
Data.Functor.Product.$fApplicativeProduct_$c<*>_entry:
_cg9uD:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9uF
_cg9uG:
	movq $block_cg9uf_info,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cg9uf
_cg9ug:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9uF:
	movl $Data.Functor.Product.$fApplicativeProduct_$c<*>_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fApplicativeProduct_$c<*>_entry, .-Data.Functor.Product.$fApplicativeProduct_$c<*>_entry


==================== Asm code ====================
2018-03-16 16:11:56.797427141 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$c<*>_info
.type Data.Functor.Product.$fApplicativeProduct_$c<*>_info, @object
Data.Functor.Product.$fApplicativeProduct_$c<*>_info:
	.quad	Data.Functor.Product.$fApplicativeProduct_$c<*>_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:11:56.798250114 UTC

.section .text
.align 8
_cg9uf:
_cg9uf:
	movq $block_cg9uk_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cg9uk
_cg9ul:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg9uf, .-_cg9uf


==================== Asm code ====================
2018-03-16 16:11:56.799457173 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9uf_info:
	.quad	_cg9uf
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.800340834 UTC

.section .text
.align 8
_cg9uk:
_cg9uk:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cg9uK
_cg9uJ:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sg5AN_info,-96(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	movq $sat_sg5AM_info,-56(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg9uK:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg9uk, .-_cg9uk


==================== Asm code ====================
2018-03-16 16:11:56.801055065 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9uk_info:
	.quad	_cg9uk
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.8052937 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$cpure_closure
.type Data.Functor.Product.$fApplicativeProduct_$cpure_closure, @object
Data.Functor.Product.$fApplicativeProduct_$cpure_closure:
	.quad	Data.Functor.Product.$fApplicativeProduct_$cpure_info


==================== Asm code ====================
2018-03-16 16:11:56.806166812 UTC

.section .text
.align 8
sat_sg5AS_entry:
_cg9vr:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9vs
_cg9vt:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.pure_entry
_cg9vs:
	jmp *-16(%r13)
	.size sat_sg5AS_entry, .-sat_sg5AS_entry


==================== Asm code ====================
2018-03-16 16:11:56.806854501 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5AS_info:
	.quad	sat_sg5AS_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:11:56.807667587 UTC

.section .text
.align 8
sat_sg5AR_entry:
_cg9vy:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9vz
_cg9vA:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.pure_entry
_cg9vz:
	jmp *-16(%r13)
	.size sat_sg5AR_entry, .-sat_sg5AR_entry


==================== Asm code ====================
2018-03-16 16:11:56.808373633 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5AR_info:
	.quad	sat_sg5AR_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:11:56.809207656 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fApplicativeProduct_$cpure_entry
.type Data.Functor.Product.$fApplicativeProduct_$cpure_entry, @object
Data.Functor.Product.$fApplicativeProduct_$cpure_entry:
_cg9vC:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cg9vG
_cg9vF:
	movq $sat_sg5AS_info,-80(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq $sat_sg5AR_info,-48(%r12)
	movq %r14,-32(%r12)
	movq %rdi,-24(%r12)
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg9vG:
	movq $88,904(%r13)
	movl $Data.Functor.Product.$fApplicativeProduct_$cpure_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fApplicativeProduct_$cpure_entry, .-Data.Functor.Product.$fApplicativeProduct_$cpure_entry


==================== Asm code ====================
2018-03-16 16:11:56.809993492 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$cpure_info
.type Data.Functor.Product.$fApplicativeProduct_$cpure_info, @object
Data.Functor.Product.$fApplicativeProduct_$cpure_info:
	.quad	Data.Functor.Product.$fApplicativeProduct_$cpure_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:56.814173439 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_closure
.type Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_closure, @object
Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_closure:
	.quad	Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_info


==================== Asm code ====================
2018-03-16 16:11:56.815059948 UTC

.section .text
.align 8
sat_sg5AW_entry:
_cg9w6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9w7
_cg9w8:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Applicative_entry
_cg9w7:
	jmp *-16(%r13)
	.size sat_sg5AW_entry, .-sat_sg5AW_entry


==================== Asm code ====================
2018-03-16 16:11:56.8156956 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5AW_info:
	.quad	sat_sg5AW_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.816355885 UTC

.section .text
.align 8
sat_sg5AV_entry:
_cg9wd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9we
_cg9wf:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Applicative_entry
_cg9we:
	jmp *-16(%r13)
	.size sat_sg5AV_entry, .-sat_sg5AV_entry


==================== Asm code ====================
2018-03-16 16:11:56.816983867 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5AV_info:
	.quad	sat_sg5AV_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.817772994 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_entry
.type Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_entry, @object
Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_entry:
_cg9wg:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cg9wk
_cg9wj:
	movq $sat_sg5AW_info,-40(%r12)
	movq %rsi,-24(%r12)
	movq $sat_sg5AV_info,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp Data.Functor.Product.$fFunctorProduct_entry
_cg9wk:
	movq $48,904(%r13)
	movl $Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_entry, .-Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_entry


==================== Asm code ====================
2018-03-16 16:11:56.818546531 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_info
.type Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_info, @object
Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_info:
	.quad	Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.821033962 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct1_closure
.type Data.Functor.Product.$fApplicativeProduct1_closure, @object
Data.Functor.Product.$fApplicativeProduct1_closure:
	.quad	Data.Functor.Product.$fApplicativeProduct1_info


==================== Asm code ====================
2018-03-16 16:11:56.821866395 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fApplicativeProduct1_entry
.type Data.Functor.Product.$fApplicativeProduct1_entry, @object
Data.Functor.Product.$fApplicativeProduct1_entry:
_cg9wB:
	movq %rsi,%r14
	jmp GHC.Base.breakpoint_entry
	.size Data.Functor.Product.$fApplicativeProduct1_entry, .-Data.Functor.Product.$fApplicativeProduct1_entry


==================== Asm code ====================
2018-03-16 16:11:56.822565126 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct1_info
.type Data.Functor.Product.$fApplicativeProduct1_info, @object
Data.Functor.Product.$fApplicativeProduct1_info:
	.quad	Data.Functor.Product.$fApplicativeProduct1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.830657657 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$c*>_closure
.type Data.Functor.Product.$w$c*>_closure, @object
Data.Functor.Product.$w$c*>_closure:
	.quad	Data.Functor.Product.$w$c*>_info


==================== Asm code ====================
2018-03-16 16:11:56.831653394 UTC

.section .text
.align 8
sat_sg5B8_entry:
_cg9wW:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9wX
_cg9wY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cg9wU_info,-32(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.$p1Applicative_entry
_cg9wX:
	jmp *-16(%r13)
	.size sat_sg5B8_entry, .-sat_sg5B8_entry


==================== Asm code ====================
2018-03-16 16:11:56.832311569 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5B8_info:
	.quad	sat_sg5B8_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:11:56.832988253 UTC

.section .text
.align 8
_cg9wU:
_cg9wU:
	movq %rbx,%r14
	movq $stg_ap_pp_info,-8(%rbp)
	movq $Data.Functor.Product.$fApplicativeProduct1_closure+2,(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.fmap_entry
	.size _cg9wU, .-_cg9wU


==================== Asm code ====================
2018-03-16 16:11:56.833674729 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9wU_info:
	.quad	_cg9wU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.834531913 UTC

.section .text
.align 8
sat_sg5B9_entry:
_cg9x2:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9x3
_cg9x4:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cg9x6
_cg9x5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_sg5B8_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-32(%rbp)
	movq %rbx,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<*>_entry
_cg9x6:
	movq $32,904(%r13)
_cg9x3:
	jmp *-16(%r13)
	.size sat_sg5B9_entry, .-sat_sg5B9_entry


==================== Asm code ====================
2018-03-16 16:11:56.835262807 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5B9_info:
	.quad	sat_sg5B9_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.8360358 UTC

.section .text
.align 8
sat_sg5B5_entry:
_cg9xh:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9xi
_cg9xj:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cg9xf_info,-32(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.$p1Applicative_entry
_cg9xi:
	jmp *-16(%r13)
	.size sat_sg5B5_entry, .-sat_sg5B5_entry


==================== Asm code ====================
2018-03-16 16:11:56.836711289 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5B5_info:
	.quad	sat_sg5B5_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:11:56.838115627 UTC

.section .text
.align 8
_cg9xf:
_cg9xf:
	movq %rbx,%r14
	movq $stg_ap_pp_info,-8(%rbp)
	movq $Data.Functor.Product.$fApplicativeProduct1_closure+2,(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.fmap_entry
	.size _cg9xf, .-_cg9xf


==================== Asm code ====================
2018-03-16 16:11:56.838792861 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9xf_info:
	.quad	_cg9xf
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.839709103 UTC

.section .text
.align 8
sat_sg5B6_entry:
_cg9xn:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9xo
_cg9xp:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cg9xr
_cg9xq:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_sg5B5_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-32(%rbp)
	movq %rbx,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<*>_entry
_cg9xr:
	movq $32,904(%r13)
_cg9xo:
	jmp *-16(%r13)
	.size sat_sg5B6_entry, .-sat_sg5B6_entry


==================== Asm code ====================
2018-03-16 16:11:56.840492097 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5B6_info:
	.quad	sat_sg5B6_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.841389967 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$c*>_entry
.type Data.Functor.Product.$w$c*>_entry, @object
Data.Functor.Product.$w$c*>_entry:
_cg9xs:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cg9xw
_cg9xv:
	movq $sat_sg5B9_info,-72(%r12)
	movq %rsi,-56(%r12)
	movq %r8,-48(%r12)
	movq (%rbp),%rax
	movq %rax,-40(%r12)
	movq $sat_sg5B6_info,-32(%r12)
	movq %r14,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r9,(%r12)
	leaq -72(%r12),%r14
	leaq -32(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg9xw:
	movq $80,904(%r13)
	movl $Data.Functor.Product.$w$c*>_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$c*>_entry, .-Data.Functor.Product.$w$c*>_entry


==================== Asm code ====================
2018-03-16 16:11:56.842158809 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$c*>_info
.type Data.Functor.Product.$w$c*>_info, @object
Data.Functor.Product.$w$c*>_info:
	.quad	Data.Functor.Product.$w$c*>_entry
	.quad	0
	.quad	14
	.quad	25769803802


==================== Asm code ====================
2018-03-16 16:11:56.846775806 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$c*>_closure
.type Data.Functor.Product.$fApplicativeProduct_$c*>_closure, @object
Data.Functor.Product.$fApplicativeProduct_$c*>_closure:
	.quad	Data.Functor.Product.$fApplicativeProduct_$c*>_info


==================== Asm code ====================
2018-03-16 16:11:56.847710462 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fApplicativeProduct_$c*>_entry
.type Data.Functor.Product.$fApplicativeProduct_$c*>_entry, @object
Data.Functor.Product.$fApplicativeProduct_$c*>_entry:
_cg9ya:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9yl
_cg9ym:
	movq $block_cg9y7_info,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cg9y7
_cg9y8:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9yl:
	movl $Data.Functor.Product.$fApplicativeProduct_$c*>_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fApplicativeProduct_$c*>_entry, .-Data.Functor.Product.$fApplicativeProduct_$c*>_entry


==================== Asm code ====================
2018-03-16 16:11:56.848433426 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$c*>_info
.type Data.Functor.Product.$fApplicativeProduct_$c*>_info, @object
Data.Functor.Product.$fApplicativeProduct_$c*>_info:
	.quad	Data.Functor.Product.$fApplicativeProduct_$c*>_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:11:56.849270069 UTC

.section .text
.align 8
_cg9y7:
_cg9y7:
	movq $block_cg9yd_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cg9yd
_cg9ye:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg9y7, .-_cg9y7


==================== Asm code ====================
2018-03-16 16:11:56.84997158 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9y7_info:
	.quad	_cg9y7
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.850694983 UTC

.section .text
.align 8
_cg9yd:
_cg9yd:
	movq 32(%rbp),%rax
	movq $block_cg9yi_info,32(%rbp)
	movq 7(%rbx),%r9
	movq 8(%rbp),%r8
	movq %rax,%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,24(%rbp)
	addq $24,%rbp
	jmp Data.Functor.Product.$w$c*>_entry
	.size _cg9yd, .-_cg9yd


==================== Asm code ====================
2018-03-16 16:11:56.851400606 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9yd_info:
	.quad	_cg9yd
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.852233856 UTC

.section .text
.align 8
_cg9yi:
_cg9yi:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cg9yr
_cg9yq:
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg9yr:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _cg9yi, .-_cg9yi


==================== Asm code ====================
2018-03-16 16:11:56.852913263 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9yi_info:
	.quad	_cg9yi
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.859891238 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$c<*_closure
.type Data.Functor.Product.$fApplicativeProduct_$c<*_closure, @object
Data.Functor.Product.$fApplicativeProduct_$c<*_closure:
	.quad	Data.Functor.Product.$fApplicativeProduct_$c<*_info


==================== Asm code ====================
2018-03-16 16:11:56.86081095 UTC

.section .text
.align 8
sat_sg5By_entry:
_cg9z4:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9z5
_cg9z6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq $GHC.Base.const_closure+2,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.liftA2_entry
_cg9z5:
	jmp *-16(%r13)
	.size sat_sg5By_entry, .-sat_sg5By_entry


==================== Asm code ====================
2018-03-16 16:11:56.861522208 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5By_info:
	.quad	sat_sg5By_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.862249817 UTC

.section .text
.align 8
sat_sg5Bx_entry:
_cg9zb:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9zc
_cg9zd:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq $GHC.Base.const_closure+2,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.liftA2_entry
_cg9zc:
	jmp *-16(%r13)
	.size sat_sg5Bx_entry, .-sat_sg5Bx_entry


==================== Asm code ====================
2018-03-16 16:11:56.862981079 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Bx_info:
	.quad	sat_sg5Bx_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.863757901 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fApplicativeProduct_$c<*_entry
.type Data.Functor.Product.$fApplicativeProduct_$c<*_entry, @object
Data.Functor.Product.$fApplicativeProduct_$c<*_entry:
_cg9ze:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9zg
_cg9zh:
	movq $block_cg9yQ_info,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cg9yQ
_cg9yR:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9zg:
	movl $Data.Functor.Product.$fApplicativeProduct_$c<*_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fApplicativeProduct_$c<*_entry, .-Data.Functor.Product.$fApplicativeProduct_$c<*_entry


==================== Asm code ====================
2018-03-16 16:11:56.864473825 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$c<*_info
.type Data.Functor.Product.$fApplicativeProduct_$c<*_info, @object
Data.Functor.Product.$fApplicativeProduct_$c<*_info:
	.quad	Data.Functor.Product.$fApplicativeProduct_$c<*_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:11:56.865306797 UTC

.section .text
.align 8
_cg9yQ:
_cg9yQ:
	movq $block_cg9yV_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cg9yV
_cg9yW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg9yQ, .-_cg9yQ


==================== Asm code ====================
2018-03-16 16:11:56.865946663 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9yQ_info:
	.quad	_cg9yQ
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.866804552 UTC

.section .text
.align 8
_cg9yV:
_cg9yV:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cg9zl
_cg9zk:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sg5By_info,-96(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	movq $sat_sg5Bx_info,-56(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg9zl:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg9yV, .-_cg9yV


==================== Asm code ====================
2018-03-16 16:11:56.867573373 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9yV_info:
	.quad	_cg9yV
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.874683489 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_closure
.type Data.Functor.Product.$fApplicativeProduct_closure, @object
Data.Functor.Product.$fApplicativeProduct_closure:
	.quad	Data.Functor.Product.$fApplicativeProduct_info


==================== Asm code ====================
2018-03-16 16:11:56.875484643 UTC

.section .text
.align 8
sat_sg5BG_entry:
_cg9A3:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fApplicativeProduct_$c<*_entry
	.size sat_sg5BG_entry, .-sat_sg5BG_entry


==================== Asm code ====================
2018-03-16 16:11:56.876088346 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5BG_info:
	.quad	sat_sg5BG_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.876775922 UTC

.section .text
.align 8
sat_sg5BF_entry:
_cg9Ab:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fApplicativeProduct_$c*>_entry
	.size sat_sg5BF_entry, .-sat_sg5BF_entry


==================== Asm code ====================
2018-03-16 16:11:56.877433394 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5BF_info:
	.quad	sat_sg5BF_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.87815103 UTC

.section .text
.align 8
sat_sg5BE_entry:
_cg9Aj:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$fApplicativeProduct_$cliftA2_entry
	.size sat_sg5BE_entry, .-sat_sg5BE_entry


==================== Asm code ====================
2018-03-16 16:11:56.878772545 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5BE_info:
	.quad	sat_sg5BE_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:56.87943022 UTC

.section .text
.align 8
sat_sg5BD_entry:
_cg9Ar:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fApplicativeProduct_$c<*>_entry
	.size sat_sg5BD_entry, .-sat_sg5BD_entry


==================== Asm code ====================
2018-03-16 16:11:56.880038085 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5BD_info:
	.quad	sat_sg5BD_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.880688909 UTC

.section .text
.align 8
sat_sg5BC_entry:
_cg9Az:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fApplicativeProduct_$cpure_entry
	.size sat_sg5BC_entry, .-sat_sg5BC_entry


==================== Asm code ====================
2018-03-16 16:11:56.881481425 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5BC_info:
	.quad	sat_sg5BC_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:56.882236396 UTC

.section .text
.align 8
sat_sg5BB_entry:
_cg9AG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9AH
_cg9AI:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_entry
_cg9AH:
	jmp *-16(%r13)
	.size sat_sg5BB_entry, .-sat_sg5BB_entry


==================== Asm code ====================
2018-03-16 16:11:56.8829117 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5BB_info:
	.quad	sat_sg5BB_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:11:56.883830226 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fApplicativeProduct_entry
.type Data.Functor.Product.$fApplicativeProduct_entry, @object
Data.Functor.Product.$fApplicativeProduct_entry:
_cg9AK:
	addq $208,%r12
	cmpq 856(%r13),%r12
	ja _cg9AO
_cg9AN:
	movq $sat_sg5BG_info,-200(%r12)
	movq %r14,-192(%r12)
	movq %rsi,-184(%r12)
	movq $sat_sg5BF_info,-176(%r12)
	movq %r14,-168(%r12)
	movq %rsi,-160(%r12)
	movq $sat_sg5BE_info,-152(%r12)
	movq %r14,-144(%r12)
	movq %rsi,-136(%r12)
	movq $sat_sg5BD_info,-128(%r12)
	movq %r14,-120(%r12)
	movq %rsi,-112(%r12)
	movq $sat_sg5BC_info,-104(%r12)
	movq %r14,-96(%r12)
	movq %rsi,-88(%r12)
	movq $sat_sg5BB_info,-80(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq $GHC.Base.C:Applicative_con_info,-48(%r12)
	leaq -80(%r12),%rax
	movq %rax,-40(%r12)
	leaq -103(%r12),%rax
	movq %rax,-32(%r12)
	leaq -126(%r12),%rax
	movq %rax,-24(%r12)
	leaq -149(%r12),%rax
	movq %rax,-16(%r12)
	leaq -174(%r12),%rax
	movq %rax,-8(%r12)
	leaq -198(%r12),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg9AO:
	movq $208,904(%r13)
	movl $Data.Functor.Product.$fApplicativeProduct_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fApplicativeProduct_entry, .-Data.Functor.Product.$fApplicativeProduct_entry


==================== Asm code ====================
2018-03-16 16:11:56.884796229 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_info
.type Data.Functor.Product.$fApplicativeProduct_info, @object
Data.Functor.Product.$fApplicativeProduct_info:
	.quad	Data.Functor.Product.$fApplicativeProduct_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.891541179 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fAlternativeProduct_$c<|>_closure
.type Data.Functor.Product.$fAlternativeProduct_$c<|>_closure, @object
Data.Functor.Product.$fAlternativeProduct_$c<|>_closure:
	.quad	Data.Functor.Product.$fAlternativeProduct_$c<|>_info


==================== Asm code ====================
2018-03-16 16:11:56.892500743 UTC

.section .text
.align 8
sat_sg5BS_entry:
_cg9BB:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9BC
_cg9BD:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<|>_entry
_cg9BC:
	jmp *-16(%r13)
	.size sat_sg5BS_entry, .-sat_sg5BS_entry


==================== Asm code ====================
2018-03-16 16:11:56.893207482 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5BS_info:
	.quad	sat_sg5BS_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.894036938 UTC

.section .text
.align 8
sat_sg5BR_entry:
_cg9BI:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9BJ
_cg9BK:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<|>_entry
_cg9BJ:
	jmp *-16(%r13)
	.size sat_sg5BR_entry, .-sat_sg5BR_entry


==================== Asm code ====================
2018-03-16 16:11:56.894726721 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5BR_info:
	.quad	sat_sg5BR_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.895545096 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fAlternativeProduct_$c<|>_entry
.type Data.Functor.Product.$fAlternativeProduct_$c<|>_entry, @object
Data.Functor.Product.$fAlternativeProduct_$c<|>_entry:
_cg9BL:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9BN
_cg9BO:
	movq $block_cg9Bn_info,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cg9Bn
_cg9Bo:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9BN:
	movl $Data.Functor.Product.$fAlternativeProduct_$c<|>_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fAlternativeProduct_$c<|>_entry, .-Data.Functor.Product.$fAlternativeProduct_$c<|>_entry


==================== Asm code ====================
2018-03-16 16:11:56.896269646 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fAlternativeProduct_$c<|>_info
.type Data.Functor.Product.$fAlternativeProduct_$c<|>_info, @object
Data.Functor.Product.$fAlternativeProduct_$c<|>_info:
	.quad	Data.Functor.Product.$fAlternativeProduct_$c<|>_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:11:56.897076459 UTC

.section .text
.align 8
_cg9Bn:
_cg9Bn:
	movq $block_cg9Bs_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cg9Bs
_cg9Bt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg9Bn, .-_cg9Bn


==================== Asm code ====================
2018-03-16 16:11:56.897822138 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9Bn_info:
	.quad	_cg9Bn
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.898712068 UTC

.section .text
.align 8
_cg9Bs:
_cg9Bs:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cg9BS
_cg9BR:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sg5BS_info,-96(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	movq $sat_sg5BR_info,-56(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg9BS:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg9Bs, .-_cg9Bs


==================== Asm code ====================
2018-03-16 16:11:56.899494198 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9Bs_info:
	.quad	_cg9Bs
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.903871324 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fAlternativeProduct_$cempty_closure
.type Data.Functor.Product.$fAlternativeProduct_$cempty_closure, @object
Data.Functor.Product.$fAlternativeProduct_$cempty_closure:
	.quad	Data.Functor.Product.$fAlternativeProduct_$cempty_info


==================== Asm code ====================
2018-03-16 16:11:56.904731048 UTC

.section .text
.align 8
sat_sg5BW_entry:
_cg9Cz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9CA
_cg9CB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.empty_entry
_cg9CA:
	jmp *-16(%r13)
	.size sat_sg5BW_entry, .-sat_sg5BW_entry


==================== Asm code ====================
2018-03-16 16:11:56.905406944 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5BW_info:
	.quad	sat_sg5BW_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.906123358 UTC

.section .text
.align 8
sat_sg5BV_entry:
_cg9CG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9CH
_cg9CI:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.empty_entry
_cg9CH:
	jmp *-16(%r13)
	.size sat_sg5BV_entry, .-sat_sg5BV_entry


==================== Asm code ====================
2018-03-16 16:11:56.906766022 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5BV_info:
	.quad	sat_sg5BV_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.907664141 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fAlternativeProduct_$cempty_entry
.type Data.Functor.Product.$fAlternativeProduct_$cempty_entry, @object
Data.Functor.Product.$fAlternativeProduct_$cempty_entry:
_cg9CK:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cg9CO
_cg9CN:
	movq $sat_sg5BW_info,-64(%r12)
	movq %rsi,-48(%r12)
	movq $sat_sg5BV_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg9CO:
	movq $72,904(%r13)
	movl $Data.Functor.Product.$fAlternativeProduct_$cempty_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fAlternativeProduct_$cempty_entry, .-Data.Functor.Product.$fAlternativeProduct_$cempty_entry


==================== Asm code ====================
2018-03-16 16:11:56.908428108 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fAlternativeProduct_$cempty_info
.type Data.Functor.Product.$fAlternativeProduct_$cempty_info, @object
Data.Functor.Product.$fAlternativeProduct_$cempty_info:
	.quad	Data.Functor.Product.$fAlternativeProduct_$cempty_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.912602234 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_closure
.type Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_closure, @object
Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_closure:
	.quad	Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_info


==================== Asm code ====================
2018-03-16 16:11:56.91359154 UTC

.section .text
.align 8
sat_sg5C0_entry:
_cg9Dc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Dd
_cg9De:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Alternative_entry
_cg9Dd:
	jmp *-16(%r13)
	.size sat_sg5C0_entry, .-sat_sg5C0_entry


==================== Asm code ====================
2018-03-16 16:11:56.914300806 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5C0_info:
	.quad	sat_sg5C0_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.91507664 UTC

.section .text
.align 8
sat_sg5BZ_entry:
_cg9Dj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Dk
_cg9Dl:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Alternative_entry
_cg9Dk:
	jmp *-16(%r13)
	.size sat_sg5BZ_entry, .-sat_sg5BZ_entry


==================== Asm code ====================
2018-03-16 16:11:56.915754688 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5BZ_info:
	.quad	sat_sg5BZ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.916628854 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_entry
.type Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_entry, @object
Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_entry:
_cg9Dm:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cg9Dq
_cg9Dp:
	movq $sat_sg5C0_info,-40(%r12)
	movq %rsi,-24(%r12)
	movq $sat_sg5BZ_info,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp Data.Functor.Product.$fApplicativeProduct_entry
_cg9Dq:
	movq $48,904(%r13)
	movl $Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_entry, .-Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_entry


==================== Asm code ====================
2018-03-16 16:11:56.917697252 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_info
.type Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_info, @object
Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_info:
	.quad	Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.921229844 UTC

.section .data
.align 8
.align 1
poly_some_v_rg5o0_closure:
	.quad	poly_some_v_rg5o0_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.922238547 UTC

.section .text
.align 8
poly_some_v_rg5o0_entry:
_cg9DJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9DK
_cg9DL:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cg9DI
_cg9DH:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $poly_some_v_rg5o0_closure,%ebx
	addq $-16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cg9DK:
	jmp *-16(%r13)
_cg9DI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size poly_some_v_rg5o0_entry, .-poly_some_v_rg5o0_entry


==================== Asm code ====================
2018-03-16 16:11:56.922968626 UTC

.section .data.rel.ro
.align 8
.align 1
poly_some_v_rg5o0_info:
	.quad	poly_some_v_rg5o0_entry
	.quad	0
	.quad	4294967317
	.quad	Sg5Oh_srt+480


==================== Asm code ====================
2018-03-16 16:11:56.926133735 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fAlternativeProduct_$csome_closure
.type Data.Functor.Product.$fAlternativeProduct_$csome_closure, @object
Data.Functor.Product.$fAlternativeProduct_$csome_closure:
	.quad	Data.Functor.Product.$fAlternativeProduct_$csome_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.927077265 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fAlternativeProduct_$csome_entry
.type Data.Functor.Product.$fAlternativeProduct_$csome_entry, @object
Data.Functor.Product.$fAlternativeProduct_$csome_entry:
_cg9E1:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9E2
_cg9E3:
	movq $block_cg9DY_info,-8(%rbp)
	movq %rdi,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cg9DY
_cg9DZ:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9E2:
	movl $Data.Functor.Product.$fAlternativeProduct_$csome_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fAlternativeProduct_$csome_entry, .-Data.Functor.Product.$fAlternativeProduct_$csome_entry


==================== Asm code ====================
2018-03-16 16:11:56.927816283 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fAlternativeProduct_$csome_info
.type Data.Functor.Product.$fAlternativeProduct_$csome_info, @object
Data.Functor.Product.$fAlternativeProduct_$csome_info:
	.quad	Data.Functor.Product.$fAlternativeProduct_$csome_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	Sg5Oh_srt+480


==================== Asm code ====================
2018-03-16 16:11:56.928574193 UTC

.section .text
.align 8
_cg9DY:
_cg9DY:
	movl $poly_some_v_rg5o0_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg9DY, .-_cg9DY


==================== Asm code ====================
2018-03-16 16:11:56.92916837 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9DY_info:
	.quad	_cg9DY
	.quad	0
	.quad	4294967326
	.quad	Sg5Oh_srt+480


==================== Asm code ====================
2018-03-16 16:11:56.935703272 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fAlternativeProduct_closure
.type Data.Functor.Product.$fAlternativeProduct_closure, @object
Data.Functor.Product.$fAlternativeProduct_closure:
	.quad	Data.Functor.Product.$fAlternativeProduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:56.936508996 UTC

.section .text
.align 8
sat_sg5Cd_entry:
_cg9Er:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fAlternativeProduct_$csome_entry
	.size sat_sg5Cd_entry, .-sat_sg5Cd_entry


==================== Asm code ====================
2018-03-16 16:11:56.93714166 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Cd_info:
	.quad	sat_sg5Cd_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	Sg5Oh_srt+488


==================== Asm code ====================
2018-03-16 16:11:56.937885151 UTC

.section .text
.align 8
sat_sg5Cc_entry:
_cg9Ez:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fAlternativeProduct_$csome_entry
	.size sat_sg5Cc_entry, .-sat_sg5Cc_entry


==================== Asm code ====================
2018-03-16 16:11:56.938535825 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Cc_info:
	.quad	sat_sg5Cc_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	Sg5Oh_srt+488


==================== Asm code ====================
2018-03-16 16:11:56.939244973 UTC

.section .text
.align 8
sat_sg5Cb_entry:
_cg9EH:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fAlternativeProduct_$c<|>_entry
	.size sat_sg5Cb_entry, .-sat_sg5Cb_entry


==================== Asm code ====================
2018-03-16 16:11:56.939901141 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Cb_info:
	.quad	sat_sg5Cb_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.940760313 UTC

.section .text
.align 8
sat_sg5Ca_entry:
_cg9EO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9EP
_cg9EQ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fAlternativeProduct_$cempty_entry
_cg9EP:
	jmp *-16(%r13)
	.size sat_sg5Ca_entry, .-sat_sg5Ca_entry


==================== Asm code ====================
2018-03-16 16:11:56.94153931 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Ca_info:
	.quad	sat_sg5Ca_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:11:56.942375363 UTC

.section .text
.align 8
sat_sg5C9_entry:
_cg9EV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9EW
_cg9EX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_entry
_cg9EW:
	jmp *-16(%r13)
	.size sat_sg5C9_entry, .-sat_sg5C9_entry


==================== Asm code ====================
2018-03-16 16:11:56.943119337 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5C9_info:
	.quad	sat_sg5C9_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:11:56.944110589 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fAlternativeProduct_entry
.type Data.Functor.Product.$fAlternativeProduct_entry, @object
Data.Functor.Product.$fAlternativeProduct_entry:
_cg9EZ:
	addq $184,%r12
	cmpq 856(%r13),%r12
	ja _cg9F3
_cg9F2:
	movq $sat_sg5Cd_info,-176(%r12)
	movq %r14,-168(%r12)
	movq %rsi,-160(%r12)
	movq $sat_sg5Cc_info,-152(%r12)
	movq %r14,-144(%r12)
	movq %rsi,-136(%r12)
	movq $sat_sg5Cb_info,-128(%r12)
	movq %r14,-120(%r12)
	movq %rsi,-112(%r12)
	movq $sat_sg5Ca_info,-104(%r12)
	movq %r14,-88(%r12)
	movq %rsi,-80(%r12)
	movq $sat_sg5C9_info,-72(%r12)
	movq %r14,-56(%r12)
	movq %rsi,-48(%r12)
	movq $GHC.Base.C:Alternative_con_info,-40(%r12)
	leaq -72(%r12),%rax
	movq %rax,-32(%r12)
	leaq -104(%r12),%rax
	movq %rax,-24(%r12)
	leaq -126(%r12),%rax
	movq %rax,-16(%r12)
	leaq -151(%r12),%rax
	movq %rax,-8(%r12)
	leaq -175(%r12),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg9F3:
	movq $184,904(%r13)
	movl $Data.Functor.Product.$fAlternativeProduct_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fAlternativeProduct_entry, .-Data.Functor.Product.$fAlternativeProduct_entry


==================== Asm code ====================
2018-03-16 16:11:56.945003642 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fAlternativeProduct_info
.type Data.Functor.Product.$fAlternativeProduct_info, @object
Data.Functor.Product.$fAlternativeProduct_info:
	.quad	Data.Functor.Product.$fAlternativeProduct_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	Sg5Oh_srt+488


==================== Asm code ====================
2018-03-16 16:11:56.953784485 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadProduct_$c>>=_closure
.type Data.Functor.Product.$fMonadProduct_$c>>=_closure, @object
Data.Functor.Product.$fMonadProduct_$c>>=_closure:
	.quad	Data.Functor.Product.$fMonadProduct_$c>>=_info


==================== Asm code ====================
2018-03-16 16:11:56.954683629 UTC

.section .text
.align 8
sat_sg5Cv_entry:
_cg9FP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9FQ
_cg9FR:
	movq $block_cg9FN_info,-8(%rbp)
	movq 7(%rbx),%rbx
	addq $-8,%rbp
	jmp stg_ap_p_fast
_cg9FQ:
	jmp *-8(%r13)
	.size sat_sg5Cv_entry, .-sat_sg5Cv_entry


==================== Asm code ====================
2018-03-16 16:11:56.955349629 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Cv_info:
	.quad	sat_sg5Cv_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:56.956030947 UTC

.section .text
.align 8
_cg9FN:
_cg9FN:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cg9FN, .-_cg9FN


==================== Asm code ====================
2018-03-16 16:11:56.956624707 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9FN_info:
	.quad	_cg9FN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.957509902 UTC

.section .text
.align 8
sat_sg5Cw_entry:
_cg9FV:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9FW
_cg9FX:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cg9FZ
_cg9FY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_sg5Cv_info,-8(%r12)
	movq %rcx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq %rbx,-32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.>>=_entry
_cg9FZ:
	movq $16,904(%r13)
_cg9FW:
	jmp *-16(%r13)
	.size sat_sg5Cw_entry, .-sat_sg5Cw_entry


==================== Asm code ====================
2018-03-16 16:11:56.958277219 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Cw_info:
	.quad	sat_sg5Cw_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.959009731 UTC

.section .text
.align 8
sat_sg5Cp_entry:
_cg9Gb:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Gc
_cg9Gd:
	movq $block_cg9G9_info,-8(%rbp)
	movq 7(%rbx),%rbx
	addq $-8,%rbp
	jmp stg_ap_p_fast
_cg9Gc:
	jmp *-8(%r13)
	.size sat_sg5Cp_entry, .-sat_sg5Cp_entry


==================== Asm code ====================
2018-03-16 16:11:56.959670319 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Cp_info:
	.quad	sat_sg5Cp_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:56.960339083 UTC

.section .text
.align 8
_cg9G9:
_cg9G9:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cg9G9, .-_cg9G9


==================== Asm code ====================
2018-03-16 16:11:56.960934087 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9G9_info:
	.quad	_cg9G9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.961832889 UTC

.section .text
.align 8
sat_sg5Cq_entry:
_cg9Gh:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Gi
_cg9Gj:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cg9Gl
_cg9Gk:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_sg5Cp_info,-8(%r12)
	movq %rcx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq %rbx,-32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.>>=_entry
_cg9Gl:
	movq $16,904(%r13)
_cg9Gi:
	jmp *-16(%r13)
	.size sat_sg5Cq_entry, .-sat_sg5Cq_entry


==================== Asm code ====================
2018-03-16 16:11:56.962583195 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Cq_info:
	.quad	sat_sg5Cq_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:56.963409332 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadProduct_$c>>=_entry
.type Data.Functor.Product.$fMonadProduct_$c>>=_entry, @object
Data.Functor.Product.$fMonadProduct_$c>>=_entry:
_cg9Gm:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Go
_cg9Gp:
	movq $block_cg9Fz_info,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cg9Fz
_cg9FA:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9Go:
	movl $Data.Functor.Product.$fMonadProduct_$c>>=_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadProduct_$c>>=_entry, .-Data.Functor.Product.$fMonadProduct_$c>>=_entry


==================== Asm code ====================
2018-03-16 16:11:56.964122911 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadProduct_$c>>=_info
.type Data.Functor.Product.$fMonadProduct_$c>>=_info, @object
Data.Functor.Product.$fMonadProduct_$c>>=_info:
	.quad	Data.Functor.Product.$fMonadProduct_$c>>=_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:11:56.96500842 UTC

.section .text
.align 8
_cg9Fz:
_cg9Fz:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cg9Gs
_cg9Gr:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sg5Cw_info,-96(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	movq $sat_sg5Cq_info,-56(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg9Gs:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg9Fz, .-_cg9Fz


==================== Asm code ====================
2018-03-16 16:11:56.965841558 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9Fz_info:
	.quad	_cg9Fz
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.969909458 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadProduct_$cp1Monad_closure
.type Data.Functor.Product.$fMonadProduct_$cp1Monad_closure, @object
Data.Functor.Product.$fMonadProduct_$cp1Monad_closure:
	.quad	Data.Functor.Product.$fMonadProduct_$cp1Monad_info


==================== Asm code ====================
2018-03-16 16:11:56.970841676 UTC

.section .text
.align 8
sat_sg5CA_entry:
_cg9He:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Hf
_cg9Hg:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monad_entry
_cg9Hf:
	jmp *-16(%r13)
	.size sat_sg5CA_entry, .-sat_sg5CA_entry


==================== Asm code ====================
2018-03-16 16:11:56.971552827 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5CA_info:
	.quad	sat_sg5CA_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.972338567 UTC

.section .text
.align 8
sat_sg5Cz_entry:
_cg9Hl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Hm
_cg9Hn:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monad_entry
_cg9Hm:
	jmp *-16(%r13)
	.size sat_sg5Cz_entry, .-sat_sg5Cz_entry


==================== Asm code ====================
2018-03-16 16:11:56.973018601 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Cz_info:
	.quad	sat_sg5Cz_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:56.974178785 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadProduct_$cp1Monad_entry
.type Data.Functor.Product.$fMonadProduct_$cp1Monad_entry, @object
Data.Functor.Product.$fMonadProduct_$cp1Monad_entry:
_cg9Ho:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cg9Hs
_cg9Hr:
	movq $sat_sg5CA_info,-40(%r12)
	movq %rsi,-24(%r12)
	movq $sat_sg5Cz_info,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp Data.Functor.Product.$fApplicativeProduct_entry
_cg9Hs:
	movq $48,904(%r13)
	movl $Data.Functor.Product.$fMonadProduct_$cp1Monad_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadProduct_$cp1Monad_entry, .-Data.Functor.Product.$fMonadProduct_$cp1Monad_entry


==================== Asm code ====================
2018-03-16 16:11:56.974922761 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadProduct_$cp1Monad_info
.type Data.Functor.Product.$fMonadProduct_$cp1Monad_info, @object
Data.Functor.Product.$fMonadProduct_$cp1Monad_info:
	.quad	Data.Functor.Product.$fMonadProduct_$cp1Monad_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:56.980467647 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadProduct_$creturn_closure
.type Data.Functor.Product.$fMonadProduct_$creturn_closure, @object
Data.Functor.Product.$fMonadProduct_$creturn_closure:
	.quad	Data.Functor.Product.$fMonadProduct_$creturn_info


==================== Asm code ====================
2018-03-16 16:11:56.981427173 UTC

.section .text
.align 8
sat_sg5CH_entry:
_cg9HP:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9HQ
_cg9HR:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cg9HN_info,-32(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.$p1Monad_entry
_cg9HQ:
	jmp *-16(%r13)
	.size sat_sg5CH_entry, .-sat_sg5CH_entry


==================== Asm code ====================
2018-03-16 16:11:56.982092153 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5CH_info:
	.quad	sat_sg5CH_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:11:56.982740245 UTC

.section .text
.align 8
_cg9HN:
_cg9HN:
	movq %rbx,%r14
	movq $stg_ap_p_info,(%rbp)
	jmp GHC.Base.pure_entry
	.size _cg9HN, .-_cg9HN


==================== Asm code ====================
2018-03-16 16:11:56.983336033 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9HN_info:
	.quad	_cg9HN
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.984067292 UTC

.section .text
.align 8
sat_sg5CF_entry:
_cg9I1:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9I2
_cg9I3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cg9HZ_info,-32(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.$p1Monad_entry
_cg9I2:
	jmp *-16(%r13)
	.size sat_sg5CF_entry, .-sat_sg5CF_entry


==================== Asm code ====================
2018-03-16 16:11:56.984763738 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5CF_info:
	.quad	sat_sg5CF_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:11:56.985883977 UTC

.section .text
.align 8
_cg9HZ:
_cg9HZ:
	movq %rbx,%r14
	movq $stg_ap_p_info,(%rbp)
	jmp GHC.Base.pure_entry
	.size _cg9HZ, .-_cg9HZ


==================== Asm code ====================
2018-03-16 16:11:56.986494806 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9HZ_info:
	.quad	_cg9HZ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:56.987378076 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadProduct_$creturn_entry
.type Data.Functor.Product.$fMonadProduct_$creturn_entry, @object
Data.Functor.Product.$fMonadProduct_$creturn_entry:
_cg9I8:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cg9Ic
_cg9Ib:
	movq $sat_sg5CH_info,-80(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq $sat_sg5CF_info,-48(%r12)
	movq %r14,-32(%r12)
	movq %rdi,-24(%r12)
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg9Ic:
	movq $88,904(%r13)
	movl $Data.Functor.Product.$fMonadProduct_$creturn_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadProduct_$creturn_entry, .-Data.Functor.Product.$fMonadProduct_$creturn_entry


==================== Asm code ====================
2018-03-16 16:11:56.988092769 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadProduct_$creturn_info
.type Data.Functor.Product.$fMonadProduct_$creturn_info, @object
Data.Functor.Product.$fMonadProduct_$creturn_info:
	.quad	Data.Functor.Product.$fMonadProduct_$creturn_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:56.995990062 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadProduct_$c>>_closure
.type Data.Functor.Product.$fMonadProduct_$c>>_closure, @object
Data.Functor.Product.$fMonadProduct_$c>>_closure:
	.quad	Data.Functor.Product.$fMonadProduct_$c>>_info


==================== Asm code ====================
2018-03-16 16:11:56.996900335 UTC

.section .text
.align 8
sat_sg5CZ_entry:
_cg9IV:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9IW
_cg9IX:
	movq $block_cg9IS_info,-8(%rbp)
	movq 7(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cg9IS
_cg9IT:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9IW:
	jmp *-8(%r13)
	.size sat_sg5CZ_entry, .-sat_sg5CZ_entry


==================== Asm code ====================
2018-03-16 16:11:56.998005226 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5CZ_info:
	.quad	sat_sg5CZ_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:56.998672503 UTC

.section .text
.align 8
_cg9IS:
_cg9IS:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cg9IS, .-_cg9IS


==================== Asm code ====================
2018-03-16 16:11:56.999288888 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9IS_info:
	.quad	_cg9IS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.000136147 UTC

.section .text
.align 8
sat_sg5D0_entry:
_cg9J2:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9J3
_cg9J4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cg9J6
_cg9J5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_sg5CZ_info,-8(%r12)
	movq %rcx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq %rbx,-32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.>>=_entry
_cg9J6:
	movq $16,904(%r13)
_cg9J3:
	jmp *-16(%r13)
	.size sat_sg5D0_entry, .-sat_sg5D0_entry


==================== Asm code ====================
2018-03-16 16:11:57.000844545 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5D0_info:
	.quad	sat_sg5D0_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.001649912 UTC

.section .text
.align 8
sat_sg5CT_entry:
_cg9Jj:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Jk
_cg9Jl:
	movq $block_cg9Jg_info,-8(%rbp)
	movq 7(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cg9Jg
_cg9Jh:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9Jk:
	jmp *-8(%r13)
	.size sat_sg5CT_entry, .-sat_sg5CT_entry


==================== Asm code ====================
2018-03-16 16:11:57.00232864 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5CT_info:
	.quad	sat_sg5CT_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:57.002993398 UTC

.section .text
.align 8
_cg9Jg:
_cg9Jg:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cg9Jg, .-_cg9Jg


==================== Asm code ====================
2018-03-16 16:11:57.00360735 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9Jg_info:
	.quad	_cg9Jg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.004463418 UTC

.section .text
.align 8
sat_sg5CU_entry:
_cg9Jq:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Jr
_cg9Js:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cg9Ju
_cg9Jt:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_sg5CT_info,-8(%r12)
	movq %rcx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq %rbx,-32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.>>=_entry
_cg9Ju:
	movq $16,904(%r13)
_cg9Jr:
	jmp *-16(%r13)
	.size sat_sg5CU_entry, .-sat_sg5CU_entry


==================== Asm code ====================
2018-03-16 16:11:57.005283871 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5CU_info:
	.quad	sat_sg5CU_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.006175488 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadProduct_$c>>_entry
.type Data.Functor.Product.$fMonadProduct_$c>>_entry, @object
Data.Functor.Product.$fMonadProduct_$c>>_entry:
_cg9Jv:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Jx
_cg9Jy:
	movq $block_cg9IE_info,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cg9IE
_cg9IF:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9Jx:
	movl $Data.Functor.Product.$fMonadProduct_$c>>_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadProduct_$c>>_entry, .-Data.Functor.Product.$fMonadProduct_$c>>_entry


==================== Asm code ====================
2018-03-16 16:11:57.00687917 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadProduct_$c>>_info
.type Data.Functor.Product.$fMonadProduct_$c>>_info, @object
Data.Functor.Product.$fMonadProduct_$c>>_info:
	.quad	Data.Functor.Product.$fMonadProduct_$c>>_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:11:57.00780536 UTC

.section .text
.align 8
_cg9IE:
_cg9IE:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cg9JB
_cg9JA:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sg5D0_info,-96(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	movq $sat_sg5CU_info,-56(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg9JB:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg9IE, .-_cg9IE


==================== Asm code ====================
2018-03-16 16:11:57.009130706 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9IE_info:
	.quad	_cg9IE
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.011543439 UTC

.section .data
.align 8
.align 1
lvl4_rg5o1_closure:
	.quad	lvl4_rg5o1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.012255893 UTC

.section .text
.align 8
lvl4_rg5o1_entry:
_cg9Kl:
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size lvl4_rg5o1_entry, .-lvl4_rg5o1_entry


==================== Asm code ====================
2018-03-16 16:11:57.012846878 UTC

.section .data.rel.ro
.align 8
.align 1
lvl4_rg5o1_info:
	.quad	lvl4_rg5o1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	Sg5Oh_srt+504


==================== Asm code ====================
2018-03-16 16:11:57.018282555 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadProduct_closure
.type Data.Functor.Product.$fMonadProduct_closure, @object
Data.Functor.Product.$fMonadProduct_closure:
	.quad	Data.Functor.Product.$fMonadProduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.019047833 UTC

.section .text
.align 8
sat_sg5D7_entry:
_cg9KB:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fMonadProduct_$creturn_entry
	.size sat_sg5D7_entry, .-sat_sg5D7_entry


==================== Asm code ====================
2018-03-16 16:11:57.019679635 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5D7_info:
	.quad	sat_sg5D7_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:57.02032988 UTC

.section .text
.align 8
sat_sg5D6_entry:
_cg9KJ:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fMonadProduct_$c>>_entry
	.size sat_sg5D6_entry, .-sat_sg5D6_entry


==================== Asm code ====================
2018-03-16 16:11:57.020909061 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5D6_info:
	.quad	sat_sg5D6_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:57.021637961 UTC

.section .text
.align 8
sat_sg5D5_entry:
_cg9KR:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fMonadProduct_$c>>=_entry
	.size sat_sg5D5_entry, .-sat_sg5D5_entry


==================== Asm code ====================
2018-03-16 16:11:57.022288841 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5D5_info:
	.quad	sat_sg5D5_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:57.02304975 UTC

.section .text
.align 8
sat_sg5D4_entry:
_cg9KY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9KZ
_cg9L0:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fMonadProduct_$cp1Monad_entry
_cg9KZ:
	jmp *-16(%r13)
	.size sat_sg5D4_entry, .-sat_sg5D4_entry


==================== Asm code ====================
2018-03-16 16:11:57.023681714 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5D4_info:
	.quad	sat_sg5D4_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:11:57.024577466 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadProduct_entry
.type Data.Functor.Product.$fMonadProduct_entry, @object
Data.Functor.Product.$fMonadProduct_entry:
_cg9L2:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _cg9L6
_cg9L5:
	movq $sat_sg5D7_info,-144(%r12)
	movq %r14,-136(%r12)
	movq %rsi,-128(%r12)
	movq $sat_sg5D6_info,-120(%r12)
	movq %r14,-112(%r12)
	movq %rsi,-104(%r12)
	movq $sat_sg5D5_info,-96(%r12)
	movq %r14,-88(%r12)
	movq %rsi,-80(%r12)
	movq $sat_sg5D4_info,-72(%r12)
	movq %r14,-56(%r12)
	movq %rsi,-48(%r12)
	movq $GHC.Base.C:Monad_con_info,-40(%r12)
	leaq -72(%r12),%rax
	movq %rax,-32(%r12)
	leaq -94(%r12),%rax
	movq %rax,-24(%r12)
	leaq -118(%r12),%rax
	movq %rax,-16(%r12)
	leaq -143(%r12),%rax
	movq %rax,-8(%r12)
	movq $lvl4_rg5o1_closure+1,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg9L6:
	movq $152,904(%r13)
	movl $Data.Functor.Product.$fMonadProduct_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadProduct_entry, .-Data.Functor.Product.$fMonadProduct_entry


==================== Asm code ====================
2018-03-16 16:11:57.025459954 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadProduct_info
.type Data.Functor.Product.$fMonadProduct_info, @object
Data.Functor.Product.$fMonadProduct_info:
	.quad	Data.Functor.Product.$fMonadProduct_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	Sg5Oh_srt+512


==================== Asm code ====================
2018-03-16 16:11:57.031341694 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadPlusProduct_$cmplus_closure
.type Data.Functor.Product.$fMonadPlusProduct_$cmplus_closure, @object
Data.Functor.Product.$fMonadPlusProduct_$cmplus_closure:
	.quad	Data.Functor.Product.$fMonadPlusProduct_$cmplus_info


==================== Asm code ====================
2018-03-16 16:11:57.03227019 UTC

.section .text
.align 8
sat_sg5Dj_entry:
_cg9LL:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9LM
_cg9LN:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.mplus_entry
_cg9LM:
	jmp *-16(%r13)
	.size sat_sg5Dj_entry, .-sat_sg5Dj_entry


==================== Asm code ====================
2018-03-16 16:11:57.032957074 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Dj_info:
	.quad	sat_sg5Dj_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.034038638 UTC

.section .text
.align 8
sat_sg5Di_entry:
_cg9LS:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9LT
_cg9LU:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.mplus_entry
_cg9LT:
	jmp *-16(%r13)
	.size sat_sg5Di_entry, .-sat_sg5Di_entry


==================== Asm code ====================
2018-03-16 16:11:57.034700877 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Di_info:
	.quad	sat_sg5Di_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.035518137 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadPlusProduct_$cmplus_entry
.type Data.Functor.Product.$fMonadPlusProduct_$cmplus_entry, @object
Data.Functor.Product.$fMonadPlusProduct_$cmplus_entry:
_cg9LV:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9LX
_cg9LY:
	movq $block_cg9Lx_info,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cg9Lx
_cg9Ly:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9LX:
	movl $Data.Functor.Product.$fMonadPlusProduct_$cmplus_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadPlusProduct_$cmplus_entry, .-Data.Functor.Product.$fMonadPlusProduct_$cmplus_entry


==================== Asm code ====================
2018-03-16 16:11:57.036232805 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadPlusProduct_$cmplus_info
.type Data.Functor.Product.$fMonadPlusProduct_$cmplus_info, @object
Data.Functor.Product.$fMonadPlusProduct_$cmplus_info:
	.quad	Data.Functor.Product.$fMonadPlusProduct_$cmplus_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:11:57.037001079 UTC

.section .text
.align 8
_cg9Lx:
_cg9Lx:
	movq $block_cg9LC_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cg9LC
_cg9LD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg9Lx, .-_cg9Lx


==================== Asm code ====================
2018-03-16 16:11:57.037689184 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9Lx_info:
	.quad	_cg9Lx
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.03915065 UTC

.section .text
.align 8
_cg9LC:
_cg9LC:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cg9M2
_cg9M1:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sg5Dj_info,-96(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	movq $sat_sg5Di_info,-56(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg9M2:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg9LC, .-_cg9LC


==================== Asm code ====================
2018-03-16 16:11:57.039954826 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9LC_info:
	.quad	_cg9LC
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.043890231 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadPlusProduct_$cmzero_closure
.type Data.Functor.Product.$fMonadPlusProduct_$cmzero_closure, @object
Data.Functor.Product.$fMonadPlusProduct_$cmzero_closure:
	.quad	Data.Functor.Product.$fMonadPlusProduct_$cmzero_info


==================== Asm code ====================
2018-03-16 16:11:57.044729959 UTC

.section .text
.align 8
sat_sg5Dn_entry:
_cg9MJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9MK
_cg9ML:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mzero_entry
_cg9MK:
	jmp *-16(%r13)
	.size sat_sg5Dn_entry, .-sat_sg5Dn_entry


==================== Asm code ====================
2018-03-16 16:11:57.045391667 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Dn_info:
	.quad	sat_sg5Dn_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.04611474 UTC

.section .text
.align 8
sat_sg5Dm_entry:
_cg9MQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9MR
_cg9MS:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mzero_entry
_cg9MR:
	jmp *-16(%r13)
	.size sat_sg5Dm_entry, .-sat_sg5Dm_entry


==================== Asm code ====================
2018-03-16 16:11:57.046757246 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Dm_info:
	.quad	sat_sg5Dm_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.047551276 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadPlusProduct_$cmzero_entry
.type Data.Functor.Product.$fMonadPlusProduct_$cmzero_entry, @object
Data.Functor.Product.$fMonadPlusProduct_$cmzero_entry:
_cg9MU:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cg9MY
_cg9MX:
	movq $sat_sg5Dn_info,-64(%r12)
	movq %rsi,-48(%r12)
	movq $sat_sg5Dm_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg9MY:
	movq $72,904(%r13)
	movl $Data.Functor.Product.$fMonadPlusProduct_$cmzero_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadPlusProduct_$cmzero_entry, .-Data.Functor.Product.$fMonadPlusProduct_$cmzero_entry


==================== Asm code ====================
2018-03-16 16:11:57.048277856 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadPlusProduct_$cmzero_info
.type Data.Functor.Product.$fMonadPlusProduct_$cmzero_info, @object
Data.Functor.Product.$fMonadPlusProduct_$cmzero_info:
	.quad	Data.Functor.Product.$fMonadPlusProduct_$cmzero_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:57.052563209 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_closure
.type Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_closure, @object
Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_closure:
	.quad	Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.053478782 UTC

.section .text
.align 8
sat_sg5Dr_entry:
_cg9Nm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Nn
_cg9No:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p2MonadPlus_entry
_cg9Nn:
	jmp *-16(%r13)
	.size sat_sg5Dr_entry, .-sat_sg5Dr_entry


==================== Asm code ====================
2018-03-16 16:11:57.054179359 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Dr_info:
	.quad	sat_sg5Dr_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.054923373 UTC

.section .text
.align 8
sat_sg5Dq_entry:
_cg9Nt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Nu
_cg9Nv:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p2MonadPlus_entry
_cg9Nu:
	jmp *-16(%r13)
	.size sat_sg5Dq_entry, .-sat_sg5Dq_entry


==================== Asm code ====================
2018-03-16 16:11:57.05555641 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Dq_info:
	.quad	sat_sg5Dq_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.056281045 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_entry
.type Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_entry, @object
Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_entry:
_cg9Nw:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cg9NA
_cg9Nz:
	movq $sat_sg5Dr_info,-40(%r12)
	movq %rsi,-24(%r12)
	movq $sat_sg5Dq_info,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp Data.Functor.Product.$fMonadProduct_entry
_cg9NA:
	movq $48,904(%r13)
	movl $Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_entry, .-Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_entry


==================== Asm code ====================
2018-03-16 16:11:57.057035969 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_info
.type Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_info, @object
Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_info:
	.quad	Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	Sg5Oh_srt+512


==================== Asm code ====================
2018-03-16 16:11:57.061164515 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_closure
.type Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_closure, @object
Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_closure:
	.quad	Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.062652838 UTC

.section .text
.align 8
sat_sg5Dv_entry:
_cg9NV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9NW
_cg9NX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1MonadPlus_entry
_cg9NW:
	jmp *-16(%r13)
	.size sat_sg5Dv_entry, .-sat_sg5Dv_entry


==================== Asm code ====================
2018-03-16 16:11:57.063408476 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Dv_info:
	.quad	sat_sg5Dv_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.064177212 UTC

.section .text
.align 8
sat_sg5Du_entry:
_cg9O2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9O3
_cg9O4:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1MonadPlus_entry
_cg9O3:
	jmp *-16(%r13)
	.size sat_sg5Du_entry, .-sat_sg5Du_entry


==================== Asm code ====================
2018-03-16 16:11:57.0648593 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Du_info:
	.quad	sat_sg5Du_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.065648623 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_entry
.type Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_entry, @object
Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_entry:
_cg9O5:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cg9O9
_cg9O8:
	movq $sat_sg5Dv_info,-40(%r12)
	movq %rsi,-24(%r12)
	movq $sat_sg5Du_info,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp Data.Functor.Product.$fAlternativeProduct_entry
_cg9O9:
	movq $48,904(%r13)
	movl $Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_entry, .-Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_entry


==================== Asm code ====================
2018-03-16 16:11:57.066412624 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_info
.type Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_info, @object
Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_info:
	.quad	Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_entry
	.quad	0
	.quad	141733920782
	.quad	8589934607
	.quad	Sg5Oh_srt+496


==================== Asm code ====================
2018-03-16 16:11:57.072426906 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadPlusProduct_closure
.type Data.Functor.Product.$fMonadPlusProduct_closure, @object
Data.Functor.Product.$fMonadPlusProduct_closure:
	.quad	Data.Functor.Product.$fMonadPlusProduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.073186201 UTC

.section .text
.align 8
sat_sg5DB_entry:
_cg9Ov:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fMonadPlusProduct_$cmplus_entry
	.size sat_sg5DB_entry, .-sat_sg5DB_entry


==================== Asm code ====================
2018-03-16 16:11:57.073837615 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5DB_info:
	.quad	sat_sg5DB_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:57.074576611 UTC

.section .text
.align 8
sat_sg5DA_entry:
_cg9OC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9OD
_cg9OE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fMonadPlusProduct_$cmzero_entry
_cg9OD:
	jmp *-16(%r13)
	.size sat_sg5DA_entry, .-sat_sg5DA_entry


==================== Asm code ====================
2018-03-16 16:11:57.075218941 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5DA_info:
	.quad	sat_sg5DA_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:11:57.07595409 UTC

.section .text
.align 8
sat_sg5Dz_entry:
_cg9OJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9OK
_cg9OL:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_entry
_cg9OK:
	jmp *-16(%r13)
	.size sat_sg5Dz_entry, .-sat_sg5Dz_entry


==================== Asm code ====================
2018-03-16 16:11:57.076567279 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Dz_info:
	.quad	sat_sg5Dz_entry
	.quad	2
	.quad	4294967314
	.quad	Sg5Oh_srt+528


==================== Asm code ====================
2018-03-16 16:11:57.077284802 UTC

.section .text
.align 8
sat_sg5Dy_entry:
_cg9OQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9OR
_cg9OS:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_entry
_cg9OR:
	jmp *-16(%r13)
	.size sat_sg5Dy_entry, .-sat_sg5Dy_entry


==================== Asm code ====================
2018-03-16 16:11:57.077936432 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Dy_info:
	.quad	sat_sg5Dy_entry
	.quad	2
	.quad	4294967314
	.quad	Sg5Oh_srt+536


==================== Asm code ====================
2018-03-16 16:11:57.078756706 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadPlusProduct_entry
.type Data.Functor.Product.$fMonadPlusProduct_entry, @object
Data.Functor.Product.$fMonadPlusProduct_entry:
_cg9OU:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _cg9OY
_cg9OX:
	movq $sat_sg5DB_info,-152(%r12)
	movq %r14,-144(%r12)
	movq %rsi,-136(%r12)
	movq $sat_sg5DA_info,-128(%r12)
	movq %r14,-112(%r12)
	movq %rsi,-104(%r12)
	movq $sat_sg5Dz_info,-96(%r12)
	movq %r14,-80(%r12)
	movq %rsi,-72(%r12)
	movq $sat_sg5Dy_info,-64(%r12)
	movq %r14,-48(%r12)
	movq %rsi,-40(%r12)
	movq $GHC.Base.C:MonadPlus_con_info,-32(%r12)
	leaq -64(%r12),%rax
	movq %rax,-24(%r12)
	leaq -96(%r12),%rax
	movq %rax,-16(%r12)
	leaq -128(%r12),%rax
	movq %rax,-8(%r12)
	leaq -150(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg9OY:
	movq $160,904(%r13)
	movl $Data.Functor.Product.$fMonadPlusProduct_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadPlusProduct_entry, .-Data.Functor.Product.$fMonadPlusProduct_entry


==================== Asm code ====================
2018-03-16 16:11:57.079565713 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadPlusProduct_info
.type Data.Functor.Product.$fMonadPlusProduct_info, @object
Data.Functor.Product.$fMonadPlusProduct_info:
	.quad	Data.Functor.Product.$fMonadPlusProduct_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	Sg5Oh_srt+528


==================== Asm code ====================
2018-03-16 16:11:57.086011879 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadFixProduct_$cmfix_closure
.type Data.Functor.Product.$fMonadFixProduct_$cmfix_closure, @object
Data.Functor.Product.$fMonadFixProduct_$cmfix_closure:
	.quad	Data.Functor.Product.$fMonadFixProduct_$cmfix_info


==================== Asm code ====================
2018-03-16 16:11:57.086933888 UTC

.section .text
.align 8
sat_sg5DP_entry:
_cg9PC:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9PD
_cg9PE:
	movq $block_cg9PA_info,-8(%rbp)
	movq 7(%rbx),%rbx
	addq $-8,%rbp
	jmp stg_ap_p_fast
_cg9PD:
	jmp *-8(%r13)
	.size sat_sg5DP_entry, .-sat_sg5DP_entry


==================== Asm code ====================
2018-03-16 16:11:57.08753432 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5DP_info:
	.quad	sat_sg5DP_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:57.08820183 UTC

.section .text
.align 8
_cg9PA:
_cg9PA:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cg9PA, .-_cg9PA


==================== Asm code ====================
2018-03-16 16:11:57.088798383 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9PA_info:
	.quad	_cg9PA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.089717163 UTC

.section .text
.align 8
sat_sg5DQ_entry:
_cg9PI:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9PJ
_cg9PK:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cg9PM
_cg9PL:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_sg5DP_info,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp Control.Monad.Fix.mfix_entry
_cg9PM:
	movq $16,904(%r13)
_cg9PJ:
	jmp *-16(%r13)
	.size sat_sg5DQ_entry, .-sat_sg5DQ_entry


==================== Asm code ====================
2018-03-16 16:11:57.090504901 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5DQ_info:
	.quad	sat_sg5DQ_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:11:57.091290118 UTC

.section .text
.align 8
sat_sg5DJ_entry:
_cg9PY:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9PZ
_cg9Q0:
	movq $block_cg9PW_info,-8(%rbp)
	movq 7(%rbx),%rbx
	addq $-8,%rbp
	jmp stg_ap_p_fast
_cg9PZ:
	jmp *-8(%r13)
	.size sat_sg5DJ_entry, .-sat_sg5DJ_entry


==================== Asm code ====================
2018-03-16 16:11:57.092004734 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5DJ_info:
	.quad	sat_sg5DJ_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:57.092710941 UTC

.section .text
.align 8
_cg9PW:
_cg9PW:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cg9PW, .-_cg9PW


==================== Asm code ====================
2018-03-16 16:11:57.093404876 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9PW_info:
	.quad	_cg9PW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.094239901 UTC

.section .text
.align 8
sat_sg5DK_entry:
_cg9Q4:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Q5
_cg9Q6:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cg9Q8
_cg9Q7:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_sg5DJ_info,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp Control.Monad.Fix.mfix_entry
_cg9Q8:
	movq $16,904(%r13)
_cg9Q5:
	jmp *-16(%r13)
	.size sat_sg5DK_entry, .-sat_sg5DK_entry


==================== Asm code ====================
2018-03-16 16:11:57.095059034 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5DK_info:
	.quad	sat_sg5DK_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:11:57.095911308 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadFixProduct_$cmfix_entry
.type Data.Functor.Product.$fMonadFixProduct_$cmfix_entry, @object
Data.Functor.Product.$fMonadFixProduct_$cmfix_entry:
_cg9Qa:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cg9Qe
_cg9Qd:
	movq $sat_sg5DQ_info,-80(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq $sat_sg5DK_info,-48(%r12)
	movq %r14,-32(%r12)
	movq %rdi,-24(%r12)
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg9Qe:
	movq $88,904(%r13)
	movl $Data.Functor.Product.$fMonadFixProduct_$cmfix_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadFixProduct_$cmfix_entry, .-Data.Functor.Product.$fMonadFixProduct_$cmfix_entry


==================== Asm code ====================
2018-03-16 16:11:57.096704372 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadFixProduct_$cmfix_info
.type Data.Functor.Product.$fMonadFixProduct_$cmfix_info, @object
Data.Functor.Product.$fMonadFixProduct_$cmfix_info:
	.quad	Data.Functor.Product.$fMonadFixProduct_$cmfix_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:57.101066146 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_closure
.type Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_closure, @object
Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_closure:
	.quad	Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.102159262 UTC

.section .text
.align 8
sat_sg5DU_entry:
_cg9QS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9QT
_cg9QU:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Control.Monad.Fix.$p1MonadFix_entry
_cg9QT:
	jmp *-16(%r13)
	.size sat_sg5DU_entry, .-sat_sg5DU_entry


==================== Asm code ====================
2018-03-16 16:11:57.102840676 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5DU_info:
	.quad	sat_sg5DU_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.103562806 UTC

.section .text
.align 8
sat_sg5DT_entry:
_cg9QZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9R0
_cg9R1:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Control.Monad.Fix.$p1MonadFix_entry
_cg9R0:
	jmp *-16(%r13)
	.size sat_sg5DT_entry, .-sat_sg5DT_entry


==================== Asm code ====================
2018-03-16 16:11:57.104256587 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5DT_info:
	.quad	sat_sg5DT_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.104977049 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_entry
.type Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_entry, @object
Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_entry:
_cg9R2:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cg9R6
_cg9R5:
	movq $sat_sg5DU_info,-40(%r12)
	movq %rsi,-24(%r12)
	movq $sat_sg5DT_info,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp Data.Functor.Product.$fMonadProduct_entry
_cg9R6:
	movq $48,904(%r13)
	movl $Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_entry, .-Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_entry


==================== Asm code ====================
2018-03-16 16:11:57.105757099 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_info
.type Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_info, @object
Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_info:
	.quad	Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_entry
	.quad	0
	.quad	141733920782
	.quad	8589934607
	.quad	Sg5Oh_srt+512


==================== Asm code ====================
2018-03-16 16:11:57.109708904 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadFixProduct_closure
.type Data.Functor.Product.$fMonadFixProduct_closure, @object
Data.Functor.Product.$fMonadFixProduct_closure:
	.quad	Data.Functor.Product.$fMonadFixProduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.110399155 UTC

.section .text
.align 8
sat_sg5DY_entry:
_cg9Rs:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fMonadFixProduct_$cmfix_entry
	.size sat_sg5DY_entry, .-sat_sg5DY_entry


==================== Asm code ====================
2018-03-16 16:11:57.111004351 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5DY_info:
	.quad	sat_sg5DY_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:57.111724694 UTC

.section .text
.align 8
sat_sg5DX_entry:
_cg9Rz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9RA
_cg9RB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_entry
_cg9RA:
	jmp *-16(%r13)
	.size sat_sg5DX_entry, .-sat_sg5DX_entry


==================== Asm code ====================
2018-03-16 16:11:57.112400628 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5DX_info:
	.quad	sat_sg5DX_entry
	.quad	2
	.quad	4294967314
	.quad	Sg5Oh_srt+552


==================== Asm code ====================
2018-03-16 16:11:57.113217297 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadFixProduct_entry
.type Data.Functor.Product.$fMonadFixProduct_entry, @object
Data.Functor.Product.$fMonadFixProduct_entry:
_cg9RD:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cg9RH
_cg9RG:
	movq $sat_sg5DY_info,-72(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq $sat_sg5DX_info,-48(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq $Control.Monad.Fix.C:MonadFix_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -71(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg9RH:
	movq $80,904(%r13)
	movl $Data.Functor.Product.$fMonadFixProduct_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadFixProduct_entry, .-Data.Functor.Product.$fMonadFixProduct_entry


==================== Asm code ====================
2018-03-16 16:11:57.114068138 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadFixProduct_info
.type Data.Functor.Product.$fMonadFixProduct_info, @object
Data.Functor.Product.$fMonadFixProduct_info:
	.quad	Data.Functor.Product.$fMonadFixProduct_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	Sg5Oh_srt+552


==================== Asm code ====================
2018-03-16 16:11:57.120759355 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadZipProduct_$cmzipWith_closure
.type Data.Functor.Product.$fMonadZipProduct_$cmzipWith_closure, @object
Data.Functor.Product.$fMonadZipProduct_$cmzipWith_closure:
	.quad	Data.Functor.Product.$fMonadZipProduct_$cmzipWith_info


==================== Asm code ====================
2018-03-16 16:11:57.121682289 UTC

.section .text
.align 8
sat_sg5Eb_entry:
_cg9Se:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Sf
_cg9Sg:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp Control.Monad.Zip.mzipWith_entry
_cg9Sf:
	jmp *-16(%r13)
	.size sat_sg5Eb_entry, .-sat_sg5Eb_entry


==================== Asm code ====================
2018-03-16 16:11:57.122398749 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Eb_info:
	.quad	sat_sg5Eb_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.123198744 UTC

.section .text
.align 8
sat_sg5Ea_entry:
_cg9Sl:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Sm
_cg9Sn:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp Control.Monad.Zip.mzipWith_entry
_cg9Sm:
	jmp *-16(%r13)
	.size sat_sg5Ea_entry, .-sat_sg5Ea_entry


==================== Asm code ====================
2018-03-16 16:11:57.123916807 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Ea_info:
	.quad	sat_sg5Ea_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.124708189 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadZipProduct_$cmzipWith_entry
.type Data.Functor.Product.$fMonadZipProduct_$cmzipWith_entry, @object
Data.Functor.Product.$fMonadZipProduct_$cmzipWith_entry:
_cg9So:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Sq
_cg9Sr:
	movq $block_cg9S0_info,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg9S0
_cg9S1:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9Sq:
	movl $Data.Functor.Product.$fMonadZipProduct_$cmzipWith_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadZipProduct_$cmzipWith_entry, .-Data.Functor.Product.$fMonadZipProduct_$cmzipWith_entry


==================== Asm code ====================
2018-03-16 16:11:57.125529547 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadZipProduct_$cmzipWith_info
.type Data.Functor.Product.$fMonadZipProduct_$cmzipWith_info, @object
Data.Functor.Product.$fMonadZipProduct_$cmzipWith_info:
	.quad	Data.Functor.Product.$fMonadZipProduct_$cmzipWith_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:11:57.126899399 UTC

.section .text
.align 8
_cg9S0:
_cg9S0:
	movq $block_cg9S5_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cg9S5
_cg9S6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg9S0, .-_cg9S0


==================== Asm code ====================
2018-03-16 16:11:57.127613741 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9S0_info:
	.quad	_cg9S0
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.128445297 UTC

.section .text
.align 8
_cg9S5:
_cg9S5:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _cg9Sv
_cg9Su:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sg5Eb_info,-112(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-96(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-88(%r12)
	movq 8(%rbp),%rdx
	movq %rdx,-80(%r12)
	movq %rbx,-72(%r12)
	movq $sat_sg5Ea_info,-64(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq %rcx,-40(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	leaq -64(%r12),%rax
	movq %rax,-8(%r12)
	leaq -112(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg9Sv:
	movq $120,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg9S5, .-_cg9S5


==================== Asm code ====================
2018-03-16 16:11:57.129205566 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9S5_info:
	.quad	_cg9S5
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.13299393 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_closure
.type Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_closure, @object
Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_closure:
	.quad	Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.13417074 UTC

.section .text
.align 8
sat_sg5Ef_entry:
_cg9Te:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Tf
_cg9Tg:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Control.Monad.Zip.$p1MonadZip_entry
_cg9Tf:
	jmp *-16(%r13)
	.size sat_sg5Ef_entry, .-sat_sg5Ef_entry


==================== Asm code ====================
2018-03-16 16:11:57.134818842 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Ef_info:
	.quad	sat_sg5Ef_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.135551585 UTC

.section .text
.align 8
sat_sg5Ee_entry:
_cg9Tl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Tm
_cg9Tn:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Control.Monad.Zip.$p1MonadZip_entry
_cg9Tm:
	jmp *-16(%r13)
	.size sat_sg5Ee_entry, .-sat_sg5Ee_entry


==================== Asm code ====================
2018-03-16 16:11:57.136185725 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Ee_info:
	.quad	sat_sg5Ee_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.13692386 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_entry
.type Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_entry, @object
Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_entry:
_cg9To:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cg9Ts
_cg9Tr:
	movq $sat_sg5Ef_info,-40(%r12)
	movq %rsi,-24(%r12)
	movq $sat_sg5Ee_info,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp Data.Functor.Product.$fMonadProduct_entry
_cg9Ts:
	movq $48,904(%r13)
	movl $Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_entry, .-Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_entry


==================== Asm code ====================
2018-03-16 16:11:57.137676462 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_info
.type Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_info, @object
Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_info:
	.quad	Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_entry
	.quad	0
	.quad	554050781198
	.quad	8589934607
	.quad	Sg5Oh_srt+512


==================== Asm code ====================
2018-03-16 16:11:57.143452772 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadZipProduct_$cmzip_closure
.type Data.Functor.Product.$fMonadZipProduct_$cmzip_closure, @object
Data.Functor.Product.$fMonadZipProduct_$cmzip_closure:
	.quad	Data.Functor.Product.$fMonadZipProduct_$cmzip_info


==================== Asm code ====================
2018-03-16 16:11:57.144308279 UTC

.section .text
.align 8
sat_sg5Er_entry:
_cg9TX:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9TY
_cg9TZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq $GHC.Tuple.(,)_closure+2,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp Control.Monad.Zip.mzipWith_entry
_cg9TY:
	jmp *-16(%r13)
	.size sat_sg5Er_entry, .-sat_sg5Er_entry


==================== Asm code ====================
2018-03-16 16:11:57.145006058 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Er_info:
	.quad	sat_sg5Er_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.145794423 UTC

.section .text
.align 8
sat_sg5Eq_entry:
_cg9U4:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9U5
_cg9U6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq $GHC.Tuple.(,)_closure+2,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp Control.Monad.Zip.mzipWith_entry
_cg9U5:
	jmp *-16(%r13)
	.size sat_sg5Eq_entry, .-sat_sg5Eq_entry


==================== Asm code ====================
2018-03-16 16:11:57.146445268 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Eq_info:
	.quad	sat_sg5Eq_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.147241177 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadZipProduct_$cmzip_entry
.type Data.Functor.Product.$fMonadZipProduct_$cmzip_entry, @object
Data.Functor.Product.$fMonadZipProduct_$cmzip_entry:
_cg9U7:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9U9
_cg9Ua:
	movq $block_cg9TJ_info,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cg9TJ
_cg9TK:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9U9:
	movl $Data.Functor.Product.$fMonadZipProduct_$cmzip_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadZipProduct_$cmzip_entry, .-Data.Functor.Product.$fMonadZipProduct_$cmzip_entry


==================== Asm code ====================
2018-03-16 16:11:57.148070955 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadZipProduct_$cmzip_info
.type Data.Functor.Product.$fMonadZipProduct_$cmzip_info, @object
Data.Functor.Product.$fMonadZipProduct_$cmzip_info:
	.quad	Data.Functor.Product.$fMonadZipProduct_$cmzip_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:11:57.149019087 UTC

.section .text
.align 8
_cg9TJ:
_cg9TJ:
	movq $block_cg9TO_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cg9TO
_cg9TP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg9TJ, .-_cg9TJ


==================== Asm code ====================
2018-03-16 16:11:57.150339936 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9TJ_info:
	.quad	_cg9TJ
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.151440813 UTC

.section .text
.align 8
_cg9TO:
_cg9TO:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cg9Ue
_cg9Ud:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sg5Er_info,-96(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	movq $sat_sg5Eq_info,-56(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg9Ue:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg9TO, .-_cg9TO


==================== Asm code ====================
2018-03-16 16:11:57.152539074 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9TO_info:
	.quad	_cg9TO
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.170610308 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cmunzip_closure
.type Data.Functor.Product.$w$cmunzip_closure, @object
Data.Functor.Product.$w$cmunzip_closure:
	.quad	Data.Functor.Product.$w$cmunzip_info


==================== Asm code ====================
2018-03-16 16:11:57.171485211 UTC

.section .text
.align 8
$dMonad_sg5Ev_entry:
_cg9UV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9UW
_cg9UX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Control.Monad.Zip.$p1MonadZip_entry
_cg9UW:
	jmp *-16(%r13)
	.size $dMonad_sg5Ev_entry, .-$dMonad_sg5Ev_entry


==================== Asm code ====================
2018-03-16 16:11:57.172183915 UTC

.section .data.rel.ro
.align 8
.align 1
$dMonad_sg5Ev_info:
	.quad	$dMonad_sg5Ev_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.172932807 UTC

.section .text
.align 8
$dMonad1_sg5Ew_entry:
_cg9V2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9V3
_cg9V4:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Control.Monad.Zip.$p1MonadZip_entry
_cg9V3:
	jmp *-16(%r13)
	.size $dMonad1_sg5Ew_entry, .-$dMonad1_sg5Ew_entry


==================== Asm code ====================
2018-03-16 16:11:57.173580518 UTC

.section .data.rel.ro
.align 8
.align 1
$dMonad1_sg5Ew_info:
	.quad	$dMonad1_sg5Ew_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.17437297 UTC

.section .text
.align 8
lvl9_sg5F2_entry:
_cg9Vm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Vn
_cg9Vo:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monad_entry
_cg9Vn:
	jmp *-16(%r13)
	.size lvl9_sg5F2_entry, .-lvl9_sg5F2_entry


==================== Asm code ====================
2018-03-16 16:11:57.175027043 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_sg5F2_info:
	.quad	lvl9_sg5F2_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.175842616 UTC

.section .text
.align 8
sat_sg5F8_entry:
_cg9Vv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Vw
_cg9Vx:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cg9Vz
_cg9Vy:
	movq 7(%rbx),%rax
	movq $stg_sel_1_upd_info,-16(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.pure_entry
_cg9Vz:
	movq $24,904(%r13)
_cg9Vw:
	jmp *-8(%r13)
	.size sat_sg5F8_entry, .-sat_sg5F8_entry


==================== Asm code ====================
2018-03-16 16:11:57.176507056 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5F8_info:
	.quad	sat_sg5F8_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:57.177309691 UTC

.section .text
.align 8
sat_sg5F9_entry:
_cg9VA:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9VB
_cg9VC:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cg9VE
_cg9VD:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $lvl9_sg5F2_info,-32(%r12)
	movq %rax,-16(%r12)
	movq $sat_sg5F8_info,-8(%r12)
	leaq -32(%r12),%rcx
	movq %rcx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq %rbx,-32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.>>=_entry
_cg9VE:
	movq $40,904(%r13)
_cg9VB:
	jmp *-16(%r13)
	.size sat_sg5F9_entry, .-sat_sg5F9_entry


==================== Asm code ====================
2018-03-16 16:11:57.178060862 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5F9_info:
	.quad	sat_sg5F9_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:11:57.178822377 UTC

.section .text
.align 8
lvl9_sg5EU_entry:
_cg9VN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9VO
_cg9VP:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monad_entry
_cg9VO:
	jmp *-16(%r13)
	.size lvl9_sg5EU_entry, .-lvl9_sg5EU_entry


==================== Asm code ====================
2018-03-16 16:11:57.179541124 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_sg5EU_info:
	.quad	lvl9_sg5EU_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.180400549 UTC

.section .text
.align 8
sat_sg5F0_entry:
_cg9VW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9VX
_cg9VY:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cg9W0
_cg9VZ:
	movq 7(%rbx),%rax
	movq $stg_sel_1_upd_info,-16(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.pure_entry
_cg9W0:
	movq $24,904(%r13)
_cg9VX:
	jmp *-8(%r13)
	.size sat_sg5F0_entry, .-sat_sg5F0_entry


==================== Asm code ====================
2018-03-16 16:11:57.181141408 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5F0_info:
	.quad	sat_sg5F0_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:57.182091728 UTC

.section .text
.align 8
sat_sg5F1_entry:
_cg9W1:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9W2
_cg9W3:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cg9W5
_cg9W4:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $lvl9_sg5EU_info,-32(%r12)
	movq %rax,-16(%r12)
	movq $sat_sg5F0_info,-8(%r12)
	leaq -32(%r12),%rcx
	movq %rcx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq %rbx,-32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.>>=_entry
_cg9W5:
	movq $40,904(%r13)
_cg9W2:
	jmp *-16(%r13)
	.size sat_sg5F1_entry, .-sat_sg5F1_entry


==================== Asm code ====================
2018-03-16 16:11:57.182891021 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5F1_info:
	.quad	sat_sg5F1_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:11:57.183716606 UTC

.section .text
.align 8
sat_sg5Fa_entry:
_cg9W6:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9W8
_cg9W9:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cg9V9_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 16(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg9V9
_cg9Va:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9W8:
	jmp *-16(%r13)
	.size sat_sg5Fa_entry, .-sat_sg5Fa_entry


==================== Asm code ====================
2018-03-16 16:11:57.184454285 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Fa_info:
	.quad	sat_sg5Fa_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.185320088 UTC

.section .text
.align 8
_cg9V9:
_cg9V9:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cg9Wc
_cg9Wb:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sg5F9_info,-80(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-64(%r12)
	movq %rbx,-56(%r12)
	movq $sat_sg5F1_info,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg9Wc:
	movq $88,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg9V9, .-_cg9V9


==================== Asm code ====================
2018-03-16 16:11:57.186707531 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9V9_info:
	.quad	_cg9V9
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.187432096 UTC

.section .text
.align 8
lvl9_sg5EI_entry:
_cg9Wv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Ww
_cg9Wx:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monad_entry
_cg9Ww:
	jmp *-16(%r13)
	.size lvl9_sg5EI_entry, .-lvl9_sg5EI_entry


==================== Asm code ====================
2018-03-16 16:11:57.1880725 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_sg5EI_info:
	.quad	lvl9_sg5EI_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.18879438 UTC

.section .text
.align 8
sat_sg5EO_entry:
_cg9WE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9WF
_cg9WG:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cg9WI
_cg9WH:
	movq 7(%rbx),%rax
	movq $stg_sel_0_upd_info,-16(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.pure_entry
_cg9WI:
	movq $24,904(%r13)
_cg9WF:
	jmp *-8(%r13)
	.size sat_sg5EO_entry, .-sat_sg5EO_entry


==================== Asm code ====================
2018-03-16 16:11:57.189546522 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5EO_info:
	.quad	sat_sg5EO_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:57.190327832 UTC

.section .text
.align 8
sat_sg5EP_entry:
_cg9WJ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9WK
_cg9WL:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cg9WN
_cg9WM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $lvl9_sg5EI_info,-32(%r12)
	movq %rax,-16(%r12)
	movq $sat_sg5EO_info,-8(%r12)
	leaq -32(%r12),%rcx
	movq %rcx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq %rbx,-32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.>>=_entry
_cg9WN:
	movq $40,904(%r13)
_cg9WK:
	jmp *-16(%r13)
	.size sat_sg5EP_entry, .-sat_sg5EP_entry


==================== Asm code ====================
2018-03-16 16:11:57.191038785 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5EP_info:
	.quad	sat_sg5EP_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:11:57.191775772 UTC

.section .text
.align 8
lvl9_sg5EA_entry:
_cg9WW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9WX
_cg9WY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monad_entry
_cg9WX:
	jmp *-16(%r13)
	.size lvl9_sg5EA_entry, .-lvl9_sg5EA_entry


==================== Asm code ====================
2018-03-16 16:11:57.192414683 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_sg5EA_info:
	.quad	lvl9_sg5EA_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.19327249 UTC

.section .text
.align 8
sat_sg5EG_entry:
_cg9X5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9X6
_cg9X7:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cg9X9
_cg9X8:
	movq 7(%rbx),%rax
	movq $stg_sel_0_upd_info,-16(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.pure_entry
_cg9X9:
	movq $24,904(%r13)
_cg9X6:
	jmp *-8(%r13)
	.size sat_sg5EG_entry, .-sat_sg5EG_entry


==================== Asm code ====================
2018-03-16 16:11:57.193969568 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5EG_info:
	.quad	sat_sg5EG_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:57.194807629 UTC

.section .text
.align 8
sat_sg5EH_entry:
_cg9Xa:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Xb
_cg9Xc:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cg9Xe
_cg9Xd:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $lvl9_sg5EA_info,-32(%r12)
	movq %rax,-16(%r12)
	movq $sat_sg5EG_info,-8(%r12)
	leaq -32(%r12),%rcx
	movq %rcx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq %rbx,-32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.>>=_entry
_cg9Xe:
	movq $40,904(%r13)
_cg9Xb:
	jmp *-16(%r13)
	.size sat_sg5EH_entry, .-sat_sg5EH_entry


==================== Asm code ====================
2018-03-16 16:11:57.195532069 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5EH_info:
	.quad	sat_sg5EH_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:11:57.196271932 UTC

.section .text
.align 8
sat_sg5EQ_entry:
_cg9Xf:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Xh
_cg9Xi:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cg9Wi_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 16(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg9Wi
_cg9Wj:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9Xh:
	jmp *-16(%r13)
	.size sat_sg5EQ_entry, .-sat_sg5EQ_entry


==================== Asm code ====================
2018-03-16 16:11:57.196945731 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5EQ_info:
	.quad	sat_sg5EQ_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.19776904 UTC

.section .text
.align 8
_cg9Wi:
_cg9Wi:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cg9Xl
_cg9Xk:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sg5EP_info,-80(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-64(%r12)
	movq %rbx,-56(%r12)
	movq $sat_sg5EH_info,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg9Xl:
	movq $88,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg9Wi, .-_cg9Wi


==================== Asm code ====================
2018-03-16 16:11:57.198481032 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9Wi_info:
	.quad	_cg9Wi
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.199252741 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cmunzip_entry
.type Data.Functor.Product.$w$cmunzip_entry, @object
Data.Functor.Product.$w$cmunzip_entry:
_cg9Xn:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _cg9Xr
_cg9Xq:
	movq $$dMonad_sg5Ev_info,-120(%r12)
	movq %r14,-104(%r12)
	movq $$dMonad1_sg5Ew_info,-96(%r12)
	movq %rsi,-80(%r12)
	movq $sat_sg5Fa_info,-72(%r12)
	movq %rdi,-56(%r12)
	leaq -120(%r12),%rax
	movq %rax,-48(%r12)
	leaq -96(%r12),%rbx
	movq %rbx,-40(%r12)
	movq $sat_sg5EQ_info,-32(%r12)
	movq %rdi,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -72(%r12),%r14
	leaq -32(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg9Xr:
	movq $128,904(%r13)
	movl $Data.Functor.Product.$w$cmunzip_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cmunzip_entry, .-Data.Functor.Product.$w$cmunzip_entry


==================== Asm code ====================
2018-03-16 16:11:57.199984316 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cmunzip_info
.type Data.Functor.Product.$w$cmunzip_info, @object
Data.Functor.Product.$w$cmunzip_info:
	.quad	Data.Functor.Product.$w$cmunzip_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:57.203174998 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadZipProduct_$cmunzip_closure
.type Data.Functor.Product.$fMonadZipProduct_$cmunzip_closure, @object
Data.Functor.Product.$fMonadZipProduct_$cmunzip_closure:
	.quad	Data.Functor.Product.$fMonadZipProduct_$cmunzip_info


==================== Asm code ====================
2018-03-16 16:11:57.203939827 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadZipProduct_$cmunzip_entry
.type Data.Functor.Product.$fMonadZipProduct_$cmunzip_entry, @object
Data.Functor.Product.$fMonadZipProduct_$cmunzip_entry:
_cg9Za:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9Zb
_cg9Zc:
	movq $block_cg9Z7_info,-8(%rbp)
	addq $-8,%rbp
	jmp Data.Functor.Product.$w$cmunzip_entry
_cg9Zb:
	movl $Data.Functor.Product.$fMonadZipProduct_$cmunzip_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadZipProduct_$cmunzip_entry, .-Data.Functor.Product.$fMonadZipProduct_$cmunzip_entry


==================== Asm code ====================
2018-03-16 16:11:57.204632623 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadZipProduct_$cmunzip_info
.type Data.Functor.Product.$fMonadZipProduct_$cmunzip_info, @object
Data.Functor.Product.$fMonadZipProduct_$cmunzip_info:
	.quad	Data.Functor.Product.$fMonadZipProduct_$cmunzip_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:57.205403713 UTC

.section .text
.align 8
_cg9Z7:
_cg9Z7:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cg9Zf
_cg9Ze:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg9Zf:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _cg9Z7, .-_cg9Z7


==================== Asm code ====================
2018-03-16 16:11:57.206086898 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9Z7_info:
	.quad	_cg9Z7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.21133333 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadZipProduct_closure
.type Data.Functor.Product.$fMonadZipProduct_closure, @object
Data.Functor.Product.$fMonadZipProduct_closure:
	.quad	Data.Functor.Product.$fMonadZipProduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.212092956 UTC

.section .text
.align 8
sat_sg5Fm_entry:
_cg9Zy:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fMonadZipProduct_$cmunzip_entry
	.size sat_sg5Fm_entry, .-sat_sg5Fm_entry


==================== Asm code ====================
2018-03-16 16:11:57.212736185 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Fm_info:
	.quad	sat_sg5Fm_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:57.213440682 UTC

.section .text
.align 8
sat_sg5Fl_entry:
_cg9ZG:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$fMonadZipProduct_$cmzipWith_entry
	.size sat_sg5Fl_entry, .-sat_sg5Fl_entry


==================== Asm code ====================
2018-03-16 16:11:57.21470009 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Fl_info:
	.quad	sat_sg5Fl_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:57.215362347 UTC

.section .text
.align 8
sat_sg5Fk_entry:
_cg9ZO:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fMonadZipProduct_$cmzip_entry
	.size sat_sg5Fk_entry, .-sat_sg5Fk_entry


==================== Asm code ====================
2018-03-16 16:11:57.215999692 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Fk_info:
	.quad	sat_sg5Fk_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:57.2167082 UTC

.section .text
.align 8
sat_sg5Fj_entry:
_cg9ZV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9ZW
_cg9ZX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_entry
_cg9ZW:
	jmp *-16(%r13)
	.size sat_sg5Fj_entry, .-sat_sg5Fj_entry


==================== Asm code ====================
2018-03-16 16:11:57.217413699 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Fj_info:
	.quad	sat_sg5Fj_entry
	.quad	2
	.quad	4294967314
	.quad	Sg5Oh_srt+568


==================== Asm code ====================
2018-03-16 16:11:57.218257368 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadZipProduct_entry
.type Data.Functor.Product.$fMonadZipProduct_entry, @object
Data.Functor.Product.$fMonadZipProduct_entry:
_cg9ZZ:
	addq $144,%r12
	cmpq 856(%r13),%r12
	ja _cga03
_cga02:
	movq $sat_sg5Fm_info,-136(%r12)
	movq %r14,-128(%r12)
	movq %rsi,-120(%r12)
	movq $sat_sg5Fl_info,-112(%r12)
	movq %r14,-104(%r12)
	movq %rsi,-96(%r12)
	movq $sat_sg5Fk_info,-88(%r12)
	movq %r14,-80(%r12)
	movq %rsi,-72(%r12)
	movq $sat_sg5Fj_info,-64(%r12)
	movq %r14,-48(%r12)
	movq %rsi,-40(%r12)
	movq $Control.Monad.Zip.C:MonadZip_con_info,-32(%r12)
	leaq -64(%r12),%rax
	movq %rax,-24(%r12)
	leaq -86(%r12),%rax
	movq %rax,-16(%r12)
	leaq -109(%r12),%rax
	movq %rax,-8(%r12)
	leaq -135(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cga03:
	movq $144,904(%r13)
	movl $Data.Functor.Product.$fMonadZipProduct_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadZipProduct_entry, .-Data.Functor.Product.$fMonadZipProduct_entry


==================== Asm code ====================
2018-03-16 16:11:57.219059697 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadZipProduct_info
.type Data.Functor.Product.$fMonadZipProduct_info, @object
Data.Functor.Product.$fMonadZipProduct_info:
	.quad	Data.Functor.Product.$fMonadZipProduct_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	Sg5Oh_srt+568


==================== Asm code ====================
2018-03-16 16:11:57.222446544 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fGeneric1Product_$cto1_closure
.type Data.Functor.Product.$fGeneric1Product_$cto1_closure, @object
Data.Functor.Product.$fGeneric1Product_$cto1_closure:
	.quad	Data.Functor.Product.$fGeneric1Product_$cto1_info


==================== Asm code ====================
2018-03-16 16:11:57.223219948 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fGeneric1Product_$cto1_entry
.type Data.Functor.Product.$fGeneric1Product_$cto1_entry, @object
Data.Functor.Product.$fGeneric1Product_$cto1_entry:
_cga0w:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cga0A
_cga0B:
	movq $block_cga0u_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	jmp stg_ap_0_fast
_cga0A:
	movl $Data.Functor.Product.$fGeneric1Product_$cto1_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fGeneric1Product_$cto1_entry, .-Data.Functor.Product.$fGeneric1Product_$cto1_entry


==================== Asm code ====================
2018-03-16 16:11:57.223896401 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fGeneric1Product_$cto1_info
.type Data.Functor.Product.$fGeneric1Product_$cto1_info, @object
Data.Functor.Product.$fGeneric1Product_$cto1_info:
	.quad	Data.Functor.Product.$fGeneric1Product_$cto1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:57.224678305 UTC

.section .text
.align 8
_cga0u:
_cga0u:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cga0E
_cga0D:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cga0E:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cga0u, .-_cga0u


==================== Asm code ====================
2018-03-16 16:11:57.225685285 UTC

.section .data.rel.ro
.align 8
.align 1
block_cga0u_info:
	.quad	_cga0u
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.228975205 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fGeneric1Product1_closure
.type Data.Functor.Product.$fGeneric1Product1_closure, @object
Data.Functor.Product.$fGeneric1Product1_closure:
	.quad	Data.Functor.Product.$fGeneric1Product1_info


==================== Asm code ====================
2018-03-16 16:11:57.229885318 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fGeneric1Product1_entry
.type Data.Functor.Product.$fGeneric1Product1_entry, @object
Data.Functor.Product.$fGeneric1Product1_entry:
_cga0V:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cga0Z
_cga10:
	movq $block_cga0S_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cga0S
_cga0T:
	movq (%rbx),%rax
	jmp *(%rax)
_cga0Z:
	movl $Data.Functor.Product.$fGeneric1Product1_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fGeneric1Product1_entry, .-Data.Functor.Product.$fGeneric1Product1_entry


==================== Asm code ====================
2018-03-16 16:11:57.230541597 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fGeneric1Product1_info
.type Data.Functor.Product.$fGeneric1Product1_info, @object
Data.Functor.Product.$fGeneric1Product1_info:
	.quad	Data.Functor.Product.$fGeneric1Product1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:57.23133902 UTC

.section .text
.align 8
_cga0S:
_cga0S:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cga13
_cga12:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $GHC.Generics.:*:_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cga13:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cga0S, .-_cga0S


==================== Asm code ====================
2018-03-16 16:11:57.231976 UTC

.section .data.rel.ro
.align 8
.align 1
block_cga0S_info:
	.quad	_cga0S
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.233949035 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fGeneric1Product_closure
.type Data.Functor.Product.$fGeneric1Product_closure, @object
Data.Functor.Product.$fGeneric1Product_closure:
	.quad	GHC.Generics.C:Generic1_con_info
	.quad	Data.Functor.Product.$fGeneric1Product1_closure+1
	.quad	Data.Functor.Product.$fGeneric1Product_$cto1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:11:57.237189466 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fGenericProduct_$cto_closure
.type Data.Functor.Product.$fGenericProduct_$cto_closure, @object
Data.Functor.Product.$fGenericProduct_$cto_closure:
	.quad	Data.Functor.Product.$fGenericProduct_$cto_info


==================== Asm code ====================
2018-03-16 16:11:57.238083458 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fGenericProduct_$cto_entry
.type Data.Functor.Product.$fGenericProduct_$cto_entry, @object
Data.Functor.Product.$fGenericProduct_$cto_entry:
_cga1m:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cga1q
_cga1r:
	movq $block_cga1k_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	jmp stg_ap_0_fast
_cga1q:
	movl $Data.Functor.Product.$fGenericProduct_$cto_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fGenericProduct_$cto_entry, .-Data.Functor.Product.$fGenericProduct_$cto_entry


==================== Asm code ====================
2018-03-16 16:11:57.238805568 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fGenericProduct_$cto_info
.type Data.Functor.Product.$fGenericProduct_$cto_info, @object
Data.Functor.Product.$fGenericProduct_$cto_info:
	.quad	Data.Functor.Product.$fGenericProduct_$cto_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:57.239533462 UTC

.section .text
.align 8
_cga1k:
_cga1k:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cga1u
_cga1t:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cga1u:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cga1k, .-_cga1k


==================== Asm code ====================
2018-03-16 16:11:57.240264177 UTC

.section .data.rel.ro
.align 8
.align 1
block_cga1k_info:
	.quad	_cga1k
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.244134654 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fGenericProduct1_closure
.type Data.Functor.Product.$fGenericProduct1_closure, @object
Data.Functor.Product.$fGenericProduct1_closure:
	.quad	Data.Functor.Product.$fGenericProduct1_info


==================== Asm code ====================
2018-03-16 16:11:57.2449247 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fGenericProduct1_entry
.type Data.Functor.Product.$fGenericProduct1_entry, @object
Data.Functor.Product.$fGenericProduct1_entry:
_cga1L:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cga1P
_cga1Q:
	movq $block_cga1I_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cga1I
_cga1J:
	movq (%rbx),%rax
	jmp *(%rax)
_cga1P:
	movl $Data.Functor.Product.$fGenericProduct1_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fGenericProduct1_entry, .-Data.Functor.Product.$fGenericProduct1_entry


==================== Asm code ====================
2018-03-16 16:11:57.245629363 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fGenericProduct1_info
.type Data.Functor.Product.$fGenericProduct1_info, @object
Data.Functor.Product.$fGenericProduct1_info:
	.quad	Data.Functor.Product.$fGenericProduct1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:57.246409711 UTC

.section .text
.align 8
_cga1I:
_cga1I:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cga1T
_cga1S:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $GHC.Generics.:*:_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cga1T:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cga1I, .-_cga1I


==================== Asm code ====================
2018-03-16 16:11:57.247061229 UTC

.section .data.rel.ro
.align 8
.align 1
block_cga1I_info:
	.quad	_cga1I
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.24883478 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fGenericProduct_closure
.type Data.Functor.Product.$fGenericProduct_closure, @object
Data.Functor.Product.$fGenericProduct_closure:
	.quad	GHC.Generics.C:Generic_con_info
	.quad	Data.Functor.Product.$fGenericProduct1_closure+1
	.quad	Data.Functor.Product.$fGenericProduct_$cto_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:11:57.255502793 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgfoldl_closure
.type Data.Functor.Product.$fDataProduct_$cgfoldl_closure, @object
Data.Functor.Product.$fDataProduct_$cgfoldl_closure:
	.quad	Data.Functor.Product.$fDataProduct_$cgfoldl_info


==================== Asm code ====================
2018-03-16 16:11:57.256294976 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgfoldl_slow
.type Data.Functor.Product.$fDataProduct_$cgfoldl_slow, @object
Data.Functor.Product.$fDataProduct_$cgfoldl_slow:
_cga27:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$fDataProduct_$cgfoldl_entry
	.size Data.Functor.Product.$fDataProduct_$cgfoldl_slow, .-Data.Functor.Product.$fDataProduct_$cgfoldl_slow


==================== Asm code ====================
2018-03-16 16:11:57.257079728 UTC

.section .text
.align 8
sat_sg5FP_entry:
_cga2o:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cga2p
_cga2q:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $Data.Functor.Product.Pair_closure+2,%r14d
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp stg_ap_p_fast
_cga2p:
	jmp *-16(%r13)
	.size sat_sg5FP_entry, .-sat_sg5FP_entry


==================== Asm code ====================
2018-03-16 16:11:57.257736949 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5FP_info:
	.quad	sat_sg5FP_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.258532682 UTC

.section .text
.align 8
sat_sg5FQ_entry:
_cga2r:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cga2s
_cga2t:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cga2v
_cga2u:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	movq $sat_sg5FP_info,-16(%r12)
	movq %rdx,(%r12)
	movq %rbx,%rdi
	leaq -16(%r12),%rsi
	movq %rax,%r14
	movq %rcx,%rbx
	addq $-16,%rbp
	jmp stg_ap_ppp_fast
_cga2v:
	movq $24,904(%r13)
_cga2s:
	jmp *-16(%r13)
	.size sat_sg5FQ_entry, .-sat_sg5FQ_entry


==================== Asm code ====================
2018-03-16 16:11:57.25925901 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5FQ_info:
	.quad	sat_sg5FQ_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.259996853 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgfoldl_entry
.type Data.Functor.Product.$fDataProduct_$cgfoldl_entry, @object
Data.Functor.Product.$fDataProduct_$cgfoldl_entry:
_cga2w:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cga2x
_cga2y:
	movq $block_cga2b_info,-8(%rbp)
	movq 24(%rbp),%rbx
	movq %r9,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cga2b
_cga2c:
	movq (%rbx),%rax
	jmp *(%rax)
_cga2x:
	movl $Data.Functor.Product.$fDataProduct_$cgfoldl_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$fDataProduct_$cgfoldl_entry, .-Data.Functor.Product.$fDataProduct_$cgfoldl_entry


==================== Asm code ====================
2018-03-16 16:11:57.260750581 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgfoldl_info
.type Data.Functor.Product.$fDataProduct_$cgfoldl_info, @object
Data.Functor.Product.$fDataProduct_$cgfoldl_info:
	.quad	Data.Functor.Product.$fDataProduct_$cgfoldl_entry
	.quad	0
	.quad	14
	.quad	38654705664
	.quad	0
	.quad	9
	.quad	Data.Functor.Product.$fDataProduct_$cgfoldl_slow


==================== Asm code ====================
2018-03-16 16:11:57.261585937 UTC

.section .text
.align 8
_cga2b:
_cga2b:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cga2B
_cga2A:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sg5FQ_info,-40(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq 24(%rbp),%rdx
	movq %rdx,-8(%r12)
	movq %rax,(%r12)
	movq %rbx,%rdi
	leaq -40(%r12),%rsi
	movq 8(%rbp),%r14
	movq %rcx,%rbx
	addq $40,%rbp
	jmp stg_ap_ppp_fast
_cga2B:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cga2b, .-_cga2b


==================== Asm code ====================
2018-03-16 16:11:57.26231591 UTC

.section .data.rel.ro
.align 8
.align 1
block_cga2b_info:
	.quad	_cga2b
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.264185397 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Product.$fDataProduct6_bytes
.type Data.Functor.Product.$fDataProduct6_bytes, @object
Data.Functor.Product.$fDataProduct6_bytes:
	.asciz "Product"


==================== Asm code ====================
2018-03-16 16:11:57.267427878 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct5_closure
.type Data.Functor.Product.$fDataProduct5_closure, @object
Data.Functor.Product.$fDataProduct5_closure:
	.quad	Data.Functor.Product.$fDataProduct5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.268368759 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct5_entry
.type Data.Functor.Product.$fDataProduct5_entry, @object
Data.Functor.Product.$fDataProduct5_entry:
_cga35:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cga36
_cga37:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cga34
_cga33:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Data.Functor.Product.$fDataProduct6_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cga36:
	jmp *-16(%r13)
_cga34:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Product.$fDataProduct5_entry, .-Data.Functor.Product.$fDataProduct5_entry


==================== Asm code ====================
2018-03-16 16:11:57.26916611 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct5_info
.type Data.Functor.Product.$fDataProduct5_info, @object
Data.Functor.Product.$fDataProduct5_info:
	.quad	Data.Functor.Product.$fDataProduct5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:11:57.27524032 UTC

.section .data
.align 8
.align 1
go61_rg5o2_closure:
	.quad	go61_rg5o2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.275985958 UTC

.section .text
.align 8
go61_rg5o2_entry:
_cga3q:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cga3r
_uga44:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _cga3g
_cga3r:
	movl $go61_rg5o2_closure,%ebx
	jmp *-8(%r13)
	.size go61_rg5o2_entry, .-go61_rg5o2_entry


==================== Asm code ====================
2018-03-16 16:11:57.276608938 UTC

.section .data.rel.ro
.align 8
.align 1
go61_rg5o2_info:
	.quad	go61_rg5o2_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	Sg5Oh_srt+584


==================== Asm code ====================
2018-03-16 16:11:57.277515488 UTC

.section .text
.align 8
_cga3g:
_cga3g:
	movq (%rbp),%rax
	movq $block_cga3j_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cga3j
_cga3k:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cga3g, .-_cga3g


==================== Asm code ====================
2018-03-16 16:11:57.278302671 UTC

.section .text
.align 8
_cga3j:
_cga3j:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uga45
_cga3o:
	movq $block_cga3y_info,-8(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cga3y
_cga3A:
	movq (%rbx),%rax
	jmp *(%rax)
_uga45:
	addq $16,%rbp
	jmp _cga3G
	.size _cga3j, .-_cga3j


==================== Asm code ====================
2018-03-16 16:11:57.278975182 UTC

.section .data.rel.ro
.align 8
.align 1
block_cga3j_info:
	.quad	_cga3j
	.quad	1
	.quad	21474836510
	.quad	Sg5Oh_srt+584


==================== Asm code ====================
2018-03-16 16:11:57.279753316 UTC

.section .text
.align 8
_cga3y:
_cga3y:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uga46
_cga3L:
	movq $block_cga3J_info,-8(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cga3J
_cga3M:
	movq (%rbx),%rax
	jmp *(%rax)
_uga46:
	addq $24,%rbp
	jmp _cga3G
	.size _cga3y, .-_cga3y


==================== Asm code ====================
2018-03-16 16:11:57.280479312 UTC

.section .data.rel.ro
.align 8
.align 1
block_cga3y_info:
	.quad	_cga3y
	.quad	2
	.quad	21474836510
	.quad	Sg5Oh_srt+584


==================== Asm code ====================
2018-03-16 16:11:57.281113127 UTC

.section .text
.align 8
_cga3G:
_cga3G:
	movl $GHC.List.badHead_closure,%ebx
	jmp stg_ap_0_fast
	.size _cga3G, .-_cga3G


==================== Asm code ====================
2018-03-16 16:11:57.281832491 UTC

.section .text
.align 8
_cga3J:
_cga3J:
	movq $block_cga3Q_info,(%rbp)
	movl $Data.Functor.Product.$fRead1Product2_closure,%esi
	movq 15(%rbx),%r14
	jmp GHC.Base.eqString_entry
	.size _cga3J, .-_cga3J


==================== Asm code ====================
2018-03-16 16:11:57.282468487 UTC

.section .data.rel.ro
.align 8
.align 1
block_cga3J_info:
	.quad	_cga3J
	.quad	3
	.quad	21474836510
	.quad	Sg5Oh_srt+584


==================== Asm code ====================
2018-03-16 16:11:57.283231358 UTC

.section .text
.align 8
_cga3Q:
_cga3Q:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cga3X
_cga41:
	movq 24(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cga3X:
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp _cga3g
	.size _cga3Q, .-_cga3Q


==================== Asm code ====================
2018-03-16 16:11:57.283924764 UTC

.section .data.rel.ro
.align 8
.align 1
block_cga3Q_info:
	.quad	_cga3Q
	.quad	3
	.quad	21474836510
	.quad	Sg5Oh_srt+584


==================== Asm code ====================
2018-03-16 16:11:57.28728998 UTC

.section .data
.align 8
.align 1
$cPair1_rg5o3_closure:
	.quad	Data.Data.AlgConstr_con_info
	.quad	$cPair2_rg5o4_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.287883993 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct4_closure
.type Data.Functor.Product.$fDataProduct4_closure, @object
Data.Functor.Product.$fDataProduct4_closure:
	.quad	:_con_info
	.quad	Data.Functor.Product.$cPair_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.288489465 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct3_closure
.type Data.Functor.Product.$fDataProduct3_closure, @object
Data.Functor.Product.$fDataProduct3_closure:
	.quad	Data.Data.AlgRep_con_info
	.quad	Data.Functor.Product.$fDataProduct4_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.289081372 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$tProduct_closure
.type Data.Functor.Product.$tProduct_closure, @object
Data.Functor.Product.$tProduct_closure:
	.quad	Data.Data.DataType_con_info
	.quad	Data.Functor.Product.$fDataProduct5_closure
	.quad	Data.Functor.Product.$fDataProduct3_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.289741626 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$cPair_closure
.type Data.Functor.Product.$cPair_closure, @object
Data.Functor.Product.$cPair_closure:
	.quad	Data.Data.Constr_con_info
	.quad	$cPair1_rg5o3_closure+1
	.quad	Data.Functor.Product.$fRead1Product2_closure
	.quad	GHC.Types.[]_closure+1
	.quad	Data.Data.Prefix_closure+1
	.quad	Data.Functor.Product.$tProduct_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.290370436 UTC

.section .data
.align 8
.align 1
$cPair2_rg5o4_closure:
	.quad	$cPair2_rg5o4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.291264295 UTC

.section .text
.align 8
$cPair2_rg5o4_entry:
_cga4T:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cga4U
_cga4V:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cga4S
_cga4R:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Data.Data.mkConstr1_closure,%esi
	movl $Data.Functor.Product.$fDataProduct4_closure+2,%r14d
	addq $-16,%rbp
	jmp go61_rg5o2_entry
_cga4U:
	jmp *-16(%r13)
_cga4S:
	movq (%rbx),%rax
	jmp *(%rax)
	.size $cPair2_rg5o4_entry, .-$cPair2_rg5o4_entry


==================== Asm code ====================
2018-03-16 16:11:57.2920069 UTC

.section .data.rel.ro
.align 8
.align 1
$cPair2_rg5o4_info:
	.quad	$cPair2_rg5o4_entry
	.quad	0
	.quad	55834574869
	.quad	Sg5Oh_srt+592


==================== Asm code ====================
2018-03-16 16:11:57.293857708 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Product.$trModule4_bytes
.type Data.Functor.Product.$trModule4_bytes, @object
Data.Functor.Product.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:11:57.295684983 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$trModule3_closure
.type Data.Functor.Product.$trModule3_closure, @object
Data.Functor.Product.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.Functor.Product.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:11:57.297929066 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Product.$trModule2_bytes
.type Data.Functor.Product.$trModule2_bytes, @object
Data.Functor.Product.$trModule2_bytes:
	.asciz "Data.Functor.Product"


==================== Asm code ====================
2018-03-16 16:11:57.300217198 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$trModule1_closure
.type Data.Functor.Product.$trModule1_closure, @object
Data.Functor.Product.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.Functor.Product.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:11:57.301986355 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$trModule_closure
.type Data.Functor.Product.$trModule_closure, @object
Data.Functor.Product.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	Data.Functor.Product.$trModule3_closure+1
	.quad	Data.Functor.Product.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:11:57.303665225 UTC

.section .data
.align 8
.align 1
$krep_rg5o5_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.305450336 UTC

.section .data
.align 8
.align 1
$krep1_rg5o6_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rg5o5_closure+2
	.quad	GHC.Types.krep$*_closure
	.quad	3


==================== Asm code ====================
2018-03-16 16:11:57.307241486 UTC

.section .data
.align 8
.align 1
$krep2_rg5o7_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rg5o6_closure+4
	.quad	$krep1_rg5o6_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:11:57.30906987 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct8_closure
.type Data.Functor.Product.$fDataProduct8_closure, @object
Data.Functor.Product.$fDataProduct8_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rg5o6_closure+4
	.quad	$krep2_rg5o7_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:11:57.310829309 UTC

.section .data
.align 8
.align 1
$krep3_rg5o8_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	2


==================== Asm code ====================
2018-03-16 16:11:57.312575198 UTC

.section .data
.align 8
.align 1
$krep4_rg5o9_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 16:11:57.31430759 UTC

.section .data
.align 8
.align 1
$krep5_rg5oa_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	3


==================== Asm code ====================
2018-03-16 16:11:57.316119727 UTC

.section .data
.align 8
.align 1
$krep6_rg5ob_closure:
	.quad	GHC.Types.KindRepApp_con_info
	.quad	$krep4_rg5o9_closure+2
	.quad	$krep5_rg5oa_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:11:57.318569085 UTC

.section .data
.align 8
.align 1
$krep7_rg5oc_closure:
	.quad	GHC.Types.KindRepApp_con_info
	.quad	$krep3_rg5o8_closure+2
	.quad	$krep5_rg5oa_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:11:57.320355377 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct9_closure
.type Data.Functor.Product.$fDataProduct9_closure, @object
Data.Functor.Product.$fDataProduct9_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.Functor.Product.$fDataProduct6_bytes


==================== Asm code ====================
2018-03-16 16:11:57.322432449 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$tcProduct_closure
.type Data.Functor.Product.$tcProduct_closure, @object
Data.Functor.Product.$tcProduct_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Data.Functor.Product.$trModule_closure+1
	.quad	Data.Functor.Product.$fDataProduct9_closure+1
	.quad	Data.Functor.Product.$fDataProduct8_closure+4
	.quad	-8542107637719446275
	.quad	-2377250882401215452
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 16:11:57.324890494 UTC

.section .data
.align 8
.align 1
$krep8_rg5od_closure:
	.quad	:_con_info
	.quad	$krep5_rg5oa_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:11:57.326602416 UTC

.section .data
.align 8
.align 1
$krep9_rg5oe_closure:
	.quad	:_con_info
	.quad	$krep3_rg5o8_closure+2
	.quad	$krep8_rg5od_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:11:57.328319195 UTC

.section .data
.align 8
.align 1
$krep10_rg5of_closure:
	.quad	:_con_info
	.quad	$krep4_rg5o9_closure+2
	.quad	$krep9_rg5oe_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:11:57.330195884 UTC

.section .data
.align 8
.align 1
$krep11_rg5og_closure:
	.quad	:_con_info
	.quad	$krep_rg5o5_closure+2
	.quad	$krep10_rg5of_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:11:57.33194031 UTC

.section .data
.align 8
.align 1
$krep12_rg5oh_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	Data.Functor.Product.$tcProduct_closure+1
	.quad	$krep11_rg5og_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:11:57.33365018 UTC

.section .data
.align 8
.align 1
$krep13_rg5oi_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep7_rg5oc_closure+3
	.quad	$krep12_rg5oh_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:11:57.335396924 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$tc'Pair1_closure
.type Data.Functor.Product.$tc'Pair1_closure, @object
Data.Functor.Product.$tc'Pair1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep6_rg5ob_closure+3
	.quad	$krep13_rg5oi_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:11:57.337136295 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Product.$tc'Pair3_bytes
.type Data.Functor.Product.$tc'Pair3_bytes, @object
Data.Functor.Product.$tc'Pair3_bytes:
	.asciz "'Pair"


==================== Asm code ====================
2018-03-16 16:11:57.339557438 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$tc'Pair2_closure
.type Data.Functor.Product.$tc'Pair2_closure, @object
Data.Functor.Product.$tc'Pair2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.Functor.Product.$tc'Pair3_bytes


==================== Asm code ====================
2018-03-16 16:11:57.341554891 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$tc'Pair_closure
.type Data.Functor.Product.$tc'Pair_closure, @object
Data.Functor.Product.$tc'Pair_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Data.Functor.Product.$trModule_closure+1
	.quad	Data.Functor.Product.$tc'Pair2_closure+1
	.quad	Data.Functor.Product.$tc'Pair1_closure+4
	.quad	-7072630821168255767
	.quad	-435066010643851693
	.quad	4
	.quad	3


==================== Asm code ====================
2018-03-16 16:11:57.347107551 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cp1Data_closure
.type Data.Functor.Product.$w$cp1Data_closure, @object
Data.Functor.Product.$w$cp1Data_closure:
	.quad	Data.Functor.Product.$w$cp1Data_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.348195531 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cp1Data_entry
.type Data.Functor.Product.$w$cp1Data_entry, @object
Data.Functor.Product.$w$cp1Data_entry:
_cga5L:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cga5P
_cga5Q:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cga5S
_cga5R:
	movq $Data.Typeable.Internal.SomeTypeRep_con_info,-32(%r12)
	movq %r8,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	movq $GHC.Types.[]_closure+1,(%r12)
	movq $block_cga5E_info,-32(%rbp)
	movl $1,%r9d
	movl $Data.Functor.Product.$fDataProduct9_closure+1,%r8d
	movq %rdi,%rax
	movl $Data.Functor.Product.$trModule_closure+1,%edi
	movq %rsi,%rbx
	movq $-2377250882401215452,%rsi
	movq %r14,%rcx
	movq $-8542107637719446275,%r14
	movq $Data.Functor.Product.$fDataProduct8_closure+4,-48(%rbp)
	leaq -14(%r12),%rdx
	movq %rdx,-40(%rbp)
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-48,%rbp
	jmp Data.Typeable.Internal.$wmkTrCon_entry
_cga5S:
	movq $40,904(%r13)
_cga5P:
	movl $Data.Functor.Product.$w$cp1Data_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cp1Data_entry, .-Data.Functor.Product.$w$cp1Data_entry


==================== Asm code ====================
2018-03-16 16:11:57.349088022 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cp1Data_info
.type Data.Functor.Product.$w$cp1Data_info, @object
Data.Functor.Product.$w$cp1Data_info:
	.quad	Data.Functor.Product.$w$cp1Data_entry
	.quad	0
	.quad	30064771086
	.quad	17179869208
	.quad	Sg5Oh_srt+624


==================== Asm code ====================
2018-03-16 16:11:57.350389107 UTC

.section .text
.align 8
_cga5E:
_cga5E:
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-40,%rbp
	jmp _cga5F
	.size _cga5E, .-_cga5E


==================== Asm code ====================
2018-03-16 16:11:57.351110211 UTC

.section .data.rel.ro
.align 8
.align 1
block_cga5E_info:
	.quad	_cga5E
	.quad	3
	.quad	4294967326
	.quad	Sg5Oh_srt+624


==================== Asm code ====================
2018-03-16 16:11:57.351902045 UTC

.section .text
.align 8
_cga5F:
_cga5F:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cga5V
_cga5U:
	movq $Data.Typeable.Internal.TrTyCon_con_info,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_cga5J_info,40(%rbp)
	movq 56(%rbp),%rsi
	leaq -38(%r12),%r14
	addq $40,%rbp
	jmp Data.Typeable.Internal.mkTrApp_entry
_cga5V:
	movq $48,904(%r13)
	movq $block_cga5F_info,(%rbp)
	jmp stg_gc_noregs
	.size _cga5F, .-_cga5F


==================== Asm code ====================
2018-03-16 16:11:57.352646022 UTC

.section .data.rel.ro
.align 8
.align 1
block_cga5F_info:
	.quad	_cga5F
	.quad	1096
	.quad	4294967326
	.quad	Sg5Oh_srt+624


==================== Asm code ====================
2018-03-16 16:11:57.353334537 UTC

.section .text
.align 8
_cga5J:
_cga5J:
	movq $block_cga5O_info,(%rbp)
	movq 24(%rbp),%rsi
	movq %rbx,%r14
	jmp Data.Typeable.Internal.mkTrApp_entry
	.size _cga5J, .-_cga5J


==================== Asm code ====================
2018-03-16 16:11:57.353943551 UTC

.section .data.rel.ro
.align 8
.align 1
block_cga5J_info:
	.quad	_cga5J
	.quad	131
	.quad	4294967326
	.quad	Sg5Oh_srt+624


==================== Asm code ====================
2018-03-16 16:11:57.354612512 UTC

.section .text
.align 8
_cga5O:
_cga5O:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $32,%rbp
	jmp Data.Typeable.Internal.mkTrApp_entry
	.size _cga5O, .-_cga5O


==================== Asm code ====================
2018-03-16 16:11:57.355206425 UTC

.section .data.rel.ro
.align 8
.align 1
block_cga5O_info:
	.quad	_cga5O
	.quad	387
	.quad	4294967326
	.quad	Sg5Oh_srt+624


==================== Asm code ====================
2018-03-16 16:11:57.358375431 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct7_closure
.type Data.Functor.Product.$fDataProduct7_closure, @object
Data.Functor.Product.$fDataProduct7_closure:
	.quad	Data.Functor.Product.$fDataProduct7_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.359078409 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct7_entry
.type Data.Functor.Product.$fDataProduct7_entry, @object
Data.Functor.Product.$fDataProduct7_entry:
_cga6v:
	addq $8,%rbp
	jmp Data.Functor.Product.$w$cp1Data_entry
	.size Data.Functor.Product.$fDataProduct7_entry, .-Data.Functor.Product.$fDataProduct7_entry


==================== Asm code ====================
2018-03-16 16:11:57.359725318 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct7_info
.type Data.Functor.Product.$fDataProduct7_info, @object
Data.Functor.Product.$fDataProduct7_info:
	.quad	Data.Functor.Product.$fDataProduct7_entry
	.quad	0
	.quad	4294967310
	.quad	25769803802
	.quad	Sg5Oh_srt+640


==================== Asm code ====================
2018-03-16 16:11:57.361597018 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct1_closure
.type Data.Functor.Product.$fDataProduct1_closure, @object
Data.Functor.Product.$fDataProduct1_closure:
	.quad	(,)_con_info
	.quad	Data.Functor.Product.Pair_closure+2
	.quad	GHC.Types.False_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:11:57.378895329 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cgmapMp_closure
.type Data.Functor.Product.$w$cgmapMp_closure, @object
Data.Functor.Product.$w$cgmapMp_closure:
	.quad	Data.Functor.Product.$w$cgmapMp_info


==================== Asm code ====================
2018-03-16 16:11:57.379789966 UTC

.section .text
.align 8
lvl9_sg5Gw_entry:
_cga6L:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cga6M
_cga6N:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mzero_entry
_cga6M:
	jmp *-16(%r13)
	.size lvl9_sg5Gw_entry, .-lvl9_sg5Gw_entry


==================== Asm code ====================
2018-03-16 16:11:57.380464506 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_sg5Gw_info:
	.quad	lvl9_sg5Gw_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.381215593 UTC

.section .text
.align 8
sat_sg5H1_entry:
_cga70:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cga71
_cga72:
	movq $block_cga6X_info,-24(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cga6X
_cga6Y:
	movq (%rbx),%rax
	jmp *(%rax)
_cga71:
	jmp *-8(%r13)
	.size sat_sg5H1_entry, .-sat_sg5H1_entry


==================== Asm code ====================
2018-03-16 16:11:57.382000042 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5H1_info:
	.quad	sat_sg5H1_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:57.382725916 UTC

.section .text
.align 8
_cga6X:
_cga6X:
	movq $block_cga75_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cga75
_cga77:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cga6X, .-_cga6X


==================== Asm code ====================
2018-03-16 16:11:57.383383008 UTC

.section .data.rel.ro
.align 8
.align 1
block_cga6X_info:
	.quad	_cga6X
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.384090204 UTC

.section .text
.align 8
_cga75:
_cga75:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cga7d
_cga7h:
	movq 24(%rbp),%r14
	movq $stg_ap_p_info,16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp GHC.Base.return_entry
_cga7d:
	movq 16(%rbp),%rbx
	addq $32,%rbp
	jmp stg_ap_0_fast
	.size _cga75, .-_cga75


==================== Asm code ====================
2018-03-16 16:11:57.384737875 UTC

.section .data.rel.ro
.align 8
.align 1
block_cga75_info:
	.quad	_cga75
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.385595489 UTC

.section .text
.align 8
sat_sg5GR_entry:
_cga7Q:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cga7R
_cga7S:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cga7U
_cga7T:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	movq $stg_ap_2_upd_info,-48(%r12)
	movq %rdx,-32(%r12)
	movq %rcx,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -48(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-32(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.return_entry
_cga7U:
	movq $56,904(%r13)
_cga7R:
	jmp *-16(%r13)
	.size sat_sg5GR_entry, .-sat_sg5GR_entry


==================== Asm code ====================
2018-03-16 16:11:57.386408384 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5GR_info:
	.quad	sat_sg5GR_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.387271385 UTC

.section .text
.align 8
sat_sg5GN_entry:
_cga86:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cga87
_cga88:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cga8a
_cga89:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $stg_ap_2_upd_info,-48(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -48(%r12),%rbx
	movq %rbx,-8(%r12)
	movq $GHC.Types.True_closure+2,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-16(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.return_entry
_cga8a:
	movq $56,904(%r13)
_cga87:
	jmp *-8(%r13)
	.size sat_sg5GN_entry, .-sat_sg5GN_entry


==================== Asm code ====================
2018-03-16 16:11:57.388020641 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5GN_info:
	.quad	sat_sg5GN_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:57.388838727 UTC

.section .text
.align 8
sat_sg5GO_entry:
_cga8b:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cga8c
_cga8d:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cga8f
_cga8e:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_sg5GN_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq %rcx,-32(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.>>=_entry
_cga8f:
	movq $24,904(%r13)
_cga8c:
	jmp *-16(%r13)
	.size sat_sg5GO_entry, .-sat_sg5GO_entry


==================== Asm code ====================
2018-03-16 16:11:57.389613248 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5GO_info:
	.quad	sat_sg5GO_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.390353803 UTC

.section .text
.align 8
sat_sg5GS_entry:
_cga8g:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cga8h
_cga8i:
	movq $block_cga7F_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cga7F
_cga7G:
	movq (%rbx),%rax
	jmp *(%rax)
_cga8h:
	jmp *-8(%r13)
	.size sat_sg5GS_entry, .-sat_sg5GS_entry


==================== Asm code ====================
2018-03-16 16:11:57.391109241 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5GS_info:
	.quad	sat_sg5GS_entry
	.quad	4
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:57.391874614 UTC

.section .text
.align 8
_cga7F:
_cga7F:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cga8l
_cga8k:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sg5GR_info,-80(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-64(%r12)
	movq 24(%rbp),%rdx
	movq %rdx,-56(%r12)
	movq %rax,-48(%r12)
	movq %rbx,-40(%r12)
	movq $sat_sg5GO_info,-32(%r12)
	movq %rcx,-16(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	movq 8(%rbp),%r14
	movq $stg_ap_pp_info,16(%rbp)
	leaq -32(%r12),%rax
	movq %rax,24(%rbp)
	leaq -80(%r12),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp GHC.Base.mplus_entry
_cga8l:
	movq $88,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cga7F, .-_cga7F


==================== Asm code ====================
2018-03-16 16:11:57.392661609 UTC

.section .data.rel.ro
.align 8
.align 1
block_cga7F_info:
	.quad	_cga7F
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.393590509 UTC

.section .text
.align 8
k1_sg5GB_entry:
_cga8n:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cga8o
_cga8p:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cga8r
_cga8q:
	movq 5(%rbx),%rax
	movq 13(%rbx),%rcx
	movq 21(%rbx),%rbx
	movq $stg_ap_3_upd_info,-72(%r12)
	movq %rcx,-56(%r12)
	movq %r14,-48(%r12)
	movq %rdi,-40(%r12)
	movq $sat_sg5GS_info,-32(%r12)
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rdi,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rsi,-16(%rbp)
	leaq -31(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cga8r:
	movq $80,904(%r13)
_cga8o:
	jmp *-8(%r13)
	.size k1_sg5GB_entry, .-k1_sg5GB_entry


==================== Asm code ====================
2018-03-16 16:11:57.394399685 UTC

.section .data.rel.ro
.align 8
.align 1
k1_sg5GB_info:
	.quad	k1_sg5GB_entry
	.quad	3
	.quad	8
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:57.39511945 UTC

.section .text
.align 8
sat_sg5GT_entry:
_cga8A:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cga8B
_cga8C:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $Data.Functor.Product.$fDataProduct1_closure+1,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.return_entry
_cga8B:
	jmp *-16(%r13)
	.size sat_sg5GT_entry, .-sat_sg5GT_entry


==================== Asm code ====================
2018-03-16 16:11:57.395768894 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5GT_info:
	.quad	sat_sg5GT_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.396589862 UTC

.section .text
.align 8
sat_sg5GU_entry:
_cga8D:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cga8E
_cga8F:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cga8H
_cga8G:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	movq $sat_sg5GT_info,-16(%r12)
	movq %rcx,(%r12)
	movq %rdx,%rdi
	leaq -16(%r12),%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp k1_sg5GB_entry
_cga8H:
	movq $24,904(%r13)
_cga8E:
	jmp *-16(%r13)
	.size sat_sg5GU_entry, .-sat_sg5GU_entry


==================== Asm code ====================
2018-03-16 16:11:57.397344484 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5GU_info:
	.quad	sat_sg5GU_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.39816917 UTC

.section .text
.align 8
sat_sg5GV_entry:
_cga8I:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cga8J
_cga8K:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cga7p_info,-64(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq %rax,-56(%rbp)
	movq %rcx,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _cga7p
_cga7q:
	movq (%rbx),%rax
	jmp *(%rax)
_cga8J:
	jmp *-16(%r13)
	.size sat_sg5GV_entry, .-sat_sg5GV_entry


==================== Asm code ====================
2018-03-16 16:11:57.398923423 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5GV_info:
	.quad	sat_sg5GV_entry
	.quad	6
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.399740655 UTC

.section .text
.align 8
_cga7p:
_cga7p:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cga8N
_cga8M:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $k1_sg5GB_info,-72(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-64(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-56(%r12)
	movq 40(%rbp),%rcx
	movq %rcx,-48(%r12)
	movq $sat_sg5GU_info,-40(%r12)
	movq 8(%rbp),%rdx
	movq %rdx,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	leaq -69(%r12),%rax
	movq %rax,(%r12)
	movq %rbx,%rdi
	leaq -40(%r12),%rsi
	movq 16(%rbp),%r14
	movq %rax,%rbx
	addq $48,%rbp
	jmp k1_sg5GB_entry
_cga8N:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cga7p, .-_cga7p


==================== Asm code ====================
2018-03-16 16:11:57.400509399 UTC

.section .data.rel.ro
.align 8
.align 1
block_cga7p_info:
	.quad	_cga7p
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.401719852 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cgmapMp_entry
.type Data.Functor.Product.$w$cgmapMp_entry, @object
Data.Functor.Product.$w$cgmapMp_entry:
_cga8P:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cga8Q
_cga8R:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cga8T
_cga8S:
	movq $lvl9_sg5Gw_info,-16(%r12)
	movq %rdi,(%r12)
	movq $block_cga6O_info,-56(%rbp)
	movq %r14,%rax
	movq %rdi,%r14
	leaq -16(%r12),%rbx
	movq %rbx,-48(%rbp)
	movq %rax,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-56,%rbp
	jmp GHC.Base.$p2MonadPlus_entry
_cga8T:
	movq $24,904(%r13)
_cga8Q:
	movl $Data.Functor.Product.$w$cgmapMp_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cgmapMp_entry, .-Data.Functor.Product.$w$cgmapMp_entry


==================== Asm code ====================
2018-03-16 16:11:57.402490275 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cgmapMp_info
.type Data.Functor.Product.$w$cgmapMp_info, @object
Data.Functor.Product.$w$cgmapMp_info:
	.quad	Data.Functor.Product.$w$cgmapMp_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:11:57.403323453 UTC

.section .text
.align 8
_cga6O:
_cga6O:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cga8W
_cga8V:
	movq $sat_sg5H1_info,-80(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq $sat_sg5GV_info,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	movq 32(%rbp),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-16(%r12)
	movq 48(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,32(%rbp)
	leaq -56(%r12),%rax
	movq %rax,40(%rbp)
	leaq -79(%r12),%rax
	movq %rax,48(%rbp)
	addq $32,%rbp
	jmp GHC.Base.>>=_entry
_cga8W:
	movq $88,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cga6O, .-_cga6O


==================== Asm code ====================
2018-03-16 16:11:57.404155044 UTC

.section .data.rel.ro
.align 8
.align 1
block_cga6O_info:
	.quad	_cga6O
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.407771747 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgmapMp_closure
.type Data.Functor.Product.$fDataProduct_$cgmapMp_closure, @object
Data.Functor.Product.$fDataProduct_$cgmapMp_closure:
	.quad	Data.Functor.Product.$fDataProduct_$cgmapMp_info


==================== Asm code ====================
2018-03-16 16:11:57.408448775 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgmapMp_slow
.type Data.Functor.Product.$fDataProduct_$cgmapMp_slow, @object
Data.Functor.Product.$fDataProduct_$cgmapMp_slow:
_cgaaq:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$fDataProduct_$cgmapMp_entry
	.size Data.Functor.Product.$fDataProduct_$cgmapMp_slow, .-Data.Functor.Product.$fDataProduct_$cgmapMp_slow


==================== Asm code ====================
2018-03-16 16:11:57.40915417 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgmapMp_entry
.type Data.Functor.Product.$fDataProduct_$cgmapMp_entry, @object
Data.Functor.Product.$fDataProduct_$cgmapMp_entry:
_cgaau:
	movq %r9,%rax
	movq 24(%rbp),%r9
	movq 16(%rbp),%r8
	movq 8(%rbp),%rdi
	movq (%rbp),%rsi
	movq %rax,%r14
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cgmapMp_entry
	.size Data.Functor.Product.$fDataProduct_$cgmapMp_entry, .-Data.Functor.Product.$fDataProduct_$cgmapMp_entry


==================== Asm code ====================
2018-03-16 16:11:57.409802314 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgmapMp_info
.type Data.Functor.Product.$fDataProduct_$cgmapMp_info, @object
Data.Functor.Product.$fDataProduct_$cgmapMp_info:
	.quad	Data.Functor.Product.$fDataProduct_$cgmapMp_entry
	.quad	0
	.quad	14
	.quad	38654705664
	.quad	0
	.quad	9
	.quad	Data.Functor.Product.$fDataProduct_$cgmapMp_slow


==================== Asm code ====================
2018-03-16 16:11:57.417058599 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cgmapM_closure
.type Data.Functor.Product.$w$cgmapM_closure, @object
Data.Functor.Product.$w$cgmapM_closure:
	.quad	Data.Functor.Product.$w$cgmapM_info


==================== Asm code ====================
2018-03-16 16:11:57.417992141 UTC

.section .text
.align 8
sat_sg5Hp_entry:
_cgaaY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaaZ
_cgab0:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cgab2
_cgab1:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $stg_ap_2_upd_info,-24(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.return_entry
_cgab2:
	movq $32,904(%r13)
_cgaaZ:
	jmp *-8(%r13)
	.size sat_sg5Hp_entry, .-sat_sg5Hp_entry


==================== Asm code ====================
2018-03-16 16:11:57.418750544 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Hp_info:
	.quad	sat_sg5Hp_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:57.419561585 UTC

.section .text
.align 8
sat_sg5Hq_entry:
_cgab3:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgab4
_cgab5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgab7
_cgab6:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sg5Hp_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rbx,-16(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cgab7:
	movq $24,904(%r13)
_cgab4:
	jmp *-8(%r13)
	.size sat_sg5Hq_entry, .-sat_sg5Hq_entry


==================== Asm code ====================
2018-03-16 16:11:57.420302713 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Hq_info:
	.quad	sat_sg5Hq_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:57.421164681 UTC

.section .text
.align 8
k1_sg5Hh_entry:
_cgab8:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgab9
_cgaba:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cgabc
_cgabb:
	movq 5(%rbx),%rax
	movq 13(%rbx),%rbx
	movq $stg_ap_3_upd_info,-56(%r12)
	movq %rbx,-40(%r12)
	movq %r14,-32(%r12)
	movq %rdi,-24(%r12)
	movq $sat_sg5Hq_info,-16(%r12)
	movq %rax,-8(%r12)
	leaq -56(%r12),%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rsi,-16(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cgabc:
	movq $64,904(%r13)
_cgab9:
	jmp *-8(%r13)
	.size k1_sg5Hh_entry, .-k1_sg5Hh_entry


==================== Asm code ====================
2018-03-16 16:11:57.422241034 UTC

.section .data.rel.ro
.align 8
.align 1
k1_sg5Hh_info:
	.quad	k1_sg5Hh_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:57.422995627 UTC

.section .text
.align 8
sat_sg5Hr_entry:
_cgabl:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgabm
_cgabn:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $Data.Functor.Product.Pair_closure+2,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.return_entry
_cgabm:
	jmp *-16(%r13)
	.size sat_sg5Hr_entry, .-sat_sg5Hr_entry


==================== Asm code ====================
2018-03-16 16:11:57.423675877 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Hr_info:
	.quad	sat_sg5Hr_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.42452768 UTC

.section .text
.align 8
sat_sg5Hs_entry:
_cgabo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgabp
_cgabq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgabs
_cgabr:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	movq $sat_sg5Hr_info,-16(%r12)
	movq %rcx,(%r12)
	movq %rdx,%rdi
	leaq -16(%r12),%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp k1_sg5Hh_entry
_cgabs:
	movq $24,904(%r13)
_cgabp:
	jmp *-16(%r13)
	.size sat_sg5Hs_entry, .-sat_sg5Hs_entry


==================== Asm code ====================
2018-03-16 16:11:57.425206282 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Hs_info:
	.quad	sat_sg5Hs_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.426042712 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cgmapM_entry
.type Data.Functor.Product.$w$cgmapM_entry, @object
Data.Functor.Product.$w$cgmapM_entry:
_cgabt:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cgabx
_cgabw:
	movq $k1_sg5Hh_info,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq $sat_sg5Hs_info,-40(%r12)
	movq %r14,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r9,-8(%r12)
	leaq -61(%r12),%rax
	movq %rax,(%r12)
	movq (%rbp),%rdi
	movq %rsi,%rbx
	leaq -40(%r12),%rsi
	movq %rbx,%r14
	movq %rax,%rbx
	addq $8,%rbp
	jmp k1_sg5Hh_entry
_cgabx:
	movq $72,904(%r13)
	movl $Data.Functor.Product.$w$cgmapM_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cgmapM_entry, .-Data.Functor.Product.$w$cgmapM_entry


==================== Asm code ====================
2018-03-16 16:11:57.426808439 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cgmapM_info
.type Data.Functor.Product.$w$cgmapM_info, @object
Data.Functor.Product.$w$cgmapM_info:
	.quad	Data.Functor.Product.$w$cgmapM_entry
	.quad	0
	.quad	14
	.quad	25769803802


==================== Asm code ====================
2018-03-16 16:11:57.43083386 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgmapM_closure
.type Data.Functor.Product.$fDataProduct_$cgmapM_closure, @object
Data.Functor.Product.$fDataProduct_$cgmapM_closure:
	.quad	Data.Functor.Product.$fDataProduct_$cgmapM_info


==================== Asm code ====================
2018-03-16 16:11:57.431513027 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgmapM_slow
.type Data.Functor.Product.$fDataProduct_$cgmapM_slow, @object
Data.Functor.Product.$fDataProduct_$cgmapM_slow:
_cgac1:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$fDataProduct_$cgmapM_entry
	.size Data.Functor.Product.$fDataProduct_$cgmapM_slow, .-Data.Functor.Product.$fDataProduct_$cgmapM_slow


==================== Asm code ====================
2018-03-16 16:11:57.432413106 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgmapM_entry
.type Data.Functor.Product.$fDataProduct_$cgmapM_entry, @object
Data.Functor.Product.$fDataProduct_$cgmapM_entry:
_cgac8:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgac9
_cgaca:
	movq $block_cgac5_info,-8(%rbp)
	movq 24(%rbp),%rbx
	movq %r9,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgac5
_cgac6:
	movq (%rbx),%rax
	jmp *(%rax)
_cgac9:
	movl $Data.Functor.Product.$fDataProduct_$cgmapM_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$fDataProduct_$cgmapM_entry, .-Data.Functor.Product.$fDataProduct_$cgmapM_entry


==================== Asm code ====================
2018-03-16 16:11:57.434075044 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgmapM_info
.type Data.Functor.Product.$fDataProduct_$cgmapM_info, @object
Data.Functor.Product.$fDataProduct_$cgmapM_info:
	.quad	Data.Functor.Product.$fDataProduct_$cgmapM_entry
	.quad	0
	.quad	14
	.quad	38654705664
	.quad	0
	.quad	9
	.quad	Data.Functor.Product.$fDataProduct_$cgmapM_slow


==================== Asm code ====================
2018-03-16 16:11:57.434816564 UTC

.section .text
.align 8
_cgac5:
_cgac5:
	movq 7(%rbx),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 32(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cgmapM_entry
	.size _cgac5, .-_cgac5


==================== Asm code ====================
2018-03-16 16:11:57.435437731 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgac5_info:
	.quad	_cgac5
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.440131093 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgmapQi_closure
.type Data.Functor.Product.$fDataProduct_$cgmapQi_closure, @object
Data.Functor.Product.$fDataProduct_$cgmapQi_closure:
	.quad	Data.Functor.Product.$fDataProduct_$cgmapQi_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.440837967 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgmapQi_slow
.type Data.Functor.Product.$fDataProduct_$cgmapQi_slow, @object
Data.Functor.Product.$fDataProduct_$cgmapQi_slow:
_cgacs:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$fDataProduct_$cgmapQi_entry
	.size Data.Functor.Product.$fDataProduct_$cgmapQi_slow, .-Data.Functor.Product.$fDataProduct_$cgmapQi_slow


==================== Asm code ====================
2018-03-16 16:11:57.441721817 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgmapQi_entry
.type Data.Functor.Product.$fDataProduct_$cgmapQi_entry, @object
Data.Functor.Product.$fDataProduct_$cgmapQi_entry:
_cgacz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgacD
_cgacE:
	movq $block_cgacw_info,-8(%rbp)
	movq 24(%rbp),%rbx
	movq %r9,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgacw
_cgacx:
	movq (%rbx),%rax
	jmp *(%rax)
_cgacD:
	movl $Data.Functor.Product.$fDataProduct_$cgmapQi_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$fDataProduct_$cgmapQi_entry, .-Data.Functor.Product.$fDataProduct_$cgmapQi_entry


==================== Asm code ====================
2018-03-16 16:11:57.442456239 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgmapQi_info
.type Data.Functor.Product.$fDataProduct_$cgmapQi_info, @object
Data.Functor.Product.$fDataProduct_$cgmapQi_info:
	.quad	Data.Functor.Product.$fDataProduct_$cgmapQi_entry
	.quad	0
	.quad	12884901902
	.quad	38654705664
	.quad	Sg5Oh_srt+648
	.quad	9
	.quad	Data.Functor.Product.$fDataProduct_$cgmapQi_slow


==================== Asm code ====================
2018-03-16 16:11:57.443227374 UTC

.section .text
.align 8
_cgacw:
_cgacw:
	movq $block_cgacC_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgacC
_cgacG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgacw, .-_cgacw


==================== Asm code ====================
2018-03-16 16:11:57.443864635 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgacw_info:
	.quad	_cgacw
	.quad	4
	.quad	4294967326
	.quad	Sg5Oh_srt+648


==================== Asm code ====================
2018-03-16 16:11:57.444676261 UTC

.section .text
.align 8
_cgacC:
_cgacC:
	movq 32(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jne _ugacQ
_cgacO:
	movq 24(%rbp),%rsi
	movq 40(%rbp),%r14
	movq %rax,%rbx
	addq $48,%rbp
	jmp stg_ap_pp_fast
_ugacQ:
	cmpq $1,%rbx
	jne _cgacN
_cgacP:
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	movq %rax,%rbx
	addq $48,%rbp
	jmp stg_ap_pp_fast
_cgacN:
	movl $Data.Maybe.fromJust1_closure,%ebx
	addq $48,%rbp
	jmp stg_ap_0_fast
	.size _cgacC, .-_cgacC


==================== Asm code ====================
2018-03-16 16:11:57.445351879 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgacC_info:
	.quad	_cgacC
	.quad	5
	.quad	4294967326
	.quad	Sg5Oh_srt+648


==================== Asm code ====================
2018-03-16 16:11:57.450721087 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgmapQr_closure
.type Data.Functor.Product.$fDataProduct_$cgmapQr_closure, @object
Data.Functor.Product.$fDataProduct_$cgmapQr_closure:
	.quad	Data.Functor.Product.$fDataProduct_$cgmapQr_info


==================== Asm code ====================
2018-03-16 16:11:57.451457993 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgmapQr_slow
.type Data.Functor.Product.$fDataProduct_$cgmapQr_slow, @object
Data.Functor.Product.$fDataProduct_$cgmapQr_slow:
_cgad9:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$fDataProduct_$cgmapQr_entry
	.size Data.Functor.Product.$fDataProduct_$cgmapQr_slow, .-Data.Functor.Product.$fDataProduct_$cgmapQr_slow


==================== Asm code ====================
2018-03-16 16:11:57.452373649 UTC

.section .text
.align 8
sat_sg5I9_entry:
_cgadn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgado
_cgadp:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cgadr
_cgadq:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq $stg_ap_3_upd_info,-32(%r12)
	movq %rsi,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq %rdx,%rsi
	leaq -32(%r12),%r14
	movq %rcx,%rbx
	addq $-16,%rbp
	jmp stg_ap_pp_fast
_cgadr:
	movq $40,904(%r13)
_cgado:
	jmp *-16(%r13)
	.size sat_sg5I9_entry, .-sat_sg5I9_entry


==================== Asm code ====================
2018-03-16 16:11:57.453126421 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5I9_info:
	.quad	sat_sg5I9_entry
	.quad	5
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.454005013 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgmapQr_entry
.type Data.Functor.Product.$fDataProduct_$cgmapQr_entry, @object
Data.Functor.Product.$fDataProduct_$cgmapQr_entry:
_cgads:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgadu
_cgadv:
	movq $block_cgadd_info,-8(%rbp)
	movq 32(%rbp),%rbx
	movq %r9,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgadd
_cgade:
	movq (%rbx),%rax
	jmp *(%rax)
_cgadu:
	movl $Data.Functor.Product.$fDataProduct_$cgmapQr_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$fDataProduct_$cgmapQr_entry, .-Data.Functor.Product.$fDataProduct_$cgmapQr_entry


==================== Asm code ====================
2018-03-16 16:11:57.454798129 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgmapQr_info
.type Data.Functor.Product.$fDataProduct_$cgmapQr_info, @object
Data.Functor.Product.$fDataProduct_$cgmapQr_info:
	.quad	Data.Functor.Product.$fDataProduct_$cgmapQr_entry
	.quad	0
	.quad	14
	.quad	42949672960
	.quad	0
	.quad	10
	.quad	Data.Functor.Product.$fDataProduct_$cgmapQr_slow


==================== Asm code ====================
2018-03-16 16:11:57.455670882 UTC

.section .text
.align 8
_cgadd:
_cgadd:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cgady
_cgadx:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sg5I9_info,-88(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-64(%r12)
	movq 24(%rbp),%rdx
	movq %rdx,-56(%r12)
	movq 32(%rbp),%rdx
	movq %rdx,-48(%r12)
	movq %rbx,-40(%r12)
	movq $stg_ap_3_upd_info,-32(%r12)
	movq %rdx,-16(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -88(%r12),%rsi
	leaq -32(%r12),%r14
	movq %rcx,%rbx
	addq $48,%rbp
	jmp stg_ap_pp_fast
_cgady:
	movq $96,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cgadd, .-_cgadd


==================== Asm code ====================
2018-03-16 16:11:57.456463158 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgadd_info:
	.quad	_cgadd
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.4626287 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct2_closure
.type Data.Functor.Product.$fDataProduct2_closure, @object
Data.Functor.Product.$fDataProduct2_closure:
	.quad	Data.Functor.Product.$fDataProduct2_info


==================== Asm code ====================
2018-03-16 16:11:57.463392008 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct2_slow
.type Data.Functor.Product.$fDataProduct2_slow, @object
Data.Functor.Product.$fDataProduct2_slow:
_cgadT:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$fDataProduct2_entry
	.size Data.Functor.Product.$fDataProduct2_slow, .-Data.Functor.Product.$fDataProduct2_slow


==================== Asm code ====================
2018-03-16 16:11:57.46427964 UTC

.section .text
.align 8
sat_sg5Io_entry:
_cgae8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgae9
_cgaea:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cgaec
_cgaeb:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq $stg_ap_3_upd_info,-32(%r12)
	movq %rsi,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rsi
	movq %rdx,%r14
	movq %rcx,%rbx
	addq $-16,%rbp
	jmp stg_ap_pp_fast
_cgaec:
	movq $40,904(%r13)
_cgae9:
	jmp *-16(%r13)
	.size sat_sg5Io_entry, .-sat_sg5Io_entry


==================== Asm code ====================
2018-03-16 16:11:57.464975552 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Io_info:
	.quad	sat_sg5Io_entry
	.quad	5
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.466016699 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct2_entry
.type Data.Functor.Product.$fDataProduct2_entry, @object
Data.Functor.Product.$fDataProduct2_entry:
_cgaed:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaee
_cgaef:
	movq $block_cgadX_info,-8(%rbp)
	movq 32(%rbp),%rbx
	movq %r9,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgadX
_cgadY:
	movq (%rbx),%rax
	jmp *(%rax)
_cgaee:
	movl $Data.Functor.Product.$fDataProduct2_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$fDataProduct2_entry, .-Data.Functor.Product.$fDataProduct2_entry


==================== Asm code ====================
2018-03-16 16:11:57.466774515 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct2_info
.type Data.Functor.Product.$fDataProduct2_info, @object
Data.Functor.Product.$fDataProduct2_info:
	.quad	Data.Functor.Product.$fDataProduct2_entry
	.quad	0
	.quad	14
	.quad	42949672960
	.quad	0
	.quad	10
	.quad	Data.Functor.Product.$fDataProduct2_slow


==================== Asm code ====================
2018-03-16 16:11:57.467596389 UTC

.section .text
.align 8
_cgadX:
_cgadX:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cgaei
_cgaeh:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $stg_ap_3_upd_info,-88(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq 8(%rbp),%rdx
	movq %rdx,-64(%r12)
	movq %rbx,-56(%r12)
	movq $sat_sg5Io_info,-48(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 24(%rbp),%rdx
	movq %rdx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -88(%r12),%rsi
	leaq -48(%r12),%r14
	addq $48,%rbp
	jmp stg_ap_pp_fast
_cgaei:
	movq $96,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cgadX, .-_cgadX


==================== Asm code ====================
2018-03-16 16:11:57.468312599 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgadX_info:
	.quad	_cgadX
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.485501324 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cgmapMo_closure
.type Data.Functor.Product.$w$cgmapMo_closure, @object
Data.Functor.Product.$w$cgmapMo_closure:
	.quad	Data.Functor.Product.$w$cgmapMo_info


==================== Asm code ====================
2018-03-16 16:11:57.486385396 UTC

.section .text
.align 8
lvl9_sg5Iv_entry:
_cgaeK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaeL
_cgaeM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mzero_entry
_cgaeL:
	jmp *-16(%r13)
	.size lvl9_sg5Iv_entry, .-lvl9_sg5Iv_entry


==================== Asm code ====================
2018-03-16 16:11:57.48708261 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_sg5Iv_info:
	.quad	lvl9_sg5Iv_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.487835478 UTC

.section .text
.align 8
sat_sg5J3_entry:
_cgaeZ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaf0
_cgaf1:
	movq $block_cgaeW_info,-24(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cgaeW
_cgaeX:
	movq (%rbx),%rax
	jmp *(%rax)
_cgaf0:
	jmp *-8(%r13)
	.size sat_sg5J3_entry, .-sat_sg5J3_entry


==================== Asm code ====================
2018-03-16 16:11:57.489283795 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5J3_info:
	.quad	sat_sg5J3_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:57.490066431 UTC

.section .text
.align 8
_cgaeW:
_cgaeW:
	movq $block_cgaf4_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgaf4
_cgaf6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgaeW, .-_cgaeW


==================== Asm code ====================
2018-03-16 16:11:57.490702126 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaeW_info:
	.quad	_cgaeW
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.491436567 UTC

.section .text
.align 8
_cgaf4:
_cgaf4:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cgafc
_cgafg:
	movq 24(%rbp),%r14
	movq $stg_ap_p_info,16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp GHC.Base.return_entry
_cgafc:
	movq 16(%rbp),%rbx
	addq $32,%rbp
	jmp stg_ap_0_fast
	.size _cgaf4, .-_cgaf4


==================== Asm code ====================
2018-03-16 16:11:57.492079219 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaf4_info:
	.quad	_cgaf4
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.492912916 UTC

.section .text
.align 8
sat_sg5IR_entry:
_cgafU:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgafV
_cgafW:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cgafY
_cgafX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $stg_ap_2_upd_info,-48(%r12)
	movq %rbx,-32(%r12)
	movq %rcx,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -48(%r12),%rbx
	movq %rbx,-8(%r12)
	movq $GHC.Types.False_closure+1,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-32(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.return_entry
_cgafY:
	movq $56,904(%r13)
_cgafV:
	jmp *-16(%r13)
	.size sat_sg5IR_entry, .-sat_sg5IR_entry


==================== Asm code ====================
2018-03-16 16:11:57.493691083 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5IR_info:
	.quad	sat_sg5IR_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.494498727 UTC

.section .text
.align 8
sat_sg5IN_entry:
_cgaga:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgagb
_cgagc:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cgage
_cgagd:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $stg_ap_2_upd_info,-48(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -48(%r12),%rbx
	movq %rbx,-8(%r12)
	movq $GHC.Types.True_closure+2,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-16(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.return_entry
_cgage:
	movq $56,904(%r13)
_cgagb:
	jmp *-8(%r13)
	.size sat_sg5IN_entry, .-sat_sg5IN_entry


==================== Asm code ====================
2018-03-16 16:11:57.495231648 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5IN_info:
	.quad	sat_sg5IN_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:57.496013619 UTC

.section .text
.align 8
sat_sg5IO_entry:
_cgagf:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgagg
_cgagh:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgagj
_cgagi:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_sg5IN_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq %rcx,-32(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.>>=_entry
_cgagj:
	movq $24,904(%r13)
_cgagg:
	jmp *-16(%r13)
	.size sat_sg5IO_entry, .-sat_sg5IO_entry


==================== Asm code ====================
2018-03-16 16:11:57.496754328 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5IO_info:
	.quad	sat_sg5IO_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.497567371 UTC

.section .text
.align 8
sat_sg5IU_entry:
_cgagk:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgagl
_cgagm:
	movq $block_cgafE_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgafE
_cgafF:
	movq (%rbx),%rax
	jmp *(%rax)
_cgagl:
	jmp *-8(%r13)
	.size sat_sg5IU_entry, .-sat_sg5IU_entry


==================== Asm code ====================
2018-03-16 16:11:57.498281625 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5IU_info:
	.quad	sat_sg5IU_entry
	.quad	4
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:11:57.498932647 UTC

.section .text
.align 8
_cgafE:
_cgafE:
	movq $block_cgafJ_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgafJ
_cgafK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgafE, .-_cgafE


==================== Asm code ====================
2018-03-16 16:11:57.499602264 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgafE_info:
	.quad	_cgafE
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.50051698 UTC

.section .text
.align 8
_cgafJ:
_cgafJ:
	movq 24(%rbp),%rax
	movq 32(%rbp),%rcx
	movq 8(%rbp),%rdx
	movq %rbx,%rsi
	andl $7,%esi
	cmpq $1,%rsi
	je _cgagp
_cgagt:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cgagy
_cgagx:
	movq $stg_ap_2_upd_info,-48(%r12)
	movq %rdx,-32(%r12)
	movq %rcx,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -48(%r12),%rbx
	movq %rbx,-8(%r12)
	movq $GHC.Types.True_closure+2,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,32(%rbp)
	leaq -15(%r12),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp GHC.Base.return_entry
_cgagy:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_cgags:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
_cgagp:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cgags
_cgagr:
	movq $sat_sg5IR_info,-72(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq $sat_sg5IO_info,-32(%r12)
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rdx,(%r12)
	movq 16(%rbp),%r14
	movq $stg_ap_pp_info,24(%rbp)
	leaq -32(%r12),%rax
	movq %rax,32(%rbp)
	leaq -72(%r12),%rax
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp GHC.Base.mplus_entry
	.size _cgafJ, .-_cgafJ


==================== Asm code ====================
2018-03-16 16:11:57.501387124 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgafJ_info:
	.quad	_cgafJ
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.502230661 UTC

.section .text
.align 8
k1_sg5IA_entry:
_cgagE:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgagF
_cgagG:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cgagI
_cgagH:
	movq 5(%rbx),%rax
	movq 13(%rbx),%rcx
	movq 21(%rbx),%rbx
	movq $stg_ap_3_upd_info,-72(%r12)
	movq %rcx,-56(%r12)
	movq %r14,-48(%r12)
	movq %rdi,-40(%r12)
	movq $sat_sg5IU_info,-32(%r12)
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rdi,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rsi,-16(%rbp)
	leaq -31(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cgagI:
	movq $80,904(%r13)
_cgagF:
	jmp *-8(%r13)
	.size k1_sg5IA_entry, .-k1_sg5IA_entry


==================== Asm code ====================
2018-03-16 16:11:57.502984243 UTC

.section .data.rel.ro
.align 8
.align 1
k1_sg5IA_info:
	.quad	k1_sg5IA_entry
	.quad	3
	.quad	8
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:57.50370358 UTC

.section .text
.align 8
sat_sg5IV_entry:
_cgagR:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgagS
_cgagT:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $Data.Functor.Product.$fDataProduct1_closure+1,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.return_entry
_cgagS:
	jmp *-16(%r13)
	.size sat_sg5IV_entry, .-sat_sg5IV_entry


==================== Asm code ====================
2018-03-16 16:11:57.504335239 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5IV_info:
	.quad	sat_sg5IV_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.505120903 UTC

.section .text
.align 8
sat_sg5IW_entry:
_cgagU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgagV
_cgagW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgagY
_cgagX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	movq $sat_sg5IV_info,-16(%r12)
	movq %rcx,(%r12)
	movq %rdx,%rdi
	leaq -16(%r12),%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp k1_sg5IA_entry
_cgagY:
	movq $24,904(%r13)
_cgagV:
	jmp *-16(%r13)
	.size sat_sg5IW_entry, .-sat_sg5IW_entry


==================== Asm code ====================
2018-03-16 16:11:57.506153225 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5IW_info:
	.quad	sat_sg5IW_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.506917862 UTC

.section .text
.align 8
sat_sg5IX_entry:
_cgagZ:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cgah0
_cgah1:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cgafo_info,-64(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq %rax,-56(%rbp)
	movq %rcx,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _cgafo
_cgafp:
	movq (%rbx),%rax
	jmp *(%rax)
_cgah0:
	jmp *-16(%r13)
	.size sat_sg5IX_entry, .-sat_sg5IX_entry


==================== Asm code ====================
2018-03-16 16:11:57.507648325 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5IX_info:
	.quad	sat_sg5IX_entry
	.quad	6
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.508453745 UTC

.section .text
.align 8
_cgafo:
_cgafo:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cgah4
_cgah3:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $k1_sg5IA_info,-72(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-64(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-56(%r12)
	movq 40(%rbp),%rcx
	movq %rcx,-48(%r12)
	movq $sat_sg5IW_info,-40(%r12)
	movq 8(%rbp),%rdx
	movq %rdx,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	leaq -69(%r12),%rax
	movq %rax,(%r12)
	movq %rbx,%rdi
	leaq -40(%r12),%rsi
	movq 16(%rbp),%r14
	movq %rax,%rbx
	addq $48,%rbp
	jmp k1_sg5IA_entry
_cgah4:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cgafo, .-_cgafo


==================== Asm code ====================
2018-03-16 16:11:57.509179181 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgafo_info:
	.quad	_cgafo
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.510113297 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cgmapMo_entry
.type Data.Functor.Product.$w$cgmapMo_entry, @object
Data.Functor.Product.$w$cgmapMo_entry:
_cgah6:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cgah7
_cgah8:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgaha
_cgah9:
	movq $lvl9_sg5Iv_info,-16(%r12)
	movq %rdi,(%r12)
	movq $block_cgaeN_info,-56(%rbp)
	movq %r14,%rax
	movq %rdi,%r14
	leaq -16(%r12),%rbx
	movq %rbx,-48(%rbp)
	movq %rax,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-56,%rbp
	jmp GHC.Base.$p2MonadPlus_entry
_cgaha:
	movq $24,904(%r13)
_cgah7:
	movl $Data.Functor.Product.$w$cgmapMo_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cgmapMo_entry, .-Data.Functor.Product.$w$cgmapMo_entry


==================== Asm code ====================
2018-03-16 16:11:57.510926525 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cgmapMo_info
.type Data.Functor.Product.$w$cgmapMo_info, @object
Data.Functor.Product.$w$cgmapMo_info:
	.quad	Data.Functor.Product.$w$cgmapMo_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:11:57.511763629 UTC

.section .text
.align 8
_cgaeN:
_cgaeN:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cgahd
_cgahc:
	movq $sat_sg5J3_info,-80(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq $sat_sg5IX_info,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	movq 32(%rbp),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-16(%r12)
	movq 48(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,32(%rbp)
	leaq -56(%r12),%rax
	movq %rax,40(%rbp)
	leaq -79(%r12),%rax
	movq %rax,48(%rbp)
	addq $32,%rbp
	jmp GHC.Base.>>=_entry
_cgahd:
	movq $88,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cgaeN, .-_cgaeN


==================== Asm code ====================
2018-03-16 16:11:57.512556342 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaeN_info:
	.quad	_cgaeN
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.515723417 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgmapMo_closure
.type Data.Functor.Product.$fDataProduct_$cgmapMo_closure, @object
Data.Functor.Product.$fDataProduct_$cgmapMo_closure:
	.quad	Data.Functor.Product.$fDataProduct_$cgmapMo_info


==================== Asm code ====================
2018-03-16 16:11:57.516991957 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgmapMo_slow
.type Data.Functor.Product.$fDataProduct_$cgmapMo_slow, @object
Data.Functor.Product.$fDataProduct_$cgmapMo_slow:
_cgaiO:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$fDataProduct_$cgmapMo_entry
	.size Data.Functor.Product.$fDataProduct_$cgmapMo_slow, .-Data.Functor.Product.$fDataProduct_$cgmapMo_slow


==================== Asm code ====================
2018-03-16 16:11:57.518383335 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgmapMo_entry
.type Data.Functor.Product.$fDataProduct_$cgmapMo_entry, @object
Data.Functor.Product.$fDataProduct_$cgmapMo_entry:
_cgaiS:
	movq %r9,%rax
	movq 24(%rbp),%r9
	movq 16(%rbp),%r8
	movq 8(%rbp),%rdi
	movq (%rbp),%rsi
	movq %rax,%r14
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cgmapMo_entry
	.size Data.Functor.Product.$fDataProduct_$cgmapMo_entry, .-Data.Functor.Product.$fDataProduct_$cgmapMo_entry


==================== Asm code ====================
2018-03-16 16:11:57.518996402 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgmapMo_info
.type Data.Functor.Product.$fDataProduct_$cgmapMo_info, @object
Data.Functor.Product.$fDataProduct_$cgmapMo_info:
	.quad	Data.Functor.Product.$fDataProduct_$cgmapMo_entry
	.quad	0
	.quad	14
	.quad	38654705664
	.quad	0
	.quad	9
	.quad	Data.Functor.Product.$fDataProduct_$cgmapMo_slow


==================== Asm code ====================
2018-03-16 16:11:57.521874217 UTC

.section .data
.align 8
.align 1
lvl5_rg5oj_closure:
	.quad	lvl5_rg5oj_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.522654654 UTC

.section .text
.align 8
lvl5_rg5oj_entry:
_cgaj8:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaj9
_cgaja:
	movq $block_cgaj5_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cgaj5
_cgaj6:
	movq (%rbx),%rax
	jmp *(%rax)
_cgaj9:
	movl $lvl5_rg5oj_closure,%ebx
	jmp *-8(%r13)
	.size lvl5_rg5oj_entry, .-lvl5_rg5oj_entry


==================== Asm code ====================
2018-03-16 16:11:57.5233233 UTC

.section .data.rel.ro
.align 8
.align 1
lvl5_rg5oj_info:
	.quad	lvl5_rg5oj_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	Sg5Oh_srt+664


==================== Asm code ====================
2018-03-16 16:11:57.523962009 UTC

.section .text
.align 8
_cgaj5:
_cgaj5:
	movl $Data.Functor.Product.$cPair_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cgaj5, .-_cgaj5


==================== Asm code ====================
2018-03-16 16:11:57.524588525 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaj5_info:
	.quad	_cgaj5
	.quad	0
	.quad	4294967326
	.quad	Sg5Oh_srt+664


==================== Asm code ====================
2018-03-16 16:11:57.526790319 UTC

.section .data
.align 8
.align 1
lvl6_rg5ok_closure:
	.quad	lvl6_rg5ok_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.527470099 UTC

.section .text
.align 8
lvl6_rg5ok_entry:
_cgajt:
	movl $Data.Functor.Product.$tProduct_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size lvl6_rg5ok_entry, .-lvl6_rg5ok_entry


==================== Asm code ====================
2018-03-16 16:11:57.528074145 UTC

.section .data.rel.ro
.align 8
.align 1
lvl6_rg5ok_info:
	.quad	lvl6_rg5ok_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	Sg5Oh_srt+680


==================== Asm code ====================
2018-03-16 16:11:57.530248927 UTC

.section .data
.align 8
.align 1
lvl7_rg5ol_closure:
	.quad	lvl7_rg5ol_info


==================== Asm code ====================
2018-03-16 16:11:57.530922564 UTC

.section .text
.align 8
lvl7_rg5ol_entry:
_cgajF:
	movl $GHC.Base.Nothing_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size lvl7_rg5ol_entry, .-lvl7_rg5ol_entry


==================== Asm code ====================
2018-03-16 16:11:57.531544682 UTC

.section .data.rel.ro
.align 8
.align 1
lvl7_rg5ol_info:
	.quad	lvl7_rg5ol_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:57.533952906 UTC

.section .data
.align 8
.align 1
lvl8_rg5om_closure:
	.quad	lvl8_rg5om_info


==================== Asm code ====================
2018-03-16 16:11:57.534618252 UTC

.section .text
.align 8
lvl8_rg5om_entry:
_cgajR:
	movl $GHC.Base.Nothing_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size lvl8_rg5om_entry, .-lvl8_rg5om_entry


==================== Asm code ====================
2018-03-16 16:11:57.535238619 UTC

.section .data.rel.ro
.align 8
.align 1
lvl8_rg5om_info:
	.quad	lvl8_rg5om_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:57.553742376 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_closure
.type Data.Functor.Product.$fDataProduct_closure, @object
Data.Functor.Product.$fDataProduct_closure:
	.quad	Data.Functor.Product.$fDataProduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:11:57.554533181 UTC

.section .text
.align 8
sat_sg5K2_entry:
_cgak8:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$w$cgmapMo_entry
	.size sat_sg5K2_entry, .-sat_sg5K2_entry


==================== Asm code ====================
2018-03-16 16:11:57.555175138 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5K2_info:
	.quad	sat_sg5K2_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:57.555821515 UTC

.section .text
.align 8
sat_sg5JY_entry:
_cgakg:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$w$cgmapMp_entry
	.size sat_sg5JY_entry, .-sat_sg5JY_entry


==================== Asm code ====================
2018-03-16 16:11:57.556484057 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5JY_info:
	.quad	sat_sg5JY_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:57.557349996 UTC

.section .text
.align 8
sat_sg5JU_entry:
_cgako:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgakp
_cgakq:
	movq 37(%rbx),%r9
	movq 29(%rbx),%r8
	movq %rdi,%rax
	movq 21(%rbx),%rdi
	movq %rsi,%rcx
	movq 13(%rbx),%rsi
	movq %r14,%rdx
	movq 5(%rbx),%r14
	movq 45(%rbx),%rbx
	movq %rbx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp Data.Functor.Product.$fDataProduct_$cgmapM_entry
_cgakp:
	jmp *-8(%r13)
	.size sat_sg5JU_entry, .-sat_sg5JU_entry


==================== Asm code ====================
2018-03-16 16:11:57.558075276 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5JU_info:
	.quad	sat_sg5JU_entry
	.quad	6
	.quad	8
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:57.558900209 UTC

.section .text
.align 8
sat_sg5JT_entry:
_cgakw:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgakx
_cgaky:
	movq 37(%rbx),%r9
	movq 29(%rbx),%r8
	movq %rdi,%rax
	movq 21(%rbx),%rdi
	movq %rsi,%rcx
	movq 13(%rbx),%rsi
	movq %r14,%rdx
	movq 5(%rbx),%r14
	movq 45(%rbx),%rbx
	movq %rbx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp Data.Functor.Product.$fDataProduct_$cgmapQi_entry
_cgakx:
	jmp *-8(%r13)
	.size sat_sg5JT_entry, .-sat_sg5JT_entry


==================== Asm code ====================
2018-03-16 16:11:57.559643442 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5JT_info:
	.quad	sat_sg5JT_entry
	.quad	6
	.quad	4294967304
	.quad	12884901911
	.quad	Sg5Oh_srt+656


==================== Asm code ====================
2018-03-16 16:11:57.560468565 UTC

.section .text
.align 8
sat_sg5JS_entry:
_cgakH:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgakO
_cgakP:
	movq $block_cgakE_info,-32(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %rsi,%rbx
	movq %rax,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cgakE
_cgakF:
	movq (%rbx),%rax
	jmp *(%rax)
_cgakO:
	jmp *-8(%r13)
	.size sat_sg5JS_entry, .-sat_sg5JS_entry


==================== Asm code ====================
2018-03-16 16:11:57.561158356 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5JS_info:
	.quad	sat_sg5JS_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:57.562034129 UTC

.section .text
.align 8
_cgakE:
_cgakE:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _cgakS
_cgakR:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $stg_ap_3_upd_info,-120(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-104(%r12)
	movq 16(%rbp),%rdx
	movq %rdx,-96(%r12)
	movq %rbx,-88(%r12)
	movq $:_con_info,-80(%r12)
	leaq -120(%r12),%rbx
	movq %rbx,-72(%r12)
	movq $GHC.Types.[]_closure+1,-64(%r12)
	movq $stg_ap_3_upd_info,-56(%r12)
	movq %rcx,-40(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -78(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgakS:
	movq $128,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cgakE, .-_cgakE


==================== Asm code ====================
2018-03-16 16:11:57.562851714 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgakE_info:
	.quad	_cgakE
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.563682991 UTC

.section .text
.align 8
sat_sg5JJ_entry:
_cgakZ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgal0
_cgal1:
	movq 36(%rbx),%r9
	movq %r8,%rax
	movq 28(%rbx),%r8
	movq %rdi,%rcx
	movq 20(%rbx),%rdi
	movq %rsi,%rdx
	movq 12(%rbx),%rsi
	movq %r14,%r10
	movq 4(%rbx),%r14
	movq 44(%rbx),%rbx
	movq %rbx,-40(%rbp)
	movq %r10,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp Data.Functor.Product.$fDataProduct_$cgmapQr_entry
_cgal0:
	jmp *-8(%r13)
	.size sat_sg5JJ_entry, .-sat_sg5JJ_entry


==================== Asm code ====================
2018-03-16 16:11:57.564461087 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5JJ_info:
	.quad	sat_sg5JJ_entry
	.quad	6
	.quad	8
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:11:57.565433072 UTC

.section .text
.align 8
sat_sg5JI_entry:
_cgal7:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgal8
_cgal9:
	movq 36(%rbx),%r9
	movq %r8,%rax
	movq 28(%rbx),%r8
	movq %rdi,%rcx
	movq 20(%rbx),%rdi
	movq %rsi,%rdx
	movq 12(%rbx),%rsi
	movq %r14,%r10
	movq 4(%rbx),%r14
	movq 44(%rbx),%rbx
	movq %rbx,-40(%rbp)
	movq %r10,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp Data.Functor.Product.$fDataProduct2_entry
_cgal8:
	jmp *-8(%r13)
	.size sat_sg5JI_entry, .-sat_sg5JI_entry


==================== Asm code ====================
2018-03-16 16:11:57.566152258 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5JI_info:
	.quad	sat_sg5JI_entry
	.quad	6
	.quad	8
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:11:57.567023538 UTC

.section .text
.align 8
sat_sg5JH_entry:
_cgali:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgalo
_cgalp:
	movq $block_cgalf_info,-32(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %rsi,%rbx
	movq %rax,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cgalf
_cgalg:
	movq (%rbx),%rax
	jmp *(%rax)
_cgalo:
	jmp *-8(%r13)
	.size sat_sg5JH_entry, .-sat_sg5JH_entry


==================== Asm code ====================
2018-03-16 16:11:57.567752751 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5JH_info:
	.quad	sat_sg5JH_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:57.568616164 UTC

.section .text
.align 8
_cgalf:
_cgalf:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cgals
_cgalr:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $stg_ap_3_upd_info,-96(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 16(%rbp),%rdx
	movq %rdx,-72(%r12)
	movq %rbx,-64(%r12)
	movq $stg_ap_3_upd_info,-56(%r12)
	movq %rcx,-40(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgals:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cgalf, .-_cgalf


==================== Asm code ====================
2018-03-16 16:11:57.569425912 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgalf_info:
	.quad	_cgalf
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:11:57.570179211 UTC

.section .text
.align 8
sat_sg5Jx_entry:
_cgalH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgalI
_cgalJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $Data.Functor.Product.Pair_closure+2,%r14d
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp stg_ap_p_fast
_cgalI:
	jmp *-16(%r13)
	.size sat_sg5Jx_entry, .-sat_sg5Jx_entry


==================== Asm code ====================
2018-03-16 16:11:57.570870355 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Jx_info:
	.quad	sat_sg5Jx_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:11:57.572266075 UTC

.section .text
.align 8
sat_sg5Jy_entry:
_cgalK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgalL
_cgalM:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgalO
_cgalN:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_sg5Jx_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rsi
	movq %rax,%r14
	movq %rcx,%rbx
	addq $-16,%rbp
	jmp stg_ap_pp_fast
_cgalO:
	movq $24,904(%r13)
_cgalL:
	jmp *-16(%r13)
	.size sat_sg5Jy_entry, .-sat_sg5Jy_entry


==================== Asm code ====================
2018-03-16 16:11:57.573021472 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Jy_info:
	.quad	sat_sg5Jy_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:11:57.57379113 UTC

.section .text
.align 8
sat_sg5Jz_entry:
_cgalP:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cgalT
_cgalS:
	movq 5(%rbx),%rax
	movq 13(%rbx),%rbx
	movq $sat_sg5Jy_info,-32(%r12)
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -32(%r12),%rsi
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,%rbx
	jmp stg_ap_pp_fast
_cgalT:
	movq $40,904(%r13)
	jmp *-8(%r13)
	.size sat_sg5Jz_entry, .-sat_sg5Jz_entry


==================== Asm code ====================
2018-03-16 16:11:57.57446389 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Jz_info:
	.quad	sat_sg5Jz_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:57.575256468 UTC

.section .text
.align 8
sat_sg5Jt_entry:
_cgalZ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgam0
_cgam1:
	movq 37(%rbx),%r9
	movq 29(%rbx),%r8
	movq %rdi,%rax
	movq 21(%rbx),%rdi
	movq %rsi,%rcx
	movq 13(%rbx),%rsi
	movq %r14,%rdx
	movq 5(%rbx),%r14
	movq 45(%rbx),%rbx
	movq %rbx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp Data.Functor.Product.$fDataProduct_$cgfoldl_entry
_cgam0:
	jmp *-8(%r13)
	.size sat_sg5Jt_entry, .-sat_sg5Jt_entry


==================== Asm code ====================
2018-03-16 16:11:57.575982267 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Jt_info:
	.quad	sat_sg5Jt_entry
	.quad	6
	.quad	8
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:11:57.576729515 UTC

.section .text
.align 8
sat_sg5Js_entry:
_cgam6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgam7
_cgam8:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$w$cp1Data_entry
_cgam7:
	jmp *-16(%r13)
	.size sat_sg5Js_entry, .-sat_sg5Js_entry


==================== Asm code ====================
2018-03-16 16:11:57.577435879 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sg5Js_info:
	.quad	sat_sg5Js_entry
	.quad	4
	.quad	4294967311
	.quad	Sg5Oh_srt+640


==================== Asm code ====================
2018-03-16 16:11:57.578574581 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_entry
.type Data.Functor.Product.$fDataProduct_entry, @object
Data.Functor.Product.$fDataProduct_entry:
_cgama:
	addq $576,%r12
	cmpq 856(%r13),%r12
	ja _cgame
_cgamd:
	movq $sat_sg5K2_info,-568(%r12)
	movq %r9,-560(%r12)
	movq (%rbp),%rax
	movq %rax,-552(%r12)
	movq $sat_sg5JY_info,-544(%r12)
	movq %r9,-536(%r12)
	movq %rax,-528(%r12)
	movq $sat_sg5JU_info,-520(%r12)
	movq %r14,-512(%r12)
	movq %rsi,-504(%r12)
	movq %rdi,-496(%r12)
	movq %r8,-488(%r12)
	movq %r9,-480(%r12)
	movq %rax,-472(%r12)
	movq $sat_sg5JT_info,-464(%r12)
	movq %r14,-456(%r12)
	movq %rsi,-448(%r12)
	movq %rdi,-440(%r12)
	movq %r8,-432(%r12)
	movq %r9,-424(%r12)
	movq %rax,-416(%r12)
	movq $sat_sg5JS_info,-408(%r12)
	movq %r9,-400(%r12)
	movq %rax,-392(%r12)
	movq $sat_sg5JJ_info,-384(%r12)
	movq %r14,-376(%r12)
	movq %rsi,-368(%r12)
	movq %rdi,-360(%r12)
	movq %r8,-352(%r12)
	movq %r9,-344(%r12)
	movq %rax,-336(%r12)
	movq $sat_sg5JI_info,-328(%r12)
	movq %r14,-320(%r12)
	movq %rsi,-312(%r12)
	movq %rdi,-304(%r12)
	movq %r8,-296(%r12)
	movq %r9,-288(%r12)
	movq %rax,-280(%r12)
	movq $sat_sg5JH_info,-272(%r12)
	movq %r9,-264(%r12)
	movq %rax,-256(%r12)
	movq $sat_sg5Jz_info,-248(%r12)
	movq %r9,-240(%r12)
	movq %rax,-232(%r12)
	movq $sat_sg5Jt_info,-224(%r12)
	movq %r14,-216(%r12)
	movq %rsi,-208(%r12)
	movq %rdi,-200(%r12)
	movq %r8,-192(%r12)
	movq %r9,-184(%r12)
	movq %rax,-176(%r12)
	movq $sat_sg5Js_info,-168(%r12)
	movq %r14,-152(%r12)
	movq %rsi,-144(%r12)
	movq %rdi,-136(%r12)
	movq %r8,-128(%r12)
	movq $Data.Data.C:Data_con_info,-120(%r12)
	leaq -168(%r12),%rax
	movq %rax,-112(%r12)
	leaq -221(%r12),%rax
	movq %rax,-104(%r12)
	leaq -245(%r12),%rax
	movq %rax,-96(%r12)
	movq $lvl5_rg5oj_closure+1,-88(%r12)
	movq $lvl6_rg5ok_closure+1,-80(%r12)
	movq $lvl7_rg5ol_closure+2,-72(%r12)
	movq $lvl8_rg5om_closure+2,-64(%r12)
	leaq -270(%r12),%rax
	movq %rax,-56(%r12)
	leaq -324(%r12),%rax
	movq %rax,-48(%r12)
	leaq -380(%r12),%rax
	movq %rax,-40(%r12)
	leaq -406(%r12),%rax
	movq %rax,-32(%r12)
	leaq -461(%r12),%rax
	movq %rax,-24(%r12)
	leaq -517(%r12),%rax
	movq %rax,-16(%r12)
	leaq -541(%r12),%rax
	movq %rax,-8(%r12)
	leaq -565(%r12),%rax
	movq %rax,(%r12)
	leaq -119(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgame:
	movq $576,904(%r13)
	movl $Data.Functor.Product.$fDataProduct_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fDataProduct_entry, .-Data.Functor.Product.$fDataProduct_entry


==================== Asm code ====================
2018-03-16 16:11:57.579784909 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_info
.type Data.Functor.Product.$fDataProduct_info, @object
Data.Functor.Product.$fDataProduct_info:
	.quad	Data.Functor.Product.$fDataProduct_entry
	.quad	0
	.quad	914828034062
	.quad	25769803802
	.quad	Sg5Oh_srt+640


==================== Asm code ====================
2018-03-16 16:11:57.582882019 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.Pair_closure
.type Data.Functor.Product.Pair_closure, @object
Data.Functor.Product.Pair_closure:
	.quad	Data.Functor.Product.Pair_info


==================== Asm code ====================
2018-03-16 16:11:57.583713327 UTC

.section .text
.align 8
Data.Functor.Product.Pair_entry:
_cganL:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cganP
_cganO:
	movq $Data.Functor.Product.Pair_con_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cganP:
	movq $24,904(%r13)
	movl $Data.Functor.Product.Pair_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Product.Pair_entry, .-Data.Functor.Product.Pair_entry


==================== Asm code ====================
2018-03-16 16:11:57.584380102 UTC

.section .data.rel.ro
.align 8
.align 1
Data.Functor.Product.Pair_info:
	.quad	Data.Functor.Product.Pair_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:11:57.586617003 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
ig8iO_str:
	.asciz "base:Data.Functor.Product.Pair"


==================== Asm code ====================
2018-03-16 16:11:57.587307442 UTC

.section .text
.align 8
.globl Data.Functor.Product.Pair_con_entry
.type Data.Functor.Product.Pair_con_entry, @object
Data.Functor.Product.Pair_con_entry:
_cganV:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size Data.Functor.Product.Pair_con_entry, .-Data.Functor.Product.Pair_con_entry


==================== Asm code ====================
2018-03-16 16:11:57.587955836 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.Pair_con_info
.type Data.Functor.Product.Pair_con_info, @object
Data.Functor.Product.Pair_con_info:
	.quad	Data.Functor.Product.Pair_con_entry
	.quad	2
	.quad	4
	.quad	ig8iO_str


==================== Asm code ====================
2018-03-16 16:11:57.591062541 UTC

.section .data.rel.ro
.align 8
.align 1
Sg5Oh_srt:
	.quad	Text.Read.Lex.$wexpect_closure
	.quad	Data.Functor.Product.$fRead1Product1_closure
	.quad	GHC.Read.list3_closure
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadPrec_closure
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadsPrec_closure
	.quad	GHC.Read.list_closure
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadListPrec_closure
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadList_closure
	.quad	Data.Functor.Product.$fRead1Product_closure
	.quad	Data.Functor.Product.$fRead1Product2_closure
	.quad	Data.Functor.Product.$w$cliftShowsPrec_closure
	.quad	Data.Functor.Product.$fShow1Product_$cliftShowsPrec_closure
	.quad	Data.Functor.Product.$fShow1Product_$cliftShowList_closure
	.quad	Data.Functor.Product.$fShow1Product_closure
	.quad	Data.Functor.Product.$fReadProduct_$creadPrec_closure
	.quad	Data.Functor.Product.$fReadProduct_$creadsPrec_closure
	.quad	Data.Functor.Product.$fReadProduct_$creadListPrec_closure
	.quad	Data.Functor.Product.$fReadProduct_$creadList_closure
	.quad	Data.Functor.Product.$fReadProduct_closure
	.quad	Data.Functor.Product.$w$cshowsPrec_closure
	.quad	Data.Functor.Product.$fShowProduct_$cshowsPrec_closure
	.quad	Data.Functor.Product.$w$cshow_closure
	.quad	Data.Functor.Product.$fShowProduct_$cshow_closure
	.quad	Data.Functor.Product.$fShowProduct_$cshowList_closure
	.quad	Data.Functor.Product.$fShowProduct_closure
	.quad	Data.Semigroup.Internal.$fMonoidSum_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$csum_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	Data.Functor.Utils.$fMonoidMin_closure
	.quad	Data.Functor.Product.$fFoldableProduct2_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$cminimum_closure
	.quad	Data.Functor.Utils.$fMonoidMax_closure
	.quad	Data.Functor.Product.$fFoldableProduct3_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$cmaximum_closure
	.quad	Data.Semigroup.Internal.$fMonoidAny_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$celem_closure
	.quad	Data.Semigroup.Internal.$fMonoidEndo_closure
	.quad	Data.Functor.Product.$fFoldableProduct8_closure
	.quad	Data.Functor.Product.$w$cfoldl_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldl_closure
	.quad	Data.Functor.Product.$w$cfoldl1_closure
	.quad	Data.Functor.Product.$fFoldableProduct7_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldl1_closure
	.quad	Data.Functor.Product.$w$cfoldr'_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldr'_closure
	.quad	Data.Functor.Product.$w$cfoldr_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldr_closure
	.quad	Data.Functor.Product.$w$cfoldl'_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldl'_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$clength_closure
	.quad	Data.Functor.Product.$w$cfoldr1_closure
	.quad	Data.Functor.Product.$fFoldableProduct9_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldr1_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$cnull_closure
	.quad	Data.Semigroup.Internal.$fMonoidProduct_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$cproduct_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$ctoList_closure
	.quad	Data.Functor.Product.$fFoldableProduct_closure
	.quad	Data.Functor.Product.$fTraversableProduct_$cp2Traversable_closure
	.quad	Data.Functor.Product.$fTraversableProduct_closure
	.quad	poly_some_v_rg5o0_closure
	.quad	Data.Functor.Product.$fAlternativeProduct_$csome_closure
	.quad	Data.Functor.Product.$fAlternativeProduct_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	Data.Functor.Product.$fMonadProduct_closure
	.quad	lvl4_rg5o1_closure
	.quad	Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_closure
	.quad	Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_closure
	.quad	Data.Functor.Product.$fMonadPlusProduct_closure
	.quad	Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_closure
	.quad	Data.Functor.Product.$fMonadFixProduct_closure
	.quad	Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_closure
	.quad	Data.Functor.Product.$fMonadZipProduct_closure
	.quad	GHC.List.badHead_closure
	.quad	go61_rg5o2_closure
	.quad	Data.Functor.Product.$fRead1Product2_closure
	.quad	Data.Data.mkConstr1_closure
	.quad	Data.Functor.Product.$fDataProduct4_closure
	.quad	Data.Typeable.Internal.mkTrApp_closure
	.quad	Data.Typeable.Internal.$wmkTrCon_closure
	.quad	Data.Functor.Product.$w$cp1Data_closure
	.quad	Data.Maybe.fromJust1_closure
	.quad	Data.Functor.Product.$fDataProduct_$cgmapQi_closure
	.quad	Data.Functor.Product.$cPair_closure
	.quad	lvl5_rg5oj_closure
	.quad	Data.Functor.Product.$tProduct_closure
	.quad	Data.Functor.Product.$fDataProduct_closure
	.quad	lvl6_rg5ok_closure


==================== Asm code ====================
2018-03-16 16:12:03.95604591 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fEq1Product_$cliftEq_closure
.type Data.Functor.Product.$fEq1Product_$cliftEq_closure, @object
Data.Functor.Product.$fEq1Product_$cliftEq_closure:
	.quad	Data.Functor.Product.$fEq1Product_$cliftEq_info


==================== Asm code ====================
2018-03-16 16:12:03.956921533 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fEq1Product_$cliftEq_entry
.type Data.Functor.Product.$fEq1Product_$cliftEq_entry, @object
Data.Functor.Product.$fEq1Product_$cliftEq_entry:
_cgaJO:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaJS
_cgaJT:
	leaq block_cgaJL_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgaJL
_cgaJM:
	movq (%rbx),%rax
	jmp *(%rax)
_cgaJS:
	leaq Data.Functor.Product.$fEq1Product_$cliftEq_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fEq1Product_$cliftEq_entry, .-Data.Functor.Product.$fEq1Product_$cliftEq_entry


==================== Asm code ====================
2018-03-16 16:12:03.957664446 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fEq1Product_$cliftEq_info
.type Data.Functor.Product.$fEq1Product_$cliftEq_info, @object
Data.Functor.Product.$fEq1Product_$cliftEq_info:
	.quad	Data.Functor.Product.$fEq1Product_$cliftEq_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:12:03.958404002 UTC

.section .text
.align 8
_cgaJL:
_cgaJL:
	leaq block_cgaJR_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgaJR
_cgaJV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgaJL, .-_cgaJL


==================== Asm code ====================
2018-03-16 16:12:03.959049062 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaJL_info:
	.quad	_cgaJL
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:03.959708974 UTC

.section .text
.align 8
_cgaJR:
_cgaJR:
	leaq block_cgaJZ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rdi
	movq 40(%rbp),%rsi
	movq 32(%rbp),%r14
	movq 15(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,40(%rbp)
	jmp *stg_ap_ppp_fast@gotpcrel(%rip)
	.size _cgaJR, .-_cgaJR


==================== Asm code ====================
2018-03-16 16:12:03.960309191 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaJR_info:
	.quad	_cgaJR
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:03.961047788 UTC

.section .text
.align 8
_cgaJZ:
_cgaJZ:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cgaK6
_cgaKa:
	movq 40(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 32(%rbp),%r14
	movq 24(%rbp),%rbx
	addq $48,%rbp
	jmp *stg_ap_ppp_fast@gotpcrel(%rip)
_cgaK6:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cgaJZ, .-_cgaJZ


==================== Asm code ====================
2018-03-16 16:12:03.961728288 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaJZ_info:
	.quad	_cgaJZ
	.quad	133
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:03.963974753 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fEq1Product_closure
.type Data.Functor.Product.$fEq1Product_closure, @object
Data.Functor.Product.$fEq1Product_closure:
	.quad	Data.Functor.Product.$fEq1Product_info


==================== Asm code ====================
2018-03-16 16:12:03.964617026 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fEq1Product_entry
.type Data.Functor.Product.$fEq1Product_entry, @object
Data.Functor.Product.$fEq1Product_entry:
_cgaKF:
	jmp Data.Functor.Product.$fEq1Product_$cliftEq_entry
	.size Data.Functor.Product.$fEq1Product_entry, .-Data.Functor.Product.$fEq1Product_entry


==================== Asm code ====================
2018-03-16 16:12:03.96521222 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fEq1Product_info
.type Data.Functor.Product.$fEq1Product_info, @object
Data.Functor.Product.$fEq1Product_info:
	.quad	Data.Functor.Product.$fEq1Product_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:12:03.969154463 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cliftCompare_closure
.type Data.Functor.Product.$w$cliftCompare_closure, @object
Data.Functor.Product.$w$cliftCompare_closure:
	.quad	Data.Functor.Product.$w$cliftCompare_info


==================== Asm code ====================
2018-03-16 16:12:03.969952624 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cliftCompare_slow
.type Data.Functor.Product.$w$cliftCompare_slow, @object
Data.Functor.Product.$w$cliftCompare_slow:
_cgaKN:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$w$cliftCompare_entry
	.size Data.Functor.Product.$w$cliftCompare_slow, .-Data.Functor.Product.$w$cliftCompare_slow


==================== Asm code ====================
2018-03-16 16:12:03.970801857 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cliftCompare_entry
.type Data.Functor.Product.$w$cliftCompare_entry, @object
Data.Functor.Product.$w$cliftCompare_entry:
_cgaKY:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaKZ
_cgaL0:
	leaq block_cgaKR_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-56(%rbp)
	movq %rdi,-48(%rbp)
	movq %r8,-40(%rbp)
	movq (%rbp),%rax
	movq %rax,-32(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rsi,(%rbp)
	addq $-56,%rbp
	jmp *Data.Functor.Classes.liftCompare_entry@gotpcrel(%rip)
_cgaKZ:
	leaq Data.Functor.Product.$w$cliftCompare_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cliftCompare_entry, .-Data.Functor.Product.$w$cliftCompare_entry


==================== Asm code ====================
2018-03-16 16:12:03.971506293 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cliftCompare_info
.type Data.Functor.Product.$w$cliftCompare_info, @object
Data.Functor.Product.$w$cliftCompare_info:
	.quad	Data.Functor.Product.$w$cliftCompare_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	Data.Functor.Product.$w$cliftCompare_slow


==================== Asm code ====================
2018-03-16 16:12:03.972327539 UTC

.section .text
.align 8
_cgaKR:
_cgaKR:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ugaLa
_cgaKW:
	movq GHC.Types.GT_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ugaLa:
	cmpq $2,%rbx
	jb _cgaKU
_cgaKV:
	movq 24(%rbp),%r14
	movq 8(%rbp),%rax
	movq stg_ap_ppp_info@gotpcrel(%rip),%rbx
	movq %rbx,8(%rbp)
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp *Data.Functor.Classes.liftCompare_entry@gotpcrel(%rip)
_cgaKU:
	movq GHC.Types.LT_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cgaKR, .-_cgaKR


==================== Asm code ====================
2018-03-16 16:12:03.973053415 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaKR_info:
	.quad	_cgaKR
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:03.977060404 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrd1Product_$cliftCompare_closure
.type Data.Functor.Product.$fOrd1Product_$cliftCompare_closure, @object
Data.Functor.Product.$fOrd1Product_$cliftCompare_closure:
	.quad	Data.Functor.Product.$fOrd1Product_$cliftCompare_info


==================== Asm code ====================
2018-03-16 16:12:03.977963666 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrd1Product_$cliftCompare_entry
.type Data.Functor.Product.$fOrd1Product_$cliftCompare_entry, @object
Data.Functor.Product.$fOrd1Product_$cliftCompare_entry:
_cgaLB:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaLF
_cgaLG:
	leaq block_cgaLy_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgaLy
_cgaLz:
	movq (%rbx),%rax
	jmp *(%rax)
_cgaLF:
	leaq Data.Functor.Product.$fOrd1Product_$cliftCompare_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrd1Product_$cliftCompare_entry, .-Data.Functor.Product.$fOrd1Product_$cliftCompare_entry


==================== Asm code ====================
2018-03-16 16:12:03.978626653 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrd1Product_$cliftCompare_info
.type Data.Functor.Product.$fOrd1Product_$cliftCompare_info, @object
Data.Functor.Product.$fOrd1Product_$cliftCompare_info:
	.quad	Data.Functor.Product.$fOrd1Product_$cliftCompare_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:12:03.97932483 UTC

.section .text
.align 8
_cgaLy:
_cgaLy:
	leaq block_cgaLE_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgaLE
_cgaLI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgaLy, .-_cgaLy


==================== Asm code ====================
2018-03-16 16:12:03.979968251 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaLy_info:
	.quad	_cgaLy
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:03.980644607 UTC

.section .text
.align 8
_cgaLE:
_cgaLE:
	movq 8(%rbp),%r9
	movq 40(%rbp),%r8
	movq 32(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cliftCompare_entry
	.size _cgaLE, .-_cgaLE


==================== Asm code ====================
2018-03-16 16:12:03.981268599 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaLE_info:
	.quad	_cgaLE
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:03.985189475 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cp1Ord1_closure
.type Data.Functor.Product.$w$cp1Ord1_closure, @object
Data.Functor.Product.$w$cp1Ord1_closure:
	.quad	Data.Functor.Product.$w$cp1Ord1_info


==================== Asm code ====================
2018-03-16 16:12:03.986046248 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cp1Ord1_slow
.type Data.Functor.Product.$w$cp1Ord1_slow, @object
Data.Functor.Product.$w$cp1Ord1_slow:
_cgaM7:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$w$cp1Ord1_entry
	.size Data.Functor.Product.$w$cp1Ord1_slow, .-Data.Functor.Product.$w$cp1Ord1_slow


==================== Asm code ====================
2018-03-16 16:12:03.986853189 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cp1Ord1_entry
.type Data.Functor.Product.$w$cp1Ord1_entry, @object
Data.Functor.Product.$w$cp1Ord1_entry:
_cgaMh:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaMi
_cgaMj:
	leaq block_cgaMb_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-56(%rbp)
	movq %rdi,-48(%rbp)
	movq %r8,-40(%rbp)
	movq (%rbp),%rax
	movq %rax,-32(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rsi,(%rbp)
	addq $-56,%rbp
	jmp *Data.Functor.Classes.$p1Ord1_entry@gotpcrel(%rip)
_cgaMi:
	leaq Data.Functor.Product.$w$cp1Ord1_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cp1Ord1_entry, .-Data.Functor.Product.$w$cp1Ord1_entry


==================== Asm code ====================
2018-03-16 16:12:03.987615136 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cp1Ord1_info
.type Data.Functor.Product.$w$cp1Ord1_info, @object
Data.Functor.Product.$w$cp1Ord1_info:
	.quad	Data.Functor.Product.$w$cp1Ord1_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	Data.Functor.Product.$w$cp1Ord1_slow


==================== Asm code ====================
2018-03-16 16:12:03.988372789 UTC

.section .text
.align 8
_cgaMb:
_cgaMb:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cgaMe
_cgaMf:
	movq 24(%rbp),%r14
	movq 8(%rbp),%rax
	movq stg_ap_ppp_info@gotpcrel(%rip),%rbx
	movq %rbx,8(%rbp)
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp *Data.Functor.Classes.$p1Ord1_entry@gotpcrel(%rip)
_cgaMe:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cgaMb, .-_cgaMb


==================== Asm code ====================
2018-03-16 16:12:03.991056541 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaMb_info:
	.quad	_cgaMb
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:03.994916165 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrd1Product1_closure
.type Data.Functor.Product.$fOrd1Product1_closure, @object
Data.Functor.Product.$fOrd1Product1_closure:
	.quad	Data.Functor.Product.$fOrd1Product1_info


==================== Asm code ====================
2018-03-16 16:12:03.995780963 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrd1Product1_entry
.type Data.Functor.Product.$fOrd1Product1_entry, @object
Data.Functor.Product.$fOrd1Product1_entry:
_cgaMP:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaMT
_cgaMU:
	leaq block_cgaMM_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgaMM
_cgaMN:
	movq (%rbx),%rax
	jmp *(%rax)
_cgaMT:
	leaq Data.Functor.Product.$fOrd1Product1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrd1Product1_entry, .-Data.Functor.Product.$fOrd1Product1_entry


==================== Asm code ====================
2018-03-16 16:12:03.996405738 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrd1Product1_info
.type Data.Functor.Product.$fOrd1Product1_info, @object
Data.Functor.Product.$fOrd1Product1_info:
	.quad	Data.Functor.Product.$fOrd1Product1_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:12:03.997105591 UTC

.section .text
.align 8
_cgaMM:
_cgaMM:
	leaq block_cgaMS_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgaMS
_cgaMW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgaMM, .-_cgaMM


==================== Asm code ====================
2018-03-16 16:12:03.997751254 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaMM_info:
	.quad	_cgaMM
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:03.998358203 UTC

.section .text
.align 8
_cgaMS:
_cgaMS:
	movq 8(%rbp),%r9
	movq 40(%rbp),%r8
	movq 32(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cp1Ord1_entry
	.size _cgaMS, .-_cgaMS


==================== Asm code ====================
2018-03-16 16:12:03.99895965 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaMS_info:
	.quad	_cgaMS
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.002541155 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrd1Product_closure
.type Data.Functor.Product.$fOrd1Product_closure, @object
Data.Functor.Product.$fOrd1Product_closure:
	.quad	Data.Functor.Product.$fOrd1Product_info


==================== Asm code ====================
2018-03-16 16:12:04.003162375 UTC

.section .text
.align 8
sat_sgaoT_entry:
_cgaNt:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$fOrd1Product_$cliftCompare_entry
	.size sat_sgaoT_entry, .-sat_sgaoT_entry


==================== Asm code ====================
2018-03-16 16:12:04.003701601 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaoT_info:
	.quad	sat_sgaoT_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:04.004295692 UTC

.section .text
.align 8
sat_sgaoS_entry:
_cgaNB:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$fOrd1Product1_entry
	.size sat_sgaoS_entry, .-sat_sgaoS_entry


==================== Asm code ====================
2018-03-16 16:12:04.004849444 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaoS_info:
	.quad	sat_sgaoS_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:04.005639528 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrd1Product_entry
.type Data.Functor.Product.$fOrd1Product_entry, @object
Data.Functor.Product.$fOrd1Product_entry:
_cgaNF:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cgaNJ
_cgaNI:
	leaq sat_sgaoT_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-56(%r12)
	movq %rsi,-48(%r12)
	leaq sat_sgaoS_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq Data.Functor.Classes.C:Ord1_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -37(%r12),%rax
	movq %rax,-8(%r12)
	leaq -61(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgaNJ:
	movq $72,904(%r13)
	leaq Data.Functor.Product.$fOrd1Product_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrd1Product_entry, .-Data.Functor.Product.$fOrd1Product_entry


==================== Asm code ====================
2018-03-16 16:12:04.006322293 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrd1Product_info
.type Data.Functor.Product.$fOrd1Product_info, @object
Data.Functor.Product.$fOrd1Product_info:
	.quad	Data.Functor.Product.$fOrd1Product_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.007970968 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Product.$fRead1Product3_bytes
.type Data.Functor.Product.$fRead1Product3_bytes, @object
Data.Functor.Product.$fRead1Product3_bytes:
	.asciz "Pair"


==================== Asm code ====================
2018-03-16 16:12:04.01062306 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product2_closure
.type Data.Functor.Product.$fRead1Product2_closure, @object
Data.Functor.Product.$fRead1Product2_closure:
	.quad	Data.Functor.Product.$fRead1Product2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.011501559 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fRead1Product2_entry
.type Data.Functor.Product.$fRead1Product2_entry, @object
Data.Functor.Product.$fRead1Product2_entry:
_cgaO7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaO8
_cgaO9:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cgaO6
_cgaO5:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Data.Functor.Product.$fRead1Product3_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cgaO8:
	jmp *-16(%r13)
_cgaO6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Product.$fRead1Product2_entry, .-Data.Functor.Product.$fRead1Product2_entry


==================== Asm code ====================
2018-03-16 16:12:04.012195694 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product2_info
.type Data.Functor.Product.$fRead1Product2_info, @object
Data.Functor.Product.$fRead1Product2_info:
	.quad	Data.Functor.Product.$fRead1Product2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:12:04.014143401 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product1_closure
.type Data.Functor.Product.$fRead1Product1_closure, @object
Data.Functor.Product.$fRead1Product1_closure:
	.quad	Text.Read.Lex.Ident_con_info
	.quad	Data.Functor.Product.$fRead1Product2_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.015804058 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product_lvl3_closure
.type Data.Functor.Product.$fRead1Product_lvl3_closure, @object
Data.Functor.Product.$fRead1Product_lvl3_closure:
	.quad	GHC.Types.I#_con_info
	.quad	11


==================== Asm code ====================
2018-03-16 16:12:04.025874623 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product_$cliftReadPrec_closure
.type Data.Functor.Product.$fRead1Product_$cliftReadPrec_closure, @object
Data.Functor.Product.$fRead1Product_$cliftReadPrec_closure:
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.026742548 UTC

.section .text
.align 8
reader_sgaoY_entry:
_cgaOs:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaOt
_cgaOu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *Data.Functor.Classes.liftReadPrec_entry@gotpcrel(%rip)
_cgaOt:
	jmp *-16(%r13)
	.size reader_sgaoY_entry, .-reader_sgaoY_entry


==================== Asm code ====================
2018-03-16 16:12:04.027383344 UTC

.section .data.rel.ro
.align 8
.align 1
reader_sgaoY_info:
	.quad	reader_sgaoY_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.028065125 UTC

.section .text
.align 8
reader1_sgaoZ_entry:
_cgaOz:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaOA
_cgaOB:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *Data.Functor.Classes.liftReadPrec_entry@gotpcrel(%rip)
_cgaOA:
	jmp *-16(%r13)
	.size reader1_sgaoZ_entry, .-reader1_sgaoZ_entry


==================== Asm code ====================
2018-03-16 16:12:04.028662808 UTC

.section .data.rel.ro
.align 8
.align 1
reader1_sgaoZ_info:
	.quad	reader1_sgaoZ_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.029432838 UTC

.section .text
.align 8
sat_sgap8_entry:
_cgaP1:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgaP5
_cgaP4:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq Data.Functor.Product.Pair_con_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%r14
	movq %rax,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_cgaP5:
	movq $24,904(%r13)
	jmp *-8(%r13)
	.size sat_sgap8_entry, .-sat_sgap8_entry


==================== Asm code ====================
2018-03-16 16:12:04.030077689 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgap8_info:
	.quad	sat_sgap8_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:04.031449996 UTC

.section .text
.align 8
sat_sgap9_entry:
_cgaP6:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgaPa
_cgaP9:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgap8_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rsi
	leaq Data.Functor.Product.$fRead1Product_lvl3_closure+1(%rip),%r14
	movq %rax,%rbx
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_cgaPa:
	movq $24,904(%r13)
	jmp *-8(%r13)
	.size sat_sgap9_entry, .-sat_sgap9_entry


==================== Asm code ====================
2018-03-16 16:12:04.03213895 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgap9_info:
	.quad	sat_sgap9_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:04.032859169 UTC

.section .text
.align 8
sat_sgapa_entry:
_cgaPb:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgaPf
_cgaPe:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	leaq sat_sgap9_info(%rip),%rdx
	movq %rdx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rsi
	leaq Data.Functor.Product.$fRead1Product_lvl3_closure+1(%rip),%r14
	movq %rax,%rbx
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_cgaPf:
	movq $24,904(%r13)
	jmp *-8(%r13)
	.size sat_sgapa_entry, .-sat_sgapa_entry


==================== Asm code ====================
2018-03-16 16:12:04.03356787 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgapa_info:
	.quad	sat_sgapa_entry
	.quad	3
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:04.034417376 UTC

.section .text
.align 8
$wlvl_sgap0_entry:
_cgaPj:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaPk
_cgaPl:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cgaPn
_cgaPm:
	cmpq $10,%r14
	jg _cgaPh
_cgaPi:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	leaq sat_sgapa_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rsi,(%r12)
	leaq block_cgaPo_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -23(%r12),%rsi
	leaq Data.Functor.Product.$fRead1Product1_closure+4(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_cgaPn:
	movq $32,904(%r13)
_cgaPk:
	jmp *-8(%r13)
_cgaPh:
	addq $-32,%r12
	movq Text.ParserCombinators.ReadP.Fail_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wlvl_sgap0_entry, .-$wlvl_sgap0_entry


==================== Asm code ====================
2018-03-16 16:12:04.035152008 UTC

.section .data.rel.ro
.align 8
.align 1
$wlvl_sgap0_info:
	.quad	$wlvl_sgap0_entry
	.quad	2
	.quad	12884901899
	.quad	8589934605
	.quad	SgaPW_srt


==================== Asm code ====================
2018-03-16 16:12:04.035845447 UTC

.section .text
.align 8
_cgaPo:
_cgaPo:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cgaPt
_cgaPs:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgaPt:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgaPo, .-_cgaPo


==================== Asm code ====================
2018-03-16 16:12:04.036484952 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaPo_info:
	.quad	_cgaPo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.037193491 UTC

.section .text
.align 8
lvl9_sgapd_entry:
_cgaPC:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaPD
_cgaPE:
	leaq block_cgaPz_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cgaPz
_cgaPA:
	movq (%rbx),%rax
	jmp *(%rax)
_cgaPD:
	jmp *-8(%r13)
	.size lvl9_sgapd_entry, .-lvl9_sgapd_entry


==================== Asm code ====================
2018-03-16 16:12:04.038559184 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_sgapd_info:
	.quad	lvl9_sgapd_entry
	.quad	1
	.quad	12884901897
	.quad	8589934607
	.quad	SgaPW_srt


==================== Asm code ====================
2018-03-16 16:12:04.039133533 UTC

.section .text
.align 8
_cgaPz:
_cgaPz:
	movq 16(%rbp),%rsi
	movq 7(%rbx),%r14
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp $wlvl_sgap0_entry
	.size _cgaPz, .-_cgaPz


==================== Asm code ====================
2018-03-16 16:12:04.039681005 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaPz_info:
	.quad	_cgaPz
	.quad	2
	.quad	12884901918
	.quad	SgaPW_srt


==================== Asm code ====================
2018-03-16 16:12:04.040278076 UTC

.section .text
.align 8
sat_sgapk_entry:
_cgaPO:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp *GHC.Read.list3_entry@gotpcrel(%rip)
	.size sat_sgapk_entry, .-sat_sgapk_entry


==================== Asm code ====================
2018-03-16 16:12:04.040852077 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgapk_info:
	.quad	sat_sgapk_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	SgaPW_srt+16


==================== Asm code ====================
2018-03-16 16:12:04.041735718 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry
.type Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry, @object
Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry:
_cgaPR:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cgaPV
_cgaPU:
	leaq reader_sgaoY_info(%rip),%rax
	movq %rax,-128(%r12)
	movq %r14,-112(%r12)
	movq %rdi,-104(%r12)
	movq %r8,-96(%r12)
	leaq reader1_sgaoZ_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	leaq $wlvl_sgap0_info(%rip),%rax
	movq %rax,-48(%r12)
	leaq -128(%r12),%rax
	movq %rax,-40(%r12)
	leaq -88(%r12),%rax
	movq %rax,-32(%r12)
	leaq lvl9_sgapd_info(%rip),%rax
	movq %rax,-24(%r12)
	leaq -46(%r12),%rax
	movq %rax,-16(%r12)
	leaq sat_sgapk_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -22(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgaPV:
	movq $136,904(%r13)
	leaq Data.Functor.Product.$fRead1Product_$cliftReadPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry, .-Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry


==================== Asm code ====================
2018-03-16 16:12:04.042528261 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product_$cliftReadPrec_info
.type Data.Functor.Product.$fRead1Product_$cliftReadPrec_info, @object
Data.Functor.Product.$fRead1Product_$cliftReadPrec_info:
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry
	.quad	0
	.quad	64424509454
	.quad	17179869208
	.quad	SgaPW_srt


==================== Asm code ====================
2018-03-16 16:12:04.049025134 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product_$cliftReadsPrec_closure
.type Data.Functor.Product.$fRead1Product_$cliftReadsPrec_closure, @object
Data.Functor.Product.$fRead1Product_$cliftReadsPrec_closure:
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.050060486 UTC

.section .text
.align 8
sat_sgapv_entry:
_cgaRi:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaRj
_cgaRk:
	leaq block_cgaRf_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 6(%rbx),%r14
	addq $-8,%rbp
	jmp *Text.ParserCombinators.ReadP.$wreadS_to_P_entry@gotpcrel(%rip)
_cgaRj:
	jmp *-8(%r13)
	.size sat_sgapv_entry, .-sat_sgapv_entry


==================== Asm code ====================
2018-03-16 16:12:04.050706191 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgapv_info:
	.quad	sat_sgapv_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.051444376 UTC

.section .text
.align 8
_cgaRf:
_cgaRf:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cgaRn
_cgaRm:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgaRn:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgaRf, .-_cgaRf


==================== Asm code ====================
2018-03-16 16:12:04.052031492 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaRf_info:
	.quad	_cgaRf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.052639816 UTC

.section .text
.align 8
sat_sgapq_entry:
_cgaRt:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp *Text.ParserCombinators.ReadPrec.readS_to_Prec1_entry@gotpcrel(%rip)
	.size sat_sgapq_entry, .-sat_sgapq_entry


==================== Asm code ====================
2018-03-16 16:12:04.053200779 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgapq_info:
	.quad	sat_sgapq_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:04.054099282 UTC

.section .text
.align 8
ds_sgapp_entry:
_cgaRw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaRx
_cgaRy:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cgaRA
_cgaRz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	leaq sat_sgapv_info(%rip),%rsi
	movq %rsi,-24(%r12)
	movq %rbx,-16(%r12)
	leaq sat_sgapq_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rdx,(%r12)
	leaq -22(%r12),%r8
	leaq -7(%r12),%rdi
	movq %rcx,%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry
_cgaRA:
	movq $32,904(%r13)
_cgaRx:
	jmp *-16(%r13)
	.size ds_sgapp_entry, .-ds_sgapp_entry


==================== Asm code ====================
2018-03-16 16:12:04.054801437 UTC

.section .data.rel.ro
.align 8
.align 1
ds_sgapp_info:
	.quad	ds_sgapp_entry
	.quad	4
	.quad	4294967311
	.quad	SgaPW_srt+24


==================== Asm code ====================
2018-03-16 16:12:04.055525345 UTC

.section .text
.align 8
sat_sgapx_entry:
_cgaRK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaRL
_cgaRM:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq 24(%rbx),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_cgaRL:
	jmp *-16(%r13)
	.size sat_sgapx_entry, .-sat_sgapx_entry


==================== Asm code ====================
2018-03-16 16:12:04.05616478 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgapx_info:
	.quad	sat_sgapx_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:12:04.056889802 UTC

.section .text
.align 8
sat_sgapy_entry:
_cgaRN:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cgaRR
_cgaRQ:
	movq 7(%rbx),%rax
	leaq sat_sgapx_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -24(%r12),%r14
	movq Text.ParserCombinators.ReadP.run_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_cgaRR:
	movq $32,904(%r13)
	jmp *-8(%r13)
	.size sat_sgapy_entry, .-sat_sgapy_entry


==================== Asm code ====================
2018-03-16 16:12:04.057564611 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgapy_info:
	.quad	sat_sgapy_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:04.058319722 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fRead1Product_$cliftReadsPrec_entry
.type Data.Functor.Product.$fRead1Product_$cliftReadsPrec_entry, @object
Data.Functor.Product.$fRead1Product_$cliftReadsPrec_entry:
_cgaRS:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cgaRW
_cgaRV:
	leaq ds_sgapp_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	leaq sat_sgapy_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgaRW:
	movq $64,904(%r13)
	leaq Data.Functor.Product.$fRead1Product_$cliftReadsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fRead1Product_$cliftReadsPrec_entry, .-Data.Functor.Product.$fRead1Product_$cliftReadsPrec_entry


==================== Asm code ====================
2018-03-16 16:12:04.058994042 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product_$cliftReadsPrec_info
.type Data.Functor.Product.$fRead1Product_$cliftReadsPrec_info, @object
Data.Functor.Product.$fRead1Product_$cliftReadsPrec_info:
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	17179869208
	.quad	SgaPW_srt+24


==================== Asm code ====================
2018-03-16 16:12:04.062507727 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product_$cliftReadListPrec_closure
.type Data.Functor.Product.$fRead1Product_$cliftReadListPrec_closure, @object
Data.Functor.Product.$fRead1Product_$cliftReadListPrec_closure:
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadListPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.063167086 UTC

.section .text
.align 8
sat_sgapD_entry:
_cgaSI:
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	jmp Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry
	.size sat_sgapD_entry, .-sat_sgapD_entry


==================== Asm code ====================
2018-03-16 16:12:04.063740313 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgapD_info:
	.quad	sat_sgapD_entry
	.quad	4
	.quad	4294967311
	.quad	SgaPW_srt+24


==================== Asm code ====================
2018-03-16 16:12:04.064500469 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fRead1Product_$cliftReadListPrec_entry
.type Data.Functor.Product.$fRead1Product_$cliftReadListPrec_entry, @object
Data.Functor.Product.$fRead1Product_$cliftReadListPrec_entry:
_cgaSL:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cgaSP
_cgaSO:
	leaq sat_sgapD_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	leaq -40(%r12),%r14
	jmp *GHC.Read.list_entry@gotpcrel(%rip)
_cgaSP:
	movq $48,904(%r13)
	leaq Data.Functor.Product.$fRead1Product_$cliftReadListPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fRead1Product_$cliftReadListPrec_entry, .-Data.Functor.Product.$fRead1Product_$cliftReadListPrec_entry


==================== Asm code ====================
2018-03-16 16:12:04.065156197 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product_$cliftReadListPrec_info
.type Data.Functor.Product.$fRead1Product_$cliftReadListPrec_info, @object
Data.Functor.Product.$fRead1Product_$cliftReadListPrec_info:
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadListPrec_entry
	.quad	0
	.quad	55834574862
	.quad	17179869208
	.quad	SgaPW_srt+24


==================== Asm code ====================
2018-03-16 16:12:04.071410617 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product_closure
.type Data.Functor.Product.$fRead1Product_closure, @object
Data.Functor.Product.$fRead1Product_closure:
	.quad	Data.Functor.Product.$fRead1Product_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.0726925 UTC

.section .text
.align 8
sat_sgapJ_entry:
_cgaT7:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fRead1Product_$cliftReadListPrec_entry
	.size sat_sgapJ_entry, .-sat_sgapJ_entry


==================== Asm code ====================
2018-03-16 16:12:04.07355189 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgapJ_info:
	.quad	sat_sgapJ_entry
	.quad	2
	.quad	4294967307
	.quad	8589934607
	.quad	SgaPW_srt+48


==================== Asm code ====================
2018-03-16 16:12:04.074179279 UTC

.section .text
.align 8
sat_sgapI_entry:
_cgaTf:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry
	.size sat_sgapI_entry, .-sat_sgapI_entry


==================== Asm code ====================
2018-03-16 16:12:04.074769401 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgapI_info:
	.quad	sat_sgapI_entry
	.quad	2
	.quad	4294967307
	.quad	8589934607
	.quad	SgaPW_srt+24


==================== Asm code ====================
2018-03-16 16:12:04.075558751 UTC

.section .text
.align 8
sat_sgapH_entry:
_cgaTm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaTn
_cgaTo:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fRead1Product_$cliftReadList_entry
_cgaTn:
	jmp *-16(%r13)
	.size sat_sgapH_entry, .-sat_sgapH_entry


==================== Asm code ====================
2018-03-16 16:12:04.076214439 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgapH_info:
	.quad	sat_sgapH_entry
	.quad	2
	.quad	4294967314
	.quad	SgaPW_srt+56


==================== Asm code ====================
2018-03-16 16:12:04.07683244 UTC

.section .text
.align 8
sat_sgapG_entry:
_cgaTu:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fRead1Product_$cliftReadsPrec_entry
	.size sat_sgapG_entry, .-sat_sgapG_entry


==================== Asm code ====================
2018-03-16 16:12:04.077431635 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgapG_info:
	.quad	sat_sgapG_entry
	.quad	2
	.quad	4294967307
	.quad	8589934607
	.quad	SgaPW_srt+32


==================== Asm code ====================
2018-03-16 16:12:04.078254363 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fRead1Product_entry
.type Data.Functor.Product.$fRead1Product_entry, @object
Data.Functor.Product.$fRead1Product_entry:
_cgaTy:
	addq $144,%r12
	cmpq 856(%r13),%r12
	ja _cgaTC
_cgaTB:
	leaq sat_sgapJ_info(%rip),%rax
	movq %rax,-136(%r12)
	movq %r14,-128(%r12)
	movq %rsi,-120(%r12)
	leaq sat_sgapI_info(%rip),%rax
	movq %rax,-112(%r12)
	movq %r14,-104(%r12)
	movq %rsi,-96(%r12)
	leaq sat_sgapH_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %r14,-72(%r12)
	movq %rsi,-64(%r12)
	leaq sat_sgapG_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq %rsi,-40(%r12)
	movq Data.Functor.Classes.C:Read1_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq -54(%r12),%rax
	movq %rax,-24(%r12)
	leaq -88(%r12),%rax
	movq %rax,-16(%r12)
	leaq -110(%r12),%rax
	movq %rax,-8(%r12)
	leaq -134(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgaTC:
	movq $144,904(%r13)
	leaq Data.Functor.Product.$fRead1Product_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fRead1Product_entry, .-Data.Functor.Product.$fRead1Product_entry


==================== Asm code ====================
2018-03-16 16:12:04.079242302 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product_info
.type Data.Functor.Product.$fRead1Product_info, @object
Data.Functor.Product.$fRead1Product_info:
	.quad	Data.Functor.Product.$fRead1Product_entry
	.quad	0
	.quad	253403070478
	.quad	8589934607
	.quad	SgaPW_srt+24


==================== Asm code ====================
2018-03-16 16:12:04.079833986 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product_$cliftReadList_closure
.type Data.Functor.Product.$fRead1Product_$cliftReadList_closure, @object
Data.Functor.Product.$fRead1Product_$cliftReadList_closure:
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.080567366 UTC

.section .text
.align 8
sat_sgapM_entry:
_cgaTL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaTM
_cgaTN:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fRead1Product_entry
_cgaTM:
	jmp *-16(%r13)
	.size sat_sgapM_entry, .-sat_sgapM_entry


==================== Asm code ====================
2018-03-16 16:12:04.081196862 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgapM_info:
	.quad	sat_sgapM_entry
	.quad	2
	.quad	4294967314
	.quad	SgaPW_srt+64


==================== Asm code ====================
2018-03-16 16:12:04.082291043 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fRead1Product_$cliftReadList_entry
.type Data.Functor.Product.$fRead1Product_$cliftReadList_entry, @object
Data.Functor.Product.$fRead1Product_$cliftReadList_entry:
_cgaTO:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cgaTS
_cgaTR:
	leaq sat_sgapM_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movq Data.Functor.Classes.liftReadListDefault_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_cgaTS:
	movq $32,904(%r13)
	leaq Data.Functor.Product.$fRead1Product_$cliftReadList_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fRead1Product_$cliftReadList_entry, .-Data.Functor.Product.$fRead1Product_$cliftReadList_entry


==================== Asm code ====================
2018-03-16 16:12:04.082975986 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fRead1Product_$cliftReadList_info
.type Data.Functor.Product.$fRead1Product_$cliftReadList_info, @object
Data.Functor.Product.$fRead1Product_$cliftReadList_info:
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadList_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	SgaPW_srt+56


==================== Asm code ====================
2018-03-16 16:12:04.087668486 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cliftShowsPrec_closure
.type Data.Functor.Product.$w$cliftShowsPrec_closure, @object
Data.Functor.Product.$w$cliftShowsPrec_closure:
	.quad	Data.Functor.Product.$w$cliftShowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.088402914 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cliftShowsPrec_slow
.type Data.Functor.Product.$w$cliftShowsPrec_slow, @object
Data.Functor.Product.$w$cliftShowsPrec_slow:
_cgaUx:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$w$cliftShowsPrec_entry
	.size Data.Functor.Product.$w$cliftShowsPrec_slow, .-Data.Functor.Product.$w$cliftShowsPrec_slow


==================== Asm code ====================
2018-03-16 16:12:04.089193915 UTC

.section .text
.align 8
sat_sgapV_entry:
_cgaUF:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaUG
_cgaUH:
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *Data.Functor.Classes.liftShowsPrec_entry@gotpcrel(%rip)
_cgaUG:
	jmp *-16(%r13)
	.size sat_sgapV_entry, .-sat_sgapV_entry


==================== Asm code ====================
2018-03-16 16:12:04.089914542 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgapV_info:
	.quad	sat_sgapV_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.090636458 UTC

.section .text
.align 8
sat_sgapU_entry:
_cgaUM:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaUN
_cgaUO:
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *Data.Functor.Classes.liftShowsPrec_entry@gotpcrel(%rip)
_cgaUN:
	jmp *-16(%r13)
	.size sat_sgapU_entry, .-sat_sgapU_entry


==================== Asm code ====================
2018-03-16 16:12:04.091252612 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgapU_info:
	.quad	sat_sgapU_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.092062958 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cliftShowsPrec_entry
.type Data.Functor.Product.$w$cliftShowsPrec_entry, @object
Data.Functor.Product.$w$cliftShowsPrec_entry:
_cgaUP:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cgaUT
_cgaUS:
	leaq sat_sgapV_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	leaq sat_sgapU_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	movq %r9,%rax
	movq (%rbp),%r9
	movq %rax,%r8
	leaq Data.Functor.Product.$fRead1Product2_closure(%rip),%rdi
	leaq -72(%r12),%rsi
	leaq -32(%r12),%r14
	addq $8,%rbp
	jmp *Data.Functor.Classes.$wshowsBinaryWith_entry@gotpcrel(%rip)
_cgaUT:
	movq $80,904(%r13)
	leaq Data.Functor.Product.$w$cliftShowsPrec_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cliftShowsPrec_entry, .-Data.Functor.Product.$w$cliftShowsPrec_entry


==================== Asm code ====================
2018-03-16 16:12:04.092797495 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cliftShowsPrec_info
.type Data.Functor.Product.$w$cliftShowsPrec_info, @object
Data.Functor.Product.$w$cliftShowsPrec_info:
	.quad	Data.Functor.Product.$w$cliftShowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	30064771072
	.quad	SgaPW_srt+72
	.quad	1031
	.quad	Data.Functor.Product.$w$cliftShowsPrec_slow


==================== Asm code ====================
2018-03-16 16:12:04.09688755 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fShow1Product_$cliftShowsPrec_closure
.type Data.Functor.Product.$fShow1Product_$cliftShowsPrec_closure, @object
Data.Functor.Product.$fShow1Product_$cliftShowsPrec_closure:
	.quad	Data.Functor.Product.$fShow1Product_$cliftShowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.097833475 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fShow1Product_$cliftShowsPrec_entry
.type Data.Functor.Product.$fShow1Product_$cliftShowsPrec_entry, @object
Data.Functor.Product.$fShow1Product_$cliftShowsPrec_entry:
_cgaVn:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaVr
_cgaVs:
	leaq block_cgaVk_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgaVk
_cgaVl:
	movq (%rbx),%rax
	jmp *(%rax)
_cgaVr:
	leaq Data.Functor.Product.$fShow1Product_$cliftShowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fShow1Product_$cliftShowsPrec_entry, .-Data.Functor.Product.$fShow1Product_$cliftShowsPrec_entry


==================== Asm code ====================
2018-03-16 16:12:04.098515904 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fShow1Product_$cliftShowsPrec_info
.type Data.Functor.Product.$fShow1Product_$cliftShowsPrec_info, @object
Data.Functor.Product.$fShow1Product_$cliftShowsPrec_info:
	.quad	Data.Functor.Product.$fShow1Product_$cliftShowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	25769803802
	.quad	SgaPW_srt+80


==================== Asm code ====================
2018-03-16 16:12:04.099211173 UTC

.section .text
.align 8
_cgaVk:
_cgaVk:
	leaq block_cgaVq_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 40(%rbp),%rbx
	movq %rax,40(%rbp)
	testb $7,%bl
	jne _cgaVq
_cgaVu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgaVk, .-_cgaVk


==================== Asm code ====================
2018-03-16 16:12:04.099802685 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaVk_info:
	.quad	_cgaVk
	.quad	5
	.quad	4294967326
	.quad	SgaPW_srt+80


==================== Asm code ====================
2018-03-16 16:12:04.10046455 UTC

.section .text
.align 8
_cgaVq:
_cgaVq:
	movq 40(%rbp),%r9
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cliftShowsPrec_entry
	.size _cgaVq, .-_cgaVq


==================== Asm code ====================
2018-03-16 16:12:04.10106713 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaVq_info:
	.quad	_cgaVq
	.quad	1029
	.quad	4294967326
	.quad	SgaPW_srt+80


==================== Asm code ====================
2018-03-16 16:12:04.10278851 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct4_closure
.type Data.Functor.Product.$fFoldableProduct4_closure, @object
Data.Functor.Product.$fFoldableProduct4_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.107209397 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fShow1Product_$cliftShowList_closure
.type Data.Functor.Product.$fShow1Product_$cliftShowList_closure, @object
Data.Functor.Product.$fShow1Product_$cliftShowList_closure:
	.quad	Data.Functor.Product.$fShow1Product_$cliftShowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.108136664 UTC

.section .text
.align 8
sat_sgaqh_entry:
_cgaW5:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaW6
_cgaW7:
	leaq block_cgaW2_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgaW2
_cgaW3:
	movq (%rbx),%rax
	jmp *(%rax)
_cgaW6:
	jmp *-8(%r13)
	.size sat_sgaqh_entry, .-sat_sgaqh_entry


==================== Asm code ====================
2018-03-16 16:12:04.108843424 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaqh_info:
	.quad	sat_sgaqh_entry
	.quad	4
	.quad	4294967304
	.quad	4294967301
	.quad	SgaPW_srt+80


==================== Asm code ====================
2018-03-16 16:12:04.109720635 UTC

.section .text
.align 8
_cgaW2:
_cgaW2:
	xorl %r9d,%r9d
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,24(%rbp)
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp Data.Functor.Product.$w$cliftShowsPrec_entry
	.size _cgaW2, .-_cgaW2


==================== Asm code ====================
2018-03-16 16:12:04.110879828 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaW2_info:
	.quad	_cgaW2
	.quad	4
	.quad	4294967326
	.quad	SgaPW_srt+80


==================== Asm code ====================
2018-03-16 16:12:04.111642732 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fShow1Product_$cliftShowList_entry
.type Data.Functor.Product.$fShow1Product_$cliftShowList_entry, @object
Data.Functor.Product.$fShow1Product_$cliftShowList_entry:
_cgaWc:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cgaWg
_cgaWf:
	leaq sat_sgaqh_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	movq (%rbp),%rdi
	movq %r9,%rsi
	leaq -31(%r12),%r14
	addq $8,%rbp
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
_cgaWg:
	movq $40,904(%r13)
	leaq Data.Functor.Product.$fShow1Product_$cliftShowList_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fShow1Product_$cliftShowList_entry, .-Data.Functor.Product.$fShow1Product_$cliftShowList_entry


==================== Asm code ====================
2018-03-16 16:12:04.112330183 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fShow1Product_$cliftShowList_info
.type Data.Functor.Product.$fShow1Product_$cliftShowList_info, @object
Data.Functor.Product.$fShow1Product_$cliftShowList_info:
	.quad	Data.Functor.Product.$fShow1Product_$cliftShowList_entry
	.quad	0
	.quad	21474836494
	.quad	25769803802
	.quad	SgaPW_srt+80


==================== Asm code ====================
2018-03-16 16:12:04.116897896 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fShow1Product_closure
.type Data.Functor.Product.$fShow1Product_closure, @object
Data.Functor.Product.$fShow1Product_closure:
	.quad	Data.Functor.Product.$fShow1Product_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.117837249 UTC

.section .text
.align 8
sat_sgaql_entry:
_cgaWG:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaWH
_cgaWI:
	movq %rdi,%r9
	movq %r8,%rax
	movq %rsi,%r8
	movq %r14,%rdi
	movq 12(%rbx),%rsi
	movq 4(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp Data.Functor.Product.$fShow1Product_$cliftShowList_entry
_cgaWH:
	jmp *-8(%r13)
	.size sat_sgaql_entry, .-sat_sgaql_entry


==================== Asm code ====================
2018-03-16 16:12:04.118492025 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaql_info:
	.quad	sat_sgaql_entry
	.quad	2
	.quad	4294967307
	.quad	17179869208
	.quad	SgaPW_srt+96


==================== Asm code ====================
2018-03-16 16:12:04.119250338 UTC

.section .text
.align 8
sat_sgaqk_entry:
_cgaWO:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaWP
_cgaWQ:
	movq %rdi,%r9
	movq %r8,%rax
	movq %rsi,%r8
	movq %r14,%rdi
	movq 12(%rbx),%rsi
	movq 4(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp Data.Functor.Product.$fShow1Product_$cliftShowsPrec_entry
_cgaWP:
	jmp *-8(%r13)
	.size sat_sgaqk_entry, .-sat_sgaqk_entry


==================== Asm code ====================
2018-03-16 16:12:04.119886099 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaqk_info:
	.quad	sat_sgaqk_entry
	.quad	2
	.quad	4294967307
	.quad	17179869208
	.quad	SgaPW_srt+88


==================== Asm code ====================
2018-03-16 16:12:04.120712656 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fShow1Product_entry
.type Data.Functor.Product.$fShow1Product_entry, @object
Data.Functor.Product.$fShow1Product_entry:
_cgaWS:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cgaWW
_cgaWV:
	leaq sat_sgaql_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-56(%r12)
	movq %rsi,-48(%r12)
	leaq sat_sgaqk_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq Data.Functor.Classes.C:Show1_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -36(%r12),%rax
	movq %rax,-8(%r12)
	leaq -60(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgaWW:
	movq $72,904(%r13)
	leaq Data.Functor.Product.$fShow1Product_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fShow1Product_entry, .-Data.Functor.Product.$fShow1Product_entry


==================== Asm code ====================
2018-03-16 16:12:04.121451477 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fShow1Product_info
.type Data.Functor.Product.$fShow1Product_info, @object
Data.Functor.Product.$fShow1Product_info:
	.quad	Data.Functor.Product.$fShow1Product_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	SgaPW_srt+88


==================== Asm code ====================
2018-03-16 16:12:04.126145563 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$c==_closure
.type Data.Functor.Product.$w$c==_closure, @object
Data.Functor.Product.$w$c==_closure:
	.quad	Data.Functor.Product.$w$c==_info


==================== Asm code ====================
2018-03-16 16:12:04.12689826 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$c==_slow
.type Data.Functor.Product.$w$c==_slow, @object
Data.Functor.Product.$w$c==_slow:
_cgaXg:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$w$c==_entry
	.size Data.Functor.Product.$w$c==_slow, .-Data.Functor.Product.$w$c==_slow


==================== Asm code ====================
2018-03-16 16:12:04.127667814 UTC

.section .text
.align 8
eq_sgaqt_entry:
_cgaXo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaXp
_cgaXq:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
_cgaXp:
	jmp *-16(%r13)
	.size eq_sgaqt_entry, .-eq_sgaqt_entry


==================== Asm code ====================
2018-03-16 16:12:04.128285558 UTC

.section .data.rel.ro
.align 8
.align 1
eq_sgaqt_info:
	.quad	eq_sgaqt_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.129185929 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$c==_entry
.type Data.Functor.Product.$w$c==_entry, @object
Data.Functor.Product.$w$c==_entry:
_cgaXx:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaXy
_cgaXz:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgaXB
_cgaXA:
	leaq eq_sgaqt_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rdi,(%r12)
	leaq block_cgaXr_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq (%rbp),%rdi
	movq %rsi,%rax
	movq %r8,%rsi
	leaq -16(%r12),%rbx
	movq %r14,%rcx
	movq %rbx,%r14
	movq %rbx,%rdx
	movq %rcx,%rbx
	movq %rax,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rdx,(%rbp)
	addq $-24,%rbp
	jmp *stg_ap_ppp_fast@gotpcrel(%rip)
_cgaXB:
	movq $24,904(%r13)
_cgaXy:
	leaq Data.Functor.Product.$w$c==_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$c==_entry, .-Data.Functor.Product.$w$c==_entry


==================== Asm code ====================
2018-03-16 16:12:04.130050434 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$c==_info
.type Data.Functor.Product.$w$c==_info, @object
Data.Functor.Product.$w$c==_info:
	.quad	Data.Functor.Product.$w$c==_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	Data.Functor.Product.$w$c==_slow


==================== Asm code ====================
2018-03-16 16:12:04.130836155 UTC

.section .text
.align 8
_cgaXr:
_cgaXr:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cgaXu
_cgaXv:
	movq 32(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 24(%rbp),%r14
	movq 8(%rbp),%rbx
	addq $40,%rbp
	jmp *stg_ap_ppp_fast@gotpcrel(%rip)
_cgaXu:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cgaXr, .-_cgaXr


==================== Asm code ====================
2018-03-16 16:12:04.131468936 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaXr_info:
	.quad	_cgaXr
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.135530656 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fEqProduct_$c==_closure
.type Data.Functor.Product.$fEqProduct_$c==_closure, @object
Data.Functor.Product.$fEqProduct_$c==_closure:
	.quad	Data.Functor.Product.$fEqProduct_$c==_info


==================== Asm code ====================
2018-03-16 16:12:04.136388253 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fEqProduct_$c==_entry
.type Data.Functor.Product.$fEqProduct_$c==_entry, @object
Data.Functor.Product.$fEqProduct_$c==_entry:
_cgaYa:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaYe
_cgaYf:
	leaq block_cgaY7_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgaY7
_cgaY8:
	movq (%rbx),%rax
	jmp *(%rax)
_cgaYe:
	leaq Data.Functor.Product.$fEqProduct_$c==_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fEqProduct_$c==_entry, .-Data.Functor.Product.$fEqProduct_$c==_entry


==================== Asm code ====================
2018-03-16 16:12:04.137088272 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fEqProduct_$c==_info
.type Data.Functor.Product.$fEqProduct_$c==_info, @object
Data.Functor.Product.$fEqProduct_$c==_info:
	.quad	Data.Functor.Product.$fEqProduct_$c==_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:12:04.137865277 UTC

.section .text
.align 8
_cgaY7:
_cgaY7:
	leaq block_cgaYd_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgaYd
_cgaYh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgaY7, .-_cgaY7


==================== Asm code ====================
2018-03-16 16:12:04.138465341 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaY7_info:
	.quad	_cgaY7
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.139075154 UTC

.section .text
.align 8
_cgaYd:
_cgaYd:
	movq 8(%rbp),%r9
	movq 40(%rbp),%r8
	movq 32(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$c==_entry
	.size _cgaYd, .-_cgaYd


==================== Asm code ====================
2018-03-16 16:12:04.13966525 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaYd_info:
	.quad	_cgaYd
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.145953244 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fEqProduct_$c/=_closure
.type Data.Functor.Product.$fEqProduct_$c/=_closure, @object
Data.Functor.Product.$fEqProduct_$c/=_closure:
	.quad	Data.Functor.Product.$fEqProduct_$c/=_info


==================== Asm code ====================
2018-03-16 16:12:04.146801862 UTC

.section .text
.align 8
eq_sgaqR_entry:
_cgaYX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaYY
_cgaYZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
_cgaYY:
	jmp *-16(%r13)
	.size eq_sgaqR_entry, .-eq_sgaqR_entry


==================== Asm code ====================
2018-03-16 16:12:04.147443988 UTC

.section .data.rel.ro
.align 8
.align 1
eq_sgaqR_info:
	.quad	eq_sgaqR_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.14821718 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fEqProduct_$c/=_entry
.type Data.Functor.Product.$fEqProduct_$c/=_entry, @object
Data.Functor.Product.$fEqProduct_$c/=_entry:
_cgaZ0:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaZ1
_cgaZ2:
	leaq block_cgaYJ_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgaYJ
_cgaYK:
	movq (%rbx),%rax
	jmp *(%rax)
_cgaZ1:
	leaq Data.Functor.Product.$fEqProduct_$c/=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fEqProduct_$c/=_entry, .-Data.Functor.Product.$fEqProduct_$c/=_entry


==================== Asm code ====================
2018-03-16 16:12:04.148853938 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fEqProduct_$c/=_info
.type Data.Functor.Product.$fEqProduct_$c/=_info, @object
Data.Functor.Product.$fEqProduct_$c/=_info:
	.quad	Data.Functor.Product.$fEqProduct_$c/=_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:12:04.149631964 UTC

.section .text
.align 8
_cgaYJ:
_cgaYJ:
	leaq block_cgaYO_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgaYO
_cgaYP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgaYJ, .-_cgaYJ


==================== Asm code ====================
2018-03-16 16:12:04.150260081 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaYJ_info:
	.quad	_cgaYJ
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.151038444 UTC

.section .text
.align 8
_cgaYO:
_cgaYO:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgaZ7
_cgaZ6:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq eq_sgaqR_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,(%r12)
	leaq block_cgaZ4_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,%rdi
	movq 40(%rbp),%rsi
	leaq -16(%r12),%rax
	movq %rax,%r14
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,32(%rbp)
	movq %rax,40(%rbp)
	jmp *stg_ap_ppp_fast@gotpcrel(%rip)
_cgaZ7:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgaYO, .-_cgaYO


==================== Asm code ====================
2018-03-16 16:12:04.151700075 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaYO_info:
	.quad	_cgaYO
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.152951679 UTC

.section .text
.align 8
_cgaZ4:
_cgaZ4:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ugaZv
_cgaZi:
	movq 40(%rbp),%rax
	leaq block_cgaZg_info(%rip),%rbx
	movq %rbx,40(%rbp)
	movq 32(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq %rax,%r14
	movq 24(%rbp),%rbx
	addq $40,%rbp
	jmp *stg_ap_ppp_fast@gotpcrel(%rip)
_ugaZv:
	addq $48,%rbp
	jmp _cgaZo
	.size _cgaZ4, .-_cgaZ4


==================== Asm code ====================
2018-03-16 16:12:04.153707817 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaZ4_info:
	.quad	_cgaZ4
	.quad	133
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.154390254 UTC

.section .text
.align 8
_cgaZg:
_cgaZg:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ugaZw
_cgaZs:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ugaZw:
	addq $8,%rbp
	jmp _cgaZo
	.size _cgaZg, .-_cgaZg


==================== Asm code ====================
2018-03-16 16:12:04.154990092 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgaZg_info:
	.quad	_cgaZg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.155623777 UTC

.section .text
.align 8
_cgaZo:
_cgaZo:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cgaZo, .-_cgaZo


==================== Asm code ====================
2018-03-16 16:12:04.159547729 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fEqProduct_closure
.type Data.Functor.Product.$fEqProduct_closure, @object
Data.Functor.Product.$fEqProduct_closure:
	.quad	Data.Functor.Product.$fEqProduct_info


==================== Asm code ====================
2018-03-16 16:12:04.160330769 UTC

.section .text
.align 8
sat_sgaqY_entry:
_cgb0o:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fEqProduct_$c/=_entry
	.size sat_sgaqY_entry, .-sat_sgaqY_entry


==================== Asm code ====================
2018-03-16 16:12:04.160970463 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaqY_info:
	.quad	sat_sgaqY_entry
	.quad	3
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.161716488 UTC

.section .text
.align 8
sat_sgaqX_entry:
_cgb0w:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fEqProduct_$c==_entry
	.size sat_sgaqX_entry, .-sat_sgaqX_entry


==================== Asm code ====================
2018-03-16 16:12:04.162265325 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaqX_info:
	.quad	sat_sgaqX_entry
	.quad	3
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.163081147 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fEqProduct_entry
.type Data.Functor.Product.$fEqProduct_entry, @object
Data.Functor.Product.$fEqProduct_entry:
_cgb0A:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cgb0E
_cgb0D:
	leaq sat_sgaqY_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	leaq sat_sgaqX_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq GHC.Classes.C:Eq_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -46(%r12),%rax
	movq %rax,-8(%r12)
	leaq -78(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgb0E:
	movq $88,904(%r13)
	leaq Data.Functor.Product.$fEqProduct_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fEqProduct_entry, .-Data.Functor.Product.$fEqProduct_entry


==================== Asm code ====================
2018-03-16 16:12:04.163881432 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fEqProduct_info
.type Data.Functor.Product.$fEqProduct_info, @object
Data.Functor.Product.$fEqProduct_info:
	.quad	Data.Functor.Product.$fEqProduct_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:04.170206889 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$ccompare_closure
.type Data.Functor.Product.$fOrdProduct_$ccompare_closure, @object
Data.Functor.Product.$fOrdProduct_$ccompare_closure:
	.quad	Data.Functor.Product.$fOrdProduct_$ccompare_info


==================== Asm code ====================
2018-03-16 16:12:04.171069889 UTC

.section .text
.align 8
w_sgara_entry:
_cgb1d:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgb1e
_cgb1f:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Classes.compare_entry@gotpcrel(%rip)
_cgb1e:
	jmp *-16(%r13)
	.size w_sgara_entry, .-w_sgara_entry


==================== Asm code ====================
2018-03-16 16:12:04.171674664 UTC

.section .data.rel.ro
.align 8
.align 1
w_sgara_info:
	.quad	w_sgara_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.172493297 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrdProduct_$ccompare_entry
.type Data.Functor.Product.$fOrdProduct_$ccompare_entry, @object
Data.Functor.Product.$fOrdProduct_$ccompare_entry:
_cgb1g:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _cgb1h
_cgb1i:
	leaq block_cgb0Z_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgb0Z
_cgb10:
	movq (%rbx),%rax
	jmp *(%rax)
_cgb1h:
	leaq Data.Functor.Product.$fOrdProduct_$ccompare_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrdProduct_$ccompare_entry, .-Data.Functor.Product.$fOrdProduct_$ccompare_entry


==================== Asm code ====================
2018-03-16 16:12:04.173196913 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$ccompare_info
.type Data.Functor.Product.$fOrdProduct_$ccompare_info, @object
Data.Functor.Product.$fOrdProduct_$ccompare_info:
	.quad	Data.Functor.Product.$fOrdProduct_$ccompare_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:12:04.17406174 UTC

.section .text
.align 8
_cgb0Z:
_cgb0Z:
	leaq block_cgb14_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgb14
_cgb15:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgb0Z, .-_cgb0Z


==================== Asm code ====================
2018-03-16 16:12:04.174686156 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgb0Z_info:
	.quad	_cgb0Z
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.175504506 UTC

.section .text
.align 8
_cgb14:
_cgb14:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgb1n
_cgb1m:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq w_sgara_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,(%r12)
	leaq block_cgb1k_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%rbp)
	leaq -16(%r12),%rcx
	movq %rcx,-24(%rbp)
	movq 40(%rbp),%rdx
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rbx,32(%rbp)
	movq %rcx,40(%rbp)
	addq $-32,%rbp
	jmp *Data.Functor.Classes.liftCompare_entry@gotpcrel(%rip)
_cgb1n:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgb14, .-_cgb14


==================== Asm code ====================
2018-03-16 16:12:04.176239297 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgb14_info:
	.quad	_cgb14
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.177090642 UTC

.section .text
.align 8
_cgb1k:
_cgb1k:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ugb1D
_cgb1B:
	movq GHC.Types.GT_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ugb1D:
	cmpq $2,%rbx
	jb _cgb1t
_cgb1x:
	movq 24(%rbp),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,16(%rbp)
	movq 40(%rbp),%rax
	movq %rax,24(%rbp)
	movq 32(%rbp),%rax
	movq 8(%rbp),%rbx
	movq %rbx,32(%rbp)
	movq %rax,40(%rbp)
	addq $16,%rbp
	jmp *Data.Functor.Classes.liftCompare_entry@gotpcrel(%rip)
_cgb1t:
	movq GHC.Types.LT_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cgb1k, .-_cgb1k


==================== Asm code ====================
2018-03-16 16:12:04.177861205 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgb1k_info:
	.quad	_cgb1k
	.quad	133
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.182462702 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$cp1Ord_closure
.type Data.Functor.Product.$fOrdProduct_$cp1Ord_closure, @object
Data.Functor.Product.$fOrdProduct_$cp1Ord_closure:
	.quad	Data.Functor.Product.$fOrdProduct_$cp1Ord_info


==================== Asm code ====================
2018-03-16 16:12:04.183305703 UTC

.section .text
.align 8
sat_sgarh_entry:
_cgb2o:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgb2p
_cgb2q:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
_cgb2p:
	jmp *-16(%r13)
	.size sat_sgarh_entry, .-sat_sgarh_entry


==================== Asm code ====================
2018-03-16 16:12:04.183924618 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgarh_info:
	.quad	sat_sgarh_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.184664251 UTC

.section .text
.align 8
sat_sgarg_entry:
_cgb2v:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgb2w
_cgb2x:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Functor.Classes.$p1Ord1_entry@gotpcrel(%rip)
_cgb2w:
	jmp *-16(%r13)
	.size sat_sgarg_entry, .-sat_sgarg_entry


==================== Asm code ====================
2018-03-16 16:12:04.185337013 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgarg_info:
	.quad	sat_sgarg_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.186037224 UTC

.section .text
.align 8
sat_sgarf_entry:
_cgb2C:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgb2D
_cgb2E:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Functor.Classes.$p1Ord1_entry@gotpcrel(%rip)
_cgb2D:
	jmp *-16(%r13)
	.size sat_sgarf_entry, .-sat_sgarf_entry


==================== Asm code ====================
2018-03-16 16:12:04.186653751 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgarf_info:
	.quad	sat_sgarf_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.18740654 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrdProduct_$cp1Ord_entry
.type Data.Functor.Product.$fOrdProduct_$cp1Ord_entry, @object
Data.Functor.Product.$fOrdProduct_$cp1Ord_entry:
_cgb2F:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cgb2J
_cgb2I:
	leaq sat_sgarh_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %rdi,-48(%r12)
	leaq sat_sgarg_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rsi,-24(%r12)
	leaq sat_sgarf_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -64(%r12),%rdi
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp Data.Functor.Product.$fEqProduct_entry
_cgb2J:
	movq $72,904(%r13)
	leaq Data.Functor.Product.$fOrdProduct_$cp1Ord_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrdProduct_$cp1Ord_entry, .-Data.Functor.Product.$fOrdProduct_$cp1Ord_entry


==================== Asm code ====================
2018-03-16 16:12:04.18810358 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$cp1Ord_info
.type Data.Functor.Product.$fOrdProduct_$cp1Ord_info, @object
Data.Functor.Product.$fOrdProduct_$cp1Ord_info:
	.quad	Data.Functor.Product.$fOrdProduct_$cp1Ord_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:04.193922544 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$c<_closure
.type Data.Functor.Product.$w$c<_closure, @object
Data.Functor.Product.$w$c<_closure:
	.quad	Data.Functor.Product.$w$c<_info


==================== Asm code ====================
2018-03-16 16:12:04.194676249 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$c<_slow
.type Data.Functor.Product.$w$c<_slow, @object
Data.Functor.Product.$w$c<_slow:
_cgb37:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$w$c<_entry
	.size Data.Functor.Product.$w$c<_slow, .-Data.Functor.Product.$w$c<_slow


==================== Asm code ====================
2018-03-16 16:12:04.195454704 UTC

.section .text
.align 8
comp_sgarp_entry:
_cgb3f:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgb3g
_cgb3h:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Classes.compare_entry@gotpcrel(%rip)
_cgb3g:
	jmp *-16(%r13)
	.size comp_sgarp_entry, .-comp_sgarp_entry


==================== Asm code ====================
2018-03-16 16:12:04.196631319 UTC

.section .data.rel.ro
.align 8
.align 1
comp_sgarp_info:
	.quad	comp_sgarp_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.197648658 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$c<_entry
.type Data.Functor.Product.$w$c<_entry, @object
Data.Functor.Product.$w$c<_entry:
_cgb3p:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cgb3q
_cgb3r:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgb3t
_cgb3s:
	leaq comp_sgarp_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rdi,(%r12)
	leaq block_cgb3i_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-56(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-48(%rbp)
	movq %r8,-40(%rbp)
	movq (%rbp),%rbx
	movq %rbx,-32(%rbp)
	movq %rsi,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rax,(%rbp)
	addq $-56,%rbp
	jmp *Data.Functor.Classes.liftCompare_entry@gotpcrel(%rip)
_cgb3t:
	movq $24,904(%r13)
_cgb3q:
	leaq Data.Functor.Product.$w$c<_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$c<_entry, .-Data.Functor.Product.$w$c<_entry


==================== Asm code ====================
2018-03-16 16:12:04.198442115 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$c<_info
.type Data.Functor.Product.$w$c<_info, @object
Data.Functor.Product.$w$c<_info:
	.quad	Data.Functor.Product.$w$c<_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	Data.Functor.Product.$w$c<_slow


==================== Asm code ====================
2018-03-16 16:12:04.19924283 UTC

.section .text
.align 8
_cgb3i:
_cgb3i:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ugb3P
_ugb3Q:
	addq $40,%rbp
	jmp _cgb3n
_ugb3R:
	addq $40,%rbp
	jmp _cgb3K
_ugb3P:
	cmpq $2,%rbx
	jb _ugb3R
_cgb3m:
	movq 32(%rbp),%rax
	leaq block_cgb3z_info(%rip),%rbx
	movq %rbx,32(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rbx
	movq %rbx,(%rbp)
	movq 24(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,24(%rbp)
	jmp *Data.Functor.Classes.liftCompare_entry@gotpcrel(%rip)
	.size _cgb3i, .-_cgb3i


==================== Asm code ====================
2018-03-16 16:12:04.199905564 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgb3i_info:
	.quad	_cgb3i
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.20056597 UTC

.section .text
.align 8
_cgb3z:
_cgb3z:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ugb3S
_ugb3T:
	addq $8,%rbp
	jmp _cgb3n
_ugb3S:
	addq $8,%rbp
	jmp _cgb3K
	.size _cgb3z, .-_cgb3z


==================== Asm code ====================
2018-03-16 16:12:04.201117135 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgb3z_info:
	.quad	_cgb3z
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.20218659 UTC

.section .text
.align 8
_cgb3K:
_cgb3K:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cgb3K, .-_cgb3K


==================== Asm code ====================
2018-03-16 16:12:04.20281841 UTC

.section .text
.align 8
_cgb3n:
_cgb3n:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cgb3n, .-_cgb3n


==================== Asm code ====================
2018-03-16 16:12:04.206805929 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$c<_closure
.type Data.Functor.Product.$fOrdProduct_$c<_closure, @object
Data.Functor.Product.$fOrdProduct_$c<_closure:
	.quad	Data.Functor.Product.$fOrdProduct_$c<_info


==================== Asm code ====================
2018-03-16 16:12:04.207694903 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrdProduct_$c<_entry
.type Data.Functor.Product.$fOrdProduct_$c<_entry, @object
Data.Functor.Product.$fOrdProduct_$c<_entry:
_cgb4F:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgb4J
_cgb4K:
	leaq block_cgb4C_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgb4C
_cgb4D:
	movq (%rbx),%rax
	jmp *(%rax)
_cgb4J:
	leaq Data.Functor.Product.$fOrdProduct_$c<_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrdProduct_$c<_entry, .-Data.Functor.Product.$fOrdProduct_$c<_entry


==================== Asm code ====================
2018-03-16 16:12:04.208382494 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$c<_info
.type Data.Functor.Product.$fOrdProduct_$c<_info, @object
Data.Functor.Product.$fOrdProduct_$c<_info:
	.quad	Data.Functor.Product.$fOrdProduct_$c<_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:12:04.209147943 UTC

.section .text
.align 8
_cgb4C:
_cgb4C:
	leaq block_cgb4I_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgb4I
_cgb4M:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgb4C, .-_cgb4C


==================== Asm code ====================
2018-03-16 16:12:04.209836993 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgb4C_info:
	.quad	_cgb4C
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.210508503 UTC

.section .text
.align 8
_cgb4I:
_cgb4I:
	movq 8(%rbp),%r9
	movq 40(%rbp),%r8
	movq 32(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$c<_entry
	.size _cgb4I, .-_cgb4I


==================== Asm code ====================
2018-03-16 16:12:04.211077957 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgb4I_info:
	.quad	_cgb4I
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.216756085 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$c>=_closure
.type Data.Functor.Product.$w$c>=_closure, @object
Data.Functor.Product.$w$c>=_closure:
	.quad	Data.Functor.Product.$w$c>=_info


==================== Asm code ====================
2018-03-16 16:12:04.217588441 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$c>=_slow
.type Data.Functor.Product.$w$c>=_slow, @object
Data.Functor.Product.$w$c>=_slow:
_cgb5b:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$w$c>=_entry
	.size Data.Functor.Product.$w$c>=_slow, .-Data.Functor.Product.$w$c>=_slow


==================== Asm code ====================
2018-03-16 16:12:04.218436824 UTC

.section .text
.align 8
comp_sgarK_entry:
_cgb5j:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgb5k
_cgb5l:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Classes.compare_entry@gotpcrel(%rip)
_cgb5k:
	jmp *-16(%r13)
	.size comp_sgarK_entry, .-comp_sgarK_entry


==================== Asm code ====================
2018-03-16 16:12:04.219067974 UTC

.section .data.rel.ro
.align 8
.align 1
comp_sgarK_info:
	.quad	comp_sgarK_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.219949145 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$c>=_entry
.type Data.Functor.Product.$w$c>=_entry, @object
Data.Functor.Product.$w$c>=_entry:
_cgb5t:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cgb5u
_cgb5v:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgb5x
_cgb5w:
	leaq comp_sgarK_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rdi,(%r12)
	leaq block_cgb5m_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-56(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-48(%rbp)
	movq %r8,-40(%rbp)
	movq (%rbp),%rbx
	movq %rbx,-32(%rbp)
	movq %rsi,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rax,(%rbp)
	addq $-56,%rbp
	jmp *Data.Functor.Classes.liftCompare_entry@gotpcrel(%rip)
_cgb5x:
	movq $24,904(%r13)
_cgb5u:
	leaq Data.Functor.Product.$w$c>=_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$c>=_entry, .-Data.Functor.Product.$w$c>=_entry


==================== Asm code ====================
2018-03-16 16:12:04.220757613 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$c>=_info
.type Data.Functor.Product.$w$c>=_info, @object
Data.Functor.Product.$w$c>=_info:
	.quad	Data.Functor.Product.$w$c>=_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	Data.Functor.Product.$w$c>=_slow


==================== Asm code ====================
2018-03-16 16:12:04.222113659 UTC

.section .text
.align 8
_cgb5m:
_cgb5m:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ugb5T
_ugb5U:
	addq $40,%rbp
	jmp _cgb5r
_ugb5V:
	addq $40,%rbp
	jmp _cgb5O
_ugb5T:
	cmpq $2,%rbx
	jb _ugb5V
_cgb5q:
	movq 32(%rbp),%rax
	leaq block_cgb5D_info(%rip),%rbx
	movq %rbx,32(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rbx
	movq %rbx,(%rbp)
	movq 24(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,24(%rbp)
	jmp *Data.Functor.Classes.liftCompare_entry@gotpcrel(%rip)
	.size _cgb5m, .-_cgb5m


==================== Asm code ====================
2018-03-16 16:12:04.222780738 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgb5m_info:
	.quad	_cgb5m
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.223458152 UTC

.section .text
.align 8
_cgb5D:
_cgb5D:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ugb5W
_ugb5X:
	addq $8,%rbp
	jmp _cgb5r
_ugb5W:
	addq $8,%rbp
	jmp _cgb5O
	.size _cgb5D, .-_cgb5D


==================== Asm code ====================
2018-03-16 16:12:04.224025592 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgb5D_info:
	.quad	_cgb5D
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.224656952 UTC

.section .text
.align 8
_cgb5O:
_cgb5O:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cgb5O, .-_cgb5O


==================== Asm code ====================
2018-03-16 16:12:04.225333824 UTC

.section .text
.align 8
_cgb5r:
_cgb5r:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cgb5r, .-_cgb5r


==================== Asm code ====================
2018-03-16 16:12:04.229065337 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$c>=_closure
.type Data.Functor.Product.$fOrdProduct_$c>=_closure, @object
Data.Functor.Product.$fOrdProduct_$c>=_closure:
	.quad	Data.Functor.Product.$fOrdProduct_$c>=_info


==================== Asm code ====================
2018-03-16 16:12:04.23002875 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrdProduct_$c>=_entry
.type Data.Functor.Product.$fOrdProduct_$c>=_entry, @object
Data.Functor.Product.$fOrdProduct_$c>=_entry:
_cgb6J:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgb6N
_cgb6O:
	leaq block_cgb6G_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgb6G
_cgb6H:
	movq (%rbx),%rax
	jmp *(%rax)
_cgb6N:
	leaq Data.Functor.Product.$fOrdProduct_$c>=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrdProduct_$c>=_entry, .-Data.Functor.Product.$fOrdProduct_$c>=_entry


==================== Asm code ====================
2018-03-16 16:12:04.23066051 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$c>=_info
.type Data.Functor.Product.$fOrdProduct_$c>=_info, @object
Data.Functor.Product.$fOrdProduct_$c>=_info:
	.quad	Data.Functor.Product.$fOrdProduct_$c>=_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:12:04.231370316 UTC

.section .text
.align 8
_cgb6G:
_cgb6G:
	leaq block_cgb6M_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgb6M
_cgb6Q:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgb6G, .-_cgb6G


==================== Asm code ====================
2018-03-16 16:12:04.23199698 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgb6G_info:
	.quad	_cgb6G
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.232669307 UTC

.section .text
.align 8
_cgb6M:
_cgb6M:
	movq 8(%rbp),%r9
	movq 40(%rbp),%r8
	movq 32(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$c>=_entry
	.size _cgb6M, .-_cgb6M


==================== Asm code ====================
2018-03-16 16:12:04.237003619 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgb6M_info:
	.quad	_cgb6M
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.244216702 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$c>_closure
.type Data.Functor.Product.$w$c>_closure, @object
Data.Functor.Product.$w$c>_closure:
	.quad	Data.Functor.Product.$w$c>_info


==================== Asm code ====================
2018-03-16 16:12:04.245057498 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$c>_slow
.type Data.Functor.Product.$w$c>_slow, @object
Data.Functor.Product.$w$c>_slow:
_cgb7f:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$w$c>_entry
	.size Data.Functor.Product.$w$c>_slow, .-Data.Functor.Product.$w$c>_slow


==================== Asm code ====================
2018-03-16 16:12:04.24590688 UTC

.section .text
.align 8
comp_sgas5_entry:
_cgb7n:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgb7o
_cgb7p:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Classes.compare_entry@gotpcrel(%rip)
_cgb7o:
	jmp *-16(%r13)
	.size comp_sgas5_entry, .-comp_sgas5_entry


==================== Asm code ====================
2018-03-16 16:12:04.246505577 UTC

.section .data.rel.ro
.align 8
.align 1
comp_sgas5_info:
	.quad	comp_sgas5_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.247410634 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$c>_entry
.type Data.Functor.Product.$w$c>_entry, @object
Data.Functor.Product.$w$c>_entry:
_cgb7x:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cgb7y
_cgb7z:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgb7B
_cgb7A:
	leaq comp_sgas5_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rdi,(%r12)
	leaq block_cgb7q_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-56(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-48(%rbp)
	movq %r8,-40(%rbp)
	movq (%rbp),%rbx
	movq %rbx,-32(%rbp)
	movq %rsi,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rax,(%rbp)
	addq $-56,%rbp
	jmp *Data.Functor.Classes.liftCompare_entry@gotpcrel(%rip)
_cgb7B:
	movq $24,904(%r13)
_cgb7y:
	leaq Data.Functor.Product.$w$c>_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$c>_entry, .-Data.Functor.Product.$w$c>_entry


==================== Asm code ====================
2018-03-16 16:12:04.248207111 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$c>_info
.type Data.Functor.Product.$w$c>_info, @object
Data.Functor.Product.$w$c>_info:
	.quad	Data.Functor.Product.$w$c>_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	Data.Functor.Product.$w$c>_slow


==================== Asm code ====================
2018-03-16 16:12:04.249008765 UTC

.section .text
.align 8
_cgb7q:
_cgb7q:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ugb7X
_ugb7Y:
	addq $40,%rbp
	jmp _cgb7v
_ugb7Z:
	addq $40,%rbp
	jmp _cgb7O
_ugb7X:
	cmpq $2,%rbx
	jb _ugb7Z
_cgb7u:
	movq 32(%rbp),%rax
	leaq block_cgb7H_info(%rip),%rbx
	movq %rbx,32(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rbx
	movq %rbx,(%rbp)
	movq 24(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,24(%rbp)
	jmp *Data.Functor.Classes.liftCompare_entry@gotpcrel(%rip)
	.size _cgb7q, .-_cgb7q


==================== Asm code ====================
2018-03-16 16:12:04.249686557 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgb7q_info:
	.quad	_cgb7q
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.250344838 UTC

.section .text
.align 8
_cgb7H:
_cgb7H:
	andl $7,%ebx
	cmpq $3,%rbx
	je _ugb80
_ugb81:
	addq $8,%rbp
	jmp _cgb7O
_ugb80:
	addq $8,%rbp
	jmp _cgb7v
	.size _cgb7H, .-_cgb7H


==================== Asm code ====================
2018-03-16 16:12:04.250874792 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgb7H_info:
	.quad	_cgb7H
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.251489734 UTC

.section .text
.align 8
_cgb7O:
_cgb7O:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cgb7O, .-_cgb7O


==================== Asm code ====================
2018-03-16 16:12:04.252130197 UTC

.section .text
.align 8
_cgb7v:
_cgb7v:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cgb7v, .-_cgb7v


==================== Asm code ====================
2018-03-16 16:12:04.256604045 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$c>_closure
.type Data.Functor.Product.$fOrdProduct_$c>_closure, @object
Data.Functor.Product.$fOrdProduct_$c>_closure:
	.quad	Data.Functor.Product.$fOrdProduct_$c>_info


==================== Asm code ====================
2018-03-16 16:12:04.257568933 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrdProduct_$c>_entry
.type Data.Functor.Product.$fOrdProduct_$c>_entry, @object
Data.Functor.Product.$fOrdProduct_$c>_entry:
_cgb8N:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgb8R
_cgb8S:
	leaq block_cgb8K_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgb8K
_cgb8L:
	movq (%rbx),%rax
	jmp *(%rax)
_cgb8R:
	leaq Data.Functor.Product.$fOrdProduct_$c>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrdProduct_$c>_entry, .-Data.Functor.Product.$fOrdProduct_$c>_entry


==================== Asm code ====================
2018-03-16 16:12:04.258224624 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$c>_info
.type Data.Functor.Product.$fOrdProduct_$c>_info, @object
Data.Functor.Product.$fOrdProduct_$c>_info:
	.quad	Data.Functor.Product.$fOrdProduct_$c>_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:12:04.259081507 UTC

.section .text
.align 8
_cgb8K:
_cgb8K:
	leaq block_cgb8Q_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgb8Q
_cgb8U:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgb8K, .-_cgb8K


==================== Asm code ====================
2018-03-16 16:12:04.259707399 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgb8K_info:
	.quad	_cgb8K
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.260381202 UTC

.section .text
.align 8
_cgb8Q:
_cgb8Q:
	movq 8(%rbp),%r9
	movq 40(%rbp),%r8
	movq 32(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$c>_entry
	.size _cgb8Q, .-_cgb8Q


==================== Asm code ====================
2018-03-16 16:12:04.260961077 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgb8Q_info:
	.quad	_cgb8Q
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.267311404 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$c<=_closure
.type Data.Functor.Product.$w$c<=_closure, @object
Data.Functor.Product.$w$c<=_closure:
	.quad	Data.Functor.Product.$w$c<=_info


==================== Asm code ====================
2018-03-16 16:12:04.268032307 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$c<=_slow
.type Data.Functor.Product.$w$c<=_slow, @object
Data.Functor.Product.$w$c<=_slow:
_cgb9j:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$w$c<=_entry
	.size Data.Functor.Product.$w$c<=_slow, .-Data.Functor.Product.$w$c<=_slow


==================== Asm code ====================
2018-03-16 16:12:04.268799131 UTC

.section .text
.align 8
comp_sgasq_entry:
_cgb9r:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgb9s
_cgb9t:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Classes.compare_entry@gotpcrel(%rip)
_cgb9s:
	jmp *-16(%r13)
	.size comp_sgasq_entry, .-comp_sgasq_entry


==================== Asm code ====================
2018-03-16 16:12:04.26947972 UTC

.section .data.rel.ro
.align 8
.align 1
comp_sgasq_info:
	.quad	comp_sgasq_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.270375875 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$c<=_entry
.type Data.Functor.Product.$w$c<=_entry, @object
Data.Functor.Product.$w$c<=_entry:
_cgb9B:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cgb9C
_cgb9D:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgb9F
_cgb9E:
	leaq comp_sgasq_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rdi,(%r12)
	leaq block_cgb9u_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-56(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-48(%rbp)
	movq %r8,-40(%rbp)
	movq (%rbp),%rbx
	movq %rbx,-32(%rbp)
	movq %rsi,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rax,(%rbp)
	addq $-56,%rbp
	jmp *Data.Functor.Classes.liftCompare_entry@gotpcrel(%rip)
_cgb9F:
	movq $24,904(%r13)
_cgb9C:
	leaq Data.Functor.Product.$w$c<=_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$c<=_entry, .-Data.Functor.Product.$w$c<=_entry


==================== Asm code ====================
2018-03-16 16:12:04.271263487 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$c<=_info
.type Data.Functor.Product.$w$c<=_info, @object
Data.Functor.Product.$w$c<=_info:
	.quad	Data.Functor.Product.$w$c<=_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	Data.Functor.Product.$w$c<=_slow


==================== Asm code ====================
2018-03-16 16:12:04.272226571 UTC

.section .text
.align 8
_cgb9u:
_cgb9u:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ugba1
_ugba2:
	addq $40,%rbp
	jmp _cgb9z
_ugba3:
	addq $40,%rbp
	jmp _cgb9S
_ugba1:
	cmpq $2,%rbx
	jb _ugba3
_cgb9y:
	movq 32(%rbp),%rax
	leaq block_cgb9L_info(%rip),%rbx
	movq %rbx,32(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rbx
	movq %rbx,(%rbp)
	movq 24(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,24(%rbp)
	jmp *Data.Functor.Classes.liftCompare_entry@gotpcrel(%rip)
	.size _cgb9u, .-_cgb9u


==================== Asm code ====================
2018-03-16 16:12:04.272892613 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgb9u_info:
	.quad	_cgb9u
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.273681975 UTC

.section .text
.align 8
_cgb9L:
_cgb9L:
	andl $7,%ebx
	cmpq $3,%rbx
	je _ugba4
_ugba5:
	addq $8,%rbp
	jmp _cgb9S
_ugba4:
	addq $8,%rbp
	jmp _cgb9z
	.size _cgb9L, .-_cgb9L


==================== Asm code ====================
2018-03-16 16:12:04.274315183 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgb9L_info:
	.quad	_cgb9L
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.275200596 UTC

.section .text
.align 8
_cgb9S:
_cgb9S:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cgb9S, .-_cgb9S


==================== Asm code ====================
2018-03-16 16:12:04.275961152 UTC

.section .text
.align 8
_cgb9z:
_cgb9z:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cgb9z, .-_cgb9z


==================== Asm code ====================
2018-03-16 16:12:04.280564742 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$c<=_closure
.type Data.Functor.Product.$fOrdProduct_$c<=_closure, @object
Data.Functor.Product.$fOrdProduct_$c<=_closure:
	.quad	Data.Functor.Product.$fOrdProduct_$c<=_info


==================== Asm code ====================
2018-03-16 16:12:04.281489163 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrdProduct_$c<=_entry
.type Data.Functor.Product.$fOrdProduct_$c<=_entry, @object
Data.Functor.Product.$fOrdProduct_$c<=_entry:
_cgbaR:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbaV
_cgbaW:
	leaq block_cgbaO_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgbaO
_cgbaP:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbaV:
	leaq Data.Functor.Product.$fOrdProduct_$c<=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrdProduct_$c<=_entry, .-Data.Functor.Product.$fOrdProduct_$c<=_entry


==================== Asm code ====================
2018-03-16 16:12:04.282211218 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$c<=_info
.type Data.Functor.Product.$fOrdProduct_$c<=_info, @object
Data.Functor.Product.$fOrdProduct_$c<=_info:
	.quad	Data.Functor.Product.$fOrdProduct_$c<=_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:12:04.282903664 UTC

.section .text
.align 8
_cgbaO:
_cgbaO:
	leaq block_cgbaU_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgbaU
_cgbaY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgbaO, .-_cgbaO


==================== Asm code ====================
2018-03-16 16:12:04.283476067 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbaO_info:
	.quad	_cgbaO
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.284635672 UTC

.section .text
.align 8
_cgbaU:
_cgbaU:
	movq 8(%rbp),%r9
	movq 40(%rbp),%r8
	movq 32(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$c<=_entry
	.size _cgbaU, .-_cgbaU


==================== Asm code ====================
2018-03-16 16:12:04.28530136 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbaU_info:
	.quad	_cgbaU
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.291505009 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$cmax_closure
.type Data.Functor.Product.$fOrdProduct_$cmax_closure, @object
Data.Functor.Product.$fOrdProduct_$cmax_closure:
	.quad	Data.Functor.Product.$fOrdProduct_$cmax_info


==================== Asm code ====================
2018-03-16 16:12:04.292278831 UTC

.section .text
.align 8
comp_sgasP_entry:
_cgbbE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbbF
_cgbbG:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Classes.compare_entry@gotpcrel(%rip)
_cgbbF:
	jmp *-16(%r13)
	.size comp_sgasP_entry, .-comp_sgasP_entry


==================== Asm code ====================
2018-03-16 16:12:04.292918516 UTC

.section .data.rel.ro
.align 8
.align 1
comp_sgasP_info:
	.quad	comp_sgasP_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.293737905 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrdProduct_$cmax_entry
.type Data.Functor.Product.$fOrdProduct_$cmax_entry, @object
Data.Functor.Product.$fOrdProduct_$cmax_entry:
_cgbbH:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbbI
_cgbbJ:
	leaq block_cgbbq_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgbbq
_cgbbr:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbbI:
	leaq Data.Functor.Product.$fOrdProduct_$cmax_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrdProduct_$cmax_entry, .-Data.Functor.Product.$fOrdProduct_$cmax_entry


==================== Asm code ====================
2018-03-16 16:12:04.294397505 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$cmax_info
.type Data.Functor.Product.$fOrdProduct_$cmax_info, @object
Data.Functor.Product.$fOrdProduct_$cmax_info:
	.quad	Data.Functor.Product.$fOrdProduct_$cmax_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:12:04.295113933 UTC

.section .text
.align 8
_cgbbq:
_cgbbq:
	leaq block_cgbbv_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 32(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cgbbv
_cgbbw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgbbq, .-_cgbbq


==================== Asm code ====================
2018-03-16 16:12:04.295729955 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbbq_info:
	.quad	_cgbbq
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.296536737 UTC

.section .text
.align 8
_cgbbv:
_cgbbv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgbbO
_cgbbN:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	leaq comp_sgasP_info(%rip),%rdx
	movq %rdx,-16(%r12)
	movq 40(%rbp),%rdx
	movq %rdx,(%r12)
	leaq block_cgbbL_info(%rip),%rdx
	movq %rdx,(%rbp)
	movq 24(%rbp),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rdx
	movq %rdx,-32(%rbp)
	leaq -16(%r12),%rdx
	movq %rdx,-24(%rbp)
	movq 16(%rbp),%rsi
	movq %rsi,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rcx,16(%rbp)
	movq %rbx,24(%rbp)
	movq %rdx,40(%rbp)
	addq $-32,%rbp
	jmp *Data.Functor.Classes.liftCompare_entry@gotpcrel(%rip)
_cgbbO:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgbbv, .-_cgbbv


==================== Asm code ====================
2018-03-16 16:12:04.297214466 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbbv_info:
	.quad	_cgbbv
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.298316044 UTC

.section .text
.align 8
_cgbbL:
_cgbbL:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ugbcg
_ugbch:
	addq $48,%rbp
	jmp _cgbcd
_ugbci:
	addq $24,%rbp
	jmp _cgbc5
_ugbcg:
	cmpq $2,%rbx
	jb _ugbci
_cgbbZ:
	movq 16(%rbp),%rax
	leaq block_cgbbX_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq 32(%rbp),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq 40(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq 8(%rbp),%rbx
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	addq $-16,%rbp
	jmp *Data.Functor.Classes.liftCompare_entry@gotpcrel(%rip)
	.size _cgbbL, .-_cgbbL


==================== Asm code ====================
2018-03-16 16:12:04.298980783 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbbL_info:
	.quad	_cgbbL
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.299636675 UTC

.section .text
.align 8
_cgbbX:
_cgbbX:
	andl $7,%ebx
	cmpq $3,%rbx
	je _ugbcj
_ugbck:
	addq $8,%rbp
	jmp _cgbc5
_ugbcj:
	addq $32,%rbp
	jmp _cgbcd
	.size _cgbbX, .-_cgbbX


==================== Asm code ====================
2018-03-16 16:12:04.300148627 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbbX_info:
	.quad	_cgbbX
	.quad	388
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.300759988 UTC

.section .text
.align 8
_cgbc5:
_cgbc5:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgbc5, .-_cgbc5


==================== Asm code ====================
2018-03-16 16:12:04.301427869 UTC

.section .text
.align 8
_cgbcd:
_cgbcd:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgbcd, .-_cgbcd


==================== Asm code ====================
2018-03-16 16:12:04.307805306 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$cmin_closure
.type Data.Functor.Product.$fOrdProduct_$cmin_closure, @object
Data.Functor.Product.$fOrdProduct_$cmin_closure:
	.quad	Data.Functor.Product.$fOrdProduct_$cmin_info


==================== Asm code ====================
2018-03-16 16:12:04.308564423 UTC

.section .text
.align 8
comp_sgat3_entry:
_cgbdt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbdu
_cgbdv:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Classes.compare_entry@gotpcrel(%rip)
_cgbdu:
	jmp *-16(%r13)
	.size comp_sgat3_entry, .-comp_sgat3_entry


==================== Asm code ====================
2018-03-16 16:12:04.309200229 UTC

.section .data.rel.ro
.align 8
.align 1
comp_sgat3_info:
	.quad	comp_sgat3_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.310013016 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrdProduct_$cmin_entry
.type Data.Functor.Product.$fOrdProduct_$cmin_entry, @object
Data.Functor.Product.$fOrdProduct_$cmin_entry:
_cgbdw:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbdx
_cgbdy:
	leaq block_cgbdf_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgbdf
_cgbdg:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbdx:
	leaq Data.Functor.Product.$fOrdProduct_$cmin_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrdProduct_$cmin_entry, .-Data.Functor.Product.$fOrdProduct_$cmin_entry


==================== Asm code ====================
2018-03-16 16:12:04.310666517 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_$cmin_info
.type Data.Functor.Product.$fOrdProduct_$cmin_info, @object
Data.Functor.Product.$fOrdProduct_$cmin_info:
	.quad	Data.Functor.Product.$fOrdProduct_$cmin_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:12:04.311395949 UTC

.section .text
.align 8
_cgbdf:
_cgbdf:
	leaq block_cgbdk_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 32(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cgbdk
_cgbdl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgbdf, .-_cgbdf


==================== Asm code ====================
2018-03-16 16:12:04.312023791 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbdf_info:
	.quad	_cgbdf
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.312820993 UTC

.section .text
.align 8
_cgbdk:
_cgbdk:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgbdD
_cgbdC:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	leaq comp_sgat3_info(%rip),%rdx
	movq %rdx,-16(%r12)
	movq 40(%rbp),%rdx
	movq %rdx,(%r12)
	leaq block_cgbdA_info(%rip),%rdx
	movq %rdx,(%rbp)
	movq 24(%rbp),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rdx
	movq %rdx,-32(%rbp)
	leaq -16(%r12),%rdx
	movq %rdx,-24(%rbp)
	movq 16(%rbp),%rsi
	movq %rsi,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rcx,16(%rbp)
	movq %rbx,24(%rbp)
	movq %rdx,40(%rbp)
	addq $-32,%rbp
	jmp *Data.Functor.Classes.liftCompare_entry@gotpcrel(%rip)
_cgbdD:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgbdk, .-_cgbdk


==================== Asm code ====================
2018-03-16 16:12:04.313562378 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbdk_info:
	.quad	_cgbdk
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.314328154 UTC

.section .text
.align 8
_cgbdA:
_cgbdA:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ugbe5
_ugbe6:
	addq $24,%rbp
	jmp _cgbe2
_ugbe7:
	addq $48,%rbp
	jmp _cgbdU
_ugbe5:
	cmpq $2,%rbx
	jb _ugbe7
_cgbdO:
	movq 16(%rbp),%rax
	leaq block_cgbdM_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq 32(%rbp),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq 40(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq 8(%rbp),%rbx
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	addq $-16,%rbp
	jmp *Data.Functor.Classes.liftCompare_entry@gotpcrel(%rip)
	.size _cgbdA, .-_cgbdA


==================== Asm code ====================
2018-03-16 16:12:04.315034641 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbdA_info:
	.quad	_cgbdA
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.315653686 UTC

.section .text
.align 8
_cgbdM:
_cgbdM:
	andl $7,%ebx
	cmpq $3,%rbx
	je _ugbe8
_ugbe9:
	addq $32,%rbp
	jmp _cgbdU
_ugbe8:
	addq $8,%rbp
	jmp _cgbe2
	.size _cgbdM, .-_cgbdM


==================== Asm code ====================
2018-03-16 16:12:04.316261956 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbdM_info:
	.quad	_cgbdM
	.quad	388
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.316853818 UTC

.section .text
.align 8
_cgbdU:
_cgbdU:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgbdU, .-_cgbdU


==================== Asm code ====================
2018-03-16 16:12:04.317923407 UTC

.section .text
.align 8
_cgbe2:
_cgbe2:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgbe2, .-_cgbe2


==================== Asm code ====================
2018-03-16 16:12:04.325650377 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_closure
.type Data.Functor.Product.$fOrdProduct_closure, @object
Data.Functor.Product.$fOrdProduct_closure:
	.quad	Data.Functor.Product.$fOrdProduct_info


==================== Asm code ====================
2018-03-16 16:12:04.326371644 UTC

.section .text
.align 8
sat_sgatg_entry:
_cgbf9:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fOrdProduct_$cmin_entry
	.size sat_sgatg_entry, .-sat_sgatg_entry


==================== Asm code ====================
2018-03-16 16:12:04.326961129 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgatg_info:
	.quad	sat_sgatg_entry
	.quad	3
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.32760905 UTC

.section .text
.align 8
sat_sgatf_entry:
_cgbfh:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fOrdProduct_$cmax_entry
	.size sat_sgatf_entry, .-sat_sgatf_entry


==================== Asm code ====================
2018-03-16 16:12:04.328141664 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgatf_info:
	.quad	sat_sgatf_entry
	.quad	3
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.329373254 UTC

.section .text
.align 8
sat_sgate_entry:
_cgbfp:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fOrdProduct_$c>=_entry
	.size sat_sgate_entry, .-sat_sgate_entry


==================== Asm code ====================
2018-03-16 16:12:04.329974874 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgate_info:
	.quad	sat_sgate_entry
	.quad	3
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.330574578 UTC

.section .text
.align 8
sat_sgatd_entry:
_cgbfx:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fOrdProduct_$c>_entry
	.size sat_sgatd_entry, .-sat_sgatd_entry


==================== Asm code ====================
2018-03-16 16:12:04.331159434 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgatd_info:
	.quad	sat_sgatd_entry
	.quad	3
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.331770402 UTC

.section .text
.align 8
sat_sgatc_entry:
_cgbfF:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fOrdProduct_$c<=_entry
	.size sat_sgatc_entry, .-sat_sgatc_entry


==================== Asm code ====================
2018-03-16 16:12:04.332357711 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgatc_info:
	.quad	sat_sgatc_entry
	.quad	3
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.333014796 UTC

.section .text
.align 8
sat_sgatb_entry:
_cgbfN:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fOrdProduct_$c<_entry
	.size sat_sgatb_entry, .-sat_sgatb_entry


==================== Asm code ====================
2018-03-16 16:12:04.333907693 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgatb_info:
	.quad	sat_sgatb_entry
	.quad	3
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.334543351 UTC

.section .text
.align 8
sat_sgata_entry:
_cgbfV:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fOrdProduct_$ccompare_entry
	.size sat_sgata_entry, .-sat_sgata_entry


==================== Asm code ====================
2018-03-16 16:12:04.335145152 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgata_info:
	.quad	sat_sgata_entry
	.quad	3
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.335857394 UTC

.section .text
.align 8
sat_sgat9_entry:
_cgbg2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbg3
_cgbg4:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fOrdProduct_$cp1Ord_entry
_cgbg3:
	jmp *-16(%r13)
	.size sat_sgat9_entry, .-sat_sgat9_entry


==================== Asm code ====================
2018-03-16 16:12:04.336469276 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgat9_info:
	.quad	sat_sgat9_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.337434595 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fOrdProduct_entry
.type Data.Functor.Product.$fOrdProduct_entry, @object
Data.Functor.Product.$fOrdProduct_entry:
_cgbg6:
	addq $336,%r12
	cmpq 856(%r13),%r12
	ja _cgbga
_cgbg9:
	leaq sat_sgatg_info(%rip),%rax
	movq %rax,-328(%r12)
	movq %r14,-320(%r12)
	movq %rsi,-312(%r12)
	movq %rdi,-304(%r12)
	leaq sat_sgatf_info(%rip),%rax
	movq %rax,-296(%r12)
	movq %r14,-288(%r12)
	movq %rsi,-280(%r12)
	movq %rdi,-272(%r12)
	leaq sat_sgate_info(%rip),%rax
	movq %rax,-264(%r12)
	movq %r14,-256(%r12)
	movq %rsi,-248(%r12)
	movq %rdi,-240(%r12)
	leaq sat_sgatd_info(%rip),%rax
	movq %rax,-232(%r12)
	movq %r14,-224(%r12)
	movq %rsi,-216(%r12)
	movq %rdi,-208(%r12)
	leaq sat_sgatc_info(%rip),%rax
	movq %rax,-200(%r12)
	movq %r14,-192(%r12)
	movq %rsi,-184(%r12)
	movq %rdi,-176(%r12)
	leaq sat_sgatb_info(%rip),%rax
	movq %rax,-168(%r12)
	movq %r14,-160(%r12)
	movq %rsi,-152(%r12)
	movq %rdi,-144(%r12)
	leaq sat_sgata_info(%rip),%rax
	movq %rax,-136(%r12)
	movq %r14,-128(%r12)
	movq %rsi,-120(%r12)
	movq %rdi,-112(%r12)
	leaq sat_sgat9_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %r14,-88(%r12)
	movq %rsi,-80(%r12)
	movq %rdi,-72(%r12)
	movq GHC.Classes.C:Ord_con_info@gotpcrel(%rip),%rax
	movq %rax,-64(%r12)
	leaq -104(%r12),%rax
	movq %rax,-56(%r12)
	leaq -134(%r12),%rax
	movq %rax,-48(%r12)
	leaq -166(%r12),%rax
	movq %rax,-40(%r12)
	leaq -198(%r12),%rax
	movq %rax,-32(%r12)
	leaq -230(%r12),%rax
	movq %rax,-24(%r12)
	leaq -262(%r12),%rax
	movq %rax,-16(%r12)
	leaq -294(%r12),%rax
	movq %rax,-8(%r12)
	leaq -326(%r12),%rax
	movq %rax,(%r12)
	leaq -63(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgbga:
	movq $336,904(%r13)
	leaq Data.Functor.Product.$fOrdProduct_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fOrdProduct_entry, .-Data.Functor.Product.$fOrdProduct_entry


==================== Asm code ====================
2018-03-16 16:12:04.338384983 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fOrdProduct_info
.type Data.Functor.Product.$fOrdProduct_info, @object
Data.Functor.Product.$fOrdProduct_info:
	.quad	Data.Functor.Product.$fOrdProduct_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:04.342325035 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fReadProduct_$creadPrec_closure
.type Data.Functor.Product.$fReadProduct_$creadPrec_closure, @object
Data.Functor.Product.$fReadProduct_$creadPrec_closure:
	.quad	Data.Functor.Product.$fReadProduct_$creadPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.343137098 UTC

.section .text
.align 8
sat_sgatl_entry:
_cgbh5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbh6
_cgbh7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Read.readListPrec_entry@gotpcrel(%rip)
_cgbh6:
	jmp *-16(%r13)
	.size sat_sgatl_entry, .-sat_sgatl_entry


==================== Asm code ====================
2018-03-16 16:12:04.343739726 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgatl_info:
	.quad	sat_sgatl_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.344419082 UTC

.section .text
.align 8
sat_sgatk_entry:
_cgbhc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbhd
_cgbhe:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Read.readPrec_entry@gotpcrel(%rip)
_cgbhd:
	jmp *-16(%r13)
	.size sat_sgatk_entry, .-sat_sgatk_entry


==================== Asm code ====================
2018-03-16 16:12:04.345022842 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgatk_info:
	.quad	sat_sgatk_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.34580033 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fReadProduct_$creadPrec_entry
.type Data.Functor.Product.$fReadProduct_$creadPrec_entry, @object
Data.Functor.Product.$fReadProduct_$creadPrec_entry:
_cgbhf:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cgbhj
_cgbhi:
	leaq sat_sgatl_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rdi,-24(%r12)
	leaq sat_sgatk_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rdi,(%r12)
	leaq -40(%r12),%r8
	leaq -16(%r12),%rdi
	jmp Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry
_cgbhj:
	movq $48,904(%r13)
	leaq Data.Functor.Product.$fReadProduct_$creadPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fReadProduct_$creadPrec_entry, .-Data.Functor.Product.$fReadProduct_$creadPrec_entry


==================== Asm code ====================
2018-03-16 16:12:04.346448624 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fReadProduct_$creadPrec_info
.type Data.Functor.Product.$fReadProduct_$creadPrec_info, @object
Data.Functor.Product.$fReadProduct_$creadPrec_info:
	.quad	Data.Functor.Product.$fReadProduct_$creadPrec_entry
	.quad	0
	.quad	8800387989518
	.quad	12884901911
	.quad	SgaPW_srt+24


==================== Asm code ====================
2018-03-16 16:12:04.352768794 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fReadProduct_$creadsPrec_closure
.type Data.Functor.Product.$fReadProduct_$creadsPrec_closure, @object
Data.Functor.Product.$fReadProduct_$creadsPrec_closure:
	.quad	Data.Functor.Product.$fReadProduct_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.353670898 UTC

.section .text
.align 8
sat_sgatr_entry:
_cgbhM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbhN
_cgbhO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Read.readListPrec_entry@gotpcrel(%rip)
_cgbhN:
	jmp *-16(%r13)
	.size sat_sgatr_entry, .-sat_sgatr_entry


==================== Asm code ====================
2018-03-16 16:12:04.354301828 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgatr_info:
	.quad	sat_sgatr_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.355012684 UTC

.section .text
.align 8
sat_sgatq_entry:
_cgbhT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbhU
_cgbhV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Read.readPrec_entry@gotpcrel(%rip)
_cgbhU:
	jmp *-16(%r13)
	.size sat_sgatq_entry, .-sat_sgatq_entry


==================== Asm code ====================
2018-03-16 16:12:04.355611738 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgatq_info:
	.quad	sat_sgatq_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.356483546 UTC

.section .text
.align 8
ds_sgatp_entry:
_cgbhW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbhX
_cgbhY:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cgbi0
_cgbhZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_sgatr_info(%rip),%rdx
	movq %rdx,-40(%r12)
	movq %rbx,-24(%r12)
	leaq sat_sgatq_info(%rip),%rdx
	movq %rdx,-16(%r12)
	movq %rbx,(%r12)
	leaq -40(%r12),%r8
	leaq -16(%r12),%rdi
	movq %rcx,%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry
_cgbi0:
	movq $48,904(%r13)
_cgbhX:
	jmp *-16(%r13)
	.size ds_sgatp_entry, .-ds_sgatp_entry


==================== Asm code ====================
2018-03-16 16:12:04.357225186 UTC

.section .data.rel.ro
.align 8
.align 1
ds_sgatp_info:
	.quad	ds_sgatp_entry
	.quad	3
	.quad	4294967311
	.quad	SgaPW_srt+24


==================== Asm code ====================
2018-03-16 16:12:04.358021437 UTC

.section .text
.align 8
sat_sgatt_entry:
_cgbia:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbib
_cgbic:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq 24(%rbx),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_cgbib:
	jmp *-16(%r13)
	.size sat_sgatt_entry, .-sat_sgatt_entry


==================== Asm code ====================
2018-03-16 16:12:04.358694883 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgatt_info:
	.quad	sat_sgatt_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:12:04.359425058 UTC

.section .text
.align 8
sat_sgatu_entry:
_cgbid:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cgbih
_cgbig:
	movq 7(%rbx),%rax
	leaq sat_sgatt_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -24(%r12),%r14
	movq Text.ParserCombinators.ReadP.run_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_cgbih:
	movq $32,904(%r13)
	jmp *-8(%r13)
	.size sat_sgatu_entry, .-sat_sgatu_entry


==================== Asm code ====================
2018-03-16 16:12:04.360093726 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgatu_info:
	.quad	sat_sgatu_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:04.360862282 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fReadProduct_$creadsPrec_entry
.type Data.Functor.Product.$fReadProduct_$creadsPrec_entry, @object
Data.Functor.Product.$fReadProduct_$creadsPrec_entry:
_cgbii:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cgbim
_cgbil:
	leaq ds_sgatp_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	leaq sat_sgatu_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgbim:
	movq $56,904(%r13)
	leaq Data.Functor.Product.$fReadProduct_$creadsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fReadProduct_$creadsPrec_entry, .-Data.Functor.Product.$fReadProduct_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 16:12:04.361613256 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fReadProduct_$creadsPrec_info
.type Data.Functor.Product.$fReadProduct_$creadsPrec_info, @object
Data.Functor.Product.$fReadProduct_$creadsPrec_info:
	.quad	Data.Functor.Product.$fReadProduct_$creadsPrec_entry
	.quad	0
	.quad	17596481011726
	.quad	12884901911
	.quad	SgaPW_srt+24


==================== Asm code ====================
2018-03-16 16:12:04.366333097 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fReadProduct_$creadListPrec_closure
.type Data.Functor.Product.$fReadProduct_$creadListPrec_closure, @object
Data.Functor.Product.$fReadProduct_$creadListPrec_closure:
	.quad	Data.Functor.Product.$fReadProduct_$creadListPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.3672092 UTC

.section .text
.align 8
sat_sgatz_entry:
_cgbj9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbja
_cgbjb:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Read.readListPrec_entry@gotpcrel(%rip)
_cgbja:
	jmp *-16(%r13)
	.size sat_sgatz_entry, .-sat_sgatz_entry


==================== Asm code ====================
2018-03-16 16:12:04.367830457 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgatz_info:
	.quad	sat_sgatz_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.369187822 UTC

.section .text
.align 8
sat_sgaty_entry:
_cgbjg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbjh
_cgbji:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Read.readPrec_entry@gotpcrel(%rip)
_cgbjh:
	jmp *-16(%r13)
	.size sat_sgaty_entry, .-sat_sgaty_entry


==================== Asm code ====================
2018-03-16 16:12:04.370086554 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaty_info:
	.quad	sat_sgaty_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.370848353 UTC

.section .text
.align 8
sat_sgatA_entry:
_cgbjj:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cgbjn
_cgbjm:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_sgatz_info(%rip),%rdx
	movq %rdx,-40(%r12)
	movq %rbx,-24(%r12)
	leaq sat_sgaty_info(%rip),%rdx
	movq %rdx,-16(%r12)
	movq %rbx,(%r12)
	leaq -40(%r12),%r8
	leaq -16(%r12),%rdi
	movq %rcx,%rsi
	movq %rax,%r14
	jmp Data.Functor.Product.$fRead1Product_$cliftReadPrec_entry
_cgbjn:
	movq $48,904(%r13)
	jmp *-16(%r13)
	.size sat_sgatA_entry, .-sat_sgatA_entry


==================== Asm code ====================
2018-03-16 16:12:04.371536973 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgatA_info:
	.quad	sat_sgatA_entry
	.quad	3
	.quad	4294967311
	.quad	SgaPW_srt+24


==================== Asm code ====================
2018-03-16 16:12:04.372330037 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fReadProduct_$creadListPrec_entry
.type Data.Functor.Product.$fReadProduct_$creadListPrec_entry, @object
Data.Functor.Product.$fReadProduct_$creadListPrec_entry:
_cgbjo:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cgbjs
_cgbjr:
	leaq sat_sgatA_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -32(%r12),%r14
	jmp *GHC.Read.list_entry@gotpcrel(%rip)
_cgbjs:
	movq $40,904(%r13)
	leaq Data.Functor.Product.$fReadProduct_$creadListPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fReadProduct_$creadListPrec_entry, .-Data.Functor.Product.$fReadProduct_$creadListPrec_entry


==================== Asm code ====================
2018-03-16 16:12:04.373016289 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fReadProduct_$creadListPrec_info
.type Data.Functor.Product.$fReadProduct_$creadListPrec_info, @object
Data.Functor.Product.$fReadProduct_$creadListPrec_info:
	.quad	Data.Functor.Product.$fReadProduct_$creadListPrec_entry
	.quad	0
	.quad	35205846925326
	.quad	12884901911
	.quad	SgaPW_srt+24


==================== Asm code ====================
2018-03-16 16:12:04.376545407 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fReadProduct_$creadList_closure
.type Data.Functor.Product.$fReadProduct_$creadList_closure, @object
Data.Functor.Product.$fReadProduct_$creadList_closure:
	.quad	Data.Functor.Product.$fReadProduct_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.377501084 UTC

.section .text
.align 8
sat_sgatE_entry:
_cgbjV:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbjW
_cgbjX:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq GHC.Read.$fRead()7_closure@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp Data.Functor.Product.$fReadProduct_$creadListPrec_entry
_cgbjW:
	jmp *-16(%r13)
	.size sat_sgatE_entry, .-sat_sgatE_entry


==================== Asm code ====================
2018-03-16 16:12:04.378214778 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgatE_info:
	.quad	sat_sgatE_entry
	.quad	3
	.quad	4294967311
	.quad	SgaPW_srt+128


==================== Asm code ====================
2018-03-16 16:12:04.378994215 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fReadProduct_$creadList_entry
.type Data.Functor.Product.$fReadProduct_$creadList_entry, @object
Data.Functor.Product.$fReadProduct_$creadList_entry:
_cgbjY:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cgbk2
_cgbk1:
	leaq sat_sgatE_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -32(%r12),%r14
	movq Text.ParserCombinators.ReadP.run_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_cgbk2:
	movq $40,904(%r13)
	leaq Data.Functor.Product.$fReadProduct_$creadList_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fReadProduct_$creadList_entry, .-Data.Functor.Product.$fReadProduct_$creadList_entry


==================== Asm code ====================
2018-03-16 16:12:04.379682081 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fReadProduct_$creadList_info
.type Data.Functor.Product.$fReadProduct_$creadList_info, @object
Data.Functor.Product.$fReadProduct_$creadList_info:
	.quad	Data.Functor.Product.$fReadProduct_$creadList_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	SgaPW_srt+128


==================== Asm code ====================
2018-03-16 16:12:04.38546884 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fReadProduct_closure
.type Data.Functor.Product.$fReadProduct_closure, @object
Data.Functor.Product.$fReadProduct_closure:
	.quad	Data.Functor.Product.$fReadProduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.3863424 UTC

.section .text
.align 8
sat_sgatL_entry:
_cgbkq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbkr
_cgbks:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fReadProduct_$creadListPrec_entry
_cgbkr:
	jmp *-16(%r13)
	.size sat_sgatL_entry, .-sat_sgatL_entry


==================== Asm code ====================
2018-03-16 16:12:04.386925576 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgatL_info:
	.quad	sat_sgatL_entry
	.quad	3
	.quad	4294967311
	.quad	SgaPW_srt+128


==================== Asm code ====================
2018-03-16 16:12:04.387674086 UTC

.section .text
.align 8
sat_sgatK_entry:
_cgbkx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbky
_cgbkz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fReadProduct_$creadPrec_entry
_cgbky:
	jmp *-16(%r13)
	.size sat_sgatK_entry, .-sat_sgatK_entry


==================== Asm code ====================
2018-03-16 16:12:04.388349838 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgatK_info:
	.quad	sat_sgatK_entry
	.quad	3
	.quad	4294967311
	.quad	SgaPW_srt+112


==================== Asm code ====================
2018-03-16 16:12:04.389070022 UTC

.section .text
.align 8
sat_sgatJ_entry:
_cgbkE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbkF
_cgbkG:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fReadProduct_$creadList_entry
_cgbkF:
	jmp *-16(%r13)
	.size sat_sgatJ_entry, .-sat_sgatJ_entry


==================== Asm code ====================
2018-03-16 16:12:04.389721538 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgatJ_info:
	.quad	sat_sgatJ_entry
	.quad	3
	.quad	4294967311
	.quad	SgaPW_srt+136


==================== Asm code ====================
2018-03-16 16:12:04.390403579 UTC

.section .text
.align 8
sat_sgatI_entry:
_cgbkL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbkM
_cgbkN:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fReadProduct_$creadsPrec_entry
_cgbkM:
	jmp *-16(%r13)
	.size sat_sgatI_entry, .-sat_sgatI_entry


==================== Asm code ====================
2018-03-16 16:12:04.391027185 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgatI_info:
	.quad	sat_sgatI_entry
	.quad	3
	.quad	4294967311
	.quad	SgaPW_srt+120


==================== Asm code ====================
2018-03-16 16:12:04.391858129 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fReadProduct_entry
.type Data.Functor.Product.$fReadProduct_entry, @object
Data.Functor.Product.$fReadProduct_entry:
_cgbkP:
	addq $200,%r12
	cmpq 856(%r13),%r12
	ja _cgbkT
_cgbkS:
	leaq sat_sgatL_info(%rip),%rax
	movq %rax,-192(%r12)
	movq %r14,-176(%r12)
	movq %rsi,-168(%r12)
	movq %rdi,-160(%r12)
	leaq sat_sgatK_info(%rip),%rax
	movq %rax,-152(%r12)
	movq %r14,-136(%r12)
	movq %rsi,-128(%r12)
	movq %rdi,-120(%r12)
	leaq sat_sgatJ_info(%rip),%rax
	movq %rax,-112(%r12)
	movq %r14,-96(%r12)
	movq %rsi,-88(%r12)
	movq %rdi,-80(%r12)
	leaq sat_sgatI_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq GHC.Read.C:Read_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	leaq -112(%r12),%rax
	movq %rax,-16(%r12)
	leaq -152(%r12),%rax
	movq %rax,-8(%r12)
	leaq -192(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgbkT:
	movq $200,904(%r13)
	leaq Data.Functor.Product.$fReadProduct_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fReadProduct_entry, .-Data.Functor.Product.$fReadProduct_entry


==================== Asm code ====================
2018-03-16 16:12:04.392696908 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fReadProduct_info
.type Data.Functor.Product.$fReadProduct_info, @object
Data.Functor.Product.$fReadProduct_info:
	.quad	Data.Functor.Product.$fReadProduct_entry
	.quad	0
	.quad	133143986190
	.quad	12884901911
	.quad	SgaPW_srt+112


==================== Asm code ====================
2018-03-16 16:12:04.398603372 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cshowsPrec_closure
.type Data.Functor.Product.$w$cshowsPrec_closure, @object
Data.Functor.Product.$w$cshowsPrec_closure:
	.quad	Data.Functor.Product.$w$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.399393635 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cshowsPrec_slow
.type Data.Functor.Product.$w$cshowsPrec_slow, @object
Data.Functor.Product.$w$cshowsPrec_slow:
_cgblt:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$w$cshowsPrec_entry
	.size Data.Functor.Product.$w$cshowsPrec_slow, .-Data.Functor.Product.$w$cshowsPrec_slow


==================== Asm code ====================
2018-03-16 16:12:04.400182284 UTC

.section .text
.align 8
sp_sgatS_entry:
_cgblB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgblC
_cgblD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Show.showsPrec_entry@gotpcrel(%rip)
_cgblC:
	jmp *-16(%r13)
	.size sp_sgatS_entry, .-sp_sgatS_entry


==================== Asm code ====================
2018-03-16 16:12:04.400782667 UTC

.section .data.rel.ro
.align 8
.align 1
sp_sgatS_info:
	.quad	sp_sgatS_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.401813541 UTC

.section .text
.align 8
sl_sgatT_entry:
_cgblI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgblJ
_cgblK:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Show.showList_entry@gotpcrel(%rip)
_cgblJ:
	jmp *-16(%r13)
	.size sl_sgatT_entry, .-sl_sgatT_entry


==================== Asm code ====================
2018-03-16 16:12:04.402457974 UTC

.section .data.rel.ro
.align 8
.align 1
sl_sgatT_info:
	.quad	sl_sgatT_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.403218381 UTC

.section .text
.align 8
sat_sgatV_entry:
_cgblP:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgblQ
_cgblR:
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *Data.Functor.Classes.liftShowsPrec_entry@gotpcrel(%rip)
_cgblQ:
	jmp *-16(%r13)
	.size sat_sgatV_entry, .-sat_sgatV_entry


==================== Asm code ====================
2018-03-16 16:12:04.403867242 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgatV_info:
	.quad	sat_sgatV_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.40460276 UTC

.section .text
.align 8
sat_sgatU_entry:
_cgblW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgblX
_cgblY:
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *Data.Functor.Classes.liftShowsPrec_entry@gotpcrel(%rip)
_cgblX:
	jmp *-16(%r13)
	.size sat_sgatU_entry, .-sat_sgatU_entry


==================== Asm code ====================
2018-03-16 16:12:04.405300097 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgatU_info:
	.quad	sat_sgatU_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.406173103 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cshowsPrec_entry
.type Data.Functor.Product.$w$cshowsPrec_entry, @object
Data.Functor.Product.$w$cshowsPrec_entry:
_cgblZ:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _cgbm3
_cgbm2:
	leaq sp_sgatS_info(%rip),%rax
	movq %rax,-120(%r12)
	movq %rdi,-104(%r12)
	leaq sl_sgatT_info(%rip),%rax
	movq %rax,-96(%r12)
	movq %rdi,-80(%r12)
	leaq sat_sgatV_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %rsi,-56(%r12)
	leaq -120(%r12),%rax
	movq %rax,-48(%r12)
	leaq -96(%r12),%rbx
	movq %rbx,-40(%r12)
	leaq sat_sgatU_info(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %r14,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq Data.Functor.Product.$fRead1Product2_closure(%rip),%rdi
	leaq -72(%r12),%rsi
	leaq -32(%r12),%r14
	jmp *Data.Functor.Classes.$wshowsBinaryWith_entry@gotpcrel(%rip)
_cgbm3:
	movq $128,904(%r13)
	leaq Data.Functor.Product.$w$cshowsPrec_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cshowsPrec_entry, .-Data.Functor.Product.$w$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:12:04.407069408 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cshowsPrec_info
.type Data.Functor.Product.$w$cshowsPrec_info, @object
Data.Functor.Product.$w$cshowsPrec_info:
	.quad	Data.Functor.Product.$w$cshowsPrec_entry
	.quad	0
	.quad	4402341478414
	.quad	25769803776
	.quad	SgaPW_srt+72
	.quad	518
	.quad	Data.Functor.Product.$w$cshowsPrec_slow


==================== Asm code ====================
2018-03-16 16:12:04.4119579 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fShowProduct_$cshowsPrec_closure
.type Data.Functor.Product.$fShowProduct_$cshowsPrec_closure, @object
Data.Functor.Product.$fShowProduct_$cshowsPrec_closure:
	.quad	Data.Functor.Product.$fShowProduct_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.413008293 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fShowProduct_$cshowsPrec_entry
.type Data.Functor.Product.$fShowProduct_$cshowsPrec_entry, @object
Data.Functor.Product.$fShowProduct_$cshowsPrec_entry:
_cgbmJ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbmN
_cgbmO:
	leaq block_cgbmG_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgbmG
_cgbmH:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbmN:
	leaq Data.Functor.Product.$fShowProduct_$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fShowProduct_$cshowsPrec_entry, .-Data.Functor.Product.$fShowProduct_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:12:04.41374642 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fShowProduct_$cshowsPrec_info
.type Data.Functor.Product.$fShowProduct_$cshowsPrec_info, @object
Data.Functor.Product.$fShowProduct_$cshowsPrec_info:
	.quad	Data.Functor.Product.$fShowProduct_$cshowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	21474836505
	.quad	SgaPW_srt+152


==================== Asm code ====================
2018-03-16 16:12:04.414479771 UTC

.section .text
.align 8
_cgbmG:
_cgbmG:
	leaq block_cgbmM_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 32(%rbp),%rbx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _cgbmM
_cgbmQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgbmG, .-_cgbmG


==================== Asm code ====================
2018-03-16 16:12:04.415144707 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbmG_info:
	.quad	_cgbmG
	.quad	4
	.quad	4294967326
	.quad	SgaPW_srt+152


==================== Asm code ====================
2018-03-16 16:12:04.415837832 UTC

.section .text
.align 8
_cgbmM:
_cgbmM:
	movq 7(%rbx),%r9
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cshowsPrec_entry
	.size _cgbmM, .-_cgbmM


==================== Asm code ====================
2018-03-16 16:12:04.416444519 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbmM_info:
	.quad	_cgbmM
	.quad	516
	.quad	4294967326
	.quad	SgaPW_srt+152


==================== Asm code ====================
2018-03-16 16:12:04.422588737 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cshow_closure
.type Data.Functor.Product.$w$cshow_closure, @object
Data.Functor.Product.$w$cshow_closure:
	.quad	Data.Functor.Product.$w$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.423427153 UTC

.section .text
.align 8
sp_sgaub_entry:
_cgbnl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbnm
_cgbnn:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Show.showsPrec_entry@gotpcrel(%rip)
_cgbnm:
	jmp *-16(%r13)
	.size sp_sgaub_entry, .-sp_sgaub_entry


==================== Asm code ====================
2018-03-16 16:12:04.424070052 UTC

.section .data.rel.ro
.align 8
.align 1
sp_sgaub_info:
	.quad	sp_sgaub_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.424765586 UTC

.section .text
.align 8
sl_sgauc_entry:
_cgbns:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbnt
_cgbnu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Show.showList_entry@gotpcrel(%rip)
_cgbnt:
	jmp *-16(%r13)
	.size sl_sgauc_entry, .-sl_sgauc_entry


==================== Asm code ====================
2018-03-16 16:12:04.425474135 UTC

.section .data.rel.ro
.align 8
.align 1
sl_sgauc_info:
	.quad	sl_sgauc_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.426244805 UTC

.section .text
.align 8
sat_sgaud_entry:
_cgbnD:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbnE
_cgbnF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppppp_info@gotpcrel(%rip),%rax
	movq %rax,-64(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-56(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-48(%rbp)
	movq Data.Functor.Classes.$fRead1Const1_closure@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-24(%rbp)
	addq $-64,%rbp
	jmp *Data.Functor.Classes.liftShowsPrec_entry@gotpcrel(%rip)
_cgbnE:
	jmp *-16(%r13)
	.size sat_sgaud_entry, .-sat_sgaud_entry


==================== Asm code ====================
2018-03-16 16:12:04.426927507 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaud_info:
	.quad	sat_sgaud_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.427821378 UTC

.section .text
.align 8
sat_sgauf_entry:
_cgbnH:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbnI
_cgbnJ:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cgbnL
_cgbnK:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	leaq sat_sgaud_info(%rip),%r8
	movq %r8,-64(%r12)
	movq %rcx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq Data.Functor.Classes.showsUnaryWith1_closure@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	leaq -64(%r12),%rcx
	movq %rcx,(%r12)
	movq %rax,%r14
	movq stg_ap_ppppp_info@gotpcrel(%rip),%rax
	movq %rax,-64(%rbp)
	movq %rdi,-56(%rbp)
	movq %rbx,-48(%rbp)
	movq Data.Functor.Classes.$fRead1Const1_closure@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rdx,-32(%rbp)
	leaq -14(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-64,%rbp
	jmp *Data.Functor.Classes.liftShowsPrec_entry@gotpcrel(%rip)
_cgbnL:
	movq $72,904(%r13)
_cgbnI:
	jmp *-16(%r13)
	.size sat_sgauf_entry, .-sat_sgauf_entry


==================== Asm code ====================
2018-03-16 16:12:04.42864411 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgauf_info:
	.quad	sat_sgauf_entry
	.quad	6
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.430200021 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cshow_entry
.type Data.Functor.Product.$w$cshow_entry, @object
Data.Functor.Product.$w$cshow_entry:
_cgbnN:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cgbnR
_cgbnQ:
	leaq sp_sgaub_info(%rip),%rax
	movq %rax,-128(%r12)
	movq %rdi,-112(%r12)
	leaq sl_sgauc_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %rdi,-88(%r12)
	leaq sat_sgauf_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	leaq -128(%r12),%rax
	movq %rax,-32(%r12)
	leaq -104(%r12),%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq Data.Functor.Classes.showsUnaryWith1_closure@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	leaq Data.Functor.Product.$fRead1Product2_closure(%rip),%r14
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_cgbnR:
	movq $136,904(%r13)
	leaq Data.Functor.Product.$w$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cshow_entry, .-Data.Functor.Product.$w$cshow_entry


==================== Asm code ====================
2018-03-16 16:12:04.430993518 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cshow_info
.type Data.Functor.Product.$w$cshow_info, @object
Data.Functor.Product.$w$cshow_info:
	.quad	Data.Functor.Product.$w$cshow_entry
	.quad	0
	.quad	17596481011726
	.quad	21474836505
	.quad	SgaPW_srt+72


==================== Asm code ====================
2018-03-16 16:12:04.434373693 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fShowProduct_$cshow_closure
.type Data.Functor.Product.$fShowProduct_$cshow_closure, @object
Data.Functor.Product.$fShowProduct_$cshow_closure:
	.quad	Data.Functor.Product.$fShowProduct_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.435283376 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fShowProduct_$cshow_entry
.type Data.Functor.Product.$fShowProduct_$cshow_entry, @object
Data.Functor.Product.$fShowProduct_$cshow_entry:
_cgboJ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgboK
_cgboL:
	leaq block_cgboG_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cgboG
_cgboH:
	movq (%rbx),%rax
	jmp *(%rax)
_cgboK:
	leaq Data.Functor.Product.$fShowProduct_$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fShowProduct_$cshow_entry, .-Data.Functor.Product.$fShowProduct_$cshow_entry


==================== Asm code ====================
2018-03-16 16:12:04.435966525 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fShowProduct_$cshow_info
.type Data.Functor.Product.$fShowProduct_$cshow_info, @object
Data.Functor.Product.$fShowProduct_$cshow_info:
	.quad	Data.Functor.Product.$fShowProduct_$cshow_entry
	.quad	0
	.quad	12884901902
	.quad	17179869208
	.quad	SgaPW_srt+168


==================== Asm code ====================
2018-03-16 16:12:04.436624395 UTC

.section .text
.align 8
_cgboG:
_cgboG:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cshow_entry
	.size _cgboG, .-_cgboG


==================== Asm code ====================
2018-03-16 16:12:04.437185539 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgboG_info:
	.quad	_cgboG
	.quad	3
	.quad	4294967326
	.quad	SgaPW_srt+168


==================== Asm code ====================
2018-03-16 16:12:04.44295785 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fShowProduct_$cshowList_closure
.type Data.Functor.Product.$fShowProduct_$cshowList_closure, @object
Data.Functor.Product.$fShowProduct_$cshowList_closure:
	.quad	Data.Functor.Product.$fShowProduct_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.443804599 UTC

.section .text
.align 8
lvl9_sgaut_entry:
_cgbp8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbp9
_cgbpa:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Show.showsPrec_entry@gotpcrel(%rip)
_cgbp9:
	jmp *-16(%r13)
	.size lvl9_sgaut_entry, .-lvl9_sgaut_entry


==================== Asm code ====================
2018-03-16 16:12:04.444481494 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_sgaut_info:
	.quad	lvl9_sgaut_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.445123105 UTC

.section .text
.align 8
lvl10_sgauu_entry:
_cgbpf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbpg
_cgbph:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Show.showList_entry@gotpcrel(%rip)
_cgbpg:
	jmp *-16(%r13)
	.size lvl10_sgauu_entry, .-lvl10_sgauu_entry


==================== Asm code ====================
2018-03-16 16:12:04.445772546 UTC

.section .data.rel.ro
.align 8
.align 1
lvl10_sgauu_info:
	.quad	lvl10_sgauu_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.446554738 UTC

.section .text
.align 8
sat_sgauz_entry:
_cgbpq:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbpr
_cgbps:
	leaq block_cgbpn_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgbpn
_cgbpo:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbpr:
	jmp *-8(%r13)
	.size sat_sgauz_entry, .-sat_sgauz_entry


==================== Asm code ====================
2018-03-16 16:12:04.447218923 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgauz_info:
	.quad	sat_sgauz_entry
	.quad	4
	.quad	4294967304
	.quad	4294967301
	.quad	SgaPW_srt+80


==================== Asm code ====================
2018-03-16 16:12:04.447901409 UTC

.section .text
.align 8
_cgbpn:
_cgbpn:
	xorl %r9d,%r9d
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,24(%rbp)
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp Data.Functor.Product.$w$cliftShowsPrec_entry
	.size _cgbpn, .-_cgbpn


==================== Asm code ====================
2018-03-16 16:12:04.448515415 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbpn_info:
	.quad	_cgbpn
	.quad	4
	.quad	4294967326
	.quad	SgaPW_srt+80


==================== Asm code ====================
2018-03-16 16:12:04.449346058 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fShowProduct_$cshowList_entry
.type Data.Functor.Product.$fShowProduct_$cshowList_entry, @object
Data.Functor.Product.$fShowProduct_$cshowList_entry:
_cgbpx:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cgbpB
_cgbpA:
	leaq lvl9_sgaut_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %rdi,-64(%r12)
	leaq lvl10_sgauu_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %rdi,-40(%r12)
	leaq sat_sgauz_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	leaq -80(%r12),%rax
	movq %rax,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	movq %r9,%rdi
	movq %r8,%rsi
	leaq -31(%r12),%r14
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
_cgbpB:
	movq $88,904(%r13)
	leaq Data.Functor.Product.$fShowProduct_$cshowList_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fShowProduct_$cshowList_entry, .-Data.Functor.Product.$fShowProduct_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:12:04.450089444 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fShowProduct_$cshowList_info
.type Data.Functor.Product.$fShowProduct_$cshowList_info, @object
Data.Functor.Product.$fShowProduct_$cshowList_info:
	.quad	Data.Functor.Product.$fShowProduct_$cshowList_entry
	.quad	0
	.quad	35188667056142
	.quad	21474836505
	.quad	SgaPW_srt+80


==================== Asm code ====================
2018-03-16 16:12:04.454822001 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fShowProduct_closure
.type Data.Functor.Product.$fShowProduct_closure, @object
Data.Functor.Product.$fShowProduct_closure:
	.quad	Data.Functor.Product.$fShowProduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.456101306 UTC

.section .text
.align 8
sat_sgauF_entry:
_cgbqf:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fShowProduct_$cshowList_entry
	.size sat_sgauF_entry, .-sat_sgauF_entry


==================== Asm code ====================
2018-03-16 16:12:04.456727454 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgauF_info:
	.quad	sat_sgauF_entry
	.quad	3
	.quad	4294967304
	.quad	8589934607
	.quad	SgaPW_srt+184


==================== Asm code ====================
2018-03-16 16:12:04.457400553 UTC

.section .text
.align 8
sat_sgauE_entry:
_cgbqn:
	movq %r14,%r8
	movq 23(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fShowProduct_$cshow_entry
	.size sat_sgauE_entry, .-sat_sgauE_entry


==================== Asm code ====================
2018-03-16 16:12:04.457988405 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgauE_info:
	.quad	sat_sgauE_entry
	.quad	3
	.quad	4294967304
	.quad	4294967301
	.quad	SgaPW_srt+176


==================== Asm code ====================
2018-03-16 16:12:04.458638173 UTC

.section .text
.align 8
sat_sgauD_entry:
_cgbqv:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fShowProduct_$cshowsPrec_entry
	.size sat_sgauD_entry, .-sat_sgauD_entry


==================== Asm code ====================
2018-03-16 16:12:04.459233808 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgauD_info:
	.quad	sat_sgauD_entry
	.quad	3
	.quad	4294967304
	.quad	8589934607
	.quad	SgaPW_srt+160


==================== Asm code ====================
2018-03-16 16:12:04.460069562 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fShowProduct_entry
.type Data.Functor.Product.$fShowProduct_entry, @object
Data.Functor.Product.$fShowProduct_entry:
_cgbqz:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _cgbqD
_cgbqC:
	leaq sat_sgauF_info(%rip),%rax
	movq %rax,-120(%r12)
	movq %r14,-112(%r12)
	movq %rsi,-104(%r12)
	movq %rdi,-96(%r12)
	leaq sat_sgauE_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %r14,-80(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	leaq sat_sgauD_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq GHC.Show.C:Show_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq -54(%r12),%rax
	movq %rax,-16(%r12)
	leaq -87(%r12),%rax
	movq %rax,-8(%r12)
	leaq -118(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgbqD:
	movq $128,904(%r13)
	leaq Data.Functor.Product.$fShowProduct_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fShowProduct_entry, .-Data.Functor.Product.$fShowProduct_entry


==================== Asm code ====================
2018-03-16 16:12:04.460839604 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fShowProduct_info
.type Data.Functor.Product.$fShowProduct_info, @object
Data.Functor.Product.$fShowProduct_info:
	.quad	Data.Functor.Product.$fShowProduct_entry
	.quad	0
	.quad	124554051598
	.quad	12884901911
	.quad	SgaPW_srt+160


==================== Asm code ====================
2018-03-16 16:12:04.465965698 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFunctorProduct_$cfmap_closure
.type Data.Functor.Product.$fFunctorProduct_$cfmap_closure, @object
Data.Functor.Product.$fFunctorProduct_$cfmap_closure:
	.quad	Data.Functor.Product.$fFunctorProduct_$cfmap_info


==================== Asm code ====================
2018-03-16 16:12:04.466776103 UTC

.section .text
.align 8
sat_sgauO_entry:
_cgbrc:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbrd
_cgbre:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Base.fmap_entry@gotpcrel(%rip)
_cgbrd:
	jmp *-16(%r13)
	.size sat_sgauO_entry, .-sat_sgauO_entry


==================== Asm code ====================
2018-03-16 16:12:04.467364395 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgauO_info:
	.quad	sat_sgauO_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.46807182 UTC

.section .text
.align 8
sat_sgauN_entry:
_cgbrj:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbrk
_cgbrl:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Base.fmap_entry@gotpcrel(%rip)
_cgbrk:
	jmp *-16(%r13)
	.size sat_sgauN_entry, .-sat_sgauN_entry


==================== Asm code ====================
2018-03-16 16:12:04.46871721 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgauN_info:
	.quad	sat_sgauN_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.469500336 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFunctorProduct_$cfmap_entry
.type Data.Functor.Product.$fFunctorProduct_$cfmap_entry, @object
Data.Functor.Product.$fFunctorProduct_$cfmap_entry:
_cgbrm:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbro
_cgbrp:
	leaq block_cgbr3_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cgbr3
_cgbr4:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbro:
	leaq Data.Functor.Product.$fFunctorProduct_$cfmap_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFunctorProduct_$cfmap_entry, .-Data.Functor.Product.$fFunctorProduct_$cfmap_entry


==================== Asm code ====================
2018-03-16 16:12:04.470163848 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFunctorProduct_$cfmap_info
.type Data.Functor.Product.$fFunctorProduct_$cfmap_info, @object
Data.Functor.Product.$fFunctorProduct_$cfmap_info:
	.quad	Data.Functor.Product.$fFunctorProduct_$cfmap_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:12:04.471009477 UTC

.section .text
.align 8
_cgbr3:
_cgbr3:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cgbrs
_cgbrr:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgauO_info(%rip),%rcx
	movq %rcx,-96(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	leaq sat_sgauN_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	leaq Data.Functor.Product.Pair_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgbrs:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgbr3, .-_cgbr3


==================== Asm code ====================
2018-03-16 16:12:04.471756647 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbr3_info:
	.quad	_cgbr3
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.476936855 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFunctorProduct_$c<$_closure
.type Data.Functor.Product.$fFunctorProduct_$c<$_closure, @object
Data.Functor.Product.$fFunctorProduct_$c<$_closure:
	.quad	Data.Functor.Product.$fFunctorProduct_$c<$_info


==================== Asm code ====================
2018-03-16 16:12:04.477855673 UTC

.section .text
.align 8
f1_sgauW_entry:
_cgbsg:
	movq 7(%rbx),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size f1_sgauW_entry, .-f1_sgauW_entry


==================== Asm code ====================
2018-03-16 16:12:04.47844794 UTC

.section .data.rel.ro
.align 8
.align 1
f1_sgauW_info:
	.quad	f1_sgauW_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:04.479162756 UTC

.section .text
.align 8
sat_sgauZ_entry:
_cgbsn:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbso
_cgbsp:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Base.fmap_entry@gotpcrel(%rip)
_cgbso:
	jmp *-16(%r13)
	.size sat_sgauZ_entry, .-sat_sgauZ_entry


==================== Asm code ====================
2018-03-16 16:12:04.479794958 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgauZ_info:
	.quad	sat_sgauZ_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.480529561 UTC

.section .text
.align 8
sat_sgauY_entry:
_cgbsu:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbsv
_cgbsw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Base.fmap_entry@gotpcrel(%rip)
_cgbsv:
	jmp *-16(%r13)
	.size sat_sgauY_entry, .-sat_sgauY_entry


==================== Asm code ====================
2018-03-16 16:12:04.481190848 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgauY_info:
	.quad	sat_sgauY_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.482007297 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFunctorProduct_$c<$_entry
.type Data.Functor.Product.$fFunctorProduct_$c<$_entry, @object
Data.Functor.Product.$fFunctorProduct_$c<$_entry:
_cgbsx:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbsz
_cgbsA:
	leaq block_cgbs6_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cgbs6
_cgbs7:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbsz:
	leaq Data.Functor.Product.$fFunctorProduct_$c<$_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFunctorProduct_$c<$_entry, .-Data.Functor.Product.$fFunctorProduct_$c<$_entry


==================== Asm code ====================
2018-03-16 16:12:04.482705107 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFunctorProduct_$c<$_info
.type Data.Functor.Product.$fFunctorProduct_$c<$_info, @object
Data.Functor.Product.$fFunctorProduct_$c<$_info:
	.quad	Data.Functor.Product.$fFunctorProduct_$c<$_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:12:04.483564986 UTC

.section .text
.align 8
_cgbs6:
_cgbs6:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _cgbsD
_cgbsC:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq f1_sgauW_info(%rip),%rcx
	movq %rcx,-112(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-104(%r12)
	leaq sat_sgauZ_info(%rip),%rcx
	movq %rcx,-96(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-72(%r12)
	leaq -111(%r12),%rbx
	movq %rbx,-64(%r12)
	leaq sat_sgauY_info(%rip),%rcx
	movq %rcx,-56(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-40(%r12)
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	leaq Data.Functor.Product.Pair_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgbsD:
	movq $120,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgbs6, .-_cgbs6


==================== Asm code ====================
2018-03-16 16:12:04.484330406 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbs6_info:
	.quad	_cgbs6
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.48824118 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFunctorProduct_closure
.type Data.Functor.Product.$fFunctorProduct_closure, @object
Data.Functor.Product.$fFunctorProduct_closure:
	.quad	Data.Functor.Product.$fFunctorProduct_info


==================== Asm code ====================
2018-03-16 16:12:04.488911673 UTC

.section .text
.align 8
sat_sgav3_entry:
_cgbtr:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fFunctorProduct_$c<$_entry
	.size sat_sgav3_entry, .-sat_sgav3_entry


==================== Asm code ====================
2018-03-16 16:12:04.489526658 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgav3_info:
	.quad	sat_sgav3_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.490176795 UTC

.section .text
.align 8
sat_sgav2_entry:
_cgbtz:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fFunctorProduct_$cfmap_entry
	.size sat_sgav2_entry, .-sat_sgav2_entry


==================== Asm code ====================
2018-03-16 16:12:04.490738814 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgav2_info:
	.quad	sat_sgav2_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.4915202 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFunctorProduct_entry
.type Data.Functor.Product.$fFunctorProduct_entry, @object
Data.Functor.Product.$fFunctorProduct_entry:
_cgbtD:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cgbtH
_cgbtG:
	leaq sat_sgav3_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-56(%r12)
	movq %rsi,-48(%r12)
	leaq sat_sgav2_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq GHC.Base.C:Functor_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -38(%r12),%rax
	movq %rax,-8(%r12)
	leaq -62(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgbtH:
	movq $72,904(%r13)
	leaq Data.Functor.Product.$fFunctorProduct_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFunctorProduct_entry, .-Data.Functor.Product.$fFunctorProduct_entry


==================== Asm code ====================
2018-03-16 16:12:04.492189003 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFunctorProduct_info
.type Data.Functor.Product.$fFunctorProduct_info, @object
Data.Functor.Product.$fFunctorProduct_info:
	.quad	Data.Functor.Product.$fFunctorProduct_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.497165061 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldMap_closure
.type Data.Functor.Product.$w$cfoldMap_closure, @object
Data.Functor.Product.$w$cfoldMap_closure:
	.quad	Data.Functor.Product.$w$cfoldMap_info


==================== Asm code ====================
2018-03-16 16:12:04.498093157 UTC

.section .text
.align 8
sat_sgavb_entry:
_cgbu6:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbu7
_cgbu8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbu7:
	jmp *-16(%r13)
	.size sat_sgavb_entry, .-sat_sgavb_entry


==================== Asm code ====================
2018-03-16 16:12:04.49876993 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgavb_info:
	.quad	sat_sgavb_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.499484218 UTC

.section .text
.align 8
sat_sgava_entry:
_cgbud:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbue
_cgbuf:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbue:
	jmp *-16(%r13)
	.size sat_sgava_entry, .-sat_sgava_entry


==================== Asm code ====================
2018-03-16 16:12:04.500129113 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgava_info:
	.quad	sat_sgava_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.500976884 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cfoldMap_entry
.type Data.Functor.Product.$w$cfoldMap_entry, @object
Data.Functor.Product.$w$cfoldMap_entry:
_cgbug:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbuh
_cgbui:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cgbuk
_cgbuj:
	leaq sat_sgavb_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq (%rbp),%rax
	movq %rax,-48(%r12)
	leaq sat_sgava_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %r9,(%r12)
	movq %rdi,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -40(%r12),%rax
	movq %rax,-8(%rbp)
	leaq -88(%r12),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Base.mappend_entry@gotpcrel(%rip)
_cgbuk:
	movq $96,904(%r13)
_cgbuh:
	leaq Data.Functor.Product.$w$cfoldMap_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cfoldMap_entry, .-Data.Functor.Product.$w$cfoldMap_entry


==================== Asm code ====================
2018-03-16 16:12:04.501995409 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldMap_info
.type Data.Functor.Product.$w$cfoldMap_info, @object
Data.Functor.Product.$w$cfoldMap_info:
	.quad	Data.Functor.Product.$w$cfoldMap_entry
	.quad	0
	.quad	14
	.quad	25769803802


==================== Asm code ====================
2018-03-16 16:12:04.505302374 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldMap_closure
.type Data.Functor.Product.$fFoldableProduct_$cfoldMap_closure, @object
Data.Functor.Product.$fFoldableProduct_$cfoldMap_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldMap_info


==================== Asm code ====================
2018-03-16 16:12:04.506175078 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cfoldMap_entry
.type Data.Functor.Product.$fFoldableProduct_$cfoldMap_entry, @object
Data.Functor.Product.$fFoldableProduct_$cfoldMap_entry:
_cgbuV:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbuW
_cgbuX:
	leaq block_cgbuS_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgbuS
_cgbuT:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbuW:
	leaq Data.Functor.Product.$fFoldableProduct_$cfoldMap_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cfoldMap_entry, .-Data.Functor.Product.$fFoldableProduct_$cfoldMap_entry


==================== Asm code ====================
2018-03-16 16:12:04.506857905 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldMap_info
.type Data.Functor.Product.$fFoldableProduct_$cfoldMap_info, @object
Data.Functor.Product.$fFoldableProduct_$cfoldMap_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldMap_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:12:04.507529908 UTC

.section .text
.align 8
_cgbuS:
_cgbuS:
	movq 7(%rbx),%r9
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cfoldMap_entry
	.size _cgbuS, .-_cgbuS


==================== Asm code ====================
2018-03-16 16:12:04.508142567 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbuS_info:
	.quad	_cgbuS
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.511408033 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfold_closure
.type Data.Functor.Product.$fFoldableProduct_$cfold_closure, @object
Data.Functor.Product.$fFoldableProduct_$cfold_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfold_info


==================== Asm code ====================
2018-03-16 16:12:04.512333355 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cfold_entry
.type Data.Functor.Product.$fFoldableProduct_$cfold_entry, @object
Data.Functor.Product.$fFoldableProduct_$cfold_entry:
_cgbvk:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbvl
_cgbvm:
	leaq block_cgbvh_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cgbvh
_cgbvi:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbvl:
	leaq Data.Functor.Product.$fFoldableProduct_$cfold_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cfold_entry, .-Data.Functor.Product.$fFoldableProduct_$cfold_entry


==================== Asm code ====================
2018-03-16 16:12:04.513004568 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfold_info
.type Data.Functor.Product.$fFoldableProduct_$cfold_info, @object
Data.Functor.Product.$fFoldableProduct_$cfold_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfold_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:12:04.513912289 UTC

.section .text
.align 8
_cgbvh:
_cgbvh:
	movq 7(%rbx),%r9
	movq GHC.Base.id_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,24(%rbp)
	addq $24,%rbp
	jmp Data.Functor.Product.$w$cfoldMap_entry
	.size _cgbvh, .-_cgbvh


==================== Asm code ====================
2018-03-16 16:12:04.514523891 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbvh_info:
	.quad	_cgbvh
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.5167153 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct1_closure
.type Data.Functor.Product.$fFoldableProduct1_closure, @object
Data.Functor.Product.$fFoldableProduct1_closure:
	.quad	Data.Functor.Product.$fFoldableProduct1_info


==================== Asm code ====================
2018-03-16 16:12:04.517468736 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct1_entry
.type Data.Functor.Product.$fFoldableProduct1_entry, @object
Data.Functor.Product.$fFoldableProduct1_entry:
_cgbvH:
	movq %r14,%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size Data.Functor.Product.$fFoldableProduct1_entry, .-Data.Functor.Product.$fFoldableProduct1_entry


==================== Asm code ====================
2018-03-16 16:12:04.518055377 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct1_info
.type Data.Functor.Product.$fFoldableProduct1_info, @object
Data.Functor.Product.$fFoldableProduct1_info:
	.quad	Data.Functor.Product.$fFoldableProduct1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:04.524600061 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$csum_closure
.type Data.Functor.Product.$fFoldableProduct_$csum_closure, @object
Data.Functor.Product.$fFoldableProduct_$csum_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$csum_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.525508208 UTC

.section .text
.align 8
$dMonoid_sgavv_entry:
_cgbvW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbvX
_cgbvY:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Semigroup.Internal.$fMonoidSum_entry@gotpcrel(%rip)
_cgbvX:
	jmp *-16(%r13)
	.size $dMonoid_sgavv_entry, .-$dMonoid_sgavv_entry


==================== Asm code ====================
2018-03-16 16:12:04.526128013 UTC

.section .data.rel.ro
.align 8
.align 1
$dMonoid_sgavv_info:
	.quad	$dMonoid_sgavv_entry
	.quad	1
	.quad	4294967312
	.quad	SgaPW_srt+200


==================== Asm code ====================
2018-03-16 16:12:04.526903249 UTC

.section .text
.align 8
sat_sgavB_entry:
_cgbwd:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbwe
_cgbwf:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	leaq Data.Functor.Product.$fFoldableProduct1_closure+1(%rip),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbwe:
	jmp *-16(%r13)
	.size sat_sgavB_entry, .-sat_sgavB_entry


==================== Asm code ====================
2018-03-16 16:12:04.527586931 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgavB_info:
	.quad	sat_sgavB_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.528334862 UTC

.section .text
.align 8
sat_sgavA_entry:
_cgbwk:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbwl
_cgbwm:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	leaq Data.Functor.Product.$fFoldableProduct1_closure+1(%rip),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbwl:
	jmp *-16(%r13)
	.size sat_sgavA_entry, .-sat_sgavA_entry


==================== Asm code ====================
2018-03-16 16:12:04.528999487 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgavA_info:
	.quad	sat_sgavA_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.530288558 UTC

.section .text
.align 8
sat_sgavC_entry:
_cgbwn:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbwo
_cgbwp:
	leaq block_cgbw4_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgbw4
_cgbw5:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbwo:
	jmp *-8(%r13)
	.size sat_sgavC_entry, .-sat_sgavC_entry


==================== Asm code ====================
2018-03-16 16:12:04.530944603 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgavC_info:
	.quad	sat_sgavC_entry
	.quad	4
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:04.531759098 UTC

.section .text
.align 8
_cgbw4:
_cgbw4:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cgbws
_cgbwr:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgavB_info(%rip),%rcx
	movq %rcx,-72(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-56(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-48(%r12)
	movq %rbx,-40(%r12)
	leaq sat_sgavA_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	movq 24(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,16(%rbp)
	leaq -32(%r12),%rax
	movq %rax,24(%rbp)
	leaq -72(%r12),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp *GHC.Num.+_entry@gotpcrel(%rip)
_cgbws:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgbw4, .-_cgbw4


==================== Asm code ====================
2018-03-16 16:12:04.532516154 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbw4_info:
	.quad	_cgbw4
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.533351534 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$csum_entry
.type Data.Functor.Product.$fFoldableProduct_$csum_entry, @object
Data.Functor.Product.$fFoldableProduct_$csum_entry:
_cgbwu:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cgbwy
_cgbwx:
	leaq $dMonoid_sgavv_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %rdi,-40(%r12)
	leaq sat_sgavC_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgbwy:
	movq $64,904(%r13)
	leaq Data.Functor.Product.$fFoldableProduct_$csum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$csum_entry, .-Data.Functor.Product.$fFoldableProduct_$csum_entry


==================== Asm code ====================
2018-03-16 16:12:04.5340336 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$csum_info
.type Data.Functor.Product.$fFoldableProduct_$csum_info, @object
Data.Functor.Product.$fFoldableProduct_$csum_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$csum_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	SgaPW_srt+200


==================== Asm code ====================
2018-03-16 16:12:04.536245142 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl_rg5nW_bytes:
	.asciz "minimum: empty structure"


==================== Asm code ====================
2018-03-16 16:12:04.539302954 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct2_closure
.type Data.Functor.Product.$fFoldableProduct2_closure, @object
Data.Functor.Product.$fFoldableProduct2_closure:
	.quad	Data.Functor.Product.$fFoldableProduct2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.540282793 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct2_entry
.type Data.Functor.Product.$fFoldableProduct2_entry, @object
Data.Functor.Product.$fFoldableProduct2_entry:
_cgbxt:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbxu
_cgbxv:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cgbxq
_cgbxp:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_cgbxr_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl_rg5nW_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cgbxu:
	jmp *-16(%r13)
_cgbxq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Product.$fFoldableProduct2_entry, .-Data.Functor.Product.$fFoldableProduct2_entry


==================== Asm code ====================
2018-03-16 16:12:04.541051814 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct2_info
.type Data.Functor.Product.$fFoldableProduct2_info, @object
Data.Functor.Product.$fFoldableProduct2_info:
	.quad	Data.Functor.Product.$fFoldableProduct2_entry
	.quad	0
	.quad	4294967317
	.quad	SgaPW_srt+216


==================== Asm code ====================
2018-03-16 16:12:04.541927685 UTC

.section .text
.align 8
_cgbxr:
_cgbxr:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size _cgbxr, .-_cgbxr


==================== Asm code ====================
2018-03-16 16:12:04.542479214 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbxr_info:
	.quad	_cgbxr
	.quad	0
	.quad	4294967326
	.quad	SgaPW_srt+216


==================== Asm code ====================
2018-03-16 16:12:04.550171302 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cminimum_closure
.type Data.Functor.Product.$fFoldableProduct_$cminimum_closure, @object
Data.Functor.Product.$fFoldableProduct_$cminimum_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cminimum_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.551027512 UTC

.section .text
.align 8
$dMonoid_sgavH_entry:
_cgbxT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbxU
_cgbxV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Functor.Utils.$fMonoidMin_entry@gotpcrel(%rip)
_cgbxU:
	jmp *-16(%r13)
	.size $dMonoid_sgavH_entry, .-$dMonoid_sgavH_entry


==================== Asm code ====================
2018-03-16 16:12:04.551658069 UTC

.section .data.rel.ro
.align 8
.align 1
$dMonoid_sgavH_info:
	.quad	$dMonoid_sgavH_entry
	.quad	1
	.quad	4294967312
	.quad	SgaPW_srt+224


==================== Asm code ====================
2018-03-16 16:12:04.552462563 UTC

.section .text
.align 8
sat_sgavT_entry:
_cgby4:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cgby5
_cgby6:
	leaq block_cgby1_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgby1
_cgby2:
	movq (%rbx),%rax
	jmp *(%rax)
_cgby5:
	jmp *-8(%r13)
	.size sat_sgavT_entry, .-sat_sgavT_entry


==================== Asm code ====================
2018-03-16 16:12:04.553172765 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgavT_info:
	.quad	sat_sgavT_entry
	.quad	4
	.quad	4294967304
	.quad	4294967301
	.quad	SgaPW_srt+232


==================== Asm code ====================
2018-03-16 16:12:04.553938 UTC

.section .text
.align 8
_cgby1:
_cgby1:
	leaq block_cgby9_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-24(%rbp)
	movq GHC.Base.Just_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,16(%rbp)
	addq $-32,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
	.size _cgby1, .-_cgby1


==================== Asm code ====================
2018-03-16 16:12:04.554563687 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgby1_info:
	.quad	_cgby1
	.quad	4
	.quad	4294967326
	.quad	SgaPW_srt+232


==================== Asm code ====================
2018-03-16 16:12:04.555531205 UTC

.section .text
.align 8
_cgby9:
_cgby9:
	movq 8(%rbp),%rax
	movq 32(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq %rbx,%rsi
	andl $7,%esi
	cmpq $1,%rsi
	je _cgbyh
_cgbyw:
	leaq block_cgbyu_info(%rip),%rsi
	movq %rsi,16(%rbp)
	movq %rax,%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	movq GHC.Base.Just_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	movq 6(%rbx),%rax
	movq %rax,32(%rbp)
	addq $-16,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbyh:
	leaq block_cgbye_info(%rip),%rsi
	movq %rsi,32(%rbp)
	movq %rax,%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	movq %rcx,8(%rbp)
	movq GHC.Base.Just_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,16(%rbp)
	movq %rdx,24(%rbp)
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
	.size _cgby9, .-_cgby9


==================== Asm code ====================
2018-03-16 16:12:04.556307875 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgby9_info:
	.quad	_cgby9
	.quad	4
	.quad	4294967326
	.quad	SgaPW_srt+232


==================== Asm code ====================
2018-03-16 16:12:04.557034037 UTC

.section .text
.align 8
_cgbye:
_cgbye:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cgbyn
_cgbyr:
	movq 6(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_cgbyn:
	leaq Data.Functor.Product.$fFoldableProduct2_closure(%rip),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cgbye, .-_cgbye


==================== Asm code ====================
2018-03-16 16:12:04.557725551 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbye_info:
	.quad	_cgbye
	.quad	0
	.quad	4294967326
	.quad	SgaPW_srt+232


==================== Asm code ====================
2018-03-16 16:12:04.55849385 UTC

.section .text
.align 8
_cgbyu:
_cgbyu:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ugbyW
_cgbyH:
	leaq block_cgbyF_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 6(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.<=_entry@gotpcrel(%rip)
_ugbyW:
	addq $16,%rbp
	jmp _cgbyN
	.size _cgbyu, .-_cgbyu


==================== Asm code ====================
2018-03-16 16:12:04.559165871 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbyu_info:
	.quad	_cgbyu
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.559883016 UTC

.section .text
.align 8
_cgbyF:
_cgbyF:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ugbyX
_cgbyR:
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_ugbyX:
	addq $16,%rbp
	jmp _cgbyN
	.size _cgbyF, .-_cgbyF


==================== Asm code ====================
2018-03-16 16:12:04.560450016 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbyF_info:
	.quad	_cgbyF
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.56107601 UTC

.section .text
.align 8
_cgbyN:
_cgbyN:
	movq (%rbp),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cgbyN, .-_cgbyN


==================== Asm code ====================
2018-03-16 16:12:04.562069654 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cminimum_entry
.type Data.Functor.Product.$fFoldableProduct_$cminimum_entry, @object
Data.Functor.Product.$fFoldableProduct_$cminimum_entry:
_cgbz1:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cgbz5
_cgbz4:
	leaq $dMonoid_sgavH_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %rdi,-40(%r12)
	leaq sat_sgavT_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgbz5:
	movq $64,904(%r13)
	leaq Data.Functor.Product.$fFoldableProduct_$cminimum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cminimum_entry, .-Data.Functor.Product.$fFoldableProduct_$cminimum_entry


==================== Asm code ====================
2018-03-16 16:12:04.562817314 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cminimum_info
.type Data.Functor.Product.$fFoldableProduct_$cminimum_info, @object
Data.Functor.Product.$fFoldableProduct_$cminimum_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cminimum_entry
	.quad	0
	.quad	30064771086
	.quad	12884901911
	.quad	SgaPW_srt+224


==================== Asm code ====================
2018-03-16 16:12:04.564511122 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl1_rg5nX_bytes:
	.asciz "maximum: empty structure"


==================== Asm code ====================
2018-03-16 16:12:04.567524615 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct3_closure
.type Data.Functor.Product.$fFoldableProduct3_closure, @object
Data.Functor.Product.$fFoldableProduct3_closure:
	.quad	Data.Functor.Product.$fFoldableProduct3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.568435484 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct3_entry
.type Data.Functor.Product.$fFoldableProduct3_entry, @object
Data.Functor.Product.$fFoldableProduct3_entry:
_cgbAg:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbAh
_cgbAi:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cgbAd
_cgbAc:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_cgbAe_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl1_rg5nX_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cgbAh:
	jmp *-16(%r13)
_cgbAd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Product.$fFoldableProduct3_entry, .-Data.Functor.Product.$fFoldableProduct3_entry


==================== Asm code ====================
2018-03-16 16:12:04.569136253 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct3_info
.type Data.Functor.Product.$fFoldableProduct3_info, @object
Data.Functor.Product.$fFoldableProduct3_info:
	.quad	Data.Functor.Product.$fFoldableProduct3_entry
	.quad	0
	.quad	4294967317
	.quad	SgaPW_srt+216


==================== Asm code ====================
2018-03-16 16:12:04.569876182 UTC

.section .text
.align 8
_cgbAe:
_cgbAe:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size _cgbAe, .-_cgbAe


==================== Asm code ====================
2018-03-16 16:12:04.570448317 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbAe_info:
	.quad	_cgbAe
	.quad	0
	.quad	4294967326
	.quad	SgaPW_srt+216


==================== Asm code ====================
2018-03-16 16:12:04.57778277 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cmaximum_closure
.type Data.Functor.Product.$fFoldableProduct_$cmaximum_closure, @object
Data.Functor.Product.$fFoldableProduct_$cmaximum_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cmaximum_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.578609465 UTC

.section .text
.align 8
$dMonoid_sgavY_entry:
_cgbAG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbAH
_cgbAI:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Functor.Utils.$fMonoidMax_entry@gotpcrel(%rip)
_cgbAH:
	jmp *-16(%r13)
	.size $dMonoid_sgavY_entry, .-$dMonoid_sgavY_entry


==================== Asm code ====================
2018-03-16 16:12:04.579834128 UTC

.section .data.rel.ro
.align 8
.align 1
$dMonoid_sgavY_info:
	.quad	$dMonoid_sgavY_entry
	.quad	1
	.quad	4294967312
	.quad	SgaPW_srt+248


==================== Asm code ====================
2018-03-16 16:12:04.580678024 UTC

.section .text
.align 8
sat_sgawa_entry:
_cgbAR:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbAS
_cgbAT:
	leaq block_cgbAO_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgbAO
_cgbAP:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbAS:
	jmp *-8(%r13)
	.size sat_sgawa_entry, .-sat_sgawa_entry


==================== Asm code ====================
2018-03-16 16:12:04.58140611 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgawa_info:
	.quad	sat_sgawa_entry
	.quad	4
	.quad	4294967304
	.quad	4294967301
	.quad	SgaPW_srt+256


==================== Asm code ====================
2018-03-16 16:12:04.5820957 UTC

.section .text
.align 8
_cgbAO:
_cgbAO:
	leaq block_cgbAW_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-24(%rbp)
	movq GHC.Base.Just_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,16(%rbp)
	addq $-32,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
	.size _cgbAO, .-_cgbAO


==================== Asm code ====================
2018-03-16 16:12:04.582715713 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbAO_info:
	.quad	_cgbAO
	.quad	4
	.quad	4294967326
	.quad	SgaPW_srt+256


==================== Asm code ====================
2018-03-16 16:12:04.583537644 UTC

.section .text
.align 8
_cgbAW:
_cgbAW:
	movq 8(%rbp),%rax
	movq 32(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq %rbx,%rsi
	andl $7,%esi
	cmpq $1,%rsi
	je _cgbB4
_cgbBj:
	leaq block_cgbBh_info(%rip),%rsi
	movq %rsi,16(%rbp)
	movq %rax,%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	movq GHC.Base.Just_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	movq 6(%rbx),%rax
	movq %rax,32(%rbp)
	addq $-16,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbB4:
	leaq block_cgbB1_info(%rip),%rsi
	movq %rsi,32(%rbp)
	movq %rax,%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	movq %rcx,8(%rbp)
	movq GHC.Base.Just_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,16(%rbp)
	movq %rdx,24(%rbp)
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
	.size _cgbAW, .-_cgbAW


==================== Asm code ====================
2018-03-16 16:12:04.584276891 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbAW_info:
	.quad	_cgbAW
	.quad	4
	.quad	4294967326
	.quad	SgaPW_srt+256


==================== Asm code ====================
2018-03-16 16:12:04.584995353 UTC

.section .text
.align 8
_cgbB1:
_cgbB1:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cgbBa
_cgbBe:
	movq 6(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_cgbBa:
	leaq Data.Functor.Product.$fFoldableProduct3_closure(%rip),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cgbB1, .-_cgbB1


==================== Asm code ====================
2018-03-16 16:12:04.586022742 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbB1_info:
	.quad	_cgbB1
	.quad	0
	.quad	4294967326
	.quad	SgaPW_srt+256


==================== Asm code ====================
2018-03-16 16:12:04.586794924 UTC

.section .text
.align 8
_cgbBh:
_cgbBh:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ugbBJ
_cgbBu:
	leaq block_cgbBs_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 6(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.>=_entry@gotpcrel(%rip)
_ugbBJ:
	addq $16,%rbp
	jmp _cgbBA
	.size _cgbBh, .-_cgbBh


==================== Asm code ====================
2018-03-16 16:12:04.587438502 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbBh_info:
	.quad	_cgbBh
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.588103907 UTC

.section .text
.align 8
_cgbBs:
_cgbBs:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ugbBK
_cgbBE:
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_ugbBK:
	addq $16,%rbp
	jmp _cgbBA
	.size _cgbBs, .-_cgbBs


==================== Asm code ====================
2018-03-16 16:12:04.588712925 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbBs_info:
	.quad	_cgbBs
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.589373355 UTC

.section .text
.align 8
_cgbBA:
_cgbBA:
	movq (%rbp),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cgbBA, .-_cgbBA


==================== Asm code ====================
2018-03-16 16:12:04.590159865 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cmaximum_entry
.type Data.Functor.Product.$fFoldableProduct_$cmaximum_entry, @object
Data.Functor.Product.$fFoldableProduct_$cmaximum_entry:
_cgbBO:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cgbBS
_cgbBR:
	leaq $dMonoid_sgavY_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %rdi,-40(%r12)
	leaq sat_sgawa_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgbBS:
	movq $64,904(%r13)
	leaq Data.Functor.Product.$fFoldableProduct_$cmaximum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cmaximum_entry, .-Data.Functor.Product.$fFoldableProduct_$cmaximum_entry


==================== Asm code ====================
2018-03-16 16:12:04.590831565 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cmaximum_info
.type Data.Functor.Product.$fFoldableProduct_$cmaximum_info, @object
Data.Functor.Product.$fFoldableProduct_$cmaximum_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cmaximum_entry
	.quad	0
	.quad	30064771086
	.quad	12884901911
	.quad	SgaPW_srt+248


==================== Asm code ====================
2018-03-16 16:12:04.596405921 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$celem_closure
.type Data.Functor.Product.$fFoldableProduct_$celem_closure, @object
Data.Functor.Product.$fFoldableProduct_$celem_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$celem_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.597522203 UTC

.section .text
.align 8
f1_sgawf_entry:
_cgbD2:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbD3
_cgbD4:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
_cgbD3:
	jmp *-16(%r13)
	.size f1_sgawf_entry, .-f1_sgawf_entry


==================== Asm code ====================
2018-03-16 16:12:04.598215652 UTC

.section .data.rel.ro
.align 8
.align 1
f1_sgawf_info:
	.quad	f1_sgawf_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:12:04.599019433 UTC

.section .text
.align 8
sat_sgawl_entry:
_cgbDd:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbDe
_cgbDf:
	leaq block_cgbDa_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rax,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cgbDa
_cgbDb:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbDe:
	jmp *-8(%r13)
	.size sat_sgawl_entry, .-sat_sgawl_entry


==================== Asm code ====================
2018-03-16 16:12:04.599727218 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgawl_info:
	.quad	sat_sgawl_entry
	.quad	3
	.quad	4294967304
	.quad	4294967301
	.quad	SgaPW_srt+272


==================== Asm code ====================
2018-03-16 16:12:04.60042271 UTC

.section .text
.align 8
_cgbDa:
_cgbDa:
	leaq block_cgbDi_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq Data.Semigroup.Internal.$fMonoidAny_closure@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq %rax,8(%rbp)
	addq $-32,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
	.size _cgbDa, .-_cgbDa


==================== Asm code ====================
2018-03-16 16:12:04.601069978 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbDa_info:
	.quad	_cgbDa
	.quad	3
	.quad	4294967326
	.quad	SgaPW_srt+272


==================== Asm code ====================
2018-03-16 16:12:04.601917005 UTC

.section .text
.align 8
_cgbDi:
_cgbDi:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cgbDp
_cgbDt:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgbDp:
	movq 16(%rbp),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rax
	movq Data.Semigroup.Internal.$fMonoidAny_closure@gotpcrel(%rip),%rbx
	movq %rbx,8(%rbp)
	movq 24(%rbp),%rbx
	movq %rbx,16(%rbp)
	movq %rax,24(%rbp)
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
	.size _cgbDi, .-_cgbDi


==================== Asm code ====================
2018-03-16 16:12:04.602568052 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbDi_info:
	.quad	_cgbDi
	.quad	3
	.quad	4294967326
	.quad	SgaPW_srt+272


==================== Asm code ====================
2018-03-16 16:12:04.603328719 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$celem_entry
.type Data.Functor.Product.$fFoldableProduct_$celem_entry, @object
Data.Functor.Product.$fFoldableProduct_$celem_entry:
_cgbDw:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cgbDA
_cgbDz:
	leaq f1_sgawf_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	leaq sat_sgawl_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgbDA:
	movq $64,904(%r13)
	leaq Data.Functor.Product.$fFoldableProduct_$celem_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$celem_entry, .-Data.Functor.Product.$fFoldableProduct_$celem_entry


==================== Asm code ====================
2018-03-16 16:12:04.604016434 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$celem_info
.type Data.Functor.Product.$fFoldableProduct_$celem_info, @object
Data.Functor.Product.$fFoldableProduct_$celem_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$celem_entry
	.quad	0
	.quad	12884901902
	.quad	17179869208
	.quad	SgaPW_srt+272


==================== Asm code ====================
2018-03-16 16:12:04.606739671 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct8_closure
.type Data.Functor.Product.$fFoldableProduct8_closure, @object
Data.Functor.Product.$fFoldableProduct8_closure:
	.quad	Data.Functor.Product.$fFoldableProduct8_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.607634784 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct8_entry
.type Data.Functor.Product.$fFoldableProduct8_entry, @object
Data.Functor.Product.$fFoldableProduct8_entry:
_cgbEl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbEm
_cgbEn:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cgbEk
_cgbEj:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq Data.Semigroup.Internal.$fMonoidEndo_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *Data.Semigroup.Internal.$fMonoidDual_entry@gotpcrel(%rip)
_cgbEm:
	jmp *-16(%r13)
_cgbEk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Product.$fFoldableProduct8_entry, .-Data.Functor.Product.$fFoldableProduct8_entry


==================== Asm code ====================
2018-03-16 16:12:04.608351156 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct8_info
.type Data.Functor.Product.$fFoldableProduct8_info, @object
Data.Functor.Product.$fFoldableProduct8_info:
	.quad	Data.Functor.Product.$fFoldableProduct8_entry
	.quad	0
	.quad	4294967317
	.quad	SgaPW_srt+288


==================== Asm code ====================
2018-03-16 16:12:04.612890393 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldl_closure
.type Data.Functor.Product.$w$cfoldl_closure, @object
Data.Functor.Product.$w$cfoldl_closure:
	.quad	Data.Functor.Product.$w$cfoldl_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.613691196 UTC

.section .text
.align 8
f1_sgaws_entry:
_cgbEF:
	movq %rsi,%rax
	movq %r14,%rsi
	movq %rax,%r14
	movq 6(%rbx),%rbx
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
	.size f1_sgaws_entry, .-f1_sgaws_entry


==================== Asm code ====================
2018-03-16 16:12:04.614258855 UTC

.section .data.rel.ro
.align 8
.align 1
f1_sgaws_info:
	.quad	f1_sgaws_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.615015746 UTC

.section .text
.align 8
sat_sgawv_entry:
_cgbEM:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbEN
_cgbEO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pppp_info@gotpcrel(%rip),%rax
	movq %rax,-56(%rbp)
	leaq Data.Functor.Product.$fFoldableProduct8_closure(%rip),%rax
	movq %rax,-48(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-56,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbEN:
	jmp *-16(%r13)
	.size sat_sgawv_entry, .-sat_sgawv_entry


==================== Asm code ====================
2018-03-16 16:12:04.615679166 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgawv_info:
	.quad	sat_sgawv_entry
	.quad	4
	.quad	4294967311
	.quad	SgaPW_srt+296


==================== Asm code ====================
2018-03-16 16:12:04.616559548 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cfoldl_entry
.type Data.Functor.Product.$w$cfoldl_entry, @object
Data.Functor.Product.$w$cfoldl_entry:
_cgbEP:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbEQ
_cgbER:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cgbET
_cgbES:
	leaq f1_sgaws_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %rdi,-48(%r12)
	leaq sat_sgawv_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	leaq -54(%r12),%rax
	movq %rax,(%r12)
	movq %rsi,%r14
	movq stg_ap_pppp_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%rbp)
	leaq Data.Functor.Product.$fFoldableProduct8_closure(%rip),%rbx
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq (%rbp),%rax
	movq %rax,-8(%rbp)
	leaq -40(%r12),%rax
	movq %rax,(%rbp)
	addq $-32,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbET:
	movq $64,904(%r13)
_cgbEQ:
	leaq Data.Functor.Product.$w$cfoldl_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cfoldl_entry, .-Data.Functor.Product.$w$cfoldl_entry


==================== Asm code ====================
2018-03-16 16:12:04.617376055 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldl_info
.type Data.Functor.Product.$w$cfoldl_info, @object
Data.Functor.Product.$w$cfoldl_info:
	.quad	Data.Functor.Product.$w$cfoldl_entry
	.quad	0
	.quad	12884901902
	.quad	25769803802
	.quad	SgaPW_srt+296


==================== Asm code ====================
2018-03-16 16:12:04.621352654 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldl_closure
.type Data.Functor.Product.$fFoldableProduct_$cfoldl_closure, @object
Data.Functor.Product.$fFoldableProduct_$cfoldl_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldl_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.622248642 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cfoldl_entry
.type Data.Functor.Product.$fFoldableProduct_$cfoldl_entry, @object
Data.Functor.Product.$fFoldableProduct_$cfoldl_entry:
_cgbFp:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbFq
_cgbFr:
	leaq block_cgbFm_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgbFm
_cgbFn:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbFq:
	leaq Data.Functor.Product.$fFoldableProduct_$cfoldl_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cfoldl_entry, .-Data.Functor.Product.$fFoldableProduct_$cfoldl_entry


==================== Asm code ====================
2018-03-16 16:12:04.622927454 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldl_info
.type Data.Functor.Product.$fFoldableProduct_$cfoldl_info, @object
Data.Functor.Product.$fFoldableProduct_$cfoldl_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldl_entry
	.quad	0
	.quad	12884901902
	.quad	21474836505
	.quad	SgaPW_srt+304


==================== Asm code ====================
2018-03-16 16:12:04.623640287 UTC

.section .text
.align 8
_cgbFm:
_cgbFm:
	movq 7(%rbx),%r9
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cfoldl_entry
	.size _cgbFm, .-_cgbFm


==================== Asm code ====================
2018-03-16 16:12:04.624229866 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbFm_info:
	.quad	_cgbFm
	.quad	4
	.quad	4294967326
	.quad	SgaPW_srt+304


==================== Asm code ====================
2018-03-16 16:12:04.626100904 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl2_rg5nY_bytes:
	.asciz "foldl1: empty structure"


==================== Asm code ====================
2018-03-16 16:12:04.629062593 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct7_closure
.type Data.Functor.Product.$fFoldableProduct7_closure, @object
Data.Functor.Product.$fFoldableProduct7_closure:
	.quad	Data.Functor.Product.$fFoldableProduct7_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.630023054 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct7_entry
.type Data.Functor.Product.$fFoldableProduct7_entry, @object
Data.Functor.Product.$fFoldableProduct7_entry:
_cgbFQ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbFR
_cgbFS:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cgbFN
_cgbFM:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_cgbFO_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl2_rg5nY_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cgbFR:
	jmp *-16(%r13)
_cgbFN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Product.$fFoldableProduct7_entry, .-Data.Functor.Product.$fFoldableProduct7_entry


==================== Asm code ====================
2018-03-16 16:12:04.630769652 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct7_info
.type Data.Functor.Product.$fFoldableProduct7_info, @object
Data.Functor.Product.$fFoldableProduct7_info:
	.quad	Data.Functor.Product.$fFoldableProduct7_entry
	.quad	0
	.quad	4294967317
	.quad	SgaPW_srt+216


==================== Asm code ====================
2018-03-16 16:12:04.631375889 UTC

.section .text
.align 8
_cgbFO:
_cgbFO:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size _cgbFO, .-_cgbFO


==================== Asm code ====================
2018-03-16 16:12:04.631963896 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbFO_info:
	.quad	_cgbFO
	.quad	0
	.quad	4294967326
	.quad	SgaPW_srt+216


==================== Asm code ====================
2018-03-16 16:12:04.638846603 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldl1_closure
.type Data.Functor.Product.$w$cfoldl1_closure, @object
Data.Functor.Product.$w$cfoldl1_closure:
	.quad	Data.Functor.Product.$w$cfoldl1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.63977134 UTC

.section .text
.align 8
sat_sgawP_entry:
_cgbGs:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbGt
_cgbGu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cgbGl_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgbGl
_cgbGm:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbGt:
	jmp *-16(%r13)
	.size sat_sgawP_entry, .-sat_sgawP_entry


==================== Asm code ====================
2018-03-16 16:12:04.640468289 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgawP_info:
	.quad	sat_sgawP_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.641188545 UTC

.section .text
.align 8
_cgbGl:
_cgbGl:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cgbGp
_cgbGq:
	movq %rax,%rsi
	movq 6(%rbx),%r14
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_cgbGp:
	movq %rax,%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cgbGl, .-_cgbGl


==================== Asm code ====================
2018-03-16 16:12:04.641846507 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbGl_info:
	.quad	_cgbGl
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.642612277 UTC

.section .text
.align 8
f1_sgawK_entry:
_cgbGD:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cgbGH
_cgbGG:
	movq 6(%rbx),%rax
	leaq sat_sgawP_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgbGH:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size f1_sgawK_entry, .-f1_sgawK_entry


==================== Asm code ====================
2018-03-16 16:12:04.643292829 UTC

.section .data.rel.ro
.align 8
.align 1
f1_sgawK_info:
	.quad	f1_sgawK_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.644090821 UTC

.section .text
.align 8
sat_sgawQ_entry:
_cgbGM:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbGN
_cgbGO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pppp_info@gotpcrel(%rip),%rax
	movq %rax,-56(%rbp)
	leaq Data.Functor.Product.$fFoldableProduct8_closure(%rip),%rax
	movq %rax,-48(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-24(%rbp)
	addq $-56,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbGN:
	jmp *-16(%r13)
	.size sat_sgawQ_entry, .-sat_sgawQ_entry


==================== Asm code ====================
2018-03-16 16:12:04.644768733 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgawQ_info:
	.quad	sat_sgawQ_entry
	.quad	3
	.quad	4294967311
	.quad	SgaPW_srt+296


==================== Asm code ====================
2018-03-16 16:12:04.645722111 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cfoldl1_entry
.type Data.Functor.Product.$w$cfoldl1_entry, @object
Data.Functor.Product.$w$cfoldl1_entry:
_cgbGV:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbGW
_cgbGX:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cgbGZ
_cgbGY:
	leaq f1_sgawK_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %rdi,-40(%r12)
	leaq sat_sgawQ_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	movq %r8,-8(%r12)
	leaq -46(%r12),%rax
	movq %rax,(%r12)
	leaq block_cgbGP_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rsi,%r14
	movq stg_ap_pppp_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%rbp)
	leaq Data.Functor.Product.$fFoldableProduct8_closure(%rip),%rbx
	movq %rbx,-40(%rbp)
	movq %rax,-32(%rbp)
	movq %r9,-24(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-16(%rbp)
	addq $-48,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbGZ:
	movq $56,904(%r13)
_cgbGW:
	leaq Data.Functor.Product.$w$cfoldl1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cfoldl1_entry, .-Data.Functor.Product.$w$cfoldl1_entry


==================== Asm code ====================
2018-03-16 16:12:04.646527969 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldl1_info
.type Data.Functor.Product.$w$cfoldl1_info, @object
Data.Functor.Product.$w$cfoldl1_info:
	.quad	Data.Functor.Product.$w$cfoldl1_entry
	.quad	0
	.quad	107374182414
	.quad	21474836505
	.quad	SgaPW_srt+296


==================== Asm code ====================
2018-03-16 16:12:04.647296655 UTC

.section .text
.align 8
_cgbGP:
_cgbGP:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cgbGS
_cgbGT:
	movq 6(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_cgbGS:
	leaq Data.Functor.Product.$fFoldableProduct7_closure(%rip),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cgbGP, .-_cgbGP


==================== Asm code ====================
2018-03-16 16:12:04.647882699 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbGP_info:
	.quad	_cgbGP
	.quad	0
	.quad	4294967326
	.quad	SgaPW_srt+328


==================== Asm code ====================
2018-03-16 16:12:04.651640459 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldl1_closure
.type Data.Functor.Product.$fFoldableProduct_$cfoldl1_closure, @object
Data.Functor.Product.$fFoldableProduct_$cfoldl1_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldl1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.652534097 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cfoldl1_entry
.type Data.Functor.Product.$fFoldableProduct_$cfoldl1_entry, @object
Data.Functor.Product.$fFoldableProduct_$cfoldl1_entry:
_cgbHX:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbHY
_cgbHZ:
	leaq block_cgbHU_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cgbHU
_cgbHV:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbHY:
	leaq Data.Functor.Product.$fFoldableProduct_$cfoldl1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cfoldl1_entry, .-Data.Functor.Product.$fFoldableProduct_$cfoldl1_entry


==================== Asm code ====================
2018-03-16 16:12:04.653232031 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldl1_info
.type Data.Functor.Product.$fFoldableProduct_$cfoldl1_info, @object
Data.Functor.Product.$fFoldableProduct_$cfoldl1_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldl1_entry
	.quad	0
	.quad	21474836494
	.quad	17179869208
	.quad	SgaPW_srt+320


==================== Asm code ====================
2018-03-16 16:12:04.65398541 UTC

.section .text
.align 8
_cgbHU:
_cgbHU:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cfoldl1_entry
	.size _cgbHU, .-_cgbHU


==================== Asm code ====================
2018-03-16 16:12:04.654561492 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbHU_info:
	.quad	_cgbHU
	.quad	3
	.quad	4294967326
	.quad	SgaPW_srt+320


==================== Asm code ====================
2018-03-16 16:12:04.65938641 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldr'_closure
.type Data.Functor.Product.$w$cfoldr'_closure, @object
Data.Functor.Product.$w$cfoldr'_closure:
	.quad	Data.Functor.Product.$w$cfoldr'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.660836374 UTC

.section .text
.align 8
f1_sgax6_entry:
_cgbIp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbIq
_cgbIr:
	leaq block_cgbIn_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rax
	movq %rdi,%rsi
	movq 5(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_cgbIq:
	jmp *-8(%r13)
	.size f1_sgax6_entry, .-f1_sgax6_entry


==================== Asm code ====================
2018-03-16 16:12:04.661619596 UTC

.section .data.rel.ro
.align 8
.align 1
f1_sgax6_info:
	.quad	f1_sgax6_entry
	.quad	1
	.quad	9
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:04.662291032 UTC

.section .text
.align 8
_cgbIn:
_cgbIn:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size _cgbIn, .-_cgbIn


==================== Asm code ====================
2018-03-16 16:12:04.662883665 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbIn_info:
	.quad	_cgbIn
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.663668179 UTC

.section .text
.align 8
sat_sgaxb_entry:
_cgbIx:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbIy
_cgbIz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pppp_info@gotpcrel(%rip),%rax
	movq %rax,-56(%rbp)
	leaq Data.Functor.Product.$fFoldableProduct8_closure(%rip),%rax
	movq %rax,-48(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq GHC.Base.id_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-24(%rbp)
	addq $-56,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbIy:
	jmp *-16(%r13)
	.size sat_sgaxb_entry, .-sat_sgaxb_entry


==================== Asm code ====================
2018-03-16 16:12:04.664370279 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaxb_info:
	.quad	sat_sgaxb_entry
	.quad	3
	.quad	4294967311
	.quad	SgaPW_srt+296


==================== Asm code ====================
2018-03-16 16:12:04.665433235 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cfoldr'_entry
.type Data.Functor.Product.$w$cfoldr'_entry, @object
Data.Functor.Product.$w$cfoldr'_entry:
_cgbIA:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbIB
_cgbIC:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cgbIE
_cgbID:
	leaq f1_sgax6_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %rdi,-40(%r12)
	leaq sat_sgaxb_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	movq %r9,-8(%r12)
	leaq -45(%r12),%rax
	movq %rax,(%r12)
	movq %rsi,%r14
	movq stg_ap_ppppp_info@gotpcrel(%rip),%rbx
	movq %rbx,-40(%rbp)
	leaq Data.Functor.Product.$fFoldableProduct8_closure(%rip),%rbx
	movq %rbx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq (%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-8(%rbp)
	movq %r8,(%rbp)
	addq $-40,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbIE:
	movq $56,904(%r13)
_cgbIB:
	leaq Data.Functor.Product.$w$cfoldr'_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cfoldr'_entry, .-Data.Functor.Product.$w$cfoldr'_entry


==================== Asm code ====================
2018-03-16 16:12:04.666175324 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldr'_info
.type Data.Functor.Product.$w$cfoldr'_info, @object
Data.Functor.Product.$w$cfoldr'_info:
	.quad	Data.Functor.Product.$w$cfoldr'_entry
	.quad	0
	.quad	279172874254
	.quad	25769803802
	.quad	SgaPW_srt+296


==================== Asm code ====================
2018-03-16 16:12:04.669572952 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldr'_closure
.type Data.Functor.Product.$fFoldableProduct_$cfoldr'_closure, @object
Data.Functor.Product.$fFoldableProduct_$cfoldr'_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldr'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.67046172 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cfoldr'_entry
.type Data.Functor.Product.$fFoldableProduct_$cfoldr'_entry, @object
Data.Functor.Product.$fFoldableProduct_$cfoldr'_entry:
_cgbJg:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbJh
_cgbJi:
	leaq block_cgbJd_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgbJd
_cgbJe:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbJh:
	leaq Data.Functor.Product.$fFoldableProduct_$cfoldr'_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cfoldr'_entry, .-Data.Functor.Product.$fFoldableProduct_$cfoldr'_entry


==================== Asm code ====================
2018-03-16 16:12:04.671149581 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldr'_info
.type Data.Functor.Product.$fFoldableProduct_$cfoldr'_info, @object
Data.Functor.Product.$fFoldableProduct_$cfoldr'_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldr'_entry
	.quad	0
	.quad	12884901902
	.quad	21474836505
	.quad	SgaPW_srt+344


==================== Asm code ====================
2018-03-16 16:12:04.671858091 UTC

.section .text
.align 8
_cgbJd:
_cgbJd:
	movq 7(%rbx),%r9
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cfoldr'_entry
	.size _cgbJd, .-_cgbJd


==================== Asm code ====================
2018-03-16 16:12:04.672463064 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbJd_info:
	.quad	_cgbJd
	.quad	4
	.quad	4294967326
	.quad	SgaPW_srt+344


==================== Asm code ====================
2018-03-16 16:12:04.676303559 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldr_closure
.type Data.Functor.Product.$w$cfoldr_closure, @object
Data.Functor.Product.$w$cfoldr_closure:
	.quad	Data.Functor.Product.$w$cfoldr_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.677154024 UTC

.section .text
.align 8
sat_sgaxq_entry:
_cgbJG:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbJH
_cgbJI:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pppp_info@gotpcrel(%rip),%rax
	movq %rax,-56(%rbp)
	movq Data.Semigroup.Internal.$fMonoidEndo_closure@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-56,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbJH:
	jmp *-16(%r13)
	.size sat_sgaxq_entry, .-sat_sgaxq_entry


==================== Asm code ====================
2018-03-16 16:12:04.677896101 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaxq_info:
	.quad	sat_sgaxq_entry
	.quad	4
	.quad	4294967311
	.quad	SgaPW_srt+288


==================== Asm code ====================
2018-03-16 16:12:04.678802731 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cfoldr_entry
.type Data.Functor.Product.$w$cfoldr_entry, @object
Data.Functor.Product.$w$cfoldr_entry:
_cgbJJ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbJK
_cgbJL:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cgbJN
_cgbJM:
	leaq sat_sgaxq_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq (%rbp),%rax
	movq %rax,(%r12)
	movq stg_ap_pppp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq Data.Semigroup.Internal.$fMonoidEndo_closure@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	leaq -40(%r12),%rax
	movq %rax,(%rbp)
	addq $-32,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbJN:
	movq $48,904(%r13)
_cgbJK:
	leaq Data.Functor.Product.$w$cfoldr_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cfoldr_entry, .-Data.Functor.Product.$w$cfoldr_entry


==================== Asm code ====================
2018-03-16 16:12:04.679555178 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldr_info
.type Data.Functor.Product.$w$cfoldr_info, @object
Data.Functor.Product.$w$cfoldr_info:
	.quad	Data.Functor.Product.$w$cfoldr_entry
	.quad	0
	.quad	2203318222862
	.quad	25769803802
	.quad	SgaPW_srt+288


==================== Asm code ====================
2018-03-16 16:12:04.683581195 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldr_closure
.type Data.Functor.Product.$fFoldableProduct_$cfoldr_closure, @object
Data.Functor.Product.$fFoldableProduct_$cfoldr_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldr_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.684487524 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cfoldr_entry
.type Data.Functor.Product.$fFoldableProduct_$cfoldr_entry, @object
Data.Functor.Product.$fFoldableProduct_$cfoldr_entry:
_cgbKf:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbKg
_cgbKh:
	leaq block_cgbKc_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgbKc
_cgbKd:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbKg:
	leaq Data.Functor.Product.$fFoldableProduct_$cfoldr_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cfoldr_entry, .-Data.Functor.Product.$fFoldableProduct_$cfoldr_entry


==================== Asm code ====================
2018-03-16 16:12:04.685144161 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldr_info
.type Data.Functor.Product.$fFoldableProduct_$cfoldr_info, @object
Data.Functor.Product.$fFoldableProduct_$cfoldr_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldr_entry
	.quad	0
	.quad	12884901902
	.quad	21474836505
	.quad	SgaPW_srt+360


==================== Asm code ====================
2018-03-16 16:12:04.685856648 UTC

.section .text
.align 8
_cgbKc:
_cgbKc:
	movq 7(%rbx),%r9
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cfoldr_entry
	.size _cgbKc, .-_cgbKc


==================== Asm code ====================
2018-03-16 16:12:04.68646445 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbKc_info:
	.quad	_cgbKc
	.quad	4
	.quad	4294967326
	.quad	SgaPW_srt+360


==================== Asm code ====================
2018-03-16 16:12:04.691422309 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldl'_closure
.type Data.Functor.Product.$w$cfoldl'_closure, @object
Data.Functor.Product.$w$cfoldl'_closure:
	.quad	Data.Functor.Product.$w$cfoldl'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.692265211 UTC

.section .text
.align 8
f1_sgaxF_entry:
_cgbKI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbKJ
_cgbKK:
	leaq block_cgbKG_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rax
	movq %r14,%rsi
	movq %rdi,%r14
	movq 5(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_cgbKJ:
	jmp *-8(%r13)
	.size f1_sgaxF_entry, .-f1_sgaxF_entry


==================== Asm code ====================
2018-03-16 16:12:04.692921173 UTC

.section .data.rel.ro
.align 8
.align 1
f1_sgaxF_info:
	.quad	f1_sgaxF_entry
	.quad	1
	.quad	9
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:04.693618192 UTC

.section .text
.align 8
_cgbKG:
_cgbKG:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size _cgbKG, .-_cgbKG


==================== Asm code ====================
2018-03-16 16:12:04.694192902 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbKG_info:
	.quad	_cgbKG
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.694968006 UTC

.section .text
.align 8
sat_sgaxK_entry:
_cgbKQ:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbKR
_cgbKS:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pppp_info@gotpcrel(%rip),%rax
	movq %rax,-56(%rbp)
	movq Data.Semigroup.Internal.$fMonoidEndo_closure@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq GHC.Base.id_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-24(%rbp)
	addq $-56,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbKR:
	jmp *-16(%r13)
	.size sat_sgaxK_entry, .-sat_sgaxK_entry


==================== Asm code ====================
2018-03-16 16:12:04.695677467 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaxK_info:
	.quad	sat_sgaxK_entry
	.quad	3
	.quad	4294967311
	.quad	SgaPW_srt+288


==================== Asm code ====================
2018-03-16 16:12:04.69656202 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cfoldl'_entry
.type Data.Functor.Product.$w$cfoldl'_entry, @object
Data.Functor.Product.$w$cfoldl'_entry:
_cgbKT:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbKU
_cgbKV:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cgbKX
_cgbKW:
	leaq f1_sgaxF_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %rdi,-40(%r12)
	leaq sat_sgaxK_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %rsi,-16(%r12)
	movq (%rbp),%rax
	movq %rax,-8(%r12)
	leaq -45(%r12),%rax
	movq %rax,(%r12)
	movq stg_ap_ppppp_info@gotpcrel(%rip),%rbx
	movq %rbx,-40(%rbp)
	movq Data.Semigroup.Internal.$fMonoidEndo_closure@gotpcrel(%rip),%rbx
	movq %rbx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %r9,-16(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-8(%rbp)
	movq %r8,(%rbp)
	addq $-40,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbKX:
	movq $56,904(%r13)
_cgbKU:
	leaq Data.Functor.Product.$w$cfoldl'_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cfoldl'_entry, .-Data.Functor.Product.$w$cfoldl'_entry


==================== Asm code ====================
2018-03-16 16:12:04.697370049 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldl'_info
.type Data.Functor.Product.$w$cfoldl'_info, @object
Data.Functor.Product.$w$cfoldl'_info:
	.quad	Data.Functor.Product.$w$cfoldl'_entry
	.quad	0
	.quad	8800387989518
	.quad	25769803802
	.quad	SgaPW_srt+288


==================== Asm code ====================
2018-03-16 16:12:04.700713452 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldl'_closure
.type Data.Functor.Product.$fFoldableProduct_$cfoldl'_closure, @object
Data.Functor.Product.$fFoldableProduct_$cfoldl'_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldl'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.702153892 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cfoldl'_entry
.type Data.Functor.Product.$fFoldableProduct_$cfoldl'_entry, @object
Data.Functor.Product.$fFoldableProduct_$cfoldl'_entry:
_cgbLz:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbLA
_cgbLB:
	leaq block_cgbLw_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgbLw
_cgbLx:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbLA:
	leaq Data.Functor.Product.$fFoldableProduct_$cfoldl'_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cfoldl'_entry, .-Data.Functor.Product.$fFoldableProduct_$cfoldl'_entry


==================== Asm code ====================
2018-03-16 16:12:04.702922582 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldl'_info
.type Data.Functor.Product.$fFoldableProduct_$cfoldl'_info, @object
Data.Functor.Product.$fFoldableProduct_$cfoldl'_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldl'_entry
	.quad	0
	.quad	12884901902
	.quad	21474836505
	.quad	SgaPW_srt+376


==================== Asm code ====================
2018-03-16 16:12:04.703588516 UTC

.section .text
.align 8
_cgbLw:
_cgbLw:
	movq 7(%rbx),%r9
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cfoldl'_entry
	.size _cgbLw, .-_cgbLw


==================== Asm code ====================
2018-03-16 16:12:04.704182881 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbLw_info:
	.quad	_cgbLw
	.quad	4
	.quad	4294967326
	.quad	SgaPW_srt+376


==================== Asm code ====================
2018-03-16 16:12:04.707604248 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct5_closure
.type Data.Functor.Product.$fFoldableProduct5_closure, @object
Data.Functor.Product.$fFoldableProduct5_closure:
	.quad	Data.Functor.Product.$fFoldableProduct5_info


==================== Asm code ====================
2018-03-16 16:12:04.708477971 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct5_entry
.type Data.Functor.Product.$fFoldableProduct5_entry, @object
Data.Functor.Product.$fFoldableProduct5_entry:
_cgbLY:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbM5
_cgbM6:
	leaq block_cgbLV_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cgbLV
_cgbLW:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbM5:
	leaq Data.Functor.Product.$fFoldableProduct5_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct5_entry, .-Data.Functor.Product.$fFoldableProduct5_entry


==================== Asm code ====================
2018-03-16 16:12:04.709130021 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct5_info
.type Data.Functor.Product.$fFoldableProduct5_info, @object
Data.Functor.Product.$fFoldableProduct5_info:
	.quad	Data.Functor.Product.$fFoldableProduct5_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.709898374 UTC

.section .text
.align 8
_cgbLV:
_cgbLV:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cgbM9
_cgbM8:
	movq 7(%rbx),%rax
	incq %rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgbM9:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgbLV, .-_cgbLV


==================== Asm code ====================
2018-03-16 16:12:04.710478593 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbLV_info:
	.quad	_cgbLV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.713732138 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$clength_closure
.type Data.Functor.Product.$fFoldableProduct_$clength_closure, @object
Data.Functor.Product.$fFoldableProduct_$clength_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$clength_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.714523899 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$clength_entry
.type Data.Functor.Product.$fFoldableProduct_$clength_entry, @object
Data.Functor.Product.$fFoldableProduct_$clength_entry:
_cgbMv:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbMw
_cgbMx:
	leaq block_cgbMs_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cgbMs
_cgbMt:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbMw:
	leaq Data.Functor.Product.$fFoldableProduct_$clength_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$clength_entry, .-Data.Functor.Product.$fFoldableProduct_$clength_entry


==================== Asm code ====================
2018-03-16 16:12:04.71519183 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$clength_info
.type Data.Functor.Product.$fFoldableProduct_$clength_info, @object
Data.Functor.Product.$fFoldableProduct_$clength_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$clength_entry
	.quad	0
	.quad	21474836494
	.quad	12884901911
	.quad	SgaPW_srt+376


==================== Asm code ====================
2018-03-16 16:12:04.715897581 UTC

.section .text
.align 8
_cgbMs:
_cgbMs:
	movq 7(%rbx),%r9
	leaq Data.Functor.Product.$fFoldableProduct4_closure+1(%rip),%r8
	leaq Data.Functor.Product.$fFoldableProduct5_closure+2(%rip),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,16(%rbp)
	addq $16,%rbp
	jmp Data.Functor.Product.$w$cfoldl'_entry
	.size _cgbMs, .-_cgbMs


==================== Asm code ====================
2018-03-16 16:12:04.716562489 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbMs_info:
	.quad	_cgbMs
	.quad	2
	.quad	4294967326
	.quad	SgaPW_srt+376


==================== Asm code ====================
2018-03-16 16:12:04.718449303 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl3_rg5nZ_bytes:
	.asciz "foldr1: empty structure"


==================== Asm code ====================
2018-03-16 16:12:04.721457743 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct9_closure
.type Data.Functor.Product.$fFoldableProduct9_closure, @object
Data.Functor.Product.$fFoldableProduct9_closure:
	.quad	Data.Functor.Product.$fFoldableProduct9_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.722459632 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct9_entry
.type Data.Functor.Product.$fFoldableProduct9_entry, @object
Data.Functor.Product.$fFoldableProduct9_entry:
_cgbMW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbMX
_cgbMY:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cgbMT
_cgbMS:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_cgbMU_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl3_rg5nZ_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cgbMX:
	jmp *-16(%r13)
_cgbMT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Product.$fFoldableProduct9_entry, .-Data.Functor.Product.$fFoldableProduct9_entry


==================== Asm code ====================
2018-03-16 16:12:04.723194016 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct9_info
.type Data.Functor.Product.$fFoldableProduct9_info, @object
Data.Functor.Product.$fFoldableProduct9_info:
	.quad	Data.Functor.Product.$fFoldableProduct9_entry
	.quad	0
	.quad	4294967317
	.quad	SgaPW_srt+216


==================== Asm code ====================
2018-03-16 16:12:04.72385322 UTC

.section .text
.align 8
_cgbMU:
_cgbMU:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size _cgbMU, .-_cgbMU


==================== Asm code ====================
2018-03-16 16:12:04.724421856 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbMU_info:
	.quad	_cgbMU
	.quad	0
	.quad	4294967326
	.quad	SgaPW_srt+216


==================== Asm code ====================
2018-03-16 16:12:04.731084677 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldr1_closure
.type Data.Functor.Product.$w$cfoldr1_closure, @object
Data.Functor.Product.$w$cfoldr1_closure:
	.quad	Data.Functor.Product.$w$cfoldr1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.732021197 UTC

.section .text
.align 8
sat_sgayf_entry:
_cgbNy:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbNz
_cgbNA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cgbNr_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgbNr
_cgbNs:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbNz:
	jmp *-16(%r13)
	.size sat_sgayf_entry, .-sat_sgayf_entry


==================== Asm code ====================
2018-03-16 16:12:04.732719966 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgayf_info:
	.quad	sat_sgayf_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.733515681 UTC

.section .text
.align 8
_cgbNr:
_cgbNr:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cgbNv
_cgbNw:
	movq 6(%rbx),%rsi
	movq %rax,%r14
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_cgbNv:
	movq %rax,%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cgbNr, .-_cgbNr


==================== Asm code ====================
2018-03-16 16:12:04.734151688 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbNr_info:
	.quad	_cgbNr
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.734864543 UTC

.section .text
.align 8
w3_sgaya_entry:
_cgbNJ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cgbNN
_cgbNM:
	movq 6(%rbx),%rax
	leaq sat_sgayf_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgbNN:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size w3_sgaya_entry, .-w3_sgaya_entry


==================== Asm code ====================
2018-03-16 16:12:04.735560265 UTC

.section .data.rel.ro
.align 8
.align 1
w3_sgaya_info:
	.quad	w3_sgaya_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.73630595 UTC

.section .text
.align 8
sat_sgayg_entry:
_cgbNS:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbNT
_cgbNU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pppp_info@gotpcrel(%rip),%rax
	movq %rax,-56(%rbp)
	movq Data.Semigroup.Internal.$fMonoidEndo_closure@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-24(%rbp)
	addq $-56,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbNT:
	jmp *-16(%r13)
	.size sat_sgayg_entry, .-sat_sgayg_entry


==================== Asm code ====================
2018-03-16 16:12:04.736991927 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgayg_info:
	.quad	sat_sgayg_entry
	.quad	3
	.quad	4294967311
	.quad	SgaPW_srt+288


==================== Asm code ====================
2018-03-16 16:12:04.737904682 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cfoldr1_entry
.type Data.Functor.Product.$w$cfoldr1_entry, @object
Data.Functor.Product.$w$cfoldr1_entry:
_cgbO1:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbO2
_cgbO3:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cgbO5
_cgbO4:
	leaq w3_sgaya_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %rdi,-40(%r12)
	leaq sat_sgayg_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %rsi,-16(%r12)
	movq %r9,-8(%r12)
	leaq -46(%r12),%rax
	movq %rax,(%r12)
	leaq block_cgbNV_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq stg_ap_pppp_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%rbp)
	movq Data.Semigroup.Internal.$fMonoidEndo_closure@gotpcrel(%rip),%rbx
	movq %rbx,-40(%rbp)
	movq %rax,-32(%rbp)
	movq %r8,-24(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-16(%rbp)
	addq $-48,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbO5:
	movq $56,904(%r13)
_cgbO2:
	leaq Data.Functor.Product.$w$cfoldr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cfoldr1_entry, .-Data.Functor.Product.$w$cfoldr1_entry


==================== Asm code ====================
2018-03-16 16:12:04.73870204 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cfoldr1_info
.type Data.Functor.Product.$w$cfoldr1_info, @object
Data.Functor.Product.$w$cfoldr1_info:
	.quad	Data.Functor.Product.$w$cfoldr1_entry
	.quad	0
	.quad	211110527500302
	.quad	21474836505
	.quad	SgaPW_srt+288


==================== Asm code ====================
2018-03-16 16:12:04.739447965 UTC

.section .text
.align 8
_cgbNV:
_cgbNV:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cgbNY
_cgbNZ:
	movq 6(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_cgbNY:
	leaq Data.Functor.Product.$fFoldableProduct9_closure(%rip),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cgbNV, .-_cgbNV


==================== Asm code ====================
2018-03-16 16:12:04.740070015 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbNV_info:
	.quad	_cgbNV
	.quad	0
	.quad	4294967326
	.quad	SgaPW_srt+408


==================== Asm code ====================
2018-03-16 16:12:04.744156624 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldr1_closure
.type Data.Functor.Product.$fFoldableProduct_$cfoldr1_closure, @object
Data.Functor.Product.$fFoldableProduct_$cfoldr1_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldr1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.744980407 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cfoldr1_entry
.type Data.Functor.Product.$fFoldableProduct_$cfoldr1_entry, @object
Data.Functor.Product.$fFoldableProduct_$cfoldr1_entry:
_cgbP3:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbP4
_cgbP5:
	leaq block_cgbP0_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cgbP0
_cgbP1:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbP4:
	leaq Data.Functor.Product.$fFoldableProduct_$cfoldr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cfoldr1_entry, .-Data.Functor.Product.$fFoldableProduct_$cfoldr1_entry


==================== Asm code ====================
2018-03-16 16:12:04.745725395 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cfoldr1_info
.type Data.Functor.Product.$fFoldableProduct_$cfoldr1_info, @object
Data.Functor.Product.$fFoldableProduct_$cfoldr1_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldr1_entry
	.quad	0
	.quad	21474836494
	.quad	17179869208
	.quad	SgaPW_srt+400


==================== Asm code ====================
2018-03-16 16:12:04.746376853 UTC

.section .text
.align 8
_cgbP0:
_cgbP0:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cfoldr1_entry
	.size _cgbP0, .-_cgbP0


==================== Asm code ====================
2018-03-16 16:12:04.746941483 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbP0_info:
	.quad	_cgbP0
	.quad	3
	.quad	4294967326
	.quad	SgaPW_srt+400


==================== Asm code ====================
2018-03-16 16:12:04.749084576 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct6_closure
.type Data.Functor.Product.$fFoldableProduct6_closure, @object
Data.Functor.Product.$fFoldableProduct6_closure:
	.quad	Data.Functor.Product.$fFoldableProduct6_info


==================== Asm code ====================
2018-03-16 16:12:04.749771509 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct6_entry
.type Data.Functor.Product.$fFoldableProduct6_entry, @object
Data.Functor.Product.$fFoldableProduct6_entry:
_cgbPo:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size Data.Functor.Product.$fFoldableProduct6_entry, .-Data.Functor.Product.$fFoldableProduct6_entry


==================== Asm code ====================
2018-03-16 16:12:04.750355644 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct6_info
.type Data.Functor.Product.$fFoldableProduct6_info, @object
Data.Functor.Product.$fFoldableProduct6_info:
	.quad	Data.Functor.Product.$fFoldableProduct6_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.754677587 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cnull_closure
.type Data.Functor.Product.$fFoldableProduct_$cnull_closure, @object
Data.Functor.Product.$fFoldableProduct_$cnull_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cnull_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.755550605 UTC

.section .text
.align 8
sat_sgayy_entry:
_cgbPK:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbPL
_cgbPM:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pppp_info@gotpcrel(%rip),%rax
	movq %rax,-56(%rbp)
	movq Data.Semigroup.Internal.$fMonoidEndo_closure@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	leaq Data.Functor.Product.$fFoldableProduct6_closure+2(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-24(%rbp)
	addq $-56,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbPL:
	jmp *-16(%r13)
	.size sat_sgayy_entry, .-sat_sgayy_entry


==================== Asm code ====================
2018-03-16 16:12:04.756274883 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgayy_info:
	.quad	sat_sgayy_entry
	.quad	2
	.quad	4294967314
	.quad	SgaPW_srt+288


==================== Asm code ====================
2018-03-16 16:12:04.757008118 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cnull_entry
.type Data.Functor.Product.$fFoldableProduct_$cnull_entry, @object
Data.Functor.Product.$fFoldableProduct_$cnull_entry:
_cgbPN:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbPO
_cgbPP:
	leaq block_cgbPB_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cgbPB
_cgbPC:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbPO:
	leaq Data.Functor.Product.$fFoldableProduct_$cnull_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cnull_entry, .-Data.Functor.Product.$fFoldableProduct_$cnull_entry


==================== Asm code ====================
2018-03-16 16:12:04.757749146 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cnull_info
.type Data.Functor.Product.$fFoldableProduct_$cnull_info, @object
Data.Functor.Product.$fFoldableProduct_$cnull_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cnull_entry
	.quad	0
	.quad	562954248388622
	.quad	12884901911
	.quad	SgaPW_srt+288


==================== Asm code ====================
2018-03-16 16:12:04.758562988 UTC

.section .text
.align 8
_cgbPB:
_cgbPB:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cgbPS
_cgbPR:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgayy_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%r14
	movq stg_ap_pppp_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq Data.Semigroup.Internal.$fMonoidEndo_closure@gotpcrel(%rip),%rbx
	movq %rbx,-8(%rbp)
	leaq Data.Functor.Product.$fFoldableProduct6_closure+2(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	leaq -24(%r12),%rax
	movq %rax,16(%rbp)
	addq $-16,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbPS:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgbPB, .-_cgbPB


==================== Asm code ====================
2018-03-16 16:12:04.759282208 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbPB_info:
	.quad	_cgbPB
	.quad	2
	.quad	4294967326
	.quad	SgaPW_srt+288


==================== Asm code ====================
2018-03-16 16:12:04.76581199 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cproduct_closure
.type Data.Functor.Product.$fFoldableProduct_$cproduct_closure, @object
Data.Functor.Product.$fFoldableProduct_$cproduct_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$cproduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.766617112 UTC

.section .text
.align 8
$dMonoid_sgayC_entry:
_cgbQt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbQu
_cgbQv:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Semigroup.Internal.$fMonoidProduct_entry@gotpcrel(%rip)
_cgbQu:
	jmp *-16(%r13)
	.size $dMonoid_sgayC_entry, .-$dMonoid_sgayC_entry


==================== Asm code ====================
2018-03-16 16:12:04.767247598 UTC

.section .data.rel.ro
.align 8
.align 1
$dMonoid_sgayC_info:
	.quad	$dMonoid_sgayC_entry
	.quad	1
	.quad	4294967312
	.quad	SgaPW_srt+432


==================== Asm code ====================
2018-03-16 16:12:04.768022547 UTC

.section .text
.align 8
sat_sgayI_entry:
_cgbQK:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbQL
_cgbQM:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	leaq Data.Functor.Product.$fFoldableProduct1_closure+1(%rip),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbQL:
	jmp *-16(%r13)
	.size sat_sgayI_entry, .-sat_sgayI_entry


==================== Asm code ====================
2018-03-16 16:12:04.768690965 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgayI_info:
	.quad	sat_sgayI_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.769484155 UTC

.section .text
.align 8
sat_sgayH_entry:
_cgbQR:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbQS
_cgbQT:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	leaq Data.Functor.Product.$fFoldableProduct1_closure+1(%rip),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbQS:
	jmp *-16(%r13)
	.size sat_sgayH_entry, .-sat_sgayH_entry


==================== Asm code ====================
2018-03-16 16:12:04.770175846 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgayH_info:
	.quad	sat_sgayH_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.770963969 UTC

.section .text
.align 8
sat_sgayJ_entry:
_cgbQU:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbQV
_cgbQW:
	leaq block_cgbQB_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgbQB
_cgbQC:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbQV:
	jmp *-8(%r13)
	.size sat_sgayJ_entry, .-sat_sgayJ_entry


==================== Asm code ====================
2018-03-16 16:12:04.771646622 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgayJ_info:
	.quad	sat_sgayJ_entry
	.quad	4
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:04.772447913 UTC

.section .text
.align 8
_cgbQB:
_cgbQB:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cgbQZ
_cgbQY:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgayI_info(%rip),%rcx
	movq %rcx,-72(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-56(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-48(%r12)
	movq %rbx,-40(%r12)
	leaq sat_sgayH_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	movq 24(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,16(%rbp)
	leaq -32(%r12),%rax
	movq %rax,24(%rbp)
	leaq -72(%r12),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_cgbQZ:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgbQB, .-_cgbQB


==================== Asm code ====================
2018-03-16 16:12:04.773192238 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbQB_info:
	.quad	_cgbQB
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.774229495 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$cproduct_entry
.type Data.Functor.Product.$fFoldableProduct_$cproduct_entry, @object
Data.Functor.Product.$fFoldableProduct_$cproduct_entry:
_cgbR1:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cgbR5
_cgbR4:
	leaq $dMonoid_sgayC_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %rdi,-40(%r12)
	leaq sat_sgayJ_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgbR5:
	movq $64,904(%r13)
	leaq Data.Functor.Product.$fFoldableProduct_$cproduct_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$cproduct_entry, .-Data.Functor.Product.$fFoldableProduct_$cproduct_entry


==================== Asm code ====================
2018-03-16 16:12:04.774932702 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$cproduct_info
.type Data.Functor.Product.$fFoldableProduct_$cproduct_info, @object
Data.Functor.Product.$fFoldableProduct_$cproduct_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$cproduct_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	SgaPW_srt+432


==================== Asm code ====================
2018-03-16 16:12:04.779198279 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$ctoList_closure
.type Data.Functor.Product.$fFoldableProduct_$ctoList_closure, @object
Data.Functor.Product.$fFoldableProduct_$ctoList_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_$ctoList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.780057204 UTC

.section .text
.align 8
sat_sgayQ_entry:
_cgbS4:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbS5
_cgbS6:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pppp_info@gotpcrel(%rip),%rax
	movq %rax,-56(%rbp)
	movq Data.Semigroup.Internal.$fMonoidEndo_closure@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq GHC.Types.:_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-24(%rbp)
	addq $-56,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbS5:
	jmp *-16(%r13)
	.size sat_sgayQ_entry, .-sat_sgayQ_entry


==================== Asm code ====================
2018-03-16 16:12:04.780788939 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgayQ_info:
	.quad	sat_sgayQ_entry
	.quad	2
	.quad	4294967314
	.quad	SgaPW_srt+288


==================== Asm code ====================
2018-03-16 16:12:04.781661484 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_$ctoList_entry
.type Data.Functor.Product.$fFoldableProduct_$ctoList_entry, @object
Data.Functor.Product.$fFoldableProduct_$ctoList_entry:
_cgbS7:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbS8
_cgbS9:
	leaq block_cgbRV_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cgbRV
_cgbRW:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbS8:
	leaq Data.Functor.Product.$fFoldableProduct_$ctoList_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_$ctoList_entry, .-Data.Functor.Product.$fFoldableProduct_$ctoList_entry


==================== Asm code ====================
2018-03-16 16:12:04.782909588 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_$ctoList_info
.type Data.Functor.Product.$fFoldableProduct_$ctoList_info, @object
Data.Functor.Product.$fFoldableProduct_$ctoList_info:
	.quad	Data.Functor.Product.$fFoldableProduct_$ctoList_entry
	.quad	0
	.quad	4503603922337806
	.quad	12884901911
	.quad	SgaPW_srt+288


==================== Asm code ====================
2018-03-16 16:12:04.783804489 UTC

.section .text
.align 8
_cgbRV:
_cgbRV:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cgbSc
_cgbSb:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgayQ_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%r14
	movq stg_ap_pppp_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq Data.Semigroup.Internal.$fMonoidEndo_closure@gotpcrel(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq GHC.Types.:_closure@gotpcrel(%rip),%rbx
	addq $2,%rbx
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	leaq -24(%r12),%rax
	movq %rax,16(%rbp)
	addq $-16,%rbp
	jmp *Data.Foldable.foldMap_entry@gotpcrel(%rip)
_cgbSc:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgbRV, .-_cgbRV


==================== Asm code ====================
2018-03-16 16:12:04.784552733 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbRV_info:
	.quad	_cgbRV
	.quad	2
	.quad	4294967326
	.quad	SgaPW_srt+288


==================== Asm code ====================
2018-03-16 16:12:04.795661673 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_closure
.type Data.Functor.Product.$fFoldableProduct_closure, @object
Data.Functor.Product.$fFoldableProduct_closure:
	.quad	Data.Functor.Product.$fFoldableProduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.796410553 UTC

.section .text
.align 8
sat_sgaz8_entry:
_cgbSQ:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cproduct_entry
	.size sat_sgaz8_entry, .-sat_sgaz8_entry


==================== Asm code ====================
2018-03-16 16:12:04.796995284 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaz8_info:
	.quad	sat_sgaz8_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	SgaPW_srt+440


==================== Asm code ====================
2018-03-16 16:12:04.797666755 UTC

.section .text
.align 8
sat_sgaz7_entry:
_cgbSY:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$csum_entry
	.size sat_sgaz7_entry, .-sat_sgaz7_entry


==================== Asm code ====================
2018-03-16 16:12:04.798237067 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaz7_info:
	.quad	sat_sgaz7_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	SgaPW_srt+208


==================== Asm code ====================
2018-03-16 16:12:04.798848494 UTC

.section .text
.align 8
sat_sgaz6_entry:
_cgbT6:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cminimum_entry
	.size sat_sgaz6_entry, .-sat_sgaz6_entry


==================== Asm code ====================
2018-03-16 16:12:04.799427421 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaz6_info:
	.quad	sat_sgaz6_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	SgaPW_srt+240


==================== Asm code ====================
2018-03-16 16:12:04.800031029 UTC

.section .text
.align 8
sat_sgaz5_entry:
_cgbTe:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cmaximum_entry
	.size sat_sgaz5_entry, .-sat_sgaz5_entry


==================== Asm code ====================
2018-03-16 16:12:04.800527112 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaz5_info:
	.quad	sat_sgaz5_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	SgaPW_srt+264


==================== Asm code ====================
2018-03-16 16:12:04.801125324 UTC

.section .text
.align 8
sat_sgaz4_entry:
_cgbTm:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$celem_entry
	.size sat_sgaz4_entry, .-sat_sgaz4_entry


==================== Asm code ====================
2018-03-16 16:12:04.802007422 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaz4_info:
	.quad	sat_sgaz4_entry
	.quad	2
	.quad	4294967307
	.quad	8589934607
	.quad	SgaPW_srt+280


==================== Asm code ====================
2018-03-16 16:12:04.802659579 UTC

.section .text
.align 8
sat_sgaz3_entry:
_cgbTu:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$clength_entry
	.size sat_sgaz3_entry, .-sat_sgaz3_entry


==================== Asm code ====================
2018-03-16 16:12:04.803225283 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaz3_info:
	.quad	sat_sgaz3_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	SgaPW_srt+392


==================== Asm code ====================
2018-03-16 16:12:04.803840385 UTC

.section .text
.align 8
sat_sgaz2_entry:
_cgbTC:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cnull_entry
	.size sat_sgaz2_entry, .-sat_sgaz2_entry


==================== Asm code ====================
2018-03-16 16:12:04.804412279 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaz2_info:
	.quad	sat_sgaz2_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	SgaPW_srt+424


==================== Asm code ====================
2018-03-16 16:12:04.80508458 UTC

.section .text
.align 8
sat_sgaz1_entry:
_cgbTK:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$ctoList_entry
	.size sat_sgaz1_entry, .-sat_sgaz1_entry


==================== Asm code ====================
2018-03-16 16:12:04.805655371 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaz1_info:
	.quad	sat_sgaz1_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	SgaPW_srt+448


==================== Asm code ====================
2018-03-16 16:12:04.806313253 UTC

.section .text
.align 8
sat_sgaz0_entry:
_cgbTS:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cfoldl1_entry
	.size sat_sgaz0_entry, .-sat_sgaz0_entry


==================== Asm code ====================
2018-03-16 16:12:04.806891217 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaz0_info:
	.quad	sat_sgaz0_entry
	.quad	2
	.quad	4294967307
	.quad	8589934607
	.quad	SgaPW_srt+336


==================== Asm code ====================
2018-03-16 16:12:04.807540645 UTC

.section .text
.align 8
sat_sgayZ_entry:
_cgbU0:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cfoldr1_entry
	.size sat_sgayZ_entry, .-sat_sgayZ_entry


==================== Asm code ====================
2018-03-16 16:12:04.808104975 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgayZ_info:
	.quad	sat_sgayZ_entry
	.quad	2
	.quad	4294967307
	.quad	8589934607
	.quad	SgaPW_srt+416


==================== Asm code ====================
2018-03-16 16:12:04.808736688 UTC

.section .text
.align 8
sat_sgayY_entry:
_cgbU8:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cfoldl'_entry
	.size sat_sgayY_entry, .-sat_sgayY_entry


==================== Asm code ====================
2018-03-16 16:12:04.809344434 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgayY_info:
	.quad	sat_sgayY_entry
	.quad	2
	.quad	4294967307
	.quad	12884901911
	.quad	SgaPW_srt+384


==================== Asm code ====================
2018-03-16 16:12:04.809970092 UTC

.section .text
.align 8
sat_sgayX_entry:
_cgbUg:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cfoldl_entry
	.size sat_sgayX_entry, .-sat_sgayX_entry


==================== Asm code ====================
2018-03-16 16:12:04.810538239 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgayX_info:
	.quad	sat_sgayX_entry
	.quad	2
	.quad	4294967307
	.quad	12884901911
	.quad	SgaPW_srt+312


==================== Asm code ====================
2018-03-16 16:12:04.811228106 UTC

.section .text
.align 8
sat_sgayW_entry:
_cgbUo:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cfoldr'_entry
	.size sat_sgayW_entry, .-sat_sgayW_entry


==================== Asm code ====================
2018-03-16 16:12:04.811806911 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgayW_info:
	.quad	sat_sgayW_entry
	.quad	2
	.quad	4294967307
	.quad	12884901911
	.quad	SgaPW_srt+352


==================== Asm code ====================
2018-03-16 16:12:04.812425094 UTC

.section .text
.align 8
sat_sgayV_entry:
_cgbUw:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cfoldr_entry
	.size sat_sgayV_entry, .-sat_sgayV_entry


==================== Asm code ====================
2018-03-16 16:12:04.813009686 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgayV_info:
	.quad	sat_sgayV_entry
	.quad	2
	.quad	4294967307
	.quad	12884901911
	.quad	SgaPW_srt+368


==================== Asm code ====================
2018-03-16 16:12:04.813891672 UTC

.section .text
.align 8
sat_sgayU_entry:
_cgbUE:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cfoldMap_entry
	.size sat_sgayU_entry, .-sat_sgayU_entry


==================== Asm code ====================
2018-03-16 16:12:04.81448745 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgayU_info:
	.quad	sat_sgayU_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:04.815099252 UTC

.section .text
.align 8
sat_sgayT_entry:
_cgbUM:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fFoldableProduct_$cfold_entry
	.size sat_sgayT_entry, .-sat_sgayT_entry


==================== Asm code ====================
2018-03-16 16:12:04.815663002 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgayT_info:
	.quad	sat_sgayT_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.816886304 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fFoldableProduct_entry
.type Data.Functor.Product.$fFoldableProduct_entry, @object
Data.Functor.Product.$fFoldableProduct_entry:
_cgbUQ:
	addq $520,%r12
	cmpq 856(%r13),%r12
	ja _cgbUU
_cgbUT:
	leaq sat_sgaz8_info(%rip),%rax
	movq %rax,-512(%r12)
	movq %r14,-504(%r12)
	movq %rsi,-496(%r12)
	leaq sat_sgaz7_info(%rip),%rax
	movq %rax,-488(%r12)
	movq %r14,-480(%r12)
	movq %rsi,-472(%r12)
	leaq sat_sgaz6_info(%rip),%rax
	movq %rax,-464(%r12)
	movq %r14,-456(%r12)
	movq %rsi,-448(%r12)
	leaq sat_sgaz5_info(%rip),%rax
	movq %rax,-440(%r12)
	movq %r14,-432(%r12)
	movq %rsi,-424(%r12)
	leaq sat_sgaz4_info(%rip),%rax
	movq %rax,-416(%r12)
	movq %r14,-408(%r12)
	movq %rsi,-400(%r12)
	leaq sat_sgaz3_info(%rip),%rax
	movq %rax,-392(%r12)
	movq %r14,-384(%r12)
	movq %rsi,-376(%r12)
	leaq sat_sgaz2_info(%rip),%rax
	movq %rax,-368(%r12)
	movq %r14,-360(%r12)
	movq %rsi,-352(%r12)
	leaq sat_sgaz1_info(%rip),%rax
	movq %rax,-344(%r12)
	movq %r14,-336(%r12)
	movq %rsi,-328(%r12)
	leaq sat_sgaz0_info(%rip),%rax
	movq %rax,-320(%r12)
	movq %r14,-312(%r12)
	movq %rsi,-304(%r12)
	leaq sat_sgayZ_info(%rip),%rax
	movq %rax,-296(%r12)
	movq %r14,-288(%r12)
	movq %rsi,-280(%r12)
	leaq sat_sgayY_info(%rip),%rax
	movq %rax,-272(%r12)
	movq %r14,-264(%r12)
	movq %rsi,-256(%r12)
	leaq sat_sgayX_info(%rip),%rax
	movq %rax,-248(%r12)
	movq %r14,-240(%r12)
	movq %rsi,-232(%r12)
	leaq sat_sgayW_info(%rip),%rax
	movq %rax,-224(%r12)
	movq %r14,-216(%r12)
	movq %rsi,-208(%r12)
	leaq sat_sgayV_info(%rip),%rax
	movq %rax,-200(%r12)
	movq %r14,-192(%r12)
	movq %rsi,-184(%r12)
	leaq sat_sgayU_info(%rip),%rax
	movq %rax,-176(%r12)
	movq %r14,-168(%r12)
	movq %rsi,-160(%r12)
	leaq sat_sgayT_info(%rip),%rax
	movq %rax,-152(%r12)
	movq %r14,-144(%r12)
	movq %rsi,-136(%r12)
	movq Data.Foldable.C:Foldable_con_info@gotpcrel(%rip),%rax
	movq %rax,-128(%r12)
	leaq -150(%r12),%rax
	movq %rax,-120(%r12)
	leaq -173(%r12),%rax
	movq %rax,-112(%r12)
	leaq -197(%r12),%rax
	movq %rax,-104(%r12)
	leaq -221(%r12),%rax
	movq %rax,-96(%r12)
	leaq -245(%r12),%rax
	movq %rax,-88(%r12)
	leaq -269(%r12),%rax
	movq %rax,-80(%r12)
	leaq -294(%r12),%rax
	movq %rax,-72(%r12)
	leaq -318(%r12),%rax
	movq %rax,-64(%r12)
	leaq -343(%r12),%rax
	movq %rax,-56(%r12)
	leaq -367(%r12),%rax
	movq %rax,-48(%r12)
	leaq -391(%r12),%rax
	movq %rax,-40(%r12)
	leaq -414(%r12),%rax
	movq %rax,-32(%r12)
	leaq -439(%r12),%rax
	movq %rax,-24(%r12)
	leaq -463(%r12),%rax
	movq %rax,-16(%r12)
	leaq -487(%r12),%rax
	movq %rax,-8(%r12)
	leaq -511(%r12),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgbUU:
	movq $520,904(%r13)
	leaq Data.Functor.Product.$fFoldableProduct_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fFoldableProduct_entry, .-Data.Functor.Product.$fFoldableProduct_entry


==================== Asm code ====================
2018-03-16 16:12:04.818101121 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fFoldableProduct_info
.type Data.Functor.Product.$fFoldableProduct_info, @object
Data.Functor.Product.$fFoldableProduct_info:
	.quad	Data.Functor.Product.$fFoldableProduct_entry
	.quad	0
	.quad	-1381159704553586674
	.quad	8589934607
	.quad	SgaPW_srt+208


==================== Asm code ====================
2018-03-16 16:12:04.822554135 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$ctraverse_closure
.type Data.Functor.Product.$w$ctraverse_closure, @object
Data.Functor.Product.$w$ctraverse_closure:
	.quad	Data.Functor.Product.$w$ctraverse_info


==================== Asm code ====================
2018-03-16 16:12:04.823876788 UTC

.section .text
.align 8
sat_sgazg_entry:
_cgbWr:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbWs
_cgbWt:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp *Data.Traversable.traverse_entry@gotpcrel(%rip)
_cgbWs:
	jmp *-16(%r13)
	.size sat_sgazg_entry, .-sat_sgazg_entry


==================== Asm code ====================
2018-03-16 16:12:04.824632969 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgazg_info:
	.quad	sat_sgazg_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.825694032 UTC

.section .text
.align 8
sat_sgazf_entry:
_cgbWy:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbWz
_cgbWA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp *Data.Traversable.traverse_entry@gotpcrel(%rip)
_cgbWz:
	jmp *-16(%r13)
	.size sat_sgazf_entry, .-sat_sgazf_entry


==================== Asm code ====================
2018-03-16 16:12:04.826325417 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgazf_info:
	.quad	sat_sgazf_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.827165233 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$ctraverse_entry
.type Data.Functor.Product.$w$ctraverse_entry, @object
Data.Functor.Product.$w$ctraverse_entry:
_cgbWB:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbWC
_cgbWD:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cgbWF
_cgbWE:
	leaq sat_sgazg_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq (%rbp),%rax
	movq %rax,-48(%r12)
	leaq sat_sgazf_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %r9,(%r12)
	movq %rdi,%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	leaq Data.Functor.Product.Pair_closure+2(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -40(%r12),%rax
	movq %rax,-8(%rbp)
	leaq -88(%r12),%rax
	movq %rax,(%rbp)
	addq $-24,%rbp
	jmp *GHC.Base.liftA2_entry@gotpcrel(%rip)
_cgbWF:
	movq $96,904(%r13)
_cgbWC:
	leaq Data.Functor.Product.$w$ctraverse_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$ctraverse_entry, .-Data.Functor.Product.$w$ctraverse_entry


==================== Asm code ====================
2018-03-16 16:12:04.827933266 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$ctraverse_info
.type Data.Functor.Product.$w$ctraverse_info, @object
Data.Functor.Product.$w$ctraverse_info:
	.quad	Data.Functor.Product.$w$ctraverse_entry
	.quad	0
	.quad	14
	.quad	25769803802


==================== Asm code ====================
2018-03-16 16:12:04.831202916 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$ctraverse_closure
.type Data.Functor.Product.$fTraversableProduct_$ctraverse_closure, @object
Data.Functor.Product.$fTraversableProduct_$ctraverse_closure:
	.quad	Data.Functor.Product.$fTraversableProduct_$ctraverse_info


==================== Asm code ====================
2018-03-16 16:12:04.831991025 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fTraversableProduct_$ctraverse_entry
.type Data.Functor.Product.$fTraversableProduct_$ctraverse_entry, @object
Data.Functor.Product.$fTraversableProduct_$ctraverse_entry:
_cgbXh:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbXi
_cgbXj:
	leaq block_cgbXe_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgbXe
_cgbXf:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbXi:
	leaq Data.Functor.Product.$fTraversableProduct_$ctraverse_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fTraversableProduct_$ctraverse_entry, .-Data.Functor.Product.$fTraversableProduct_$ctraverse_entry


==================== Asm code ====================
2018-03-16 16:12:04.832668539 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$ctraverse_info
.type Data.Functor.Product.$fTraversableProduct_$ctraverse_info, @object
Data.Functor.Product.$fTraversableProduct_$ctraverse_info:
	.quad	Data.Functor.Product.$fTraversableProduct_$ctraverse_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:12:04.833399302 UTC

.section .text
.align 8
_cgbXe:
_cgbXe:
	movq 7(%rbx),%r9
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$ctraverse_entry
	.size _cgbXe, .-_cgbXe


==================== Asm code ====================
2018-03-16 16:12:04.833957089 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbXe_info:
	.quad	_cgbXe
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.837531081 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$cp2Traversable_closure
.type Data.Functor.Product.$fTraversableProduct_$cp2Traversable_closure, @object
Data.Functor.Product.$fTraversableProduct_$cp2Traversable_closure:
	.quad	Data.Functor.Product.$fTraversableProduct_$cp2Traversable_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.838281693 UTC

.section .text
.align 8
sat_sgazs_entry:
_cgbXH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbXI
_cgbXJ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Traversable.$p2Traversable_entry@gotpcrel(%rip)
_cgbXI:
	jmp *-16(%r13)
	.size sat_sgazs_entry, .-sat_sgazs_entry


==================== Asm code ====================
2018-03-16 16:12:04.838900866 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgazs_info:
	.quad	sat_sgazs_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.839572673 UTC

.section .text
.align 8
sat_sgazr_entry:
_cgbXO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbXP
_cgbXQ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Traversable.$p2Traversable_entry@gotpcrel(%rip)
_cgbXP:
	jmp *-16(%r13)
	.size sat_sgazr_entry, .-sat_sgazr_entry


==================== Asm code ====================
2018-03-16 16:12:04.840189302 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgazr_info:
	.quad	sat_sgazr_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.840911149 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fTraversableProduct_$cp2Traversable_entry
.type Data.Functor.Product.$fTraversableProduct_$cp2Traversable_entry, @object
Data.Functor.Product.$fTraversableProduct_$cp2Traversable_entry:
_cgbXR:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cgbXV
_cgbXU:
	leaq sat_sgazs_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rsi,-24(%r12)
	leaq sat_sgazr_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp Data.Functor.Product.$fFoldableProduct_entry
_cgbXV:
	movq $48,904(%r13)
	leaq Data.Functor.Product.$fTraversableProduct_$cp2Traversable_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fTraversableProduct_$cp2Traversable_entry, .-Data.Functor.Product.$fTraversableProduct_$cp2Traversable_entry


==================== Asm code ====================
2018-03-16 16:12:04.841642778 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$cp2Traversable_info
.type Data.Functor.Product.$fTraversableProduct_$cp2Traversable_info, @object
Data.Functor.Product.$fTraversableProduct_$cp2Traversable_info:
	.quad	Data.Functor.Product.$fTraversableProduct_$cp2Traversable_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	SgaPW_srt+456


==================== Asm code ====================
2018-03-16 16:12:04.845228683 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$cp1Traversable_closure
.type Data.Functor.Product.$fTraversableProduct_$cp1Traversable_closure, @object
Data.Functor.Product.$fTraversableProduct_$cp1Traversable_closure:
	.quad	Data.Functor.Product.$fTraversableProduct_$cp1Traversable_info


==================== Asm code ====================
2018-03-16 16:12:04.846008857 UTC

.section .text
.align 8
sat_sgazw_entry:
_cgbYk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbYl
_cgbYm:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Traversable.$p1Traversable_entry@gotpcrel(%rip)
_cgbYl:
	jmp *-16(%r13)
	.size sat_sgazw_entry, .-sat_sgazw_entry


==================== Asm code ====================
2018-03-16 16:12:04.846630383 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgazw_info:
	.quad	sat_sgazw_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.847304538 UTC

.section .text
.align 8
sat_sgazv_entry:
_cgbYr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbYs
_cgbYt:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Traversable.$p1Traversable_entry@gotpcrel(%rip)
_cgbYs:
	jmp *-16(%r13)
	.size sat_sgazv_entry, .-sat_sgazv_entry


==================== Asm code ====================
2018-03-16 16:12:04.847935328 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgazv_info:
	.quad	sat_sgazv_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.848656548 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fTraversableProduct_$cp1Traversable_entry
.type Data.Functor.Product.$fTraversableProduct_$cp1Traversable_entry, @object
Data.Functor.Product.$fTraversableProduct_$cp1Traversable_entry:
_cgbYu:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cgbYy
_cgbYx:
	leaq sat_sgazw_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rsi,-24(%r12)
	leaq sat_sgazv_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp Data.Functor.Product.$fFunctorProduct_entry
_cgbYy:
	movq $48,904(%r13)
	leaq Data.Functor.Product.$fTraversableProduct_$cp1Traversable_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fTraversableProduct_$cp1Traversable_entry, .-Data.Functor.Product.$fTraversableProduct_$cp1Traversable_entry


==================== Asm code ====================
2018-03-16 16:12:04.849389894 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$cp1Traversable_info
.type Data.Functor.Product.$fTraversableProduct_$cp1Traversable_info, @object
Data.Functor.Product.$fTraversableProduct_$cp1Traversable_info:
	.quad	Data.Functor.Product.$fTraversableProduct_$cp1Traversable_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.852633672 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$csequenceA_closure
.type Data.Functor.Product.$fTraversableProduct_$csequenceA_closure, @object
Data.Functor.Product.$fTraversableProduct_$csequenceA_closure:
	.quad	Data.Functor.Product.$fTraversableProduct_$csequenceA_info


==================== Asm code ====================
2018-03-16 16:12:04.853801166 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fTraversableProduct_$csequenceA_entry
.type Data.Functor.Product.$fTraversableProduct_$csequenceA_entry, @object
Data.Functor.Product.$fTraversableProduct_$csequenceA_entry:
_cgbYW:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbYX
_cgbYY:
	leaq block_cgbYT_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cgbYT
_cgbYU:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbYX:
	leaq Data.Functor.Product.$fTraversableProduct_$csequenceA_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fTraversableProduct_$csequenceA_entry, .-Data.Functor.Product.$fTraversableProduct_$csequenceA_entry


==================== Asm code ====================
2018-03-16 16:12:04.854426022 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$csequenceA_info
.type Data.Functor.Product.$fTraversableProduct_$csequenceA_info, @object
Data.Functor.Product.$fTraversableProduct_$csequenceA_info:
	.quad	Data.Functor.Product.$fTraversableProduct_$csequenceA_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:12:04.855125289 UTC

.section .text
.align 8
_cgbYT:
_cgbYT:
	movq 7(%rbx),%r9
	movq GHC.Base.id_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,24(%rbp)
	addq $24,%rbp
	jmp Data.Functor.Product.$w$ctraverse_entry
	.size _cgbYT, .-_cgbYT


==================== Asm code ====================
2018-03-16 16:12:04.855734381 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbYT_info:
	.quad	_cgbYT
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.859232378 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$cmapM_closure
.type Data.Functor.Product.$fTraversableProduct_$cmapM_closure, @object
Data.Functor.Product.$fTraversableProduct_$cmapM_closure:
	.quad	Data.Functor.Product.$fTraversableProduct_$cmapM_info


==================== Asm code ====================
2018-03-16 16:12:04.860049245 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fTraversableProduct_$cmapM_entry
.type Data.Functor.Product.$fTraversableProduct_$cmapM_entry, @object
Data.Functor.Product.$fTraversableProduct_$cmapM_entry:
_cgbZm:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbZq
_cgbZr:
	leaq block_cgbZj_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgbZj
_cgbZk:
	movq (%rbx),%rax
	jmp *(%rax)
_cgbZq:
	leaq Data.Functor.Product.$fTraversableProduct_$cmapM_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fTraversableProduct_$cmapM_entry, .-Data.Functor.Product.$fTraversableProduct_$cmapM_entry


==================== Asm code ====================
2018-03-16 16:12:04.860716519 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$cmapM_info
.type Data.Functor.Product.$fTraversableProduct_$cmapM_info, @object
Data.Functor.Product.$fTraversableProduct_$cmapM_info:
	.quad	Data.Functor.Product.$fTraversableProduct_$cmapM_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:12:04.861999408 UTC

.section .text
.align 8
_cgbZj:
_cgbZj:
	leaq block_cgbZp_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 24(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq %rax,24(%rbp)
	addq $-8,%rbp
	jmp *GHC.Base.$p1Monad_entry@gotpcrel(%rip)
	.size _cgbZj, .-_cgbZj


==================== Asm code ====================
2018-03-16 16:12:04.862709089 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbZj_info:
	.quad	_cgbZj
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.86337411 UTC

.section .text
.align 8
_cgbZp:
_cgbZp:
	movq 32(%rbp),%r9
	movq 40(%rbp),%r8
	movq %rbx,%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 8(%rbp),%rax
	movq %rax,40(%rbp)
	addq $40,%rbp
	jmp Data.Functor.Product.$w$ctraverse_entry
	.size _cgbZp, .-_cgbZp


==================== Asm code ====================
2018-03-16 16:12:04.86399638 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbZp_info:
	.quad	_cgbZp
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.86751303 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$csequence_closure
.type Data.Functor.Product.$fTraversableProduct_$csequence_closure, @object
Data.Functor.Product.$fTraversableProduct_$csequence_closure:
	.quad	Data.Functor.Product.$fTraversableProduct_$csequence_info


==================== Asm code ====================
2018-03-16 16:12:04.868383968 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fTraversableProduct_$csequence_entry
.type Data.Functor.Product.$fTraversableProduct_$csequence_entry, @object
Data.Functor.Product.$fTraversableProduct_$csequence_entry:
_cgbZW:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgc00
_cgc01:
	leaq block_cgbZT_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cgbZT
_cgbZU:
	movq (%rbx),%rax
	jmp *(%rax)
_cgc00:
	leaq Data.Functor.Product.$fTraversableProduct_$csequence_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fTraversableProduct_$csequence_entry, .-Data.Functor.Product.$fTraversableProduct_$csequence_entry


==================== Asm code ====================
2018-03-16 16:12:04.86905599 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_$csequence_info
.type Data.Functor.Product.$fTraversableProduct_$csequence_info, @object
Data.Functor.Product.$fTraversableProduct_$csequence_info:
	.quad	Data.Functor.Product.$fTraversableProduct_$csequence_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:12:04.86996498 UTC

.section .text
.align 8
_cgbZT:
_cgbZT:
	leaq block_cgbZZ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 24(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq %rax,24(%rbp)
	addq $-8,%rbp
	jmp *GHC.Base.$p1Monad_entry@gotpcrel(%rip)
	.size _cgbZT, .-_cgbZT


==================== Asm code ====================
2018-03-16 16:12:04.870552841 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbZT_info:
	.quad	_cgbZT
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.871250847 UTC

.section .text
.align 8
_cgbZZ:
_cgbZZ:
	movq 32(%rbp),%r9
	movq GHC.Base.id_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r8
	movq %rbx,%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 8(%rbp),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$ctraverse_entry
	.size _cgbZZ, .-_cgbZZ


==================== Asm code ====================
2018-03-16 16:12:04.87189019 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbZZ_info:
	.quad	_cgbZZ
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.878601161 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_closure
.type Data.Functor.Product.$fTraversableProduct_closure, @object
Data.Functor.Product.$fTraversableProduct_closure:
	.quad	Data.Functor.Product.$fTraversableProduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:04.879342727 UTC

.section .text
.align 8
sat_sgaA2_entry:
_cgc0z:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fTraversableProduct_$csequence_entry
	.size sat_sgaA2_entry, .-sat_sgaA2_entry


==================== Asm code ====================
2018-03-16 16:12:04.87993518 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaA2_info:
	.quad	sat_sgaA2_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.880539473 UTC

.section .text
.align 8
sat_sgaA1_entry:
_cgc0H:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$fTraversableProduct_$cmapM_entry
	.size sat_sgaA1_entry, .-sat_sgaA1_entry


==================== Asm code ====================
2018-03-16 16:12:04.881141228 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaA1_info:
	.quad	sat_sgaA1_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:04.881816904 UTC

.section .text
.align 8
sat_sgaA0_entry:
_cgc0P:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fTraversableProduct_$csequenceA_entry
	.size sat_sgaA0_entry, .-sat_sgaA0_entry


==================== Asm code ====================
2018-03-16 16:12:04.882375614 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaA0_info:
	.quad	sat_sgaA0_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.882980698 UTC

.section .text
.align 8
sat_sgazZ_entry:
_cgc0X:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$fTraversableProduct_$ctraverse_entry
	.size sat_sgazZ_entry, .-sat_sgazZ_entry


==================== Asm code ====================
2018-03-16 16:12:04.88354854 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgazZ_info:
	.quad	sat_sgazZ_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:04.884270405 UTC

.section .text
.align 8
sat_sgazY_entry:
_cgc14:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgc15
_cgc16:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fTraversableProduct_$cp2Traversable_entry
_cgc15:
	jmp *-16(%r13)
	.size sat_sgazY_entry, .-sat_sgazY_entry


==================== Asm code ====================
2018-03-16 16:12:04.884908173 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgazY_info:
	.quad	sat_sgazY_entry
	.quad	2
	.quad	4294967314
	.quad	SgaPW_srt+464


==================== Asm code ====================
2018-03-16 16:12:04.885669054 UTC

.section .text
.align 8
sat_sgazX_entry:
_cgc1b:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgc1c
_cgc1d:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fTraversableProduct_$cp1Traversable_entry
_cgc1c:
	jmp *-16(%r13)
	.size sat_sgazX_entry, .-sat_sgazX_entry


==================== Asm code ====================
2018-03-16 16:12:04.886308512 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgazX_info:
	.quad	sat_sgazX_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:12:04.88718097 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fTraversableProduct_entry
.type Data.Functor.Product.$fTraversableProduct_entry, @object
Data.Functor.Product.$fTraversableProduct_entry:
_cgc1f:
	addq $216,%r12
	cmpq 856(%r13),%r12
	ja _cgc1j
_cgc1i:
	leaq sat_sgaA2_info(%rip),%rax
	movq %rax,-208(%r12)
	movq %r14,-200(%r12)
	movq %rsi,-192(%r12)
	leaq sat_sgaA1_info(%rip),%rax
	movq %rax,-184(%r12)
	movq %r14,-176(%r12)
	movq %rsi,-168(%r12)
	leaq sat_sgaA0_info(%rip),%rax
	movq %rax,-160(%r12)
	movq %r14,-152(%r12)
	movq %rsi,-144(%r12)
	leaq sat_sgazZ_info(%rip),%rax
	movq %rax,-136(%r12)
	movq %r14,-128(%r12)
	movq %rsi,-120(%r12)
	leaq sat_sgazY_info(%rip),%rax
	movq %rax,-112(%r12)
	movq %r14,-96(%r12)
	movq %rsi,-88(%r12)
	leaq sat_sgazX_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq Data.Traversable.C:Traversable_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -80(%r12),%rax
	movq %rax,-40(%r12)
	leaq -112(%r12),%rax
	movq %rax,-32(%r12)
	leaq -133(%r12),%rax
	movq %rax,-24(%r12)
	leaq -158(%r12),%rax
	movq %rax,-16(%r12)
	leaq -181(%r12),%rax
	movq %rax,-8(%r12)
	leaq -206(%r12),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgc1j:
	movq $216,904(%r13)
	leaq Data.Functor.Product.$fTraversableProduct_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fTraversableProduct_entry, .-Data.Functor.Product.$fTraversableProduct_entry


==================== Asm code ====================
2018-03-16 16:12:04.888049256 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fTraversableProduct_info
.type Data.Functor.Product.$fTraversableProduct_info, @object
Data.Functor.Product.$fTraversableProduct_info:
	.quad	Data.Functor.Product.$fTraversableProduct_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	SgaPW_srt+464


==================== Asm code ====================
2018-03-16 16:12:04.893919718 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$cliftA2_closure
.type Data.Functor.Product.$fApplicativeProduct_$cliftA2_closure, @object
Data.Functor.Product.$fApplicativeProduct_$cliftA2_closure:
	.quad	Data.Functor.Product.$fApplicativeProduct_$cliftA2_info


==================== Asm code ====================
2018-03-16 16:12:04.894762601 UTC

.section .text
.align 8
sat_sgaAf_entry:
_cgc2g:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgc2h
_cgc2i:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp *GHC.Base.liftA2_entry@gotpcrel(%rip)
_cgc2h:
	jmp *-16(%r13)
	.size sat_sgaAf_entry, .-sat_sgaAf_entry


==================== Asm code ====================
2018-03-16 16:12:04.895365628 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaAf_info:
	.quad	sat_sgaAf_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.89612572 UTC

.section .text
.align 8
sat_sgaAe_entry:
_cgc2n:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgc2o
_cgc2p:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp *GHC.Base.liftA2_entry@gotpcrel(%rip)
_cgc2o:
	jmp *-16(%r13)
	.size sat_sgaAe_entry, .-sat_sgaAe_entry


==================== Asm code ====================
2018-03-16 16:12:04.896793248 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaAe_info:
	.quad	sat_sgaAe_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.897576909 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fApplicativeProduct_$cliftA2_entry
.type Data.Functor.Product.$fApplicativeProduct_$cliftA2_entry, @object
Data.Functor.Product.$fApplicativeProduct_$cliftA2_entry:
_cgc2q:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgc2s
_cgc2t:
	leaq block_cgc22_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgc22
_cgc23:
	movq (%rbx),%rax
	jmp *(%rax)
_cgc2s:
	leaq Data.Functor.Product.$fApplicativeProduct_$cliftA2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fApplicativeProduct_$cliftA2_entry, .-Data.Functor.Product.$fApplicativeProduct_$cliftA2_entry


==================== Asm code ====================
2018-03-16 16:12:04.898246395 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$cliftA2_info
.type Data.Functor.Product.$fApplicativeProduct_$cliftA2_info, @object
Data.Functor.Product.$fApplicativeProduct_$cliftA2_info:
	.quad	Data.Functor.Product.$fApplicativeProduct_$cliftA2_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:12:04.898966877 UTC

.section .text
.align 8
_cgc22:
_cgc22:
	leaq block_cgc27_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgc27
_cgc28:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgc22, .-_cgc22


==================== Asm code ====================
2018-03-16 16:12:04.899569198 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgc22_info:
	.quad	_cgc22
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.900374279 UTC

.section .text
.align 8
_cgc27:
_cgc27:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _cgc2x
_cgc2w:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgaAf_info(%rip),%rcx
	movq %rcx,-112(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-96(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-88(%r12)
	movq 8(%rbp),%rdx
	movq %rdx,-80(%r12)
	movq %rbx,-72(%r12)
	leaq sat_sgaAe_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq %rcx,-40(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	leaq Data.Functor.Product.Pair_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -64(%r12),%rax
	movq %rax,-8(%r12)
	leaq -112(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgc2x:
	movq $120,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgc27, .-_cgc27


==================== Asm code ====================
2018-03-16 16:12:04.901697048 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgc27_info:
	.quad	_cgc27
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.907435726 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$c<*>_closure
.type Data.Functor.Product.$fApplicativeProduct_$c<*>_closure, @object
Data.Functor.Product.$fApplicativeProduct_$c<*>_closure:
	.quad	Data.Functor.Product.$fApplicativeProduct_$c<*>_info


==================== Asm code ====================
2018-03-16 16:12:04.908238798 UTC

.section .text
.align 8
sat_sgaAr_entry:
_cgc3z:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgc3A
_cgc3B:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Base.<*>_entry@gotpcrel(%rip)
_cgc3A:
	jmp *-16(%r13)
	.size sat_sgaAr_entry, .-sat_sgaAr_entry


==================== Asm code ====================
2018-03-16 16:12:04.908883807 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaAr_info:
	.quad	sat_sgaAr_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.909624917 UTC

.section .text
.align 8
sat_sgaAq_entry:
_cgc3G:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgc3H
_cgc3I:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Base.<*>_entry@gotpcrel(%rip)
_cgc3H:
	jmp *-16(%r13)
	.size sat_sgaAq_entry, .-sat_sgaAq_entry


==================== Asm code ====================
2018-03-16 16:12:04.910284719 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaAq_info:
	.quad	sat_sgaAq_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.911024965 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fApplicativeProduct_$c<*>_entry
.type Data.Functor.Product.$fApplicativeProduct_$c<*>_entry, @object
Data.Functor.Product.$fApplicativeProduct_$c<*>_entry:
_cgc3J:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgc3L
_cgc3M:
	leaq block_cgc3l_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cgc3l
_cgc3m:
	movq (%rbx),%rax
	jmp *(%rax)
_cgc3L:
	leaq Data.Functor.Product.$fApplicativeProduct_$c<*>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fApplicativeProduct_$c<*>_entry, .-Data.Functor.Product.$fApplicativeProduct_$c<*>_entry


==================== Asm code ====================
2018-03-16 16:12:04.911678848 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$c<*>_info
.type Data.Functor.Product.$fApplicativeProduct_$c<*>_info, @object
Data.Functor.Product.$fApplicativeProduct_$c<*>_info:
	.quad	Data.Functor.Product.$fApplicativeProduct_$c<*>_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:12:04.912385918 UTC

.section .text
.align 8
_cgc3l:
_cgc3l:
	leaq block_cgc3q_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgc3q
_cgc3r:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgc3l, .-_cgc3l


==================== Asm code ====================
2018-03-16 16:12:04.912992907 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgc3l_info:
	.quad	_cgc3l
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.913819765 UTC

.section .text
.align 8
_cgc3q:
_cgc3q:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cgc3Q
_cgc3P:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgaAr_info(%rip),%rcx
	movq %rcx,-96(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	leaq sat_sgaAq_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	leaq Data.Functor.Product.Pair_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgc3Q:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgc3q, .-_cgc3q


==================== Asm code ====================
2018-03-16 16:12:04.914560328 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgc3q_info:
	.quad	_cgc3q
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.918729386 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$cpure_closure
.type Data.Functor.Product.$fApplicativeProduct_$cpure_closure, @object
Data.Functor.Product.$fApplicativeProduct_$cpure_closure:
	.quad	Data.Functor.Product.$fApplicativeProduct_$cpure_info


==================== Asm code ====================
2018-03-16 16:12:04.919523009 UTC

.section .text
.align 8
sat_sgaAw_entry:
_cgc4G:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgc4H
_cgc4I:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Base.pure_entry@gotpcrel(%rip)
_cgc4H:
	jmp *-16(%r13)
	.size sat_sgaAw_entry, .-sat_sgaAw_entry


==================== Asm code ====================
2018-03-16 16:12:04.920192918 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaAw_info:
	.quad	sat_sgaAw_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:12:04.920925485 UTC

.section .text
.align 8
sat_sgaAv_entry:
_cgc4N:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgc4O
_cgc4P:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Base.pure_entry@gotpcrel(%rip)
_cgc4O:
	jmp *-16(%r13)
	.size sat_sgaAv_entry, .-sat_sgaAv_entry


==================== Asm code ====================
2018-03-16 16:12:04.921620558 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaAv_info:
	.quad	sat_sgaAv_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:12:04.922398733 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fApplicativeProduct_$cpure_entry
.type Data.Functor.Product.$fApplicativeProduct_$cpure_entry, @object
Data.Functor.Product.$fApplicativeProduct_$cpure_entry:
_cgc4R:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cgc4V
_cgc4U:
	leaq sat_sgaAw_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	leaq sat_sgaAv_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-32(%r12)
	movq %rdi,-24(%r12)
	leaq Data.Functor.Product.Pair_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgc4V:
	movq $88,904(%r13)
	leaq Data.Functor.Product.$fApplicativeProduct_$cpure_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fApplicativeProduct_$cpure_entry, .-Data.Functor.Product.$fApplicativeProduct_$cpure_entry


==================== Asm code ====================
2018-03-16 16:12:04.92322625 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$cpure_info
.type Data.Functor.Product.$fApplicativeProduct_$cpure_info, @object
Data.Functor.Product.$fApplicativeProduct_$cpure_info:
	.quad	Data.Functor.Product.$fApplicativeProduct_$cpure_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:04.926901153 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_closure
.type Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_closure, @object
Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_closure:
	.quad	Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_info


==================== Asm code ====================
2018-03-16 16:12:04.927638699 UTC

.section .text
.align 8
sat_sgaAA_entry:
_cgc5s:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgc5t
_cgc5u:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.$p1Applicative_entry@gotpcrel(%rip)
_cgc5t:
	jmp *-16(%r13)
	.size sat_sgaAA_entry, .-sat_sgaAA_entry


==================== Asm code ====================
2018-03-16 16:12:04.928285445 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaAA_info:
	.quad	sat_sgaAA_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.928956163 UTC

.section .text
.align 8
sat_sgaAz_entry:
_cgc5z:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgc5A
_cgc5B:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.$p1Applicative_entry@gotpcrel(%rip)
_cgc5A:
	jmp *-16(%r13)
	.size sat_sgaAz_entry, .-sat_sgaAz_entry


==================== Asm code ====================
2018-03-16 16:12:04.92964133 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaAz_info:
	.quad	sat_sgaAz_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:04.93039518 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_entry
.type Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_entry, @object
Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_entry:
_cgc5C:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cgc5G
_cgc5F:
	leaq sat_sgaAA_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rsi,-24(%r12)
	leaq sat_sgaAz_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp Data.Functor.Product.$fFunctorProduct_entry
_cgc5G:
	movq $48,904(%r13)
	leaq Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_entry, .-Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_entry


==================== Asm code ====================
2018-03-16 16:12:04.931098965 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_info
.type Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_info, @object
Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_info:
	.quad	Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.933233155 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct1_closure
.type Data.Functor.Product.$fApplicativeProduct1_closure, @object
Data.Functor.Product.$fApplicativeProduct1_closure:
	.quad	Data.Functor.Product.$fApplicativeProduct1_info


==================== Asm code ====================
2018-03-16 16:12:04.933921733 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fApplicativeProduct1_entry
.type Data.Functor.Product.$fApplicativeProduct1_entry, @object
Data.Functor.Product.$fApplicativeProduct1_entry:
_cgc61:
	movq %rsi,%r14
	jmp *GHC.Base.breakpoint_entry@gotpcrel(%rip)
	.size Data.Functor.Product.$fApplicativeProduct1_entry, .-Data.Functor.Product.$fApplicativeProduct1_entry


==================== Asm code ====================
2018-03-16 16:12:04.934541514 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct1_info
.type Data.Functor.Product.$fApplicativeProduct1_info, @object
Data.Functor.Product.$fApplicativeProduct1_info:
	.quad	Data.Functor.Product.$fApplicativeProduct1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.940813482 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$c*>_closure
.type Data.Functor.Product.$w$c*>_closure, @object
Data.Functor.Product.$w$c*>_closure:
	.quad	Data.Functor.Product.$w$c*>_info


==================== Asm code ====================
2018-03-16 16:12:04.941654243 UTC

.section .text
.align 8
sat_sgaAM_entry:
_cgc6m:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgc6n
_cgc6o:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cgc6k_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Base.$p1Applicative_entry@gotpcrel(%rip)
_cgc6n:
	jmp *-16(%r13)
	.size sat_sgaAM_entry, .-sat_sgaAM_entry


==================== Asm code ====================
2018-03-16 16:12:04.942290847 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaAM_info:
	.quad	sat_sgaAM_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:12:04.942934343 UTC

.section .text
.align 8
_cgc6k:
_cgc6k:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	leaq Data.Functor.Product.$fApplicativeProduct1_closure+2(%rip),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Base.fmap_entry@gotpcrel(%rip)
	.size _cgc6k, .-_cgc6k


==================== Asm code ====================
2018-03-16 16:12:04.94406034 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgc6k_info:
	.quad	_cgc6k
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.944912669 UTC

.section .text
.align 8
sat_sgaAN_entry:
_cgc6s:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgc6t
_cgc6u:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cgc6w
_cgc6v:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_sgaAM_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-32(%rbp)
	movq %rbx,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Base.<*>_entry@gotpcrel(%rip)
_cgc6w:
	movq $32,904(%r13)
_cgc6t:
	jmp *-16(%r13)
	.size sat_sgaAN_entry, .-sat_sgaAN_entry


==================== Asm code ====================
2018-03-16 16:12:04.945698822 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaAN_info:
	.quad	sat_sgaAN_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.946408769 UTC

.section .text
.align 8
sat_sgaAJ_entry:
_cgc6H:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgc6I
_cgc6J:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cgc6F_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Base.$p1Applicative_entry@gotpcrel(%rip)
_cgc6I:
	jmp *-16(%r13)
	.size sat_sgaAJ_entry, .-sat_sgaAJ_entry


==================== Asm code ====================
2018-03-16 16:12:04.947090634 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaAJ_info:
	.quad	sat_sgaAJ_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:12:04.947725772 UTC

.section .text
.align 8
_cgc6F:
_cgc6F:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	leaq Data.Functor.Product.$fApplicativeProduct1_closure+2(%rip),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Base.fmap_entry@gotpcrel(%rip)
	.size _cgc6F, .-_cgc6F


==================== Asm code ====================
2018-03-16 16:12:04.948338976 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgc6F_info:
	.quad	_cgc6F
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.949110873 UTC

.section .text
.align 8
sat_sgaAK_entry:
_cgc6N:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgc6O
_cgc6P:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cgc6R
_cgc6Q:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_sgaAJ_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-32(%rbp)
	movq %rbx,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Base.<*>_entry@gotpcrel(%rip)
_cgc6R:
	movq $32,904(%r13)
_cgc6O:
	jmp *-16(%r13)
	.size sat_sgaAK_entry, .-sat_sgaAK_entry


==================== Asm code ====================
2018-03-16 16:12:04.949896738 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaAK_info:
	.quad	sat_sgaAK_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.950648255 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$c*>_entry
.type Data.Functor.Product.$w$c*>_entry, @object
Data.Functor.Product.$w$c*>_entry:
_cgc6S:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cgc6W
_cgc6V:
	leaq sat_sgaAN_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %rsi,-56(%r12)
	movq %r8,-48(%r12)
	movq (%rbp),%rax
	movq %rax,-40(%r12)
	leaq sat_sgaAK_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r9,(%r12)
	leaq -72(%r12),%r14
	leaq -32(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgc6W:
	movq $80,904(%r13)
	leaq Data.Functor.Product.$w$c*>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$c*>_entry, .-Data.Functor.Product.$w$c*>_entry


==================== Asm code ====================
2018-03-16 16:12:04.951340467 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$c*>_info
.type Data.Functor.Product.$w$c*>_info, @object
Data.Functor.Product.$w$c*>_info:
	.quad	Data.Functor.Product.$w$c*>_entry
	.quad	0
	.quad	14
	.quad	25769803802


==================== Asm code ====================
2018-03-16 16:12:04.955763664 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$c*>_closure
.type Data.Functor.Product.$fApplicativeProduct_$c*>_closure, @object
Data.Functor.Product.$fApplicativeProduct_$c*>_closure:
	.quad	Data.Functor.Product.$fApplicativeProduct_$c*>_info


==================== Asm code ====================
2018-03-16 16:12:04.956560271 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fApplicativeProduct_$c*>_entry
.type Data.Functor.Product.$fApplicativeProduct_$c*>_entry, @object
Data.Functor.Product.$fApplicativeProduct_$c*>_entry:
_cgc7Q:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgc81
_cgc82:
	leaq block_cgc7N_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cgc7N
_cgc7O:
	movq (%rbx),%rax
	jmp *(%rax)
_cgc81:
	leaq Data.Functor.Product.$fApplicativeProduct_$c*>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fApplicativeProduct_$c*>_entry, .-Data.Functor.Product.$fApplicativeProduct_$c*>_entry


==================== Asm code ====================
2018-03-16 16:12:04.957199819 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$c*>_info
.type Data.Functor.Product.$fApplicativeProduct_$c*>_info, @object
Data.Functor.Product.$fApplicativeProduct_$c*>_info:
	.quad	Data.Functor.Product.$fApplicativeProduct_$c*>_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:12:04.958439525 UTC

.section .text
.align 8
_cgc7N:
_cgc7N:
	leaq block_cgc7T_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgc7T
_cgc7U:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgc7N, .-_cgc7N


==================== Asm code ====================
2018-03-16 16:12:04.959026662 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgc7N_info:
	.quad	_cgc7N
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.959685948 UTC

.section .text
.align 8
_cgc7T:
_cgc7T:
	movq 32(%rbp),%rax
	leaq block_cgc7Y_info(%rip),%rcx
	movq %rcx,32(%rbp)
	movq 7(%rbx),%r9
	movq 8(%rbp),%r8
	movq %rax,%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,24(%rbp)
	addq $24,%rbp
	jmp Data.Functor.Product.$w$c*>_entry
	.size _cgc7T, .-_cgc7T


==================== Asm code ====================
2018-03-16 16:12:04.960309452 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgc7T_info:
	.quad	_cgc7T
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.960992341 UTC

.section .text
.align 8
_cgc7Y:
_cgc7Y:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgc87
_cgc86:
	leaq Data.Functor.Product.Pair_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgc87:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cgc7Y, .-_cgc7Y


==================== Asm code ====================
2018-03-16 16:12:04.961661268 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgc7Y_info:
	.quad	_cgc7Y
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.966942414 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$c<*_closure
.type Data.Functor.Product.$fApplicativeProduct_$c<*_closure, @object
Data.Functor.Product.$fApplicativeProduct_$c<*_closure:
	.quad	Data.Functor.Product.$fApplicativeProduct_$c<*_info


==================== Asm code ====================
2018-03-16 16:12:04.967733049 UTC

.section .text
.align 8
sat_sgaBc_entry:
_cgc8O:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgc8P
_cgc8Q:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq GHC.Base.const_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp *GHC.Base.liftA2_entry@gotpcrel(%rip)
_cgc8P:
	jmp *-16(%r13)
	.size sat_sgaBc_entry, .-sat_sgaBc_entry


==================== Asm code ====================
2018-03-16 16:12:04.96838674 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaBc_info:
	.quad	sat_sgaBc_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.969101416 UTC

.section .text
.align 8
sat_sgaBb_entry:
_cgc8V:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgc8W
_cgc8X:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq GHC.Base.const_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp *GHC.Base.liftA2_entry@gotpcrel(%rip)
_cgc8W:
	jmp *-16(%r13)
	.size sat_sgaBb_entry, .-sat_sgaBb_entry


==================== Asm code ====================
2018-03-16 16:12:04.970071537 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaBb_info:
	.quad	sat_sgaBb_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.970790065 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fApplicativeProduct_$c<*_entry
.type Data.Functor.Product.$fApplicativeProduct_$c<*_entry, @object
Data.Functor.Product.$fApplicativeProduct_$c<*_entry:
_cgc8Y:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgc90
_cgc91:
	leaq block_cgc8A_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cgc8A
_cgc8B:
	movq (%rbx),%rax
	jmp *(%rax)
_cgc90:
	leaq Data.Functor.Product.$fApplicativeProduct_$c<*_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fApplicativeProduct_$c<*_entry, .-Data.Functor.Product.$fApplicativeProduct_$c<*_entry


==================== Asm code ====================
2018-03-16 16:12:04.971459546 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_$c<*_info
.type Data.Functor.Product.$fApplicativeProduct_$c<*_info, @object
Data.Functor.Product.$fApplicativeProduct_$c<*_info:
	.quad	Data.Functor.Product.$fApplicativeProduct_$c<*_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:12:04.972181112 UTC

.section .text
.align 8
_cgc8A:
_cgc8A:
	leaq block_cgc8F_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgc8F
_cgc8G:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgc8A, .-_cgc8A


==================== Asm code ====================
2018-03-16 16:12:04.972784191 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgc8A_info:
	.quad	_cgc8A
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.973618608 UTC

.section .text
.align 8
_cgc8F:
_cgc8F:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cgc95
_cgc94:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgaBc_info(%rip),%rcx
	movq %rcx,-96(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	leaq sat_sgaBb_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	leaq Data.Functor.Product.Pair_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgc95:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgc8F, .-_cgc8F


==================== Asm code ====================
2018-03-16 16:12:04.974374418 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgc8F_info:
	.quad	_cgc8F
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:04.980194073 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_closure
.type Data.Functor.Product.$fApplicativeProduct_closure, @object
Data.Functor.Product.$fApplicativeProduct_closure:
	.quad	Data.Functor.Product.$fApplicativeProduct_info


==================== Asm code ====================
2018-03-16 16:12:04.98084411 UTC

.section .text
.align 8
sat_sgaBk_entry:
_cgca0:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fApplicativeProduct_$c<*_entry
	.size sat_sgaBk_entry, .-sat_sgaBk_entry


==================== Asm code ====================
2018-03-16 16:12:04.981418836 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaBk_info:
	.quad	sat_sgaBk_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.982014582 UTC

.section .text
.align 8
sat_sgaBj_entry:
_cgca8:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fApplicativeProduct_$c*>_entry
	.size sat_sgaBj_entry, .-sat_sgaBj_entry


==================== Asm code ====================
2018-03-16 16:12:04.982577116 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaBj_info:
	.quad	sat_sgaBj_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.983194379 UTC

.section .text
.align 8
sat_sgaBi_entry:
_cgcag:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$fApplicativeProduct_$cliftA2_entry
	.size sat_sgaBi_entry, .-sat_sgaBi_entry


==================== Asm code ====================
2018-03-16 16:12:04.984306132 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaBi_info:
	.quad	sat_sgaBi_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:04.985025629 UTC

.section .text
.align 8
sat_sgaBh_entry:
_cgcao:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fApplicativeProduct_$c<*>_entry
	.size sat_sgaBh_entry, .-sat_sgaBh_entry


==================== Asm code ====================
2018-03-16 16:12:04.985659785 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaBh_info:
	.quad	sat_sgaBh_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.986249738 UTC

.section .text
.align 8
sat_sgaBg_entry:
_cgcaw:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fApplicativeProduct_$cpure_entry
	.size sat_sgaBg_entry, .-sat_sgaBg_entry


==================== Asm code ====================
2018-03-16 16:12:04.986802548 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaBg_info:
	.quad	sat_sgaBg_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:04.987520826 UTC

.section .text
.align 8
sat_sgaBf_entry:
_cgcaD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcaE
_cgcaF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fApplicativeProduct_$cp1Applicative_entry
_cgcaE:
	jmp *-16(%r13)
	.size sat_sgaBf_entry, .-sat_sgaBf_entry


==================== Asm code ====================
2018-03-16 16:12:04.988103205 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaBf_info:
	.quad	sat_sgaBf_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:12:04.98894986 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fApplicativeProduct_entry
.type Data.Functor.Product.$fApplicativeProduct_entry, @object
Data.Functor.Product.$fApplicativeProduct_entry:
_cgcaH:
	addq $208,%r12
	cmpq 856(%r13),%r12
	ja _cgcaL
_cgcaK:
	leaq sat_sgaBk_info(%rip),%rax
	movq %rax,-200(%r12)
	movq %r14,-192(%r12)
	movq %rsi,-184(%r12)
	leaq sat_sgaBj_info(%rip),%rax
	movq %rax,-176(%r12)
	movq %r14,-168(%r12)
	movq %rsi,-160(%r12)
	leaq sat_sgaBi_info(%rip),%rax
	movq %rax,-152(%r12)
	movq %r14,-144(%r12)
	movq %rsi,-136(%r12)
	leaq sat_sgaBh_info(%rip),%rax
	movq %rax,-128(%r12)
	movq %r14,-120(%r12)
	movq %rsi,-112(%r12)
	leaq sat_sgaBg_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %r14,-96(%r12)
	movq %rsi,-88(%r12)
	leaq sat_sgaBf_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq GHC.Base.C:Applicative_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -80(%r12),%rax
	movq %rax,-40(%r12)
	leaq -103(%r12),%rax
	movq %rax,-32(%r12)
	leaq -126(%r12),%rax
	movq %rax,-24(%r12)
	leaq -149(%r12),%rax
	movq %rax,-16(%r12)
	leaq -174(%r12),%rax
	movq %rax,-8(%r12)
	leaq -198(%r12),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgcaL:
	movq $208,904(%r13)
	leaq Data.Functor.Product.$fApplicativeProduct_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fApplicativeProduct_entry, .-Data.Functor.Product.$fApplicativeProduct_entry


==================== Asm code ====================
2018-03-16 16:12:04.990253481 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fApplicativeProduct_info
.type Data.Functor.Product.$fApplicativeProduct_info, @object
Data.Functor.Product.$fApplicativeProduct_info:
	.quad	Data.Functor.Product.$fApplicativeProduct_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:04.995538717 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fAlternativeProduct_$c<|>_closure
.type Data.Functor.Product.$fAlternativeProduct_$c<|>_closure, @object
Data.Functor.Product.$fAlternativeProduct_$c<|>_closure:
	.quad	Data.Functor.Product.$fAlternativeProduct_$c<|>_info


==================== Asm code ====================
2018-03-16 16:12:04.996328819 UTC

.section .text
.align 8
sat_sgaBw_entry:
_cgcbG:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcbH
_cgcbI:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Base.<|>_entry@gotpcrel(%rip)
_cgcbH:
	jmp *-16(%r13)
	.size sat_sgaBw_entry, .-sat_sgaBw_entry


==================== Asm code ====================
2018-03-16 16:12:04.997049043 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaBw_info:
	.quad	sat_sgaBw_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.997793206 UTC

.section .text
.align 8
sat_sgaBv_entry:
_cgcbN:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcbO
_cgcbP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Base.<|>_entry@gotpcrel(%rip)
_cgcbO:
	jmp *-16(%r13)
	.size sat_sgaBv_entry, .-sat_sgaBv_entry


==================== Asm code ====================
2018-03-16 16:12:04.998438783 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaBv_info:
	.quad	sat_sgaBv_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:04.999163001 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fAlternativeProduct_$c<|>_entry
.type Data.Functor.Product.$fAlternativeProduct_$c<|>_entry, @object
Data.Functor.Product.$fAlternativeProduct_$c<|>_entry:
_cgcbQ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcbS
_cgcbT:
	leaq block_cgcbs_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cgcbs
_cgcbt:
	movq (%rbx),%rax
	jmp *(%rax)
_cgcbS:
	leaq Data.Functor.Product.$fAlternativeProduct_$c<|>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fAlternativeProduct_$c<|>_entry, .-Data.Functor.Product.$fAlternativeProduct_$c<|>_entry


==================== Asm code ====================
2018-03-16 16:12:04.999821232 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fAlternativeProduct_$c<|>_info
.type Data.Functor.Product.$fAlternativeProduct_$c<|>_info, @object
Data.Functor.Product.$fAlternativeProduct_$c<|>_info:
	.quad	Data.Functor.Product.$fAlternativeProduct_$c<|>_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:12:05.000494296 UTC

.section .text
.align 8
_cgcbs:
_cgcbs:
	leaq block_cgcbx_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgcbx
_cgcby:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgcbs, .-_cgcbs


==================== Asm code ====================
2018-03-16 16:12:05.001055964 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcbs_info:
	.quad	_cgcbs
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.002345174 UTC

.section .text
.align 8
_cgcbx:
_cgcbx:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cgcbX
_cgcbW:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgaBw_info(%rip),%rcx
	movq %rcx,-96(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	leaq sat_sgaBv_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	leaq Data.Functor.Product.Pair_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgcbX:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgcbx, .-_cgcbx


==================== Asm code ====================
2018-03-16 16:12:05.003046487 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcbx_info:
	.quad	_cgcbx
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.006648261 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fAlternativeProduct_$cempty_closure
.type Data.Functor.Product.$fAlternativeProduct_$cempty_closure, @object
Data.Functor.Product.$fAlternativeProduct_$cempty_closure:
	.quad	Data.Functor.Product.$fAlternativeProduct_$cempty_info


==================== Asm code ====================
2018-03-16 16:12:05.007348927 UTC

.section .text
.align 8
sat_sgaBA_entry:
_cgccN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgccO
_cgccP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.empty_entry@gotpcrel(%rip)
_cgccO:
	jmp *-16(%r13)
	.size sat_sgaBA_entry, .-sat_sgaBA_entry


==================== Asm code ====================
2018-03-16 16:12:05.007940703 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaBA_info:
	.quad	sat_sgaBA_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.008612709 UTC

.section .text
.align 8
sat_sgaBz_entry:
_cgccU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgccV
_cgccW:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.empty_entry@gotpcrel(%rip)
_cgccV:
	jmp *-16(%r13)
	.size sat_sgaBz_entry, .-sat_sgaBz_entry


==================== Asm code ====================
2018-03-16 16:12:05.009222025 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaBz_info:
	.quad	sat_sgaBz_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.009956713 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fAlternativeProduct_$cempty_entry
.type Data.Functor.Product.$fAlternativeProduct_$cempty_entry, @object
Data.Functor.Product.$fAlternativeProduct_$cempty_entry:
_cgccY:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cgcd2
_cgcd1:
	leaq sat_sgaBA_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %rsi,-48(%r12)
	leaq sat_sgaBz_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	leaq Data.Functor.Product.Pair_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgcd2:
	movq $72,904(%r13)
	leaq Data.Functor.Product.$fAlternativeProduct_$cempty_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fAlternativeProduct_$cempty_entry, .-Data.Functor.Product.$fAlternativeProduct_$cempty_entry


==================== Asm code ====================
2018-03-16 16:12:05.010647887 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fAlternativeProduct_$cempty_info
.type Data.Functor.Product.$fAlternativeProduct_$cempty_info, @object
Data.Functor.Product.$fAlternativeProduct_$cempty_info:
	.quad	Data.Functor.Product.$fAlternativeProduct_$cempty_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:05.014238137 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_closure
.type Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_closure, @object
Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_closure:
	.quad	Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_info


==================== Asm code ====================
2018-03-16 16:12:05.015000458 UTC

.section .text
.align 8
sat_sgaBE_entry:
_cgcdv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcdw
_cgcdx:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.$p1Alternative_entry@gotpcrel(%rip)
_cgcdw:
	jmp *-16(%r13)
	.size sat_sgaBE_entry, .-sat_sgaBE_entry


==================== Asm code ====================
2018-03-16 16:12:05.0156195 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaBE_info:
	.quad	sat_sgaBE_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.016259353 UTC

.section .text
.align 8
sat_sgaBD_entry:
_cgcdC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcdD
_cgcdE:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.$p1Alternative_entry@gotpcrel(%rip)
_cgcdD:
	jmp *-16(%r13)
	.size sat_sgaBD_entry, .-sat_sgaBD_entry


==================== Asm code ====================
2018-03-16 16:12:05.016864341 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaBD_info:
	.quad	sat_sgaBD_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.017630133 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_entry
.type Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_entry, @object
Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_entry:
_cgcdF:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cgcdJ
_cgcdI:
	leaq sat_sgaBE_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rsi,-24(%r12)
	leaq sat_sgaBD_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp Data.Functor.Product.$fApplicativeProduct_entry
_cgcdJ:
	movq $48,904(%r13)
	leaq Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_entry, .-Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_entry


==================== Asm code ====================
2018-03-16 16:12:05.018327614 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_info
.type Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_info, @object
Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_info:
	.quad	Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:05.021448625 UTC

.section .data
.align 8
.align 1
poly_some_v_rg5o0_closure:
	.quad	poly_some_v_rg5o0_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.022339717 UTC

.section .text
.align 8
poly_some_v_rg5o0_entry:
_cgce6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgce7
_cgce8:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cgce5
_cgce4:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq poly_some_v_rg5o0_closure(%rip),%rbx
	addq $-16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cgce7:
	jmp *-16(%r13)
_cgce5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size poly_some_v_rg5o0_entry, .-poly_some_v_rg5o0_entry


==================== Asm code ====================
2018-03-16 16:12:05.023027931 UTC

.section .data.rel.ro
.align 8
.align 1
poly_some_v_rg5o0_info:
	.quad	poly_some_v_rg5o0_entry
	.quad	0
	.quad	4294967317
	.quad	SgaPW_srt+480


==================== Asm code ====================
2018-03-16 16:12:05.025775549 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fAlternativeProduct_$csome_closure
.type Data.Functor.Product.$fAlternativeProduct_$csome_closure, @object
Data.Functor.Product.$fAlternativeProduct_$csome_closure:
	.quad	Data.Functor.Product.$fAlternativeProduct_$csome_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.026495193 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fAlternativeProduct_$csome_entry
.type Data.Functor.Product.$fAlternativeProduct_$csome_entry, @object
Data.Functor.Product.$fAlternativeProduct_$csome_entry:
_cgcep:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgceq
_cgcer:
	leaq block_cgcem_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rdi,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cgcem
_cgcen:
	movq (%rbx),%rax
	jmp *(%rax)
_cgceq:
	leaq Data.Functor.Product.$fAlternativeProduct_$csome_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fAlternativeProduct_$csome_entry, .-Data.Functor.Product.$fAlternativeProduct_$csome_entry


==================== Asm code ====================
2018-03-16 16:12:05.027147034 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fAlternativeProduct_$csome_info
.type Data.Functor.Product.$fAlternativeProduct_$csome_info, @object
Data.Functor.Product.$fAlternativeProduct_$csome_info:
	.quad	Data.Functor.Product.$fAlternativeProduct_$csome_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	SgaPW_srt+480


==================== Asm code ====================
2018-03-16 16:12:05.027797355 UTC

.section .text
.align 8
_cgcem:
_cgcem:
	leaq poly_some_v_rg5o0_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgcem, .-_cgcem


==================== Asm code ====================
2018-03-16 16:12:05.028304821 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcem_info:
	.quad	_cgcem
	.quad	0
	.quad	4294967326
	.quad	SgaPW_srt+480


==================== Asm code ====================
2018-03-16 16:12:05.034330246 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fAlternativeProduct_closure
.type Data.Functor.Product.$fAlternativeProduct_closure, @object
Data.Functor.Product.$fAlternativeProduct_closure:
	.quad	Data.Functor.Product.$fAlternativeProduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.034985267 UTC

.section .text
.align 8
sat_sgaBR_entry:
_cgceQ:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fAlternativeProduct_$csome_entry
	.size sat_sgaBR_entry, .-sat_sgaBR_entry


==================== Asm code ====================
2018-03-16 16:12:05.035523972 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaBR_info:
	.quad	sat_sgaBR_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	SgaPW_srt+488


==================== Asm code ====================
2018-03-16 16:12:05.036105239 UTC

.section .text
.align 8
sat_sgaBQ_entry:
_cgceY:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fAlternativeProduct_$csome_entry
	.size sat_sgaBQ_entry, .-sat_sgaBQ_entry


==================== Asm code ====================
2018-03-16 16:12:05.036739039 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaBQ_info:
	.quad	sat_sgaBQ_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	SgaPW_srt+488


==================== Asm code ====================
2018-03-16 16:12:05.037413059 UTC

.section .text
.align 8
sat_sgaBP_entry:
_cgcf6:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fAlternativeProduct_$c<|>_entry
	.size sat_sgaBP_entry, .-sat_sgaBP_entry


==================== Asm code ====================
2018-03-16 16:12:05.038007914 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaBP_info:
	.quad	sat_sgaBP_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:05.038709035 UTC

.section .text
.align 8
sat_sgaBO_entry:
_cgcfd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcfe
_cgcff:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fAlternativeProduct_$cempty_entry
_cgcfe:
	jmp *-16(%r13)
	.size sat_sgaBO_entry, .-sat_sgaBO_entry


==================== Asm code ====================
2018-03-16 16:12:05.039342613 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaBO_info:
	.quad	sat_sgaBO_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:12:05.040041451 UTC

.section .text
.align 8
sat_sgaBN_entry:
_cgcfk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcfl
_cgcfm:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fAlternativeProduct_$cp1Alternative_entry
_cgcfl:
	jmp *-16(%r13)
	.size sat_sgaBN_entry, .-sat_sgaBN_entry


==================== Asm code ====================
2018-03-16 16:12:05.040661623 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaBN_info:
	.quad	sat_sgaBN_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:12:05.0417654 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fAlternativeProduct_entry
.type Data.Functor.Product.$fAlternativeProduct_entry, @object
Data.Functor.Product.$fAlternativeProduct_entry:
_cgcfo:
	addq $184,%r12
	cmpq 856(%r13),%r12
	ja _cgcfs
_cgcfr:
	leaq sat_sgaBR_info(%rip),%rax
	movq %rax,-176(%r12)
	movq %r14,-168(%r12)
	movq %rsi,-160(%r12)
	leaq sat_sgaBQ_info(%rip),%rax
	movq %rax,-152(%r12)
	movq %r14,-144(%r12)
	movq %rsi,-136(%r12)
	leaq sat_sgaBP_info(%rip),%rax
	movq %rax,-128(%r12)
	movq %r14,-120(%r12)
	movq %rsi,-112(%r12)
	leaq sat_sgaBO_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %r14,-88(%r12)
	movq %rsi,-80(%r12)
	leaq sat_sgaBN_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-56(%r12)
	movq %rsi,-48(%r12)
	movq GHC.Base.C:Alternative_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq -72(%r12),%rax
	movq %rax,-32(%r12)
	leaq -104(%r12),%rax
	movq %rax,-24(%r12)
	leaq -126(%r12),%rax
	movq %rax,-16(%r12)
	leaq -151(%r12),%rax
	movq %rax,-8(%r12)
	leaq -175(%r12),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgcfs:
	movq $184,904(%r13)
	leaq Data.Functor.Product.$fAlternativeProduct_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fAlternativeProduct_entry, .-Data.Functor.Product.$fAlternativeProduct_entry


==================== Asm code ====================
2018-03-16 16:12:05.042537459 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fAlternativeProduct_info
.type Data.Functor.Product.$fAlternativeProduct_info, @object
Data.Functor.Product.$fAlternativeProduct_info:
	.quad	Data.Functor.Product.$fAlternativeProduct_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	SgaPW_srt+488


==================== Asm code ====================
2018-03-16 16:12:05.049601934 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadProduct_$c>>=_closure
.type Data.Functor.Product.$fMonadProduct_$c>>=_closure, @object
Data.Functor.Product.$fMonadProduct_$c>>=_closure:
	.quad	Data.Functor.Product.$fMonadProduct_$c>>=_info


==================== Asm code ====================
2018-03-16 16:12:05.050341832 UTC

.section .text
.align 8
sat_sgaC9_entry:
_cgcgm:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcgn
_cgcgo:
	leaq block_cgcgk_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rbx
	addq $-8,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_cgcgn:
	jmp *-8(%r13)
	.size sat_sgaC9_entry, .-sat_sgaC9_entry


==================== Asm code ====================
2018-03-16 16:12:05.05093266 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaC9_info:
	.quad	sat_sgaC9_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.05153902 UTC

.section .text
.align 8
_cgcgk:
_cgcgk:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cgcgk, .-_cgcgk


==================== Asm code ====================
2018-03-16 16:12:05.052079921 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcgk_info:
	.quad	_cgcgk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.052856991 UTC

.section .text
.align 8
sat_sgaCa_entry:
_cgcgs:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcgt
_cgcgu:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cgcgw
_cgcgv:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_sgaC9_info(%rip),%rdx
	movq %rdx,-8(%r12)
	movq %rcx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rbx,-32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Base.>>=_entry@gotpcrel(%rip)
_cgcgw:
	movq $16,904(%r13)
_cgcgt:
	jmp *-16(%r13)
	.size sat_sgaCa_entry, .-sat_sgaCa_entry


==================== Asm code ====================
2018-03-16 16:12:05.053611813 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaCa_info:
	.quad	sat_sgaCa_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.054271473 UTC

.section .text
.align 8
sat_sgaC3_entry:
_cgcgI:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcgJ
_cgcgK:
	leaq block_cgcgG_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rbx
	addq $-8,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_cgcgJ:
	jmp *-8(%r13)
	.size sat_sgaC3_entry, .-sat_sgaC3_entry


==================== Asm code ====================
2018-03-16 16:12:05.054930137 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaC3_info:
	.quad	sat_sgaC3_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.05557877 UTC

.section .text
.align 8
_cgcgG:
_cgcgG:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cgcgG, .-_cgcgG


==================== Asm code ====================
2018-03-16 16:12:05.05614786 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcgG_info:
	.quad	_cgcgG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.056911553 UTC

.section .text
.align 8
sat_sgaC4_entry:
_cgcgO:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcgP
_cgcgQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cgcgS
_cgcgR:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_sgaC3_info(%rip),%rdx
	movq %rdx,-8(%r12)
	movq %rcx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rbx,-32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Base.>>=_entry@gotpcrel(%rip)
_cgcgS:
	movq $16,904(%r13)
_cgcgP:
	jmp *-16(%r13)
	.size sat_sgaC4_entry, .-sat_sgaC4_entry


==================== Asm code ====================
2018-03-16 16:12:05.057909706 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaC4_info:
	.quad	sat_sgaC4_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.058694174 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadProduct_$c>>=_entry
.type Data.Functor.Product.$fMonadProduct_$c>>=_entry, @object
Data.Functor.Product.$fMonadProduct_$c>>=_entry:
_cgcgT:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcgV
_cgcgW:
	leaq block_cgcg6_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cgcg6
_cgcg7:
	movq (%rbx),%rax
	jmp *(%rax)
_cgcgV:
	leaq Data.Functor.Product.$fMonadProduct_$c>>=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadProduct_$c>>=_entry, .-Data.Functor.Product.$fMonadProduct_$c>>=_entry


==================== Asm code ====================
2018-03-16 16:12:05.059369672 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadProduct_$c>>=_info
.type Data.Functor.Product.$fMonadProduct_$c>>=_info, @object
Data.Functor.Product.$fMonadProduct_$c>>=_info:
	.quad	Data.Functor.Product.$fMonadProduct_$c>>=_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:12:05.060172982 UTC

.section .text
.align 8
_cgcg6:
_cgcg6:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cgcgZ
_cgcgY:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgaCa_info(%rip),%rcx
	movq %rcx,-96(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	leaq sat_sgaC4_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	leaq Data.Functor.Product.Pair_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgcgZ:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgcg6, .-_cgcg6


==================== Asm code ====================
2018-03-16 16:12:05.061449217 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcg6_info:
	.quad	_cgcg6
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.065232992 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadProduct_$cp1Monad_closure
.type Data.Functor.Product.$fMonadProduct_$cp1Monad_closure, @object
Data.Functor.Product.$fMonadProduct_$cp1Monad_closure:
	.quad	Data.Functor.Product.$fMonadProduct_$cp1Monad_info


==================== Asm code ====================
2018-03-16 16:12:05.066054181 UTC

.section .text
.align 8
sat_sgaCe_entry:
_cgchX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgchY
_cgchZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.$p1Monad_entry@gotpcrel(%rip)
_cgchY:
	jmp *-16(%r13)
	.size sat_sgaCe_entry, .-sat_sgaCe_entry


==================== Asm code ====================
2018-03-16 16:12:05.066666361 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaCe_info:
	.quad	sat_sgaCe_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.067301853 UTC

.section .text
.align 8
sat_sgaCd_entry:
_cgci4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgci5
_cgci6:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.$p1Monad_entry@gotpcrel(%rip)
_cgci5:
	jmp *-16(%r13)
	.size sat_sgaCd_entry, .-sat_sgaCd_entry


==================== Asm code ====================
2018-03-16 16:12:05.067935022 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaCd_info:
	.quad	sat_sgaCd_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.068686986 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadProduct_$cp1Monad_entry
.type Data.Functor.Product.$fMonadProduct_$cp1Monad_entry, @object
Data.Functor.Product.$fMonadProduct_$cp1Monad_entry:
_cgci7:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cgcib
_cgcia:
	leaq sat_sgaCe_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rsi,-24(%r12)
	leaq sat_sgaCd_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp Data.Functor.Product.$fApplicativeProduct_entry
_cgcib:
	movq $48,904(%r13)
	leaq Data.Functor.Product.$fMonadProduct_$cp1Monad_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadProduct_$cp1Monad_entry, .-Data.Functor.Product.$fMonadProduct_$cp1Monad_entry


==================== Asm code ====================
2018-03-16 16:12:05.069407386 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadProduct_$cp1Monad_info
.type Data.Functor.Product.$fMonadProduct_$cp1Monad_info, @object
Data.Functor.Product.$fMonadProduct_$cp1Monad_info:
	.quad	Data.Functor.Product.$fMonadProduct_$cp1Monad_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:05.073901247 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadProduct_$creturn_closure
.type Data.Functor.Product.$fMonadProduct_$creturn_closure, @object
Data.Functor.Product.$fMonadProduct_$creturn_closure:
	.quad	Data.Functor.Product.$fMonadProduct_$creturn_info


==================== Asm code ====================
2018-03-16 16:12:05.074729168 UTC

.section .text
.align 8
sat_sgaCl_entry:
_cgciC:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgciD
_cgciE:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cgciA_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Base.$p1Monad_entry@gotpcrel(%rip)
_cgciD:
	jmp *-16(%r13)
	.size sat_sgaCl_entry, .-sat_sgaCl_entry


==================== Asm code ====================
2018-03-16 16:12:05.075386575 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaCl_info:
	.quad	sat_sgaCl_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:12:05.075982862 UTC

.section .text
.align 8
_cgciA:
_cgciA:
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp *GHC.Base.pure_entry@gotpcrel(%rip)
	.size _cgciA, .-_cgciA


==================== Asm code ====================
2018-03-16 16:12:05.076538962 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgciA_info:
	.quad	_cgciA
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.077222841 UTC

.section .text
.align 8
sat_sgaCj_entry:
_cgciO:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgciP
_cgciQ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cgciM_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Base.$p1Monad_entry@gotpcrel(%rip)
_cgciP:
	jmp *-16(%r13)
	.size sat_sgaCj_entry, .-sat_sgaCj_entry


==================== Asm code ====================
2018-03-16 16:12:05.077896631 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaCj_info:
	.quad	sat_sgaCj_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:12:05.078527682 UTC

.section .text
.align 8
_cgciM:
_cgciM:
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp *GHC.Base.pure_entry@gotpcrel(%rip)
	.size _cgciM, .-_cgciM


==================== Asm code ====================
2018-03-16 16:12:05.079094635 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgciM_info:
	.quad	_cgciM
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.079859041 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadProduct_$creturn_entry
.type Data.Functor.Product.$fMonadProduct_$creturn_entry, @object
Data.Functor.Product.$fMonadProduct_$creturn_entry:
_cgciV:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cgciZ
_cgciY:
	leaq sat_sgaCl_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	leaq sat_sgaCj_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-32(%r12)
	movq %rdi,-24(%r12)
	leaq Data.Functor.Product.Pair_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgciZ:
	movq $88,904(%r13)
	leaq Data.Functor.Product.$fMonadProduct_$creturn_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadProduct_$creturn_entry, .-Data.Functor.Product.$fMonadProduct_$creturn_entry


==================== Asm code ====================
2018-03-16 16:12:05.080602228 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadProduct_$creturn_info
.type Data.Functor.Product.$fMonadProduct_$creturn_info, @object
Data.Functor.Product.$fMonadProduct_$creturn_info:
	.quad	Data.Functor.Product.$fMonadProduct_$creturn_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:05.087977932 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadProduct_$c>>_closure
.type Data.Functor.Product.$fMonadProduct_$c>>_closure, @object
Data.Functor.Product.$fMonadProduct_$c>>_closure:
	.quad	Data.Functor.Product.$fMonadProduct_$c>>_info


==================== Asm code ====================
2018-03-16 16:12:05.088772769 UTC

.section .text
.align 8
sat_sgaCD_entry:
_cgcjR:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcjS
_cgcjT:
	leaq block_cgcjO_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cgcjO
_cgcjP:
	movq (%rbx),%rax
	jmp *(%rax)
_cgcjS:
	jmp *-8(%r13)
	.size sat_sgaCD_entry, .-sat_sgaCD_entry


==================== Asm code ====================
2018-03-16 16:12:05.089452855 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaCD_info:
	.quad	sat_sgaCD_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.090096067 UTC

.section .text
.align 8
_cgcjO:
_cgcjO:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cgcjO, .-_cgcjO


==================== Asm code ====================
2018-03-16 16:12:05.09064292 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcjO_info:
	.quad	_cgcjO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.091405465 UTC

.section .text
.align 8
sat_sgaCE_entry:
_cgcjY:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcjZ
_cgck0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cgck2
_cgck1:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_sgaCD_info(%rip),%rdx
	movq %rdx,-8(%r12)
	movq %rcx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rbx,-32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Base.>>=_entry@gotpcrel(%rip)
_cgck2:
	movq $16,904(%r13)
_cgcjZ:
	jmp *-16(%r13)
	.size sat_sgaCE_entry, .-sat_sgaCE_entry


==================== Asm code ====================
2018-03-16 16:12:05.092120128 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaCE_info:
	.quad	sat_sgaCE_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.092801584 UTC

.section .text
.align 8
sat_sgaCx_entry:
_cgckf:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgckg
_cgckh:
	leaq block_cgckc_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cgckc
_cgckd:
	movq (%rbx),%rax
	jmp *(%rax)
_cgckg:
	jmp *-8(%r13)
	.size sat_sgaCx_entry, .-sat_sgaCx_entry


==================== Asm code ====================
2018-03-16 16:12:05.093688279 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaCx_info:
	.quad	sat_sgaCx_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.094297733 UTC

.section .text
.align 8
_cgckc:
_cgckc:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cgckc, .-_cgckc


==================== Asm code ====================
2018-03-16 16:12:05.094858399 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgckc_info:
	.quad	_cgckc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.095702935 UTC

.section .text
.align 8
sat_sgaCy_entry:
_cgckm:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgckn
_cgcko:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cgckq
_cgckp:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_sgaCx_info(%rip),%rdx
	movq %rdx,-8(%r12)
	movq %rcx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rbx,-32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Base.>>=_entry@gotpcrel(%rip)
_cgckq:
	movq $16,904(%r13)
_cgckn:
	jmp *-16(%r13)
	.size sat_sgaCy_entry, .-sat_sgaCy_entry


==================== Asm code ====================
2018-03-16 16:12:05.096396795 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaCy_info:
	.quad	sat_sgaCy_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.097143521 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadProduct_$c>>_entry
.type Data.Functor.Product.$fMonadProduct_$c>>_entry, @object
Data.Functor.Product.$fMonadProduct_$c>>_entry:
_cgckr:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgckt
_cgcku:
	leaq block_cgcjA_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cgcjA
_cgcjB:
	movq (%rbx),%rax
	jmp *(%rax)
_cgckt:
	leaq Data.Functor.Product.$fMonadProduct_$c>>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadProduct_$c>>_entry, .-Data.Functor.Product.$fMonadProduct_$c>>_entry


==================== Asm code ====================
2018-03-16 16:12:05.09786153 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadProduct_$c>>_info
.type Data.Functor.Product.$fMonadProduct_$c>>_info, @object
Data.Functor.Product.$fMonadProduct_$c>>_info:
	.quad	Data.Functor.Product.$fMonadProduct_$c>>_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:12:05.098661608 UTC

.section .text
.align 8
_cgcjA:
_cgcjA:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cgckx
_cgckw:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgaCE_info(%rip),%rcx
	movq %rcx,-96(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	leaq sat_sgaCy_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	leaq Data.Functor.Product.Pair_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgckx:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgcjA, .-_cgcjA


==================== Asm code ====================
2018-03-16 16:12:05.099391364 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcjA_info:
	.quad	_cgcjA
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.102197234 UTC

.section .data
.align 8
.align 1
lvl4_rg5o1_closure:
	.quad	lvl4_rg5o1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.102822289 UTC

.section .text
.align 8
lvl4_rg5o1_entry:
_cgclt:
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size lvl4_rg5o1_entry, .-lvl4_rg5o1_entry


==================== Asm code ====================
2018-03-16 16:12:05.103430199 UTC

.section .data.rel.ro
.align 8
.align 1
lvl4_rg5o1_info:
	.quad	lvl4_rg5o1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	SgaPW_srt+504


==================== Asm code ====================
2018-03-16 16:12:05.108121303 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadProduct_closure
.type Data.Functor.Product.$fMonadProduct_closure, @object
Data.Functor.Product.$fMonadProduct_closure:
	.quad	Data.Functor.Product.$fMonadProduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.108784979 UTC

.section .text
.align 8
sat_sgaCL_entry:
_cgclJ:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fMonadProduct_$creturn_entry
	.size sat_sgaCL_entry, .-sat_sgaCL_entry


==================== Asm code ====================
2018-03-16 16:12:05.109403206 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaCL_info:
	.quad	sat_sgaCL_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.110015337 UTC

.section .text
.align 8
sat_sgaCK_entry:
_cgclR:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fMonadProduct_$c>>_entry
	.size sat_sgaCK_entry, .-sat_sgaCK_entry


==================== Asm code ====================
2018-03-16 16:12:05.110583757 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaCK_info:
	.quad	sat_sgaCK_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:05.111223525 UTC

.section .text
.align 8
sat_sgaCJ_entry:
_cgclZ:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fMonadProduct_$c>>=_entry
	.size sat_sgaCJ_entry, .-sat_sgaCJ_entry


==================== Asm code ====================
2018-03-16 16:12:05.111809628 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaCJ_info:
	.quad	sat_sgaCJ_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:05.112521277 UTC

.section .text
.align 8
sat_sgaCI_entry:
_cgcm6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcm7
_cgcm8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fMonadProduct_$cp1Monad_entry
_cgcm7:
	jmp *-16(%r13)
	.size sat_sgaCI_entry, .-sat_sgaCI_entry


==================== Asm code ====================
2018-03-16 16:12:05.113162643 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaCI_info:
	.quad	sat_sgaCI_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:12:05.114053509 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadProduct_entry
.type Data.Functor.Product.$fMonadProduct_entry, @object
Data.Functor.Product.$fMonadProduct_entry:
_cgcma:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _cgcme
_cgcmd:
	leaq sat_sgaCL_info(%rip),%rax
	movq %rax,-144(%r12)
	movq %r14,-136(%r12)
	movq %rsi,-128(%r12)
	leaq sat_sgaCK_info(%rip),%rax
	movq %rax,-120(%r12)
	movq %r14,-112(%r12)
	movq %rsi,-104(%r12)
	leaq sat_sgaCJ_info(%rip),%rax
	movq %rax,-96(%r12)
	movq %r14,-88(%r12)
	movq %rsi,-80(%r12)
	leaq sat_sgaCI_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-56(%r12)
	movq %rsi,-48(%r12)
	movq GHC.Base.C:Monad_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq -72(%r12),%rax
	movq %rax,-32(%r12)
	leaq -94(%r12),%rax
	movq %rax,-24(%r12)
	leaq -118(%r12),%rax
	movq %rax,-16(%r12)
	leaq -143(%r12),%rax
	movq %rax,-8(%r12)
	leaq lvl4_rg5o1_closure+1(%rip),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgcme:
	movq $152,904(%r13)
	leaq Data.Functor.Product.$fMonadProduct_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadProduct_entry, .-Data.Functor.Product.$fMonadProduct_entry


==================== Asm code ====================
2018-03-16 16:12:05.114890958 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadProduct_info
.type Data.Functor.Product.$fMonadProduct_info, @object
Data.Functor.Product.$fMonadProduct_info:
	.quad	Data.Functor.Product.$fMonadProduct_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	SgaPW_srt+512


==================== Asm code ====================
2018-03-16 16:12:05.120281336 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadPlusProduct_$cmplus_closure
.type Data.Functor.Product.$fMonadPlusProduct_$cmplus_closure, @object
Data.Functor.Product.$fMonadPlusProduct_$cmplus_closure:
	.quad	Data.Functor.Product.$fMonadPlusProduct_$cmplus_info


==================== Asm code ====================
2018-03-16 16:12:05.121079654 UTC

.section .text
.align 8
sat_sgaCX_entry:
_cgcn0:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcn1
_cgcn2:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Base.mplus_entry@gotpcrel(%rip)
_cgcn1:
	jmp *-16(%r13)
	.size sat_sgaCX_entry, .-sat_sgaCX_entry


==================== Asm code ====================
2018-03-16 16:12:05.122099742 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaCX_info:
	.quad	sat_sgaCX_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.122828731 UTC

.section .text
.align 8
sat_sgaCW_entry:
_cgcn7:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcn8
_cgcn9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Base.mplus_entry@gotpcrel(%rip)
_cgcn8:
	jmp *-16(%r13)
	.size sat_sgaCW_entry, .-sat_sgaCW_entry


==================== Asm code ====================
2018-03-16 16:12:05.123482137 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaCW_info:
	.quad	sat_sgaCW_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.124215228 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadPlusProduct_$cmplus_entry
.type Data.Functor.Product.$fMonadPlusProduct_$cmplus_entry, @object
Data.Functor.Product.$fMonadPlusProduct_$cmplus_entry:
_cgcna:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcnc
_cgcnd:
	leaq block_cgcmM_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cgcmM
_cgcmN:
	movq (%rbx),%rax
	jmp *(%rax)
_cgcnc:
	leaq Data.Functor.Product.$fMonadPlusProduct_$cmplus_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadPlusProduct_$cmplus_entry, .-Data.Functor.Product.$fMonadPlusProduct_$cmplus_entry


==================== Asm code ====================
2018-03-16 16:12:05.12489532 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadPlusProduct_$cmplus_info
.type Data.Functor.Product.$fMonadPlusProduct_$cmplus_info, @object
Data.Functor.Product.$fMonadPlusProduct_$cmplus_info:
	.quad	Data.Functor.Product.$fMonadPlusProduct_$cmplus_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:12:05.125598373 UTC

.section .text
.align 8
_cgcmM:
_cgcmM:
	leaq block_cgcmR_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgcmR
_cgcmS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgcmM, .-_cgcmM


==================== Asm code ====================
2018-03-16 16:12:05.126198399 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcmM_info:
	.quad	_cgcmM
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.126998639 UTC

.section .text
.align 8
_cgcmR:
_cgcmR:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cgcnh
_cgcng:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgaCX_info(%rip),%rcx
	movq %rcx,-96(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	leaq sat_sgaCW_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	leaq Data.Functor.Product.Pair_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgcnh:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgcmR, .-_cgcmR


==================== Asm code ====================
2018-03-16 16:12:05.12775316 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcmR_info:
	.quad	_cgcmR
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.131514733 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadPlusProduct_$cmzero_closure
.type Data.Functor.Product.$fMonadPlusProduct_$cmzero_closure, @object
Data.Functor.Product.$fMonadPlusProduct_$cmzero_closure:
	.quad	Data.Functor.Product.$fMonadPlusProduct_$cmzero_info


==================== Asm code ====================
2018-03-16 16:12:05.132314232 UTC

.section .text
.align 8
sat_sgaD1_entry:
_cgco7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgco8
_cgco9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.mzero_entry@gotpcrel(%rip)
_cgco8:
	jmp *-16(%r13)
	.size sat_sgaD1_entry, .-sat_sgaD1_entry


==================== Asm code ====================
2018-03-16 16:12:05.132930087 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaD1_info:
	.quad	sat_sgaD1_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.133637468 UTC

.section .text
.align 8
sat_sgaD0_entry:
_cgcoe:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcof
_cgcog:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.mzero_entry@gotpcrel(%rip)
_cgcof:
	jmp *-16(%r13)
	.size sat_sgaD0_entry, .-sat_sgaD0_entry


==================== Asm code ====================
2018-03-16 16:12:05.134265105 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaD0_info:
	.quad	sat_sgaD0_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.13502636 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadPlusProduct_$cmzero_entry
.type Data.Functor.Product.$fMonadPlusProduct_$cmzero_entry, @object
Data.Functor.Product.$fMonadPlusProduct_$cmzero_entry:
_cgcoi:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cgcom
_cgcol:
	leaq sat_sgaD1_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %rsi,-48(%r12)
	leaq sat_sgaD0_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	leaq Data.Functor.Product.Pair_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgcom:
	movq $72,904(%r13)
	leaq Data.Functor.Product.$fMonadPlusProduct_$cmzero_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadPlusProduct_$cmzero_entry, .-Data.Functor.Product.$fMonadPlusProduct_$cmzero_entry


==================== Asm code ====================
2018-03-16 16:12:05.135687838 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadPlusProduct_$cmzero_info
.type Data.Functor.Product.$fMonadPlusProduct_$cmzero_info, @object
Data.Functor.Product.$fMonadPlusProduct_$cmzero_info:
	.quad	Data.Functor.Product.$fMonadPlusProduct_$cmzero_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:05.139404235 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_closure
.type Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_closure, @object
Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_closure:
	.quad	Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.140693479 UTC

.section .text
.align 8
sat_sgaD5_entry:
_cgcoP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcoQ
_cgcoR:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.$p2MonadPlus_entry@gotpcrel(%rip)
_cgcoQ:
	jmp *-16(%r13)
	.size sat_sgaD5_entry, .-sat_sgaD5_entry


==================== Asm code ====================
2018-03-16 16:12:05.142127196 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaD5_info:
	.quad	sat_sgaD5_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.14283848 UTC

.section .text
.align 8
sat_sgaD4_entry:
_cgcoW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcoX
_cgcoY:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.$p2MonadPlus_entry@gotpcrel(%rip)
_cgcoX:
	jmp *-16(%r13)
	.size sat_sgaD4_entry, .-sat_sgaD4_entry


==================== Asm code ====================
2018-03-16 16:12:05.143370571 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaD4_info:
	.quad	sat_sgaD4_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.144097074 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_entry
.type Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_entry, @object
Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_entry:
_cgcoZ:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cgcp3
_cgcp2:
	leaq sat_sgaD5_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rsi,-24(%r12)
	leaq sat_sgaD4_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp Data.Functor.Product.$fMonadProduct_entry
_cgcp3:
	movq $48,904(%r13)
	leaq Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_entry, .-Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_entry


==================== Asm code ====================
2018-03-16 16:12:05.144776472 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_info
.type Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_info, @object
Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_info:
	.quad	Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	SgaPW_srt+512


==================== Asm code ====================
2018-03-16 16:12:05.148388585 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_closure
.type Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_closure, @object
Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_closure:
	.quad	Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.149090449 UTC

.section .text
.align 8
sat_sgaD9_entry:
_cgcps:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcpt
_cgcpu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.$p1MonadPlus_entry@gotpcrel(%rip)
_cgcpt:
	jmp *-16(%r13)
	.size sat_sgaD9_entry, .-sat_sgaD9_entry


==================== Asm code ====================
2018-03-16 16:12:05.149778424 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaD9_info:
	.quad	sat_sgaD9_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.150478442 UTC

.section .text
.align 8
sat_sgaD8_entry:
_cgcpz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcpA
_cgcpB:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.$p1MonadPlus_entry@gotpcrel(%rip)
_cgcpA:
	jmp *-16(%r13)
	.size sat_sgaD8_entry, .-sat_sgaD8_entry


==================== Asm code ====================
2018-03-16 16:12:05.151128175 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaD8_info:
	.quad	sat_sgaD8_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.151890829 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_entry
.type Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_entry, @object
Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_entry:
_cgcpC:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cgcpG
_cgcpF:
	leaq sat_sgaD9_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rsi,-24(%r12)
	leaq sat_sgaD8_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp Data.Functor.Product.$fAlternativeProduct_entry
_cgcpG:
	movq $48,904(%r13)
	leaq Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_entry, .-Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_entry


==================== Asm code ====================
2018-03-16 16:12:05.152581262 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_info
.type Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_info, @object
Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_info:
	.quad	Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_entry
	.quad	0
	.quad	141733920782
	.quad	8589934607
	.quad	SgaPW_srt+496


==================== Asm code ====================
2018-03-16 16:12:05.157705465 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadPlusProduct_closure
.type Data.Functor.Product.$fMonadPlusProduct_closure, @object
Data.Functor.Product.$fMonadPlusProduct_closure:
	.quad	Data.Functor.Product.$fMonadPlusProduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.158355438 UTC

.section .text
.align 8
sat_sgaDf_entry:
_cgcq6:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fMonadPlusProduct_$cmplus_entry
	.size sat_sgaDf_entry, .-sat_sgaDf_entry


==================== Asm code ====================
2018-03-16 16:12:05.158949361 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaDf_info:
	.quad	sat_sgaDf_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:05.159682197 UTC

.section .text
.align 8
sat_sgaDe_entry:
_cgcqd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcqe
_cgcqf:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fMonadPlusProduct_$cmzero_entry
_cgcqe:
	jmp *-16(%r13)
	.size sat_sgaDe_entry, .-sat_sgaDe_entry


==================== Asm code ====================
2018-03-16 16:12:05.160314186 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaDe_info:
	.quad	sat_sgaDe_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:12:05.16101062 UTC

.section .text
.align 8
sat_sgaDd_entry:
_cgcqk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcql
_cgcqm:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_entry
_cgcql:
	jmp *-16(%r13)
	.size sat_sgaDd_entry, .-sat_sgaDd_entry


==================== Asm code ====================
2018-03-16 16:12:05.161678839 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaDd_info:
	.quad	sat_sgaDd_entry
	.quad	2
	.quad	4294967314
	.quad	SgaPW_srt+528


==================== Asm code ====================
2018-03-16 16:12:05.162402957 UTC

.section .text
.align 8
sat_sgaDc_entry:
_cgcqr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcqs
_cgcqt:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_entry
_cgcqs:
	jmp *-16(%r13)
	.size sat_sgaDc_entry, .-sat_sgaDc_entry


==================== Asm code ====================
2018-03-16 16:12:05.163053301 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaDc_info:
	.quad	sat_sgaDc_entry
	.quad	2
	.quad	4294967314
	.quad	SgaPW_srt+536


==================== Asm code ====================
2018-03-16 16:12:05.163872026 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadPlusProduct_entry
.type Data.Functor.Product.$fMonadPlusProduct_entry, @object
Data.Functor.Product.$fMonadPlusProduct_entry:
_cgcqv:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _cgcqz
_cgcqy:
	leaq sat_sgaDf_info(%rip),%rax
	movq %rax,-152(%r12)
	movq %r14,-144(%r12)
	movq %rsi,-136(%r12)
	leaq sat_sgaDe_info(%rip),%rax
	movq %rax,-128(%r12)
	movq %r14,-112(%r12)
	movq %rsi,-104(%r12)
	leaq sat_sgaDd_info(%rip),%rax
	movq %rax,-96(%r12)
	movq %r14,-80(%r12)
	movq %rsi,-72(%r12)
	leaq sat_sgaDc_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-48(%r12)
	movq %rsi,-40(%r12)
	movq GHC.Base.C:MonadPlus_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq -64(%r12),%rax
	movq %rax,-24(%r12)
	leaq -96(%r12),%rax
	movq %rax,-16(%r12)
	leaq -128(%r12),%rax
	movq %rax,-8(%r12)
	leaq -150(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgcqz:
	movq $160,904(%r13)
	leaq Data.Functor.Product.$fMonadPlusProduct_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadPlusProduct_entry, .-Data.Functor.Product.$fMonadPlusProduct_entry


==================== Asm code ====================
2018-03-16 16:12:05.16464878 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadPlusProduct_info
.type Data.Functor.Product.$fMonadPlusProduct_info, @object
Data.Functor.Product.$fMonadPlusProduct_info:
	.quad	Data.Functor.Product.$fMonadPlusProduct_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	SgaPW_srt+528


==================== Asm code ====================
2018-03-16 16:12:05.170859749 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadFixProduct_$cmfix_closure
.type Data.Functor.Product.$fMonadFixProduct_$cmfix_closure, @object
Data.Functor.Product.$fMonadFixProduct_$cmfix_closure:
	.quad	Data.Functor.Product.$fMonadFixProduct_$cmfix_info


==================== Asm code ====================
2018-03-16 16:12:05.171596902 UTC

.section .text
.align 8
sat_sgaDt_entry:
_cgcrl:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcrm
_cgcrn:
	leaq block_cgcrj_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rbx
	addq $-8,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_cgcrm:
	jmp *-8(%r13)
	.size sat_sgaDt_entry, .-sat_sgaDt_entry


==================== Asm code ====================
2018-03-16 16:12:05.172206419 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaDt_info:
	.quad	sat_sgaDt_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.172837296 UTC

.section .text
.align 8
_cgcrj:
_cgcrj:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cgcrj, .-_cgcrj


==================== Asm code ====================
2018-03-16 16:12:05.173431721 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcrj_info:
	.quad	_cgcrj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.174218704 UTC

.section .text
.align 8
sat_sgaDu_entry:
_cgcrr:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcrs
_cgcrt:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cgcrv
_cgcru:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_sgaDt_info(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *Control.Monad.Fix.mfix_entry@gotpcrel(%rip)
_cgcrv:
	movq $16,904(%r13)
_cgcrs:
	jmp *-16(%r13)
	.size sat_sgaDu_entry, .-sat_sgaDu_entry


==================== Asm code ====================
2018-03-16 16:12:05.174896517 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaDu_info:
	.quad	sat_sgaDu_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:12:05.175599502 UTC

.section .text
.align 8
sat_sgaDn_entry:
_cgcrH:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcrI
_cgcrJ:
	leaq block_cgcrF_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rbx
	addq $-8,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_cgcrI:
	jmp *-8(%r13)
	.size sat_sgaDn_entry, .-sat_sgaDn_entry


==================== Asm code ====================
2018-03-16 16:12:05.176235263 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaDn_info:
	.quad	sat_sgaDn_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.176875699 UTC

.section .text
.align 8
_cgcrF:
_cgcrF:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cgcrF, .-_cgcrF


==================== Asm code ====================
2018-03-16 16:12:05.177504998 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcrF_info:
	.quad	_cgcrF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.17831589 UTC

.section .text
.align 8
sat_sgaDo_entry:
_cgcrN:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcrO
_cgcrP:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cgcrR
_cgcrQ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_sgaDn_info(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *Control.Monad.Fix.mfix_entry@gotpcrel(%rip)
_cgcrR:
	movq $16,904(%r13)
_cgcrO:
	jmp *-16(%r13)
	.size sat_sgaDo_entry, .-sat_sgaDo_entry


==================== Asm code ====================
2018-03-16 16:12:05.179041263 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaDo_info:
	.quad	sat_sgaDo_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:12:05.180415469 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadFixProduct_$cmfix_entry
.type Data.Functor.Product.$fMonadFixProduct_$cmfix_entry, @object
Data.Functor.Product.$fMonadFixProduct_$cmfix_entry:
_cgcrT:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cgcrX
_cgcrW:
	leaq sat_sgaDu_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	leaq sat_sgaDo_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-32(%r12)
	movq %rdi,-24(%r12)
	leaq Data.Functor.Product.Pair_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgcrX:
	movq $88,904(%r13)
	leaq Data.Functor.Product.$fMonadFixProduct_$cmfix_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadFixProduct_$cmfix_entry, .-Data.Functor.Product.$fMonadFixProduct_$cmfix_entry


==================== Asm code ====================
2018-03-16 16:12:05.181534311 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadFixProduct_$cmfix_info
.type Data.Functor.Product.$fMonadFixProduct_$cmfix_info, @object
Data.Functor.Product.$fMonadFixProduct_$cmfix_info:
	.quad	Data.Functor.Product.$fMonadFixProduct_$cmfix_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:05.185228666 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_closure
.type Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_closure, @object
Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_closure:
	.quad	Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.185998901 UTC

.section .text
.align 8
sat_sgaDy_entry:
_cgcsM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcsN
_cgcsO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Control.Monad.Fix.$p1MonadFix_entry@gotpcrel(%rip)
_cgcsN:
	jmp *-16(%r13)
	.size sat_sgaDy_entry, .-sat_sgaDy_entry


==================== Asm code ====================
2018-03-16 16:12:05.186654391 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaDy_info:
	.quad	sat_sgaDy_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.187360406 UTC

.section .text
.align 8
sat_sgaDx_entry:
_cgcsT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcsU
_cgcsV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Control.Monad.Fix.$p1MonadFix_entry@gotpcrel(%rip)
_cgcsU:
	jmp *-16(%r13)
	.size sat_sgaDx_entry, .-sat_sgaDx_entry


==================== Asm code ====================
2018-03-16 16:12:05.187983863 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaDx_info:
	.quad	sat_sgaDx_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.188695058 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_entry
.type Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_entry, @object
Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_entry:
_cgcsW:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cgct0
_cgcsZ:
	leaq sat_sgaDy_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rsi,-24(%r12)
	leaq sat_sgaDx_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp Data.Functor.Product.$fMonadProduct_entry
_cgct0:
	movq $48,904(%r13)
	leaq Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_entry, .-Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_entry


==================== Asm code ====================
2018-03-16 16:12:05.189416426 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_info
.type Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_info, @object
Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_info:
	.quad	Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_entry
	.quad	0
	.quad	141733920782
	.quad	8589934607
	.quad	SgaPW_srt+512


==================== Asm code ====================
2018-03-16 16:12:05.193106909 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadFixProduct_closure
.type Data.Functor.Product.$fMonadFixProduct_closure, @object
Data.Functor.Product.$fMonadFixProduct_closure:
	.quad	Data.Functor.Product.$fMonadFixProduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.194158961 UTC

.section .text
.align 8
sat_sgaDC_entry:
_cgctq:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fMonadFixProduct_$cmfix_entry
	.size sat_sgaDC_entry, .-sat_sgaDC_entry


==================== Asm code ====================
2018-03-16 16:12:05.194751872 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaDC_info:
	.quad	sat_sgaDC_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.195439532 UTC

.section .text
.align 8
sat_sgaDB_entry:
_cgctx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcty
_cgctz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_entry
_cgcty:
	jmp *-16(%r13)
	.size sat_sgaDB_entry, .-sat_sgaDB_entry


==================== Asm code ====================
2018-03-16 16:12:05.196070933 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaDB_info:
	.quad	sat_sgaDB_entry
	.quad	2
	.quad	4294967314
	.quad	SgaPW_srt+552


==================== Asm code ====================
2018-03-16 16:12:05.196842991 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadFixProduct_entry
.type Data.Functor.Product.$fMonadFixProduct_entry, @object
Data.Functor.Product.$fMonadFixProduct_entry:
_cgctB:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cgctF
_cgctE:
	leaq sat_sgaDC_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	leaq sat_sgaDB_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq Control.Monad.Fix.C:MonadFix_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -71(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgctF:
	movq $80,904(%r13)
	leaq Data.Functor.Product.$fMonadFixProduct_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadFixProduct_entry, .-Data.Functor.Product.$fMonadFixProduct_entry


==================== Asm code ====================
2018-03-16 16:12:05.197589718 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadFixProduct_info
.type Data.Functor.Product.$fMonadFixProduct_info, @object
Data.Functor.Product.$fMonadFixProduct_info:
	.quad	Data.Functor.Product.$fMonadFixProduct_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	SgaPW_srt+552


==================== Asm code ====================
2018-03-16 16:12:05.203032417 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadZipProduct_$cmzipWith_closure
.type Data.Functor.Product.$fMonadZipProduct_$cmzipWith_closure, @object
Data.Functor.Product.$fMonadZipProduct_$cmzipWith_closure:
	.quad	Data.Functor.Product.$fMonadZipProduct_$cmzipWith_info


==================== Asm code ====================
2018-03-16 16:12:05.203833163 UTC

.section .text
.align 8
sat_sgaDP_entry:
_cgcug:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcuh
_cgcui:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp *Control.Monad.Zip.mzipWith_entry@gotpcrel(%rip)
_cgcuh:
	jmp *-16(%r13)
	.size sat_sgaDP_entry, .-sat_sgaDP_entry


==================== Asm code ====================
2018-03-16 16:12:05.204529304 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaDP_info:
	.quad	sat_sgaDP_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.205235637 UTC

.section .text
.align 8
sat_sgaDO_entry:
_cgcun:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcuo
_cgcup:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp *Control.Monad.Zip.mzipWith_entry@gotpcrel(%rip)
_cgcuo:
	jmp *-16(%r13)
	.size sat_sgaDO_entry, .-sat_sgaDO_entry


==================== Asm code ====================
2018-03-16 16:12:05.2059391 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaDO_info:
	.quad	sat_sgaDO_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.206696715 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadZipProduct_$cmzipWith_entry
.type Data.Functor.Product.$fMonadZipProduct_$cmzipWith_entry, @object
Data.Functor.Product.$fMonadZipProduct_$cmzipWith_entry:
_cgcuq:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcus
_cgcut:
	leaq block_cgcu2_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgcu2
_cgcu3:
	movq (%rbx),%rax
	jmp *(%rax)
_cgcus:
	leaq Data.Functor.Product.$fMonadZipProduct_$cmzipWith_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadZipProduct_$cmzipWith_entry, .-Data.Functor.Product.$fMonadZipProduct_$cmzipWith_entry


==================== Asm code ====================
2018-03-16 16:12:05.207335171 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadZipProduct_$cmzipWith_info
.type Data.Functor.Product.$fMonadZipProduct_$cmzipWith_info, @object
Data.Functor.Product.$fMonadZipProduct_$cmzipWith_info:
	.quad	Data.Functor.Product.$fMonadZipProduct_$cmzipWith_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:12:05.20812556 UTC

.section .text
.align 8
_cgcu2:
_cgcu2:
	leaq block_cgcu7_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgcu7
_cgcu8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgcu2, .-_cgcu2


==================== Asm code ====================
2018-03-16 16:12:05.208742066 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcu2_info:
	.quad	_cgcu2
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.209802919 UTC

.section .text
.align 8
_cgcu7:
_cgcu7:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _cgcux
_cgcuw:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgaDP_info(%rip),%rcx
	movq %rcx,-112(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-96(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-88(%r12)
	movq 8(%rbp),%rdx
	movq %rdx,-80(%r12)
	movq %rbx,-72(%r12)
	leaq sat_sgaDO_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq %rcx,-40(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	leaq Data.Functor.Product.Pair_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -64(%r12),%rax
	movq %rax,-8(%r12)
	leaq -112(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgcux:
	movq $120,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgcu7, .-_cgcu7


==================== Asm code ====================
2018-03-16 16:12:05.210576102 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcu7_info:
	.quad	_cgcu7
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.214247762 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_closure
.type Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_closure, @object
Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_closure:
	.quad	Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.214986857 UTC

.section .text
.align 8
sat_sgaDT_entry:
_cgcvp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcvq
_cgcvr:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Control.Monad.Zip.$p1MonadZip_entry@gotpcrel(%rip)
_cgcvq:
	jmp *-16(%r13)
	.size sat_sgaDT_entry, .-sat_sgaDT_entry


==================== Asm code ====================
2018-03-16 16:12:05.215640584 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaDT_info:
	.quad	sat_sgaDT_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.216309681 UTC

.section .text
.align 8
sat_sgaDS_entry:
_cgcvw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcvx
_cgcvy:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Control.Monad.Zip.$p1MonadZip_entry@gotpcrel(%rip)
_cgcvx:
	jmp *-16(%r13)
	.size sat_sgaDS_entry, .-sat_sgaDS_entry


==================== Asm code ====================
2018-03-16 16:12:05.21696551 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaDS_info:
	.quad	sat_sgaDS_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.217720618 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_entry
.type Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_entry, @object
Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_entry:
_cgcvz:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cgcvD
_cgcvC:
	leaq sat_sgaDT_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rsi,-24(%r12)
	leaq sat_sgaDS_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp Data.Functor.Product.$fMonadProduct_entry
_cgcvD:
	movq $48,904(%r13)
	leaq Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_entry, .-Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_entry


==================== Asm code ====================
2018-03-16 16:12:05.218379584 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_info
.type Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_info, @object
Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_info:
	.quad	Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_entry
	.quad	0
	.quad	554050781198
	.quad	8589934607
	.quad	SgaPW_srt+512


==================== Asm code ====================
2018-03-16 16:12:05.22419023 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadZipProduct_$cmzip_closure
.type Data.Functor.Product.$fMonadZipProduct_$cmzip_closure, @object
Data.Functor.Product.$fMonadZipProduct_$cmzip_closure:
	.quad	Data.Functor.Product.$fMonadZipProduct_$cmzip_info


==================== Asm code ====================
2018-03-16 16:12:05.22494149 UTC

.section .text
.align 8
sat_sgaE5_entry:
_cgcwc:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcwd
_cgcwe:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq GHC.Tuple.(,)_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp *Control.Monad.Zip.mzipWith_entry@gotpcrel(%rip)
_cgcwd:
	jmp *-16(%r13)
	.size sat_sgaE5_entry, .-sat_sgaE5_entry


==================== Asm code ====================
2018-03-16 16:12:05.225972618 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaE5_info:
	.quad	sat_sgaE5_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.226723122 UTC

.section .text
.align 8
sat_sgaE4_entry:
_cgcwj:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcwk
_cgcwl:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq GHC.Tuple.(,)_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp *Control.Monad.Zip.mzipWith_entry@gotpcrel(%rip)
_cgcwk:
	jmp *-16(%r13)
	.size sat_sgaE4_entry, .-sat_sgaE4_entry


==================== Asm code ====================
2018-03-16 16:12:05.227392931 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaE4_info:
	.quad	sat_sgaE4_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.22814642 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadZipProduct_$cmzip_entry
.type Data.Functor.Product.$fMonadZipProduct_$cmzip_entry, @object
Data.Functor.Product.$fMonadZipProduct_$cmzip_entry:
_cgcwm:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcwo
_cgcwp:
	leaq block_cgcvY_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cgcvY
_cgcvZ:
	movq (%rbx),%rax
	jmp *(%rax)
_cgcwo:
	leaq Data.Functor.Product.$fMonadZipProduct_$cmzip_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadZipProduct_$cmzip_entry, .-Data.Functor.Product.$fMonadZipProduct_$cmzip_entry


==================== Asm code ====================
2018-03-16 16:12:05.228821631 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadZipProduct_$cmzip_info
.type Data.Functor.Product.$fMonadZipProduct_$cmzip_info, @object
Data.Functor.Product.$fMonadZipProduct_$cmzip_info:
	.quad	Data.Functor.Product.$fMonadZipProduct_$cmzip_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:12:05.229583022 UTC

.section .text
.align 8
_cgcvY:
_cgcvY:
	leaq block_cgcw3_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgcw3
_cgcw4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgcvY, .-_cgcvY


==================== Asm code ====================
2018-03-16 16:12:05.230209451 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcvY_info:
	.quad	_cgcvY
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.230995026 UTC

.section .text
.align 8
_cgcw3:
_cgcw3:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cgcwt
_cgcws:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgaE5_info(%rip),%rcx
	movq %rcx,-96(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	leaq sat_sgaE4_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	leaq Data.Functor.Product.Pair_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgcwt:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgcw3, .-_cgcw3


==================== Asm code ====================
2018-03-16 16:12:05.23176573 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcw3_info:
	.quad	_cgcw3
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.252785638 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cmunzip_closure
.type Data.Functor.Product.$w$cmunzip_closure, @object
Data.Functor.Product.$w$cmunzip_closure:
	.quad	Data.Functor.Product.$w$cmunzip_info


==================== Asm code ====================
2018-03-16 16:12:05.254190553 UTC

.section .text
.align 8
$dMonad_sgaE9_entry:
_cgcxn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcxo
_cgcxp:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Control.Monad.Zip.$p1MonadZip_entry@gotpcrel(%rip)
_cgcxo:
	jmp *-16(%r13)
	.size $dMonad_sgaE9_entry, .-$dMonad_sgaE9_entry


==================== Asm code ====================
2018-03-16 16:12:05.255080166 UTC

.section .data.rel.ro
.align 8
.align 1
$dMonad_sgaE9_info:
	.quad	$dMonad_sgaE9_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.256063093 UTC

.section .text
.align 8
$dMonad1_sgaEa_entry:
_cgcxu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcxv
_cgcxw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Control.Monad.Zip.$p1MonadZip_entry@gotpcrel(%rip)
_cgcxv:
	jmp *-16(%r13)
	.size $dMonad1_sgaEa_entry, .-$dMonad1_sgaEa_entry


==================== Asm code ====================
2018-03-16 16:12:05.256916055 UTC

.section .data.rel.ro
.align 8
.align 1
$dMonad1_sgaEa_info:
	.quad	$dMonad1_sgaEa_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.257873279 UTC

.section .text
.align 8
lvl9_sgaEG_entry:
_cgcxO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcxP
_cgcxQ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.$p1Monad_entry@gotpcrel(%rip)
_cgcxP:
	jmp *-16(%r13)
	.size lvl9_sgaEG_entry, .-lvl9_sgaEG_entry


==================== Asm code ====================
2018-03-16 16:12:05.258751393 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_sgaEG_info:
	.quad	lvl9_sgaEG_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.259815724 UTC

.section .text
.align 8
sat_sgaEM_entry:
_cgcxX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcxY
_cgcxZ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgcy1
_cgcy0:
	movq 7(%rbx),%rax
	movq stg_sel_1_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Base.pure_entry@gotpcrel(%rip)
_cgcy1:
	movq $24,904(%r13)
_cgcxY:
	jmp *-8(%r13)
	.size sat_sgaEM_entry, .-sat_sgaEM_entry


==================== Asm code ====================
2018-03-16 16:12:05.260809842 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaEM_info:
	.quad	sat_sgaEM_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.261961764 UTC

.section .text
.align 8
sat_sgaEN_entry:
_cgcy2:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcy3
_cgcy4:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cgcy6
_cgcy5:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq lvl9_sgaEG_info(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rax,-16(%r12)
	leaq sat_sgaEM_info(%rip),%rcx
	movq %rcx,-8(%r12)
	leaq -32(%r12),%rcx
	movq %rcx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rbx,-32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Base.>>=_entry@gotpcrel(%rip)
_cgcy6:
	movq $40,904(%r13)
_cgcy3:
	jmp *-16(%r13)
	.size sat_sgaEN_entry, .-sat_sgaEN_entry


==================== Asm code ====================
2018-03-16 16:12:05.262944306 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaEN_info:
	.quad	sat_sgaEN_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:12:05.263852769 UTC

.section .text
.align 8
lvl9_sgaEy_entry:
_cgcyf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcyg
_cgcyh:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.$p1Monad_entry@gotpcrel(%rip)
_cgcyg:
	jmp *-16(%r13)
	.size lvl9_sgaEy_entry, .-lvl9_sgaEy_entry


==================== Asm code ====================
2018-03-16 16:12:05.264721371 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_sgaEy_info:
	.quad	lvl9_sgaEy_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.265807375 UTC

.section .text
.align 8
sat_sgaEE_entry:
_cgcyo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcyp
_cgcyq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgcys
_cgcyr:
	movq 7(%rbx),%rax
	movq stg_sel_1_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Base.pure_entry@gotpcrel(%rip)
_cgcys:
	movq $24,904(%r13)
_cgcyp:
	jmp *-8(%r13)
	.size sat_sgaEE_entry, .-sat_sgaEE_entry


==================== Asm code ====================
2018-03-16 16:12:05.266723379 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaEE_info:
	.quad	sat_sgaEE_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.267870063 UTC

.section .text
.align 8
sat_sgaEF_entry:
_cgcyt:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcyu
_cgcyv:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cgcyx
_cgcyw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq lvl9_sgaEy_info(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rax,-16(%r12)
	leaq sat_sgaEE_info(%rip),%rcx
	movq %rcx,-8(%r12)
	leaq -32(%r12),%rcx
	movq %rcx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rbx,-32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Base.>>=_entry@gotpcrel(%rip)
_cgcyx:
	movq $40,904(%r13)
_cgcyu:
	jmp *-16(%r13)
	.size sat_sgaEF_entry, .-sat_sgaEF_entry


==================== Asm code ====================
2018-03-16 16:12:05.268927119 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaEF_info:
	.quad	sat_sgaEF_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:12:05.270039937 UTC

.section .text
.align 8
sat_sgaEO_entry:
_cgcyy:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcyA
_cgcyB:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cgcxB_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 16(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgcxB
_cgcxC:
	movq (%rbx),%rax
	jmp *(%rax)
_cgcyA:
	jmp *-16(%r13)
	.size sat_sgaEO_entry, .-sat_sgaEO_entry


==================== Asm code ====================
2018-03-16 16:12:05.271000347 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaEO_info:
	.quad	sat_sgaEO_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.272096024 UTC

.section .text
.align 8
_cgcxB:
_cgcxB:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cgcyE
_cgcyD:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgaEN_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-64(%r12)
	movq %rbx,-56(%r12)
	leaq sat_sgaEF_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	leaq Data.Functor.Product.Pair_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgcyE:
	movq $88,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgcxB, .-_cgcxB


==================== Asm code ====================
2018-03-16 16:12:05.27313018 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcxB_info:
	.quad	_cgcxB
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.274192529 UTC

.section .text
.align 8
lvl9_sgaEm_entry:
_cgcyX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcyY
_cgcyZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.$p1Monad_entry@gotpcrel(%rip)
_cgcyY:
	jmp *-16(%r13)
	.size lvl9_sgaEm_entry, .-lvl9_sgaEm_entry


==================== Asm code ====================
2018-03-16 16:12:05.27513903 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_sgaEm_info:
	.quad	lvl9_sgaEm_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.276284804 UTC

.section .text
.align 8
sat_sgaEs_entry:
_cgcz6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcz7
_cgcz8:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgcza
_cgcz9:
	movq 7(%rbx),%rax
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Base.pure_entry@gotpcrel(%rip)
_cgcza:
	movq $24,904(%r13)
_cgcz7:
	jmp *-8(%r13)
	.size sat_sgaEs_entry, .-sat_sgaEs_entry


==================== Asm code ====================
2018-03-16 16:12:05.277385954 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaEs_info:
	.quad	sat_sgaEs_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.278643227 UTC

.section .text
.align 8
sat_sgaEt_entry:
_cgczb:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgczc
_cgczd:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cgczf
_cgcze:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq lvl9_sgaEm_info(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rax,-16(%r12)
	leaq sat_sgaEs_info(%rip),%rcx
	movq %rcx,-8(%r12)
	leaq -32(%r12),%rcx
	movq %rcx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rbx,-32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Base.>>=_entry@gotpcrel(%rip)
_cgczf:
	movq $40,904(%r13)
_cgczc:
	jmp *-16(%r13)
	.size sat_sgaEt_entry, .-sat_sgaEt_entry


==================== Asm code ====================
2018-03-16 16:12:05.28001711 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaEt_info:
	.quad	sat_sgaEt_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:12:05.280986764 UTC

.section .text
.align 8
lvl9_sgaEe_entry:
_cgczo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgczp
_cgczq:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.$p1Monad_entry@gotpcrel(%rip)
_cgczp:
	jmp *-16(%r13)
	.size lvl9_sgaEe_entry, .-lvl9_sgaEe_entry


==================== Asm code ====================
2018-03-16 16:12:05.282788662 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_sgaEe_info:
	.quad	lvl9_sgaEe_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.28399216 UTC

.section .text
.align 8
sat_sgaEk_entry:
_cgczx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgczy
_cgczz:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgczB
_cgczA:
	movq 7(%rbx),%rax
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Base.pure_entry@gotpcrel(%rip)
_cgczB:
	movq $24,904(%r13)
_cgczy:
	jmp *-8(%r13)
	.size sat_sgaEk_entry, .-sat_sgaEk_entry


==================== Asm code ====================
2018-03-16 16:12:05.284954435 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaEk_info:
	.quad	sat_sgaEk_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.286075415 UTC

.section .text
.align 8
sat_sgaEl_entry:
_cgczC:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgczD
_cgczE:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cgczG
_cgczF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq lvl9_sgaEe_info(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rax,-16(%r12)
	leaq sat_sgaEk_info(%rip),%rcx
	movq %rcx,-8(%r12)
	leaq -32(%r12),%rcx
	movq %rcx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rbx,-32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Base.>>=_entry@gotpcrel(%rip)
_cgczG:
	movq $40,904(%r13)
_cgczD:
	jmp *-16(%r13)
	.size sat_sgaEl_entry, .-sat_sgaEl_entry


==================== Asm code ====================
2018-03-16 16:12:05.287064128 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaEl_info:
	.quad	sat_sgaEl_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:12:05.288091894 UTC

.section .text
.align 8
sat_sgaEu_entry:
_cgczH:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgczJ
_cgczK:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cgcyK_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 16(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgcyK
_cgcyL:
	movq (%rbx),%rax
	jmp *(%rax)
_cgczJ:
	jmp *-16(%r13)
	.size sat_sgaEu_entry, .-sat_sgaEu_entry


==================== Asm code ====================
2018-03-16 16:12:05.289039767 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaEu_info:
	.quad	sat_sgaEu_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.290095692 UTC

.section .text
.align 8
_cgcyK:
_cgcyK:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cgczN
_cgczM:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgaEt_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-64(%r12)
	movq %rbx,-56(%r12)
	leaq sat_sgaEl_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	leaq Data.Functor.Product.Pair_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgczN:
	movq $88,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgcyK, .-_cgcyK


==================== Asm code ====================
2018-03-16 16:12:05.291111449 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcyK_info:
	.quad	_cgcyK
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.292215455 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cmunzip_entry
.type Data.Functor.Product.$w$cmunzip_entry, @object
Data.Functor.Product.$w$cmunzip_entry:
_cgczP:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _cgczT
_cgczS:
	leaq $dMonad_sgaE9_info(%rip),%rax
	movq %rax,-120(%r12)
	movq %r14,-104(%r12)
	leaq $dMonad1_sgaEa_info(%rip),%rax
	movq %rax,-96(%r12)
	movq %rsi,-80(%r12)
	leaq sat_sgaEO_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %rdi,-56(%r12)
	leaq -120(%r12),%rax
	movq %rax,-48(%r12)
	leaq -96(%r12),%rbx
	movq %rbx,-40(%r12)
	leaq sat_sgaEu_info(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rdi,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -72(%r12),%r14
	leaq -32(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgczT:
	movq $128,904(%r13)
	leaq Data.Functor.Product.$w$cmunzip_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cmunzip_entry, .-Data.Functor.Product.$w$cmunzip_entry


==================== Asm code ====================
2018-03-16 16:12:05.293090686 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cmunzip_info
.type Data.Functor.Product.$w$cmunzip_info, @object
Data.Functor.Product.$w$cmunzip_info:
	.quad	Data.Functor.Product.$w$cmunzip_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:05.296217401 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadZipProduct_$cmunzip_closure
.type Data.Functor.Product.$fMonadZipProduct_$cmunzip_closure, @object
Data.Functor.Product.$fMonadZipProduct_$cmunzip_closure:
	.quad	Data.Functor.Product.$fMonadZipProduct_$cmunzip_info


==================== Asm code ====================
2018-03-16 16:12:05.296957159 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadZipProduct_$cmunzip_entry
.type Data.Functor.Product.$fMonadZipProduct_$cmunzip_entry, @object
Data.Functor.Product.$fMonadZipProduct_$cmunzip_entry:
_cgcCk:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcCl
_cgcCm:
	leaq block_cgcCh_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp Data.Functor.Product.$w$cmunzip_entry
_cgcCl:
	leaq Data.Functor.Product.$fMonadZipProduct_$cmunzip_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadZipProduct_$cmunzip_entry, .-Data.Functor.Product.$fMonadZipProduct_$cmunzip_entry


==================== Asm code ====================
2018-03-16 16:12:05.297772521 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadZipProduct_$cmunzip_info
.type Data.Functor.Product.$fMonadZipProduct_$cmunzip_info, @object
Data.Functor.Product.$fMonadZipProduct_$cmunzip_info:
	.quad	Data.Functor.Product.$fMonadZipProduct_$cmunzip_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:05.298521695 UTC

.section .text
.align 8
_cgcCh:
_cgcCh:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgcCp
_cgcCo:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgcCp:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cgcCh, .-_cgcCh


==================== Asm code ====================
2018-03-16 16:12:05.29914583 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcCh_info:
	.quad	_cgcCh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.303671186 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fMonadZipProduct_closure
.type Data.Functor.Product.$fMonadZipProduct_closure, @object
Data.Functor.Product.$fMonadZipProduct_closure:
	.quad	Data.Functor.Product.$fMonadZipProduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.304318706 UTC

.section .text
.align 8
sat_sgaF0_entry:
_cgcCK:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Product.$fMonadZipProduct_$cmunzip_entry
	.size sat_sgaF0_entry, .-sat_sgaF0_entry


==================== Asm code ====================
2018-03-16 16:12:05.304850438 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaF0_info:
	.quad	sat_sgaF0_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.30550143 UTC

.section .text
.align 8
sat_sgaEZ_entry:
_cgcCS:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$fMonadZipProduct_$cmzipWith_entry
	.size sat_sgaEZ_entry, .-sat_sgaEZ_entry


==================== Asm code ====================
2018-03-16 16:12:05.306096337 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaEZ_info:
	.quad	sat_sgaEZ_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:05.306731362 UTC

.section .text
.align 8
sat_sgaEY_entry:
_cgcD0:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Product.$fMonadZipProduct_$cmzip_entry
	.size sat_sgaEY_entry, .-sat_sgaEY_entry


==================== Asm code ====================
2018-03-16 16:12:05.30730355 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaEY_info:
	.quad	sat_sgaEY_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:05.308009186 UTC

.section .text
.align 8
sat_sgaEX_entry:
_cgcD7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcD8
_cgcD9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_entry
_cgcD8:
	jmp *-16(%r13)
	.size sat_sgaEX_entry, .-sat_sgaEX_entry


==================== Asm code ====================
2018-03-16 16:12:05.308656034 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaEX_info:
	.quad	sat_sgaEX_entry
	.quad	2
	.quad	4294967314
	.quad	SgaPW_srt+568


==================== Asm code ====================
2018-03-16 16:12:05.310093046 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fMonadZipProduct_entry
.type Data.Functor.Product.$fMonadZipProduct_entry, @object
Data.Functor.Product.$fMonadZipProduct_entry:
_cgcDb:
	addq $144,%r12
	cmpq 856(%r13),%r12
	ja _cgcDf
_cgcDe:
	leaq sat_sgaF0_info(%rip),%rax
	movq %rax,-136(%r12)
	movq %r14,-128(%r12)
	movq %rsi,-120(%r12)
	leaq sat_sgaEZ_info(%rip),%rax
	movq %rax,-112(%r12)
	movq %r14,-104(%r12)
	movq %rsi,-96(%r12)
	leaq sat_sgaEY_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %r14,-80(%r12)
	movq %rsi,-72(%r12)
	leaq sat_sgaEX_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-48(%r12)
	movq %rsi,-40(%r12)
	movq Control.Monad.Zip.C:MonadZip_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq -64(%r12),%rax
	movq %rax,-24(%r12)
	leaq -86(%r12),%rax
	movq %rax,-16(%r12)
	leaq -109(%r12),%rax
	movq %rax,-8(%r12)
	leaq -135(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgcDf:
	movq $144,904(%r13)
	leaq Data.Functor.Product.$fMonadZipProduct_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fMonadZipProduct_entry, .-Data.Functor.Product.$fMonadZipProduct_entry


==================== Asm code ====================
2018-03-16 16:12:05.310872767 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fMonadZipProduct_info
.type Data.Functor.Product.$fMonadZipProduct_info, @object
Data.Functor.Product.$fMonadZipProduct_info:
	.quad	Data.Functor.Product.$fMonadZipProduct_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	SgaPW_srt+568


==================== Asm code ====================
2018-03-16 16:12:05.313849356 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fGeneric1Product_$cto1_closure
.type Data.Functor.Product.$fGeneric1Product_$cto1_closure, @object
Data.Functor.Product.$fGeneric1Product_$cto1_closure:
	.quad	Data.Functor.Product.$fGeneric1Product_$cto1_info


==================== Asm code ====================
2018-03-16 16:12:05.314579566 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fGeneric1Product_$cto1_entry
.type Data.Functor.Product.$fGeneric1Product_$cto1_entry, @object
Data.Functor.Product.$fGeneric1Product_$cto1_entry:
_cgcDO:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcDS
_cgcDT:
	leaq block_cgcDM_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_cgcDS:
	leaq Data.Functor.Product.$fGeneric1Product_$cto1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fGeneric1Product_$cto1_entry, .-Data.Functor.Product.$fGeneric1Product_$cto1_entry


==================== Asm code ====================
2018-03-16 16:12:05.315223867 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fGeneric1Product_$cto1_info
.type Data.Functor.Product.$fGeneric1Product_$cto1_info, @object
Data.Functor.Product.$fGeneric1Product_$cto1_info:
	.quad	Data.Functor.Product.$fGeneric1Product_$cto1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.31590782 UTC

.section .text
.align 8
_cgcDM:
_cgcDM:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgcDW
_cgcDV:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq Data.Functor.Product.Pair_con_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgcDW:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgcDM, .-_cgcDM


==================== Asm code ====================
2018-03-16 16:12:05.316519955 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcDM_info:
	.quad	_cgcDM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.319451651 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fGeneric1Product1_closure
.type Data.Functor.Product.$fGeneric1Product1_closure, @object
Data.Functor.Product.$fGeneric1Product1_closure:
	.quad	Data.Functor.Product.$fGeneric1Product1_info


==================== Asm code ====================
2018-03-16 16:12:05.320200012 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fGeneric1Product1_entry
.type Data.Functor.Product.$fGeneric1Product1_entry, @object
Data.Functor.Product.$fGeneric1Product1_entry:
_cgcEf:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcEj
_cgcEk:
	leaq block_cgcEc_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cgcEc
_cgcEd:
	movq (%rbx),%rax
	jmp *(%rax)
_cgcEj:
	leaq Data.Functor.Product.$fGeneric1Product1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fGeneric1Product1_entry, .-Data.Functor.Product.$fGeneric1Product1_entry


==================== Asm code ====================
2018-03-16 16:12:05.320817017 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fGeneric1Product1_info
.type Data.Functor.Product.$fGeneric1Product1_info, @object
Data.Functor.Product.$fGeneric1Product1_info:
	.quad	Data.Functor.Product.$fGeneric1Product1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.322379224 UTC

.section .text
.align 8
_cgcEc:
_cgcEc:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgcEn
_cgcEm:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq GHC.Generics.:*:_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgcEn:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgcEc, .-_cgcEc


==================== Asm code ====================
2018-03-16 16:12:05.323086376 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcEc_info:
	.quad	_cgcEc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.32473348 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fGeneric1Product_closure
.type Data.Functor.Product.$fGeneric1Product_closure, @object
Data.Functor.Product.$fGeneric1Product_closure:
	.quad	GHC.Generics.C:Generic1_con_info
	.quad	Data.Functor.Product.$fGeneric1Product1_closure+1
	.quad	Data.Functor.Product.$fGeneric1Product_$cto1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:12:05.327567076 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fGenericProduct_$cto_closure
.type Data.Functor.Product.$fGenericProduct_$cto_closure, @object
Data.Functor.Product.$fGenericProduct_$cto_closure:
	.quad	Data.Functor.Product.$fGenericProduct_$cto_info


==================== Asm code ====================
2018-03-16 16:12:05.328272848 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fGenericProduct_$cto_entry
.type Data.Functor.Product.$fGenericProduct_$cto_entry, @object
Data.Functor.Product.$fGenericProduct_$cto_entry:
_cgcEI:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcEM
_cgcEN:
	leaq block_cgcEG_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_cgcEM:
	leaq Data.Functor.Product.$fGenericProduct_$cto_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fGenericProduct_$cto_entry, .-Data.Functor.Product.$fGenericProduct_$cto_entry


==================== Asm code ====================
2018-03-16 16:12:05.328903326 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fGenericProduct_$cto_info
.type Data.Functor.Product.$fGenericProduct_$cto_info, @object
Data.Functor.Product.$fGenericProduct_$cto_info:
	.quad	Data.Functor.Product.$fGenericProduct_$cto_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.329647551 UTC

.section .text
.align 8
_cgcEG:
_cgcEG:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgcEQ
_cgcEP:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq Data.Functor.Product.Pair_con_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgcEQ:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgcEG, .-_cgcEG


==================== Asm code ====================
2018-03-16 16:12:05.330262364 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcEG_info:
	.quad	_cgcEG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.333081124 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fGenericProduct1_closure
.type Data.Functor.Product.$fGenericProduct1_closure, @object
Data.Functor.Product.$fGenericProduct1_closure:
	.quad	Data.Functor.Product.$fGenericProduct1_info


==================== Asm code ====================
2018-03-16 16:12:05.334074412 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fGenericProduct1_entry
.type Data.Functor.Product.$fGenericProduct1_entry, @object
Data.Functor.Product.$fGenericProduct1_entry:
_cgcF9:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcFd
_cgcFe:
	leaq block_cgcF6_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cgcF6
_cgcF7:
	movq (%rbx),%rax
	jmp *(%rax)
_cgcFd:
	leaq Data.Functor.Product.$fGenericProduct1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fGenericProduct1_entry, .-Data.Functor.Product.$fGenericProduct1_entry


==================== Asm code ====================
2018-03-16 16:12:05.334687198 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fGenericProduct1_info
.type Data.Functor.Product.$fGenericProduct1_info, @object
Data.Functor.Product.$fGenericProduct1_info:
	.quad	Data.Functor.Product.$fGenericProduct1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.335426015 UTC

.section .text
.align 8
_cgcF6:
_cgcF6:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgcFh
_cgcFg:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq GHC.Generics.:*:_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgcFh:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgcF6, .-_cgcF6


==================== Asm code ====================
2018-03-16 16:12:05.336053023 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcF6_info:
	.quad	_cgcF6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.337773108 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fGenericProduct_closure
.type Data.Functor.Product.$fGenericProduct_closure, @object
Data.Functor.Product.$fGenericProduct_closure:
	.quad	GHC.Generics.C:Generic_con_info
	.quad	Data.Functor.Product.$fGenericProduct1_closure+1
	.quad	Data.Functor.Product.$fGenericProduct_$cto_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:12:05.343087359 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgfoldl_closure
.type Data.Functor.Product.$fDataProduct_$cgfoldl_closure, @object
Data.Functor.Product.$fDataProduct_$cgfoldl_closure:
	.quad	Data.Functor.Product.$fDataProduct_$cgfoldl_info


==================== Asm code ====================
2018-03-16 16:12:05.343819435 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgfoldl_slow
.type Data.Functor.Product.$fDataProduct_$cgfoldl_slow, @object
Data.Functor.Product.$fDataProduct_$cgfoldl_slow:
_cgcFx:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$fDataProduct_$cgfoldl_entry
	.size Data.Functor.Product.$fDataProduct_$cgfoldl_slow, .-Data.Functor.Product.$fDataProduct_$cgfoldl_slow


==================== Asm code ====================
2018-03-16 16:12:05.344597099 UTC

.section .text
.align 8
sat_sgaFt_entry:
_cgcFO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcFP
_cgcFQ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq Data.Functor.Product.Pair_closure+2(%rip),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_cgcFP:
	jmp *-16(%r13)
	.size sat_sgaFt_entry, .-sat_sgaFt_entry


==================== Asm code ====================
2018-03-16 16:12:05.345569398 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaFt_info:
	.quad	sat_sgaFt_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.346352238 UTC

.section .text
.align 8
sat_sgaFu_entry:
_cgcFR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcFS
_cgcFT:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgcFV
_cgcFU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	leaq sat_sgaFt_info(%rip),%rsi
	movq %rsi,-16(%r12)
	movq %rdx,(%r12)
	movq %rbx,%rdi
	leaq -16(%r12),%rsi
	movq %rax,%r14
	movq %rcx,%rbx
	addq $-16,%rbp
	jmp *stg_ap_ppp_fast@gotpcrel(%rip)
_cgcFV:
	movq $24,904(%r13)
_cgcFS:
	jmp *-16(%r13)
	.size sat_sgaFu_entry, .-sat_sgaFu_entry


==================== Asm code ====================
2018-03-16 16:12:05.347068236 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaFu_info:
	.quad	sat_sgaFu_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.347814232 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgfoldl_entry
.type Data.Functor.Product.$fDataProduct_$cgfoldl_entry, @object
Data.Functor.Product.$fDataProduct_$cgfoldl_entry:
_cgcFW:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcFX
_cgcFY:
	leaq block_cgcFB_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 24(%rbp),%rbx
	movq %r9,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgcFB
_cgcFC:
	movq (%rbx),%rax
	jmp *(%rax)
_cgcFX:
	leaq Data.Functor.Product.$fDataProduct_$cgfoldl_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$fDataProduct_$cgfoldl_entry, .-Data.Functor.Product.$fDataProduct_$cgfoldl_entry


==================== Asm code ====================
2018-03-16 16:12:05.348468066 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgfoldl_info
.type Data.Functor.Product.$fDataProduct_$cgfoldl_info, @object
Data.Functor.Product.$fDataProduct_$cgfoldl_info:
	.quad	Data.Functor.Product.$fDataProduct_$cgfoldl_entry
	.quad	0
	.quad	14
	.quad	38654705664
	.quad	0
	.quad	9
	.quad	Data.Functor.Product.$fDataProduct_$cgfoldl_slow


==================== Asm code ====================
2018-03-16 16:12:05.349290313 UTC

.section .text
.align 8
_cgcFB:
_cgcFB:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cgcG1
_cgcG0:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgaFu_info(%rip),%rcx
	movq %rcx,-40(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq 24(%rbp),%rdx
	movq %rdx,-8(%r12)
	movq %rax,(%r12)
	movq %rbx,%rdi
	leaq -40(%r12),%rsi
	movq 8(%rbp),%r14
	movq %rcx,%rbx
	addq $40,%rbp
	jmp *stg_ap_ppp_fast@gotpcrel(%rip)
_cgcG1:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgcFB, .-_cgcFB


==================== Asm code ====================
2018-03-16 16:12:05.350012487 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcFB_info:
	.quad	_cgcFB
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.351720288 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Product.$fDataProduct6_bytes
.type Data.Functor.Product.$fDataProduct6_bytes, @object
Data.Functor.Product.$fDataProduct6_bytes:
	.asciz "Product"


==================== Asm code ====================
2018-03-16 16:12:05.354433065 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct5_closure
.type Data.Functor.Product.$fDataProduct5_closure, @object
Data.Functor.Product.$fDataProduct5_closure:
	.quad	Data.Functor.Product.$fDataProduct5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.355313325 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct5_entry
.type Data.Functor.Product.$fDataProduct5_entry, @object
Data.Functor.Product.$fDataProduct5_entry:
_cgcGA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcGB
_cgcGC:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cgcGz
_cgcGy:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Data.Functor.Product.$fDataProduct6_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cgcGB:
	jmp *-16(%r13)
_cgcGz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Product.$fDataProduct5_entry, .-Data.Functor.Product.$fDataProduct5_entry


==================== Asm code ====================
2018-03-16 16:12:05.356003455 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct5_info
.type Data.Functor.Product.$fDataProduct5_info, @object
Data.Functor.Product.$fDataProduct5_info:
	.quad	Data.Functor.Product.$fDataProduct5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:12:05.362004724 UTC

.section .data
.align 8
.align 1
go61_rg5o2_closure:
	.quad	go61_rg5o2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.362723727 UTC

.section .text
.align 8
go61_rg5o2_entry:
_cgcGW:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcGX
_ugcHA:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _cgcGM
_cgcGX:
	leaq go61_rg5o2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size go61_rg5o2_entry, .-go61_rg5o2_entry


==================== Asm code ====================
2018-03-16 16:12:05.363349483 UTC

.section .data.rel.ro
.align 8
.align 1
go61_rg5o2_info:
	.quad	go61_rg5o2_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	SgaPW_srt+584


==================== Asm code ====================
2018-03-16 16:12:05.364061236 UTC

.section .text
.align 8
_cgcGM:
_cgcGM:
	movq (%rbp),%rax
	leaq block_cgcGP_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cgcGP
_cgcGQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgcGM, .-_cgcGM


==================== Asm code ====================
2018-03-16 16:12:05.364863926 UTC

.section .text
.align 8
_cgcGP:
_cgcGP:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ugcHB
_cgcGU:
	leaq block_cgcH4_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgcH4
_cgcH6:
	movq (%rbx),%rax
	jmp *(%rax)
_ugcHB:
	addq $16,%rbp
	jmp _cgcHc
	.size _cgcGP, .-_cgcGP


==================== Asm code ====================
2018-03-16 16:12:05.365541515 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcGP_info:
	.quad	_cgcGP
	.quad	1
	.quad	21474836510
	.quad	SgaPW_srt+584


==================== Asm code ====================
2018-03-16 16:12:05.366285984 UTC

.section .text
.align 8
_cgcH4:
_cgcH4:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ugcHC
_cgcHh:
	leaq block_cgcHf_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgcHf
_cgcHi:
	movq (%rbx),%rax
	jmp *(%rax)
_ugcHC:
	addq $24,%rbp
	jmp _cgcHc
	.size _cgcH4, .-_cgcH4


==================== Asm code ====================
2018-03-16 16:12:05.366963219 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcH4_info:
	.quad	_cgcH4
	.quad	2
	.quad	21474836510
	.quad	SgaPW_srt+584


==================== Asm code ====================
2018-03-16 16:12:05.367592005 UTC

.section .text
.align 8
_cgcHc:
_cgcHc:
	movq GHC.List.badHead_closure@gotpcrel(%rip),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cgcHc, .-_cgcHc


==================== Asm code ====================
2018-03-16 16:12:05.368287891 UTC

.section .text
.align 8
_cgcHf:
_cgcHf:
	leaq block_cgcHm_info(%rip),%rax
	movq %rax,(%rbp)
	leaq Data.Functor.Product.$fRead1Product2_closure(%rip),%rsi
	movq 15(%rbx),%r14
	jmp *GHC.Base.eqString_entry@gotpcrel(%rip)
	.size _cgcHf, .-_cgcHf


==================== Asm code ====================
2018-03-16 16:12:05.368870565 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcHf_info:
	.quad	_cgcHf
	.quad	3
	.quad	21474836510
	.quad	SgaPW_srt+584


==================== Asm code ====================
2018-03-16 16:12:05.369584164 UTC

.section .text
.align 8
_cgcHm:
_cgcHm:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cgcHt
_cgcHx:
	movq 24(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cgcHt:
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp _cgcGM
	.size _cgcHm, .-_cgcHm


==================== Asm code ====================
2018-03-16 16:12:05.370180786 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcHm_info:
	.quad	_cgcHm
	.quad	3
	.quad	21474836510
	.quad	SgaPW_srt+584


==================== Asm code ====================
2018-03-16 16:12:05.373698743 UTC

.section .data
.align 8
.align 1
$cPair1_rg5o3_closure:
	.quad	Data.Data.AlgConstr_con_info
	.quad	$cPair2_rg5o4_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.374247247 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct4_closure
.type Data.Functor.Product.$fDataProduct4_closure, @object
Data.Functor.Product.$fDataProduct4_closure:
	.quad	:_con_info
	.quad	Data.Functor.Product.$cPair_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.374824968 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct3_closure
.type Data.Functor.Product.$fDataProduct3_closure, @object
Data.Functor.Product.$fDataProduct3_closure:
	.quad	Data.Data.AlgRep_con_info
	.quad	Data.Functor.Product.$fDataProduct4_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.37538445 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$tProduct_closure
.type Data.Functor.Product.$tProduct_closure, @object
Data.Functor.Product.$tProduct_closure:
	.quad	Data.Data.DataType_con_info
	.quad	Data.Functor.Product.$fDataProduct5_closure
	.quad	Data.Functor.Product.$fDataProduct3_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.375939624 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$cPair_closure
.type Data.Functor.Product.$cPair_closure, @object
Data.Functor.Product.$cPair_closure:
	.quad	Data.Data.Constr_con_info
	.quad	$cPair1_rg5o3_closure+1
	.quad	Data.Functor.Product.$fRead1Product2_closure
	.quad	GHC.Types.[]_closure+1
	.quad	Data.Data.Prefix_closure+1
	.quad	Data.Functor.Product.$tProduct_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.376489131 UTC

.section .data
.align 8
.align 1
$cPair2_rg5o4_closure:
	.quad	$cPair2_rg5o4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.377436843 UTC

.section .text
.align 8
$cPair2_rg5o4_entry:
_cgcIt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcIu
_cgcIv:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cgcIs
_cgcIr:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq Data.Data.mkConstr1_closure@gotpcrel(%rip),%rsi
	leaq Data.Functor.Product.$fDataProduct4_closure+2(%rip),%r14
	addq $-16,%rbp
	jmp go61_rg5o2_entry
_cgcIu:
	jmp *-16(%r13)
_cgcIs:
	movq (%rbx),%rax
	jmp *(%rax)
	.size $cPair2_rg5o4_entry, .-$cPair2_rg5o4_entry


==================== Asm code ====================
2018-03-16 16:12:05.378164714 UTC

.section .data.rel.ro
.align 8
.align 1
$cPair2_rg5o4_info:
	.quad	$cPair2_rg5o4_entry
	.quad	0
	.quad	55834574869
	.quad	SgaPW_srt+592


==================== Asm code ====================
2018-03-16 16:12:05.379867637 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Product.$trModule4_bytes
.type Data.Functor.Product.$trModule4_bytes, @object
Data.Functor.Product.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:12:05.381671526 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$trModule3_closure
.type Data.Functor.Product.$trModule3_closure, @object
Data.Functor.Product.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.Functor.Product.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:12:05.383371022 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Product.$trModule2_bytes
.type Data.Functor.Product.$trModule2_bytes, @object
Data.Functor.Product.$trModule2_bytes:
	.asciz "Data.Functor.Product"


==================== Asm code ====================
2018-03-16 16:12:05.38497273 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$trModule1_closure
.type Data.Functor.Product.$trModule1_closure, @object
Data.Functor.Product.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.Functor.Product.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:12:05.387003242 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$trModule_closure
.type Data.Functor.Product.$trModule_closure, @object
Data.Functor.Product.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	Data.Functor.Product.$trModule3_closure+1
	.quad	Data.Functor.Product.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:12:05.388623537 UTC

.section .data
.align 8
.align 1
$krep_rg5o5_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.390984675 UTC

.section .data
.align 8
.align 1
$krep1_rg5o6_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rg5o5_closure+2
	.quad	GHC.Types.krep$*_closure
	.quad	3


==================== Asm code ====================
2018-03-16 16:12:05.392678087 UTC

.section .data
.align 8
.align 1
$krep2_rg5o7_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rg5o6_closure+4
	.quad	$krep1_rg5o6_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:12:05.394400622 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct8_closure
.type Data.Functor.Product.$fDataProduct8_closure, @object
Data.Functor.Product.$fDataProduct8_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rg5o6_closure+4
	.quad	$krep2_rg5o7_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:12:05.396069262 UTC

.section .data
.align 8
.align 1
$krep3_rg5o8_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	2


==================== Asm code ====================
2018-03-16 16:12:05.398110816 UTC

.section .data
.align 8
.align 1
$krep4_rg5o9_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 16:12:05.399626575 UTC

.section .data
.align 8
.align 1
$krep5_rg5oa_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	3


==================== Asm code ====================
2018-03-16 16:12:05.401182297 UTC

.section .data
.align 8
.align 1
$krep6_rg5ob_closure:
	.quad	GHC.Types.KindRepApp_con_info
	.quad	$krep4_rg5o9_closure+2
	.quad	$krep5_rg5oa_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:12:05.402820857 UTC

.section .data
.align 8
.align 1
$krep7_rg5oc_closure:
	.quad	GHC.Types.KindRepApp_con_info
	.quad	$krep3_rg5o8_closure+2
	.quad	$krep5_rg5oa_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:12:05.404523499 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct9_closure
.type Data.Functor.Product.$fDataProduct9_closure, @object
Data.Functor.Product.$fDataProduct9_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.Functor.Product.$fDataProduct6_bytes


==================== Asm code ====================
2018-03-16 16:12:05.406348294 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$tcProduct_closure
.type Data.Functor.Product.$tcProduct_closure, @object
Data.Functor.Product.$tcProduct_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Data.Functor.Product.$trModule_closure+1
	.quad	Data.Functor.Product.$fDataProduct9_closure+1
	.quad	Data.Functor.Product.$fDataProduct8_closure+4
	.quad	-8542107637719446275
	.quad	-2377250882401215452
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 16:12:05.408039458 UTC

.section .data
.align 8
.align 1
$krep8_rg5od_closure:
	.quad	:_con_info
	.quad	$krep5_rg5oa_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:12:05.409767721 UTC

.section .data
.align 8
.align 1
$krep9_rg5oe_closure:
	.quad	:_con_info
	.quad	$krep3_rg5o8_closure+2
	.quad	$krep8_rg5od_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:12:05.411439707 UTC

.section .data
.align 8
.align 1
$krep10_rg5of_closure:
	.quad	:_con_info
	.quad	$krep4_rg5o9_closure+2
	.quad	$krep9_rg5oe_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:12:05.413094333 UTC

.section .data
.align 8
.align 1
$krep11_rg5og_closure:
	.quad	:_con_info
	.quad	$krep_rg5o5_closure+2
	.quad	$krep10_rg5of_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:12:05.415327406 UTC

.section .data
.align 8
.align 1
$krep12_rg5oh_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	Data.Functor.Product.$tcProduct_closure+1
	.quad	$krep11_rg5og_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:12:05.417040381 UTC

.section .data
.align 8
.align 1
$krep13_rg5oi_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep7_rg5oc_closure+3
	.quad	$krep12_rg5oh_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:12:05.418692441 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$tc'Pair1_closure
.type Data.Functor.Product.$tc'Pair1_closure, @object
Data.Functor.Product.$tc'Pair1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep6_rg5ob_closure+3
	.quad	$krep13_rg5oi_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:12:05.420387671 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Product.$tc'Pair3_bytes
.type Data.Functor.Product.$tc'Pair3_bytes, @object
Data.Functor.Product.$tc'Pair3_bytes:
	.asciz "'Pair"


==================== Asm code ====================
2018-03-16 16:12:05.422380966 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$tc'Pair2_closure
.type Data.Functor.Product.$tc'Pair2_closure, @object
Data.Functor.Product.$tc'Pair2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.Functor.Product.$tc'Pair3_bytes


==================== Asm code ====================
2018-03-16 16:12:05.424100773 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$tc'Pair_closure
.type Data.Functor.Product.$tc'Pair_closure, @object
Data.Functor.Product.$tc'Pair_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Data.Functor.Product.$trModule_closure+1
	.quad	Data.Functor.Product.$tc'Pair2_closure+1
	.quad	Data.Functor.Product.$tc'Pair1_closure+4
	.quad	-7072630821168255767
	.quad	-435066010643851693
	.quad	4
	.quad	3


==================== Asm code ====================
2018-03-16 16:12:05.429050444 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cp1Data_closure
.type Data.Functor.Product.$w$cp1Data_closure, @object
Data.Functor.Product.$w$cp1Data_closure:
	.quad	Data.Functor.Product.$w$cp1Data_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.430098538 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cp1Data_entry
.type Data.Functor.Product.$w$cp1Data_entry, @object
Data.Functor.Product.$w$cp1Data_entry:
_cgcJm:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcJq
_cgcJr:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cgcJt
_cgcJs:
	movq Data.Typeable.Internal.SomeTypeRep_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	movq %r8,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%r12)
	leaq block_cgcJf_info(%rip),%rax
	movq %rax,-32(%rbp)
	movl $1,%r9d
	leaq Data.Functor.Product.$fDataProduct9_closure+1(%rip),%r8
	movq %rdi,%rax
	leaq Data.Functor.Product.$trModule_closure+1(%rip),%rdi
	movq %rsi,%rbx
	movq $-2377250882401215452,%rsi
	movq %r14,%rcx
	movq $-8542107637719446275,%r14
	leaq Data.Functor.Product.$fDataProduct8_closure+4(%rip),%rdx
	movq %rdx,-48(%rbp)
	leaq -14(%r12),%rdx
	movq %rdx,-40(%rbp)
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-48,%rbp
	jmp *Data.Typeable.Internal.$wmkTrCon_entry@gotpcrel(%rip)
_cgcJt:
	movq $40,904(%r13)
_cgcJq:
	leaq Data.Functor.Product.$w$cp1Data_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cp1Data_entry, .-Data.Functor.Product.$w$cp1Data_entry


==================== Asm code ====================
2018-03-16 16:12:05.430953424 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cp1Data_info
.type Data.Functor.Product.$w$cp1Data_info, @object
Data.Functor.Product.$w$cp1Data_info:
	.quad	Data.Functor.Product.$w$cp1Data_entry
	.quad	0
	.quad	30064771086
	.quad	17179869208
	.quad	SgaPW_srt+624


==================== Asm code ====================
2018-03-16 16:12:05.431576957 UTC

.section .text
.align 8
_cgcJf:
_cgcJf:
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-40,%rbp
	jmp _cgcJg
	.size _cgcJf, .-_cgcJf


==================== Asm code ====================
2018-03-16 16:12:05.432127177 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcJf_info:
	.quad	_cgcJf
	.quad	3
	.quad	4294967326
	.quad	SgaPW_srt+624


==================== Asm code ====================
2018-03-16 16:12:05.432881071 UTC

.section .text
.align 8
_cgcJg:
_cgcJg:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cgcJw
_cgcJv:
	movq Data.Typeable.Internal.TrTyCon_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_cgcJk_info(%rip),%rax
	movq %rax,40(%rbp)
	movq 56(%rbp),%rsi
	leaq -38(%r12),%r14
	addq $40,%rbp
	jmp *Data.Typeable.Internal.mkTrApp_entry@gotpcrel(%rip)
_cgcJw:
	movq $48,904(%r13)
	leaq block_cgcJg_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cgcJg, .-_cgcJg


==================== Asm code ====================
2018-03-16 16:12:05.433615044 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcJg_info:
	.quad	_cgcJg
	.quad	1096
	.quad	4294967326
	.quad	SgaPW_srt+624


==================== Asm code ====================
2018-03-16 16:12:05.434237494 UTC

.section .text
.align 8
_cgcJk:
_cgcJk:
	leaq block_cgcJp_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rsi
	movq %rbx,%r14
	jmp *Data.Typeable.Internal.mkTrApp_entry@gotpcrel(%rip)
	.size _cgcJk, .-_cgcJk


==================== Asm code ====================
2018-03-16 16:12:05.434786787 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcJk_info:
	.quad	_cgcJk
	.quad	131
	.quad	4294967326
	.quad	SgaPW_srt+624


==================== Asm code ====================
2018-03-16 16:12:05.435389108 UTC

.section .text
.align 8
_cgcJp:
_cgcJp:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $32,%rbp
	jmp *Data.Typeable.Internal.mkTrApp_entry@gotpcrel(%rip)
	.size _cgcJp, .-_cgcJp


==================== Asm code ====================
2018-03-16 16:12:05.435948792 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcJp_info:
	.quad	_cgcJp
	.quad	387
	.quad	4294967326
	.quad	SgaPW_srt+624


==================== Asm code ====================
2018-03-16 16:12:05.439120826 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct7_closure
.type Data.Functor.Product.$fDataProduct7_closure, @object
Data.Functor.Product.$fDataProduct7_closure:
	.quad	Data.Functor.Product.$fDataProduct7_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.439802645 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct7_entry
.type Data.Functor.Product.$fDataProduct7_entry, @object
Data.Functor.Product.$fDataProduct7_entry:
_cgcKg:
	addq $8,%rbp
	jmp Data.Functor.Product.$w$cp1Data_entry
	.size Data.Functor.Product.$fDataProduct7_entry, .-Data.Functor.Product.$fDataProduct7_entry


==================== Asm code ====================
2018-03-16 16:12:05.440353472 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct7_info
.type Data.Functor.Product.$fDataProduct7_info, @object
Data.Functor.Product.$fDataProduct7_info:
	.quad	Data.Functor.Product.$fDataProduct7_entry
	.quad	0
	.quad	4294967310
	.quad	25769803802
	.quad	SgaPW_srt+640


==================== Asm code ====================
2018-03-16 16:12:05.442115941 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct1_closure
.type Data.Functor.Product.$fDataProduct1_closure, @object
Data.Functor.Product.$fDataProduct1_closure:
	.quad	(,)_con_info
	.quad	Data.Functor.Product.Pair_closure+2
	.quad	GHC.Types.False_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:12:05.457467384 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cgmapMp_closure
.type Data.Functor.Product.$w$cgmapMp_closure, @object
Data.Functor.Product.$w$cgmapMp_closure:
	.quad	Data.Functor.Product.$w$cgmapMp_info


==================== Asm code ====================
2018-03-16 16:12:05.458563022 UTC

.section .text
.align 8
lvl9_sgaGa_entry:
_cgcKw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcKx
_cgcKy:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.mzero_entry@gotpcrel(%rip)
_cgcKx:
	jmp *-16(%r13)
	.size lvl9_sgaGa_entry, .-lvl9_sgaGa_entry


==================== Asm code ====================
2018-03-16 16:12:05.45936068 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_sgaGa_info:
	.quad	lvl9_sgaGa_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.460860174 UTC

.section .text
.align 8
sat_sgaGF_entry:
_cgcKL:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcKM
_cgcKN:
	leaq block_cgcKI_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cgcKI
_cgcKJ:
	movq (%rbx),%rax
	jmp *(%rax)
_cgcKM:
	jmp *-8(%r13)
	.size sat_sgaGF_entry, .-sat_sgaGF_entry


==================== Asm code ====================
2018-03-16 16:12:05.461782386 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaGF_info:
	.quad	sat_sgaGF_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.462491217 UTC

.section .text
.align 8
_cgcKI:
_cgcKI:
	leaq block_cgcKQ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgcKQ
_cgcKS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgcKI, .-_cgcKI


==================== Asm code ====================
2018-03-16 16:12:05.463095395 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcKI_info:
	.quad	_cgcKI
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.463800466 UTC

.section .text
.align 8
_cgcKQ:
_cgcKQ:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cgcKY
_cgcL2:
	movq 24(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp *GHC.Base.return_entry@gotpcrel(%rip)
_cgcKY:
	movq 16(%rbp),%rbx
	addq $32,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cgcKQ, .-_cgcKQ


==================== Asm code ====================
2018-03-16 16:12:05.464437688 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcKQ_info:
	.quad	_cgcKQ
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.465315713 UTC

.section .text
.align 8
sat_sgaGv_entry:
_cgcLB:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcLC
_cgcLD:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cgcLF
_cgcLE:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rsi
	movq %rsi,-48(%r12)
	movq %rdx,-32(%r12)
	movq %rcx,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	leaq -48(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Base.return_entry@gotpcrel(%rip)
_cgcLF:
	movq $56,904(%r13)
_cgcLC:
	jmp *-16(%r13)
	.size sat_sgaGv_entry, .-sat_sgaGv_entry


==================== Asm code ====================
2018-03-16 16:12:05.466085195 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaGv_info:
	.quad	sat_sgaGv_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.466902671 UTC

.section .text
.align 8
sat_sgaGr_entry:
_cgcLR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcLS
_cgcLT:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cgcLV
_cgcLU:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -48(%r12),%rbx
	movq %rbx,-8(%r12)
	movq GHC.Types.True_closure@gotpcrel(%rip),%rbx
	addq $2,%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Base.return_entry@gotpcrel(%rip)
_cgcLV:
	movq $56,904(%r13)
_cgcLS:
	jmp *-8(%r13)
	.size sat_sgaGr_entry, .-sat_sgaGr_entry


==================== Asm code ====================
2018-03-16 16:12:05.467643894 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaGr_info:
	.quad	sat_sgaGr_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.468420935 UTC

.section .text
.align 8
sat_sgaGs_entry:
_cgcLW:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcLX
_cgcLY:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgcM0
_cgcLZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_sgaGr_info(%rip),%rdx
	movq %rdx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rcx,-32(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Base.>>=_entry@gotpcrel(%rip)
_cgcM0:
	movq $24,904(%r13)
_cgcLX:
	jmp *-16(%r13)
	.size sat_sgaGs_entry, .-sat_sgaGs_entry


==================== Asm code ====================
2018-03-16 16:12:05.469128155 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaGs_info:
	.quad	sat_sgaGs_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.469935419 UTC

.section .text
.align 8
sat_sgaGw_entry:
_cgcM1:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcM2
_cgcM3:
	leaq block_cgcLq_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgcLq
_cgcLr:
	movq (%rbx),%rax
	jmp *(%rax)
_cgcM2:
	jmp *-8(%r13)
	.size sat_sgaGw_entry, .-sat_sgaGw_entry


==================== Asm code ====================
2018-03-16 16:12:05.470598289 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaGw_info:
	.quad	sat_sgaGw_entry
	.quad	4
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.471372946 UTC

.section .text
.align 8
_cgcLq:
_cgcLq:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cgcM6
_cgcM5:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgaGv_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-64(%r12)
	movq 24(%rbp),%rdx
	movq %rdx,-56(%r12)
	movq %rax,-48(%r12)
	movq %rbx,-40(%r12)
	leaq sat_sgaGs_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rcx,-16(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	movq 8(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,16(%rbp)
	leaq -32(%r12),%rax
	movq %rax,24(%rbp)
	leaq -80(%r12),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp *GHC.Base.mplus_entry@gotpcrel(%rip)
_cgcM6:
	movq $88,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgcLq, .-_cgcLq


==================== Asm code ====================
2018-03-16 16:12:05.472094718 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcLq_info:
	.quad	_cgcLq
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.472943032 UTC

.section .text
.align 8
k1_sgaGf_entry:
_cgcM8:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcM9
_cgcMa:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cgcMc
_cgcMb:
	movq 5(%rbx),%rax
	movq 13(%rbx),%rcx
	movq 21(%rbx),%rbx
	movq stg_ap_3_upd_info@gotpcrel(%rip),%rdx
	movq %rdx,-72(%r12)
	movq %rcx,-56(%r12)
	movq %r14,-48(%r12)
	movq %rdi,-40(%r12)
	leaq sat_sgaGw_info(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rdi,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	leaq -31(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Base.>>=_entry@gotpcrel(%rip)
_cgcMc:
	movq $80,904(%r13)
_cgcM9:
	jmp *-8(%r13)
	.size k1_sgaGf_entry, .-k1_sgaGf_entry


==================== Asm code ====================
2018-03-16 16:12:05.473701393 UTC

.section .data.rel.ro
.align 8
.align 1
k1_sgaGf_info:
	.quad	k1_sgaGf_entry
	.quad	3
	.quad	8
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:05.474363118 UTC

.section .text
.align 8
sat_sgaGx_entry:
_cgcMl:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcMm
_cgcMn:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq Data.Functor.Product.$fDataProduct1_closure+1(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Base.return_entry@gotpcrel(%rip)
_cgcMm:
	jmp *-16(%r13)
	.size sat_sgaGx_entry, .-sat_sgaGx_entry


==================== Asm code ====================
2018-03-16 16:12:05.475021807 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaGx_info:
	.quad	sat_sgaGx_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.475799977 UTC

.section .text
.align 8
sat_sgaGy_entry:
_cgcMo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcMp
_cgcMq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgcMs
_cgcMr:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	leaq sat_sgaGx_info(%rip),%rsi
	movq %rsi,-16(%r12)
	movq %rcx,(%r12)
	movq %rdx,%rdi
	leaq -16(%r12),%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp k1_sgaGf_entry
_cgcMs:
	movq $24,904(%r13)
_cgcMp:
	jmp *-16(%r13)
	.size sat_sgaGy_entry, .-sat_sgaGy_entry


==================== Asm code ====================
2018-03-16 16:12:05.47647384 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaGy_info:
	.quad	sat_sgaGy_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.477230528 UTC

.section .text
.align 8
sat_sgaGz_entry:
_cgcMt:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcMu
_cgcMv:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cgcLa_info(%rip),%rax
	movq %rax,-64(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq %rax,-56(%rbp)
	movq %rcx,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _cgcLa
_cgcLb:
	movq (%rbx),%rax
	jmp *(%rax)
_cgcMu:
	jmp *-16(%r13)
	.size sat_sgaGz_entry, .-sat_sgaGz_entry


==================== Asm code ====================
2018-03-16 16:12:05.478043213 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaGz_info:
	.quad	sat_sgaGz_entry
	.quad	6
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.478819618 UTC

.section .text
.align 8
_cgcLa:
_cgcLa:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cgcMy
_cgcMx:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq k1_sgaGf_info(%rip),%rcx
	movq %rcx,-72(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-64(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-56(%r12)
	movq 40(%rbp),%rcx
	movq %rcx,-48(%r12)
	leaq sat_sgaGy_info(%rip),%rdx
	movq %rdx,-40(%r12)
	movq 8(%rbp),%rdx
	movq %rdx,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	leaq -69(%r12),%rax
	movq %rax,(%r12)
	movq %rbx,%rdi
	leaq -40(%r12),%rsi
	movq 16(%rbp),%r14
	movq %rax,%rbx
	addq $48,%rbp
	jmp k1_sgaGf_entry
_cgcMy:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgcLa, .-_cgcLa


==================== Asm code ====================
2018-03-16 16:12:05.479528498 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcLa_info:
	.quad	_cgcLa
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.480377714 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cgmapMp_entry
.type Data.Functor.Product.$w$cgmapMp_entry, @object
Data.Functor.Product.$w$cgmapMp_entry:
_cgcMA:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcMB
_cgcMC:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgcME
_cgcMD:
	leaq lvl9_sgaGa_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rdi,(%r12)
	leaq block_cgcKz_info(%rip),%rax
	movq %rax,-56(%rbp)
	movq %r14,%rax
	movq %rdi,%r14
	leaq -16(%r12),%rbx
	movq %rbx,-48(%rbp)
	movq %rax,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-56,%rbp
	jmp *GHC.Base.$p2MonadPlus_entry@gotpcrel(%rip)
_cgcME:
	movq $24,904(%r13)
_cgcMB:
	leaq Data.Functor.Product.$w$cgmapMp_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cgmapMp_entry, .-Data.Functor.Product.$w$cgmapMp_entry


==================== Asm code ====================
2018-03-16 16:12:05.481113644 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cgmapMp_info
.type Data.Functor.Product.$w$cgmapMp_info, @object
Data.Functor.Product.$w$cgmapMp_info:
	.quad	Data.Functor.Product.$w$cgmapMp_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:12:05.481932607 UTC

.section .text
.align 8
_cgcKz:
_cgcKz:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cgcMH
_cgcMG:
	leaq sat_sgaGF_info(%rip),%rax
	movq %rax,-80(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	leaq sat_sgaGz_info(%rip),%rax
	movq %rax,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	movq 32(%rbp),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-16(%r12)
	movq 48(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,32(%rbp)
	leaq -56(%r12),%rax
	movq %rax,40(%rbp)
	leaq -79(%r12),%rax
	movq %rax,48(%rbp)
	addq $32,%rbp
	jmp *GHC.Base.>>=_entry@gotpcrel(%rip)
_cgcMH:
	movq $88,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgcKz, .-_cgcKz


==================== Asm code ====================
2018-03-16 16:12:05.482631479 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcKz_info:
	.quad	_cgcKz
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.485531758 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgmapMp_closure
.type Data.Functor.Product.$fDataProduct_$cgmapMp_closure, @object
Data.Functor.Product.$fDataProduct_$cgmapMp_closure:
	.quad	Data.Functor.Product.$fDataProduct_$cgmapMp_info


==================== Asm code ====================
2018-03-16 16:12:05.486187489 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgmapMp_slow
.type Data.Functor.Product.$fDataProduct_$cgmapMp_slow, @object
Data.Functor.Product.$fDataProduct_$cgmapMp_slow:
_cgcOM:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$fDataProduct_$cgmapMp_entry
	.size Data.Functor.Product.$fDataProduct_$cgmapMp_slow, .-Data.Functor.Product.$fDataProduct_$cgmapMp_slow


==================== Asm code ====================
2018-03-16 16:12:05.486879344 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgmapMp_entry
.type Data.Functor.Product.$fDataProduct_$cgmapMp_entry, @object
Data.Functor.Product.$fDataProduct_$cgmapMp_entry:
_cgcOQ:
	movq %r9,%rax
	movq 24(%rbp),%r9
	movq 16(%rbp),%r8
	movq 8(%rbp),%rdi
	movq (%rbp),%rsi
	movq %rax,%r14
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cgmapMp_entry
	.size Data.Functor.Product.$fDataProduct_$cgmapMp_entry, .-Data.Functor.Product.$fDataProduct_$cgmapMp_entry


==================== Asm code ====================
2018-03-16 16:12:05.48749314 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgmapMp_info
.type Data.Functor.Product.$fDataProduct_$cgmapMp_info, @object
Data.Functor.Product.$fDataProduct_$cgmapMp_info:
	.quad	Data.Functor.Product.$fDataProduct_$cgmapMp_entry
	.quad	0
	.quad	14
	.quad	38654705664
	.quad	0
	.quad	9
	.quad	Data.Functor.Product.$fDataProduct_$cgmapMp_slow


==================== Asm code ====================
2018-03-16 16:12:05.494702888 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cgmapM_closure
.type Data.Functor.Product.$w$cgmapM_closure, @object
Data.Functor.Product.$w$cgmapM_closure:
	.quad	Data.Functor.Product.$w$cgmapM_info


==================== Asm code ====================
2018-03-16 16:12:05.495546073 UTC

.section .text
.align 8
sat_sgaH3_entry:
_cgcPk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcPl
_cgcPm:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cgcPo
_cgcPn:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Base.return_entry@gotpcrel(%rip)
_cgcPo:
	movq $32,904(%r13)
_cgcPl:
	jmp *-8(%r13)
	.size sat_sgaH3_entry, .-sat_sgaH3_entry


==================== Asm code ====================
2018-03-16 16:12:05.496268021 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaH3_info:
	.quad	sat_sgaH3_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.497047413 UTC

.section .text
.align 8
sat_sgaH4_entry:
_cgcPp:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcPq
_cgcPr:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgcPt
_cgcPs:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgaH3_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,-16(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Base.>>=_entry@gotpcrel(%rip)
_cgcPt:
	movq $24,904(%r13)
_cgcPq:
	jmp *-8(%r13)
	.size sat_sgaH4_entry, .-sat_sgaH4_entry


==================== Asm code ====================
2018-03-16 16:12:05.498549825 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaH4_info:
	.quad	sat_sgaH4_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.499449859 UTC

.section .text
.align 8
k1_sgaGV_entry:
_cgcPu:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcPv
_cgcPw:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cgcPy
_cgcPx:
	movq 5(%rbx),%rax
	movq 13(%rbx),%rbx
	movq stg_ap_3_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-56(%r12)
	movq %rbx,-40(%r12)
	movq %r14,-32(%r12)
	movq %rdi,-24(%r12)
	leaq sat_sgaH4_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	leaq -56(%r12),%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Base.>>=_entry@gotpcrel(%rip)
_cgcPy:
	movq $64,904(%r13)
_cgcPv:
	jmp *-8(%r13)
	.size k1_sgaGV_entry, .-k1_sgaGV_entry


==================== Asm code ====================
2018-03-16 16:12:05.500183821 UTC

.section .data.rel.ro
.align 8
.align 1
k1_sgaGV_info:
	.quad	k1_sgaGV_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:05.500893596 UTC

.section .text
.align 8
sat_sgaH5_entry:
_cgcPH:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcPI
_cgcPJ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq Data.Functor.Product.Pair_closure+2(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Base.return_entry@gotpcrel(%rip)
_cgcPI:
	jmp *-16(%r13)
	.size sat_sgaH5_entry, .-sat_sgaH5_entry


==================== Asm code ====================
2018-03-16 16:12:05.501616533 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaH5_info:
	.quad	sat_sgaH5_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.502395981 UTC

.section .text
.align 8
sat_sgaH6_entry:
_cgcPK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcPL
_cgcPM:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgcPO
_cgcPN:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	leaq sat_sgaH5_info(%rip),%rsi
	movq %rsi,-16(%r12)
	movq %rcx,(%r12)
	movq %rdx,%rdi
	leaq -16(%r12),%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp k1_sgaGV_entry
_cgcPO:
	movq $24,904(%r13)
_cgcPL:
	jmp *-16(%r13)
	.size sat_sgaH6_entry, .-sat_sgaH6_entry


==================== Asm code ====================
2018-03-16 16:12:05.503085124 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaH6_info:
	.quad	sat_sgaH6_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.503866281 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cgmapM_entry
.type Data.Functor.Product.$w$cgmapM_entry, @object
Data.Functor.Product.$w$cgmapM_entry:
_cgcPP:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cgcPT
_cgcPS:
	leaq k1_sgaGV_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	leaq sat_sgaH6_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r9,-8(%r12)
	leaq -61(%r12),%rax
	movq %rax,(%r12)
	movq (%rbp),%rdi
	movq %rsi,%rbx
	leaq -40(%r12),%rsi
	movq %rbx,%r14
	movq %rax,%rbx
	addq $8,%rbp
	jmp k1_sgaGV_entry
_cgcPT:
	movq $72,904(%r13)
	leaq Data.Functor.Product.$w$cgmapM_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cgmapM_entry, .-Data.Functor.Product.$w$cgmapM_entry


==================== Asm code ====================
2018-03-16 16:12:05.504564707 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cgmapM_info
.type Data.Functor.Product.$w$cgmapM_info, @object
Data.Functor.Product.$w$cgmapM_info:
	.quad	Data.Functor.Product.$w$cgmapM_entry
	.quad	0
	.quad	14
	.quad	25769803802


==================== Asm code ====================
2018-03-16 16:12:05.508268721 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgmapM_closure
.type Data.Functor.Product.$fDataProduct_$cgmapM_closure, @object
Data.Functor.Product.$fDataProduct_$cgmapM_closure:
	.quad	Data.Functor.Product.$fDataProduct_$cgmapM_info


==================== Asm code ====================
2018-03-16 16:12:05.508962709 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgmapM_slow
.type Data.Functor.Product.$fDataProduct_$cgmapM_slow, @object
Data.Functor.Product.$fDataProduct_$cgmapM_slow:
_cgcQB:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$fDataProduct_$cgmapM_entry
	.size Data.Functor.Product.$fDataProduct_$cgmapM_slow, .-Data.Functor.Product.$fDataProduct_$cgmapM_slow


==================== Asm code ====================
2018-03-16 16:12:05.510042594 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgmapM_entry
.type Data.Functor.Product.$fDataProduct_$cgmapM_entry, @object
Data.Functor.Product.$fDataProduct_$cgmapM_entry:
_cgcQI:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcQJ
_cgcQK:
	leaq block_cgcQF_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 24(%rbp),%rbx
	movq %r9,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgcQF
_cgcQG:
	movq (%rbx),%rax
	jmp *(%rax)
_cgcQJ:
	leaq Data.Functor.Product.$fDataProduct_$cgmapM_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$fDataProduct_$cgmapM_entry, .-Data.Functor.Product.$fDataProduct_$cgmapM_entry


==================== Asm code ====================
2018-03-16 16:12:05.510743155 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgmapM_info
.type Data.Functor.Product.$fDataProduct_$cgmapM_info, @object
Data.Functor.Product.$fDataProduct_$cgmapM_info:
	.quad	Data.Functor.Product.$fDataProduct_$cgmapM_entry
	.quad	0
	.quad	14
	.quad	38654705664
	.quad	0
	.quad	9
	.quad	Data.Functor.Product.$fDataProduct_$cgmapM_slow


==================== Asm code ====================
2018-03-16 16:12:05.511430309 UTC

.section .text
.align 8
_cgcQF:
_cgcQF:
	movq 7(%rbx),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 32(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cgmapM_entry
	.size _cgcQF, .-_cgcQF


==================== Asm code ====================
2018-03-16 16:12:05.512042241 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcQF_info:
	.quad	_cgcQF
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.516538771 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgmapQi_closure
.type Data.Functor.Product.$fDataProduct_$cgmapQi_closure, @object
Data.Functor.Product.$fDataProduct_$cgmapQi_closure:
	.quad	Data.Functor.Product.$fDataProduct_$cgmapQi_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.517220723 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgmapQi_slow
.type Data.Functor.Product.$fDataProduct_$cgmapQi_slow, @object
Data.Functor.Product.$fDataProduct_$cgmapQi_slow:
_cgcR3:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$fDataProduct_$cgmapQi_entry
	.size Data.Functor.Product.$fDataProduct_$cgmapQi_slow, .-Data.Functor.Product.$fDataProduct_$cgmapQi_slow


==================== Asm code ====================
2018-03-16 16:12:05.518078899 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgmapQi_entry
.type Data.Functor.Product.$fDataProduct_$cgmapQi_entry, @object
Data.Functor.Product.$fDataProduct_$cgmapQi_entry:
_cgcRa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcRe
_cgcRf:
	leaq block_cgcR7_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 24(%rbp),%rbx
	movq %r9,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgcR7
_cgcR8:
	movq (%rbx),%rax
	jmp *(%rax)
_cgcRe:
	leaq Data.Functor.Product.$fDataProduct_$cgmapQi_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$fDataProduct_$cgmapQi_entry, .-Data.Functor.Product.$fDataProduct_$cgmapQi_entry


==================== Asm code ====================
2018-03-16 16:12:05.51879929 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgmapQi_info
.type Data.Functor.Product.$fDataProduct_$cgmapQi_info, @object
Data.Functor.Product.$fDataProduct_$cgmapQi_info:
	.quad	Data.Functor.Product.$fDataProduct_$cgmapQi_entry
	.quad	0
	.quad	12884901902
	.quad	38654705664
	.quad	SgaPW_srt+648
	.quad	9
	.quad	Data.Functor.Product.$fDataProduct_$cgmapQi_slow


==================== Asm code ====================
2018-03-16 16:12:05.519544556 UTC

.section .text
.align 8
_cgcR7:
_cgcR7:
	leaq block_cgcRd_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgcRd
_cgcRh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgcR7, .-_cgcR7


==================== Asm code ====================
2018-03-16 16:12:05.520165337 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcR7_info:
	.quad	_cgcR7
	.quad	4
	.quad	4294967326
	.quad	SgaPW_srt+648


==================== Asm code ====================
2018-03-16 16:12:05.520970196 UTC

.section .text
.align 8
_cgcRd:
_cgcRd:
	movq 32(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jne _ugcRr
_cgcRp:
	movq 24(%rbp),%rsi
	movq 40(%rbp),%r14
	movq %rax,%rbx
	addq $48,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_ugcRr:
	cmpq $1,%rbx
	jne _cgcRo
_cgcRq:
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	movq %rax,%rbx
	addq $48,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_cgcRo:
	movq Data.Maybe.fromJust1_closure@gotpcrel(%rip),%rbx
	addq $48,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cgcRd, .-_cgcRd


==================== Asm code ====================
2018-03-16 16:12:05.521917145 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcRd_info:
	.quad	_cgcRd
	.quad	5
	.quad	4294967326
	.quad	SgaPW_srt+648


==================== Asm code ====================
2018-03-16 16:12:05.526910373 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgmapQr_closure
.type Data.Functor.Product.$fDataProduct_$cgmapQr_closure, @object
Data.Functor.Product.$fDataProduct_$cgmapQr_closure:
	.quad	Data.Functor.Product.$fDataProduct_$cgmapQr_info


==================== Asm code ====================
2018-03-16 16:12:05.527598466 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgmapQr_slow
.type Data.Functor.Product.$fDataProduct_$cgmapQr_slow, @object
Data.Functor.Product.$fDataProduct_$cgmapQr_slow:
_cgcRM:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$fDataProduct_$cgmapQr_entry
	.size Data.Functor.Product.$fDataProduct_$cgmapQr_slow, .-Data.Functor.Product.$fDataProduct_$cgmapQr_slow


==================== Asm code ====================
2018-03-16 16:12:05.528476565 UTC

.section .text
.align 8
sat_sgaHN_entry:
_cgcS0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcS1
_cgcS2:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cgcS4
_cgcS3:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq stg_ap_3_upd_info@gotpcrel(%rip),%rdi
	movq %rdi,-32(%r12)
	movq %rsi,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq %rdx,%rsi
	leaq -32(%r12),%r14
	movq %rcx,%rbx
	addq $-16,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_cgcS4:
	movq $40,904(%r13)
_cgcS1:
	jmp *-16(%r13)
	.size sat_sgaHN_entry, .-sat_sgaHN_entry


==================== Asm code ====================
2018-03-16 16:12:05.529187282 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaHN_info:
	.quad	sat_sgaHN_entry
	.quad	5
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.529997936 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgmapQr_entry
.type Data.Functor.Product.$fDataProduct_$cgmapQr_entry, @object
Data.Functor.Product.$fDataProduct_$cgmapQr_entry:
_cgcS5:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcS7
_cgcS8:
	leaq block_cgcRQ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 32(%rbp),%rbx
	movq %r9,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgcRQ
_cgcRR:
	movq (%rbx),%rax
	jmp *(%rax)
_cgcS7:
	leaq Data.Functor.Product.$fDataProduct_$cgmapQr_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$fDataProduct_$cgmapQr_entry, .-Data.Functor.Product.$fDataProduct_$cgmapQr_entry


==================== Asm code ====================
2018-03-16 16:12:05.530695684 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgmapQr_info
.type Data.Functor.Product.$fDataProduct_$cgmapQr_info, @object
Data.Functor.Product.$fDataProduct_$cgmapQr_info:
	.quad	Data.Functor.Product.$fDataProduct_$cgmapQr_entry
	.quad	0
	.quad	14
	.quad	42949672960
	.quad	0
	.quad	10
	.quad	Data.Functor.Product.$fDataProduct_$cgmapQr_slow


==================== Asm code ====================
2018-03-16 16:12:05.531553368 UTC

.section .text
.align 8
_cgcRQ:
_cgcRQ:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cgcSb
_cgcSa:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgaHN_info(%rip),%rcx
	movq %rcx,-88(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-64(%r12)
	movq 24(%rbp),%rdx
	movq %rdx,-56(%r12)
	movq 32(%rbp),%rdx
	movq %rdx,-48(%r12)
	movq %rbx,-40(%r12)
	movq stg_ap_3_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rdx,-16(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -88(%r12),%rsi
	leaq -32(%r12),%r14
	movq %rcx,%rbx
	addq $48,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_cgcSb:
	movq $96,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgcRQ, .-_cgcRQ


==================== Asm code ====================
2018-03-16 16:12:05.532252442 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcRQ_info:
	.quad	_cgcRQ
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.537489696 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct2_closure
.type Data.Functor.Product.$fDataProduct2_closure, @object
Data.Functor.Product.$fDataProduct2_closure:
	.quad	Data.Functor.Product.$fDataProduct2_info


==================== Asm code ====================
2018-03-16 16:12:05.538113312 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct2_slow
.type Data.Functor.Product.$fDataProduct2_slow, @object
Data.Functor.Product.$fDataProduct2_slow:
_cgcSB:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$fDataProduct2_entry
	.size Data.Functor.Product.$fDataProduct2_slow, .-Data.Functor.Product.$fDataProduct2_slow


==================== Asm code ====================
2018-03-16 16:12:05.538946395 UTC

.section .text
.align 8
sat_sgaI2_entry:
_cgcSQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcSR
_cgcSS:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cgcSU
_cgcST:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq stg_ap_3_upd_info@gotpcrel(%rip),%rdi
	movq %rdi,-32(%r12)
	movq %rsi,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rsi
	movq %rdx,%r14
	movq %rcx,%rbx
	addq $-16,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_cgcSU:
	movq $40,904(%r13)
_cgcSR:
	jmp *-16(%r13)
	.size sat_sgaI2_entry, .-sat_sgaI2_entry


==================== Asm code ====================
2018-03-16 16:12:05.539667299 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaI2_info:
	.quad	sat_sgaI2_entry
	.quad	5
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.541007828 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct2_entry
.type Data.Functor.Product.$fDataProduct2_entry, @object
Data.Functor.Product.$fDataProduct2_entry:
_cgcSV:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcSW
_cgcSX:
	leaq block_cgcSF_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 32(%rbp),%rbx
	movq %r9,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgcSF
_cgcSG:
	movq (%rbx),%rax
	jmp *(%rax)
_cgcSW:
	leaq Data.Functor.Product.$fDataProduct2_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size Data.Functor.Product.$fDataProduct2_entry, .-Data.Functor.Product.$fDataProduct2_entry


==================== Asm code ====================
2018-03-16 16:12:05.541841867 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct2_info
.type Data.Functor.Product.$fDataProduct2_info, @object
Data.Functor.Product.$fDataProduct2_info:
	.quad	Data.Functor.Product.$fDataProduct2_entry
	.quad	0
	.quad	14
	.quad	42949672960
	.quad	0
	.quad	10
	.quad	Data.Functor.Product.$fDataProduct2_slow


==================== Asm code ====================
2018-03-16 16:12:05.542700382 UTC

.section .text
.align 8
_cgcSF:
_cgcSF:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cgcT0
_cgcSZ:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq stg_ap_3_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-88(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq 8(%rbp),%rdx
	movq %rdx,-64(%r12)
	movq %rbx,-56(%r12)
	leaq sat_sgaI2_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 24(%rbp),%rdx
	movq %rdx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -88(%r12),%rsi
	leaq -48(%r12),%r14
	addq $48,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_cgcT0:
	movq $96,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgcSF, .-_cgcSF


==================== Asm code ====================
2018-03-16 16:12:05.543426084 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcSF_info:
	.quad	_cgcSF
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.559390111 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$w$cgmapMo_closure
.type Data.Functor.Product.$w$cgmapMo_closure, @object
Data.Functor.Product.$w$cgmapMo_closure:
	.quad	Data.Functor.Product.$w$cgmapMo_info


==================== Asm code ====================
2018-03-16 16:12:05.560263616 UTC

.section .text
.align 8
lvl9_sgaI9_entry:
_cgcTx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcTy
_cgcTz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.mzero_entry@gotpcrel(%rip)
_cgcTy:
	jmp *-16(%r13)
	.size lvl9_sgaI9_entry, .-lvl9_sgaI9_entry


==================== Asm code ====================
2018-03-16 16:12:05.560888433 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_sgaI9_info:
	.quad	lvl9_sgaI9_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.561699602 UTC

.section .text
.align 8
sat_sgaIH_entry:
_cgcTM:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcTN
_cgcTO:
	leaq block_cgcTJ_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cgcTJ
_cgcTK:
	movq (%rbx),%rax
	jmp *(%rax)
_cgcTN:
	jmp *-8(%r13)
	.size sat_sgaIH_entry, .-sat_sgaIH_entry


==================== Asm code ====================
2018-03-16 16:12:05.562363276 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaIH_info:
	.quad	sat_sgaIH_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.563065036 UTC

.section .text
.align 8
_cgcTJ:
_cgcTJ:
	leaq block_cgcTR_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgcTR
_cgcTT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgcTJ, .-_cgcTJ


==================== Asm code ====================
2018-03-16 16:12:05.563705687 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcTJ_info:
	.quad	_cgcTJ
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.564493445 UTC

.section .text
.align 8
_cgcTR:
_cgcTR:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cgcTZ
_cgcU3:
	movq 24(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp *GHC.Base.return_entry@gotpcrel(%rip)
_cgcTZ:
	movq 16(%rbp),%rbx
	addq $32,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cgcTR, .-_cgcTR


==================== Asm code ====================
2018-03-16 16:12:05.565152795 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcTR_info:
	.quad	_cgcTR
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.566050013 UTC

.section .text
.align 8
sat_sgaIv_entry:
_cgcUH:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcUI
_cgcUJ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cgcUL
_cgcUK:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rdx
	movq %rdx,-48(%r12)
	movq %rbx,-32(%r12)
	movq %rcx,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -48(%r12),%rbx
	movq %rbx,-8(%r12)
	movq GHC.Types.False_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Base.return_entry@gotpcrel(%rip)
_cgcUL:
	movq $56,904(%r13)
_cgcUI:
	jmp *-16(%r13)
	.size sat_sgaIv_entry, .-sat_sgaIv_entry


==================== Asm code ====================
2018-03-16 16:12:05.566847261 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaIv_info:
	.quad	sat_sgaIv_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.567675468 UTC

.section .text
.align 8
sat_sgaIr_entry:
_cgcUX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcUY
_cgcUZ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cgcV1
_cgcV0:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -48(%r12),%rbx
	movq %rbx,-8(%r12)
	movq GHC.Types.True_closure@gotpcrel(%rip),%rbx
	addq $2,%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Base.return_entry@gotpcrel(%rip)
_cgcV1:
	movq $56,904(%r13)
_cgcUY:
	jmp *-8(%r13)
	.size sat_sgaIr_entry, .-sat_sgaIr_entry


==================== Asm code ====================
2018-03-16 16:12:05.56841957 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaIr_info:
	.quad	sat_sgaIr_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.569298687 UTC

.section .text
.align 8
sat_sgaIs_entry:
_cgcV2:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcV3
_cgcV4:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgcV6
_cgcV5:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_sgaIr_info(%rip),%rdx
	movq %rdx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rcx,-32(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Base.>>=_entry@gotpcrel(%rip)
_cgcV6:
	movq $24,904(%r13)
_cgcV3:
	jmp *-16(%r13)
	.size sat_sgaIs_entry, .-sat_sgaIs_entry


==================== Asm code ====================
2018-03-16 16:12:05.57008374 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaIs_info:
	.quad	sat_sgaIs_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.570842683 UTC

.section .text
.align 8
sat_sgaIy_entry:
_cgcV7:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcV8
_cgcV9:
	leaq block_cgcUr_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgcUr
_cgcUs:
	movq (%rbx),%rax
	jmp *(%rax)
_cgcV8:
	jmp *-8(%r13)
	.size sat_sgaIy_entry, .-sat_sgaIy_entry


==================== Asm code ====================
2018-03-16 16:12:05.571524903 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaIy_info:
	.quad	sat_sgaIy_entry
	.quad	4
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:12:05.572203803 UTC

.section .text
.align 8
_cgcUr:
_cgcUr:
	leaq block_cgcUw_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cgcUw
_cgcUx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgcUr, .-_cgcUr


==================== Asm code ====================
2018-03-16 16:12:05.572864423 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcUr_info:
	.quad	_cgcUr
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.573903645 UTC

.section .text
.align 8
_cgcUw:
_cgcUw:
	movq 24(%rbp),%rax
	movq 32(%rbp),%rcx
	movq 8(%rbp),%rdx
	movq %rbx,%rsi
	andl $7,%esi
	cmpq $1,%rsi
	je _cgcVc
_cgcVg:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cgcVl
_cgcVk:
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rdx,-32(%r12)
	movq %rcx,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -48(%r12),%rbx
	movq %rbx,-8(%r12)
	movq GHC.Types.True_closure@gotpcrel(%rip),%rbx
	addq $2,%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,32(%rbp)
	leaq -15(%r12),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp *GHC.Base.return_entry@gotpcrel(%rip)
_cgcVl:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cgcVf:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cgcVc:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cgcVf
_cgcVe:
	leaq sat_sgaIv_info(%rip),%rbx
	movq %rbx,-72(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	leaq sat_sgaIs_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rdx,(%r12)
	movq 16(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,24(%rbp)
	leaq -32(%r12),%rax
	movq %rax,32(%rbp)
	leaq -72(%r12),%rax
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp *GHC.Base.mplus_entry@gotpcrel(%rip)
	.size _cgcUw, .-_cgcUw


==================== Asm code ====================
2018-03-16 16:12:05.574793294 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcUw_info:
	.quad	_cgcUw
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.575676874 UTC

.section .text
.align 8
k1_sgaIe_entry:
_cgcVr:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcVs
_cgcVt:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cgcVv
_cgcVu:
	movq 5(%rbx),%rax
	movq 13(%rbx),%rcx
	movq 21(%rbx),%rbx
	movq stg_ap_3_upd_info@gotpcrel(%rip),%rdx
	movq %rdx,-72(%r12)
	movq %rcx,-56(%r12)
	movq %r14,-48(%r12)
	movq %rdi,-40(%r12)
	leaq sat_sgaIy_info(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rdi,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	leaq -31(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Base.>>=_entry@gotpcrel(%rip)
_cgcVv:
	movq $80,904(%r13)
_cgcVs:
	jmp *-8(%r13)
	.size k1_sgaIe_entry, .-k1_sgaIe_entry


==================== Asm code ====================
2018-03-16 16:12:05.576437711 UTC

.section .data.rel.ro
.align 8
.align 1
k1_sgaIe_info:
	.quad	k1_sgaIe_entry
	.quad	3
	.quad	8
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:05.577192413 UTC

.section .text
.align 8
sat_sgaIz_entry:
_cgcVE:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcVF
_cgcVG:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq Data.Functor.Product.$fDataProduct1_closure+1(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Base.return_entry@gotpcrel(%rip)
_cgcVF:
	jmp *-16(%r13)
	.size sat_sgaIz_entry, .-sat_sgaIz_entry


==================== Asm code ====================
2018-03-16 16:12:05.578128369 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaIz_info:
	.quad	sat_sgaIz_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.578922168 UTC

.section .text
.align 8
sat_sgaIA_entry:
_cgcVH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcVI
_cgcVJ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgcVL
_cgcVK:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	leaq sat_sgaIz_info(%rip),%rsi
	movq %rsi,-16(%r12)
	movq %rcx,(%r12)
	movq %rdx,%rdi
	leaq -16(%r12),%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp k1_sgaIe_entry
_cgcVL:
	movq $24,904(%r13)
_cgcVI:
	jmp *-16(%r13)
	.size sat_sgaIA_entry, .-sat_sgaIA_entry


==================== Asm code ====================
2018-03-16 16:12:05.579625951 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaIA_info:
	.quad	sat_sgaIA_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.580438829 UTC

.section .text
.align 8
sat_sgaIB_entry:
_cgcVM:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcVN
_cgcVO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cgcUb_info(%rip),%rax
	movq %rax,-64(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq %rax,-56(%rbp)
	movq %rcx,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _cgcUb
_cgcUc:
	movq (%rbx),%rax
	jmp *(%rax)
_cgcVN:
	jmp *-16(%r13)
	.size sat_sgaIB_entry, .-sat_sgaIB_entry


==================== Asm code ====================
2018-03-16 16:12:05.581149076 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaIB_info:
	.quad	sat_sgaIB_entry
	.quad	6
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.581994279 UTC

.section .text
.align 8
_cgcUb:
_cgcUb:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cgcVR
_cgcVQ:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq k1_sgaIe_info(%rip),%rcx
	movq %rcx,-72(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-64(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-56(%r12)
	movq 40(%rbp),%rcx
	movq %rcx,-48(%r12)
	leaq sat_sgaIA_info(%rip),%rdx
	movq %rdx,-40(%r12)
	movq 8(%rbp),%rdx
	movq %rdx,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	leaq -69(%r12),%rax
	movq %rax,(%r12)
	movq %rbx,%rdi
	leaq -40(%r12),%rsi
	movq 16(%rbp),%r14
	movq %rax,%rbx
	addq $48,%rbp
	jmp k1_sgaIe_entry
_cgcVR:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgcUb, .-_cgcUb


==================== Asm code ====================
2018-03-16 16:12:05.582723522 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcUb_info:
	.quad	_cgcUb
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.583581333 UTC

.section .text
.align 8
.globl Data.Functor.Product.$w$cgmapMo_entry
.type Data.Functor.Product.$w$cgmapMo_entry, @object
Data.Functor.Product.$w$cgmapMo_entry:
_cgcVT:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcVU
_cgcVV:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgcVX
_cgcVW:
	leaq lvl9_sgaI9_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rdi,(%r12)
	leaq block_cgcTA_info(%rip),%rax
	movq %rax,-56(%rbp)
	movq %r14,%rax
	movq %rdi,%r14
	leaq -16(%r12),%rbx
	movq %rbx,-48(%rbp)
	movq %rax,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-56,%rbp
	jmp *GHC.Base.$p2MonadPlus_entry@gotpcrel(%rip)
_cgcVX:
	movq $24,904(%r13)
_cgcVU:
	leaq Data.Functor.Product.$w$cgmapMo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$w$cgmapMo_entry, .-Data.Functor.Product.$w$cgmapMo_entry


==================== Asm code ====================
2018-03-16 16:12:05.58434654 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$w$cgmapMo_info
.type Data.Functor.Product.$w$cgmapMo_info, @object
Data.Functor.Product.$w$cgmapMo_info:
	.quad	Data.Functor.Product.$w$cgmapMo_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 16:12:05.585133067 UTC

.section .text
.align 8
_cgcTA:
_cgcTA:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cgcW0
_cgcVZ:
	leaq sat_sgaIH_info(%rip),%rax
	movq %rax,-80(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	leaq sat_sgaIB_info(%rip),%rax
	movq %rax,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	movq 32(%rbp),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-16(%r12)
	movq 48(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,32(%rbp)
	leaq -56(%r12),%rax
	movq %rax,40(%rbp)
	leaq -79(%r12),%rax
	movq %rax,48(%rbp)
	addq $32,%rbp
	jmp *GHC.Base.>>=_entry@gotpcrel(%rip)
_cgcW0:
	movq $88,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgcTA, .-_cgcTA


==================== Asm code ====================
2018-03-16 16:12:05.585919628 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcTA_info:
	.quad	_cgcTA
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.58998298 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgmapMo_closure
.type Data.Functor.Product.$fDataProduct_$cgmapMo_closure, @object
Data.Functor.Product.$fDataProduct_$cgmapMo_closure:
	.quad	Data.Functor.Product.$fDataProduct_$cgmapMo_info


==================== Asm code ====================
2018-03-16 16:12:05.590711692 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgmapMo_slow
.type Data.Functor.Product.$fDataProduct_$cgmapMo_slow, @object
Data.Functor.Product.$fDataProduct_$cgmapMo_slow:
_cgcYk:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp Data.Functor.Product.$fDataProduct_$cgmapMo_entry
	.size Data.Functor.Product.$fDataProduct_$cgmapMo_slow, .-Data.Functor.Product.$fDataProduct_$cgmapMo_slow


==================== Asm code ====================
2018-03-16 16:12:05.591516107 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_$cgmapMo_entry
.type Data.Functor.Product.$fDataProduct_$cgmapMo_entry, @object
Data.Functor.Product.$fDataProduct_$cgmapMo_entry:
_cgcYo:
	movq %r9,%rax
	movq 24(%rbp),%r9
	movq 16(%rbp),%r8
	movq 8(%rbp),%rdi
	movq (%rbp),%rsi
	movq %rax,%r14
	addq $32,%rbp
	jmp Data.Functor.Product.$w$cgmapMo_entry
	.size Data.Functor.Product.$fDataProduct_$cgmapMo_entry, .-Data.Functor.Product.$fDataProduct_$cgmapMo_entry


==================== Asm code ====================
2018-03-16 16:12:05.592132642 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_$cgmapMo_info
.type Data.Functor.Product.$fDataProduct_$cgmapMo_info, @object
Data.Functor.Product.$fDataProduct_$cgmapMo_info:
	.quad	Data.Functor.Product.$fDataProduct_$cgmapMo_entry
	.quad	0
	.quad	14
	.quad	38654705664
	.quad	0
	.quad	9
	.quad	Data.Functor.Product.$fDataProduct_$cgmapMo_slow


==================== Asm code ====================
2018-03-16 16:12:05.594839997 UTC

.section .data
.align 8
.align 1
lvl5_rg5oj_closure:
	.quad	lvl5_rg5oj_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.595591533 UTC

.section .text
.align 8
lvl5_rg5oj_entry:
_cgcYE:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcYF
_cgcYG:
	leaq block_cgcYB_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cgcYB
_cgcYC:
	movq (%rbx),%rax
	jmp *(%rax)
_cgcYF:
	leaq lvl5_rg5oj_closure(%rip),%rbx
	jmp *-8(%r13)
	.size lvl5_rg5oj_entry, .-lvl5_rg5oj_entry


==================== Asm code ====================
2018-03-16 16:12:05.596247126 UTC

.section .data.rel.ro
.align 8
.align 1
lvl5_rg5oj_info:
	.quad	lvl5_rg5oj_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	SgaPW_srt+664


==================== Asm code ====================
2018-03-16 16:12:05.596914662 UTC

.section .text
.align 8
_cgcYB:
_cgcYB:
	leaq Data.Functor.Product.$cPair_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cgcYB, .-_cgcYB


==================== Asm code ====================
2018-03-16 16:12:05.597570008 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgcYB_info:
	.quad	_cgcYB
	.quad	0
	.quad	4294967326
	.quad	SgaPW_srt+664


==================== Asm code ====================
2018-03-16 16:12:05.599602816 UTC

.section .data
.align 8
.align 1
lvl6_rg5ok_closure:
	.quad	lvl6_rg5ok_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.600191831 UTC

.section .text
.align 8
lvl6_rg5ok_entry:
_cgcZ0:
	leaq Data.Functor.Product.$tProduct_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size lvl6_rg5ok_entry, .-lvl6_rg5ok_entry


==================== Asm code ====================
2018-03-16 16:12:05.600773262 UTC

.section .data.rel.ro
.align 8
.align 1
lvl6_rg5ok_info:
	.quad	lvl6_rg5ok_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	SgaPW_srt+680


==================== Asm code ====================
2018-03-16 16:12:05.603016422 UTC

.section .data
.align 8
.align 1
lvl7_rg5ol_closure:
	.quad	lvl7_rg5ol_info


==================== Asm code ====================
2018-03-16 16:12:05.603649199 UTC

.section .text
.align 8
lvl7_rg5ol_entry:
_cgcZc:
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size lvl7_rg5ol_entry, .-lvl7_rg5ol_entry


==================== Asm code ====================
2018-03-16 16:12:05.604270576 UTC

.section .data.rel.ro
.align 8
.align 1
lvl7_rg5ol_info:
	.quad	lvl7_rg5ol_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:05.606270193 UTC

.section .data
.align 8
.align 1
lvl8_rg5om_closure:
	.quad	lvl8_rg5om_info


==================== Asm code ====================
2018-03-16 16:12:05.606911636 UTC

.section .text
.align 8
lvl8_rg5om_entry:
_cgcZp:
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size lvl8_rg5om_entry, .-lvl8_rg5om_entry


==================== Asm code ====================
2018-03-16 16:12:05.607515652 UTC

.section .data.rel.ro
.align 8
.align 1
lvl8_rg5om_info:
	.quad	lvl8_rg5om_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:05.624212099 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_closure
.type Data.Functor.Product.$fDataProduct_closure, @object
Data.Functor.Product.$fDataProduct_closure:
	.quad	Data.Functor.Product.$fDataProduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:12:05.624950837 UTC

.section .text
.align 8
sat_sgaJG_entry:
_cgcZH:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$w$cgmapMo_entry
	.size sat_sgaJG_entry, .-sat_sgaJG_entry


==================== Asm code ====================
2018-03-16 16:12:05.625531089 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaJG_info:
	.quad	sat_sgaJG_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:05.626188492 UTC

.section .text
.align 8
sat_sgaJC_entry:
_cgcZP:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp Data.Functor.Product.$w$cgmapMp_entry
	.size sat_sgaJC_entry, .-sat_sgaJC_entry


==================== Asm code ====================
2018-03-16 16:12:05.626799982 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaJC_info:
	.quad	sat_sgaJC_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:05.627594905 UTC

.section .text
.align 8
sat_sgaJy_entry:
_cgcZX:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcZY
_cgcZZ:
	movq 37(%rbx),%r9
	movq 29(%rbx),%r8
	movq %rdi,%rax
	movq 21(%rbx),%rdi
	movq %rsi,%rcx
	movq 13(%rbx),%rsi
	movq %r14,%rdx
	movq 5(%rbx),%r14
	movq 45(%rbx),%rbx
	movq %rbx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp Data.Functor.Product.$fDataProduct_$cgmapM_entry
_cgcZY:
	jmp *-8(%r13)
	.size sat_sgaJy_entry, .-sat_sgaJy_entry


==================== Asm code ====================
2018-03-16 16:12:05.628245326 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaJy_info:
	.quad	sat_sgaJy_entry
	.quad	6
	.quad	8
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:05.62901528 UTC

.section .text
.align 8
sat_sgaJx_entry:
_cgd05:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgd06
_cgd07:
	movq 37(%rbx),%r9
	movq 29(%rbx),%r8
	movq %rdi,%rax
	movq 21(%rbx),%rdi
	movq %rsi,%rcx
	movq 13(%rbx),%rsi
	movq %r14,%rdx
	movq 5(%rbx),%r14
	movq 45(%rbx),%rbx
	movq %rbx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp Data.Functor.Product.$fDataProduct_$cgmapQi_entry
_cgd06:
	jmp *-8(%r13)
	.size sat_sgaJx_entry, .-sat_sgaJx_entry


==================== Asm code ====================
2018-03-16 16:12:05.629733963 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaJx_info:
	.quad	sat_sgaJx_entry
	.quad	6
	.quad	4294967304
	.quad	12884901911
	.quad	SgaPW_srt+656


==================== Asm code ====================
2018-03-16 16:12:05.630536998 UTC

.section .text
.align 8
sat_sgaJw_entry:
_cgd0g:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgd0n
_cgd0o:
	leaq block_cgd0d_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %rsi,%rbx
	movq %rax,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cgd0d
_cgd0e:
	movq (%rbx),%rax
	jmp *(%rax)
_cgd0n:
	jmp *-8(%r13)
	.size sat_sgaJw_entry, .-sat_sgaJw_entry


==================== Asm code ====================
2018-03-16 16:12:05.631215214 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaJw_info:
	.quad	sat_sgaJw_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:05.632073627 UTC

.section .text
.align 8
_cgd0d:
_cgd0d:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _cgd0r
_cgd0q:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq stg_ap_3_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-120(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-104(%r12)
	movq 16(%rbp),%rdx
	movq %rdx,-96(%r12)
	movq %rbx,-88(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-80(%r12)
	leaq -120(%r12),%rbx
	movq %rbx,-72(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rbx,-64(%r12)
	movq stg_ap_3_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rcx,-40(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -78(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgd0r:
	movq $128,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgd0d, .-_cgd0d


==================== Asm code ====================
2018-03-16 16:12:05.632877142 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgd0d_info:
	.quad	_cgd0d
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.63373882 UTC

.section .text
.align 8
sat_sgaJn_entry:
_cgd0y:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgd0z
_cgd0A:
	movq 36(%rbx),%r9
	movq %r8,%rax
	movq 28(%rbx),%r8
	movq %rdi,%rcx
	movq 20(%rbx),%rdi
	movq %rsi,%rdx
	movq 12(%rbx),%rsi
	movq %r14,%r10
	movq 4(%rbx),%r14
	movq 44(%rbx),%rbx
	movq %rbx,-40(%rbp)
	movq %r10,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp Data.Functor.Product.$fDataProduct_$cgmapQr_entry
_cgd0z:
	jmp *-8(%r13)
	.size sat_sgaJn_entry, .-sat_sgaJn_entry


==================== Asm code ====================
2018-03-16 16:12:05.635110587 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaJn_info:
	.quad	sat_sgaJn_entry
	.quad	6
	.quad	8
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:12:05.635987714 UTC

.section .text
.align 8
sat_sgaJm_entry:
_cgd0G:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgd0H
_cgd0I:
	movq 36(%rbx),%r9
	movq %r8,%rax
	movq 28(%rbx),%r8
	movq %rdi,%rcx
	movq 20(%rbx),%rdi
	movq %rsi,%rdx
	movq 12(%rbx),%rsi
	movq %r14,%r10
	movq 4(%rbx),%r14
	movq 44(%rbx),%rbx
	movq %rbx,-40(%rbp)
	movq %r10,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp Data.Functor.Product.$fDataProduct2_entry
_cgd0H:
	jmp *-8(%r13)
	.size sat_sgaJm_entry, .-sat_sgaJm_entry


==================== Asm code ====================
2018-03-16 16:12:05.636693217 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaJm_info:
	.quad	sat_sgaJm_entry
	.quad	6
	.quad	8
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:12:05.637725499 UTC

.section .text
.align 8
sat_sgaJl_entry:
_cgd0R:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgd0X
_cgd0Y:
	leaq block_cgd0O_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %rsi,%rbx
	movq %rax,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cgd0O
_cgd0P:
	movq (%rbx),%rax
	jmp *(%rax)
_cgd0X:
	jmp *-8(%r13)
	.size sat_sgaJl_entry, .-sat_sgaJl_entry


==================== Asm code ====================
2018-03-16 16:12:05.638388544 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaJl_info:
	.quad	sat_sgaJl_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:05.639195739 UTC

.section .text
.align 8
_cgd0O:
_cgd0O:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cgd11
_cgd10:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq stg_ap_3_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-96(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 16(%rbp),%rdx
	movq %rdx,-72(%r12)
	movq %rbx,-64(%r12)
	movq stg_ap_3_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rcx,-40(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	leaq Data.Functor.Product.Pair_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgd11:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cgd0O, .-_cgd0O


==================== Asm code ====================
2018-03-16 16:12:05.640000487 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgd0O_info:
	.quad	_cgd0O
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:12:05.640710208 UTC

.section .text
.align 8
sat_sgaJb_entry:
_cgd1g:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgd1h
_cgd1i:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq Data.Functor.Product.Pair_closure+2(%rip),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_cgd1h:
	jmp *-16(%r13)
	.size sat_sgaJb_entry, .-sat_sgaJb_entry


==================== Asm code ====================
2018-03-16 16:12:05.641379835 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaJb_info:
	.quad	sat_sgaJb_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:12:05.64219919 UTC

.section .text
.align 8
sat_sgaJc_entry:
_cgd1j:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgd1k
_cgd1l:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgd1n
_cgd1m:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_sgaJb_info(%rip),%rdx
	movq %rdx,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rsi
	movq %rax,%r14
	movq %rcx,%rbx
	addq $-16,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_cgd1n:
	movq $24,904(%r13)
_cgd1k:
	jmp *-16(%r13)
	.size sat_sgaJc_entry, .-sat_sgaJc_entry


==================== Asm code ====================
2018-03-16 16:12:05.642896257 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaJc_info:
	.quad	sat_sgaJc_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:12:05.64367919 UTC

.section .text
.align 8
sat_sgaJd_entry:
_cgd1o:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cgd1s
_cgd1r:
	movq 5(%rbx),%rax
	movq 13(%rbx),%rbx
	leaq sat_sgaJc_info(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -32(%r12),%rsi
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,%rbx
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_cgd1s:
	movq $40,904(%r13)
	jmp *-8(%r13)
	.size sat_sgaJd_entry, .-sat_sgaJd_entry


==================== Asm code ====================
2018-03-16 16:12:05.644327579 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaJd_info:
	.quad	sat_sgaJd_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:05.645099833 UTC

.section .text
.align 8
sat_sgaJ7_entry:
_cgd1y:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgd1z
_cgd1A:
	movq 37(%rbx),%r9
	movq 29(%rbx),%r8
	movq %rdi,%rax
	movq 21(%rbx),%rdi
	movq %rsi,%rcx
	movq 13(%rbx),%rsi
	movq %r14,%rdx
	movq 5(%rbx),%r14
	movq 45(%rbx),%rbx
	movq %rbx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp Data.Functor.Product.$fDataProduct_$cgfoldl_entry
_cgd1z:
	jmp *-8(%r13)
	.size sat_sgaJ7_entry, .-sat_sgaJ7_entry


==================== Asm code ====================
2018-03-16 16:12:05.645826944 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaJ7_info:
	.quad	sat_sgaJ7_entry
	.quad	6
	.quad	8
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:12:05.64650947 UTC

.section .text
.align 8
sat_sgaJ6_entry:
_cgd1F:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgd1G
_cgd1H:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Product.$w$cp1Data_entry
_cgd1G:
	jmp *-16(%r13)
	.size sat_sgaJ6_entry, .-sat_sgaJ6_entry


==================== Asm code ====================
2018-03-16 16:12:05.647171295 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgaJ6_info:
	.quad	sat_sgaJ6_entry
	.quad	4
	.quad	4294967311
	.quad	SgaPW_srt+640


==================== Asm code ====================
2018-03-16 16:12:05.648293411 UTC

.section .text
.align 8
.globl Data.Functor.Product.$fDataProduct_entry
.type Data.Functor.Product.$fDataProduct_entry, @object
Data.Functor.Product.$fDataProduct_entry:
_cgd1J:
	addq $576,%r12
	cmpq 856(%r13),%r12
	ja _cgd1N
_cgd1M:
	leaq sat_sgaJG_info(%rip),%rax
	movq %rax,-568(%r12)
	movq %r9,-560(%r12)
	movq (%rbp),%rax
	movq %rax,-552(%r12)
	leaq sat_sgaJC_info(%rip),%rbx
	movq %rbx,-544(%r12)
	movq %r9,-536(%r12)
	movq %rax,-528(%r12)
	leaq sat_sgaJy_info(%rip),%rbx
	movq %rbx,-520(%r12)
	movq %r14,-512(%r12)
	movq %rsi,-504(%r12)
	movq %rdi,-496(%r12)
	movq %r8,-488(%r12)
	movq %r9,-480(%r12)
	movq %rax,-472(%r12)
	leaq sat_sgaJx_info(%rip),%rbx
	movq %rbx,-464(%r12)
	movq %r14,-456(%r12)
	movq %rsi,-448(%r12)
	movq %rdi,-440(%r12)
	movq %r8,-432(%r12)
	movq %r9,-424(%r12)
	movq %rax,-416(%r12)
	leaq sat_sgaJw_info(%rip),%rbx
	movq %rbx,-408(%r12)
	movq %r9,-400(%r12)
	movq %rax,-392(%r12)
	leaq sat_sgaJn_info(%rip),%rbx
	movq %rbx,-384(%r12)
	movq %r14,-376(%r12)
	movq %rsi,-368(%r12)
	movq %rdi,-360(%r12)
	movq %r8,-352(%r12)
	movq %r9,-344(%r12)
	movq %rax,-336(%r12)
	leaq sat_sgaJm_info(%rip),%rbx
	movq %rbx,-328(%r12)
	movq %r14,-320(%r12)
	movq %rsi,-312(%r12)
	movq %rdi,-304(%r12)
	movq %r8,-296(%r12)
	movq %r9,-288(%r12)
	movq %rax,-280(%r12)
	leaq sat_sgaJl_info(%rip),%rbx
	movq %rbx,-272(%r12)
	movq %r9,-264(%r12)
	movq %rax,-256(%r12)
	leaq sat_sgaJd_info(%rip),%rbx
	movq %rbx,-248(%r12)
	movq %r9,-240(%r12)
	movq %rax,-232(%r12)
	leaq sat_sgaJ7_info(%rip),%rbx
	movq %rbx,-224(%r12)
	movq %r14,-216(%r12)
	movq %rsi,-208(%r12)
	movq %rdi,-200(%r12)
	movq %r8,-192(%r12)
	movq %r9,-184(%r12)
	movq %rax,-176(%r12)
	leaq sat_sgaJ6_info(%rip),%rax
	movq %rax,-168(%r12)
	movq %r14,-152(%r12)
	movq %rsi,-144(%r12)
	movq %rdi,-136(%r12)
	movq %r8,-128(%r12)
	movq Data.Data.C:Data_con_info@gotpcrel(%rip),%rax
	movq %rax,-120(%r12)
	leaq -168(%r12),%rax
	movq %rax,-112(%r12)
	leaq -221(%r12),%rax
	movq %rax,-104(%r12)
	leaq -245(%r12),%rax
	movq %rax,-96(%r12)
	leaq lvl5_rg5oj_closure+1(%rip),%rax
	movq %rax,-88(%r12)
	leaq lvl6_rg5ok_closure+1(%rip),%rax
	movq %rax,-80(%r12)
	leaq lvl7_rg5ol_closure+2(%rip),%rax
	movq %rax,-72(%r12)
	leaq lvl8_rg5om_closure+2(%rip),%rax
	movq %rax,-64(%r12)
	leaq -270(%r12),%rax
	movq %rax,-56(%r12)
	leaq -324(%r12),%rax
	movq %rax,-48(%r12)
	leaq -380(%r12),%rax
	movq %rax,-40(%r12)
	leaq -406(%r12),%rax
	movq %rax,-32(%r12)
	leaq -461(%r12),%rax
	movq %rax,-24(%r12)
	leaq -517(%r12),%rax
	movq %rax,-16(%r12)
	leaq -541(%r12),%rax
	movq %rax,-8(%r12)
	leaq -565(%r12),%rax
	movq %rax,(%r12)
	leaq -119(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgd1N:
	movq $576,904(%r13)
	leaq Data.Functor.Product.$fDataProduct_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.$fDataProduct_entry, .-Data.Functor.Product.$fDataProduct_entry


==================== Asm code ====================
2018-03-16 16:12:05.649604611 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.$fDataProduct_info
.type Data.Functor.Product.$fDataProduct_info, @object
Data.Functor.Product.$fDataProduct_info:
	.quad	Data.Functor.Product.$fDataProduct_entry
	.quad	0
	.quad	914828034062
	.quad	25769803802
	.quad	SgaPW_srt+640


==================== Asm code ====================
2018-03-16 16:12:05.652305792 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Product.Pair_closure
.type Data.Functor.Product.Pair_closure, @object
Data.Functor.Product.Pair_closure:
	.quad	Data.Functor.Product.Pair_info


==================== Asm code ====================
2018-03-16 16:12:05.653040186 UTC

.section .text
.align 8
Data.Functor.Product.Pair_entry:
_cgd3Q:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgd3U
_cgd3T:
	leaq Data.Functor.Product.Pair_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgd3U:
	movq $24,904(%r13)
	leaq Data.Functor.Product.Pair_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Product.Pair_entry, .-Data.Functor.Product.Pair_entry


==================== Asm code ====================
2018-03-16 16:12:05.653726093 UTC

.section .data.rel.ro
.align 8
.align 1
Data.Functor.Product.Pair_info:
	.quad	Data.Functor.Product.Pair_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:12:05.65578016 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
igd42_str:
	.asciz "base:Data.Functor.Product.Pair"


==================== Asm code ====================
2018-03-16 16:12:05.656383284 UTC

.section .text
.align 8
.globl Data.Functor.Product.Pair_con_entry
.type Data.Functor.Product.Pair_con_entry, @object
Data.Functor.Product.Pair_con_entry:
_cgd41:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size Data.Functor.Product.Pair_con_entry, .-Data.Functor.Product.Pair_con_entry


==================== Asm code ====================
2018-03-16 16:12:05.656964745 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Product.Pair_con_info
.type Data.Functor.Product.Pair_con_info, @object
Data.Functor.Product.Pair_con_info:
	.quad	Data.Functor.Product.Pair_con_entry
	.quad	2
	.quad	4
	.quad	igd42_str


==================== Asm code ====================
2018-03-16 16:12:05.660089732 UTC

.section .data.rel.ro
.align 8
.align 1
SgaPW_srt:
	.quad	Text.Read.Lex.$wexpect_closure
	.quad	Data.Functor.Product.$fRead1Product1_closure
	.quad	GHC.Read.list3_closure
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadPrec_closure
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadsPrec_closure
	.quad	GHC.Read.list_closure
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadListPrec_closure
	.quad	Data.Functor.Product.$fRead1Product_$cliftReadList_closure
	.quad	Data.Functor.Product.$fRead1Product_closure
	.quad	Data.Functor.Product.$fRead1Product2_closure
	.quad	Data.Functor.Product.$w$cliftShowsPrec_closure
	.quad	Data.Functor.Product.$fShow1Product_$cliftShowsPrec_closure
	.quad	Data.Functor.Product.$fShow1Product_$cliftShowList_closure
	.quad	Data.Functor.Product.$fShow1Product_closure
	.quad	Data.Functor.Product.$fReadProduct_$creadPrec_closure
	.quad	Data.Functor.Product.$fReadProduct_$creadsPrec_closure
	.quad	Data.Functor.Product.$fReadProduct_$creadListPrec_closure
	.quad	Data.Functor.Product.$fReadProduct_$creadList_closure
	.quad	Data.Functor.Product.$fReadProduct_closure
	.quad	Data.Functor.Product.$w$cshowsPrec_closure
	.quad	Data.Functor.Product.$fShowProduct_$cshowsPrec_closure
	.quad	Data.Functor.Product.$w$cshow_closure
	.quad	Data.Functor.Product.$fShowProduct_$cshow_closure
	.quad	Data.Functor.Product.$fShowProduct_$cshowList_closure
	.quad	Data.Functor.Product.$fShowProduct_closure
	.quad	Data.Semigroup.Internal.$fMonoidSum_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$csum_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	Data.Functor.Utils.$fMonoidMin_closure
	.quad	Data.Functor.Product.$fFoldableProduct2_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$cminimum_closure
	.quad	Data.Functor.Utils.$fMonoidMax_closure
	.quad	Data.Functor.Product.$fFoldableProduct3_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$cmaximum_closure
	.quad	Data.Semigroup.Internal.$fMonoidAny_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$celem_closure
	.quad	Data.Semigroup.Internal.$fMonoidEndo_closure
	.quad	Data.Functor.Product.$fFoldableProduct8_closure
	.quad	Data.Functor.Product.$w$cfoldl_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldl_closure
	.quad	Data.Functor.Product.$w$cfoldl1_closure
	.quad	Data.Functor.Product.$fFoldableProduct7_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldl1_closure
	.quad	Data.Functor.Product.$w$cfoldr'_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldr'_closure
	.quad	Data.Functor.Product.$w$cfoldr_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldr_closure
	.quad	Data.Functor.Product.$w$cfoldl'_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldl'_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$clength_closure
	.quad	Data.Functor.Product.$w$cfoldr1_closure
	.quad	Data.Functor.Product.$fFoldableProduct9_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$cfoldr1_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$cnull_closure
	.quad	Data.Semigroup.Internal.$fMonoidProduct_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$cproduct_closure
	.quad	Data.Functor.Product.$fFoldableProduct_$ctoList_closure
	.quad	Data.Functor.Product.$fFoldableProduct_closure
	.quad	Data.Functor.Product.$fTraversableProduct_$cp2Traversable_closure
	.quad	Data.Functor.Product.$fTraversableProduct_closure
	.quad	poly_some_v_rg5o0_closure
	.quad	Data.Functor.Product.$fAlternativeProduct_$csome_closure
	.quad	Data.Functor.Product.$fAlternativeProduct_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	Data.Functor.Product.$fMonadProduct_closure
	.quad	lvl4_rg5o1_closure
	.quad	Data.Functor.Product.$fMonadPlusProduct_$cp2MonadPlus_closure
	.quad	Data.Functor.Product.$fMonadPlusProduct_$cp1MonadPlus_closure
	.quad	Data.Functor.Product.$fMonadPlusProduct_closure
	.quad	Data.Functor.Product.$fMonadFixProduct_$cp1MonadFix_closure
	.quad	Data.Functor.Product.$fMonadFixProduct_closure
	.quad	Data.Functor.Product.$fMonadZipProduct_$cp1MonadZip_closure
	.quad	Data.Functor.Product.$fMonadZipProduct_closure
	.quad	GHC.List.badHead_closure
	.quad	go61_rg5o2_closure
	.quad	Data.Functor.Product.$fRead1Product2_closure
	.quad	Data.Data.mkConstr1_closure
	.quad	Data.Functor.Product.$fDataProduct4_closure
	.quad	Data.Typeable.Internal.mkTrApp_closure
	.quad	Data.Typeable.Internal.$wmkTrCon_closure
	.quad	Data.Functor.Product.$w$cp1Data_closure
	.quad	Data.Maybe.fromJust1_closure
	.quad	Data.Functor.Product.$fDataProduct_$cgmapQi_closure
	.quad	Data.Functor.Product.$cPair_closure
	.quad	lvl5_rg5oj_closure
	.quad	Data.Functor.Product.$tProduct_closure
	.quad	Data.Functor.Product.$fDataProduct_closure
	.quad	lvl6_rg5ok_closure

