
==================== Asm code ====================
2018-03-16 16:02:20.839574993 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst3_closure
.type Data.Functor.Const.$fReadConst3_closure, @object
Data.Functor.Const.$fReadConst3_closure:
	.quad	GHC.Types.I#_con_info
	.quad	11


==================== Asm code ====================
2018-03-16 16:02:20.841526034 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Const.$fReadConst5_bytes
.type Data.Functor.Const.$fReadConst5_bytes, @object
Data.Functor.Const.$fReadConst5_bytes:
	.asciz "Const"


==================== Asm code ====================
2018-03-16 16:02:20.844499294 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst4_closure
.type Data.Functor.Const.$fReadConst4_closure, @object
Data.Functor.Const.$fReadConst4_closure:
	.quad	Data.Functor.Const.$fReadConst4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:20.845888156 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fReadConst4_entry
.type Data.Functor.Const.$fReadConst4_entry, @object
Data.Functor.Const.$fReadConst4_entry:
_c76ar:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76as
_c76at:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c76aq
_c76ap:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Data.Functor.Const.$fReadConst5_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c76as:
	jmp *-16(%r13)
_c76aq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Const.$fReadConst4_entry, .-Data.Functor.Const.$fReadConst4_entry


==================== Asm code ====================
2018-03-16 16:02:20.846640828 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst4_info
.type Data.Functor.Const.$fReadConst4_info, @object
Data.Functor.Const.$fReadConst4_info:
	.quad	Data.Functor.Const.$fReadConst4_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:02:20.856974582 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$w$creadsPrec_closure
.type Data.Functor.Const.$w$creadsPrec_closure, @object
Data.Functor.Const.$w$creadsPrec_closure:
	.quad	Data.Functor.Const.$w$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:20.858398928 UTC

.section .text
.align 8
go1_s750f_entry:
_c76bd:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c76be
_c76bf:
	movq $block_c76b6_info,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c76b6
_c76b7:
	movq (%rbx),%rax
	jmp *(%rax)
_c76be:
	jmp *-8(%r13)
	.size go1_s750f_entry, .-go1_s750f_entry


==================== Asm code ====================
2018-03-16 16:02:20.859108364 UTC

.section .data.rel.ro
.align 8
.align 1
go1_s750f_info:
	.quad	go1_s750f_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:20.85998323 UTC

.section .text
.align 8
_c76b6:
_c76b6:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c76ba
_c76bb:
	movq $block_c76bl_info,(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c76bl
_c76bm:
	movq (%rbx),%rax
	jmp *(%rax)
_c76ba:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c76b6, .-_c76b6


==================== Asm code ====================
2018-03-16 16:02:20.861730424 UTC

.section .data.rel.ro
.align 8
.align 1
block_c76b6_info:
	.quad	_c76b6
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:02:20.862518396 UTC

.section .text
.align 8
_c76bl:
_c76bl:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c76bv
_c76bu:
	movq $stg_ap_2_upd_info,-48(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c76bv:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c76bl, .-_c76bl


==================== Asm code ====================
2018-03-16 16:02:20.863242668 UTC

.section .data.rel.ro
.align 8
.align 1
block_c76bl_info:
	.quad	_c76bl
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:02:20.86395583 UTC

.section .text
.align 8
go_s7505_entry:
_c76bC:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c76bD
_u76bX:
	movq %rbx,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp _c76aH
_c76bD:
	jmp *-8(%r13)
	.size go_s7505_entry, .-go_s7505_entry


==================== Asm code ====================
2018-03-16 16:02:20.864613148 UTC

.section .data.rel.ro
.align 8
.align 1
go_s7505_info:
	.quad	go_s7505_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S757l_srt


==================== Asm code ====================
2018-03-16 16:02:20.865370964 UTC

.section .text
.align 8
_c76aH:
_c76aH:
	movq (%rbp),%rax
	movq 7(%rax),%rax
	movq $block_c76aK_info,-8(%rbp)
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c76aK
_c76aL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c76aH, .-_c76aH


==================== Asm code ====================
2018-03-16 16:02:20.866228728 UTC

.section .text
.align 8
_c76aK:
_c76aK:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c76bz
_c76bA:
	movq $block_c76aQ_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c76aQ
_c76aR:
	movq (%rbx),%rax
	jmp *(%rax)
_c76bz:
	movl $[]_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c76aK, .-_c76aK


==================== Asm code ====================
2018-03-16 16:02:20.866925818 UTC

.section .data.rel.ro
.align 8
.align 1
block_c76aK_info:
	.quad	_c76aK
	.quad	2
	.quad	4294967326
	.quad	S757l_srt


==================== Asm code ====================
2018-03-16 16:02:20.867633309 UTC

.section .text
.align 8
_c76aQ:
_c76aQ:
	movq $block_c76aV_info,-8(%rbp)
	movl $Data.Functor.Const.$fReadConst4_closure,%esi
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.eqString_entry
	.size _c76aQ, .-_c76aQ


==================== Asm code ====================
2018-03-16 16:02:20.868305008 UTC

.section .data.rel.ro
.align 8
.align 1
block_c76aQ_info:
	.quad	_c76aQ
	.quad	3
	.quad	4294967326
	.quad	S757l_srt


==================== Asm code ====================
2018-03-16 16:02:20.869163151 UTC

.section .text
.align 8
_c76aV:
_c76aV:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c76bM
_c76bO:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c76bR
_c76bQ:
	movq $stg_ap_2_upd_info,-40(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq $go1_s750f_info,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	movq $block_c76bN_info,24(%rbp)
	movq 32(%rbp),%r14
	movq $stg_ap_pp_info,(%rbp)
	movq 8(%rbp),%rax
	movq $Data.Functor.Const.$fReadConst3_closure+1,8(%rbp)
	movq %rax,16(%rbp)
	leaq -7(%r12),%rax
	movq %rax,32(%rbp)
	jmp GHC.Read.readsPrec_entry
_c76bR:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
_c76bM:
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp _c76aH
	.size _c76aV, .-_c76aV


==================== Asm code ====================
2018-03-16 16:02:20.870032537 UTC

.section .data.rel.ro
.align 8
.align 1
block_c76aV_info:
	.quad	_c76aV
	.quad	4
	.quad	4294967326
	.quad	S757l_srt


==================== Asm code ====================
2018-03-16 16:02:20.870752632 UTC

.section .text
.align 8
_c76bN:
_c76bN:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go1_s750f_entry
	.size _c76bN, .-_c76bN


==================== Asm code ====================
2018-03-16 16:02:20.871360201 UTC

.section .data.rel.ro
.align 8
.align 1
block_c76bN_info:
	.quad	_c76bN
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:02:20.872155776 UTC

.section .text
.align 8
sat_s750u_entry:
_c76ca:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76cb
_c76cc:
	movq $block_c76c8_info,-16(%rbp)
	movq %r14,%rsi
	movl $GHC.Read.lex1_closure,%r14d
	movq 7(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp Text.ParserCombinators.ReadP.run_entry
_c76cb:
	jmp *-8(%r13)
	.size sat_s750u_entry, .-sat_s750u_entry


==================== Asm code ====================
2018-03-16 16:02:20.872834495 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s750u_info:
	.quad	sat_s750u_entry
	.quad	1
	.quad	12884901897
	.quad	4294967301
	.quad	S757l_srt


==================== Asm code ====================
2018-03-16 16:02:20.873668497 UTC

.section .text
.align 8
_c76c8:
_c76c8:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s7505_entry
	.size _c76c8, .-_c76c8


==================== Asm code ====================
2018-03-16 16:02:20.874325158 UTC

.section .data.rel.ro
.align 8
.align 1
block_c76c8_info:
	.quad	_c76c8
	.quad	1
	.quad	4294967326
	.quad	S757l_srt


==================== Asm code ====================
2018-03-16 16:02:20.875197443 UTC

.section .text
.align 8
.globl Data.Functor.Const.$w$creadsPrec_entry
.type Data.Functor.Const.$w$creadsPrec_entry, @object
Data.Functor.Const.$w$creadsPrec_entry:
_c76ci:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c76cm
_c76cl:
	movq $go_s7505_info,-24(%r12)
	movq %r14,-16(%r12)
	movq $sat_s750u_info,-8(%r12)
	leaq -23(%r12),%rax
	movq %rax,(%r12)
	cmpq $10,%rsi
	setg %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rax
	leaq -7(%r12),%rsi
	movq %rax,%r14
	jmp GHC.Read.readParen_entry
_c76cm:
	movq $32,904(%r13)
	movl $Data.Functor.Const.$w$creadsPrec_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$w$creadsPrec_entry, .-Data.Functor.Const.$w$creadsPrec_entry


==================== Asm code ====================
2018-03-16 16:02:20.875950186 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$w$creadsPrec_info
.type Data.Functor.Const.$w$creadsPrec_info, @object
Data.Functor.Const.$w$creadsPrec_info:
	.quad	Data.Functor.Const.$w$creadsPrec_entry
	.quad	0
	.quad	64424509454
	.quad	12884901909
	.quad	S757l_srt


==================== Asm code ====================
2018-03-16 16:02:20.87958745 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst_$creadsPrec_closure
.type Data.Functor.Const.$fReadConst_$creadsPrec_closure, @object
Data.Functor.Const.$fReadConst_$creadsPrec_closure:
	.quad	Data.Functor.Const.$fReadConst_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:20.880442868 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fReadConst_$creadsPrec_entry
.type Data.Functor.Const.$fReadConst_$creadsPrec_entry, @object
Data.Functor.Const.$fReadConst_$creadsPrec_entry:
_c76dx:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c76dy
_c76dz:
	movq $block_c76du_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c76du
_c76dv:
	movq (%rbx),%rax
	jmp *(%rax)
_c76dy:
	movl $Data.Functor.Const.$fReadConst_$creadsPrec_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fReadConst_$creadsPrec_entry, .-Data.Functor.Const.$fReadConst_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 16:02:20.881287263 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst_$creadsPrec_info
.type Data.Functor.Const.$fReadConst_$creadsPrec_info, @object
Data.Functor.Const.$fReadConst_$creadsPrec_info:
	.quad	Data.Functor.Const.$fReadConst_$creadsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S757l_srt+24


==================== Asm code ====================
2018-03-16 16:02:20.882051007 UTC

.section .text
.align 8
_c76du:
_c76du:
	movq 16(%rbp),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp Data.Functor.Const.$w$creadsPrec_entry
	.size _c76du, .-_c76du


==================== Asm code ====================
2018-03-16 16:02:20.88275579 UTC

.section .data.rel.ro
.align 8
.align 1
block_c76du_info:
	.quad	_c76du
	.quad	2
	.quad	4294967326
	.quad	S757l_srt+24


==================== Asm code ====================
2018-03-16 16:02:20.887491262 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst2_closure
.type Data.Functor.Const.$fReadConst2_closure, @object
Data.Functor.Const.$fReadConst2_closure:
	.quad	Data.Functor.Const.$fReadConst2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:20.888261179 UTC

.section .text
.align 8
sat_s750D_entry:
_c76dW:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Const.$fReadConst_$creadsPrec_entry
	.size sat_s750D_entry, .-sat_s750D_entry


==================== Asm code ====================
2018-03-16 16:02:20.888932371 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s750D_info:
	.quad	sat_s750D_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	S757l_srt+32


==================== Asm code ====================
2018-03-16 16:02:20.890138479 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fReadConst2_entry
.type Data.Functor.Const.$fReadConst2_entry, @object
Data.Functor.Const.$fReadConst2_entry:
_c76e2:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c76e3
_c76e4:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c76e6
_c76e5:
	movq $sat_s750D_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq $block_c76dZ_info,-8(%rbp)
	movq %rdi,%rsi
	leaq -15(%r12),%r14
	addq $-8,%rbp
	jmp Text.ParserCombinators.ReadP.$wreadS_to_P_entry
_c76e6:
	movq $24,904(%r13)
_c76e3:
	movl $Data.Functor.Const.$fReadConst2_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fReadConst2_entry, .-Data.Functor.Const.$fReadConst2_entry


==================== Asm code ====================
2018-03-16 16:02:20.89106886 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst2_info
.type Data.Functor.Const.$fReadConst2_info, @object
Data.Functor.Const.$fReadConst2_info:
	.quad	Data.Functor.Const.$fReadConst2_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S757l_srt+32


==================== Asm code ====================
2018-03-16 16:02:20.892525826 UTC

.section .text
.align 8
_c76dZ:
_c76dZ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c76e9
_c76e8:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c76e9:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c76dZ, .-_c76dZ


==================== Asm code ====================
2018-03-16 16:02:20.893152695 UTC

.section .data.rel.ro
.align 8
.align 1
block_c76dZ_info:
	.quad	_c76dZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:02:20.894971572 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst5_closure
.type Data.Functor.Const.$fFoldableConst5_closure, @object
Data.Functor.Const.$fFoldableConst5_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:20.899002556 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst_$creadList_closure
.type Data.Functor.Const.$fReadConst_$creadList_closure, @object
Data.Functor.Const.$fReadConst_$creadList_closure:
	.quad	Data.Functor.Const.$fReadConst_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:20.899724633 UTC

.section .text
.align 8
sat_s750H_entry:
_c76eA:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Const.$fReadConst2_entry
	.size sat_s750H_entry, .-sat_s750H_entry


==================== Asm code ====================
2018-03-16 16:02:20.900336043 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s750H_info:
	.quad	sat_s750H_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S757l_srt+40


==================== Asm code ====================
2018-03-16 16:02:20.901191389 UTC

.section .text
.align 8
sat_s750I_entry:
_c76eD:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c76eE
_c76eF:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c76eH
_c76eG:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $sat_s750H_info,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq $Data.Functor.Const.$fFoldableConst5_closure+1,-32(%rbp)
	movq $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Read.list_entry
_c76eH:
	movq $16,904(%r13)
_c76eE:
	jmp *-16(%r13)
	.size sat_s750I_entry, .-sat_s750I_entry


==================== Asm code ====================
2018-03-16 16:02:20.901965428 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s750I_info:
	.quad	sat_s750I_entry
	.quad	1
	.quad	12884901904
	.quad	S757l_srt+40


==================== Asm code ====================
2018-03-16 16:02:20.902683263 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fReadConst_$creadList_entry
.type Data.Functor.Const.$fReadConst_$creadList_entry, @object
Data.Functor.Const.$fReadConst_$creadList_entry:
_c76eI:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c76eM
_c76eL:
	movq $sat_s750I_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	movl $Text.ParserCombinators.ReadP.run_closure+2,%ebx
	jmp stg_ap_p_fast
_c76eM:
	movq $24,904(%r13)
	movl $Data.Functor.Const.$fReadConst_$creadList_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fReadConst_$creadList_entry, .-Data.Functor.Const.$fReadConst_$creadList_entry


==================== Asm code ====================
2018-03-16 16:02:20.903375879 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst_$creadList_info
.type Data.Functor.Const.$fReadConst_$creadList_info, @object
Data.Functor.Const.$fReadConst_$creadList_info:
	.quad	Data.Functor.Const.$fReadConst_$creadList_entry
	.quad	0
	.quad	30064771086
	.quad	4294967301
	.quad	S757l_srt+40


==================== Asm code ====================
2018-03-16 16:02:20.908957191 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$w$creadListPrec_closure
.type Data.Functor.Const.$w$creadListPrec_closure, @object
Data.Functor.Const.$w$creadListPrec_closure:
	.quad	Data.Functor.Const.$w$creadListPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:20.90972638 UTC

.section .text
.align 8
sat_s750L_entry:
_c76fb:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Const.$fReadConst2_entry
	.size sat_s750L_entry, .-sat_s750L_entry


==================== Asm code ====================
2018-03-16 16:02:20.910330556 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s750L_info:
	.quad	sat_s750L_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S757l_srt+40


==================== Asm code ====================
2018-03-16 16:02:20.911218271 UTC

.section .text
.align 8
w1_s750K_entry:
_c76fe:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c76ff
_c76fg:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c76fi
_c76fh:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $sat_s750L_info,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq $Data.Functor.Const.$fFoldableConst5_closure+1,-32(%rbp)
	movq $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Read.list_entry
_c76fi:
	movq $16,904(%r13)
_c76ff:
	jmp *-16(%r13)
	.size w1_s750K_entry, .-w1_s750K_entry


==================== Asm code ====================
2018-03-16 16:02:20.911991471 UTC

.section .data.rel.ro
.align 8
.align 1
w1_s750K_info:
	.quad	w1_s750K_entry
	.quad	1
	.quad	12884901904
	.quad	S757l_srt+40


==================== Asm code ====================
2018-03-16 16:02:20.912663176 UTC

.section .text
.align 8
w2_s750M_entry:
_c76fo:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp Text.ParserCombinators.ReadP.run_entry
	.size w2_s750M_entry, .-w2_s750M_entry


==================== Asm code ====================
2018-03-16 16:02:20.913507907 UTC

.section .data.rel.ro
.align 8
.align 1
w2_s750M_info:
	.quad	w2_s750M_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:20.914274049 UTC

.section .text
.align 8
sat_s750Q_entry:
_c76fz:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c76fA
_c76fB:
	movq $block_c76fw_info,-8(%rbp)
	movq %r14,%rsi
	movq 7(%rbx),%r14
	addq $-8,%rbp
	jmp Text.ParserCombinators.ReadP.$wreadS_to_P_entry
_c76fA:
	jmp *-8(%r13)
	.size sat_s750Q_entry, .-sat_s750Q_entry


==================== Asm code ====================
2018-03-16 16:02:20.914926244 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s750Q_info:
	.quad	sat_s750Q_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:20.915752907 UTC

.section .text
.align 8
_c76fw:
_c76fw:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c76fE
_c76fD:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c76fE:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c76fw, .-_c76fw


==================== Asm code ====================
2018-03-16 16:02:20.916475547 UTC

.section .data.rel.ro
.align 8
.align 1
block_c76fw_info:
	.quad	_c76fw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:02:20.917374736 UTC

.section .text
.align 8
.globl Data.Functor.Const.$w$creadListPrec_entry
.type Data.Functor.Const.$w$creadListPrec_entry, @object
Data.Functor.Const.$w$creadListPrec_entry:
_c76fF:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c76fJ
_c76fI:
	movq $w1_s750K_info,-48(%r12)
	movq %r14,-32(%r12)
	movq $w2_s750M_info,-24(%r12)
	leaq -48(%r12),%rax
	movq %rax,-16(%r12)
	movq $sat_s750Q_info,-8(%r12)
	leaq -23(%r12),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c76fJ:
	movq $56,904(%r13)
	movl $Data.Functor.Const.$w$creadListPrec_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$w$creadListPrec_entry, .-Data.Functor.Const.$w$creadListPrec_entry


==================== Asm code ====================
2018-03-16 16:02:20.918119889 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$w$creadListPrec_info
.type Data.Functor.Const.$w$creadListPrec_info, @object
Data.Functor.Const.$w$creadListPrec_info:
	.quad	Data.Functor.Const.$w$creadListPrec_entry
	.quad	0
	.quad	47244640270
	.quad	4294967301
	.quad	S757l_srt+40


==================== Asm code ====================
2018-03-16 16:02:20.921120075 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst1_closure
.type Data.Functor.Const.$fReadConst1_closure, @object
Data.Functor.Const.$fReadConst1_closure:
	.quad	Data.Functor.Const.$fReadConst1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:20.921783539 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fReadConst1_entry
.type Data.Functor.Const.$fReadConst1_entry, @object
Data.Functor.Const.$fReadConst1_entry:
_c76gd:
	jmp Data.Functor.Const.$w$creadListPrec_entry
	.size Data.Functor.Const.$fReadConst1_entry, .-Data.Functor.Const.$fReadConst1_entry


==================== Asm code ====================
2018-03-16 16:02:20.922411934 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst1_info
.type Data.Functor.Const.$fReadConst1_info, @object
Data.Functor.Const.$fReadConst1_info:
	.quad	Data.Functor.Const.$fReadConst1_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S757l_srt+64


==================== Asm code ====================
2018-03-16 16:02:20.927396732 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst_closure
.type Data.Functor.Const.$fReadConst_closure, @object
Data.Functor.Const.$fReadConst_closure:
	.quad	Data.Functor.Const.$fReadConst_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:20.928163896 UTC

.section .text
.align 8
lvl_s750U_entry:
_c76gs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76gt
_c76gu:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$w$creadListPrec_entry
_c76gt:
	jmp *-16(%r13)
	.size lvl_s750U_entry, .-lvl_s750U_entry


==================== Asm code ====================
2018-03-16 16:02:20.928779804 UTC

.section .data.rel.ro
.align 8
.align 1
lvl_s750U_info:
	.quad	lvl_s750U_entry
	.quad	1
	.quad	4294967312
	.quad	S757l_srt+64


==================== Asm code ====================
2018-03-16 16:02:20.929825757 UTC

.section .text
.align 8
sat_s750Z_entry:
_c76gA:
	movq 7(%rbx),%rbx
	jmp stg_ap_0_fast
	.size sat_s750Z_entry, .-sat_s750Z_entry


==================== Asm code ====================
2018-03-16 16:02:20.93038929 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s750Z_info:
	.quad	sat_s750Z_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:20.931020181 UTC

.section .text
.align 8
sat_s750X_entry:
_c76gI:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Const.$fReadConst2_entry
	.size sat_s750X_entry, .-sat_s750X_entry


==================== Asm code ====================
2018-03-16 16:02:20.931607049 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s750X_info:
	.quad	sat_s750X_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S757l_srt+40


==================== Asm code ====================
2018-03-16 16:02:20.932326898 UTC

.section .text
.align 8
sat_s750W_entry:
_c76gP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76gQ
_c76gR:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fReadConst_$creadList_entry
_c76gQ:
	jmp *-16(%r13)
	.size sat_s750W_entry, .-sat_s750W_entry


==================== Asm code ====================
2018-03-16 16:02:20.932928613 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s750W_info:
	.quad	sat_s750W_entry
	.quad	1
	.quad	4294967312
	.quad	S757l_srt+56


==================== Asm code ====================
2018-03-16 16:02:20.933586748 UTC

.section .text
.align 8
sat_s750V_entry:
_c76gX:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Const.$fReadConst_$creadsPrec_entry
	.size sat_s750V_entry, .-sat_s750V_entry


==================== Asm code ====================
2018-03-16 16:02:20.934142752 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s750V_info:
	.quad	sat_s750V_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S757l_srt+32


==================== Asm code ====================
2018-03-16 16:02:20.934884331 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fReadConst_entry
.type Data.Functor.Const.$fReadConst_entry, @object
Data.Functor.Const.$fReadConst_entry:
_c76h1:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _c76h5
_c76h4:
	movq $lvl_s750U_info,-128(%r12)
	movq %r14,-112(%r12)
	movq $sat_s750Z_info,-104(%r12)
	leaq -128(%r12),%rax
	movq %rax,-96(%r12)
	movq $sat_s750X_info,-88(%r12)
	movq %r14,-80(%r12)
	movq $sat_s750W_info,-72(%r12)
	movq %r14,-56(%r12)
	movq $sat_s750V_info,-48(%r12)
	movq %r14,-40(%r12)
	movq $GHC.Read.C:Read_con_info,-32(%r12)
	leaq -46(%r12),%rax
	movq %rax,-24(%r12)
	leaq -72(%r12),%rax
	movq %rax,-16(%r12)
	leaq -86(%r12),%rax
	movq %rax,-8(%r12)
	leaq -103(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c76h5:
	movq $136,904(%r13)
	movl $Data.Functor.Const.$fReadConst_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fReadConst_entry, .-Data.Functor.Const.$fReadConst_entry


==================== Asm code ====================
2018-03-16 16:02:20.935654725 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst_info
.type Data.Functor.Const.$fReadConst_info, @object
Data.Functor.Const.$fReadConst_info:
	.quad	Data.Functor.Const.$fReadConst_entry
	.quad	0
	.quad	253403070478
	.quad	4294967301
	.quad	S757l_srt+32


==================== Asm code ====================
2018-03-16 16:02:20.937392247 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Const.$fShowConst2_bytes
.type Data.Functor.Const.$fShowConst2_bytes, @object
Data.Functor.Const.$fShowConst2_bytes:
	.asciz "Const "


==================== Asm code ====================
2018-03-16 16:02:20.940053578 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fShowConst1_closure
.type Data.Functor.Const.$fShowConst1_closure, @object
Data.Functor.Const.$fShowConst1_closure:
	.quad	Data.Functor.Const.$fShowConst1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:20.940905482 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fShowConst1_entry
.type Data.Functor.Const.$fShowConst1_entry, @object
Data.Functor.Const.$fShowConst1_entry:
_c76hE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76hF
_c76hG:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c76hD
_c76hC:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Data.Functor.Const.$fShowConst2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c76hF:
	jmp *-16(%r13)
_c76hD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Const.$fShowConst1_entry, .-Data.Functor.Const.$fShowConst1_entry


==================== Asm code ====================
2018-03-16 16:02:20.941705937 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fShowConst1_info
.type Data.Functor.Const.$fShowConst1_info, @object
Data.Functor.Const.$fShowConst1_info:
	.quad	Data.Functor.Const.$fShowConst1_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:02:20.949282772 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$w$cshowsPrec_closure
.type Data.Functor.Const.$w$cshowsPrec_closure, @object
Data.Functor.Const.$w$cshowsPrec_closure:
	.quad	Data.Functor.Const.$w$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:20.950274793 UTC

.section .text
.align 8
g_s7513_entry:
_c76hW:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c76hX
_c76hY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq $Data.Functor.Const.$fReadConst3_closure+1,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Show.showsPrec_entry
_c76hX:
	jmp *-16(%r13)
	.size g_s7513_entry, .-g_s7513_entry


==================== Asm code ====================
2018-03-16 16:02:20.950912183 UTC

.section .data.rel.ro
.align 8
.align 1
g_s7513_info:
	.quad	g_s7513_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:02:20.951563267 UTC

.section .text
.align 8
sat_s7516_entry:
_c76ib:
	movq 24(%rbx),%r14
	movq 16(%rbx),%rbx
	jmp stg_ap_p_fast
	.size sat_s7516_entry, .-sat_s7516_entry


==================== Asm code ====================
2018-03-16 16:02:20.952174524 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7516_info:
	.quad	sat_s7516_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:02:20.952866415 UTC

.section .text
.align 8
sat_s7517_entry:
_c76ie:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c76ii
_c76ih:
	movq 7(%rbx),%rax
	movq $sat_s7516_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -24(%r12),%rsi
	movl $Data.Functor.Const.$fShowConst1_closure,%r14d
	jmp GHC.Base.++_entry
_c76ii:
	movq $32,904(%r13)
	jmp *-8(%r13)
	.size sat_s7517_entry, .-sat_s7517_entry


==================== Asm code ====================
2018-03-16 16:02:20.953586141 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7517_info:
	.quad	sat_s7517_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S757l_srt+80


==================== Asm code ====================
2018-03-16 16:02:20.95433817 UTC

.section .text
.align 8
sat_s751a_entry:
_c76iy:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c76iC
_c76iB:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)2_closure,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%r14
	movq %rax,%rbx
	jmp stg_ap_p_fast
_c76iC:
	movq $24,904(%r13)
	jmp *-16(%r13)
	.size sat_s751a_entry, .-sat_s751a_entry


==================== Asm code ====================
2018-03-16 16:02:20.95495033 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s751a_info:
	.quad	sat_s751a_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:02:20.955747256 UTC

.section .text
.align 8
sat_s751b_entry:
_c76iD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76iE
_c76iF:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c76iH
_c76iG:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s751a_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movl $Data.Functor.Const.$fShowConst1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_c76iH:
	movq $32,904(%r13)
_c76iE:
	jmp *-16(%r13)
	.size sat_s751b_entry, .-sat_s751b_entry


==================== Asm code ====================
2018-03-16 16:02:20.956444363 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s751b_info:
	.quad	sat_s751b_entry
	.quad	2
	.quad	4294967314
	.quad	S757l_srt+80


==================== Asm code ====================
2018-03-16 16:02:20.95722358 UTC

.section .text
.align 8
sat_s751c_entry:
_c76iJ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c76iN
_c76iM:
	movq 7(%rbx),%rax
	movq $sat_s751b_info,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)4_closure,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c76iN:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size sat_s751c_entry, .-sat_s751c_entry


==================== Asm code ====================
2018-03-16 16:02:20.958117678 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s751c_info:
	.quad	sat_s751c_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S757l_srt+80


==================== Asm code ====================
2018-03-16 16:02:20.958926596 UTC

.section .text
.align 8
.globl Data.Functor.Const.$w$cshowsPrec_entry
.type Data.Functor.Const.$w$cshowsPrec_entry, @object
Data.Functor.Const.$w$cshowsPrec_entry:
_c76iR:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c76iV
_c76iU:
	movq $g_s7513_info,-40(%r12)
	movq %r14,-24(%r12)
	movq %rdi,-16(%r12)
	leaq -40(%r12),%rax
	cmpq $10,%rsi
	jle _c76iP
_c76iQ:
	movq $sat_s751c_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c76iV:
	movq $48,904(%r13)
	movl $Data.Functor.Const.$w$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
_c76iP:
	movq $sat_s7517_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size Data.Functor.Const.$w$cshowsPrec_entry, .-Data.Functor.Const.$w$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:02:20.959648537 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$w$cshowsPrec_info
.type Data.Functor.Const.$w$cshowsPrec_info, @object
Data.Functor.Const.$w$cshowsPrec_info:
	.quad	Data.Functor.Const.$w$cshowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	12884901909
	.quad	S757l_srt+80


==================== Asm code ====================
2018-03-16 16:02:20.96320677 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fShowConst_$cshowsPrec_closure
.type Data.Functor.Const.$fShowConst_$cshowsPrec_closure, @object
Data.Functor.Const.$fShowConst_$cshowsPrec_closure:
	.quad	Data.Functor.Const.$fShowConst_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:20.963994666 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fShowConst_$cshowsPrec_entry
.type Data.Functor.Const.$fShowConst_$cshowsPrec_entry, @object
Data.Functor.Const.$fShowConst_$cshowsPrec_entry:
_c76jw:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c76jx
_c76jy:
	movq $block_c76jt_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c76jt
_c76ju:
	movq (%rbx),%rax
	jmp *(%rax)
_c76jx:
	movl $Data.Functor.Const.$fShowConst_$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fShowConst_$cshowsPrec_entry, .-Data.Functor.Const.$fShowConst_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:02:20.964652723 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fShowConst_$cshowsPrec_info
.type Data.Functor.Const.$fShowConst_$cshowsPrec_info, @object
Data.Functor.Const.$fShowConst_$cshowsPrec_info:
	.quad	Data.Functor.Const.$fShowConst_$cshowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S757l_srt+88


==================== Asm code ====================
2018-03-16 16:02:20.965368971 UTC

.section .text
.align 8
_c76jt:
_c76jt:
	movq 16(%rbp),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp Data.Functor.Const.$w$cshowsPrec_entry
	.size _c76jt, .-_c76jt


==================== Asm code ====================
2018-03-16 16:02:20.966021889 UTC

.section .data.rel.ro
.align 8
.align 1
block_c76jt_info:
	.quad	_c76jt
	.quad	2
	.quad	4294967326
	.quad	S757l_srt+88


==================== Asm code ====================
2018-03-16 16:02:20.969383125 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fShowConst_$cshow_closure
.type Data.Functor.Const.$fShowConst_$cshow_closure, @object
Data.Functor.Const.$fShowConst_$cshow_closure:
	.quad	Data.Functor.Const.$fShowConst_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:20.970202729 UTC

.section .text
.align 8
sat_s751k_entry:
_c76jU:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c76jV
_c76jW:
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-32(%rbp)
	movq $Data.Functor.Const.$fReadConst3_closure+1,-24(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-16(%rbp)
	movq $GHC.Types.[]_closure+1,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Show.showsPrec_entry
_c76jV:
	jmp *-16(%r13)
	.size sat_s751k_entry, .-sat_s751k_entry


==================== Asm code ====================
2018-03-16 16:02:20.971134826 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s751k_info:
	.quad	sat_s751k_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:02:20.972317415 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fShowConst_$cshow_entry
.type Data.Functor.Const.$fShowConst_$cshow_entry, @object
Data.Functor.Const.$fShowConst_$cshow_entry:
_c76jX:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c76k1
_c76k0:
	movq $sat_s751k_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%rsi
	movl $Data.Functor.Const.$fShowConst1_closure,%r14d
	jmp GHC.Base.++_entry
_c76k1:
	movq $32,904(%r13)
	movl $Data.Functor.Const.$fShowConst_$cshow_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fShowConst_$cshow_entry, .-Data.Functor.Const.$fShowConst_$cshow_entry


==================== Asm code ====================
2018-03-16 16:02:20.973407477 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fShowConst_$cshow_info
.type Data.Functor.Const.$fShowConst_$cshow_info, @object
Data.Functor.Const.$fShowConst_$cshow_info:
	.quad	Data.Functor.Const.$fShowConst_$cshow_entry
	.quad	0
	.quad	38654705678
	.quad	8589934607
	.quad	S757l_srt+80


==================== Asm code ====================
2018-03-16 16:02:20.978766522 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fShowConst_$cshowList_closure
.type Data.Functor.Const.$fShowConst_$cshowList_closure, @object
Data.Functor.Const.$fShowConst_$cshowList_closure:
	.quad	Data.Functor.Const.$fShowConst_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:20.979750144 UTC

.section .text
.align 8
sat_s751p_entry:
_c76kk:
	movq %r14,%rdi
	xorl %esi,%esi
	movq 7(%rbx),%r14
	jmp Data.Functor.Const.$w$cshowsPrec_entry
	.size sat_s751p_entry, .-sat_s751p_entry


==================== Asm code ====================
2018-03-16 16:02:20.980355478 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s751p_info:
	.quad	sat_s751p_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S757l_srt+88


==================== Asm code ====================
2018-03-16 16:02:20.982166531 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fShowConst_$cshowList_entry
.type Data.Functor.Const.$fShowConst_$cshowList_entry, @object
Data.Functor.Const.$fShowConst_$cshowList_entry:
_c76kn:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c76kr
_c76kq:
	movq $sat_s751p_info,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%r14
	jmp GHC.Show.showList___entry
_c76kr:
	movq $16,904(%r13)
	movl $Data.Functor.Const.$fShowConst_$cshowList_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fShowConst_$cshowList_entry, .-Data.Functor.Const.$fShowConst_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:02:20.982809184 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fShowConst_$cshowList_info
.type Data.Functor.Const.$fShowConst_$cshowList_info, @object
Data.Functor.Const.$fShowConst_$cshowList_info:
	.quad	Data.Functor.Const.$fShowConst_$cshowList_entry
	.quad	0
	.quad	38654705678
	.quad	12884901911
	.quad	S757l_srt+88


==================== Asm code ====================
2018-03-16 16:02:20.986900715 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fShowConst_closure
.type Data.Functor.Const.$fShowConst_closure, @object
Data.Functor.Const.$fShowConst_closure:
	.quad	Data.Functor.Const.$fShowConst_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:20.987557983 UTC

.section .text
.align 8
sat_s751t_entry:
_c76kI:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Const.$fShowConst_$cshowList_entry
	.size sat_s751t_entry, .-sat_s751t_entry


==================== Asm code ====================
2018-03-16 16:02:20.988144874 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s751t_info:
	.quad	sat_s751t_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S757l_srt+112


==================== Asm code ====================
2018-03-16 16:02:20.988761687 UTC

.section .text
.align 8
sat_s751s_entry:
_c76kQ:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Const.$fShowConst_$cshow_entry
	.size sat_s751s_entry, .-sat_s751s_entry


==================== Asm code ====================
2018-03-16 16:02:20.989400085 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s751s_info:
	.quad	sat_s751s_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S757l_srt+104


==================== Asm code ====================
2018-03-16 16:02:20.989996559 UTC

.section .text
.align 8
sat_s751r_entry:
_c76kY:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Const.$fShowConst_$cshowsPrec_entry
	.size sat_s751r_entry, .-sat_s751r_entry


==================== Asm code ====================
2018-03-16 16:02:20.990549224 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s751r_info:
	.quad	sat_s751r_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S757l_srt+96


==================== Asm code ====================
2018-03-16 16:02:20.991327489 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fShowConst_entry
.type Data.Functor.Const.$fShowConst_entry, @object
Data.Functor.Const.$fShowConst_entry:
_c76l2:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c76l6
_c76l5:
	movq $sat_s751t_info,-72(%r12)
	movq %r14,-64(%r12)
	movq $sat_s751s_info,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s751r_info,-40(%r12)
	movq %r14,-32(%r12)
	movq $GHC.Show.C:Show_con_info,-24(%r12)
	leaq -38(%r12),%rax
	movq %rax,-16(%r12)
	leaq -55(%r12),%rax
	movq %rax,-8(%r12)
	leaq -70(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c76l6:
	movq $80,904(%r13)
	movl $Data.Functor.Const.$fShowConst_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fShowConst_entry, .-Data.Functor.Const.$fShowConst_entry


==================== Asm code ====================
2018-03-16 16:02:20.992043558 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fShowConst_info
.type Data.Functor.Const.$fShowConst_info, @object
Data.Functor.Const.$fShowConst_info:
	.quad	Data.Functor.Const.$fShowConst_entry
	.quad	0
	.quad	64424509454
	.quad	4294967301
	.quad	S757l_srt+96


==================== Asm code ====================
2018-03-16 16:02:20.995719377 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfoldMap_closure
.type Data.Functor.Const.$fFoldableConst_$cfoldMap_closure, @object
Data.Functor.Const.$fFoldableConst_$cfoldMap_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldMap_info


==================== Asm code ====================
2018-03-16 16:02:20.99670938 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$cfoldMap_entry
.type Data.Functor.Const.$fFoldableConst_$cfoldMap_entry, @object
Data.Functor.Const.$fFoldableConst_$cfoldMap_entry:
_c76ls:
	jmp GHC.Base.mempty_entry
	.size Data.Functor.Const.$fFoldableConst_$cfoldMap_entry, .-Data.Functor.Const.$fFoldableConst_$cfoldMap_entry


==================== Asm code ====================
2018-03-16 16:02:20.997617946 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfoldMap_info
.type Data.Functor.Const.$fFoldableConst_$cfoldMap_info, @object
Data.Functor.Const.$fFoldableConst_$cfoldMap_info:
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldMap_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:02:21.000768611 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfold_closure
.type Data.Functor.Const.$fFoldableConst_$cfold_closure, @object
Data.Functor.Const.$fFoldableConst_$cfold_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$cfold_info


==================== Asm code ====================
2018-03-16 16:02:21.001475126 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$cfold_entry
.type Data.Functor.Const.$fFoldableConst_$cfold_entry, @object
Data.Functor.Const.$fFoldableConst_$cfold_entry:
_c76lD:
	jmp GHC.Base.mempty_entry
	.size Data.Functor.Const.$fFoldableConst_$cfold_entry, .-Data.Functor.Const.$fFoldableConst_$cfold_entry


==================== Asm code ====================
2018-03-16 16:02:21.002028208 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfold_info
.type Data.Functor.Const.$fFoldableConst_$cfold_info, @object
Data.Functor.Const.$fFoldableConst_$cfold_info:
	.quad	Data.Functor.Const.$fFoldableConst_$cfold_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:02:21.004051519 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$csum_closure
.type Data.Functor.Const.$fFoldableConst_$csum_closure, @object
Data.Functor.Const.$fFoldableConst_$csum_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$csum_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:21.004687208 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$csum_entry
.type Data.Functor.Const.$fFoldableConst_$csum_entry, @object
Data.Functor.Const.$fFoldableConst_$csum_entry:
_c76lO:
	jmp Data.Semigroup.Internal.$fMonoidSum2_entry
	.size Data.Functor.Const.$fFoldableConst_$csum_entry, .-Data.Functor.Const.$fFoldableConst_$csum_entry


==================== Asm code ====================
2018-03-16 16:02:21.005680875 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$csum_info
.type Data.Functor.Const.$fFoldableConst_$csum_info, @object
Data.Functor.Const.$fFoldableConst_$csum_info:
	.quad	Data.Functor.Const.$fFoldableConst_$csum_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S757l_srt+128


==================== Asm code ====================
2018-03-16 16:02:21.007298016 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Const.$fFoldableConst2_bytes
.type Data.Functor.Const.$fFoldableConst2_bytes, @object
Data.Functor.Const.$fFoldableConst2_bytes:
	.asciz "minimum: empty structure"


==================== Asm code ====================
2018-03-16 16:02:21.009933518 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst1_closure
.type Data.Functor.Const.$fFoldableConst1_closure, @object
Data.Functor.Const.$fFoldableConst1_closure:
	.quad	Data.Functor.Const.$fFoldableConst1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:21.010825047 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst1_entry
.type Data.Functor.Const.$fFoldableConst1_entry, @object
Data.Functor.Const.$fFoldableConst1_entry:
_c76m2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76m3
_c76m4:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c76m1
_c76m0:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Data.Functor.Const.$fFoldableConst2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c76m3:
	jmp *-16(%r13)
_c76m1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Const.$fFoldableConst1_entry, .-Data.Functor.Const.$fFoldableConst1_entry


==================== Asm code ====================
2018-03-16 16:02:21.011546309 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst1_info
.type Data.Functor.Const.$fFoldableConst1_info, @object
Data.Functor.Const.$fFoldableConst1_info:
	.quad	Data.Functor.Const.$fFoldableConst1_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:02:21.01462657 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cminimum_closure
.type Data.Functor.Const.$fFoldableConst_$cminimum_closure, @object
Data.Functor.Const.$fFoldableConst_$cminimum_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$cminimum_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:21.015393782 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$cminimum_entry
.type Data.Functor.Const.$fFoldableConst_$cminimum_entry, @object
Data.Functor.Const.$fFoldableConst_$cminimum_entry:
_c76mg:
	movl $Data.Functor.Const.$fFoldableConst1_closure,%r14d
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size Data.Functor.Const.$fFoldableConst_$cminimum_entry, .-Data.Functor.Const.$fFoldableConst_$cminimum_entry


==================== Asm code ====================
2018-03-16 16:02:21.016040356 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cminimum_info
.type Data.Functor.Const.$fFoldableConst_$cminimum_info, @object
Data.Functor.Const.$fFoldableConst_$cminimum_info:
	.quad	Data.Functor.Const.$fFoldableConst_$cminimum_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S757l_srt+136


==================== Asm code ====================
2018-03-16 16:02:21.017915447 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Const.$fFoldableConst4_bytes
.type Data.Functor.Const.$fFoldableConst4_bytes, @object
Data.Functor.Const.$fFoldableConst4_bytes:
	.asciz "maximum: empty structure"


==================== Asm code ====================
2018-03-16 16:02:21.020740428 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst3_closure
.type Data.Functor.Const.$fFoldableConst3_closure, @object
Data.Functor.Const.$fFoldableConst3_closure:
	.quad	Data.Functor.Const.$fFoldableConst3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:21.021685396 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst3_entry
.type Data.Functor.Const.$fFoldableConst3_entry, @object
Data.Functor.Const.$fFoldableConst3_entry:
_c76mu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76mv
_c76mw:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c76mt
_c76ms:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Data.Functor.Const.$fFoldableConst4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c76mv:
	jmp *-16(%r13)
_c76mt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Const.$fFoldableConst3_entry, .-Data.Functor.Const.$fFoldableConst3_entry


==================== Asm code ====================
2018-03-16 16:02:21.022438091 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst3_info
.type Data.Functor.Const.$fFoldableConst3_info, @object
Data.Functor.Const.$fFoldableConst3_info:
	.quad	Data.Functor.Const.$fFoldableConst3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:02:21.024729345 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cmaximum_closure
.type Data.Functor.Const.$fFoldableConst_$cmaximum_closure, @object
Data.Functor.Const.$fFoldableConst_$cmaximum_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$cmaximum_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:21.025414406 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$cmaximum_entry
.type Data.Functor.Const.$fFoldableConst_$cmaximum_entry, @object
Data.Functor.Const.$fFoldableConst_$cmaximum_entry:
_c76mI:
	movl $Data.Functor.Const.$fFoldableConst3_closure,%r14d
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size Data.Functor.Const.$fFoldableConst_$cmaximum_entry, .-Data.Functor.Const.$fFoldableConst_$cmaximum_entry


==================== Asm code ====================
2018-03-16 16:02:21.02607582 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cmaximum_info
.type Data.Functor.Const.$fFoldableConst_$cmaximum_info, @object
Data.Functor.Const.$fFoldableConst_$cmaximum_info:
	.quad	Data.Functor.Const.$fFoldableConst_$cmaximum_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S757l_srt+136


==================== Asm code ====================
2018-03-16 16:02:21.028315694 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$celem_closure
.type Data.Functor.Const.$fFoldableConst_$celem_closure, @object
Data.Functor.Const.$fFoldableConst_$celem_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$celem_info


==================== Asm code ====================
2018-03-16 16:02:21.029009536 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$celem_entry
.type Data.Functor.Const.$fFoldableConst_$celem_entry, @object
Data.Functor.Const.$fFoldableConst_$celem_entry:
_c76mT:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size Data.Functor.Const.$fFoldableConst_$celem_entry, .-Data.Functor.Const.$fFoldableConst_$celem_entry


==================== Asm code ====================
2018-03-16 16:02:21.029639569 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$celem_info
.type Data.Functor.Const.$fFoldableConst_$celem_info, @object
Data.Functor.Const.$fFoldableConst_$celem_info:
	.quad	Data.Functor.Const.$fFoldableConst_$celem_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:02:21.031879856 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfoldl_closure
.type Data.Functor.Const.$fFoldableConst_$cfoldl_closure, @object
Data.Functor.Const.$fFoldableConst_$cfoldl_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldl_info


==================== Asm code ====================
2018-03-16 16:02:21.032562375 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$cfoldl_entry
.type Data.Functor.Const.$fFoldableConst_$cfoldl_entry, @object
Data.Functor.Const.$fFoldableConst_$cfoldl_entry:
_c76n5:
	movq %rsi,%rbx
	jmp stg_ap_0_fast
	.size Data.Functor.Const.$fFoldableConst_$cfoldl_entry, .-Data.Functor.Const.$fFoldableConst_$cfoldl_entry


==================== Asm code ====================
2018-03-16 16:02:21.033167277 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfoldl_info
.type Data.Functor.Const.$fFoldableConst_$cfoldl_info, @object
Data.Functor.Const.$fFoldableConst_$cfoldl_info:
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldl_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:02:21.035164912 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Const.$fFoldableConst7_bytes
.type Data.Functor.Const.$fFoldableConst7_bytes, @object
Data.Functor.Const.$fFoldableConst7_bytes:
	.asciz "foldl1: empty structure"


==================== Asm code ====================
2018-03-16 16:02:21.03796147 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst6_closure
.type Data.Functor.Const.$fFoldableConst6_closure, @object
Data.Functor.Const.$fFoldableConst6_closure:
	.quad	Data.Functor.Const.$fFoldableConst6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:21.038934551 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst6_entry
.type Data.Functor.Const.$fFoldableConst6_entry, @object
Data.Functor.Const.$fFoldableConst6_entry:
_c76nj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76nk
_c76nl:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c76ni
_c76nh:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Data.Functor.Const.$fFoldableConst7_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c76nk:
	jmp *-16(%r13)
_c76ni:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Const.$fFoldableConst6_entry, .-Data.Functor.Const.$fFoldableConst6_entry


==================== Asm code ====================
2018-03-16 16:02:21.039723277 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst6_info
.type Data.Functor.Const.$fFoldableConst6_info, @object
Data.Functor.Const.$fFoldableConst6_info:
	.quad	Data.Functor.Const.$fFoldableConst6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:02:21.042747892 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfoldl1_closure
.type Data.Functor.Const.$fFoldableConst_$cfoldl1_closure, @object
Data.Functor.Const.$fFoldableConst_$cfoldl1_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldl1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:21.044152219 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$cfoldl1_entry
.type Data.Functor.Const.$fFoldableConst_$cfoldl1_entry, @object
Data.Functor.Const.$fFoldableConst_$cfoldl1_entry:
_c76nx:
	movl $Data.Functor.Const.$fFoldableConst6_closure,%r14d
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size Data.Functor.Const.$fFoldableConst_$cfoldl1_entry, .-Data.Functor.Const.$fFoldableConst_$cfoldl1_entry


==================== Asm code ====================
2018-03-16 16:02:21.044860119 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfoldl1_info
.type Data.Functor.Const.$fFoldableConst_$cfoldl1_info, @object
Data.Functor.Const.$fFoldableConst_$cfoldl1_info:
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldl1_entry
	.quad	0
	.quad	38654705678
	.quad	8589934607
	.quad	S757l_srt+136


==================== Asm code ====================
2018-03-16 16:02:21.047199811 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfoldr'_closure
.type Data.Functor.Const.$fFoldableConst_$cfoldr'_closure, @object
Data.Functor.Const.$fFoldableConst_$cfoldr'_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldr'_info


==================== Asm code ====================
2018-03-16 16:02:21.047883818 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$cfoldr'_entry
.type Data.Functor.Const.$fFoldableConst_$cfoldr'_entry, @object
Data.Functor.Const.$fFoldableConst_$cfoldr'_entry:
_c76nI:
	movq %rsi,%rbx
	jmp stg_ap_0_fast
	.size Data.Functor.Const.$fFoldableConst_$cfoldr'_entry, .-Data.Functor.Const.$fFoldableConst_$cfoldr'_entry


==================== Asm code ====================
2018-03-16 16:02:21.048518459 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfoldr'_info
.type Data.Functor.Const.$fFoldableConst_$cfoldr'_info, @object
Data.Functor.Const.$fFoldableConst_$cfoldr'_info:
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldr'_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:02:21.050669308 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$clength_closure
.type Data.Functor.Const.$fFoldableConst_$clength_closure, @object
Data.Functor.Const.$fFoldableConst_$clength_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$clength_info


==================== Asm code ====================
2018-03-16 16:02:21.051450506 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$clength_entry
.type Data.Functor.Const.$fFoldableConst_$clength_entry, @object
Data.Functor.Const.$fFoldableConst_$clength_entry:
_c76nT:
	movl $Data.Functor.Const.$fFoldableConst5_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size Data.Functor.Const.$fFoldableConst_$clength_entry, .-Data.Functor.Const.$fFoldableConst_$clength_entry


==================== Asm code ====================
2018-03-16 16:02:21.052100919 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$clength_info
.type Data.Functor.Const.$fFoldableConst_$clength_info, @object
Data.Functor.Const.$fFoldableConst_$clength_info:
	.quad	Data.Functor.Const.$fFoldableConst_$clength_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.053950449 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Const.$fFoldableConst9_bytes
.type Data.Functor.Const.$fFoldableConst9_bytes, @object
Data.Functor.Const.$fFoldableConst9_bytes:
	.asciz "foldr1: empty structure"


==================== Asm code ====================
2018-03-16 16:02:21.056912 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst8_closure
.type Data.Functor.Const.$fFoldableConst8_closure, @object
Data.Functor.Const.$fFoldableConst8_closure:
	.quad	Data.Functor.Const.$fFoldableConst8_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:21.057852832 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst8_entry
.type Data.Functor.Const.$fFoldableConst8_entry, @object
Data.Functor.Const.$fFoldableConst8_entry:
_c76o8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76o9
_c76oa:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c76o7
_c76o6:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Data.Functor.Const.$fFoldableConst9_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c76o9:
	jmp *-16(%r13)
_c76o7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Const.$fFoldableConst8_entry, .-Data.Functor.Const.$fFoldableConst8_entry


==================== Asm code ====================
2018-03-16 16:02:21.058581457 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst8_info
.type Data.Functor.Const.$fFoldableConst8_info, @object
Data.Functor.Const.$fFoldableConst8_info:
	.quad	Data.Functor.Const.$fFoldableConst8_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:02:21.060927646 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfoldr1_closure
.type Data.Functor.Const.$fFoldableConst_$cfoldr1_closure, @object
Data.Functor.Const.$fFoldableConst_$cfoldr1_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldr1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:21.061771824 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$cfoldr1_entry
.type Data.Functor.Const.$fFoldableConst_$cfoldr1_entry, @object
Data.Functor.Const.$fFoldableConst_$cfoldr1_entry:
_c76om:
	movl $Data.Functor.Const.$fFoldableConst8_closure,%r14d
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size Data.Functor.Const.$fFoldableConst_$cfoldr1_entry, .-Data.Functor.Const.$fFoldableConst_$cfoldr1_entry


==================== Asm code ====================
2018-03-16 16:02:21.062443333 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfoldr1_info
.type Data.Functor.Const.$fFoldableConst_$cfoldr1_info, @object
Data.Functor.Const.$fFoldableConst_$cfoldr1_info:
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldr1_entry
	.quad	0
	.quad	73014444046
	.quad	8589934607
	.quad	S757l_srt+136


==================== Asm code ====================
2018-03-16 16:02:21.064780308 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cnull_closure
.type Data.Functor.Const.$fFoldableConst_$cnull_closure, @object
Data.Functor.Const.$fFoldableConst_$cnull_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$cnull_info


==================== Asm code ====================
2018-03-16 16:02:21.065512025 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$cnull_entry
.type Data.Functor.Const.$fFoldableConst_$cnull_entry, @object
Data.Functor.Const.$fFoldableConst_$cnull_entry:
_c76ox:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size Data.Functor.Const.$fFoldableConst_$cnull_entry, .-Data.Functor.Const.$fFoldableConst_$cnull_entry


==================== Asm code ====================
2018-03-16 16:02:21.06617908 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cnull_info
.type Data.Functor.Const.$fFoldableConst_$cnull_info, @object
Data.Functor.Const.$fFoldableConst_$cnull_info:
	.quad	Data.Functor.Const.$fFoldableConst_$cnull_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.068564706 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cproduct_closure
.type Data.Functor.Const.$fFoldableConst_$cproduct_closure, @object
Data.Functor.Const.$fFoldableConst_$cproduct_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$cproduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:21.069361022 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$cproduct_entry
.type Data.Functor.Const.$fFoldableConst_$cproduct_entry, @object
Data.Functor.Const.$fFoldableConst_$cproduct_entry:
_c76oJ:
	jmp Data.Semigroup.Internal.$fMonoidProduct2_entry
	.size Data.Functor.Const.$fFoldableConst_$cproduct_entry, .-Data.Functor.Const.$fFoldableConst_$cproduct_entry


==================== Asm code ====================
2018-03-16 16:02:21.070064867 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cproduct_info
.type Data.Functor.Const.$fFoldableConst_$cproduct_info, @object
Data.Functor.Const.$fFoldableConst_$cproduct_info:
	.quad	Data.Functor.Const.$fFoldableConst_$cproduct_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S757l_srt+176


==================== Asm code ====================
2018-03-16 16:02:21.073196833 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$ctoList_closure
.type Data.Functor.Const.$fFoldableConst_$ctoList_closure, @object
Data.Functor.Const.$fFoldableConst_$ctoList_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$ctoList_info


==================== Asm code ====================
2018-03-16 16:02:21.074163904 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$ctoList_entry
.type Data.Functor.Const.$fFoldableConst_$ctoList_entry, @object
Data.Functor.Const.$fFoldableConst_$ctoList_entry:
_c76oU:
	movl $[]_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size Data.Functor.Const.$fFoldableConst_$ctoList_entry, .-Data.Functor.Const.$fFoldableConst_$ctoList_entry


==================== Asm code ====================
2018-03-16 16:02:21.07479851 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$ctoList_info
.type Data.Functor.Const.$fFoldableConst_$ctoList_info, @object
Data.Functor.Const.$fFoldableConst_$ctoList_info:
	.quad	Data.Functor.Const.$fFoldableConst_$ctoList_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.077073791 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_closure
.type Data.Functor.Const.$fFoldableConst_closure, @object
Data.Functor.Const.$fFoldableConst_closure:
	.quad	Data.Foldable.C:Foldable_con_info
	.quad	Data.Functor.Const.$fFoldableConst_$cfold_closure+2
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldMap_closure+3
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldr'_closure+3
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldr'_closure+3
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldl_closure+3
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldl_closure+3
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldr1_closure+2
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldl1_closure+2
	.quad	Data.Functor.Const.$fFoldableConst_$ctoList_closure+1
	.quad	Data.Functor.Const.$fFoldableConst_$cnull_closure+1
	.quad	Data.Functor.Const.$fFoldableConst_$clength_closure+1
	.quad	Data.Functor.Const.$fFoldableConst_$celem_closure+3
	.quad	Data.Functor.Const.$fFoldableConst_$cmaximum_closure+2
	.quad	Data.Functor.Const.$fFoldableConst_$cminimum_closure+2
	.quad	Data.Functor.Const.$fFoldableConst_$csum_closure+2
	.quad	Data.Functor.Const.$fFoldableConst_$cproduct_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:21.079547049 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFunctorConst2_closure
.type Data.Functor.Const.$fFunctorConst2_closure, @object
Data.Functor.Const.$fFunctorConst2_closure:
	.quad	Data.Functor.Const.$fFunctorConst2_info


==================== Asm code ====================
2018-03-16 16:02:21.080263892 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFunctorConst2_entry
.type Data.Functor.Const.$fFunctorConst2_entry, @object
Data.Functor.Const.$fFunctorConst2_entry:
_c76p7:
	movq %rsi,%rbx
	jmp stg_ap_0_fast
	.size Data.Functor.Const.$fFunctorConst2_entry, .-Data.Functor.Const.$fFunctorConst2_entry


==================== Asm code ====================
2018-03-16 16:02:21.080923652 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFunctorConst2_info
.type Data.Functor.Const.$fFunctorConst2_info, @object
Data.Functor.Const.$fFunctorConst2_info:
	.quad	Data.Functor.Const.$fFunctorConst2_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:02:21.083193391 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFunctorConst1_closure
.type Data.Functor.Const.$fFunctorConst1_closure, @object
Data.Functor.Const.$fFunctorConst1_closure:
	.quad	Data.Functor.Const.$fFunctorConst1_info


==================== Asm code ====================
2018-03-16 16:02:21.083884155 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFunctorConst1_entry
.type Data.Functor.Const.$fFunctorConst1_entry, @object
Data.Functor.Const.$fFunctorConst1_entry:
_c76pi:
	movq %rsi,%rbx
	jmp stg_ap_0_fast
	.size Data.Functor.Const.$fFunctorConst1_entry, .-Data.Functor.Const.$fFunctorConst1_entry


==================== Asm code ====================
2018-03-16 16:02:21.084495154 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFunctorConst1_info
.type Data.Functor.Const.$fFunctorConst1_info, @object
Data.Functor.Const.$fFunctorConst1_info:
	.quad	Data.Functor.Const.$fFunctorConst1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:02:21.086602405 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFunctorConst_closure
.type Data.Functor.Const.$fFunctorConst_closure, @object
Data.Functor.Const.$fFunctorConst_closure:
	.quad	GHC.Base.C:Functor_con_info
	.quad	Data.Functor.Const.$fFunctorConst2_closure+2
	.quad	Data.Functor.Const.$fFunctorConst1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:21.093324494 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fApplicativeConst_closure
.type Data.Functor.Const.$fApplicativeConst_closure, @object
Data.Functor.Const.$fApplicativeConst_closure:
	.quad	Data.Functor.Const.$fApplicativeConst_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:21.094178672 UTC

.section .text
.align 8
lvl_s7522_entry:
_c76py:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76pz
_c76pA:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_c76pz:
	jmp *-16(%r13)
	.size lvl_s7522_entry, .-lvl_s7522_entry


==================== Asm code ====================
2018-03-16 16:02:21.094825097 UTC

.section .data.rel.ro
.align 8
.align 1
lvl_s7522_info:
	.quad	lvl_s7522_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.095575448 UTC

.section .text
.align 8
sat_s752f_entry:
_c76pG:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c76pH
_c76pI:
	movq %r14,%rax
	movq 6(%rbx),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.mappend_entry
_c76pH:
	jmp *-8(%r13)
	.size sat_s752f_entry, .-sat_s752f_entry


==================== Asm code ====================
2018-03-16 16:02:21.096261393 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752f_info:
	.quad	sat_s752f_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:02:21.097016809 UTC

.section .text
.align 8
sat_s752c_entry:
_c76pO:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c76pP
_c76pQ:
	movq %r14,%rax
	movq 6(%rbx),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.mappend_entry
_c76pP:
	jmp *-8(%r13)
	.size sat_s752c_entry, .-sat_s752c_entry


==================== Asm code ====================
2018-03-16 16:02:21.097720743 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752c_info:
	.quad	sat_s752c_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:02:21.098515189 UTC

.section .text
.align 8
sat_s7529_entry:
_c76pW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c76pX
_c76pY:
	movq 5(%rbx),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.mappend_entry
_c76pX:
	jmp *-8(%r13)
	.size sat_s7529_entry, .-sat_s7529_entry


==================== Asm code ====================
2018-03-16 16:02:21.099219731 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7529_info:
	.quad	sat_s7529_entry
	.quad	1
	.quad	9
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:02:21.099983596 UTC

.section .text
.align 8
sat_s7525_entry:
_c76q3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76q4
_c76q5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mappend_entry
_c76q4:
	jmp *-16(%r13)
	.size sat_s7525_entry, .-sat_s7525_entry


==================== Asm code ====================
2018-03-16 16:02:21.100596955 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7525_info:
	.quad	sat_s7525_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.101303789 UTC

.section .text
.align 8
sat_s7524_entry:
_c76qb:
	movq 7(%rbx),%rbx
	jmp stg_ap_0_fast
	.size sat_s7524_entry, .-sat_s7524_entry


==================== Asm code ====================
2018-03-16 16:02:21.102487546 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7524_info:
	.quad	sat_s7524_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.103546023 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fApplicativeConst_entry
.type Data.Functor.Const.$fApplicativeConst_entry, @object
Data.Functor.Const.$fApplicativeConst_entry:
_c76qf:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _c76qj
_c76qi:
	movq $lvl_s7522_info,-160(%r12)
	movq %r14,-144(%r12)
	movq $sat_s752f_info,-136(%r12)
	movq %r14,-128(%r12)
	movq $sat_s752c_info,-120(%r12)
	movq %r14,-112(%r12)
	movq $sat_s7529_info,-104(%r12)
	movq %r14,-96(%r12)
	movq $sat_s7525_info,-88(%r12)
	movq %r14,-72(%r12)
	movq $sat_s7524_info,-64(%r12)
	leaq -160(%r12),%rax
	movq %rax,-56(%r12)
	movq $GHC.Base.C:Applicative_con_info,-48(%r12)
	movq $Data.Functor.Const.$fFunctorConst_closure+1,-40(%r12)
	leaq -63(%r12),%rax
	movq %rax,-32(%r12)
	leaq -88(%r12),%rax
	movq %rax,-24(%r12)
	leaq -101(%r12),%rax
	movq %rax,-16(%r12)
	leaq -118(%r12),%rax
	movq %rax,-8(%r12)
	leaq -134(%r12),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c76qj:
	movq $168,904(%r13)
	movl $Data.Functor.Const.$fApplicativeConst_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fApplicativeConst_entry, .-Data.Functor.Const.$fApplicativeConst_entry


==================== Asm code ====================
2018-03-16 16:02:21.104369038 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fApplicativeConst_info
.type Data.Functor.Const.$fApplicativeConst_info, @object
Data.Functor.Const.$fApplicativeConst_info:
	.quad	Data.Functor.Const.$fApplicativeConst_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S757l_srt+184


==================== Asm code ====================
2018-03-16 16:02:21.111604934 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fStorableConst_closure
.type Data.Functor.Const.$fStorableConst_closure, @object
Data.Functor.Const.$fStorableConst_closure:
	.quad	Data.Functor.Const.$fStorableConst_info


==================== Asm code ====================
2018-03-16 16:02:21.112410791 UTC

.section .text
.align 8
sat_s752o_entry:
_c76r0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76r1
_c76r2:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Foreign.Storable.poke_entry
_c76r1:
	jmp *-16(%r13)
	.size sat_s752o_entry, .-sat_s752o_entry


==================== Asm code ====================
2018-03-16 16:02:21.113070817 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752o_info:
	.quad	sat_s752o_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.113814805 UTC

.section .text
.align 8
sat_s752n_entry:
_c76r7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76r8
_c76r9:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Foreign.Storable.peek_entry
_c76r8:
	jmp *-16(%r13)
	.size sat_s752n_entry, .-sat_s752n_entry


==================== Asm code ====================
2018-03-16 16:02:21.11445487 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752n_info:
	.quad	sat_s752n_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.115147952 UTC

.section .text
.align 8
sat_s752m_entry:
_c76re:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76rf
_c76rg:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Foreign.Storable.pokeByteOff_entry
_c76rf:
	jmp *-16(%r13)
	.size sat_s752m_entry, .-sat_s752m_entry


==================== Asm code ====================
2018-03-16 16:02:21.115769392 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752m_info:
	.quad	sat_s752m_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.116433647 UTC

.section .text
.align 8
sat_s752l_entry:
_c76rl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76rm
_c76rn:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Foreign.Storable.peekByteOff_entry
_c76rm:
	jmp *-16(%r13)
	.size sat_s752l_entry, .-sat_s752l_entry


==================== Asm code ====================
2018-03-16 16:02:21.117080932 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752l_info:
	.quad	sat_s752l_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.117850679 UTC

.section .text
.align 8
sat_s752k_entry:
_c76rs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76rt
_c76ru:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Foreign.Storable.pokeElemOff_entry
_c76rt:
	jmp *-16(%r13)
	.size sat_s752k_entry, .-sat_s752k_entry


==================== Asm code ====================
2018-03-16 16:02:21.11849762 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752k_info:
	.quad	sat_s752k_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.119205822 UTC

.section .text
.align 8
sat_s752j_entry:
_c76rz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76rA
_c76rB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Foreign.Storable.peekElemOff_entry
_c76rA:
	jmp *-16(%r13)
	.size sat_s752j_entry, .-sat_s752j_entry


==================== Asm code ====================
2018-03-16 16:02:21.119852746 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752j_info:
	.quad	sat_s752j_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.120548454 UTC

.section .text
.align 8
sat_s752i_entry:
_c76rG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76rH
_c76rI:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Foreign.Storable.alignment_entry
_c76rH:
	jmp *-16(%r13)
	.size sat_s752i_entry, .-sat_s752i_entry


==================== Asm code ====================
2018-03-16 16:02:21.121194743 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752i_info:
	.quad	sat_s752i_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.122016309 UTC

.section .text
.align 8
sat_s752h_entry:
_c76rN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76rO
_c76rP:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Foreign.Storable.sizeOf_entry
_c76rO:
	jmp *-16(%r13)
	.size sat_s752h_entry, .-sat_s752h_entry


==================== Asm code ====================
2018-03-16 16:02:21.122635174 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752h_info:
	.quad	sat_s752h_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.123535751 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fStorableConst_entry
.type Data.Functor.Const.$fStorableConst_entry, @object
Data.Functor.Const.$fStorableConst_entry:
_c76rR:
	addq $264,%r12
	cmpq 856(%r13),%r12
	ja _c76rV
_c76rU:
	movq $sat_s752o_info,-256(%r12)
	movq %r14,-240(%r12)
	movq $sat_s752n_info,-232(%r12)
	movq %r14,-216(%r12)
	movq $sat_s752m_info,-208(%r12)
	movq %r14,-192(%r12)
	movq $sat_s752l_info,-184(%r12)
	movq %r14,-168(%r12)
	movq $sat_s752k_info,-160(%r12)
	movq %r14,-144(%r12)
	movq $sat_s752j_info,-136(%r12)
	movq %r14,-120(%r12)
	movq $sat_s752i_info,-112(%r12)
	movq %r14,-96(%r12)
	movq $sat_s752h_info,-88(%r12)
	movq %r14,-72(%r12)
	movq $Foreign.Storable.C:Storable_con_info,-64(%r12)
	leaq -88(%r12),%rax
	movq %rax,-56(%r12)
	leaq -112(%r12),%rax
	movq %rax,-48(%r12)
	leaq -136(%r12),%rax
	movq %rax,-40(%r12)
	leaq -160(%r12),%rax
	movq %rax,-32(%r12)
	leaq -184(%r12),%rax
	movq %rax,-24(%r12)
	leaq -208(%r12),%rax
	movq %rax,-16(%r12)
	leaq -232(%r12),%rax
	movq %rax,-8(%r12)
	leaq -256(%r12),%rax
	movq %rax,(%r12)
	leaq -63(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c76rV:
	movq $264,904(%r13)
	movl $Data.Functor.Const.$fStorableConst_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fStorableConst_entry, .-Data.Functor.Const.$fStorableConst_entry


==================== Asm code ====================
2018-03-16 16:02:21.124421315 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fStorableConst_info
.type Data.Functor.Const.$fStorableConst_info, @object
Data.Functor.Const.$fStorableConst_info:
	.quad	Data.Functor.Const.$fStorableConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.1318022 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fNumConst_closure
.type Data.Functor.Const.$fNumConst_closure, @object
Data.Functor.Const.$fNumConst_closure:
	.quad	Data.Functor.Const.$fNumConst_info


==================== Asm code ====================
2018-03-16 16:02:21.132604601 UTC

.section .text
.align 8
sat_s752w_entry:
_c76sN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76sO
_c76sP:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Num.fromInteger_entry
_c76sO:
	jmp *-16(%r13)
	.size sat_s752w_entry, .-sat_s752w_entry


==================== Asm code ====================
2018-03-16 16:02:21.133735456 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752w_info:
	.quad	sat_s752w_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.134399415 UTC

.section .text
.align 8
sat_s752v_entry:
_c76sU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76sV
_c76sW:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Num.signum_entry
_c76sV:
	jmp *-16(%r13)
	.size sat_s752v_entry, .-sat_s752v_entry


==================== Asm code ====================
2018-03-16 16:02:21.135014892 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752v_info:
	.quad	sat_s752v_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.135680941 UTC

.section .text
.align 8
sat_s752u_entry:
_c76t1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76t2
_c76t3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Num.abs_entry
_c76t2:
	jmp *-16(%r13)
	.size sat_s752u_entry, .-sat_s752u_entry


==================== Asm code ====================
2018-03-16 16:02:21.136365224 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752u_info:
	.quad	sat_s752u_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.137074077 UTC

.section .text
.align 8
sat_s752t_entry:
_c76t8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76t9
_c76ta:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Num.negate_entry
_c76t9:
	jmp *-16(%r13)
	.size sat_s752t_entry, .-sat_s752t_entry


==================== Asm code ====================
2018-03-16 16:02:21.138113546 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752t_info:
	.quad	sat_s752t_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.139238645 UTC

.section .text
.align 8
sat_s752s_entry:
_c76tf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76tg
_c76th:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Num.*_entry
_c76tg:
	jmp *-16(%r13)
	.size sat_s752s_entry, .-sat_s752s_entry


==================== Asm code ====================
2018-03-16 16:02:21.140197068 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752s_info:
	.quad	sat_s752s_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.141310882 UTC

.section .text
.align 8
sat_s752r_entry:
_c76tm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76tn
_c76to:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Num.-_entry
_c76tn:
	jmp *-16(%r13)
	.size sat_s752r_entry, .-sat_s752r_entry


==================== Asm code ====================
2018-03-16 16:02:21.142280603 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752r_info:
	.quad	sat_s752r_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.143387883 UTC

.section .text
.align 8
sat_s752q_entry:
_c76tt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76tu
_c76tv:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Num.+_entry
_c76tu:
	jmp *-16(%r13)
	.size sat_s752q_entry, .-sat_s752q_entry


==================== Asm code ====================
2018-03-16 16:02:21.144398939 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752q_info:
	.quad	sat_s752q_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.145947546 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fNumConst_entry
.type Data.Functor.Const.$fNumConst_entry, @object
Data.Functor.Const.$fNumConst_entry:
_c76tx:
	addq $232,%r12
	cmpq 856(%r13),%r12
	ja _c76tB
_c76tA:
	movq $sat_s752w_info,-224(%r12)
	movq %r14,-208(%r12)
	movq $sat_s752v_info,-200(%r12)
	movq %r14,-184(%r12)
	movq $sat_s752u_info,-176(%r12)
	movq %r14,-160(%r12)
	movq $sat_s752t_info,-152(%r12)
	movq %r14,-136(%r12)
	movq $sat_s752s_info,-128(%r12)
	movq %r14,-112(%r12)
	movq $sat_s752r_info,-104(%r12)
	movq %r14,-88(%r12)
	movq $sat_s752q_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $GHC.Num.C:Num_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	leaq -104(%r12),%rax
	movq %rax,-40(%r12)
	leaq -128(%r12),%rax
	movq %rax,-32(%r12)
	leaq -152(%r12),%rax
	movq %rax,-24(%r12)
	leaq -176(%r12),%rax
	movq %rax,-16(%r12)
	leaq -200(%r12),%rax
	movq %rax,-8(%r12)
	leaq -224(%r12),%rax
	movq %rax,(%r12)
	leaq -55(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c76tB:
	movq $232,904(%r13)
	movl $Data.Functor.Const.$fNumConst_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fNumConst_entry, .-Data.Functor.Const.$fNumConst_entry


==================== Asm code ====================
2018-03-16 16:02:21.147414625 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fNumConst_info
.type Data.Functor.Const.$fNumConst_info, @object
Data.Functor.Const.$fNumConst_info:
	.quad	Data.Functor.Const.$fNumConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.152653849 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fRealConst_$cp1Real_closure
.type Data.Functor.Const.$fRealConst_$cp1Real_closure, @object
Data.Functor.Const.$fRealConst_$cp1Real_closure:
	.quad	Data.Functor.Const.$fRealConst_$cp1Real_info


==================== Asm code ====================
2018-03-16 16:02:21.154112531 UTC

.section .text
.align 8
sat_s752y_entry:
_c76uo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76up
_c76uq:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c76up:
	jmp *-16(%r13)
	.size sat_s752y_entry, .-sat_s752y_entry


==================== Asm code ====================
2018-03-16 16:02:21.155116897 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752y_info:
	.quad	sat_s752y_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.156268408 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fRealConst_$cp1Real_entry
.type Data.Functor.Const.$fRealConst_$cp1Real_entry, @object
Data.Functor.Const.$fRealConst_$cp1Real_entry:
_c76ur:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c76uv
_c76uu:
	movq $sat_s752y_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fNumConst_entry
_c76uv:
	movq $24,904(%r13)
	movl $Data.Functor.Const.$fRealConst_$cp1Real_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fRealConst_$cp1Real_entry, .-Data.Functor.Const.$fRealConst_$cp1Real_entry


==================== Asm code ====================
2018-03-16 16:02:21.157358015 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fRealConst_$cp1Real_info
.type Data.Functor.Const.$fRealConst_$cp1Real_info, @object
Data.Functor.Const.$fRealConst_$cp1Real_info:
	.quad	Data.Functor.Const.$fRealConst_$cp1Real_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.165038629 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fSemigroupConst_closure
.type Data.Functor.Const.$fSemigroupConst_closure, @object
Data.Functor.Const.$fSemigroupConst_closure:
	.quad	Data.Functor.Const.$fSemigroupConst_info


==================== Asm code ====================
2018-03-16 16:02:21.166408541 UTC

.section .text
.align 8
sat_s752D_entry:
_c76uN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76uO
_c76uP:
	movq %r14,%rax
	movq 7(%rbx),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.stimes_entry
_c76uO:
	jmp *-8(%r13)
	.size sat_s752D_entry, .-sat_s752D_entry


==================== Asm code ====================
2018-03-16 16:02:21.167494748 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752D_info:
	.quad	sat_s752D_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.168678202 UTC

.section .text
.align 8
sat_s752B_entry:
_c76uU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76uV
_c76uW:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.sconcat_entry
_c76uV:
	jmp *-16(%r13)
	.size sat_s752B_entry, .-sat_s752B_entry


==================== Asm code ====================
2018-03-16 16:02:21.169745502 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752B_info:
	.quad	sat_s752B_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.170965928 UTC

.section .text
.align 8
sat_s752A_entry:
_c76v1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76v2
_c76v3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.<>_entry
_c76v2:
	jmp *-16(%r13)
	.size sat_s752A_entry, .-sat_s752A_entry


==================== Asm code ====================
2018-03-16 16:02:21.17284771 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752A_info:
	.quad	sat_s752A_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.174200161 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fSemigroupConst_entry
.type Data.Functor.Const.$fSemigroupConst_entry, @object
Data.Functor.Const.$fSemigroupConst_entry:
_c76v5:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c76v9
_c76v8:
	movq $sat_s752D_info,-88(%r12)
	movq %r14,-80(%r12)
	movq $sat_s752B_info,-72(%r12)
	movq %r14,-56(%r12)
	movq $sat_s752A_info,-48(%r12)
	movq %r14,-32(%r12)
	movq $GHC.Base.C:Semigroup_con_info,-24(%r12)
	leaq -48(%r12),%rax
	movq %rax,-16(%r12)
	leaq -72(%r12),%rax
	movq %rax,-8(%r12)
	leaq -87(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c76v9:
	movq $96,904(%r13)
	movl $Data.Functor.Const.$fSemigroupConst_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fSemigroupConst_entry, .-Data.Functor.Const.$fSemigroupConst_entry


==================== Asm code ====================
2018-03-16 16:02:21.175422088 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fSemigroupConst_info
.type Data.Functor.Const.$fSemigroupConst_info, @object
Data.Functor.Const.$fSemigroupConst_info:
	.quad	Data.Functor.Const.$fSemigroupConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.180482722 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fMonoidConst_$cp1Monoid_closure
.type Data.Functor.Const.$fMonoidConst_$cp1Monoid_closure, @object
Data.Functor.Const.$fMonoidConst_$cp1Monoid_closure:
	.quad	Data.Functor.Const.$fMonoidConst_$cp1Monoid_info


==================== Asm code ====================
2018-03-16 16:02:21.182603502 UTC

.section .text
.align 8
sat_s752F_entry:
_c76vC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76vD
_c76vE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_c76vD:
	jmp *-16(%r13)
	.size sat_s752F_entry, .-sat_s752F_entry


==================== Asm code ====================
2018-03-16 16:02:21.183634115 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752F_info:
	.quad	sat_s752F_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.184822834 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fMonoidConst_$cp1Monoid_entry
.type Data.Functor.Const.$fMonoidConst_$cp1Monoid_entry, @object
Data.Functor.Const.$fMonoidConst_$cp1Monoid_entry:
_c76vF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c76vJ
_c76vI:
	movq $sat_s752F_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fSemigroupConst_entry
_c76vJ:
	movq $24,904(%r13)
	movl $Data.Functor.Const.$fMonoidConst_$cp1Monoid_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fMonoidConst_$cp1Monoid_entry, .-Data.Functor.Const.$fMonoidConst_$cp1Monoid_entry


==================== Asm code ====================
2018-03-16 16:02:21.185991462 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fMonoidConst_$cp1Monoid_info
.type Data.Functor.Const.$fMonoidConst_$cp1Monoid_info, @object
Data.Functor.Const.$fMonoidConst_$cp1Monoid_info:
	.quad	Data.Functor.Const.$fMonoidConst_$cp1Monoid_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.194749018 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fMonoidConst_closure
.type Data.Functor.Const.$fMonoidConst_closure, @object
Data.Functor.Const.$fMonoidConst_closure:
	.quad	Data.Functor.Const.$fMonoidConst_info


==================== Asm code ====================
2018-03-16 16:02:21.19604901 UTC

.section .text
.align 8
sat_s752K_entry:
_c76w0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76w1
_c76w2:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mconcat_entry
_c76w1:
	jmp *-16(%r13)
	.size sat_s752K_entry, .-sat_s752K_entry


==================== Asm code ====================
2018-03-16 16:02:21.197105712 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752K_info:
	.quad	sat_s752K_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.198619546 UTC

.section .text
.align 8
sat_s752J_entry:
_c76w7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76w8
_c76w9:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mappend_entry
_c76w8:
	jmp *-16(%r13)
	.size sat_s752J_entry, .-sat_s752J_entry


==================== Asm code ====================
2018-03-16 16:02:21.19964543 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752J_info:
	.quad	sat_s752J_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.200783371 UTC

.section .text
.align 8
sat_s752I_entry:
_c76we:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76wf
_c76wg:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_c76wf:
	jmp *-16(%r13)
	.size sat_s752I_entry, .-sat_s752I_entry


==================== Asm code ====================
2018-03-16 16:02:21.201669323 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752I_info:
	.quad	sat_s752I_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.202461102 UTC

.section .text
.align 8
sat_s752H_entry:
_c76wl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76wm
_c76wn:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fMonoidConst_$cp1Monoid_entry
_c76wm:
	jmp *-16(%r13)
	.size sat_s752H_entry, .-sat_s752H_entry


==================== Asm code ====================
2018-03-16 16:02:21.203105803 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752H_info:
	.quad	sat_s752H_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.203945486 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fMonoidConst_entry
.type Data.Functor.Const.$fMonoidConst_entry, @object
Data.Functor.Const.$fMonoidConst_entry:
_c76wp:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _c76wt
_c76ws:
	movq $sat_s752K_info,-128(%r12)
	movq %r14,-112(%r12)
	movq $sat_s752J_info,-104(%r12)
	movq %r14,-88(%r12)
	movq $sat_s752I_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $sat_s752H_info,-56(%r12)
	movq %r14,-40(%r12)
	movq $GHC.Base.C:Monoid_con_info,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -80(%r12),%rax
	movq %rax,-16(%r12)
	leaq -104(%r12),%rax
	movq %rax,-8(%r12)
	leaq -128(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c76wt:
	movq $136,904(%r13)
	movl $Data.Functor.Const.$fMonoidConst_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fMonoidConst_entry, .-Data.Functor.Const.$fMonoidConst_entry


==================== Asm code ====================
2018-03-16 16:02:21.204729961 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fMonoidConst_info
.type Data.Functor.Const.$fMonoidConst_info, @object
Data.Functor.Const.$fMonoidConst_info:
	.quad	Data.Functor.Const.$fMonoidConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.207086502 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fGeneric1Const1_closure
.type Data.Functor.Const.$fGeneric1Const1_closure, @object
Data.Functor.Const.$fGeneric1Const1_closure:
	.quad	Data.Functor.Const.$fGeneric1Const1_info


==================== Asm code ====================
2018-03-16 16:02:21.207758323 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fGeneric1Const1_entry
.type Data.Functor.Const.$fGeneric1Const1_entry, @object
Data.Functor.Const.$fGeneric1Const1_entry:
_c76wX:
	movq %r14,%rbx
	jmp stg_ap_0_fast
	.size Data.Functor.Const.$fGeneric1Const1_entry, .-Data.Functor.Const.$fGeneric1Const1_entry


==================== Asm code ====================
2018-03-16 16:02:21.208353917 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fGeneric1Const1_info
.type Data.Functor.Const.$fGeneric1Const1_info, @object
Data.Functor.Const.$fGeneric1Const1_info:
	.quad	Data.Functor.Const.$fGeneric1Const1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.210934374 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fGeneric1Const2_closure
.type Data.Functor.Const.$fGeneric1Const2_closure, @object
Data.Functor.Const.$fGeneric1Const2_closure:
	.quad	Data.Functor.Const.$fGeneric1Const2_info


==================== Asm code ====================
2018-03-16 16:02:21.211629653 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fGeneric1Const2_entry
.type Data.Functor.Const.$fGeneric1Const2_entry, @object
Data.Functor.Const.$fGeneric1Const2_entry:
_c76x8:
	movq %r14,%rbx
	jmp stg_ap_0_fast
	.size Data.Functor.Const.$fGeneric1Const2_entry, .-Data.Functor.Const.$fGeneric1Const2_entry


==================== Asm code ====================
2018-03-16 16:02:21.212288589 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fGeneric1Const2_info
.type Data.Functor.Const.$fGeneric1Const2_info, @object
Data.Functor.Const.$fGeneric1Const2_info:
	.quad	Data.Functor.Const.$fGeneric1Const2_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.215096068 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fGeneric1Const_closure
.type Data.Functor.Const.$fGeneric1Const_closure, @object
Data.Functor.Const.$fGeneric1Const_closure:
	.quad	GHC.Generics.C:Generic1_con_info
	.quad	Data.Functor.Const.$fGeneric1Const2_closure+1
	.quad	Data.Functor.Const.$fGeneric1Const1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:21.217648701 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fGenericConst1_closure
.type Data.Functor.Const.$fGenericConst1_closure, @object
Data.Functor.Const.$fGenericConst1_closure:
	.quad	Data.Functor.Const.$fGenericConst1_info


==================== Asm code ====================
2018-03-16 16:02:21.218446245 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fGenericConst1_entry
.type Data.Functor.Const.$fGenericConst1_entry, @object
Data.Functor.Const.$fGenericConst1_entry:
_c76xk:
	movq %r14,%rbx
	jmp stg_ap_0_fast
	.size Data.Functor.Const.$fGenericConst1_entry, .-Data.Functor.Const.$fGenericConst1_entry


==================== Asm code ====================
2018-03-16 16:02:21.219082967 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fGenericConst1_info
.type Data.Functor.Const.$fGenericConst1_info, @object
Data.Functor.Const.$fGenericConst1_info:
	.quad	Data.Functor.Const.$fGenericConst1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.221378914 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fGenericConst2_closure
.type Data.Functor.Const.$fGenericConst2_closure, @object
Data.Functor.Const.$fGenericConst2_closure:
	.quad	Data.Functor.Const.$fGenericConst2_info


==================== Asm code ====================
2018-03-16 16:02:21.222045995 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fGenericConst2_entry
.type Data.Functor.Const.$fGenericConst2_entry, @object
Data.Functor.Const.$fGenericConst2_entry:
_c76xv:
	movq %r14,%rbx
	jmp stg_ap_0_fast
	.size Data.Functor.Const.$fGenericConst2_entry, .-Data.Functor.Const.$fGenericConst2_entry


==================== Asm code ====================
2018-03-16 16:02:21.222670895 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fGenericConst2_info
.type Data.Functor.Const.$fGenericConst2_info, @object
Data.Functor.Const.$fGenericConst2_info:
	.quad	Data.Functor.Const.$fGenericConst2_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.224802554 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fGenericConst_closure
.type Data.Functor.Const.$fGenericConst_closure, @object
Data.Functor.Const.$fGenericConst_closure:
	.quad	GHC.Generics.C:Generic_con_info
	.quad	Data.Functor.Const.$fGenericConst2_closure+1
	.quad	Data.Functor.Const.$fGenericConst1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:21.228094706 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFractionalConst_$cp1Fractional_closure
.type Data.Functor.Const.$fFractionalConst_$cp1Fractional_closure, @object
Data.Functor.Const.$fFractionalConst_$cp1Fractional_closure:
	.quad	Data.Functor.Const.$fFractionalConst_$cp1Fractional_info


==================== Asm code ====================
2018-03-16 16:02:21.228915923 UTC

.section .text
.align 8
sat_s752Q_entry:
_c76xL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76xM
_c76xN:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Fractional_entry
_c76xM:
	jmp *-16(%r13)
	.size sat_s752Q_entry, .-sat_s752Q_entry


==================== Asm code ====================
2018-03-16 16:02:21.229588378 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752Q_info:
	.quad	sat_s752Q_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.230329208 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFractionalConst_$cp1Fractional_entry
.type Data.Functor.Const.$fFractionalConst_$cp1Fractional_entry, @object
Data.Functor.Const.$fFractionalConst_$cp1Fractional_entry:
_c76xO:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c76xS
_c76xR:
	movq $sat_s752Q_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fNumConst_entry
_c76xS:
	movq $24,904(%r13)
	movl $Data.Functor.Const.$fFractionalConst_$cp1Fractional_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fFractionalConst_$cp1Fractional_entry, .-Data.Functor.Const.$fFractionalConst_$cp1Fractional_entry


==================== Asm code ====================
2018-03-16 16:02:21.230962465 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFractionalConst_$cp1Fractional_info
.type Data.Functor.Const.$fFractionalConst_$cp1Fractional_info, @object
Data.Functor.Const.$fFractionalConst_$cp1Fractional_info:
	.quad	Data.Functor.Const.$fFractionalConst_$cp1Fractional_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.235914003 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFractionalConst_closure
.type Data.Functor.Const.$fFractionalConst_closure, @object
Data.Functor.Const.$fFractionalConst_closure:
	.quad	Data.Functor.Const.$fFractionalConst_info


==================== Asm code ====================
2018-03-16 16:02:21.236770289 UTC

.section .text
.align 8
sat_s752V_entry:
_c76y9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76ya
_c76yb:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.fromRational_entry
_c76ya:
	jmp *-16(%r13)
	.size sat_s752V_entry, .-sat_s752V_entry


==================== Asm code ====================
2018-03-16 16:02:21.237775161 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752V_info:
	.quad	sat_s752V_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.238537074 UTC

.section .text
.align 8
sat_s752U_entry:
_c76yg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76yh
_c76yi:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.recip_entry
_c76yh:
	jmp *-16(%r13)
	.size sat_s752U_entry, .-sat_s752U_entry


==================== Asm code ====================
2018-03-16 16:02:21.23923843 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752U_info:
	.quad	sat_s752U_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.239984879 UTC

.section .text
.align 8
sat_s752T_entry:
_c76yn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76yo
_c76yp:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real./_entry
_c76yo:
	jmp *-16(%r13)
	.size sat_s752T_entry, .-sat_s752T_entry


==================== Asm code ====================
2018-03-16 16:02:21.240693086 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752T_info:
	.quad	sat_s752T_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.241444056 UTC

.section .text
.align 8
sat_s752S_entry:
_c76yu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76yv
_c76yw:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fFractionalConst_$cp1Fractional_entry
_c76yv:
	jmp *-16(%r13)
	.size sat_s752S_entry, .-sat_s752S_entry


==================== Asm code ====================
2018-03-16 16:02:21.242673335 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752S_info:
	.quad	sat_s752S_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.243595883 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFractionalConst_entry
.type Data.Functor.Const.$fFractionalConst_entry, @object
Data.Functor.Const.$fFractionalConst_entry:
_c76yy:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _c76yC
_c76yB:
	movq $sat_s752V_info,-128(%r12)
	movq %r14,-112(%r12)
	movq $sat_s752U_info,-104(%r12)
	movq %r14,-88(%r12)
	movq $sat_s752T_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $sat_s752S_info,-56(%r12)
	movq %r14,-40(%r12)
	movq $GHC.Real.C:Fractional_con_info,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -80(%r12),%rax
	movq %rax,-16(%r12)
	leaq -104(%r12),%rax
	movq %rax,-8(%r12)
	leaq -128(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c76yC:
	movq $136,904(%r13)
	movl $Data.Functor.Const.$fFractionalConst_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fFractionalConst_entry, .-Data.Functor.Const.$fFractionalConst_entry


==================== Asm code ====================
2018-03-16 16:02:21.24436514 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFractionalConst_info
.type Data.Functor.Const.$fFractionalConst_info, @object
Data.Functor.Const.$fFractionalConst_info:
	.quad	Data.Functor.Const.$fFractionalConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.247761381 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fRealFracConst_$cp2RealFrac_closure
.type Data.Functor.Const.$fRealFracConst_$cp2RealFrac_closure, @object
Data.Functor.Const.$fRealFracConst_$cp2RealFrac_closure:
	.quad	Data.Functor.Const.$fRealFracConst_$cp2RealFrac_info


==================== Asm code ====================
2018-03-16 16:02:21.24859189 UTC

.section .text
.align 8
sat_s752X_entry:
_c76za:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76zb
_c76zc:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p2RealFrac_entry
_c76zb:
	jmp *-16(%r13)
	.size sat_s752X_entry, .-sat_s752X_entry


==================== Asm code ====================
2018-03-16 16:02:21.249301089 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752X_info:
	.quad	sat_s752X_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.250052625 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fRealFracConst_$cp2RealFrac_entry
.type Data.Functor.Const.$fRealFracConst_$cp2RealFrac_entry, @object
Data.Functor.Const.$fRealFracConst_$cp2RealFrac_entry:
_c76zd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c76zh
_c76zg:
	movq $sat_s752X_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fFractionalConst_entry
_c76zh:
	movq $24,904(%r13)
	movl $Data.Functor.Const.$fRealFracConst_$cp2RealFrac_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fRealFracConst_$cp2RealFrac_entry, .-Data.Functor.Const.$fRealFracConst_$cp2RealFrac_entry


==================== Asm code ====================
2018-03-16 16:02:21.250713024 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fRealFracConst_$cp2RealFrac_info
.type Data.Functor.Const.$fRealFracConst_$cp2RealFrac_info, @object
Data.Functor.Const.$fRealFracConst_$cp2RealFrac_info:
	.quad	Data.Functor.Const.$fRealFracConst_$cp2RealFrac_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.253883733 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFloatingConst_$cp1Floating_closure
.type Data.Functor.Const.$fFloatingConst_$cp1Floating_closure, @object
Data.Functor.Const.$fFloatingConst_$cp1Floating_closure:
	.quad	Data.Functor.Const.$fFloatingConst_$cp1Floating_info


==================== Asm code ====================
2018-03-16 16:02:21.254807963 UTC

.section .text
.align 8
sat_s752Z_entry:
_c76zy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76zz
_c76zA:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.$p1Floating_entry
_c76zz:
	jmp *-16(%r13)
	.size sat_s752Z_entry, .-sat_s752Z_entry


==================== Asm code ====================
2018-03-16 16:02:21.255544296 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s752Z_info:
	.quad	sat_s752Z_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.256367002 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFloatingConst_$cp1Floating_entry
.type Data.Functor.Const.$fFloatingConst_$cp1Floating_entry, @object
Data.Functor.Const.$fFloatingConst_$cp1Floating_entry:
_c76zB:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c76zF
_c76zE:
	movq $sat_s752Z_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fFractionalConst_entry
_c76zF:
	movq $24,904(%r13)
	movl $Data.Functor.Const.$fFloatingConst_$cp1Floating_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fFloatingConst_$cp1Floating_entry, .-Data.Functor.Const.$fFloatingConst_$cp1Floating_entry


==================== Asm code ====================
2018-03-16 16:02:21.257019806 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFloatingConst_$cp1Floating_info
.type Data.Functor.Const.$fFloatingConst_$cp1Floating_info, @object
Data.Functor.Const.$fFloatingConst_$cp1Floating_info:
	.quad	Data.Functor.Const.$fFloatingConst_$cp1Floating_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.275050212 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFloatingConst_closure
.type Data.Functor.Const.$fFloatingConst_closure, @object
Data.Functor.Const.$fFloatingConst_closure:
	.quad	Data.Functor.Const.$fFloatingConst_info


==================== Asm code ====================
2018-03-16 16:02:21.276019911 UTC

.section .text
.align 8
sat_s753n_entry:
_c76zW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76zX
_c76zY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.log1mexp_entry
_c76zX:
	jmp *-16(%r13)
	.size sat_s753n_entry, .-sat_s753n_entry


==================== Asm code ====================
2018-03-16 16:02:21.276740128 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753n_info:
	.quad	sat_s753n_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.277557067 UTC

.section .text
.align 8
sat_s753m_entry:
_c76A3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76A4
_c76A5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.log1pexp_entry
_c76A4:
	jmp *-16(%r13)
	.size sat_s753m_entry, .-sat_s753m_entry


==================== Asm code ====================
2018-03-16 16:02:21.278191981 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753m_info:
	.quad	sat_s753m_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.278891458 UTC

.section .text
.align 8
sat_s753l_entry:
_c76Aa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Ab
_c76Ac:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.expm1_entry
_c76Ab:
	jmp *-16(%r13)
	.size sat_s753l_entry, .-sat_s753l_entry


==================== Asm code ====================
2018-03-16 16:02:21.279559112 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753l_info:
	.quad	sat_s753l_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.280236647 UTC

.section .text
.align 8
sat_s753k_entry:
_c76Ah:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Ai
_c76Aj:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.log1p_entry
_c76Ai:
	jmp *-16(%r13)
	.size sat_s753k_entry, .-sat_s753k_entry


==================== Asm code ====================
2018-03-16 16:02:21.280913278 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753k_info:
	.quad	sat_s753k_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.281812674 UTC

.section .text
.align 8
sat_s753j_entry:
_c76Ao:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Ap
_c76Aq:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.atanh_entry
_c76Ap:
	jmp *-16(%r13)
	.size sat_s753j_entry, .-sat_s753j_entry


==================== Asm code ====================
2018-03-16 16:02:21.282497154 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753j_info:
	.quad	sat_s753j_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.283209167 UTC

.section .text
.align 8
sat_s753i_entry:
_c76Av:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Aw
_c76Ax:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.acosh_entry
_c76Aw:
	jmp *-16(%r13)
	.size sat_s753i_entry, .-sat_s753i_entry


==================== Asm code ====================
2018-03-16 16:02:21.283886729 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753i_info:
	.quad	sat_s753i_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.284618127 UTC

.section .text
.align 8
sat_s753h_entry:
_c76AC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76AD
_c76AE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.asinh_entry
_c76AD:
	jmp *-16(%r13)
	.size sat_s753h_entry, .-sat_s753h_entry


==================== Asm code ====================
2018-03-16 16:02:21.285229419 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753h_info:
	.quad	sat_s753h_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.285986733 UTC

.section .text
.align 8
sat_s753g_entry:
_c76AJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76AK
_c76AL:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.tanh_entry
_c76AK:
	jmp *-16(%r13)
	.size sat_s753g_entry, .-sat_s753g_entry


==================== Asm code ====================
2018-03-16 16:02:21.286592318 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753g_info:
	.quad	sat_s753g_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.287291401 UTC

.section .text
.align 8
sat_s753f_entry:
_c76AQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76AR
_c76AS:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.cosh_entry
_c76AR:
	jmp *-16(%r13)
	.size sat_s753f_entry, .-sat_s753f_entry


==================== Asm code ====================
2018-03-16 16:02:21.28788619 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753f_info:
	.quad	sat_s753f_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.288582766 UTC

.section .text
.align 8
sat_s753e_entry:
_c76AX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76AY
_c76AZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.sinh_entry
_c76AY:
	jmp *-16(%r13)
	.size sat_s753e_entry, .-sat_s753e_entry


==================== Asm code ====================
2018-03-16 16:02:21.289231254 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753e_info:
	.quad	sat_s753e_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.289948934 UTC

.section .text
.align 8
sat_s753d_entry:
_c76B4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76B5
_c76B6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.atan_entry
_c76B5:
	jmp *-16(%r13)
	.size sat_s753d_entry, .-sat_s753d_entry


==================== Asm code ====================
2018-03-16 16:02:21.290681365 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753d_info:
	.quad	sat_s753d_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.291402621 UTC

.section .text
.align 8
sat_s753c_entry:
_c76Bb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Bc
_c76Bd:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.acos_entry
_c76Bc:
	jmp *-16(%r13)
	.size sat_s753c_entry, .-sat_s753c_entry


==================== Asm code ====================
2018-03-16 16:02:21.29204318 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753c_info:
	.quad	sat_s753c_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.292758522 UTC

.section .text
.align 8
sat_s753b_entry:
_c76Bi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Bj
_c76Bk:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.asin_entry
_c76Bj:
	jmp *-16(%r13)
	.size sat_s753b_entry, .-sat_s753b_entry


==================== Asm code ====================
2018-03-16 16:02:21.293433043 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753b_info:
	.quad	sat_s753b_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.294176161 UTC

.section .text
.align 8
sat_s753a_entry:
_c76Bp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Bq
_c76Br:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.tan_entry
_c76Bq:
	jmp *-16(%r13)
	.size sat_s753a_entry, .-sat_s753a_entry


==================== Asm code ====================
2018-03-16 16:02:21.294835397 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753a_info:
	.quad	sat_s753a_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.295567638 UTC

.section .text
.align 8
sat_s7539_entry:
_c76Bw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Bx
_c76By:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.cos_entry
_c76Bx:
	jmp *-16(%r13)
	.size sat_s7539_entry, .-sat_s7539_entry


==================== Asm code ====================
2018-03-16 16:02:21.296264438 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7539_info:
	.quad	sat_s7539_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.297008908 UTC

.section .text
.align 8
sat_s7538_entry:
_c76BD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76BE
_c76BF:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.sin_entry
_c76BE:
	jmp *-16(%r13)
	.size sat_s7538_entry, .-sat_s7538_entry


==================== Asm code ====================
2018-03-16 16:02:21.29772722 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7538_info:
	.quad	sat_s7538_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.298461108 UTC

.section .text
.align 8
sat_s7537_entry:
_c76BK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76BL
_c76BM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.logBase_entry
_c76BL:
	jmp *-16(%r13)
	.size sat_s7537_entry, .-sat_s7537_entry


==================== Asm code ====================
2018-03-16 16:02:21.299109544 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7537_info:
	.quad	sat_s7537_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.299856125 UTC

.section .text
.align 8
sat_s7536_entry:
_c76BR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76BS
_c76BT:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.**_entry
_c76BS:
	jmp *-16(%r13)
	.size sat_s7536_entry, .-sat_s7536_entry


==================== Asm code ====================
2018-03-16 16:02:21.301086809 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7536_info:
	.quad	sat_s7536_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.301848945 UTC

.section .text
.align 8
sat_s7535_entry:
_c76BY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76BZ
_c76C0:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.sqrt_entry
_c76BZ:
	jmp *-16(%r13)
	.size sat_s7535_entry, .-sat_s7535_entry


==================== Asm code ====================
2018-03-16 16:02:21.302445174 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7535_info:
	.quad	sat_s7535_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.303148371 UTC

.section .text
.align 8
sat_s7534_entry:
_c76C5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76C6
_c76C7:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.log_entry
_c76C6:
	jmp *-16(%r13)
	.size sat_s7534_entry, .-sat_s7534_entry


==================== Asm code ====================
2018-03-16 16:02:21.303756179 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7534_info:
	.quad	sat_s7534_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.304446996 UTC

.section .text
.align 8
sat_s7533_entry:
_c76Cc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Cd
_c76Ce:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.exp_entry
_c76Cd:
	jmp *-16(%r13)
	.size sat_s7533_entry, .-sat_s7533_entry


==================== Asm code ====================
2018-03-16 16:02:21.30504253 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7533_info:
	.quad	sat_s7533_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.306431164 UTC

.section .text
.align 8
sat_s7532_entry:
_c76Cj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Ck
_c76Cl:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.pi_entry
_c76Ck:
	jmp *-16(%r13)
	.size sat_s7532_entry, .-sat_s7532_entry


==================== Asm code ====================
2018-03-16 16:02:21.307059633 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7532_info:
	.quad	sat_s7532_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.307786063 UTC

.section .text
.align 8
sat_s7531_entry:
_c76Cq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Cr
_c76Cs:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fFloatingConst_$cp1Floating_entry
_c76Cr:
	jmp *-16(%r13)
	.size sat_s7531_entry, .-sat_s7531_entry


==================== Asm code ====================
2018-03-16 16:02:21.308415058 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7531_info:
	.quad	sat_s7531_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.309562665 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFloatingConst_entry
.type Data.Functor.Const.$fFloatingConst_entry, @object
Data.Functor.Const.$fFloatingConst_entry:
_c76Cu:
	addq $744,%r12
	cmpq 856(%r13),%r12
	ja _c76Cy
_c76Cx:
	movq $sat_s753n_info,-736(%r12)
	movq %r14,-720(%r12)
	movq $sat_s753m_info,-712(%r12)
	movq %r14,-696(%r12)
	movq $sat_s753l_info,-688(%r12)
	movq %r14,-672(%r12)
	movq $sat_s753k_info,-664(%r12)
	movq %r14,-648(%r12)
	movq $sat_s753j_info,-640(%r12)
	movq %r14,-624(%r12)
	movq $sat_s753i_info,-616(%r12)
	movq %r14,-600(%r12)
	movq $sat_s753h_info,-592(%r12)
	movq %r14,-576(%r12)
	movq $sat_s753g_info,-568(%r12)
	movq %r14,-552(%r12)
	movq $sat_s753f_info,-544(%r12)
	movq %r14,-528(%r12)
	movq $sat_s753e_info,-520(%r12)
	movq %r14,-504(%r12)
	movq $sat_s753d_info,-496(%r12)
	movq %r14,-480(%r12)
	movq $sat_s753c_info,-472(%r12)
	movq %r14,-456(%r12)
	movq $sat_s753b_info,-448(%r12)
	movq %r14,-432(%r12)
	movq $sat_s753a_info,-424(%r12)
	movq %r14,-408(%r12)
	movq $sat_s7539_info,-400(%r12)
	movq %r14,-384(%r12)
	movq $sat_s7538_info,-376(%r12)
	movq %r14,-360(%r12)
	movq $sat_s7537_info,-352(%r12)
	movq %r14,-336(%r12)
	movq $sat_s7536_info,-328(%r12)
	movq %r14,-312(%r12)
	movq $sat_s7535_info,-304(%r12)
	movq %r14,-288(%r12)
	movq $sat_s7534_info,-280(%r12)
	movq %r14,-264(%r12)
	movq $sat_s7533_info,-256(%r12)
	movq %r14,-240(%r12)
	movq $sat_s7532_info,-232(%r12)
	movq %r14,-216(%r12)
	movq $sat_s7531_info,-208(%r12)
	movq %r14,-192(%r12)
	movq $GHC.Float.C:Floating_con_info,-184(%r12)
	leaq -208(%r12),%rax
	movq %rax,-176(%r12)
	leaq -232(%r12),%rax
	movq %rax,-168(%r12)
	leaq -256(%r12),%rax
	movq %rax,-160(%r12)
	leaq -280(%r12),%rax
	movq %rax,-152(%r12)
	leaq -304(%r12),%rax
	movq %rax,-144(%r12)
	leaq -328(%r12),%rax
	movq %rax,-136(%r12)
	leaq -352(%r12),%rax
	movq %rax,-128(%r12)
	leaq -376(%r12),%rax
	movq %rax,-120(%r12)
	leaq -400(%r12),%rax
	movq %rax,-112(%r12)
	leaq -424(%r12),%rax
	movq %rax,-104(%r12)
	leaq -448(%r12),%rax
	movq %rax,-96(%r12)
	leaq -472(%r12),%rax
	movq %rax,-88(%r12)
	leaq -496(%r12),%rax
	movq %rax,-80(%r12)
	leaq -520(%r12),%rax
	movq %rax,-72(%r12)
	leaq -544(%r12),%rax
	movq %rax,-64(%r12)
	leaq -568(%r12),%rax
	movq %rax,-56(%r12)
	leaq -592(%r12),%rax
	movq %rax,-48(%r12)
	leaq -616(%r12),%rax
	movq %rax,-40(%r12)
	leaq -640(%r12),%rax
	movq %rax,-32(%r12)
	leaq -664(%r12),%rax
	movq %rax,-24(%r12)
	leaq -688(%r12),%rax
	movq %rax,-16(%r12)
	leaq -712(%r12),%rax
	movq %rax,-8(%r12)
	leaq -736(%r12),%rax
	movq %rax,(%r12)
	leaq -183(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c76Cy:
	movq $744,904(%r13)
	movl $Data.Functor.Const.$fFloatingConst_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fFloatingConst_entry, .-Data.Functor.Const.$fFloatingConst_entry


==================== Asm code ====================
2018-03-16 16:02:21.310792877 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFloatingConst_info
.type Data.Functor.Const.$fFloatingConst_info, @object
Data.Functor.Const.$fFloatingConst_info:
	.quad	Data.Functor.Const.$fFloatingConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.31400028 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_closure
.type Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_closure, @object
Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_closure:
	.quad	Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_info


==================== Asm code ====================
2018-03-16 16:02:21.314762057 UTC

.section .text
.align 8
sat_s753p_entry:
_c76ED:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76EE
_c76EF:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.$p2RealFloat_entry
_c76EE:
	jmp *-16(%r13)
	.size sat_s753p_entry, .-sat_s753p_entry


==================== Asm code ====================
2018-03-16 16:02:21.315427843 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753p_info:
	.quad	sat_s753p_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.316158224 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_entry
.type Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_entry, @object
Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_entry:
_c76EG:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c76EK
_c76EJ:
	movq $sat_s753p_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fFloatingConst_entry
_c76EK:
	movq $24,904(%r13)
	movl $Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_entry, .-Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_entry


==================== Asm code ====================
2018-03-16 16:02:21.316818527 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_info
.type Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_info, @object
Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_info:
	.quad	Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.321046082 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fEqConst_closure
.type Data.Functor.Const.$fEqConst_closure, @object
Data.Functor.Const.$fEqConst_closure:
	.quad	Data.Functor.Const.$fEqConst_info


==================== Asm code ====================
2018-03-16 16:02:21.321886015 UTC

.section .text
.align 8
sat_s753s_entry:
_c76F1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76F2
_c76F3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Classes./=_entry
_c76F2:
	jmp *-16(%r13)
	.size sat_s753s_entry, .-sat_s753s_entry


==================== Asm code ====================
2018-03-16 16:02:21.322519587 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753s_info:
	.quad	sat_s753s_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.323256521 UTC

.section .text
.align 8
sat_s753r_entry:
_c76F8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76F9
_c76Fa:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Classes.==_entry
_c76F9:
	jmp *-16(%r13)
	.size sat_s753r_entry, .-sat_s753r_entry


==================== Asm code ====================
2018-03-16 16:02:21.323905181 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753r_info:
	.quad	sat_s753r_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.324656321 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fEqConst_entry
.type Data.Functor.Const.$fEqConst_entry, @object
Data.Functor.Const.$fEqConst_entry:
_c76Fc:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c76Fg
_c76Ff:
	movq $sat_s753s_info,-64(%r12)
	movq %r14,-48(%r12)
	movq $sat_s753r_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $GHC.Classes.C:Eq_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c76Fg:
	movq $72,904(%r13)
	movl $Data.Functor.Const.$fEqConst_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fEqConst_entry, .-Data.Functor.Const.$fEqConst_entry


==================== Asm code ====================
2018-03-16 16:02:21.325404773 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fEqConst_info
.type Data.Functor.Const.$fEqConst_info, @object
Data.Functor.Const.$fEqConst_info:
	.quad	Data.Functor.Const.$fEqConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.32841022 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fOrdConst_$cp1Ord_closure
.type Data.Functor.Const.$fOrdConst_$cp1Ord_closure, @object
Data.Functor.Const.$fOrdConst_$cp1Ord_closure:
	.quad	Data.Functor.Const.$fOrdConst_$cp1Ord_info


==================== Asm code ====================
2018-03-16 16:02:21.329641879 UTC

.section .text
.align 8
sat_s753u_entry:
_c76FE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76FF
_c76FG:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Classes.$p1Ord_entry
_c76FF:
	jmp *-16(%r13)
	.size sat_s753u_entry, .-sat_s753u_entry


==================== Asm code ====================
2018-03-16 16:02:21.330238758 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753u_info:
	.quad	sat_s753u_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.330934156 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fOrdConst_$cp1Ord_entry
.type Data.Functor.Const.$fOrdConst_$cp1Ord_entry, @object
Data.Functor.Const.$fOrdConst_$cp1Ord_entry:
_c76FH:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c76FL
_c76FK:
	movq $sat_s753u_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fEqConst_entry
_c76FL:
	movq $24,904(%r13)
	movl $Data.Functor.Const.$fOrdConst_$cp1Ord_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fOrdConst_$cp1Ord_entry, .-Data.Functor.Const.$fOrdConst_$cp1Ord_entry


==================== Asm code ====================
2018-03-16 16:02:21.331554776 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fOrdConst_$cp1Ord_info
.type Data.Functor.Const.$fOrdConst_$cp1Ord_info, @object
Data.Functor.Const.$fOrdConst_$cp1Ord_info:
	.quad	Data.Functor.Const.$fOrdConst_$cp1Ord_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.338602599 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fOrdConst_closure
.type Data.Functor.Const.$fOrdConst_closure, @object
Data.Functor.Const.$fOrdConst_closure:
	.quad	Data.Functor.Const.$fOrdConst_info


==================== Asm code ====================
2018-03-16 16:02:21.339329119 UTC

.section .text
.align 8
sat_s753D_entry:
_c76G2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76G3
_c76G4:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Classes.min_entry
_c76G3:
	jmp *-16(%r13)
	.size sat_s753D_entry, .-sat_s753D_entry


==================== Asm code ====================
2018-03-16 16:02:21.339948793 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753D_info:
	.quad	sat_s753D_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.34063024 UTC

.section .text
.align 8
sat_s753C_entry:
_c76G9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Ga
_c76Gb:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Classes.max_entry
_c76Ga:
	jmp *-16(%r13)
	.size sat_s753C_entry, .-sat_s753C_entry


==================== Asm code ====================
2018-03-16 16:02:21.34129802 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753C_info:
	.quad	sat_s753C_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.34196928 UTC

.section .text
.align 8
sat_s753B_entry:
_c76Gg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Gh
_c76Gi:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Classes.>=_entry
_c76Gh:
	jmp *-16(%r13)
	.size sat_s753B_entry, .-sat_s753B_entry


==================== Asm code ====================
2018-03-16 16:02:21.342534939 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753B_info:
	.quad	sat_s753B_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.343247386 UTC

.section .text
.align 8
sat_s753A_entry:
_c76Gn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Go
_c76Gp:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Classes.>_entry
_c76Go:
	jmp *-16(%r13)
	.size sat_s753A_entry, .-sat_s753A_entry


==================== Asm code ====================
2018-03-16 16:02:21.343905958 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753A_info:
	.quad	sat_s753A_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.344578281 UTC

.section .text
.align 8
sat_s753z_entry:
_c76Gu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Gv
_c76Gw:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Classes.<=_entry
_c76Gv:
	jmp *-16(%r13)
	.size sat_s753z_entry, .-sat_s753z_entry


==================== Asm code ====================
2018-03-16 16:02:21.345233914 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753z_info:
	.quad	sat_s753z_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.345977165 UTC

.section .text
.align 8
sat_s753y_entry:
_c76GB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76GC
_c76GD:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Classes.<_entry
_c76GC:
	jmp *-16(%r13)
	.size sat_s753y_entry, .-sat_s753y_entry


==================== Asm code ====================
2018-03-16 16:02:21.346639265 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753y_info:
	.quad	sat_s753y_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.347336946 UTC

.section .text
.align 8
sat_s753x_entry:
_c76GI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76GJ
_c76GK:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Classes.compare_entry
_c76GJ:
	jmp *-16(%r13)
	.size sat_s753x_entry, .-sat_s753x_entry


==================== Asm code ====================
2018-03-16 16:02:21.348024781 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753x_info:
	.quad	sat_s753x_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.34875963 UTC

.section .text
.align 8
sat_s753w_entry:
_c76GP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76GQ
_c76GR:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fOrdConst_$cp1Ord_entry
_c76GQ:
	jmp *-16(%r13)
	.size sat_s753w_entry, .-sat_s753w_entry


==================== Asm code ====================
2018-03-16 16:02:21.349443729 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753w_info:
	.quad	sat_s753w_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.350342391 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fOrdConst_entry
.type Data.Functor.Const.$fOrdConst_entry, @object
Data.Functor.Const.$fOrdConst_entry:
_c76GT:
	addq $264,%r12
	cmpq 856(%r13),%r12
	ja _c76GX
_c76GW:
	movq $sat_s753D_info,-256(%r12)
	movq %r14,-240(%r12)
	movq $sat_s753C_info,-232(%r12)
	movq %r14,-216(%r12)
	movq $sat_s753B_info,-208(%r12)
	movq %r14,-192(%r12)
	movq $sat_s753A_info,-184(%r12)
	movq %r14,-168(%r12)
	movq $sat_s753z_info,-160(%r12)
	movq %r14,-144(%r12)
	movq $sat_s753y_info,-136(%r12)
	movq %r14,-120(%r12)
	movq $sat_s753x_info,-112(%r12)
	movq %r14,-96(%r12)
	movq $sat_s753w_info,-88(%r12)
	movq %r14,-72(%r12)
	movq $GHC.Classes.C:Ord_con_info,-64(%r12)
	leaq -88(%r12),%rax
	movq %rax,-56(%r12)
	leaq -112(%r12),%rax
	movq %rax,-48(%r12)
	leaq -136(%r12),%rax
	movq %rax,-40(%r12)
	leaq -160(%r12),%rax
	movq %rax,-32(%r12)
	leaq -184(%r12),%rax
	movq %rax,-24(%r12)
	leaq -208(%r12),%rax
	movq %rax,-16(%r12)
	leaq -232(%r12),%rax
	movq %rax,-8(%r12)
	leaq -256(%r12),%rax
	movq %rax,(%r12)
	leaq -63(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c76GX:
	movq $264,904(%r13)
	movl $Data.Functor.Const.$fOrdConst_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fOrdConst_entry, .-Data.Functor.Const.$fOrdConst_entry


==================== Asm code ====================
2018-03-16 16:02:21.351202664 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fOrdConst_info
.type Data.Functor.Const.$fOrdConst_info, @object
Data.Functor.Const.$fOrdConst_info:
	.quad	Data.Functor.Const.$fOrdConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.35449912 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fIxConst_$cp1Ix_closure
.type Data.Functor.Const.$fIxConst_$cp1Ix_closure, @object
Data.Functor.Const.$fIxConst_$cp1Ix_closure:
	.quad	Data.Functor.Const.$fIxConst_$cp1Ix_info


==================== Asm code ====================
2018-03-16 16:02:21.355245133 UTC

.section .text
.align 8
sat_s753F_entry:
_c76HP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76HQ
_c76HR:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Arr.$p1Ix_entry
_c76HQ:
	jmp *-16(%r13)
	.size sat_s753F_entry, .-sat_s753F_entry


==================== Asm code ====================
2018-03-16 16:02:21.355900349 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753F_info:
	.quad	sat_s753F_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.357129157 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fIxConst_$cp1Ix_entry
.type Data.Functor.Const.$fIxConst_$cp1Ix_entry, @object
Data.Functor.Const.$fIxConst_$cp1Ix_entry:
_c76HS:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c76HW
_c76HV:
	movq $sat_s753F_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fOrdConst_entry
_c76HW:
	movq $24,904(%r13)
	movl $Data.Functor.Const.$fIxConst_$cp1Ix_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fIxConst_$cp1Ix_entry, .-Data.Functor.Const.$fIxConst_$cp1Ix_entry


==================== Asm code ====================
2018-03-16 16:02:21.357782574 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fIxConst_$cp1Ix_info
.type Data.Functor.Const.$fIxConst_$cp1Ix_info, @object
Data.Functor.Const.$fIxConst_$cp1Ix_info:
	.quad	Data.Functor.Const.$fIxConst_$cp1Ix_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.364485355 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fIxConst_closure
.type Data.Functor.Const.$fIxConst_closure, @object
Data.Functor.Const.$fIxConst_closure:
	.quad	Data.Functor.Const.$fIxConst_info


==================== Asm code ====================
2018-03-16 16:02:21.365221071 UTC

.section .text
.align 8
sat_s753N_entry:
_c76Id:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Ie
_c76If:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Arr.unsafeRangeSize_entry
_c76Ie:
	jmp *-16(%r13)
	.size sat_s753N_entry, .-sat_s753N_entry


==================== Asm code ====================
2018-03-16 16:02:21.365896291 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753N_info:
	.quad	sat_s753N_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.366621036 UTC

.section .text
.align 8
sat_s753M_entry:
_c76Ik:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Il
_c76Im:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Arr.rangeSize_entry
_c76Il:
	jmp *-16(%r13)
	.size sat_s753M_entry, .-sat_s753M_entry


==================== Asm code ====================
2018-03-16 16:02:21.367236928 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753M_info:
	.quad	sat_s753M_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.367936243 UTC

.section .text
.align 8
sat_s753L_entry:
_c76Ir:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Is
_c76It:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Arr.inRange_entry
_c76Is:
	jmp *-16(%r13)
	.size sat_s753L_entry, .-sat_s753L_entry


==================== Asm code ====================
2018-03-16 16:02:21.368575183 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753L_info:
	.quad	sat_s753L_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.369317945 UTC

.section .text
.align 8
sat_s753K_entry:
_c76Iy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Iz
_c76IA:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Arr.unsafeIndex_entry
_c76Iz:
	jmp *-16(%r13)
	.size sat_s753K_entry, .-sat_s753K_entry


==================== Asm code ====================
2018-03-16 16:02:21.369936876 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753K_info:
	.quad	sat_s753K_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.370623908 UTC

.section .text
.align 8
sat_s753J_entry:
_c76IF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76IG
_c76IH:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Arr.index_entry
_c76IG:
	jmp *-16(%r13)
	.size sat_s753J_entry, .-sat_s753J_entry


==================== Asm code ====================
2018-03-16 16:02:21.371259337 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753J_info:
	.quad	sat_s753J_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.371960414 UTC

.section .text
.align 8
sat_s753I_entry:
_c76IM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76IN
_c76IO:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Arr.range_entry
_c76IN:
	jmp *-16(%r13)
	.size sat_s753I_entry, .-sat_s753I_entry


==================== Asm code ====================
2018-03-16 16:02:21.37262677 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753I_info:
	.quad	sat_s753I_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.374049876 UTC

.section .text
.align 8
sat_s753H_entry:
_c76IT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76IU
_c76IV:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fIxConst_$cp1Ix_entry
_c76IU:
	jmp *-16(%r13)
	.size sat_s753H_entry, .-sat_s753H_entry


==================== Asm code ====================
2018-03-16 16:02:21.374678322 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753H_info:
	.quad	sat_s753H_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.375509691 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fIxConst_entry
.type Data.Functor.Const.$fIxConst_entry, @object
Data.Functor.Const.$fIxConst_entry:
_c76IX:
	addq $232,%r12
	cmpq 856(%r13),%r12
	ja _c76J1
_c76J0:
	movq $sat_s753N_info,-224(%r12)
	movq %r14,-208(%r12)
	movq $sat_s753M_info,-200(%r12)
	movq %r14,-184(%r12)
	movq $sat_s753L_info,-176(%r12)
	movq %r14,-160(%r12)
	movq $sat_s753K_info,-152(%r12)
	movq %r14,-136(%r12)
	movq $sat_s753J_info,-128(%r12)
	movq %r14,-112(%r12)
	movq $sat_s753I_info,-104(%r12)
	movq %r14,-88(%r12)
	movq $sat_s753H_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $GHC.Arr.C:Ix_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	leaq -104(%r12),%rax
	movq %rax,-40(%r12)
	leaq -128(%r12),%rax
	movq %rax,-32(%r12)
	leaq -152(%r12),%rax
	movq %rax,-24(%r12)
	leaq -176(%r12),%rax
	movq %rax,-16(%r12)
	leaq -200(%r12),%rax
	movq %rax,-8(%r12)
	leaq -224(%r12),%rax
	movq %rax,(%r12)
	leaq -55(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c76J1:
	movq $232,904(%r13)
	movl $Data.Functor.Const.$fIxConst_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fIxConst_entry, .-Data.Functor.Const.$fIxConst_entry


==================== Asm code ====================
2018-03-16 16:02:21.376342132 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fIxConst_info
.type Data.Functor.Const.$fIxConst_info, @object
Data.Functor.Const.$fIxConst_info:
	.quad	Data.Functor.Const.$fIxConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.379604495 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fRealConst_$cp2Real_closure
.type Data.Functor.Const.$fRealConst_$cp2Real_closure, @object
Data.Functor.Const.$fRealConst_$cp2Real_closure:
	.quad	Data.Functor.Const.$fRealConst_$cp2Real_info


==================== Asm code ====================
2018-03-16 16:02:21.380334582 UTC

.section .text
.align 8
sat_s753P_entry:
_c76JO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76JP
_c76JQ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p2Real_entry
_c76JP:
	jmp *-16(%r13)
	.size sat_s753P_entry, .-sat_s753P_entry


==================== Asm code ====================
2018-03-16 16:02:21.381011109 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753P_info:
	.quad	sat_s753P_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.381753111 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fRealConst_$cp2Real_entry
.type Data.Functor.Const.$fRealConst_$cp2Real_entry, @object
Data.Functor.Const.$fRealConst_$cp2Real_entry:
_c76JR:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c76JV
_c76JU:
	movq $sat_s753P_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fOrdConst_entry
_c76JV:
	movq $24,904(%r13)
	movl $Data.Functor.Const.$fRealConst_$cp2Real_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fRealConst_$cp2Real_entry, .-Data.Functor.Const.$fRealConst_$cp2Real_entry


==================== Asm code ====================
2018-03-16 16:02:21.382487122 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fRealConst_$cp2Real_info
.type Data.Functor.Const.$fRealConst_$cp2Real_info, @object
Data.Functor.Const.$fRealConst_$cp2Real_info:
	.quad	Data.Functor.Const.$fRealConst_$cp2Real_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.39071954 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fRealConst_closure
.type Data.Functor.Const.$fRealConst_closure, @object
Data.Functor.Const.$fRealConst_closure:
	.quad	Data.Functor.Const.$fRealConst_info


==================== Asm code ====================
2018-03-16 16:02:21.391454418 UTC

.section .text
.align 8
sat_s753T_entry:
_c76Kc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Kd
_c76Ke:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.toRational_entry
_c76Kd:
	jmp *-16(%r13)
	.size sat_s753T_entry, .-sat_s753T_entry


==================== Asm code ====================
2018-03-16 16:02:21.392070685 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753T_info:
	.quad	sat_s753T_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.392775564 UTC

.section .text
.align 8
sat_s753S_entry:
_c76Kj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Kk
_c76Kl:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fRealConst_$cp2Real_entry
_c76Kk:
	jmp *-16(%r13)
	.size sat_s753S_entry, .-sat_s753S_entry


==================== Asm code ====================
2018-03-16 16:02:21.393425119 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753S_info:
	.quad	sat_s753S_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.394082427 UTC

.section .text
.align 8
sat_s753R_entry:
_c76Kq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Kr
_c76Ks:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fRealConst_$cp1Real_entry
_c76Kr:
	jmp *-16(%r13)
	.size sat_s753R_entry, .-sat_s753R_entry


==================== Asm code ====================
2018-03-16 16:02:21.394741013 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753R_info:
	.quad	sat_s753R_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.395542699 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fRealConst_entry
.type Data.Functor.Const.$fRealConst_entry, @object
Data.Functor.Const.$fRealConst_entry:
_c76Ku:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _c76Ky
_c76Kx:
	movq $sat_s753T_info,-96(%r12)
	movq %r14,-80(%r12)
	movq $sat_s753S_info,-72(%r12)
	movq %r14,-56(%r12)
	movq $sat_s753R_info,-48(%r12)
	movq %r14,-32(%r12)
	movq $GHC.Real.C:Real_con_info,-24(%r12)
	leaq -48(%r12),%rax
	movq %rax,-16(%r12)
	leaq -72(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c76Ky:
	movq $104,904(%r13)
	movl $Data.Functor.Const.$fRealConst_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fRealConst_entry, .-Data.Functor.Const.$fRealConst_entry


==================== Asm code ====================
2018-03-16 16:02:21.396260708 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fRealConst_info
.type Data.Functor.Const.$fRealConst_info, @object
Data.Functor.Const.$fRealConst_info:
	.quad	Data.Functor.Const.$fRealConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.399363718 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fIntegralConst_$cp1Integral_closure
.type Data.Functor.Const.$fIntegralConst_$cp1Integral_closure, @object
Data.Functor.Const.$fIntegralConst_$cp1Integral_closure:
	.quad	Data.Functor.Const.$fIntegralConst_$cp1Integral_info


==================== Asm code ====================
2018-03-16 16:02:21.400074683 UTC

.section .text
.align 8
sat_s753V_entry:
_c76L1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76L2
_c76L3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Integral_entry
_c76L2:
	jmp *-16(%r13)
	.size sat_s753V_entry, .-sat_s753V_entry


==================== Asm code ====================
2018-03-16 16:02:21.40069673 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753V_info:
	.quad	sat_s753V_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.401402308 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fIntegralConst_$cp1Integral_entry
.type Data.Functor.Const.$fIntegralConst_$cp1Integral_entry, @object
Data.Functor.Const.$fIntegralConst_$cp1Integral_entry:
_c76L4:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c76L8
_c76L7:
	movq $sat_s753V_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fRealConst_entry
_c76L8:
	movq $24,904(%r13)
	movl $Data.Functor.Const.$fIntegralConst_$cp1Integral_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fIntegralConst_$cp1Integral_entry, .-Data.Functor.Const.$fIntegralConst_$cp1Integral_entry


==================== Asm code ====================
2018-03-16 16:02:21.402048741 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fIntegralConst_$cp1Integral_info
.type Data.Functor.Const.$fIntegralConst_$cp1Integral_info, @object
Data.Functor.Const.$fIntegralConst_$cp1Integral_info:
	.quad	Data.Functor.Const.$fIntegralConst_$cp1Integral_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.404939709 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fRealFracConst_$cp1RealFrac_closure
.type Data.Functor.Const.$fRealFracConst_$cp1RealFrac_closure, @object
Data.Functor.Const.$fRealFracConst_$cp1RealFrac_closure:
	.quad	Data.Functor.Const.$fRealFracConst_$cp1RealFrac_info


==================== Asm code ====================
2018-03-16 16:02:21.40575676 UTC

.section .text
.align 8
sat_s753X_entry:
_c76Lp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Lq
_c76Lr:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1RealFrac_entry
_c76Lq:
	jmp *-16(%r13)
	.size sat_s753X_entry, .-sat_s753X_entry


==================== Asm code ====================
2018-03-16 16:02:21.406388071 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753X_info:
	.quad	sat_s753X_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.407093215 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fRealFracConst_$cp1RealFrac_entry
.type Data.Functor.Const.$fRealFracConst_$cp1RealFrac_entry, @object
Data.Functor.Const.$fRealFracConst_$cp1RealFrac_entry:
_c76Ls:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c76Lw
_c76Lv:
	movq $sat_s753X_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fRealConst_entry
_c76Lw:
	movq $24,904(%r13)
	movl $Data.Functor.Const.$fRealFracConst_$cp1RealFrac_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fRealFracConst_$cp1RealFrac_entry, .-Data.Functor.Const.$fRealFracConst_$cp1RealFrac_entry


==================== Asm code ====================
2018-03-16 16:02:21.407735248 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fRealFracConst_$cp1RealFrac_info
.type Data.Functor.Const.$fRealFracConst_$cp1RealFrac_info, @object
Data.Functor.Const.$fRealFracConst_$cp1RealFrac_info:
	.quad	Data.Functor.Const.$fRealFracConst_$cp1RealFrac_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.41505686 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fRealFracConst_closure
.type Data.Functor.Const.$fRealFracConst_closure, @object
Data.Functor.Const.$fRealFracConst_closure:
	.quad	Data.Functor.Const.$fRealFracConst_info


==================== Asm code ====================
2018-03-16 16:02:21.416429161 UTC

.section .text
.align 8
sat_s754a_entry:
_c76LO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76LP
_c76LQ:
	movq %r14,%rax
	movq 7(%rbx),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.floor_entry
_c76LP:
	jmp *-8(%r13)
	.size sat_s754a_entry, .-sat_s754a_entry


==================== Asm code ====================
2018-03-16 16:02:21.417379005 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754a_info:
	.quad	sat_s754a_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.418175223 UTC

.section .text
.align 8
sat_s7548_entry:
_c76LW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76LX
_c76LY:
	movq %r14,%rax
	movq 7(%rbx),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.ceiling_entry
_c76LX:
	jmp *-8(%r13)
	.size sat_s7548_entry, .-sat_s7548_entry


==================== Asm code ====================
2018-03-16 16:02:21.418850098 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7548_info:
	.quad	sat_s7548_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.419615275 UTC

.section .text
.align 8
sat_s7546_entry:
_c76M4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76M5
_c76M6:
	movq %r14,%rax
	movq 7(%rbx),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.round_entry
_c76M5:
	jmp *-8(%r13)
	.size sat_s7546_entry, .-sat_s7546_entry


==================== Asm code ====================
2018-03-16 16:02:21.420301328 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7546_info:
	.quad	sat_s7546_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.420999938 UTC

.section .text
.align 8
sat_s7544_entry:
_c76Mc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Md
_c76Me:
	movq %r14,%rax
	movq 7(%rbx),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.truncate_entry
_c76Md:
	jmp *-8(%r13)
	.size sat_s7544_entry, .-sat_s7544_entry


==================== Asm code ====================
2018-03-16 16:02:21.421721052 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7544_info:
	.quad	sat_s7544_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.422471907 UTC

.section .text
.align 8
sat_s7542_entry:
_c76Mk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Ml
_c76Mm:
	movq %r14,%rax
	movq 7(%rbx),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.properFraction_entry
_c76Ml:
	jmp *-8(%r13)
	.size sat_s7542_entry, .-sat_s7542_entry


==================== Asm code ====================
2018-03-16 16:02:21.423152705 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7542_info:
	.quad	sat_s7542_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.423926683 UTC

.section .text
.align 8
sat_s7540_entry:
_c76Mr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Ms
_c76Mt:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fRealFracConst_$cp2RealFrac_entry
_c76Ms:
	jmp *-16(%r13)
	.size sat_s7540_entry, .-sat_s7540_entry


==================== Asm code ====================
2018-03-16 16:02:21.424621328 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7540_info:
	.quad	sat_s7540_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.425380682 UTC

.section .text
.align 8
sat_s753Z_entry:
_c76My:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Mz
_c76MA:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fRealFracConst_$cp1RealFrac_entry
_c76Mz:
	jmp *-16(%r13)
	.size sat_s753Z_entry, .-sat_s753Z_entry


==================== Asm code ====================
2018-03-16 16:02:21.426050841 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s753Z_info:
	.quad	sat_s753Z_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.426945823 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fRealFracConst_entry
.type Data.Functor.Const.$fRealFracConst_entry, @object
Data.Functor.Const.$fRealFracConst_entry:
_c76MC:
	addq $192,%r12
	cmpq 856(%r13),%r12
	ja _c76MG
_c76MF:
	movq $sat_s754a_info,-184(%r12)
	movq %r14,-176(%r12)
	movq $sat_s7548_info,-168(%r12)
	movq %r14,-160(%r12)
	movq $sat_s7546_info,-152(%r12)
	movq %r14,-144(%r12)
	movq $sat_s7544_info,-136(%r12)
	movq %r14,-128(%r12)
	movq $sat_s7542_info,-120(%r12)
	movq %r14,-112(%r12)
	movq $sat_s7540_info,-104(%r12)
	movq %r14,-88(%r12)
	movq $sat_s753Z_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $GHC.Real.C:RealFrac_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	leaq -104(%r12),%rax
	movq %rax,-40(%r12)
	leaq -119(%r12),%rax
	movq %rax,-32(%r12)
	leaq -135(%r12),%rax
	movq %rax,-24(%r12)
	leaq -151(%r12),%rax
	movq %rax,-16(%r12)
	leaq -167(%r12),%rax
	movq %rax,-8(%r12)
	leaq -183(%r12),%rax
	movq %rax,(%r12)
	leaq -55(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c76MG:
	movq $192,904(%r13)
	movl $Data.Functor.Const.$fRealFracConst_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fRealFracConst_entry, .-Data.Functor.Const.$fRealFracConst_entry


==================== Asm code ====================
2018-03-16 16:02:21.427824308 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fRealFracConst_info
.type Data.Functor.Const.$fRealFracConst_info, @object
Data.Functor.Const.$fRealFracConst_info:
	.quad	Data.Functor.Const.$fRealFracConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.431170127 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_closure
.type Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_closure, @object
Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_closure:
	.quad	Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_info


==================== Asm code ====================
2018-03-16 16:02:21.431940454 UTC

.section .text
.align 8
sat_s754c_entry:
_c76Nt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Nu
_c76Nv:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.$p1RealFloat_entry
_c76Nu:
	jmp *-16(%r13)
	.size sat_s754c_entry, .-sat_s754c_entry


==================== Asm code ====================
2018-03-16 16:02:21.432572765 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754c_info:
	.quad	sat_s754c_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.433349261 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_entry
.type Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_entry, @object
Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_entry:
_c76Nw:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c76NA
_c76Nz:
	movq $sat_s754c_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fRealFracConst_entry
_c76NA:
	movq $24,904(%r13)
	movl $Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_entry, .-Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_entry


==================== Asm code ====================
2018-03-16 16:02:21.433986142 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_info
.type Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_info, @object
Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_info:
	.quad	Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.446415346 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fRealFloatConst_closure
.type Data.Functor.Const.$fRealFloatConst_closure, @object
Data.Functor.Const.$fRealFloatConst_closure:
	.quad	Data.Functor.Const.$fRealFloatConst_info


==================== Asm code ====================
2018-03-16 16:02:21.447213822 UTC

.section .text
.align 8
sat_s754t_entry:
_c76NR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76NS
_c76NT:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.atan2_entry
_c76NS:
	jmp *-16(%r13)
	.size sat_s754t_entry, .-sat_s754t_entry


==================== Asm code ====================
2018-03-16 16:02:21.447844167 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754t_info:
	.quad	sat_s754t_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.448556891 UTC

.section .text
.align 8
sat_s754s_entry:
_c76NY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76NZ
_c76O0:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.isIEEE_entry
_c76NZ:
	jmp *-16(%r13)
	.size sat_s754s_entry, .-sat_s754s_entry


==================== Asm code ====================
2018-03-16 16:02:21.44921148 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754s_info:
	.quad	sat_s754s_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.449923791 UTC

.section .text
.align 8
sat_s754r_entry:
_c76O5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76O6
_c76O7:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.isNegativeZero_entry
_c76O6:
	jmp *-16(%r13)
	.size sat_s754r_entry, .-sat_s754r_entry


==================== Asm code ====================
2018-03-16 16:02:21.450580316 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754r_info:
	.quad	sat_s754r_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.45126986 UTC

.section .text
.align 8
sat_s754q_entry:
_c76Oc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Od
_c76Oe:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.isDenormalized_entry
_c76Od:
	jmp *-16(%r13)
	.size sat_s754q_entry, .-sat_s754q_entry


==================== Asm code ====================
2018-03-16 16:02:21.45190955 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754q_info:
	.quad	sat_s754q_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.452557606 UTC

.section .text
.align 8
sat_s754p_entry:
_c76Oj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Ok
_c76Ol:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.isInfinite_entry
_c76Ok:
	jmp *-16(%r13)
	.size sat_s754p_entry, .-sat_s754p_entry


==================== Asm code ====================
2018-03-16 16:02:21.453178542 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754p_info:
	.quad	sat_s754p_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.454076081 UTC

.section .text
.align 8
sat_s754o_entry:
_c76Oq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Or
_c76Os:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.isNaN_entry
_c76Or:
	jmp *-16(%r13)
	.size sat_s754o_entry, .-sat_s754o_entry


==================== Asm code ====================
2018-03-16 16:02:21.454707924 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754o_info:
	.quad	sat_s754o_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.455415271 UTC

.section .text
.align 8
sat_s754n_entry:
_c76Ox:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Oy
_c76Oz:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.scaleFloat_entry
_c76Oy:
	jmp *-16(%r13)
	.size sat_s754n_entry, .-sat_s754n_entry


==================== Asm code ====================
2018-03-16 16:02:21.456063609 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754n_info:
	.quad	sat_s754n_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.456766489 UTC

.section .text
.align 8
sat_s754m_entry:
_c76OE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76OF
_c76OG:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.significand_entry
_c76OF:
	jmp *-16(%r13)
	.size sat_s754m_entry, .-sat_s754m_entry


==================== Asm code ====================
2018-03-16 16:02:21.457426788 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754m_info:
	.quad	sat_s754m_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.458147213 UTC

.section .text
.align 8
sat_s754l_entry:
_c76OL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76OM
_c76ON:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.exponent_entry
_c76OM:
	jmp *-16(%r13)
	.size sat_s754l_entry, .-sat_s754l_entry


==================== Asm code ====================
2018-03-16 16:02:21.458770941 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754l_info:
	.quad	sat_s754l_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.459490818 UTC

.section .text
.align 8
sat_s754k_entry:
_c76OS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76OT
_c76OU:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.encodeFloat_entry
_c76OT:
	jmp *-16(%r13)
	.size sat_s754k_entry, .-sat_s754k_entry


==================== Asm code ====================
2018-03-16 16:02:21.460127706 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754k_info:
	.quad	sat_s754k_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.460843355 UTC

.section .text
.align 8
sat_s754j_entry:
_c76OZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76P0
_c76P1:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.decodeFloat_entry
_c76P0:
	jmp *-16(%r13)
	.size sat_s754j_entry, .-sat_s754j_entry


==================== Asm code ====================
2018-03-16 16:02:21.461474512 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754j_info:
	.quad	sat_s754j_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.462168539 UTC

.section .text
.align 8
sat_s754i_entry:
_c76P6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76P7
_c76P8:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.floatRange_entry
_c76P7:
	jmp *-16(%r13)
	.size sat_s754i_entry, .-sat_s754i_entry


==================== Asm code ====================
2018-03-16 16:02:21.462818848 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754i_info:
	.quad	sat_s754i_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.463499772 UTC

.section .text
.align 8
sat_s754h_entry:
_c76Pd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Pe
_c76Pf:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.floatDigits_entry
_c76Pe:
	jmp *-16(%r13)
	.size sat_s754h_entry, .-sat_s754h_entry


==================== Asm code ====================
2018-03-16 16:02:21.46413095 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754h_info:
	.quad	sat_s754h_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.464816703 UTC

.section .text
.align 8
sat_s754g_entry:
_c76Pk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Pl
_c76Pm:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.floatRadix_entry
_c76Pl:
	jmp *-16(%r13)
	.size sat_s754g_entry, .-sat_s754g_entry


==================== Asm code ====================
2018-03-16 16:02:21.465649867 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754g_info:
	.quad	sat_s754g_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.46634417 UTC

.section .text
.align 8
sat_s754f_entry:
_c76Pr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Ps
_c76Pt:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_entry
_c76Ps:
	jmp *-16(%r13)
	.size sat_s754f_entry, .-sat_s754f_entry


==================== Asm code ====================
2018-03-16 16:02:21.467003825 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754f_info:
	.quad	sat_s754f_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.467663519 UTC

.section .text
.align 8
sat_s754e_entry:
_c76Py:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Pz
_c76PA:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_entry
_c76Pz:
	jmp *-16(%r13)
	.size sat_s754e_entry, .-sat_s754e_entry


==================== Asm code ====================
2018-03-16 16:02:21.468290465 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754e_info:
	.quad	sat_s754e_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.469382139 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fRealFloatConst_entry
.type Data.Functor.Const.$fRealFloatConst_entry, @object
Data.Functor.Const.$fRealFloatConst_entry:
_c76PC:
	addq $520,%r12
	cmpq 856(%r13),%r12
	ja _c76PG
_c76PF:
	movq $sat_s754t_info,-512(%r12)
	movq %r14,-496(%r12)
	movq $sat_s754s_info,-488(%r12)
	movq %r14,-472(%r12)
	movq $sat_s754r_info,-464(%r12)
	movq %r14,-448(%r12)
	movq $sat_s754q_info,-440(%r12)
	movq %r14,-424(%r12)
	movq $sat_s754p_info,-416(%r12)
	movq %r14,-400(%r12)
	movq $sat_s754o_info,-392(%r12)
	movq %r14,-376(%r12)
	movq $sat_s754n_info,-368(%r12)
	movq %r14,-352(%r12)
	movq $sat_s754m_info,-344(%r12)
	movq %r14,-328(%r12)
	movq $sat_s754l_info,-320(%r12)
	movq %r14,-304(%r12)
	movq $sat_s754k_info,-296(%r12)
	movq %r14,-280(%r12)
	movq $sat_s754j_info,-272(%r12)
	movq %r14,-256(%r12)
	movq $sat_s754i_info,-248(%r12)
	movq %r14,-232(%r12)
	movq $sat_s754h_info,-224(%r12)
	movq %r14,-208(%r12)
	movq $sat_s754g_info,-200(%r12)
	movq %r14,-184(%r12)
	movq $sat_s754f_info,-176(%r12)
	movq %r14,-160(%r12)
	movq $sat_s754e_info,-152(%r12)
	movq %r14,-136(%r12)
	movq $GHC.Float.C:RealFloat_con_info,-128(%r12)
	leaq -152(%r12),%rax
	movq %rax,-120(%r12)
	leaq -176(%r12),%rax
	movq %rax,-112(%r12)
	leaq -200(%r12),%rax
	movq %rax,-104(%r12)
	leaq -224(%r12),%rax
	movq %rax,-96(%r12)
	leaq -248(%r12),%rax
	movq %rax,-88(%r12)
	leaq -272(%r12),%rax
	movq %rax,-80(%r12)
	leaq -296(%r12),%rax
	movq %rax,-72(%r12)
	leaq -320(%r12),%rax
	movq %rax,-64(%r12)
	leaq -344(%r12),%rax
	movq %rax,-56(%r12)
	leaq -368(%r12),%rax
	movq %rax,-48(%r12)
	leaq -392(%r12),%rax
	movq %rax,-40(%r12)
	leaq -416(%r12),%rax
	movq %rax,-32(%r12)
	leaq -440(%r12),%rax
	movq %rax,-24(%r12)
	leaq -464(%r12),%rax
	movq %rax,-16(%r12)
	leaq -488(%r12),%rax
	movq %rax,-8(%r12)
	leaq -512(%r12),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c76PG:
	movq $520,904(%r13)
	movl $Data.Functor.Const.$fRealFloatConst_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fRealFloatConst_entry, .-Data.Functor.Const.$fRealFloatConst_entry


==================== Asm code ====================
2018-03-16 16:02:21.470535259 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fRealFloatConst_info
.type Data.Functor.Const.$fRealFloatConst_info, @object
Data.Functor.Const.$fRealFloatConst_info:
	.quad	Data.Functor.Const.$fRealFloatConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.479097223 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fEnumConst_closure
.type Data.Functor.Const.$fEnumConst_closure, @object
Data.Functor.Const.$fEnumConst_closure:
	.quad	Data.Functor.Const.$fEnumConst_info


==================== Asm code ====================
2018-03-16 16:02:21.480018741 UTC

.section .text
.align 8
sat_s754C_entry:
_c76Rc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Rd
_c76Re:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Enum.enumFromThenTo_entry
_c76Rd:
	jmp *-16(%r13)
	.size sat_s754C_entry, .-sat_s754C_entry


==================== Asm code ====================
2018-03-16 16:02:21.480638495 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754C_info:
	.quad	sat_s754C_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.481364567 UTC

.section .text
.align 8
sat_s754B_entry:
_c76Rj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Rk
_c76Rl:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Enum.enumFromTo_entry
_c76Rk:
	jmp *-16(%r13)
	.size sat_s754B_entry, .-sat_s754B_entry


==================== Asm code ====================
2018-03-16 16:02:21.481995458 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754B_info:
	.quad	sat_s754B_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.482693909 UTC

.section .text
.align 8
sat_s754A_entry:
_c76Rq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Rr
_c76Rs:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Enum.enumFromThen_entry
_c76Rr:
	jmp *-16(%r13)
	.size sat_s754A_entry, .-sat_s754A_entry


==================== Asm code ====================
2018-03-16 16:02:21.483295546 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754A_info:
	.quad	sat_s754A_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.484022134 UTC

.section .text
.align 8
sat_s754z_entry:
_c76Rx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Ry
_c76Rz:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Enum.enumFrom_entry
_c76Ry:
	jmp *-16(%r13)
	.size sat_s754z_entry, .-sat_s754z_entry


==================== Asm code ====================
2018-03-16 16:02:21.484659114 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754z_info:
	.quad	sat_s754z_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.485934725 UTC

.section .text
.align 8
sat_s754y_entry:
_c76RE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76RF
_c76RG:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Enum.fromEnum_entry
_c76RF:
	jmp *-16(%r13)
	.size sat_s754y_entry, .-sat_s754y_entry


==================== Asm code ====================
2018-03-16 16:02:21.486563319 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754y_info:
	.quad	sat_s754y_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.487243827 UTC

.section .text
.align 8
sat_s754x_entry:
_c76RL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76RM
_c76RN:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Enum.toEnum_entry
_c76RM:
	jmp *-16(%r13)
	.size sat_s754x_entry, .-sat_s754x_entry


==================== Asm code ====================
2018-03-16 16:02:21.48783478 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754x_info:
	.quad	sat_s754x_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.488522766 UTC

.section .text
.align 8
sat_s754w_entry:
_c76RS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76RT
_c76RU:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Enum.pred_entry
_c76RT:
	jmp *-16(%r13)
	.size sat_s754w_entry, .-sat_s754w_entry


==================== Asm code ====================
2018-03-16 16:02:21.489128981 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754w_info:
	.quad	sat_s754w_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.489882486 UTC

.section .text
.align 8
sat_s754v_entry:
_c76RZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76S0
_c76S1:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Enum.succ_entry
_c76S0:
	jmp *-16(%r13)
	.size sat_s754v_entry, .-sat_s754v_entry


==================== Asm code ====================
2018-03-16 16:02:21.490521124 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754v_info:
	.quad	sat_s754v_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.491421626 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fEnumConst_entry
.type Data.Functor.Const.$fEnumConst_entry, @object
Data.Functor.Const.$fEnumConst_entry:
_c76S3:
	addq $264,%r12
	cmpq 856(%r13),%r12
	ja _c76S7
_c76S6:
	movq $sat_s754C_info,-256(%r12)
	movq %r14,-240(%r12)
	movq $sat_s754B_info,-232(%r12)
	movq %r14,-216(%r12)
	movq $sat_s754A_info,-208(%r12)
	movq %r14,-192(%r12)
	movq $sat_s754z_info,-184(%r12)
	movq %r14,-168(%r12)
	movq $sat_s754y_info,-160(%r12)
	movq %r14,-144(%r12)
	movq $sat_s754x_info,-136(%r12)
	movq %r14,-120(%r12)
	movq $sat_s754w_info,-112(%r12)
	movq %r14,-96(%r12)
	movq $sat_s754v_info,-88(%r12)
	movq %r14,-72(%r12)
	movq $GHC.Enum.C:Enum_con_info,-64(%r12)
	leaq -88(%r12),%rax
	movq %rax,-56(%r12)
	leaq -112(%r12),%rax
	movq %rax,-48(%r12)
	leaq -136(%r12),%rax
	movq %rax,-40(%r12)
	leaq -160(%r12),%rax
	movq %rax,-32(%r12)
	leaq -184(%r12),%rax
	movq %rax,-24(%r12)
	leaq -208(%r12),%rax
	movq %rax,-16(%r12)
	leaq -232(%r12),%rax
	movq %rax,-8(%r12)
	leaq -256(%r12),%rax
	movq %rax,(%r12)
	leaq -63(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c76S7:
	movq $264,904(%r13)
	movl $Data.Functor.Const.$fEnumConst_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fEnumConst_entry, .-Data.Functor.Const.$fEnumConst_entry


==================== Asm code ====================
2018-03-16 16:02:21.492284158 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fEnumConst_info
.type Data.Functor.Const.$fEnumConst_info, @object
Data.Functor.Const.$fEnumConst_info:
	.quad	Data.Functor.Const.$fEnumConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.49544346 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fIntegralConst_$cp2Integral_closure
.type Data.Functor.Const.$fIntegralConst_$cp2Integral_closure, @object
Data.Functor.Const.$fIntegralConst_$cp2Integral_closure:
	.quad	Data.Functor.Const.$fIntegralConst_$cp2Integral_info


==================== Asm code ====================
2018-03-16 16:02:21.496149631 UTC

.section .text
.align 8
sat_s754E_entry:
_c76SZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76T0
_c76T1:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p2Integral_entry
_c76T0:
	jmp *-16(%r13)
	.size sat_s754E_entry, .-sat_s754E_entry


==================== Asm code ====================
2018-03-16 16:02:21.49676091 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754E_info:
	.quad	sat_s754E_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.497908063 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fIntegralConst_$cp2Integral_entry
.type Data.Functor.Const.$fIntegralConst_$cp2Integral_entry, @object
Data.Functor.Const.$fIntegralConst_$cp2Integral_entry:
_c76T2:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c76T6
_c76T5:
	movq $sat_s754E_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fEnumConst_entry
_c76T6:
	movq $24,904(%r13)
	movl $Data.Functor.Const.$fIntegralConst_$cp2Integral_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fIntegralConst_$cp2Integral_entry, .-Data.Functor.Const.$fIntegralConst_$cp2Integral_entry


==================== Asm code ====================
2018-03-16 16:02:21.498619732 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fIntegralConst_$cp2Integral_info
.type Data.Functor.Const.$fIntegralConst_$cp2Integral_info, @object
Data.Functor.Const.$fIntegralConst_$cp2Integral_info:
	.quad	Data.Functor.Const.$fIntegralConst_$cp2Integral_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.507247149 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fIntegralConst_closure
.type Data.Functor.Const.$fIntegralConst_closure, @object
Data.Functor.Const.$fIntegralConst_closure:
	.quad	Data.Functor.Const.$fIntegralConst_info


==================== Asm code ====================
2018-03-16 16:02:21.508061516 UTC

.section .text
.align 8
sat_s754O_entry:
_c76Tn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76To
_c76Tp:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.toInteger_entry
_c76To:
	jmp *-16(%r13)
	.size sat_s754O_entry, .-sat_s754O_entry


==================== Asm code ====================
2018-03-16 16:02:21.508701894 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754O_info:
	.quad	sat_s754O_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.5095499 UTC

.section .text
.align 8
sat_s754N_entry:
_c76Tu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Tv
_c76Tw:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.divMod_entry
_c76Tv:
	jmp *-16(%r13)
	.size sat_s754N_entry, .-sat_s754N_entry


==================== Asm code ====================
2018-03-16 16:02:21.510140298 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754N_info:
	.quad	sat_s754N_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.510837839 UTC

.section .text
.align 8
sat_s754M_entry:
_c76TB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76TC
_c76TD:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.quotRem_entry
_c76TC:
	jmp *-16(%r13)
	.size sat_s754M_entry, .-sat_s754M_entry


==================== Asm code ====================
2018-03-16 16:02:21.511496859 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754M_info:
	.quad	sat_s754M_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.512246972 UTC

.section .text
.align 8
sat_s754L_entry:
_c76TI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76TJ
_c76TK:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.mod_entry
_c76TJ:
	jmp *-16(%r13)
	.size sat_s754L_entry, .-sat_s754L_entry


==================== Asm code ====================
2018-03-16 16:02:21.512882629 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754L_info:
	.quad	sat_s754L_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.513644259 UTC

.section .text
.align 8
sat_s754K_entry:
_c76TP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76TQ
_c76TR:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.div_entry
_c76TQ:
	jmp *-16(%r13)
	.size sat_s754K_entry, .-sat_s754K_entry


==================== Asm code ====================
2018-03-16 16:02:21.514292731 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754K_info:
	.quad	sat_s754K_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.514995827 UTC

.section .text
.align 8
sat_s754J_entry:
_c76TW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76TX
_c76TY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.rem_entry
_c76TX:
	jmp *-16(%r13)
	.size sat_s754J_entry, .-sat_s754J_entry


==================== Asm code ====================
2018-03-16 16:02:21.515631841 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754J_info:
	.quad	sat_s754J_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.516365486 UTC

.section .text
.align 8
sat_s754I_entry:
_c76U3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76U4
_c76U5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.quot_entry
_c76U4:
	jmp *-16(%r13)
	.size sat_s754I_entry, .-sat_s754I_entry


==================== Asm code ====================
2018-03-16 16:02:21.517023999 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754I_info:
	.quad	sat_s754I_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.517707673 UTC

.section .text
.align 8
sat_s754H_entry:
_c76Ua:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Ub
_c76Uc:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fIntegralConst_$cp2Integral_entry
_c76Ub:
	jmp *-16(%r13)
	.size sat_s754H_entry, .-sat_s754H_entry


==================== Asm code ====================
2018-03-16 16:02:21.518380454 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754H_info:
	.quad	sat_s754H_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.519118879 UTC

.section .text
.align 8
sat_s754G_entry:
_c76Uh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Ui
_c76Uj:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fIntegralConst_$cp1Integral_entry
_c76Ui:
	jmp *-16(%r13)
	.size sat_s754G_entry, .-sat_s754G_entry


==================== Asm code ====================
2018-03-16 16:02:21.519801327 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754G_info:
	.quad	sat_s754G_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.520678788 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fIntegralConst_entry
.type Data.Functor.Const.$fIntegralConst_entry, @object
Data.Functor.Const.$fIntegralConst_entry:
_c76Ul:
	addq $296,%r12
	cmpq 856(%r13),%r12
	ja _c76Up
_c76Uo:
	movq $sat_s754O_info,-288(%r12)
	movq %r14,-272(%r12)
	movq $sat_s754N_info,-264(%r12)
	movq %r14,-248(%r12)
	movq $sat_s754M_info,-240(%r12)
	movq %r14,-224(%r12)
	movq $sat_s754L_info,-216(%r12)
	movq %r14,-200(%r12)
	movq $sat_s754K_info,-192(%r12)
	movq %r14,-176(%r12)
	movq $sat_s754J_info,-168(%r12)
	movq %r14,-152(%r12)
	movq $sat_s754I_info,-144(%r12)
	movq %r14,-128(%r12)
	movq $sat_s754H_info,-120(%r12)
	movq %r14,-104(%r12)
	movq $sat_s754G_info,-96(%r12)
	movq %r14,-80(%r12)
	movq $GHC.Real.C:Integral_con_info,-72(%r12)
	leaq -96(%r12),%rax
	movq %rax,-64(%r12)
	leaq -120(%r12),%rax
	movq %rax,-56(%r12)
	leaq -144(%r12),%rax
	movq %rax,-48(%r12)
	leaq -168(%r12),%rax
	movq %rax,-40(%r12)
	leaq -192(%r12),%rax
	movq %rax,-32(%r12)
	leaq -216(%r12),%rax
	movq %rax,-24(%r12)
	leaq -240(%r12),%rax
	movq %rax,-16(%r12)
	leaq -264(%r12),%rax
	movq %rax,-8(%r12)
	leaq -288(%r12),%rax
	movq %rax,(%r12)
	leaq -71(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c76Up:
	movq $296,904(%r13)
	movl $Data.Functor.Const.$fIntegralConst_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fIntegralConst_entry, .-Data.Functor.Const.$fIntegralConst_entry


==================== Asm code ====================
2018-03-16 16:02:21.521573987 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fIntegralConst_info
.type Data.Functor.Const.$fIntegralConst_info, @object
Data.Functor.Const.$fIntegralConst_info:
	.quad	Data.Functor.Const.$fIntegralConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.52545881 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fBoundedConst_closure
.type Data.Functor.Const.$fBoundedConst_closure, @object
Data.Functor.Const.$fBoundedConst_closure:
	.quad	Data.Functor.Const.$fBoundedConst_info


==================== Asm code ====================
2018-03-16 16:02:21.52624037 UTC

.section .text
.align 8
sat_s754R_entry:
_c76Vm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Vn
_c76Vo:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Enum.maxBound_entry
_c76Vn:
	jmp *-16(%r13)
	.size sat_s754R_entry, .-sat_s754R_entry


==================== Asm code ====================
2018-03-16 16:02:21.526928302 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754R_info:
	.quad	sat_s754R_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.527704842 UTC

.section .text
.align 8
sat_s754Q_entry:
_c76Vt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Vu
_c76Vv:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Enum.minBound_entry
_c76Vu:
	jmp *-16(%r13)
	.size sat_s754Q_entry, .-sat_s754Q_entry


==================== Asm code ====================
2018-03-16 16:02:21.528376878 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754Q_info:
	.quad	sat_s754Q_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.529733147 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fBoundedConst_entry
.type Data.Functor.Const.$fBoundedConst_entry, @object
Data.Functor.Const.$fBoundedConst_entry:
_c76Vx:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c76VB
_c76VA:
	movq $sat_s754R_info,-64(%r12)
	movq %r14,-48(%r12)
	movq $sat_s754Q_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $GHC.Enum.C:Bounded_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c76VB:
	movq $72,904(%r13)
	movl $Data.Functor.Const.$fBoundedConst_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fBoundedConst_entry, .-Data.Functor.Const.$fBoundedConst_entry


==================== Asm code ====================
2018-03-16 16:02:21.530678089 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fBoundedConst_info
.type Data.Functor.Const.$fBoundedConst_info, @object
Data.Functor.Const.$fBoundedConst_info:
	.quad	Data.Functor.Const.$fBoundedConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.534083954 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fBitsConst_$cp1Bits_closure
.type Data.Functor.Const.$fBitsConst_$cp1Bits_closure, @object
Data.Functor.Const.$fBitsConst_$cp1Bits_closure:
	.quad	Data.Functor.Const.$fBitsConst_$cp1Bits_info


==================== Asm code ====================
2018-03-16 16:02:21.534968499 UTC

.section .text
.align 8
sat_s754T_entry:
_c76VZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76W0
_c76W1:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.$p1Bits_entry
_c76W0:
	jmp *-16(%r13)
	.size sat_s754T_entry, .-sat_s754T_entry


==================== Asm code ====================
2018-03-16 16:02:21.535683467 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754T_info:
	.quad	sat_s754T_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.53649427 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fBitsConst_$cp1Bits_entry
.type Data.Functor.Const.$fBitsConst_$cp1Bits_entry, @object
Data.Functor.Const.$fBitsConst_$cp1Bits_entry:
_c76W2:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c76W6
_c76W5:
	movq $sat_s754T_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fEqConst_entry
_c76W6:
	movq $24,904(%r13)
	movl $Data.Functor.Const.$fBitsConst_$cp1Bits_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fBitsConst_$cp1Bits_entry, .-Data.Functor.Const.$fBitsConst_$cp1Bits_entry


==================== Asm code ====================
2018-03-16 16:02:21.537202368 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fBitsConst_$cp1Bits_info
.type Data.Functor.Const.$fBitsConst_$cp1Bits_info, @object
Data.Functor.Const.$fBitsConst_$cp1Bits_info:
	.quad	Data.Functor.Const.$fBitsConst_$cp1Bits_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.554460613 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fBitsConst_closure
.type Data.Functor.Const.$fBitsConst_closure, @object
Data.Functor.Const.$fBitsConst_closure:
	.quad	Data.Functor.Const.$fBitsConst_info


==================== Asm code ====================
2018-03-16 16:02:21.555431842 UTC

.section .text
.align 8
sat_s755h_entry:
_c76Wn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Wo
_c76Wp:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.popCount_entry
_c76Wo:
	jmp *-16(%r13)
	.size sat_s755h_entry, .-sat_s755h_entry


==================== Asm code ====================
2018-03-16 16:02:21.556078729 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s755h_info:
	.quad	sat_s755h_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.55679432 UTC

.section .text
.align 8
sat_s755g_entry:
_c76Wu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Wv
_c76Ww:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.rotateR_entry
_c76Wv:
	jmp *-16(%r13)
	.size sat_s755g_entry, .-sat_s755g_entry


==================== Asm code ====================
2018-03-16 16:02:21.557978875 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s755g_info:
	.quad	sat_s755g_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.558691436 UTC

.section .text
.align 8
sat_s755f_entry:
_c76WB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76WC
_c76WD:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.rotateL_entry
_c76WC:
	jmp *-16(%r13)
	.size sat_s755f_entry, .-sat_s755f_entry


==================== Asm code ====================
2018-03-16 16:02:21.559837564 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s755f_info:
	.quad	sat_s755f_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.560548827 UTC

.section .text
.align 8
sat_s755e_entry:
_c76WI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76WJ
_c76WK:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.unsafeShiftR_entry
_c76WJ:
	jmp *-16(%r13)
	.size sat_s755e_entry, .-sat_s755e_entry


==================== Asm code ====================
2018-03-16 16:02:21.561209563 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s755e_info:
	.quad	sat_s755e_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.561993877 UTC

.section .text
.align 8
sat_s755d_entry:
_c76WP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76WQ
_c76WR:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.shiftR_entry
_c76WQ:
	jmp *-16(%r13)
	.size sat_s755d_entry, .-sat_s755d_entry


==================== Asm code ====================
2018-03-16 16:02:21.562627574 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s755d_info:
	.quad	sat_s755d_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.563291997 UTC

.section .text
.align 8
sat_s755c_entry:
_c76WW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76WX
_c76WY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.unsafeShiftL_entry
_c76WX:
	jmp *-16(%r13)
	.size sat_s755c_entry, .-sat_s755c_entry


==================== Asm code ====================
2018-03-16 16:02:21.563902203 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s755c_info:
	.quad	sat_s755c_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.564605526 UTC

.section .text
.align 8
sat_s755b_entry:
_c76X3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76X4
_c76X5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.shiftL_entry
_c76X4:
	jmp *-16(%r13)
	.size sat_s755b_entry, .-sat_s755b_entry


==================== Asm code ====================
2018-03-16 16:02:21.565283267 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s755b_info:
	.quad	sat_s755b_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.566005329 UTC

.section .text
.align 8
sat_s755a_entry:
_c76Xa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Xb
_c76Xc:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.isSigned_entry
_c76Xb:
	jmp *-16(%r13)
	.size sat_s755a_entry, .-sat_s755a_entry


==================== Asm code ====================
2018-03-16 16:02:21.566642436 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s755a_info:
	.quad	sat_s755a_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.567337699 UTC

.section .text
.align 8
sat_s7559_entry:
_c76Xh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Xi
_c76Xj:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.bitSize_entry
_c76Xi:
	jmp *-16(%r13)
	.size sat_s7559_entry, .-sat_s7559_entry


==================== Asm code ====================
2018-03-16 16:02:21.568002779 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7559_info:
	.quad	sat_s7559_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.568752438 UTC

.section .text
.align 8
sat_s7558_entry:
_c76Xo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Xp
_c76Xq:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.bitSizeMaybe_entry
_c76Xp:
	jmp *-16(%r13)
	.size sat_s7558_entry, .-sat_s7558_entry


==================== Asm code ====================
2018-03-16 16:02:21.569424912 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7558_info:
	.quad	sat_s7558_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.570135025 UTC

.section .text
.align 8
sat_s7557_entry:
_c76Xv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Xw
_c76Xx:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.testBit_entry
_c76Xw:
	jmp *-16(%r13)
	.size sat_s7557_entry, .-sat_s7557_entry


==================== Asm code ====================
2018-03-16 16:02:21.570781617 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7557_info:
	.quad	sat_s7557_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.571455552 UTC

.section .text
.align 8
sat_s7556_entry:
_c76XC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76XD
_c76XE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.complementBit_entry
_c76XD:
	jmp *-16(%r13)
	.size sat_s7556_entry, .-sat_s7556_entry


==================== Asm code ====================
2018-03-16 16:02:21.572048237 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7556_info:
	.quad	sat_s7556_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.572752371 UTC

.section .text
.align 8
sat_s7555_entry:
_c76XJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76XK
_c76XL:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.clearBit_entry
_c76XK:
	jmp *-16(%r13)
	.size sat_s7555_entry, .-sat_s7555_entry


==================== Asm code ====================
2018-03-16 16:02:21.573440945 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7555_info:
	.quad	sat_s7555_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.574186739 UTC

.section .text
.align 8
sat_s7554_entry:
_c76XQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76XR
_c76XS:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.setBit_entry
_c76XR:
	jmp *-16(%r13)
	.size sat_s7554_entry, .-sat_s7554_entry


==================== Asm code ====================
2018-03-16 16:02:21.57485401 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7554_info:
	.quad	sat_s7554_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.575566255 UTC

.section .text
.align 8
sat_s7553_entry:
_c76XX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76XY
_c76XZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.bit_entry
_c76XY:
	jmp *-16(%r13)
	.size sat_s7553_entry, .-sat_s7553_entry


==================== Asm code ====================
2018-03-16 16:02:21.576226478 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7553_info:
	.quad	sat_s7553_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.576942281 UTC

.section .text
.align 8
sat_s7552_entry:
_c76Y4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Y5
_c76Y6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.zeroBits_entry
_c76Y5:
	jmp *-16(%r13)
	.size sat_s7552_entry, .-sat_s7552_entry


==================== Asm code ====================
2018-03-16 16:02:21.577659832 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7552_info:
	.quad	sat_s7552_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.578408345 UTC

.section .text
.align 8
sat_s7551_entry:
_c76Yb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Yc
_c76Yd:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.rotate_entry
_c76Yc:
	jmp *-16(%r13)
	.size sat_s7551_entry, .-sat_s7551_entry


==================== Asm code ====================
2018-03-16 16:02:21.579073217 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7551_info:
	.quad	sat_s7551_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.579784933 UTC

.section .text
.align 8
sat_s7550_entry:
_c76Yi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Yj
_c76Yk:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.shift_entry
_c76Yj:
	jmp *-16(%r13)
	.size sat_s7550_entry, .-sat_s7550_entry


==================== Asm code ====================
2018-03-16 16:02:21.580472424 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7550_info:
	.quad	sat_s7550_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.581215389 UTC

.section .text
.align 8
sat_s754Z_entry:
_c76Yp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Yq
_c76Yr:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.complement_entry
_c76Yq:
	jmp *-16(%r13)
	.size sat_s754Z_entry, .-sat_s754Z_entry


==================== Asm code ====================
2018-03-16 16:02:21.581994988 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754Z_info:
	.quad	sat_s754Z_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.582808939 UTC

.section .text
.align 8
sat_s754Y_entry:
_c76Yw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76Yx
_c76Yy:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.xor_entry
_c76Yx:
	jmp *-16(%r13)
	.size sat_s754Y_entry, .-sat_s754Y_entry


==================== Asm code ====================
2018-03-16 16:02:21.583498101 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754Y_info:
	.quad	sat_s754Y_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.584295565 UTC

.section .text
.align 8
sat_s754X_entry:
_c76YD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76YE
_c76YF:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits..|._entry
_c76YE:
	jmp *-16(%r13)
	.size sat_s754X_entry, .-sat_s754X_entry


==================== Asm code ====================
2018-03-16 16:02:21.584959242 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754X_info:
	.quad	sat_s754X_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.58631608 UTC

.section .text
.align 8
sat_s754W_entry:
_c76YK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76YL
_c76YM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits..&._entry
_c76YL:
	jmp *-16(%r13)
	.size sat_s754W_entry, .-sat_s754W_entry


==================== Asm code ====================
2018-03-16 16:02:21.586950704 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754W_info:
	.quad	sat_s754W_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.587655685 UTC

.section .text
.align 8
sat_s754V_entry:
_c76YR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c76YS
_c76YT:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fBitsConst_$cp1Bits_entry
_c76YS:
	jmp *-16(%r13)
	.size sat_s754V_entry, .-sat_s754V_entry


==================== Asm code ====================
2018-03-16 16:02:21.588329986 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s754V_info:
	.quad	sat_s754V_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.58996458 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fBitsConst_entry
.type Data.Functor.Const.$fBitsConst_entry, @object
Data.Functor.Const.$fBitsConst_entry:
_c76YV:
	addq $744,%r12
	cmpq 856(%r13),%r12
	ja _c76YZ
_c76YY:
	movq $sat_s755h_info,-736(%r12)
	movq %r14,-720(%r12)
	movq $sat_s755g_info,-712(%r12)
	movq %r14,-696(%r12)
	movq $sat_s755f_info,-688(%r12)
	movq %r14,-672(%r12)
	movq $sat_s755e_info,-664(%r12)
	movq %r14,-648(%r12)
	movq $sat_s755d_info,-640(%r12)
	movq %r14,-624(%r12)
	movq $sat_s755c_info,-616(%r12)
	movq %r14,-600(%r12)
	movq $sat_s755b_info,-592(%r12)
	movq %r14,-576(%r12)
	movq $sat_s755a_info,-568(%r12)
	movq %r14,-552(%r12)
	movq $sat_s7559_info,-544(%r12)
	movq %r14,-528(%r12)
	movq $sat_s7558_info,-520(%r12)
	movq %r14,-504(%r12)
	movq $sat_s7557_info,-496(%r12)
	movq %r14,-480(%r12)
	movq $sat_s7556_info,-472(%r12)
	movq %r14,-456(%r12)
	movq $sat_s7555_info,-448(%r12)
	movq %r14,-432(%r12)
	movq $sat_s7554_info,-424(%r12)
	movq %r14,-408(%r12)
	movq $sat_s7553_info,-400(%r12)
	movq %r14,-384(%r12)
	movq $sat_s7552_info,-376(%r12)
	movq %r14,-360(%r12)
	movq $sat_s7551_info,-352(%r12)
	movq %r14,-336(%r12)
	movq $sat_s7550_info,-328(%r12)
	movq %r14,-312(%r12)
	movq $sat_s754Z_info,-304(%r12)
	movq %r14,-288(%r12)
	movq $sat_s754Y_info,-280(%r12)
	movq %r14,-264(%r12)
	movq $sat_s754X_info,-256(%r12)
	movq %r14,-240(%r12)
	movq $sat_s754W_info,-232(%r12)
	movq %r14,-216(%r12)
	movq $sat_s754V_info,-208(%r12)
	movq %r14,-192(%r12)
	movq $Data.Bits.C:Bits_con_info,-184(%r12)
	leaq -208(%r12),%rax
	movq %rax,-176(%r12)
	leaq -232(%r12),%rax
	movq %rax,-168(%r12)
	leaq -256(%r12),%rax
	movq %rax,-160(%r12)
	leaq -280(%r12),%rax
	movq %rax,-152(%r12)
	leaq -304(%r12),%rax
	movq %rax,-144(%r12)
	leaq -328(%r12),%rax
	movq %rax,-136(%r12)
	leaq -352(%r12),%rax
	movq %rax,-128(%r12)
	leaq -376(%r12),%rax
	movq %rax,-120(%r12)
	leaq -400(%r12),%rax
	movq %rax,-112(%r12)
	leaq -424(%r12),%rax
	movq %rax,-104(%r12)
	leaq -448(%r12),%rax
	movq %rax,-96(%r12)
	leaq -472(%r12),%rax
	movq %rax,-88(%r12)
	leaq -496(%r12),%rax
	movq %rax,-80(%r12)
	leaq -520(%r12),%rax
	movq %rax,-72(%r12)
	leaq -544(%r12),%rax
	movq %rax,-64(%r12)
	leaq -568(%r12),%rax
	movq %rax,-56(%r12)
	leaq -592(%r12),%rax
	movq %rax,-48(%r12)
	leaq -616(%r12),%rax
	movq %rax,-40(%r12)
	leaq -640(%r12),%rax
	movq %rax,-32(%r12)
	leaq -664(%r12),%rax
	movq %rax,-24(%r12)
	leaq -688(%r12),%rax
	movq %rax,-16(%r12)
	leaq -712(%r12),%rax
	movq %rax,-8(%r12)
	leaq -736(%r12),%rax
	movq %rax,(%r12)
	leaq -183(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c76YZ:
	movq $744,904(%r13)
	movl $Data.Functor.Const.$fBitsConst_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fBitsConst_entry, .-Data.Functor.Const.$fBitsConst_entry


==================== Asm code ====================
2018-03-16 16:02:21.591151221 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fBitsConst_info
.type Data.Functor.Const.$fBitsConst_info, @object
Data.Functor.Const.$fBitsConst_info:
	.quad	Data.Functor.Const.$fBitsConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.594317231 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_closure
.type Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_closure, @object
Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_closure:
	.quad	Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_info


==================== Asm code ====================
2018-03-16 16:02:21.595038289 UTC

.section .text
.align 8
sat_s755j_entry:
_c7714:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c7715
_c7716:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.$p1FiniteBits_entry
_c7715:
	jmp *-16(%r13)
	.size sat_s755j_entry, .-sat_s755j_entry


==================== Asm code ====================
2018-03-16 16:02:21.59569756 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s755j_info:
	.quad	sat_s755j_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.596406009 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_entry
.type Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_entry, @object
Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_entry:
_c7717:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c771b
_c771a:
	movq $sat_s755j_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fBitsConst_entry
_c771b:
	movq $24,904(%r13)
	movl $Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_entry, .-Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_entry


==================== Asm code ====================
2018-03-16 16:02:21.59710932 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_info
.type Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_info, @object
Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_info:
	.quad	Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.60173726 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFiniteBitsConst_closure
.type Data.Functor.Const.$fFiniteBitsConst_closure, @object
Data.Functor.Const.$fFiniteBitsConst_closure:
	.quad	Data.Functor.Const.$fFiniteBitsConst_info


==================== Asm code ====================
2018-03-16 16:02:21.602482508 UTC

.section .text
.align 8
sat_s755o_entry:
_c771s:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c771t
_c771u:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.countTrailingZeros_entry
_c771t:
	jmp *-16(%r13)
	.size sat_s755o_entry, .-sat_s755o_entry


==================== Asm code ====================
2018-03-16 16:02:21.60310004 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s755o_info:
	.quad	sat_s755o_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.603804101 UTC

.section .text
.align 8
sat_s755n_entry:
_c771z:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c771A
_c771B:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.countLeadingZeros_entry
_c771A:
	jmp *-16(%r13)
	.size sat_s755n_entry, .-sat_s755n_entry


==================== Asm code ====================
2018-03-16 16:02:21.604451455 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s755n_info:
	.quad	sat_s755n_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.605148073 UTC

.section .text
.align 8
sat_s755m_entry:
_c771G:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c771H
_c771I:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Bits.finiteBitSize_entry
_c771H:
	jmp *-16(%r13)
	.size sat_s755m_entry, .-sat_s755m_entry


==================== Asm code ====================
2018-03-16 16:02:21.606327698 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s755m_info:
	.quad	sat_s755m_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.607079813 UTC

.section .text
.align 8
sat_s755l_entry:
_c771N:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c771O
_c771P:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_entry
_c771O:
	jmp *-16(%r13)
	.size sat_s755l_entry, .-sat_s755l_entry


==================== Asm code ====================
2018-03-16 16:02:21.607719263 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s755l_info:
	.quad	sat_s755l_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:21.608523857 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFiniteBitsConst_entry
.type Data.Functor.Const.$fFiniteBitsConst_entry, @object
Data.Functor.Const.$fFiniteBitsConst_entry:
_c771R:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _c771V
_c771U:
	movq $sat_s755o_info,-128(%r12)
	movq %r14,-112(%r12)
	movq $sat_s755n_info,-104(%r12)
	movq %r14,-88(%r12)
	movq $sat_s755m_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $sat_s755l_info,-56(%r12)
	movq %r14,-40(%r12)
	movq $Data.Bits.C:FiniteBits_con_info,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -80(%r12),%rax
	movq %rax,-16(%r12)
	leaq -104(%r12),%rax
	movq %rax,-8(%r12)
	leaq -128(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c771V:
	movq $136,904(%r13)
	movl $Data.Functor.Const.$fFiniteBitsConst_closure,%ebx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fFiniteBitsConst_entry, .-Data.Functor.Const.$fFiniteBitsConst_entry


==================== Asm code ====================
2018-03-16 16:02:21.60937537 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFiniteBitsConst_info
.type Data.Functor.Const.$fFiniteBitsConst_info, @object
Data.Functor.Const.$fFiniteBitsConst_info:
	.quad	Data.Functor.Const.$fFiniteBitsConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.611612394 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.getConst1_closure
.type Data.Functor.Const.getConst1_closure, @object
Data.Functor.Const.getConst1_closure:
	.quad	Data.Functor.Const.getConst1_info


==================== Asm code ====================
2018-03-16 16:02:21.612318669 UTC

.section .text
.align 8
.globl Data.Functor.Const.getConst1_entry
.type Data.Functor.Const.getConst1_entry, @object
Data.Functor.Const.getConst1_entry:
_c772p:
	movq %r14,%rbx
	jmp stg_ap_0_fast
	.size Data.Functor.Const.getConst1_entry, .-Data.Functor.Const.getConst1_entry


==================== Asm code ====================
2018-03-16 16:02:21.61347784 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.getConst1_info
.type Data.Functor.Const.getConst1_info, @object
Data.Functor.Const.getConst1_info:
	.quad	Data.Functor.Const.getConst1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.615548324 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.getConst_closure
.type Data.Functor.Const.getConst_closure, @object
Data.Functor.Const.getConst_closure:
	.quad	Data.Functor.Const.getConst_info


==================== Asm code ====================
2018-03-16 16:02:21.616178001 UTC

.section .text
.align 8
.globl Data.Functor.Const.getConst_entry
.type Data.Functor.Const.getConst_entry, @object
Data.Functor.Const.getConst_entry:
_c772A:
	jmp Data.Functor.Const.getConst1_entry
	.size Data.Functor.Const.getConst_entry, .-Data.Functor.Const.getConst_entry


==================== Asm code ====================
2018-03-16 16:02:21.616755638 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.getConst_info
.type Data.Functor.Const.getConst_info, @object
Data.Functor.Const.getConst_info:
	.quad	Data.Functor.Const.getConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:21.61888553 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Const.$trModule4_bytes
.type Data.Functor.Const.$trModule4_bytes, @object
Data.Functor.Const.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:02:21.620637284 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$trModule3_closure
.type Data.Functor.Const.$trModule3_closure, @object
Data.Functor.Const.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.Functor.Const.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:02:21.622364009 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Const.$trModule2_bytes
.type Data.Functor.Const.$trModule2_bytes, @object
Data.Functor.Const.$trModule2_bytes:
	.asciz "Data.Functor.Const"


==================== Asm code ====================
2018-03-16 16:02:21.624199198 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$trModule1_closure
.type Data.Functor.Const.$trModule1_closure, @object
Data.Functor.Const.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.Functor.Const.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:02:21.625998895 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$trModule_closure
.type Data.Functor.Const.$trModule_closure, @object
Data.Functor.Const.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	Data.Functor.Const.$trModule3_closure+1
	.quad	Data.Functor.Const.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:21.627739341 UTC

.section .data
.align 8
.align 1
$krep_r74ZT_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 16:02:21.629580625 UTC

.section .data
.align 8
.align 1
$krep1_r74ZU_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:21.631308055 UTC

.section .data
.align 8
.align 1
$krep2_r74ZV_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_r74ZU_closure+2
	.quad	GHC.Types.krep$*_closure
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:21.63311805 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$tcConst1_closure
.type Data.Functor.Const.$tcConst1_closure, @object
Data.Functor.Const.$tcConst1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.Types.krep$*_closure
	.quad	$krep2_r74ZV_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:21.634933669 UTC

.section .data
.align 8
.align 1
$krep3_r74ZW_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	2


==================== Asm code ====================
2018-03-16 16:02:21.636833799 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$tcConst2_closure
.type Data.Functor.Const.$tcConst2_closure, @object
Data.Functor.Const.$tcConst2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.Functor.Const.$fReadConst5_bytes


==================== Asm code ====================
2018-03-16 16:02:21.63927116 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$tcConst_closure
.type Data.Functor.Const.$tcConst_closure, @object
Data.Functor.Const.$tcConst_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Data.Functor.Const.$trModule_closure+1
	.quad	Data.Functor.Const.$tcConst2_closure+1
	.quad	Data.Functor.Const.$tcConst1_closure+4
	.quad	-242646752423709034
	.quad	-1564575527563685611
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:21.641028646 UTC

.section .data
.align 8
.align 1
$krep4_r74ZX_closure:
	.quad	:_con_info
	.quad	$krep3_r74ZW_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:21.643096436 UTC

.section .data
.align 8
.align 1
$krep5_r74ZY_closure:
	.quad	:_con_info
	.quad	$krep_r74ZT_closure+2
	.quad	$krep4_r74ZX_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:21.644862302 UTC

.section .data
.align 8
.align 1
$krep6_r74ZZ_closure:
	.quad	:_con_info
	.quad	$krep1_r74ZU_closure+2
	.quad	$krep5_r74ZY_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:21.646639038 UTC

.section .data
.align 8
.align 1
$krep7_r7500_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	Data.Functor.Const.$tcConst_closure+1
	.quad	$krep6_r74ZZ_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:21.648520738 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$tc'Const1_closure
.type Data.Functor.Const.$tc'Const1_closure, @object
Data.Functor.Const.$tc'Const1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r74ZT_closure+2
	.quad	$krep7_r7500_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:21.650257514 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Const.$tc'Const3_bytes
.type Data.Functor.Const.$tc'Const3_bytes, @object
Data.Functor.Const.$tc'Const3_bytes:
	.asciz "'Const"


==================== Asm code ====================
2018-03-16 16:02:21.651944323 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$tc'Const2_closure
.type Data.Functor.Const.$tc'Const2_closure, @object
Data.Functor.Const.$tc'Const2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.Functor.Const.$tc'Const3_bytes


==================== Asm code ====================
2018-03-16 16:02:21.653915239 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$tc'Const_closure
.type Data.Functor.Const.$tc'Const_closure, @object
Data.Functor.Const.$tc'Const_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Data.Functor.Const.$trModule_closure+1
	.quad	Data.Functor.Const.$tc'Const2_closure+1
	.quad	Data.Functor.Const.$tc'Const1_closure+4
	.quad	9035619270378585414
	.quad	-8649482434963437528
	.quad	3
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:21.656030294 UTC

.section .data.rel.ro
.align 8
.align 1
S757l_srt:
	.quad	Data.Functor.Const.$fReadConst4_closure
	.quad	GHC.Read.lex1_closure
	.quad	GHC.Read.readParen_closure
	.quad	Data.Functor.Const.$w$creadsPrec_closure
	.quad	Data.Functor.Const.$fReadConst_$creadsPrec_closure
	.quad	Data.Functor.Const.$fReadConst2_closure
	.quad	GHC.Read.list_closure
	.quad	Data.Functor.Const.$fReadConst_$creadList_closure
	.quad	Data.Functor.Const.$w$creadListPrec_closure
	.quad	Data.Functor.Const.$fReadConst_closure
	.quad	Data.Functor.Const.$fShowConst1_closure
	.quad	Data.Functor.Const.$w$cshowsPrec_closure
	.quad	Data.Functor.Const.$fShowConst_$cshowsPrec_closure
	.quad	Data.Functor.Const.$fShowConst_$cshow_closure
	.quad	Data.Functor.Const.$fShowConst_$cshowList_closure
	.quad	Data.Functor.Const.$fShowConst_closure
	.quad	Data.Semigroup.Internal.$fMonoidSum2_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	Data.Functor.Const.$fFoldableConst1_closure
	.quad	Data.Functor.Const.$fFoldableConst3_closure
	.quad	Data.Functor.Const.$fFoldableConst6_closure
	.quad	Data.Functor.Const.$fFoldableConst8_closure
	.quad	Data.Semigroup.Internal.$fMonoidProduct2_closure
	.quad	Data.Functor.Const.$fApplicativeConst_closure
	.quad	Data.Functor.Const.$fFunctorConst_closure


==================== Asm code ====================
2018-03-16 16:02:24.923516591 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst3_closure
.type Data.Functor.Const.$fReadConst3_closure, @object
Data.Functor.Const.$fReadConst3_closure:
	.quad	GHC.Types.I#_con_info
	.quad	11


==================== Asm code ====================
2018-03-16 16:02:24.925076848 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Const.$fReadConst5_bytes
.type Data.Functor.Const.$fReadConst5_bytes, @object
Data.Functor.Const.$fReadConst5_bytes:
	.asciz "Const"


==================== Asm code ====================
2018-03-16 16:02:24.927756162 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst4_closure
.type Data.Functor.Const.$fReadConst4_closure, @object
Data.Functor.Const.$fReadConst4_closure:
	.quad	Data.Functor.Const.$fReadConst4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:24.928684111 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fReadConst4_entry
.type Data.Functor.Const.$fReadConst4_entry, @object
Data.Functor.Const.$fReadConst4_entry:
_c778y:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c778z
_c778A:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c778x
_c778w:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Data.Functor.Const.$fReadConst5_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c778z:
	jmp *-16(%r13)
_c778x:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Const.$fReadConst4_entry, .-Data.Functor.Const.$fReadConst4_entry


==================== Asm code ====================
2018-03-16 16:02:24.929457383 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst4_info
.type Data.Functor.Const.$fReadConst4_info, @object
Data.Functor.Const.$fReadConst4_info:
	.quad	Data.Functor.Const.$fReadConst4_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:02:24.938474765 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$w$creadsPrec_closure
.type Data.Functor.Const.$w$creadsPrec_closure, @object
Data.Functor.Const.$w$creadsPrec_closure:
	.quad	Data.Functor.Const.$w$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:24.939366641 UTC

.section .text
.align 8
go1_s773f_entry:
_c779l:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c779m
_c779n:
	leaq block_c779e_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c779e
_c779f:
	movq (%rbx),%rax
	jmp *(%rax)
_c779m:
	jmp *-8(%r13)
	.size go1_s773f_entry, .-go1_s773f_entry


==================== Asm code ====================
2018-03-16 16:02:24.940032733 UTC

.section .data.rel.ro
.align 8
.align 1
go1_s773f_info:
	.quad	go1_s773f_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:24.940839032 UTC

.section .text
.align 8
_c779e:
_c779e:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c779i
_c779j:
	leaq block_c779t_info(%rip),%rax
	movq %rax,(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c779t
_c779u:
	movq (%rbx),%rax
	jmp *(%rax)
_c779i:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c779e, .-_c779e


==================== Asm code ====================
2018-03-16 16:02:24.941757404 UTC

.section .data.rel.ro
.align 8
.align 1
block_c779e_info:
	.quad	_c779e
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:02:24.942510798 UTC

.section .text
.align 8
_c779t:
_c779t:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c779D
_c779C:
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c779D:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c779t, .-_c779t


==================== Asm code ====================
2018-03-16 16:02:24.943209645 UTC

.section .data.rel.ro
.align 8
.align 1
block_c779t_info:
	.quad	_c779t
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:02:24.943930672 UTC

.section .text
.align 8
go_s7735_entry:
_c779K:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c779L
_u77a5:
	movq %rbx,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp _c778P
_c779L:
	jmp *-8(%r13)
	.size go_s7735_entry, .-go_s7735_entry


==================== Asm code ====================
2018-03-16 16:02:24.944562646 UTC

.section .data.rel.ro
.align 8
.align 1
go_s7735_info:
	.quad	go_s7735_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S77av_srt


==================== Asm code ====================
2018-03-16 16:02:24.945275108 UTC

.section .text
.align 8
_c778P:
_c778P:
	movq (%rbp),%rax
	movq 7(%rax),%rax
	leaq block_c778S_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c778S
_c778T:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c778P, .-_c778P


==================== Asm code ====================
2018-03-16 16:02:24.946146886 UTC

.section .text
.align 8
_c778S:
_c778S:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c779H
_c779I:
	leaq block_c778Y_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c778Y
_c778Z:
	movq (%rbx),%rax
	jmp *(%rax)
_c779H:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c778S, .-_c778S


==================== Asm code ====================
2018-03-16 16:02:24.946886163 UTC

.section .data.rel.ro
.align 8
.align 1
block_c778S_info:
	.quad	_c778S
	.quad	2
	.quad	4294967326
	.quad	S77av_srt


==================== Asm code ====================
2018-03-16 16:02:24.94761674 UTC

.section .text
.align 8
_c778Y:
_c778Y:
	leaq block_c7793_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq Data.Functor.Const.$fReadConst4_closure(%rip),%rsi
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Base.eqString_entry@gotpcrel(%rip)
	.size _c778Y, .-_c778Y


==================== Asm code ====================
2018-03-16 16:02:24.948258875 UTC

.section .data.rel.ro
.align 8
.align 1
block_c778Y_info:
	.quad	_c778Y
	.quad	3
	.quad	4294967326
	.quad	S77av_srt


==================== Asm code ====================
2018-03-16 16:02:24.949757851 UTC

.section .text
.align 8
_c7793:
_c7793:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c779U
_c779W:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c779Z
_c779Y:
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-40(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq go1_s773f_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq block_c779V_info(%rip),%rax
	movq %rax,24(%rbp)
	movq 32(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rax
	leaq Data.Functor.Const.$fReadConst3_closure+1(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	leaq -7(%r12),%rax
	movq %rax,32(%rbp)
	jmp *GHC.Read.readsPrec_entry@gotpcrel(%rip)
_c779Z:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c779U:
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp _c778P
	.size _c7793, .-_c7793


==================== Asm code ====================
2018-03-16 16:02:24.950555318 UTC

.section .data.rel.ro
.align 8
.align 1
block_c7793_info:
	.quad	_c7793
	.quad	4
	.quad	4294967326
	.quad	S77av_srt


==================== Asm code ====================
2018-03-16 16:02:24.951162705 UTC

.section .text
.align 8
_c779V:
_c779V:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go1_s773f_entry
	.size _c779V, .-_c779V


==================== Asm code ====================
2018-03-16 16:02:24.951736013 UTC

.section .data.rel.ro
.align 8
.align 1
block_c779V_info:
	.quad	_c779V
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:02:24.952480157 UTC

.section .text
.align 8
sat_s773u_entry:
_c77ai:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77aj
_c77ak:
	leaq block_c77ag_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rsi
	movq GHC.Read.lex1_closure@gotpcrel(%rip),%r14
	movq 7(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *Text.ParserCombinators.ReadP.run_entry@gotpcrel(%rip)
_c77aj:
	jmp *-8(%r13)
	.size sat_s773u_entry, .-sat_s773u_entry


==================== Asm code ====================
2018-03-16 16:02:24.95313907 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s773u_info:
	.quad	sat_s773u_entry
	.quad	1
	.quad	12884901897
	.quad	4294967301
	.quad	S77av_srt


==================== Asm code ====================
2018-03-16 16:02:24.953798998 UTC

.section .text
.align 8
_c77ag:
_c77ag:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s7735_entry
	.size _c77ag, .-_c77ag


==================== Asm code ====================
2018-03-16 16:02:24.954404501 UTC

.section .data.rel.ro
.align 8
.align 1
block_c77ag_info:
	.quad	_c77ag
	.quad	1
	.quad	4294967326
	.quad	S77av_srt


==================== Asm code ====================
2018-03-16 16:02:24.955210875 UTC

.section .text
.align 8
.globl Data.Functor.Const.$w$creadsPrec_entry
.type Data.Functor.Const.$w$creadsPrec_entry, @object
Data.Functor.Const.$w$creadsPrec_entry:
_c77aq:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c77au
_c77at:
	leaq go_s7735_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-16(%r12)
	leaq sat_s773u_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -23(%r12),%rax
	movq %rax,(%r12)
	cmpq $10,%rsi
	setg %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rax
	leaq -7(%r12),%rsi
	movq %rax,%r14
	jmp *GHC.Read.readParen_entry@gotpcrel(%rip)
_c77au:
	movq $32,904(%r13)
	leaq Data.Functor.Const.$w$creadsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$w$creadsPrec_entry, .-Data.Functor.Const.$w$creadsPrec_entry


==================== Asm code ====================
2018-03-16 16:02:24.955873953 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$w$creadsPrec_info
.type Data.Functor.Const.$w$creadsPrec_info, @object
Data.Functor.Const.$w$creadsPrec_info:
	.quad	Data.Functor.Const.$w$creadsPrec_entry
	.quad	0
	.quad	64424509454
	.quad	12884901909
	.quad	S77av_srt


==================== Asm code ====================
2018-03-16 16:02:24.959269175 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst_$creadsPrec_closure
.type Data.Functor.Const.$fReadConst_$creadsPrec_closure, @object
Data.Functor.Const.$fReadConst_$creadsPrec_closure:
	.quad	Data.Functor.Const.$fReadConst_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:24.960045977 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fReadConst_$creadsPrec_entry
.type Data.Functor.Const.$fReadConst_$creadsPrec_entry, @object
Data.Functor.Const.$fReadConst_$creadsPrec_entry:
_c77bX:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c77bY
_c77bZ:
	leaq block_c77bU_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c77bU
_c77bV:
	movq (%rbx),%rax
	jmp *(%rax)
_c77bY:
	leaq Data.Functor.Const.$fReadConst_$creadsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fReadConst_$creadsPrec_entry, .-Data.Functor.Const.$fReadConst_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 16:02:24.960706166 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst_$creadsPrec_info
.type Data.Functor.Const.$fReadConst_$creadsPrec_info, @object
Data.Functor.Const.$fReadConst_$creadsPrec_info:
	.quad	Data.Functor.Const.$fReadConst_$creadsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S77av_srt+24


==================== Asm code ====================
2018-03-16 16:02:24.961397393 UTC

.section .text
.align 8
_c77bU:
_c77bU:
	movq 16(%rbp),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp Data.Functor.Const.$w$creadsPrec_entry
	.size _c77bU, .-_c77bU


==================== Asm code ====================
2018-03-16 16:02:24.962013182 UTC

.section .data.rel.ro
.align 8
.align 1
block_c77bU_info:
	.quad	_c77bU
	.quad	2
	.quad	4294967326
	.quad	S77av_srt+24


==================== Asm code ====================
2018-03-16 16:02:24.965636935 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst2_closure
.type Data.Functor.Const.$fReadConst2_closure, @object
Data.Functor.Const.$fReadConst2_closure:
	.quad	Data.Functor.Const.$fReadConst2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:24.966299231 UTC

.section .text
.align 8
sat_s773D_entry:
_c77cn:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Const.$fReadConst_$creadsPrec_entry
	.size sat_s773D_entry, .-sat_s773D_entry


==================== Asm code ====================
2018-03-16 16:02:24.966895501 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s773D_info:
	.quad	sat_s773D_entry
	.quad	2
	.quad	4294967307
	.quad	4294967301
	.quad	S77av_srt+32


==================== Asm code ====================
2018-03-16 16:02:24.967738566 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fReadConst2_entry
.type Data.Functor.Const.$fReadConst2_entry, @object
Data.Functor.Const.$fReadConst2_entry:
_c77ct:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c77cu
_c77cv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c77cx
_c77cw:
	leaq sat_s773D_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq block_c77cq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rdi,%rsi
	leaq -15(%r12),%r14
	addq $-8,%rbp
	jmp *Text.ParserCombinators.ReadP.$wreadS_to_P_entry@gotpcrel(%rip)
_c77cx:
	movq $24,904(%r13)
_c77cu:
	leaq Data.Functor.Const.$fReadConst2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fReadConst2_entry, .-Data.Functor.Const.$fReadConst2_entry


==================== Asm code ====================
2018-03-16 16:02:24.968427068 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst2_info
.type Data.Functor.Const.$fReadConst2_info, @object
Data.Functor.Const.$fReadConst2_info:
	.quad	Data.Functor.Const.$fReadConst2_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S77av_srt+32


==================== Asm code ====================
2018-03-16 16:02:24.969143151 UTC

.section .text
.align 8
_c77cq:
_c77cq:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c77cA
_c77cz:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c77cA:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c77cq, .-_c77cq


==================== Asm code ====================
2018-03-16 16:02:24.969852288 UTC

.section .data.rel.ro
.align 8
.align 1
block_c77cq_info:
	.quad	_c77cq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:02:24.97150051 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst5_closure
.type Data.Functor.Const.$fFoldableConst5_closure, @object
Data.Functor.Const.$fFoldableConst5_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:24.975838897 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst_$creadList_closure
.type Data.Functor.Const.$fReadConst_$creadList_closure, @object
Data.Functor.Const.$fReadConst_$creadList_closure:
	.quad	Data.Functor.Const.$fReadConst_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:24.976523274 UTC

.section .text
.align 8
sat_s773H_entry:
_c77d4:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Const.$fReadConst2_entry
	.size sat_s773H_entry, .-sat_s773H_entry


==================== Asm code ====================
2018-03-16 16:02:24.977097362 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s773H_info:
	.quad	sat_s773H_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S77av_srt+40


==================== Asm code ====================
2018-03-16 16:02:24.978004323 UTC

.section .text
.align 8
sat_s773I_entry:
_c77d7:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c77d8
_c77d9:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c77db
_c77da:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq sat_s773H_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq Data.Functor.Const.$fFoldableConst5_closure+1(%rip),%rax
	movq %rax,-32(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Read.list_entry@gotpcrel(%rip)
_c77db:
	movq $16,904(%r13)
_c77d8:
	jmp *-16(%r13)
	.size sat_s773I_entry, .-sat_s773I_entry


==================== Asm code ====================
2018-03-16 16:02:24.978791879 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s773I_info:
	.quad	sat_s773I_entry
	.quad	1
	.quad	12884901904
	.quad	S77av_srt+40


==================== Asm code ====================
2018-03-16 16:02:24.979569876 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fReadConst_$creadList_entry
.type Data.Functor.Const.$fReadConst_$creadList_entry, @object
Data.Functor.Const.$fReadConst_$creadList_entry:
_c77dc:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c77dg
_c77df:
	leaq sat_s773I_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	movq Text.ParserCombinators.ReadP.run_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c77dg:
	movq $24,904(%r13)
	leaq Data.Functor.Const.$fReadConst_$creadList_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fReadConst_$creadList_entry, .-Data.Functor.Const.$fReadConst_$creadList_entry


==================== Asm code ====================
2018-03-16 16:02:24.98026416 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst_$creadList_info
.type Data.Functor.Const.$fReadConst_$creadList_info, @object
Data.Functor.Const.$fReadConst_$creadList_info:
	.quad	Data.Functor.Const.$fReadConst_$creadList_entry
	.quad	0
	.quad	30064771086
	.quad	4294967301
	.quad	S77av_srt+40


==================== Asm code ====================
2018-03-16 16:02:24.986643811 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$w$creadListPrec_closure
.type Data.Functor.Const.$w$creadListPrec_closure, @object
Data.Functor.Const.$w$creadListPrec_closure:
	.quad	Data.Functor.Const.$w$creadListPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:24.987335248 UTC

.section .text
.align 8
sat_s773L_entry:
_c77dN:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Const.$fReadConst2_entry
	.size sat_s773L_entry, .-sat_s773L_entry


==================== Asm code ====================
2018-03-16 16:02:24.987898916 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s773L_info:
	.quad	sat_s773L_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S77av_srt+40


==================== Asm code ====================
2018-03-16 16:02:24.988751362 UTC

.section .text
.align 8
w1_s773K_entry:
_c77dQ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c77dR
_c77dS:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c77dU
_c77dT:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq sat_s773L_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq Data.Functor.Const.$fFoldableConst5_closure+1(%rip),%rax
	movq %rax,-32(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Read.list_entry@gotpcrel(%rip)
_c77dU:
	movq $16,904(%r13)
_c77dR:
	jmp *-16(%r13)
	.size w1_s773K_entry, .-w1_s773K_entry


==================== Asm code ====================
2018-03-16 16:02:24.989511255 UTC

.section .data.rel.ro
.align 8
.align 1
w1_s773K_info:
	.quad	w1_s773K_entry
	.quad	1
	.quad	12884901904
	.quad	S77av_srt+40


==================== Asm code ====================
2018-03-16 16:02:24.990084386 UTC

.section .text
.align 8
w2_s773M_entry:
_c77e0:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp *Text.ParserCombinators.ReadP.run_entry@gotpcrel(%rip)
	.size w2_s773M_entry, .-w2_s773M_entry


==================== Asm code ====================
2018-03-16 16:02:24.990659883 UTC

.section .data.rel.ro
.align 8
.align 1
w2_s773M_info:
	.quad	w2_s773M_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:24.991355096 UTC

.section .text
.align 8
sat_s773Q_entry:
_c77eb:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c77ec
_c77ed:
	leaq block_c77e8_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rsi
	movq 7(%rbx),%r14
	addq $-8,%rbp
	jmp *Text.ParserCombinators.ReadP.$wreadS_to_P_entry@gotpcrel(%rip)
_c77ec:
	jmp *-8(%r13)
	.size sat_s773Q_entry, .-sat_s773Q_entry


==================== Asm code ====================
2018-03-16 16:02:24.991964551 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s773Q_info:
	.quad	sat_s773Q_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:24.992652408 UTC

.section .text
.align 8
_c77e8:
_c77e8:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c77eg
_c77ef:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c77eg:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c77e8, .-_c77e8


==================== Asm code ====================
2018-03-16 16:02:24.993295199 UTC

.section .data.rel.ro
.align 8
.align 1
block_c77e8_info:
	.quad	_c77e8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:02:24.994050701 UTC

.section .text
.align 8
.globl Data.Functor.Const.$w$creadListPrec_entry
.type Data.Functor.Const.$w$creadListPrec_entry, @object
Data.Functor.Const.$w$creadListPrec_entry:
_c77eh:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c77el
_c77ek:
	leaq w1_s773K_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-32(%r12)
	leaq w2_s773M_info(%rip),%rax
	movq %rax,-24(%r12)
	leaq -48(%r12),%rax
	movq %rax,-16(%r12)
	leaq sat_s773Q_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -23(%r12),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c77el:
	movq $56,904(%r13)
	leaq Data.Functor.Const.$w$creadListPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$w$creadListPrec_entry, .-Data.Functor.Const.$w$creadListPrec_entry


==================== Asm code ====================
2018-03-16 16:02:24.994757503 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$w$creadListPrec_info
.type Data.Functor.Const.$w$creadListPrec_info, @object
Data.Functor.Const.$w$creadListPrec_info:
	.quad	Data.Functor.Const.$w$creadListPrec_entry
	.quad	0
	.quad	47244640270
	.quad	4294967301
	.quad	S77av_srt+40


==================== Asm code ====================
2018-03-16 16:02:24.99693695 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst1_closure
.type Data.Functor.Const.$fReadConst1_closure, @object
Data.Functor.Const.$fReadConst1_closure:
	.quad	Data.Functor.Const.$fReadConst1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:24.997568471 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fReadConst1_entry
.type Data.Functor.Const.$fReadConst1_entry, @object
Data.Functor.Const.$fReadConst1_entry:
_c77f0:
	jmp Data.Functor.Const.$w$creadListPrec_entry
	.size Data.Functor.Const.$fReadConst1_entry, .-Data.Functor.Const.$fReadConst1_entry


==================== Asm code ====================
2018-03-16 16:02:24.998133348 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst1_info
.type Data.Functor.Const.$fReadConst1_info, @object
Data.Functor.Const.$fReadConst1_info:
	.quad	Data.Functor.Const.$fReadConst1_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S77av_srt+64


==================== Asm code ====================
2018-03-16 16:02:25.003189713 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst_closure
.type Data.Functor.Const.$fReadConst_closure, @object
Data.Functor.Const.$fReadConst_closure:
	.quad	Data.Functor.Const.$fReadConst_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:25.003922058 UTC

.section .text
.align 8
lvl_s773U_entry:
_c77ff:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77fg
_c77fh:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$w$creadListPrec_entry
_c77fg:
	jmp *-16(%r13)
	.size lvl_s773U_entry, .-lvl_s773U_entry


==================== Asm code ====================
2018-03-16 16:02:25.004546566 UTC

.section .data.rel.ro
.align 8
.align 1
lvl_s773U_info:
	.quad	lvl_s773U_entry
	.quad	1
	.quad	4294967312
	.quad	S77av_srt+64


==================== Asm code ====================
2018-03-16 16:02:25.005175953 UTC

.section .text
.align 8
sat_s773Z_entry:
_c77fn:
	movq 7(%rbx),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size sat_s773Z_entry, .-sat_s773Z_entry


==================== Asm code ====================
2018-03-16 16:02:25.005782598 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s773Z_info:
	.quad	sat_s773Z_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.006434908 UTC

.section .text
.align 8
sat_s773X_entry:
_c77fv:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Const.$fReadConst2_entry
	.size sat_s773X_entry, .-sat_s773X_entry


==================== Asm code ====================
2018-03-16 16:02:25.007015899 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s773X_info:
	.quad	sat_s773X_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S77av_srt+40


==================== Asm code ====================
2018-03-16 16:02:25.007711805 UTC

.section .text
.align 8
sat_s773W_entry:
_c77fC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77fD
_c77fE:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fReadConst_$creadList_entry
_c77fD:
	jmp *-16(%r13)
	.size sat_s773W_entry, .-sat_s773W_entry


==================== Asm code ====================
2018-03-16 16:02:25.008306278 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s773W_info:
	.quad	sat_s773W_entry
	.quad	1
	.quad	4294967312
	.quad	S77av_srt+56


==================== Asm code ====================
2018-03-16 16:02:25.008959503 UTC

.section .text
.align 8
sat_s773V_entry:
_c77fK:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Const.$fReadConst_$creadsPrec_entry
	.size sat_s773V_entry, .-sat_s773V_entry


==================== Asm code ====================
2018-03-16 16:02:25.009560065 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s773V_info:
	.quad	sat_s773V_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S77av_srt+32


==================== Asm code ====================
2018-03-16 16:02:25.010381099 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fReadConst_entry
.type Data.Functor.Const.$fReadConst_entry, @object
Data.Functor.Const.$fReadConst_entry:
_c77fO:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _c77fS
_c77fR:
	leaq lvl_s773U_info(%rip),%rax
	movq %rax,-128(%r12)
	movq %r14,-112(%r12)
	leaq sat_s773Z_info(%rip),%rax
	movq %rax,-104(%r12)
	leaq -128(%r12),%rax
	movq %rax,-96(%r12)
	leaq sat_s773X_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %r14,-80(%r12)
	leaq sat_s773W_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-56(%r12)
	leaq sat_s773V_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq GHC.Read.C:Read_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq -46(%r12),%rax
	movq %rax,-24(%r12)
	leaq -72(%r12),%rax
	movq %rax,-16(%r12)
	leaq -86(%r12),%rax
	movq %rax,-8(%r12)
	leaq -103(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c77fS:
	movq $136,904(%r13)
	leaq Data.Functor.Const.$fReadConst_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fReadConst_entry, .-Data.Functor.Const.$fReadConst_entry


==================== Asm code ====================
2018-03-16 16:02:25.011207181 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fReadConst_info
.type Data.Functor.Const.$fReadConst_info, @object
Data.Functor.Const.$fReadConst_info:
	.quad	Data.Functor.Const.$fReadConst_entry
	.quad	0
	.quad	253403070478
	.quad	4294967301
	.quad	S77av_srt+32


==================== Asm code ====================
2018-03-16 16:02:25.013022168 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Const.$fShowConst2_bytes
.type Data.Functor.Const.$fShowConst2_bytes, @object
Data.Functor.Const.$fShowConst2_bytes:
	.asciz "Const "


==================== Asm code ====================
2018-03-16 16:02:25.015814496 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fShowConst1_closure
.type Data.Functor.Const.$fShowConst1_closure, @object
Data.Functor.Const.$fShowConst1_closure:
	.quad	Data.Functor.Const.$fShowConst1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:25.017764151 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fShowConst1_entry
.type Data.Functor.Const.$fShowConst1_entry, @object
Data.Functor.Const.$fShowConst1_entry:
_c77gz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77gA
_c77gB:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c77gy
_c77gx:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Data.Functor.Const.$fShowConst2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c77gA:
	jmp *-16(%r13)
_c77gy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Const.$fShowConst1_entry, .-Data.Functor.Const.$fShowConst1_entry


==================== Asm code ====================
2018-03-16 16:02:25.018474483 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fShowConst1_info
.type Data.Functor.Const.$fShowConst1_info, @object
Data.Functor.Const.$fShowConst1_info:
	.quad	Data.Functor.Const.$fShowConst1_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:02:25.025058431 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$w$cshowsPrec_closure
.type Data.Functor.Const.$w$cshowsPrec_closure, @object
Data.Functor.Const.$w$cshowsPrec_closure:
	.quad	Data.Functor.Const.$w$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:25.025927867 UTC

.section .text
.align 8
g_s7743_entry:
_c77gS:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c77gT
_c77gU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq Data.Functor.Const.$fReadConst3_closure+1(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Show.showsPrec_entry@gotpcrel(%rip)
_c77gT:
	jmp *-16(%r13)
	.size g_s7743_entry, .-g_s7743_entry


==================== Asm code ====================
2018-03-16 16:02:25.026624477 UTC

.section .data.rel.ro
.align 8
.align 1
g_s7743_info:
	.quad	g_s7743_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:02:25.027239435 UTC

.section .text
.align 8
sat_s7746_entry:
_c77h7:
	movq 24(%rbx),%r14
	movq 16(%rbx),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size sat_s7746_entry, .-sat_s7746_entry


==================== Asm code ====================
2018-03-16 16:02:25.027802641 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7746_info:
	.quad	sat_s7746_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:02:25.028543543 UTC

.section .text
.align 8
sat_s7747_entry:
_c77ha:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c77he
_c77hd:
	movq 7(%rbx),%rax
	leaq sat_s7746_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -24(%r12),%rsi
	leaq Data.Functor.Const.$fShowConst1_closure(%rip),%r14
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c77he:
	movq $32,904(%r13)
	jmp *-8(%r13)
	.size sat_s7747_entry, .-sat_s7747_entry


==================== Asm code ====================
2018-03-16 16:02:25.029183494 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7747_info:
	.quad	sat_s7747_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S77av_srt+80


==================== Asm code ====================
2018-03-16 16:02:25.030455717 UTC

.section .text
.align 8
sat_s774a_entry:
_c77hu:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c77hy
_c77hx:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq GHC.Show.$fShow(,)2_closure@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%r14
	movq %rax,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c77hy:
	movq $24,904(%r13)
	jmp *-16(%r13)
	.size sat_s774a_entry, .-sat_s774a_entry


==================== Asm code ====================
2018-03-16 16:02:25.031134989 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s774a_info:
	.quad	sat_s774a_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:02:25.031950231 UTC

.section .text
.align 8
sat_s774b_entry:
_c77hz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77hA
_c77hB:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c77hD
_c77hC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s774a_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	leaq Data.Functor.Const.$fShowConst1_closure(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c77hD:
	movq $32,904(%r13)
_c77hA:
	jmp *-16(%r13)
	.size sat_s774b_entry, .-sat_s774b_entry


==================== Asm code ====================
2018-03-16 16:02:25.032700086 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s774b_info:
	.quad	sat_s774b_entry
	.quad	2
	.quad	4294967314
	.quad	S77av_srt+80


==================== Asm code ====================
2018-03-16 16:02:25.033492952 UTC

.section .text
.align 8
sat_s774c_entry:
_c77hF:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c77hJ
_c77hI:
	movq 7(%rbx),%rax
	leaq sat_s774b_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Show.$fShow(,)4_closure@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c77hJ:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size sat_s774c_entry, .-sat_s774c_entry


==================== Asm code ====================
2018-03-16 16:02:25.03414857 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s774c_info:
	.quad	sat_s774c_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S77av_srt+80


==================== Asm code ====================
2018-03-16 16:02:25.034965046 UTC

.section .text
.align 8
.globl Data.Functor.Const.$w$cshowsPrec_entry
.type Data.Functor.Const.$w$cshowsPrec_entry, @object
Data.Functor.Const.$w$cshowsPrec_entry:
_c77hN:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c77hR
_c77hQ:
	leaq g_s7743_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq %rdi,-16(%r12)
	leaq -40(%r12),%rax
	cmpq $10,%rsi
	jle _c77hL
_c77hM:
	leaq sat_s774c_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c77hR:
	movq $48,904(%r13)
	leaq Data.Functor.Const.$w$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
_c77hL:
	leaq sat_s7747_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size Data.Functor.Const.$w$cshowsPrec_entry, .-Data.Functor.Const.$w$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:02:25.035637113 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$w$cshowsPrec_info
.type Data.Functor.Const.$w$cshowsPrec_info, @object
Data.Functor.Const.$w$cshowsPrec_info:
	.quad	Data.Functor.Const.$w$cshowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	12884901909
	.quad	S77av_srt+80


==================== Asm code ====================
2018-03-16 16:02:25.038843146 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fShowConst_$cshowsPrec_closure
.type Data.Functor.Const.$fShowConst_$cshowsPrec_closure, @object
Data.Functor.Const.$fShowConst_$cshowsPrec_closure:
	.quad	Data.Functor.Const.$fShowConst_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:25.039619203 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fShowConst_$cshowsPrec_entry
.type Data.Functor.Const.$fShowConst_$cshowsPrec_entry, @object
Data.Functor.Const.$fShowConst_$cshowsPrec_entry:
_c77iG:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c77iH
_c77iI:
	leaq block_c77iD_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c77iD
_c77iE:
	movq (%rbx),%rax
	jmp *(%rax)
_c77iH:
	leaq Data.Functor.Const.$fShowConst_$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fShowConst_$cshowsPrec_entry, .-Data.Functor.Const.$fShowConst_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:02:25.040308473 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fShowConst_$cshowsPrec_info
.type Data.Functor.Const.$fShowConst_$cshowsPrec_info, @object
Data.Functor.Const.$fShowConst_$cshowsPrec_info:
	.quad	Data.Functor.Const.$fShowConst_$cshowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S77av_srt+88


==================== Asm code ====================
2018-03-16 16:02:25.040966292 UTC

.section .text
.align 8
_c77iD:
_c77iD:
	movq 16(%rbp),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp Data.Functor.Const.$w$cshowsPrec_entry
	.size _c77iD, .-_c77iD


==================== Asm code ====================
2018-03-16 16:02:25.041576352 UTC

.section .data.rel.ro
.align 8
.align 1
block_c77iD_info:
	.quad	_c77iD
	.quad	2
	.quad	4294967326
	.quad	S77av_srt+88


==================== Asm code ====================
2018-03-16 16:02:25.044682187 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fShowConst_$cshow_closure
.type Data.Functor.Const.$fShowConst_$cshow_closure, @object
Data.Functor.Const.$fShowConst_$cshow_closure:
	.quad	Data.Functor.Const.$fShowConst_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:25.045529178 UTC

.section .text
.align 8
sat_s774k_entry:
_c77j5:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c77j6
_c77j7:
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq Data.Functor.Const.$fReadConst3_closure+1(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-16(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp *GHC.Show.showsPrec_entry@gotpcrel(%rip)
_c77j6:
	jmp *-16(%r13)
	.size sat_s774k_entry, .-sat_s774k_entry


==================== Asm code ====================
2018-03-16 16:02:25.046239868 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s774k_info:
	.quad	sat_s774k_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:02:25.047043644 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fShowConst_$cshow_entry
.type Data.Functor.Const.$fShowConst_$cshow_entry, @object
Data.Functor.Const.$fShowConst_$cshow_entry:
_c77j8:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c77jc
_c77jb:
	leaq sat_s774k_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%rsi
	leaq Data.Functor.Const.$fShowConst1_closure(%rip),%r14
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c77jc:
	movq $32,904(%r13)
	leaq Data.Functor.Const.$fShowConst_$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fShowConst_$cshow_entry, .-Data.Functor.Const.$fShowConst_$cshow_entry


==================== Asm code ====================
2018-03-16 16:02:25.047780746 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fShowConst_$cshow_info
.type Data.Functor.Const.$fShowConst_$cshow_info, @object
Data.Functor.Const.$fShowConst_$cshow_info:
	.quad	Data.Functor.Const.$fShowConst_$cshow_entry
	.quad	0
	.quad	38654705678
	.quad	8589934607
	.quad	S77av_srt+80


==================== Asm code ====================
2018-03-16 16:02:25.05170024 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fShowConst_$cshowList_closure
.type Data.Functor.Const.$fShowConst_$cshowList_closure, @object
Data.Functor.Const.$fShowConst_$cshowList_closure:
	.quad	Data.Functor.Const.$fShowConst_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:25.052333561 UTC

.section .text
.align 8
sat_s774p_entry:
_c77jA:
	movq %r14,%rdi
	xorl %esi,%esi
	movq 7(%rbx),%r14
	jmp Data.Functor.Const.$w$cshowsPrec_entry
	.size sat_s774p_entry, .-sat_s774p_entry


==================== Asm code ====================
2018-03-16 16:02:25.052908149 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s774p_info:
	.quad	sat_s774p_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S77av_srt+88


==================== Asm code ====================
2018-03-16 16:02:25.053691651 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fShowConst_$cshowList_entry
.type Data.Functor.Const.$fShowConst_$cshowList_entry, @object
Data.Functor.Const.$fShowConst_$cshowList_entry:
_c77jD:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c77jH
_c77jG:
	leaq sat_s774p_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%r14
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
_c77jH:
	movq $16,904(%r13)
	leaq Data.Functor.Const.$fShowConst_$cshowList_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fShowConst_$cshowList_entry, .-Data.Functor.Const.$fShowConst_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:02:25.05437259 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fShowConst_$cshowList_info
.type Data.Functor.Const.$fShowConst_$cshowList_info, @object
Data.Functor.Const.$fShowConst_$cshowList_info:
	.quad	Data.Functor.Const.$fShowConst_$cshowList_entry
	.quad	0
	.quad	38654705678
	.quad	12884901911
	.quad	S77av_srt+88


==================== Asm code ====================
2018-03-16 16:02:25.058210087 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fShowConst_closure
.type Data.Functor.Const.$fShowConst_closure, @object
Data.Functor.Const.$fShowConst_closure:
	.quad	Data.Functor.Const.$fShowConst_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:25.058888912 UTC

.section .text
.align 8
sat_s774t_entry:
_c77jZ:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Const.$fShowConst_$cshowList_entry
	.size sat_s774t_entry, .-sat_s774t_entry


==================== Asm code ====================
2018-03-16 16:02:25.059424956 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s774t_info:
	.quad	sat_s774t_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S77av_srt+112


==================== Asm code ====================
2018-03-16 16:02:25.060042267 UTC

.section .text
.align 8
sat_s774s_entry:
_c77k7:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp Data.Functor.Const.$fShowConst_$cshow_entry
	.size sat_s774s_entry, .-sat_s774s_entry


==================== Asm code ====================
2018-03-16 16:02:25.060600544 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s774s_info:
	.quad	sat_s774s_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S77av_srt+104


==================== Asm code ====================
2018-03-16 16:02:25.061195712 UTC

.section .text
.align 8
sat_s774r_entry:
_c77kf:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp Data.Functor.Const.$fShowConst_$cshowsPrec_entry
	.size sat_s774r_entry, .-sat_s774r_entry


==================== Asm code ====================
2018-03-16 16:02:25.061805749 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s774r_info:
	.quad	sat_s774r_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S77av_srt+96


==================== Asm code ====================
2018-03-16 16:02:25.062620419 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fShowConst_entry
.type Data.Functor.Const.$fShowConst_entry, @object
Data.Functor.Const.$fShowConst_entry:
_c77kj:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c77kn
_c77km:
	leaq sat_s774t_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-64(%r12)
	leaq sat_s774s_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_s774r_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-32(%r12)
	movq GHC.Show.C:Show_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq -38(%r12),%rax
	movq %rax,-16(%r12)
	leaq -55(%r12),%rax
	movq %rax,-8(%r12)
	leaq -70(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c77kn:
	movq $80,904(%r13)
	leaq Data.Functor.Const.$fShowConst_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fShowConst_entry, .-Data.Functor.Const.$fShowConst_entry


==================== Asm code ====================
2018-03-16 16:02:25.063337567 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fShowConst_info
.type Data.Functor.Const.$fShowConst_info, @object
Data.Functor.Const.$fShowConst_info:
	.quad	Data.Functor.Const.$fShowConst_entry
	.quad	0
	.quad	64424509454
	.quad	4294967301
	.quad	S77av_srt+96


==================== Asm code ====================
2018-03-16 16:02:25.066091486 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfoldMap_closure
.type Data.Functor.Const.$fFoldableConst_$cfoldMap_closure, @object
Data.Functor.Const.$fFoldableConst_$cfoldMap_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldMap_info


==================== Asm code ====================
2018-03-16 16:02:25.066749474 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$cfoldMap_entry
.type Data.Functor.Const.$fFoldableConst_$cfoldMap_entry, @object
Data.Functor.Const.$fFoldableConst_$cfoldMap_entry:
_c77kN:
	jmp *GHC.Base.mempty_entry@gotpcrel(%rip)
	.size Data.Functor.Const.$fFoldableConst_$cfoldMap_entry, .-Data.Functor.Const.$fFoldableConst_$cfoldMap_entry


==================== Asm code ====================
2018-03-16 16:02:25.06734094 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfoldMap_info
.type Data.Functor.Const.$fFoldableConst_$cfoldMap_info, @object
Data.Functor.Const.$fFoldableConst_$cfoldMap_info:
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldMap_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:02:25.069376068 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfold_closure
.type Data.Functor.Const.$fFoldableConst_$cfold_closure, @object
Data.Functor.Const.$fFoldableConst_$cfold_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$cfold_info


==================== Asm code ====================
2018-03-16 16:02:25.069997029 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$cfold_entry
.type Data.Functor.Const.$fFoldableConst_$cfold_entry, @object
Data.Functor.Const.$fFoldableConst_$cfold_entry:
_c77kY:
	jmp *GHC.Base.mempty_entry@gotpcrel(%rip)
	.size Data.Functor.Const.$fFoldableConst_$cfold_entry, .-Data.Functor.Const.$fFoldableConst_$cfold_entry


==================== Asm code ====================
2018-03-16 16:02:25.070598807 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfold_info
.type Data.Functor.Const.$fFoldableConst_$cfold_info, @object
Data.Functor.Const.$fFoldableConst_$cfold_info:
	.quad	Data.Functor.Const.$fFoldableConst_$cfold_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:02:25.072682431 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$csum_closure
.type Data.Functor.Const.$fFoldableConst_$csum_closure, @object
Data.Functor.Const.$fFoldableConst_$csum_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$csum_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:25.07337585 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$csum_entry
.type Data.Functor.Const.$fFoldableConst_$csum_entry, @object
Data.Functor.Const.$fFoldableConst_$csum_entry:
_c77l9:
	jmp *Data.Semigroup.Internal.$fMonoidSum2_entry@gotpcrel(%rip)
	.size Data.Functor.Const.$fFoldableConst_$csum_entry, .-Data.Functor.Const.$fFoldableConst_$csum_entry


==================== Asm code ====================
2018-03-16 16:02:25.07397923 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$csum_info
.type Data.Functor.Const.$fFoldableConst_$csum_info, @object
Data.Functor.Const.$fFoldableConst_$csum_info:
	.quad	Data.Functor.Const.$fFoldableConst_$csum_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S77av_srt+128


==================== Asm code ====================
2018-03-16 16:02:25.075618057 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Const.$fFoldableConst2_bytes
.type Data.Functor.Const.$fFoldableConst2_bytes, @object
Data.Functor.Const.$fFoldableConst2_bytes:
	.asciz "minimum: empty structure"


==================== Asm code ====================
2018-03-16 16:02:25.079032057 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst1_closure
.type Data.Functor.Const.$fFoldableConst1_closure, @object
Data.Functor.Const.$fFoldableConst1_closure:
	.quad	Data.Functor.Const.$fFoldableConst1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:25.079988537 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst1_entry
.type Data.Functor.Const.$fFoldableConst1_entry, @object
Data.Functor.Const.$fFoldableConst1_entry:
_c77ln:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77lo
_c77lp:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c77lm
_c77ll:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Data.Functor.Const.$fFoldableConst2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c77lo:
	jmp *-16(%r13)
_c77lm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Const.$fFoldableConst1_entry, .-Data.Functor.Const.$fFoldableConst1_entry


==================== Asm code ====================
2018-03-16 16:02:25.080768676 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst1_info
.type Data.Functor.Const.$fFoldableConst1_info, @object
Data.Functor.Const.$fFoldableConst1_info:
	.quad	Data.Functor.Const.$fFoldableConst1_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:02:25.083536051 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cminimum_closure
.type Data.Functor.Const.$fFoldableConst_$cminimum_closure, @object
Data.Functor.Const.$fFoldableConst_$cminimum_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$cminimum_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:25.08473402 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$cminimum_entry
.type Data.Functor.Const.$fFoldableConst_$cminimum_entry, @object
Data.Functor.Const.$fFoldableConst_$cminimum_entry:
_c77lC:
	leaq Data.Functor.Const.$fFoldableConst1_closure(%rip),%r14
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size Data.Functor.Const.$fFoldableConst_$cminimum_entry, .-Data.Functor.Const.$fFoldableConst_$cminimum_entry


==================== Asm code ====================
2018-03-16 16:02:25.085356296 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cminimum_info
.type Data.Functor.Const.$fFoldableConst_$cminimum_info, @object
Data.Functor.Const.$fFoldableConst_$cminimum_info:
	.quad	Data.Functor.Const.$fFoldableConst_$cminimum_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S77av_srt+136


==================== Asm code ====================
2018-03-16 16:02:25.087033692 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Const.$fFoldableConst4_bytes
.type Data.Functor.Const.$fFoldableConst4_bytes, @object
Data.Functor.Const.$fFoldableConst4_bytes:
	.asciz "maximum: empty structure"


==================== Asm code ====================
2018-03-16 16:02:25.089452867 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst3_closure
.type Data.Functor.Const.$fFoldableConst3_closure, @object
Data.Functor.Const.$fFoldableConst3_closure:
	.quad	Data.Functor.Const.$fFoldableConst3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:25.090298297 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst3_entry
.type Data.Functor.Const.$fFoldableConst3_entry, @object
Data.Functor.Const.$fFoldableConst3_entry:
_c77lQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77lR
_c77lS:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c77lP
_c77lO:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Data.Functor.Const.$fFoldableConst4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c77lR:
	jmp *-16(%r13)
_c77lP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Const.$fFoldableConst3_entry, .-Data.Functor.Const.$fFoldableConst3_entry


==================== Asm code ====================
2018-03-16 16:02:25.091022372 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst3_info
.type Data.Functor.Const.$fFoldableConst3_info, @object
Data.Functor.Const.$fFoldableConst3_info:
	.quad	Data.Functor.Const.$fFoldableConst3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:02:25.093167525 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cmaximum_closure
.type Data.Functor.Const.$fFoldableConst_$cmaximum_closure, @object
Data.Functor.Const.$fFoldableConst_$cmaximum_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$cmaximum_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:25.094292559 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$cmaximum_entry
.type Data.Functor.Const.$fFoldableConst_$cmaximum_entry, @object
Data.Functor.Const.$fFoldableConst_$cmaximum_entry:
_c77m5:
	leaq Data.Functor.Const.$fFoldableConst3_closure(%rip),%r14
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size Data.Functor.Const.$fFoldableConst_$cmaximum_entry, .-Data.Functor.Const.$fFoldableConst_$cmaximum_entry


==================== Asm code ====================
2018-03-16 16:02:25.09492824 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cmaximum_info
.type Data.Functor.Const.$fFoldableConst_$cmaximum_info, @object
Data.Functor.Const.$fFoldableConst_$cmaximum_info:
	.quad	Data.Functor.Const.$fFoldableConst_$cmaximum_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S77av_srt+136


==================== Asm code ====================
2018-03-16 16:02:25.09706951 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$celem_closure
.type Data.Functor.Const.$fFoldableConst_$celem_closure, @object
Data.Functor.Const.$fFoldableConst_$celem_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$celem_info


==================== Asm code ====================
2018-03-16 16:02:25.097739094 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$celem_entry
.type Data.Functor.Const.$fFoldableConst_$celem_entry, @object
Data.Functor.Const.$fFoldableConst_$celem_entry:
_c77mg:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size Data.Functor.Const.$fFoldableConst_$celem_entry, .-Data.Functor.Const.$fFoldableConst_$celem_entry


==================== Asm code ====================
2018-03-16 16:02:25.098361085 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$celem_info
.type Data.Functor.Const.$fFoldableConst_$celem_info, @object
Data.Functor.Const.$fFoldableConst_$celem_info:
	.quad	Data.Functor.Const.$fFoldableConst_$celem_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:02:25.100389178 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfoldl_closure
.type Data.Functor.Const.$fFoldableConst_$cfoldl_closure, @object
Data.Functor.Const.$fFoldableConst_$cfoldl_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldl_info


==================== Asm code ====================
2018-03-16 16:02:25.101006157 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$cfoldl_entry
.type Data.Functor.Const.$fFoldableConst_$cfoldl_entry, @object
Data.Functor.Const.$fFoldableConst_$cfoldl_entry:
_c77mt:
	movq %rsi,%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size Data.Functor.Const.$fFoldableConst_$cfoldl_entry, .-Data.Functor.Const.$fFoldableConst_$cfoldl_entry


==================== Asm code ====================
2018-03-16 16:02:25.101642812 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfoldl_info
.type Data.Functor.Const.$fFoldableConst_$cfoldl_info, @object
Data.Functor.Const.$fFoldableConst_$cfoldl_info:
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldl_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:02:25.103387817 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Const.$fFoldableConst7_bytes
.type Data.Functor.Const.$fFoldableConst7_bytes, @object
Data.Functor.Const.$fFoldableConst7_bytes:
	.asciz "foldl1: empty structure"


==================== Asm code ====================
2018-03-16 16:02:25.106330212 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst6_closure
.type Data.Functor.Const.$fFoldableConst6_closure, @object
Data.Functor.Const.$fFoldableConst6_closure:
	.quad	Data.Functor.Const.$fFoldableConst6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:25.107196411 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst6_entry
.type Data.Functor.Const.$fFoldableConst6_entry, @object
Data.Functor.Const.$fFoldableConst6_entry:
_c77mH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77mI
_c77mJ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c77mG
_c77mF:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Data.Functor.Const.$fFoldableConst7_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c77mI:
	jmp *-16(%r13)
_c77mG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Const.$fFoldableConst6_entry, .-Data.Functor.Const.$fFoldableConst6_entry


==================== Asm code ====================
2018-03-16 16:02:25.107930384 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst6_info
.type Data.Functor.Const.$fFoldableConst6_info, @object
Data.Functor.Const.$fFoldableConst6_info:
	.quad	Data.Functor.Const.$fFoldableConst6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:02:25.110044374 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfoldl1_closure
.type Data.Functor.Const.$fFoldableConst_$cfoldl1_closure, @object
Data.Functor.Const.$fFoldableConst_$cfoldl1_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldl1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:25.110669206 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$cfoldl1_entry
.type Data.Functor.Const.$fFoldableConst_$cfoldl1_entry, @object
Data.Functor.Const.$fFoldableConst_$cfoldl1_entry:
_c77mW:
	leaq Data.Functor.Const.$fFoldableConst6_closure(%rip),%r14
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size Data.Functor.Const.$fFoldableConst_$cfoldl1_entry, .-Data.Functor.Const.$fFoldableConst_$cfoldl1_entry


==================== Asm code ====================
2018-03-16 16:02:25.111275553 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfoldl1_info
.type Data.Functor.Const.$fFoldableConst_$cfoldl1_info, @object
Data.Functor.Const.$fFoldableConst_$cfoldl1_info:
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldl1_entry
	.quad	0
	.quad	38654705678
	.quad	8589934607
	.quad	S77av_srt+136


==================== Asm code ====================
2018-03-16 16:02:25.113573643 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfoldr'_closure
.type Data.Functor.Const.$fFoldableConst_$cfoldr'_closure, @object
Data.Functor.Const.$fFoldableConst_$cfoldr'_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldr'_info


==================== Asm code ====================
2018-03-16 16:02:25.114272029 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$cfoldr'_entry
.type Data.Functor.Const.$fFoldableConst_$cfoldr'_entry, @object
Data.Functor.Const.$fFoldableConst_$cfoldr'_entry:
_c77n7:
	movq %rsi,%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size Data.Functor.Const.$fFoldableConst_$cfoldr'_entry, .-Data.Functor.Const.$fFoldableConst_$cfoldr'_entry


==================== Asm code ====================
2018-03-16 16:02:25.114889037 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfoldr'_info
.type Data.Functor.Const.$fFoldableConst_$cfoldr'_info, @object
Data.Functor.Const.$fFoldableConst_$cfoldr'_info:
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldr'_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:02:25.117491485 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$clength_closure
.type Data.Functor.Const.$fFoldableConst_$clength_closure, @object
Data.Functor.Const.$fFoldableConst_$clength_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$clength_info


==================== Asm code ====================
2018-03-16 16:02:25.118127073 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$clength_entry
.type Data.Functor.Const.$fFoldableConst_$clength_entry, @object
Data.Functor.Const.$fFoldableConst_$clength_entry:
_c77ni:
	leaq Data.Functor.Const.$fFoldableConst5_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size Data.Functor.Const.$fFoldableConst_$clength_entry, .-Data.Functor.Const.$fFoldableConst_$clength_entry


==================== Asm code ====================
2018-03-16 16:02:25.118732083 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$clength_info
.type Data.Functor.Const.$fFoldableConst_$clength_info, @object
Data.Functor.Const.$fFoldableConst_$clength_info:
	.quad	Data.Functor.Const.$fFoldableConst_$clength_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.120370632 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Const.$fFoldableConst9_bytes
.type Data.Functor.Const.$fFoldableConst9_bytes, @object
Data.Functor.Const.$fFoldableConst9_bytes:
	.asciz "foldr1: empty structure"


==================== Asm code ====================
2018-03-16 16:02:25.12336028 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst8_closure
.type Data.Functor.Const.$fFoldableConst8_closure, @object
Data.Functor.Const.$fFoldableConst8_closure:
	.quad	Data.Functor.Const.$fFoldableConst8_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:25.124368044 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst8_entry
.type Data.Functor.Const.$fFoldableConst8_entry, @object
Data.Functor.Const.$fFoldableConst8_entry:
_c77nx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77ny
_c77nz:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c77nw
_c77nv:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Data.Functor.Const.$fFoldableConst9_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c77ny:
	jmp *-16(%r13)
_c77nw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Data.Functor.Const.$fFoldableConst8_entry, .-Data.Functor.Const.$fFoldableConst8_entry


==================== Asm code ====================
2018-03-16 16:02:25.12510414 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst8_info
.type Data.Functor.Const.$fFoldableConst8_info, @object
Data.Functor.Const.$fFoldableConst8_info:
	.quad	Data.Functor.Const.$fFoldableConst8_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:02:25.127570718 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfoldr1_closure
.type Data.Functor.Const.$fFoldableConst_$cfoldr1_closure, @object
Data.Functor.Const.$fFoldableConst_$cfoldr1_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldr1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:25.128275688 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$cfoldr1_entry
.type Data.Functor.Const.$fFoldableConst_$cfoldr1_entry, @object
Data.Functor.Const.$fFoldableConst_$cfoldr1_entry:
_c77nM:
	leaq Data.Functor.Const.$fFoldableConst8_closure(%rip),%r14
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size Data.Functor.Const.$fFoldableConst_$cfoldr1_entry, .-Data.Functor.Const.$fFoldableConst_$cfoldr1_entry


==================== Asm code ====================
2018-03-16 16:02:25.128969775 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cfoldr1_info
.type Data.Functor.Const.$fFoldableConst_$cfoldr1_info, @object
Data.Functor.Const.$fFoldableConst_$cfoldr1_info:
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldr1_entry
	.quad	0
	.quad	73014444046
	.quad	8589934607
	.quad	S77av_srt+136


==================== Asm code ====================
2018-03-16 16:02:25.131411053 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cnull_closure
.type Data.Functor.Const.$fFoldableConst_$cnull_closure, @object
Data.Functor.Const.$fFoldableConst_$cnull_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$cnull_info


==================== Asm code ====================
2018-03-16 16:02:25.132132005 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$cnull_entry
.type Data.Functor.Const.$fFoldableConst_$cnull_entry, @object
Data.Functor.Const.$fFoldableConst_$cnull_entry:
_c77nX:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size Data.Functor.Const.$fFoldableConst_$cnull_entry, .-Data.Functor.Const.$fFoldableConst_$cnull_entry


==================== Asm code ====================
2018-03-16 16:02:25.132723679 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cnull_info
.type Data.Functor.Const.$fFoldableConst_$cnull_info, @object
Data.Functor.Const.$fFoldableConst_$cnull_info:
	.quad	Data.Functor.Const.$fFoldableConst_$cnull_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.13538112 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cproduct_closure
.type Data.Functor.Const.$fFoldableConst_$cproduct_closure, @object
Data.Functor.Const.$fFoldableConst_$cproduct_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$cproduct_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:25.135954605 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$cproduct_entry
.type Data.Functor.Const.$fFoldableConst_$cproduct_entry, @object
Data.Functor.Const.$fFoldableConst_$cproduct_entry:
_c77oa:
	jmp *Data.Semigroup.Internal.$fMonoidProduct2_entry@gotpcrel(%rip)
	.size Data.Functor.Const.$fFoldableConst_$cproduct_entry, .-Data.Functor.Const.$fFoldableConst_$cproduct_entry


==================== Asm code ====================
2018-03-16 16:02:25.136532619 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$cproduct_info
.type Data.Functor.Const.$fFoldableConst_$cproduct_info, @object
Data.Functor.Const.$fFoldableConst_$cproduct_info:
	.quad	Data.Functor.Const.$fFoldableConst_$cproduct_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S77av_srt+176


==================== Asm code ====================
2018-03-16 16:02:25.138625423 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$ctoList_closure
.type Data.Functor.Const.$fFoldableConst_$ctoList_closure, @object
Data.Functor.Const.$fFoldableConst_$ctoList_closure:
	.quad	Data.Functor.Const.$fFoldableConst_$ctoList_info


==================== Asm code ====================
2018-03-16 16:02:25.13930309 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFoldableConst_$ctoList_entry
.type Data.Functor.Const.$fFoldableConst_$ctoList_entry, @object
Data.Functor.Const.$fFoldableConst_$ctoList_entry:
_c77ol:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size Data.Functor.Const.$fFoldableConst_$ctoList_entry, .-Data.Functor.Const.$fFoldableConst_$ctoList_entry


==================== Asm code ====================
2018-03-16 16:02:25.139942745 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_$ctoList_info
.type Data.Functor.Const.$fFoldableConst_$ctoList_info, @object
Data.Functor.Const.$fFoldableConst_$ctoList_info:
	.quad	Data.Functor.Const.$fFoldableConst_$ctoList_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.142058948 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFoldableConst_closure
.type Data.Functor.Const.$fFoldableConst_closure, @object
Data.Functor.Const.$fFoldableConst_closure:
	.quad	Data.Foldable.C:Foldable_con_info
	.quad	Data.Functor.Const.$fFoldableConst_$cfold_closure+2
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldMap_closure+3
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldr'_closure+3
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldr'_closure+3
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldl_closure+3
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldl_closure+3
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldr1_closure+2
	.quad	Data.Functor.Const.$fFoldableConst_$cfoldl1_closure+2
	.quad	Data.Functor.Const.$fFoldableConst_$ctoList_closure+1
	.quad	Data.Functor.Const.$fFoldableConst_$cnull_closure+1
	.quad	Data.Functor.Const.$fFoldableConst_$clength_closure+1
	.quad	Data.Functor.Const.$fFoldableConst_$celem_closure+3
	.quad	Data.Functor.Const.$fFoldableConst_$cmaximum_closure+2
	.quad	Data.Functor.Const.$fFoldableConst_$cminimum_closure+2
	.quad	Data.Functor.Const.$fFoldableConst_$csum_closure+2
	.quad	Data.Functor.Const.$fFoldableConst_$cproduct_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:25.144278089 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFunctorConst2_closure
.type Data.Functor.Const.$fFunctorConst2_closure, @object
Data.Functor.Const.$fFunctorConst2_closure:
	.quad	Data.Functor.Const.$fFunctorConst2_info


==================== Asm code ====================
2018-03-16 16:02:25.144985634 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFunctorConst2_entry
.type Data.Functor.Const.$fFunctorConst2_entry, @object
Data.Functor.Const.$fFunctorConst2_entry:
_c77oz:
	movq %rsi,%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size Data.Functor.Const.$fFunctorConst2_entry, .-Data.Functor.Const.$fFunctorConst2_entry


==================== Asm code ====================
2018-03-16 16:02:25.145700215 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFunctorConst2_info
.type Data.Functor.Const.$fFunctorConst2_info, @object
Data.Functor.Const.$fFunctorConst2_info:
	.quad	Data.Functor.Const.$fFunctorConst2_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:02:25.148369527 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFunctorConst1_closure
.type Data.Functor.Const.$fFunctorConst1_closure, @object
Data.Functor.Const.$fFunctorConst1_closure:
	.quad	Data.Functor.Const.$fFunctorConst1_info


==================== Asm code ====================
2018-03-16 16:02:25.149007886 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFunctorConst1_entry
.type Data.Functor.Const.$fFunctorConst1_entry, @object
Data.Functor.Const.$fFunctorConst1_entry:
_c77oK:
	movq %rsi,%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size Data.Functor.Const.$fFunctorConst1_entry, .-Data.Functor.Const.$fFunctorConst1_entry


==================== Asm code ====================
2018-03-16 16:02:25.149640819 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFunctorConst1_info
.type Data.Functor.Const.$fFunctorConst1_info, @object
Data.Functor.Const.$fFunctorConst1_info:
	.quad	Data.Functor.Const.$fFunctorConst1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:02:25.151395925 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFunctorConst_closure
.type Data.Functor.Const.$fFunctorConst_closure, @object
Data.Functor.Const.$fFunctorConst_closure:
	.quad	GHC.Base.C:Functor_con_info
	.quad	Data.Functor.Const.$fFunctorConst2_closure+2
	.quad	Data.Functor.Const.$fFunctorConst1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:25.157571068 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fApplicativeConst_closure
.type Data.Functor.Const.$fApplicativeConst_closure, @object
Data.Functor.Const.$fApplicativeConst_closure:
	.quad	Data.Functor.Const.$fApplicativeConst_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:25.158317018 UTC

.section .text
.align 8
lvl_s7752_entry:
_c77p0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77p1
_c77p2:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.mempty_entry@gotpcrel(%rip)
_c77p1:
	jmp *-16(%r13)
	.size lvl_s7752_entry, .-lvl_s7752_entry


==================== Asm code ====================
2018-03-16 16:02:25.158939819 UTC

.section .data.rel.ro
.align 8
.align 1
lvl_s7752_info:
	.quad	lvl_s7752_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.159638726 UTC

.section .text
.align 8
sat_s775f_entry:
_c77p8:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c77p9
_c77pa:
	movq %r14,%rax
	movq 6(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Base.mappend_entry@gotpcrel(%rip)
_c77p9:
	jmp *-8(%r13)
	.size sat_s775f_entry, .-sat_s775f_entry


==================== Asm code ====================
2018-03-16 16:02:25.160282422 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775f_info:
	.quad	sat_s775f_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:02:25.161005878 UTC

.section .text
.align 8
sat_s775c_entry:
_c77pg:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c77ph
_c77pi:
	movq %r14,%rax
	movq 6(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Base.mappend_entry@gotpcrel(%rip)
_c77ph:
	jmp *-8(%r13)
	.size sat_s775c_entry, .-sat_s775c_entry


==================== Asm code ====================
2018-03-16 16:02:25.161707723 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775c_info:
	.quad	sat_s775c_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:02:25.162432662 UTC

.section .text
.align 8
sat_s7759_entry:
_c77po:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c77pp
_c77pq:
	movq 5(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Base.mappend_entry@gotpcrel(%rip)
_c77pp:
	jmp *-8(%r13)
	.size sat_s7759_entry, .-sat_s7759_entry


==================== Asm code ====================
2018-03-16 16:02:25.163078501 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7759_info:
	.quad	sat_s7759_entry
	.quad	1
	.quad	9
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:02:25.163787534 UTC

.section .text
.align 8
sat_s7755_entry:
_c77pv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77pw
_c77px:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.mappend_entry@gotpcrel(%rip)
_c77pw:
	jmp *-16(%r13)
	.size sat_s7755_entry, .-sat_s7755_entry


==================== Asm code ====================
2018-03-16 16:02:25.164432668 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7755_info:
	.quad	sat_s7755_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.165062072 UTC

.section .text
.align 8
sat_s7754_entry:
_c77pD:
	movq 7(%rbx),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size sat_s7754_entry, .-sat_s7754_entry


==================== Asm code ====================
2018-03-16 16:02:25.165655554 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7754_info:
	.quad	sat_s7754_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.16656619 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fApplicativeConst_entry
.type Data.Functor.Const.$fApplicativeConst_entry, @object
Data.Functor.Const.$fApplicativeConst_entry:
_c77pH:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _c77pL
_c77pK:
	leaq lvl_s7752_info(%rip),%rax
	movq %rax,-160(%r12)
	movq %r14,-144(%r12)
	leaq sat_s775f_info(%rip),%rax
	movq %rax,-136(%r12)
	movq %r14,-128(%r12)
	leaq sat_s775c_info(%rip),%rax
	movq %rax,-120(%r12)
	movq %r14,-112(%r12)
	leaq sat_s7759_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %r14,-96(%r12)
	leaq sat_s7755_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %r14,-72(%r12)
	leaq sat_s7754_info(%rip),%rax
	movq %rax,-64(%r12)
	leaq -160(%r12),%rax
	movq %rax,-56(%r12)
	movq GHC.Base.C:Applicative_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq Data.Functor.Const.$fFunctorConst_closure+1(%rip),%rax
	movq %rax,-40(%r12)
	leaq -63(%r12),%rax
	movq %rax,-32(%r12)
	leaq -88(%r12),%rax
	movq %rax,-24(%r12)
	leaq -101(%r12),%rax
	movq %rax,-16(%r12)
	leaq -118(%r12),%rax
	movq %rax,-8(%r12)
	leaq -134(%r12),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c77pL:
	movq $168,904(%r13)
	leaq Data.Functor.Const.$fApplicativeConst_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fApplicativeConst_entry, .-Data.Functor.Const.$fApplicativeConst_entry


==================== Asm code ====================
2018-03-16 16:02:25.16738649 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fApplicativeConst_info
.type Data.Functor.Const.$fApplicativeConst_info, @object
Data.Functor.Const.$fApplicativeConst_info:
	.quad	Data.Functor.Const.$fApplicativeConst_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S77av_srt+184


==================== Asm code ====================
2018-03-16 16:02:25.174591463 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fStorableConst_closure
.type Data.Functor.Const.$fStorableConst_closure, @object
Data.Functor.Const.$fStorableConst_closure:
	.quad	Data.Functor.Const.$fStorableConst_info


==================== Asm code ====================
2018-03-16 16:02:25.175374261 UTC

.section .text
.align 8
sat_s775o_entry:
_c77qF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77qG
_c77qH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Foreign.Storable.poke_entry@gotpcrel(%rip)
_c77qG:
	jmp *-16(%r13)
	.size sat_s775o_entry, .-sat_s775o_entry


==================== Asm code ====================
2018-03-16 16:02:25.176114767 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775o_info:
	.quad	sat_s775o_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.176882863 UTC

.section .text
.align 8
sat_s775n_entry:
_c77qM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77qN
_c77qO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Foreign.Storable.peek_entry@gotpcrel(%rip)
_c77qN:
	jmp *-16(%r13)
	.size sat_s775n_entry, .-sat_s775n_entry


==================== Asm code ====================
2018-03-16 16:02:25.177623763 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775n_info:
	.quad	sat_s775n_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.178374716 UTC

.section .text
.align 8
sat_s775m_entry:
_c77qT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77qU
_c77qV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Foreign.Storable.pokeByteOff_entry@gotpcrel(%rip)
_c77qU:
	jmp *-16(%r13)
	.size sat_s775m_entry, .-sat_s775m_entry


==================== Asm code ====================
2018-03-16 16:02:25.179064982 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775m_info:
	.quad	sat_s775m_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.179853655 UTC

.section .text
.align 8
sat_s775l_entry:
_c77r0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77r1
_c77r2:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Foreign.Storable.peekByteOff_entry@gotpcrel(%rip)
_c77r1:
	jmp *-16(%r13)
	.size sat_s775l_entry, .-sat_s775l_entry


==================== Asm code ====================
2018-03-16 16:02:25.181097908 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775l_info:
	.quad	sat_s775l_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.182660689 UTC

.section .text
.align 8
sat_s775k_entry:
_c77r7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77r8
_c77r9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Foreign.Storable.pokeElemOff_entry@gotpcrel(%rip)
_c77r8:
	jmp *-16(%r13)
	.size sat_s775k_entry, .-sat_s775k_entry


==================== Asm code ====================
2018-03-16 16:02:25.183301618 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775k_info:
	.quad	sat_s775k_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.184009399 UTC

.section .text
.align 8
sat_s775j_entry:
_c77re:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77rf
_c77rg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Foreign.Storable.peekElemOff_entry@gotpcrel(%rip)
_c77rf:
	jmp *-16(%r13)
	.size sat_s775j_entry, .-sat_s775j_entry


==================== Asm code ====================
2018-03-16 16:02:25.184659223 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775j_info:
	.quad	sat_s775j_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.185374937 UTC

.section .text
.align 8
sat_s775i_entry:
_c77rl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77rm
_c77rn:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Foreign.Storable.alignment_entry@gotpcrel(%rip)
_c77rm:
	jmp *-16(%r13)
	.size sat_s775i_entry, .-sat_s775i_entry


==================== Asm code ====================
2018-03-16 16:02:25.186028259 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775i_info:
	.quad	sat_s775i_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.186722725 UTC

.section .text
.align 8
sat_s775h_entry:
_c77rs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77rt
_c77ru:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Foreign.Storable.sizeOf_entry@gotpcrel(%rip)
_c77rt:
	jmp *-16(%r13)
	.size sat_s775h_entry, .-sat_s775h_entry


==================== Asm code ====================
2018-03-16 16:02:25.18734695 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775h_info:
	.quad	sat_s775h_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.188235665 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fStorableConst_entry
.type Data.Functor.Const.$fStorableConst_entry, @object
Data.Functor.Const.$fStorableConst_entry:
_c77rw:
	addq $264,%r12
	cmpq 856(%r13),%r12
	ja _c77rA
_c77rz:
	leaq sat_s775o_info(%rip),%rax
	movq %rax,-256(%r12)
	movq %r14,-240(%r12)
	leaq sat_s775n_info(%rip),%rax
	movq %rax,-232(%r12)
	movq %r14,-216(%r12)
	leaq sat_s775m_info(%rip),%rax
	movq %rax,-208(%r12)
	movq %r14,-192(%r12)
	leaq sat_s775l_info(%rip),%rax
	movq %rax,-184(%r12)
	movq %r14,-168(%r12)
	leaq sat_s775k_info(%rip),%rax
	movq %rax,-160(%r12)
	movq %r14,-144(%r12)
	leaq sat_s775j_info(%rip),%rax
	movq %rax,-136(%r12)
	movq %r14,-120(%r12)
	leaq sat_s775i_info(%rip),%rax
	movq %rax,-112(%r12)
	movq %r14,-96(%r12)
	leaq sat_s775h_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %r14,-72(%r12)
	movq Foreign.Storable.C:Storable_con_info@gotpcrel(%rip),%rax
	movq %rax,-64(%r12)
	leaq -88(%r12),%rax
	movq %rax,-56(%r12)
	leaq -112(%r12),%rax
	movq %rax,-48(%r12)
	leaq -136(%r12),%rax
	movq %rax,-40(%r12)
	leaq -160(%r12),%rax
	movq %rax,-32(%r12)
	leaq -184(%r12),%rax
	movq %rax,-24(%r12)
	leaq -208(%r12),%rax
	movq %rax,-16(%r12)
	leaq -232(%r12),%rax
	movq %rax,-8(%r12)
	leaq -256(%r12),%rax
	movq %rax,(%r12)
	leaq -63(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c77rA:
	movq $264,904(%r13)
	leaq Data.Functor.Const.$fStorableConst_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fStorableConst_entry, .-Data.Functor.Const.$fStorableConst_entry


==================== Asm code ====================
2018-03-16 16:02:25.189136063 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fStorableConst_info
.type Data.Functor.Const.$fStorableConst_info, @object
Data.Functor.Const.$fStorableConst_info:
	.quad	Data.Functor.Const.$fStorableConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.195756133 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fNumConst_closure
.type Data.Functor.Const.$fNumConst_closure, @object
Data.Functor.Const.$fNumConst_closure:
	.quad	Data.Functor.Const.$fNumConst_info


==================== Asm code ====================
2018-03-16 16:02:25.196498075 UTC

.section .text
.align 8
sat_s775w_entry:
_c77sJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77sK
_c77sL:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c77sK:
	jmp *-16(%r13)
	.size sat_s775w_entry, .-sat_s775w_entry


==================== Asm code ====================
2018-03-16 16:02:25.197095017 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775w_info:
	.quad	sat_s775w_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.197839898 UTC

.section .text
.align 8
sat_s775v_entry:
_c77sQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77sR
_c77sS:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Num.signum_entry@gotpcrel(%rip)
_c77sR:
	jmp *-16(%r13)
	.size sat_s775v_entry, .-sat_s775v_entry


==================== Asm code ====================
2018-03-16 16:02:25.198478549 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775v_info:
	.quad	sat_s775v_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.1991421 UTC

.section .text
.align 8
sat_s775u_entry:
_c77sX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77sY
_c77sZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Num.abs_entry@gotpcrel(%rip)
_c77sY:
	jmp *-16(%r13)
	.size sat_s775u_entry, .-sat_s775u_entry


==================== Asm code ====================
2018-03-16 16:02:25.199773417 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775u_info:
	.quad	sat_s775u_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.200459323 UTC

.section .text
.align 8
sat_s775t_entry:
_c77t4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77t5
_c77t6:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
_c77t5:
	jmp *-16(%r13)
	.size sat_s775t_entry, .-sat_s775t_entry


==================== Asm code ====================
2018-03-16 16:02:25.201077415 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775t_info:
	.quad	sat_s775t_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.201816753 UTC

.section .text
.align 8
sat_s775s_entry:
_c77tb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77tc
_c77td:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c77tc:
	jmp *-16(%r13)
	.size sat_s775s_entry, .-sat_s775s_entry


==================== Asm code ====================
2018-03-16 16:02:25.20251475 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775s_info:
	.quad	sat_s775s_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.203183906 UTC

.section .text
.align 8
sat_s775r_entry:
_c77ti:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77tj
_c77tk:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Num.-_entry@gotpcrel(%rip)
_c77tj:
	jmp *-16(%r13)
	.size sat_s775r_entry, .-sat_s775r_entry


==================== Asm code ====================
2018-03-16 16:02:25.203836864 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775r_info:
	.quad	sat_s775r_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.204515079 UTC

.section .text
.align 8
sat_s775q_entry:
_c77tp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77tq
_c77tr:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Num.+_entry@gotpcrel(%rip)
_c77tq:
	jmp *-16(%r13)
	.size sat_s775q_entry, .-sat_s775q_entry


==================== Asm code ====================
2018-03-16 16:02:25.205164115 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775q_info:
	.quad	sat_s775q_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.206097859 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fNumConst_entry
.type Data.Functor.Const.$fNumConst_entry, @object
Data.Functor.Const.$fNumConst_entry:
_c77tt:
	addq $232,%r12
	cmpq 856(%r13),%r12
	ja _c77tx
_c77tw:
	leaq sat_s775w_info(%rip),%rax
	movq %rax,-224(%r12)
	movq %r14,-208(%r12)
	leaq sat_s775v_info(%rip),%rax
	movq %rax,-200(%r12)
	movq %r14,-184(%r12)
	leaq sat_s775u_info(%rip),%rax
	movq %rax,-176(%r12)
	movq %r14,-160(%r12)
	leaq sat_s775t_info(%rip),%rax
	movq %rax,-152(%r12)
	movq %r14,-136(%r12)
	leaq sat_s775s_info(%rip),%rax
	movq %rax,-128(%r12)
	movq %r14,-112(%r12)
	leaq sat_s775r_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %r14,-88(%r12)
	leaq sat_s775q_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq GHC.Num.C:Num_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	leaq -104(%r12),%rax
	movq %rax,-40(%r12)
	leaq -128(%r12),%rax
	movq %rax,-32(%r12)
	leaq -152(%r12),%rax
	movq %rax,-24(%r12)
	leaq -176(%r12),%rax
	movq %rax,-16(%r12)
	leaq -200(%r12),%rax
	movq %rax,-8(%r12)
	leaq -224(%r12),%rax
	movq %rax,(%r12)
	leaq -55(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c77tx:
	movq $232,904(%r13)
	leaq Data.Functor.Const.$fNumConst_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fNumConst_entry, .-Data.Functor.Const.$fNumConst_entry


==================== Asm code ====================
2018-03-16 16:02:25.207018976 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fNumConst_info
.type Data.Functor.Const.$fNumConst_info, @object
Data.Functor.Const.$fNumConst_info:
	.quad	Data.Functor.Const.$fNumConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.210256668 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fRealConst_$cp1Real_closure
.type Data.Functor.Const.$fRealConst_$cp1Real_closure, @object
Data.Functor.Const.$fRealConst_$cp1Real_closure:
	.quad	Data.Functor.Const.$fRealConst_$cp1Real_info


==================== Asm code ====================
2018-03-16 16:02:25.210981318 UTC

.section .text
.align 8
sat_s775y_entry:
_c77uz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77uA
_c77uB:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
_c77uA:
	jmp *-16(%r13)
	.size sat_s775y_entry, .-sat_s775y_entry


==================== Asm code ====================
2018-03-16 16:02:25.211676416 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775y_info:
	.quad	sat_s775y_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.212418183 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fRealConst_$cp1Real_entry
.type Data.Functor.Const.$fRealConst_$cp1Real_entry, @object
Data.Functor.Const.$fRealConst_$cp1Real_entry:
_c77uC:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c77uG
_c77uF:
	leaq sat_s775y_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fNumConst_entry
_c77uG:
	movq $24,904(%r13)
	leaq Data.Functor.Const.$fRealConst_$cp1Real_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fRealConst_$cp1Real_entry, .-Data.Functor.Const.$fRealConst_$cp1Real_entry


==================== Asm code ====================
2018-03-16 16:02:25.213160208 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fRealConst_$cp1Real_info
.type Data.Functor.Const.$fRealConst_$cp1Real_info, @object
Data.Functor.Const.$fRealConst_$cp1Real_info:
	.quad	Data.Functor.Const.$fRealConst_$cp1Real_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.21793591 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fSemigroupConst_closure
.type Data.Functor.Const.$fSemigroupConst_closure, @object
Data.Functor.Const.$fSemigroupConst_closure:
	.quad	Data.Functor.Const.$fSemigroupConst_info


==================== Asm code ====================
2018-03-16 16:02:25.218647254 UTC

.section .text
.align 8
sat_s775D_entry:
_c77v0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77v1
_c77v2:
	movq %r14,%rax
	movq 7(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Base.stimes_entry@gotpcrel(%rip)
_c77v1:
	jmp *-8(%r13)
	.size sat_s775D_entry, .-sat_s775D_entry


==================== Asm code ====================
2018-03-16 16:02:25.219302003 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775D_info:
	.quad	sat_s775D_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.220002069 UTC

.section .text
.align 8
sat_s775B_entry:
_c77v7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77v8
_c77v9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.sconcat_entry@gotpcrel(%rip)
_c77v8:
	jmp *-16(%r13)
	.size sat_s775B_entry, .-sat_s775B_entry


==================== Asm code ====================
2018-03-16 16:02:25.220633344 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775B_info:
	.quad	sat_s775B_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.221394135 UTC

.section .text
.align 8
sat_s775A_entry:
_c77ve:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77vf
_c77vg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.<>_entry@gotpcrel(%rip)
_c77vf:
	jmp *-16(%r13)
	.size sat_s775A_entry, .-sat_s775A_entry


==================== Asm code ====================
2018-03-16 16:02:25.222017818 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775A_info:
	.quad	sat_s775A_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.222816613 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fSemigroupConst_entry
.type Data.Functor.Const.$fSemigroupConst_entry, @object
Data.Functor.Const.$fSemigroupConst_entry:
_c77vi:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c77vm
_c77vl:
	leaq sat_s775D_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %r14,-80(%r12)
	leaq sat_s775B_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-56(%r12)
	leaq sat_s775A_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-32(%r12)
	movq GHC.Base.C:Semigroup_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq -48(%r12),%rax
	movq %rax,-16(%r12)
	leaq -72(%r12),%rax
	movq %rax,-8(%r12)
	leaq -87(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c77vm:
	movq $96,904(%r13)
	leaq Data.Functor.Const.$fSemigroupConst_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fSemigroupConst_entry, .-Data.Functor.Const.$fSemigroupConst_entry


==================== Asm code ====================
2018-03-16 16:02:25.223574621 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fSemigroupConst_info
.type Data.Functor.Const.$fSemigroupConst_info, @object
Data.Functor.Const.$fSemigroupConst_info:
	.quad	Data.Functor.Const.$fSemigroupConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.226603815 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fMonoidConst_$cp1Monoid_closure
.type Data.Functor.Const.$fMonoidConst_$cp1Monoid_closure, @object
Data.Functor.Const.$fMonoidConst_$cp1Monoid_closure:
	.quad	Data.Functor.Const.$fMonoidConst_$cp1Monoid_info


==================== Asm code ====================
2018-03-16 16:02:25.227360902 UTC

.section .text
.align 8
sat_s775F_entry:
_c77vW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77vX
_c77vY:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.$p1Monoid_entry@gotpcrel(%rip)
_c77vX:
	jmp *-16(%r13)
	.size sat_s775F_entry, .-sat_s775F_entry


==================== Asm code ====================
2018-03-16 16:02:25.228000765 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775F_info:
	.quad	sat_s775F_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.228689254 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fMonoidConst_$cp1Monoid_entry
.type Data.Functor.Const.$fMonoidConst_$cp1Monoid_entry, @object
Data.Functor.Const.$fMonoidConst_$cp1Monoid_entry:
_c77vZ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c77w3
_c77w2:
	leaq sat_s775F_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fSemigroupConst_entry
_c77w3:
	movq $24,904(%r13)
	leaq Data.Functor.Const.$fMonoidConst_$cp1Monoid_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fMonoidConst_$cp1Monoid_entry, .-Data.Functor.Const.$fMonoidConst_$cp1Monoid_entry


==================== Asm code ====================
2018-03-16 16:02:25.230009846 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fMonoidConst_$cp1Monoid_info
.type Data.Functor.Const.$fMonoidConst_$cp1Monoid_info, @object
Data.Functor.Const.$fMonoidConst_$cp1Monoid_info:
	.quad	Data.Functor.Const.$fMonoidConst_$cp1Monoid_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.234703262 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fMonoidConst_closure
.type Data.Functor.Const.$fMonoidConst_closure, @object
Data.Functor.Const.$fMonoidConst_closure:
	.quad	Data.Functor.Const.$fMonoidConst_info


==================== Asm code ====================
2018-03-16 16:02:25.235463508 UTC

.section .text
.align 8
sat_s775K_entry:
_c77wm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77wn
_c77wo:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.mconcat_entry@gotpcrel(%rip)
_c77wn:
	jmp *-16(%r13)
	.size sat_s775K_entry, .-sat_s775K_entry


==================== Asm code ====================
2018-03-16 16:02:25.236116302 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775K_info:
	.quad	sat_s775K_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.236800835 UTC

.section .text
.align 8
sat_s775J_entry:
_c77wt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77wu
_c77wv:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.mappend_entry@gotpcrel(%rip)
_c77wu:
	jmp *-16(%r13)
	.size sat_s775J_entry, .-sat_s775J_entry


==================== Asm code ====================
2018-03-16 16:02:25.237464296 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775J_info:
	.quad	sat_s775J_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.238200718 UTC

.section .text
.align 8
sat_s775I_entry:
_c77wA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77wB
_c77wC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.mempty_entry@gotpcrel(%rip)
_c77wB:
	jmp *-16(%r13)
	.size sat_s775I_entry, .-sat_s775I_entry


==================== Asm code ====================
2018-03-16 16:02:25.23884821 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775I_info:
	.quad	sat_s775I_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.239572449 UTC

.section .text
.align 8
sat_s775H_entry:
_c77wH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77wI
_c77wJ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fMonoidConst_$cp1Monoid_entry
_c77wI:
	jmp *-16(%r13)
	.size sat_s775H_entry, .-sat_s775H_entry


==================== Asm code ====================
2018-03-16 16:02:25.240211652 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775H_info:
	.quad	sat_s775H_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.241032801 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fMonoidConst_entry
.type Data.Functor.Const.$fMonoidConst_entry, @object
Data.Functor.Const.$fMonoidConst_entry:
_c77wL:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _c77wP
_c77wO:
	leaq sat_s775K_info(%rip),%rax
	movq %rax,-128(%r12)
	movq %r14,-112(%r12)
	leaq sat_s775J_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %r14,-88(%r12)
	leaq sat_s775I_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	leaq sat_s775H_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-40(%r12)
	movq GHC.Base.C:Monoid_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -80(%r12),%rax
	movq %rax,-16(%r12)
	leaq -104(%r12),%rax
	movq %rax,-8(%r12)
	leaq -128(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c77wP:
	movq $136,904(%r13)
	leaq Data.Functor.Const.$fMonoidConst_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fMonoidConst_entry, .-Data.Functor.Const.$fMonoidConst_entry


==================== Asm code ====================
2018-03-16 16:02:25.241879166 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fMonoidConst_info
.type Data.Functor.Const.$fMonoidConst_info, @object
Data.Functor.Const.$fMonoidConst_info:
	.quad	Data.Functor.Const.$fMonoidConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.244214555 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fGeneric1Const1_closure
.type Data.Functor.Const.$fGeneric1Const1_closure, @object
Data.Functor.Const.$fGeneric1Const1_closure:
	.quad	Data.Functor.Const.$fGeneric1Const1_info


==================== Asm code ====================
2018-03-16 16:02:25.244859545 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fGeneric1Const1_entry
.type Data.Functor.Const.$fGeneric1Const1_entry, @object
Data.Functor.Const.$fGeneric1Const1_entry:
_c77xs:
	movq %r14,%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size Data.Functor.Const.$fGeneric1Const1_entry, .-Data.Functor.Const.$fGeneric1Const1_entry


==================== Asm code ====================
2018-03-16 16:02:25.245510674 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fGeneric1Const1_info
.type Data.Functor.Const.$fGeneric1Const1_info, @object
Data.Functor.Const.$fGeneric1Const1_info:
	.quad	Data.Functor.Const.$fGeneric1Const1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.248141709 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fGeneric1Const2_closure
.type Data.Functor.Const.$fGeneric1Const2_closure, @object
Data.Functor.Const.$fGeneric1Const2_closure:
	.quad	Data.Functor.Const.$fGeneric1Const2_info


==================== Asm code ====================
2018-03-16 16:02:25.248820611 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fGeneric1Const2_entry
.type Data.Functor.Const.$fGeneric1Const2_entry, @object
Data.Functor.Const.$fGeneric1Const2_entry:
_c77xD:
	movq %r14,%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size Data.Functor.Const.$fGeneric1Const2_entry, .-Data.Functor.Const.$fGeneric1Const2_entry


==================== Asm code ====================
2018-03-16 16:02:25.249859428 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fGeneric1Const2_info
.type Data.Functor.Const.$fGeneric1Const2_info, @object
Data.Functor.Const.$fGeneric1Const2_info:
	.quad	Data.Functor.Const.$fGeneric1Const2_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.251476929 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fGeneric1Const_closure
.type Data.Functor.Const.$fGeneric1Const_closure, @object
Data.Functor.Const.$fGeneric1Const_closure:
	.quad	GHC.Generics.C:Generic1_con_info
	.quad	Data.Functor.Const.$fGeneric1Const2_closure+1
	.quad	Data.Functor.Const.$fGeneric1Const1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:25.253510199 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fGenericConst1_closure
.type Data.Functor.Const.$fGenericConst1_closure, @object
Data.Functor.Const.$fGenericConst1_closure:
	.quad	Data.Functor.Const.$fGenericConst1_info


==================== Asm code ====================
2018-03-16 16:02:25.254131108 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fGenericConst1_entry
.type Data.Functor.Const.$fGenericConst1_entry, @object
Data.Functor.Const.$fGenericConst1_entry:
_c77xP:
	movq %r14,%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size Data.Functor.Const.$fGenericConst1_entry, .-Data.Functor.Const.$fGenericConst1_entry


==================== Asm code ====================
2018-03-16 16:02:25.254746419 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fGenericConst1_info
.type Data.Functor.Const.$fGenericConst1_info, @object
Data.Functor.Const.$fGenericConst1_info:
	.quad	Data.Functor.Const.$fGenericConst1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.25683347 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fGenericConst2_closure
.type Data.Functor.Const.$fGenericConst2_closure, @object
Data.Functor.Const.$fGenericConst2_closure:
	.quad	Data.Functor.Const.$fGenericConst2_info


==================== Asm code ====================
2018-03-16 16:02:25.257513758 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fGenericConst2_entry
.type Data.Functor.Const.$fGenericConst2_entry, @object
Data.Functor.Const.$fGenericConst2_entry:
_c77y0:
	movq %r14,%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size Data.Functor.Const.$fGenericConst2_entry, .-Data.Functor.Const.$fGenericConst2_entry


==================== Asm code ====================
2018-03-16 16:02:25.25807685 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fGenericConst2_info
.type Data.Functor.Const.$fGenericConst2_info, @object
Data.Functor.Const.$fGenericConst2_info:
	.quad	Data.Functor.Const.$fGenericConst2_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.259820556 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fGenericConst_closure
.type Data.Functor.Const.$fGenericConst_closure, @object
Data.Functor.Const.$fGenericConst_closure:
	.quad	GHC.Generics.C:Generic_con_info
	.quad	Data.Functor.Const.$fGenericConst2_closure+1
	.quad	Data.Functor.Const.$fGenericConst1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:25.262841802 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFractionalConst_$cp1Fractional_closure
.type Data.Functor.Const.$fFractionalConst_$cp1Fractional_closure, @object
Data.Functor.Const.$fFractionalConst_$cp1Fractional_closure:
	.quad	Data.Functor.Const.$fFractionalConst_$cp1Fractional_info


==================== Asm code ====================
2018-03-16 16:02:25.263601053 UTC

.section .text
.align 8
sat_s775Q_entry:
_c77yg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77yh
_c77yi:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.$p1Fractional_entry@gotpcrel(%rip)
_c77yh:
	jmp *-16(%r13)
	.size sat_s775Q_entry, .-sat_s775Q_entry


==================== Asm code ====================
2018-03-16 16:02:25.264228501 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775Q_info:
	.quad	sat_s775Q_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.264944729 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFractionalConst_$cp1Fractional_entry
.type Data.Functor.Const.$fFractionalConst_$cp1Fractional_entry, @object
Data.Functor.Const.$fFractionalConst_$cp1Fractional_entry:
_c77yj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c77yn
_c77ym:
	leaq sat_s775Q_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fNumConst_entry
_c77yn:
	movq $24,904(%r13)
	leaq Data.Functor.Const.$fFractionalConst_$cp1Fractional_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fFractionalConst_$cp1Fractional_entry, .-Data.Functor.Const.$fFractionalConst_$cp1Fractional_entry


==================== Asm code ====================
2018-03-16 16:02:25.266082641 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFractionalConst_$cp1Fractional_info
.type Data.Functor.Const.$fFractionalConst_$cp1Fractional_info, @object
Data.Functor.Const.$fFractionalConst_$cp1Fractional_info:
	.quad	Data.Functor.Const.$fFractionalConst_$cp1Fractional_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.270795446 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFractionalConst_closure
.type Data.Functor.Const.$fFractionalConst_closure, @object
Data.Functor.Const.$fFractionalConst_closure:
	.quad	Data.Functor.Const.$fFractionalConst_info


==================== Asm code ====================
2018-03-16 16:02:25.271555397 UTC

.section .text
.align 8
sat_s775V_entry:
_c77yG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77yH
_c77yI:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.fromRational_entry@gotpcrel(%rip)
_c77yH:
	jmp *-16(%r13)
	.size sat_s775V_entry, .-sat_s775V_entry


==================== Asm code ====================
2018-03-16 16:02:25.272216081 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775V_info:
	.quad	sat_s775V_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.272918366 UTC

.section .text
.align 8
sat_s775U_entry:
_c77yN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77yO
_c77yP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.recip_entry@gotpcrel(%rip)
_c77yO:
	jmp *-16(%r13)
	.size sat_s775U_entry, .-sat_s775U_entry


==================== Asm code ====================
2018-03-16 16:02:25.273631995 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775U_info:
	.quad	sat_s775U_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.274321964 UTC

.section .text
.align 8
sat_s775T_entry:
_c77yU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77yV
_c77yW:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real./_entry@gotpcrel(%rip)
_c77yV:
	jmp *-16(%r13)
	.size sat_s775T_entry, .-sat_s775T_entry


==================== Asm code ====================
2018-03-16 16:02:25.27500177 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775T_info:
	.quad	sat_s775T_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.275734656 UTC

.section .text
.align 8
sat_s775S_entry:
_c77z1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77z2
_c77z3:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fFractionalConst_$cp1Fractional_entry
_c77z2:
	jmp *-16(%r13)
	.size sat_s775S_entry, .-sat_s775S_entry


==================== Asm code ====================
2018-03-16 16:02:25.276371522 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775S_info:
	.quad	sat_s775S_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.277230781 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFractionalConst_entry
.type Data.Functor.Const.$fFractionalConst_entry, @object
Data.Functor.Const.$fFractionalConst_entry:
_c77z5:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _c77z9
_c77z8:
	leaq sat_s775V_info(%rip),%rax
	movq %rax,-128(%r12)
	movq %r14,-112(%r12)
	leaq sat_s775U_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %r14,-88(%r12)
	leaq sat_s775T_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	leaq sat_s775S_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-40(%r12)
	movq GHC.Real.C:Fractional_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -80(%r12),%rax
	movq %rax,-16(%r12)
	leaq -104(%r12),%rax
	movq %rax,-8(%r12)
	leaq -128(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c77z9:
	movq $136,904(%r13)
	leaq Data.Functor.Const.$fFractionalConst_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fFractionalConst_entry, .-Data.Functor.Const.$fFractionalConst_entry


==================== Asm code ====================
2018-03-16 16:02:25.278114331 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFractionalConst_info
.type Data.Functor.Const.$fFractionalConst_info, @object
Data.Functor.Const.$fFractionalConst_info:
	.quad	Data.Functor.Const.$fFractionalConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.28216268 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fRealFracConst_$cp2RealFrac_closure
.type Data.Functor.Const.$fRealFracConst_$cp2RealFrac_closure, @object
Data.Functor.Const.$fRealFracConst_$cp2RealFrac_closure:
	.quad	Data.Functor.Const.$fRealFracConst_$cp2RealFrac_info


==================== Asm code ====================
2018-03-16 16:02:25.282866176 UTC

.section .text
.align 8
sat_s775X_entry:
_c77zQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77zR
_c77zS:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.$p2RealFrac_entry@gotpcrel(%rip)
_c77zR:
	jmp *-16(%r13)
	.size sat_s775X_entry, .-sat_s775X_entry


==================== Asm code ====================
2018-03-16 16:02:25.283449438 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775X_info:
	.quad	sat_s775X_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.284173559 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fRealFracConst_$cp2RealFrac_entry
.type Data.Functor.Const.$fRealFracConst_$cp2RealFrac_entry, @object
Data.Functor.Const.$fRealFracConst_$cp2RealFrac_entry:
_c77zT:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c77zX
_c77zW:
	leaq sat_s775X_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fFractionalConst_entry
_c77zX:
	movq $24,904(%r13)
	leaq Data.Functor.Const.$fRealFracConst_$cp2RealFrac_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fRealFracConst_$cp2RealFrac_entry, .-Data.Functor.Const.$fRealFracConst_$cp2RealFrac_entry


==================== Asm code ====================
2018-03-16 16:02:25.284847898 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fRealFracConst_$cp2RealFrac_info
.type Data.Functor.Const.$fRealFracConst_$cp2RealFrac_info, @object
Data.Functor.Const.$fRealFracConst_$cp2RealFrac_info:
	.quad	Data.Functor.Const.$fRealFracConst_$cp2RealFrac_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.28765908 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFloatingConst_$cp1Floating_closure
.type Data.Functor.Const.$fFloatingConst_$cp1Floating_closure, @object
Data.Functor.Const.$fFloatingConst_$cp1Floating_closure:
	.quad	Data.Functor.Const.$fFloatingConst_$cp1Floating_info


==================== Asm code ====================
2018-03-16 16:02:25.288367214 UTC

.section .text
.align 8
sat_s775Z_entry:
_c77Ag:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Ah
_c77Ai:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.$p1Floating_entry@gotpcrel(%rip)
_c77Ah:
	jmp *-16(%r13)
	.size sat_s775Z_entry, .-sat_s775Z_entry


==================== Asm code ====================
2018-03-16 16:02:25.28900818 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s775Z_info:
	.quad	sat_s775Z_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.289778162 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFloatingConst_$cp1Floating_entry
.type Data.Functor.Const.$fFloatingConst_$cp1Floating_entry, @object
Data.Functor.Const.$fFloatingConst_$cp1Floating_entry:
_c77Aj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c77An
_c77Am:
	leaq sat_s775Z_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fFractionalConst_entry
_c77An:
	movq $24,904(%r13)
	leaq Data.Functor.Const.$fFloatingConst_$cp1Floating_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fFloatingConst_$cp1Floating_entry, .-Data.Functor.Const.$fFloatingConst_$cp1Floating_entry


==================== Asm code ====================
2018-03-16 16:02:25.290441419 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFloatingConst_$cp1Floating_info
.type Data.Functor.Const.$fFloatingConst_$cp1Floating_info, @object
Data.Functor.Const.$fFloatingConst_$cp1Floating_info:
	.quad	Data.Functor.Const.$fFloatingConst_$cp1Floating_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.30626641 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFloatingConst_closure
.type Data.Functor.Const.$fFloatingConst_closure, @object
Data.Functor.Const.$fFloatingConst_closure:
	.quad	Data.Functor.Const.$fFloatingConst_info


==================== Asm code ====================
2018-03-16 16:02:25.307104684 UTC

.section .text
.align 8
sat_s776n_entry:
_c77AG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77AH
_c77AI:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.log1mexp_entry@gotpcrel(%rip)
_c77AH:
	jmp *-16(%r13)
	.size sat_s776n_entry, .-sat_s776n_entry


==================== Asm code ====================
2018-03-16 16:02:25.307715605 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776n_info:
	.quad	sat_s776n_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.308423259 UTC

.section .text
.align 8
sat_s776m_entry:
_c77AN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77AO
_c77AP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.log1pexp_entry@gotpcrel(%rip)
_c77AO:
	jmp *-16(%r13)
	.size sat_s776m_entry, .-sat_s776m_entry


==================== Asm code ====================
2018-03-16 16:02:25.309064843 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776m_info:
	.quad	sat_s776m_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.309829829 UTC

.section .text
.align 8
sat_s776l_entry:
_c77AU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77AV
_c77AW:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.expm1_entry@gotpcrel(%rip)
_c77AV:
	jmp *-16(%r13)
	.size sat_s776l_entry, .-sat_s776l_entry


==================== Asm code ====================
2018-03-16 16:02:25.310533382 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776l_info:
	.quad	sat_s776l_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.311318014 UTC

.section .text
.align 8
sat_s776k_entry:
_c77B1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77B2
_c77B3:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.log1p_entry@gotpcrel(%rip)
_c77B2:
	jmp *-16(%r13)
	.size sat_s776k_entry, .-sat_s776k_entry


==================== Asm code ====================
2018-03-16 16:02:25.312003542 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776k_info:
	.quad	sat_s776k_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.31274113 UTC

.section .text
.align 8
sat_s776j_entry:
_c77B8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77B9
_c77Ba:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.atanh_entry@gotpcrel(%rip)
_c77B9:
	jmp *-16(%r13)
	.size sat_s776j_entry, .-sat_s776j_entry


==================== Asm code ====================
2018-03-16 16:02:25.314060436 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776j_info:
	.quad	sat_s776j_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.314758302 UTC

.section .text
.align 8
sat_s776i_entry:
_c77Bf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Bg
_c77Bh:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.acosh_entry@gotpcrel(%rip)
_c77Bg:
	jmp *-16(%r13)
	.size sat_s776i_entry, .-sat_s776i_entry


==================== Asm code ====================
2018-03-16 16:02:25.315420785 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776i_info:
	.quad	sat_s776i_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.316098818 UTC

.section .text
.align 8
sat_s776h_entry:
_c77Bm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Bn
_c77Bo:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.asinh_entry@gotpcrel(%rip)
_c77Bn:
	jmp *-16(%r13)
	.size sat_s776h_entry, .-sat_s776h_entry


==================== Asm code ====================
2018-03-16 16:02:25.316744326 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776h_info:
	.quad	sat_s776h_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.317502863 UTC

.section .text
.align 8
sat_s776g_entry:
_c77Bt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Bu
_c77Bv:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.tanh_entry@gotpcrel(%rip)
_c77Bu:
	jmp *-16(%r13)
	.size sat_s776g_entry, .-sat_s776g_entry


==================== Asm code ====================
2018-03-16 16:02:25.318158007 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776g_info:
	.quad	sat_s776g_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.318871636 UTC

.section .text
.align 8
sat_s776f_entry:
_c77BA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77BB
_c77BC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.cosh_entry@gotpcrel(%rip)
_c77BB:
	jmp *-16(%r13)
	.size sat_s776f_entry, .-sat_s776f_entry


==================== Asm code ====================
2018-03-16 16:02:25.319521499 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776f_info:
	.quad	sat_s776f_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.320260682 UTC

.section .text
.align 8
sat_s776e_entry:
_c77BH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77BI
_c77BJ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.sinh_entry@gotpcrel(%rip)
_c77BI:
	jmp *-16(%r13)
	.size sat_s776e_entry, .-sat_s776e_entry


==================== Asm code ====================
2018-03-16 16:02:25.320879101 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776e_info:
	.quad	sat_s776e_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.321694386 UTC

.section .text
.align 8
sat_s776d_entry:
_c77BO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77BP
_c77BQ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.atan_entry@gotpcrel(%rip)
_c77BP:
	jmp *-16(%r13)
	.size sat_s776d_entry, .-sat_s776d_entry


==================== Asm code ====================
2018-03-16 16:02:25.322331969 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776d_info:
	.quad	sat_s776d_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.323031125 UTC

.section .text
.align 8
sat_s776c_entry:
_c77BV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77BW
_c77BX:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.acos_entry@gotpcrel(%rip)
_c77BW:
	jmp *-16(%r13)
	.size sat_s776c_entry, .-sat_s776c_entry


==================== Asm code ====================
2018-03-16 16:02:25.323638045 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776c_info:
	.quad	sat_s776c_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.324328965 UTC

.section .text
.align 8
sat_s776b_entry:
_c77C2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77C3
_c77C4:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.asin_entry@gotpcrel(%rip)
_c77C3:
	jmp *-16(%r13)
	.size sat_s776b_entry, .-sat_s776b_entry


==================== Asm code ====================
2018-03-16 16:02:25.324952794 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776b_info:
	.quad	sat_s776b_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.325654944 UTC

.section .text
.align 8
sat_s776a_entry:
_c77C9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Ca
_c77Cb:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.tan_entry@gotpcrel(%rip)
_c77Ca:
	jmp *-16(%r13)
	.size sat_s776a_entry, .-sat_s776a_entry


==================== Asm code ====================
2018-03-16 16:02:25.3262563 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776a_info:
	.quad	sat_s776a_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.326917926 UTC

.section .text
.align 8
sat_s7769_entry:
_c77Cg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Ch
_c77Ci:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.cos_entry@gotpcrel(%rip)
_c77Ch:
	jmp *-16(%r13)
	.size sat_s7769_entry, .-sat_s7769_entry


==================== Asm code ====================
2018-03-16 16:02:25.327568278 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7769_info:
	.quad	sat_s7769_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.328288216 UTC

.section .text
.align 8
sat_s7768_entry:
_c77Cn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Co
_c77Cp:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.sin_entry@gotpcrel(%rip)
_c77Co:
	jmp *-16(%r13)
	.size sat_s7768_entry, .-sat_s7768_entry


==================== Asm code ====================
2018-03-16 16:02:25.328910197 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7768_info:
	.quad	sat_s7768_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.329666812 UTC

.section .text
.align 8
sat_s7767_entry:
_c77Cu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Cv
_c77Cw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.logBase_entry@gotpcrel(%rip)
_c77Cv:
	jmp *-16(%r13)
	.size sat_s7767_entry, .-sat_s7767_entry


==================== Asm code ====================
2018-03-16 16:02:25.330310979 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7767_info:
	.quad	sat_s7767_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.331009144 UTC

.section .text
.align 8
sat_s7766_entry:
_c77CB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77CC
_c77CD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.**_entry@gotpcrel(%rip)
_c77CC:
	jmp *-16(%r13)
	.size sat_s7766_entry, .-sat_s7766_entry


==================== Asm code ====================
2018-03-16 16:02:25.331630357 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7766_info:
	.quad	sat_s7766_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.332318777 UTC

.section .text
.align 8
sat_s7765_entry:
_c77CI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77CJ
_c77CK:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.sqrt_entry@gotpcrel(%rip)
_c77CJ:
	jmp *-16(%r13)
	.size sat_s7765_entry, .-sat_s7765_entry


==================== Asm code ====================
2018-03-16 16:02:25.332960512 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7765_info:
	.quad	sat_s7765_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.334547963 UTC

.section .text
.align 8
sat_s7764_entry:
_c77CP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77CQ
_c77CR:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.log_entry@gotpcrel(%rip)
_c77CQ:
	jmp *-16(%r13)
	.size sat_s7764_entry, .-sat_s7764_entry


==================== Asm code ====================
2018-03-16 16:02:25.335204021 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7764_info:
	.quad	sat_s7764_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.335935591 UTC

.section .text
.align 8
sat_s7763_entry:
_c77CW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77CX
_c77CY:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.exp_entry@gotpcrel(%rip)
_c77CX:
	jmp *-16(%r13)
	.size sat_s7763_entry, .-sat_s7763_entry


==================== Asm code ====================
2018-03-16 16:02:25.336598941 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7763_info:
	.quad	sat_s7763_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.337358023 UTC

.section .text
.align 8
sat_s7762_entry:
_c77D3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77D4
_c77D5:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.pi_entry@gotpcrel(%rip)
_c77D4:
	jmp *-16(%r13)
	.size sat_s7762_entry, .-sat_s7762_entry


==================== Asm code ====================
2018-03-16 16:02:25.338035242 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7762_info:
	.quad	sat_s7762_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.338770207 UTC

.section .text
.align 8
sat_s7761_entry:
_c77Da:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Db
_c77Dc:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fFloatingConst_$cp1Floating_entry
_c77Db:
	jmp *-16(%r13)
	.size sat_s7761_entry, .-sat_s7761_entry


==================== Asm code ====================
2018-03-16 16:02:25.339427398 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7761_info:
	.quad	sat_s7761_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.340681544 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFloatingConst_entry
.type Data.Functor.Const.$fFloatingConst_entry, @object
Data.Functor.Const.$fFloatingConst_entry:
_c77De:
	addq $744,%r12
	cmpq 856(%r13),%r12
	ja _c77Di
_c77Dh:
	leaq sat_s776n_info(%rip),%rax
	movq %rax,-736(%r12)
	movq %r14,-720(%r12)
	leaq sat_s776m_info(%rip),%rax
	movq %rax,-712(%r12)
	movq %r14,-696(%r12)
	leaq sat_s776l_info(%rip),%rax
	movq %rax,-688(%r12)
	movq %r14,-672(%r12)
	leaq sat_s776k_info(%rip),%rax
	movq %rax,-664(%r12)
	movq %r14,-648(%r12)
	leaq sat_s776j_info(%rip),%rax
	movq %rax,-640(%r12)
	movq %r14,-624(%r12)
	leaq sat_s776i_info(%rip),%rax
	movq %rax,-616(%r12)
	movq %r14,-600(%r12)
	leaq sat_s776h_info(%rip),%rax
	movq %rax,-592(%r12)
	movq %r14,-576(%r12)
	leaq sat_s776g_info(%rip),%rax
	movq %rax,-568(%r12)
	movq %r14,-552(%r12)
	leaq sat_s776f_info(%rip),%rax
	movq %rax,-544(%r12)
	movq %r14,-528(%r12)
	leaq sat_s776e_info(%rip),%rax
	movq %rax,-520(%r12)
	movq %r14,-504(%r12)
	leaq sat_s776d_info(%rip),%rax
	movq %rax,-496(%r12)
	movq %r14,-480(%r12)
	leaq sat_s776c_info(%rip),%rax
	movq %rax,-472(%r12)
	movq %r14,-456(%r12)
	leaq sat_s776b_info(%rip),%rax
	movq %rax,-448(%r12)
	movq %r14,-432(%r12)
	leaq sat_s776a_info(%rip),%rax
	movq %rax,-424(%r12)
	movq %r14,-408(%r12)
	leaq sat_s7769_info(%rip),%rax
	movq %rax,-400(%r12)
	movq %r14,-384(%r12)
	leaq sat_s7768_info(%rip),%rax
	movq %rax,-376(%r12)
	movq %r14,-360(%r12)
	leaq sat_s7767_info(%rip),%rax
	movq %rax,-352(%r12)
	movq %r14,-336(%r12)
	leaq sat_s7766_info(%rip),%rax
	movq %rax,-328(%r12)
	movq %r14,-312(%r12)
	leaq sat_s7765_info(%rip),%rax
	movq %rax,-304(%r12)
	movq %r14,-288(%r12)
	leaq sat_s7764_info(%rip),%rax
	movq %rax,-280(%r12)
	movq %r14,-264(%r12)
	leaq sat_s7763_info(%rip),%rax
	movq %rax,-256(%r12)
	movq %r14,-240(%r12)
	leaq sat_s7762_info(%rip),%rax
	movq %rax,-232(%r12)
	movq %r14,-216(%r12)
	leaq sat_s7761_info(%rip),%rax
	movq %rax,-208(%r12)
	movq %r14,-192(%r12)
	movq GHC.Float.C:Floating_con_info@gotpcrel(%rip),%rax
	movq %rax,-184(%r12)
	leaq -208(%r12),%rax
	movq %rax,-176(%r12)
	leaq -232(%r12),%rax
	movq %rax,-168(%r12)
	leaq -256(%r12),%rax
	movq %rax,-160(%r12)
	leaq -280(%r12),%rax
	movq %rax,-152(%r12)
	leaq -304(%r12),%rax
	movq %rax,-144(%r12)
	leaq -328(%r12),%rax
	movq %rax,-136(%r12)
	leaq -352(%r12),%rax
	movq %rax,-128(%r12)
	leaq -376(%r12),%rax
	movq %rax,-120(%r12)
	leaq -400(%r12),%rax
	movq %rax,-112(%r12)
	leaq -424(%r12),%rax
	movq %rax,-104(%r12)
	leaq -448(%r12),%rax
	movq %rax,-96(%r12)
	leaq -472(%r12),%rax
	movq %rax,-88(%r12)
	leaq -496(%r12),%rax
	movq %rax,-80(%r12)
	leaq -520(%r12),%rax
	movq %rax,-72(%r12)
	leaq -544(%r12),%rax
	movq %rax,-64(%r12)
	leaq -568(%r12),%rax
	movq %rax,-56(%r12)
	leaq -592(%r12),%rax
	movq %rax,-48(%r12)
	leaq -616(%r12),%rax
	movq %rax,-40(%r12)
	leaq -640(%r12),%rax
	movq %rax,-32(%r12)
	leaq -664(%r12),%rax
	movq %rax,-24(%r12)
	leaq -688(%r12),%rax
	movq %rax,-16(%r12)
	leaq -712(%r12),%rax
	movq %rax,-8(%r12)
	leaq -736(%r12),%rax
	movq %rax,(%r12)
	leaq -183(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c77Di:
	movq $744,904(%r13)
	leaq Data.Functor.Const.$fFloatingConst_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fFloatingConst_entry, .-Data.Functor.Const.$fFloatingConst_entry


==================== Asm code ====================
2018-03-16 16:02:25.342077137 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFloatingConst_info
.type Data.Functor.Const.$fFloatingConst_info, @object
Data.Functor.Const.$fFloatingConst_info:
	.quad	Data.Functor.Const.$fFloatingConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.345465376 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_closure
.type Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_closure, @object
Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_closure:
	.quad	Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_info


==================== Asm code ====================
2018-03-16 16:02:25.346810638 UTC

.section .text
.align 8
sat_s776p_entry:
_c77G8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77G9
_c77Ga:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.$p2RealFloat_entry@gotpcrel(%rip)
_c77G9:
	jmp *-16(%r13)
	.size sat_s776p_entry, .-sat_s776p_entry


==================== Asm code ====================
2018-03-16 16:02:25.347492488 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776p_info:
	.quad	sat_s776p_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.348199426 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_entry
.type Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_entry, @object
Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_entry:
_c77Gb:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c77Gf
_c77Ge:
	leaq sat_s776p_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fFloatingConst_entry
_c77Gf:
	movq $24,904(%r13)
	leaq Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_entry, .-Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_entry


==================== Asm code ====================
2018-03-16 16:02:25.348842282 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_info
.type Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_info, @object
Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_info:
	.quad	Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.352977 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fEqConst_closure
.type Data.Functor.Const.$fEqConst_closure, @object
Data.Functor.Const.$fEqConst_closure:
	.quad	Data.Functor.Const.$fEqConst_info


==================== Asm code ====================
2018-03-16 16:02:25.353692689 UTC

.section .text
.align 8
sat_s776s_entry:
_c77Gy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Gz
_c77GA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Classes./=_entry@gotpcrel(%rip)
_c77Gz:
	jmp *-16(%r13)
	.size sat_s776s_entry, .-sat_s776s_entry


==================== Asm code ====================
2018-03-16 16:02:25.354327043 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776s_info:
	.quad	sat_s776s_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.355016542 UTC

.section .text
.align 8
sat_s776r_entry:
_c77GF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77GG
_c77GH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
_c77GG:
	jmp *-16(%r13)
	.size sat_s776r_entry, .-sat_s776r_entry


==================== Asm code ====================
2018-03-16 16:02:25.355665321 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776r_info:
	.quad	sat_s776r_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.356420261 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fEqConst_entry
.type Data.Functor.Const.$fEqConst_entry, @object
Data.Functor.Const.$fEqConst_entry:
_c77GJ:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c77GN
_c77GM:
	leaq sat_s776s_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-48(%r12)
	leaq sat_s776r_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq GHC.Classes.C:Eq_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c77GN:
	movq $72,904(%r13)
	leaq Data.Functor.Const.$fEqConst_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fEqConst_entry, .-Data.Functor.Const.$fEqConst_entry


==================== Asm code ====================
2018-03-16 16:02:25.357171755 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fEqConst_info
.type Data.Functor.Const.$fEqConst_info, @object
Data.Functor.Const.$fEqConst_info:
	.quad	Data.Functor.Const.$fEqConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.360203634 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fOrdConst_$cp1Ord_closure
.type Data.Functor.Const.$fOrdConst_$cp1Ord_closure, @object
Data.Functor.Const.$fOrdConst_$cp1Ord_closure:
	.quad	Data.Functor.Const.$fOrdConst_$cp1Ord_info


==================== Asm code ====================
2018-03-16 16:02:25.360941335 UTC

.section .text
.align 8
sat_s776u_entry:
_c77Hg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Hh
_c77Hi:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
_c77Hh:
	jmp *-16(%r13)
	.size sat_s776u_entry, .-sat_s776u_entry


==================== Asm code ====================
2018-03-16 16:02:25.361750554 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776u_info:
	.quad	sat_s776u_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.362498282 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fOrdConst_$cp1Ord_entry
.type Data.Functor.Const.$fOrdConst_$cp1Ord_entry, @object
Data.Functor.Const.$fOrdConst_$cp1Ord_entry:
_c77Hj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c77Hn
_c77Hm:
	leaq sat_s776u_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fEqConst_entry
_c77Hn:
	movq $24,904(%r13)
	leaq Data.Functor.Const.$fOrdConst_$cp1Ord_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fOrdConst_$cp1Ord_entry, .-Data.Functor.Const.$fOrdConst_$cp1Ord_entry


==================== Asm code ====================
2018-03-16 16:02:25.363149034 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fOrdConst_$cp1Ord_info
.type Data.Functor.Const.$fOrdConst_$cp1Ord_info, @object
Data.Functor.Const.$fOrdConst_$cp1Ord_info:
	.quad	Data.Functor.Const.$fOrdConst_$cp1Ord_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.370317439 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fOrdConst_closure
.type Data.Functor.Const.$fOrdConst_closure, @object
Data.Functor.Const.$fOrdConst_closure:
	.quad	Data.Functor.Const.$fOrdConst_info


==================== Asm code ====================
2018-03-16 16:02:25.371109882 UTC

.section .text
.align 8
sat_s776D_entry:
_c77HG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77HH
_c77HI:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Classes.min_entry@gotpcrel(%rip)
_c77HH:
	jmp *-16(%r13)
	.size sat_s776D_entry, .-sat_s776D_entry


==================== Asm code ====================
2018-03-16 16:02:25.371778947 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776D_info:
	.quad	sat_s776D_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.372493987 UTC

.section .text
.align 8
sat_s776C_entry:
_c77HN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77HO
_c77HP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Classes.max_entry@gotpcrel(%rip)
_c77HO:
	jmp *-16(%r13)
	.size sat_s776C_entry, .-sat_s776C_entry


==================== Asm code ====================
2018-03-16 16:02:25.373160235 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776C_info:
	.quad	sat_s776C_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.373905021 UTC

.section .text
.align 8
sat_s776B_entry:
_c77HU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77HV
_c77HW:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Classes.>=_entry@gotpcrel(%rip)
_c77HV:
	jmp *-16(%r13)
	.size sat_s776B_entry, .-sat_s776B_entry


==================== Asm code ====================
2018-03-16 16:02:25.374578892 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776B_info:
	.quad	sat_s776B_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.375304938 UTC

.section .text
.align 8
sat_s776A_entry:
_c77I1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77I2
_c77I3:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Classes.>_entry@gotpcrel(%rip)
_c77I2:
	jmp *-16(%r13)
	.size sat_s776A_entry, .-sat_s776A_entry


==================== Asm code ====================
2018-03-16 16:02:25.37595061 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776A_info:
	.quad	sat_s776A_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.37671597 UTC

.section .text
.align 8
sat_s776z_entry:
_c77I8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77I9
_c77Ia:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Classes.<=_entry@gotpcrel(%rip)
_c77I9:
	jmp *-16(%r13)
	.size sat_s776z_entry, .-sat_s776z_entry


==================== Asm code ====================
2018-03-16 16:02:25.377424837 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776z_info:
	.quad	sat_s776z_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.378212389 UTC

.section .text
.align 8
sat_s776y_entry:
_c77If:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Ig
_c77Ih:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
_c77Ig:
	jmp *-16(%r13)
	.size sat_s776y_entry, .-sat_s776y_entry


==================== Asm code ====================
2018-03-16 16:02:25.378889413 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776y_info:
	.quad	sat_s776y_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.380196488 UTC

.section .text
.align 8
sat_s776x_entry:
_c77Im:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77In
_c77Io:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Classes.compare_entry@gotpcrel(%rip)
_c77In:
	jmp *-16(%r13)
	.size sat_s776x_entry, .-sat_s776x_entry


==================== Asm code ====================
2018-03-16 16:02:25.380816375 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776x_info:
	.quad	sat_s776x_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.381502859 UTC

.section .text
.align 8
sat_s776w_entry:
_c77It:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Iu
_c77Iv:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fOrdConst_$cp1Ord_entry
_c77Iu:
	jmp *-16(%r13)
	.size sat_s776w_entry, .-sat_s776w_entry


==================== Asm code ====================
2018-03-16 16:02:25.382124457 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776w_info:
	.quad	sat_s776w_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.383038466 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fOrdConst_entry
.type Data.Functor.Const.$fOrdConst_entry, @object
Data.Functor.Const.$fOrdConst_entry:
_c77Ix:
	addq $264,%r12
	cmpq 856(%r13),%r12
	ja _c77IB
_c77IA:
	leaq sat_s776D_info(%rip),%rax
	movq %rax,-256(%r12)
	movq %r14,-240(%r12)
	leaq sat_s776C_info(%rip),%rax
	movq %rax,-232(%r12)
	movq %r14,-216(%r12)
	leaq sat_s776B_info(%rip),%rax
	movq %rax,-208(%r12)
	movq %r14,-192(%r12)
	leaq sat_s776A_info(%rip),%rax
	movq %rax,-184(%r12)
	movq %r14,-168(%r12)
	leaq sat_s776z_info(%rip),%rax
	movq %rax,-160(%r12)
	movq %r14,-144(%r12)
	leaq sat_s776y_info(%rip),%rax
	movq %rax,-136(%r12)
	movq %r14,-120(%r12)
	leaq sat_s776x_info(%rip),%rax
	movq %rax,-112(%r12)
	movq %r14,-96(%r12)
	leaq sat_s776w_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %r14,-72(%r12)
	movq GHC.Classes.C:Ord_con_info@gotpcrel(%rip),%rax
	movq %rax,-64(%r12)
	leaq -88(%r12),%rax
	movq %rax,-56(%r12)
	leaq -112(%r12),%rax
	movq %rax,-48(%r12)
	leaq -136(%r12),%rax
	movq %rax,-40(%r12)
	leaq -160(%r12),%rax
	movq %rax,-32(%r12)
	leaq -184(%r12),%rax
	movq %rax,-24(%r12)
	leaq -208(%r12),%rax
	movq %rax,-16(%r12)
	leaq -232(%r12),%rax
	movq %rax,-8(%r12)
	leaq -256(%r12),%rax
	movq %rax,(%r12)
	leaq -63(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c77IB:
	movq $264,904(%r13)
	leaq Data.Functor.Const.$fOrdConst_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fOrdConst_entry, .-Data.Functor.Const.$fOrdConst_entry


==================== Asm code ====================
2018-03-16 16:02:25.383922318 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fOrdConst_info
.type Data.Functor.Const.$fOrdConst_info, @object
Data.Functor.Const.$fOrdConst_info:
	.quad	Data.Functor.Const.$fOrdConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.387268612 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fIxConst_$cp1Ix_closure
.type Data.Functor.Const.$fIxConst_$cp1Ix_closure, @object
Data.Functor.Const.$fIxConst_$cp1Ix_closure:
	.quad	Data.Functor.Const.$fIxConst_$cp1Ix_info


==================== Asm code ====================
2018-03-16 16:02:25.387984709 UTC

.section .text
.align 8
sat_s776F_entry:
_c77JK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77JL
_c77JM:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Arr.$p1Ix_entry@gotpcrel(%rip)
_c77JL:
	jmp *-16(%r13)
	.size sat_s776F_entry, .-sat_s776F_entry


==================== Asm code ====================
2018-03-16 16:02:25.388634838 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776F_info:
	.quad	sat_s776F_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.389381151 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fIxConst_$cp1Ix_entry
.type Data.Functor.Const.$fIxConst_$cp1Ix_entry, @object
Data.Functor.Const.$fIxConst_$cp1Ix_entry:
_c77JN:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c77JR
_c77JQ:
	leaq sat_s776F_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fOrdConst_entry
_c77JR:
	movq $24,904(%r13)
	leaq Data.Functor.Const.$fIxConst_$cp1Ix_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fIxConst_$cp1Ix_entry, .-Data.Functor.Const.$fIxConst_$cp1Ix_entry


==================== Asm code ====================
2018-03-16 16:02:25.390056811 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fIxConst_$cp1Ix_info
.type Data.Functor.Const.$fIxConst_$cp1Ix_info, @object
Data.Functor.Const.$fIxConst_$cp1Ix_info:
	.quad	Data.Functor.Const.$fIxConst_$cp1Ix_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.396306097 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fIxConst_closure
.type Data.Functor.Const.$fIxConst_closure, @object
Data.Functor.Const.$fIxConst_closure:
	.quad	Data.Functor.Const.$fIxConst_info


==================== Asm code ====================
2018-03-16 16:02:25.397103256 UTC

.section .text
.align 8
sat_s776N_entry:
_c77Ka:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Kb
_c77Kc:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Arr.unsafeRangeSize_entry@gotpcrel(%rip)
_c77Kb:
	jmp *-16(%r13)
	.size sat_s776N_entry, .-sat_s776N_entry


==================== Asm code ====================
2018-03-16 16:02:25.398004944 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776N_info:
	.quad	sat_s776N_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.398716695 UTC

.section .text
.align 8
sat_s776M_entry:
_c77Kh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Ki
_c77Kj:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Arr.rangeSize_entry@gotpcrel(%rip)
_c77Ki:
	jmp *-16(%r13)
	.size sat_s776M_entry, .-sat_s776M_entry


==================== Asm code ====================
2018-03-16 16:02:25.399346971 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776M_info:
	.quad	sat_s776M_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.400057458 UTC

.section .text
.align 8
sat_s776L_entry:
_c77Ko:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Kp
_c77Kq:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Arr.inRange_entry@gotpcrel(%rip)
_c77Kp:
	jmp *-16(%r13)
	.size sat_s776L_entry, .-sat_s776L_entry


==================== Asm code ====================
2018-03-16 16:02:25.400718428 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776L_info:
	.quad	sat_s776L_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.401440555 UTC

.section .text
.align 8
sat_s776K_entry:
_c77Kv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Kw
_c77Kx:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Arr.unsafeIndex_entry@gotpcrel(%rip)
_c77Kw:
	jmp *-16(%r13)
	.size sat_s776K_entry, .-sat_s776K_entry


==================== Asm code ====================
2018-03-16 16:02:25.402078801 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776K_info:
	.quad	sat_s776K_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.402831594 UTC

.section .text
.align 8
sat_s776J_entry:
_c77KC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77KD
_c77KE:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Arr.index_entry@gotpcrel(%rip)
_c77KD:
	jmp *-16(%r13)
	.size sat_s776J_entry, .-sat_s776J_entry


==================== Asm code ====================
2018-03-16 16:02:25.403495868 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776J_info:
	.quad	sat_s776J_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.40421211 UTC

.section .text
.align 8
sat_s776I_entry:
_c77KJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77KK
_c77KL:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Arr.range_entry@gotpcrel(%rip)
_c77KK:
	jmp *-16(%r13)
	.size sat_s776I_entry, .-sat_s776I_entry


==================== Asm code ====================
2018-03-16 16:02:25.404880787 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776I_info:
	.quad	sat_s776I_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.405612771 UTC

.section .text
.align 8
sat_s776H_entry:
_c77KQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77KR
_c77KS:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fIxConst_$cp1Ix_entry
_c77KR:
	jmp *-16(%r13)
	.size sat_s776H_entry, .-sat_s776H_entry


==================== Asm code ====================
2018-03-16 16:02:25.406290811 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776H_info:
	.quad	sat_s776H_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.407171889 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fIxConst_entry
.type Data.Functor.Const.$fIxConst_entry, @object
Data.Functor.Const.$fIxConst_entry:
_c77KU:
	addq $232,%r12
	cmpq 856(%r13),%r12
	ja _c77KY
_c77KX:
	leaq sat_s776N_info(%rip),%rax
	movq %rax,-224(%r12)
	movq %r14,-208(%r12)
	leaq sat_s776M_info(%rip),%rax
	movq %rax,-200(%r12)
	movq %r14,-184(%r12)
	leaq sat_s776L_info(%rip),%rax
	movq %rax,-176(%r12)
	movq %r14,-160(%r12)
	leaq sat_s776K_info(%rip),%rax
	movq %rax,-152(%r12)
	movq %r14,-136(%r12)
	leaq sat_s776J_info(%rip),%rax
	movq %rax,-128(%r12)
	movq %r14,-112(%r12)
	leaq sat_s776I_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %r14,-88(%r12)
	leaq sat_s776H_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq GHC.Arr.C:Ix_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	leaq -104(%r12),%rax
	movq %rax,-40(%r12)
	leaq -128(%r12),%rax
	movq %rax,-32(%r12)
	leaq -152(%r12),%rax
	movq %rax,-24(%r12)
	leaq -176(%r12),%rax
	movq %rax,-16(%r12)
	leaq -200(%r12),%rax
	movq %rax,-8(%r12)
	leaq -224(%r12),%rax
	movq %rax,(%r12)
	leaq -55(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c77KY:
	movq $232,904(%r13)
	leaq Data.Functor.Const.$fIxConst_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fIxConst_entry, .-Data.Functor.Const.$fIxConst_entry


==================== Asm code ====================
2018-03-16 16:02:25.40807368 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fIxConst_info
.type Data.Functor.Const.$fIxConst_info, @object
Data.Functor.Const.$fIxConst_info:
	.quad	Data.Functor.Const.$fIxConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.411345868 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fRealConst_$cp2Real_closure
.type Data.Functor.Const.$fRealConst_$cp2Real_closure, @object
Data.Functor.Const.$fRealConst_$cp2Real_closure:
	.quad	Data.Functor.Const.$fRealConst_$cp2Real_info


==================== Asm code ====================
2018-03-16 16:02:25.412132575 UTC

.section .text
.align 8
sat_s776P_entry:
_c77M0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77M1
_c77M2:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.$p2Real_entry@gotpcrel(%rip)
_c77M1:
	jmp *-16(%r13)
	.size sat_s776P_entry, .-sat_s776P_entry


==================== Asm code ====================
2018-03-16 16:02:25.413771344 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776P_info:
	.quad	sat_s776P_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.414469765 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fRealConst_$cp2Real_entry
.type Data.Functor.Const.$fRealConst_$cp2Real_entry, @object
Data.Functor.Const.$fRealConst_$cp2Real_entry:
_c77M3:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c77M7
_c77M6:
	leaq sat_s776P_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fOrdConst_entry
_c77M7:
	movq $24,904(%r13)
	leaq Data.Functor.Const.$fRealConst_$cp2Real_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fRealConst_$cp2Real_entry, .-Data.Functor.Const.$fRealConst_$cp2Real_entry


==================== Asm code ====================
2018-03-16 16:02:25.415100489 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fRealConst_$cp2Real_info
.type Data.Functor.Const.$fRealConst_$cp2Real_info, @object
Data.Functor.Const.$fRealConst_$cp2Real_info:
	.quad	Data.Functor.Const.$fRealConst_$cp2Real_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.419463741 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fRealConst_closure
.type Data.Functor.Const.$fRealConst_closure, @object
Data.Functor.Const.$fRealConst_closure:
	.quad	Data.Functor.Const.$fRealConst_info


==================== Asm code ====================
2018-03-16 16:02:25.420218822 UTC

.section .text
.align 8
sat_s776T_entry:
_c77Mq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Mr
_c77Ms:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.toRational_entry@gotpcrel(%rip)
_c77Mr:
	jmp *-16(%r13)
	.size sat_s776T_entry, .-sat_s776T_entry


==================== Asm code ====================
2018-03-16 16:02:25.420878186 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776T_info:
	.quad	sat_s776T_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.421626954 UTC

.section .text
.align 8
sat_s776S_entry:
_c77Mx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77My
_c77Mz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fRealConst_$cp2Real_entry
_c77My:
	jmp *-16(%r13)
	.size sat_s776S_entry, .-sat_s776S_entry


==================== Asm code ====================
2018-03-16 16:02:25.422264084 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776S_info:
	.quad	sat_s776S_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.422943174 UTC

.section .text
.align 8
sat_s776R_entry:
_c77ME:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77MF
_c77MG:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fRealConst_$cp1Real_entry
_c77MF:
	jmp *-16(%r13)
	.size sat_s776R_entry, .-sat_s776R_entry


==================== Asm code ====================
2018-03-16 16:02:25.423572917 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776R_info:
	.quad	sat_s776R_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.424387961 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fRealConst_entry
.type Data.Functor.Const.$fRealConst_entry, @object
Data.Functor.Const.$fRealConst_entry:
_c77MI:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _c77MM
_c77ML:
	leaq sat_s776T_info(%rip),%rax
	movq %rax,-96(%r12)
	movq %r14,-80(%r12)
	leaq sat_s776S_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-56(%r12)
	leaq sat_s776R_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-32(%r12)
	movq GHC.Real.C:Real_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq -48(%r12),%rax
	movq %rax,-16(%r12)
	leaq -72(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c77MM:
	movq $104,904(%r13)
	leaq Data.Functor.Const.$fRealConst_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fRealConst_entry, .-Data.Functor.Const.$fRealConst_entry


==================== Asm code ====================
2018-03-16 16:02:25.4251398 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fRealConst_info
.type Data.Functor.Const.$fRealConst_info, @object
Data.Functor.Const.$fRealConst_info:
	.quad	Data.Functor.Const.$fRealConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.428096595 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fIntegralConst_$cp1Integral_closure
.type Data.Functor.Const.$fIntegralConst_$cp1Integral_closure, @object
Data.Functor.Const.$fIntegralConst_$cp1Integral_closure:
	.quad	Data.Functor.Const.$fIntegralConst_$cp1Integral_info


==================== Asm code ====================
2018-03-16 16:02:25.428830119 UTC

.section .text
.align 8
sat_s776V_entry:
_c77Nm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Nn
_c77No:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.$p1Integral_entry@gotpcrel(%rip)
_c77Nn:
	jmp *-16(%r13)
	.size sat_s776V_entry, .-sat_s776V_entry


==================== Asm code ====================
2018-03-16 16:02:25.429767605 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776V_info:
	.quad	sat_s776V_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.430489689 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fIntegralConst_$cp1Integral_entry
.type Data.Functor.Const.$fIntegralConst_$cp1Integral_entry, @object
Data.Functor.Const.$fIntegralConst_$cp1Integral_entry:
_c77Np:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c77Nt
_c77Ns:
	leaq sat_s776V_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fRealConst_entry
_c77Nt:
	movq $24,904(%r13)
	leaq Data.Functor.Const.$fIntegralConst_$cp1Integral_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fIntegralConst_$cp1Integral_entry, .-Data.Functor.Const.$fIntegralConst_$cp1Integral_entry


==================== Asm code ====================
2018-03-16 16:02:25.431175745 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fIntegralConst_$cp1Integral_info
.type Data.Functor.Const.$fIntegralConst_$cp1Integral_info, @object
Data.Functor.Const.$fIntegralConst_$cp1Integral_info:
	.quad	Data.Functor.Const.$fIntegralConst_$cp1Integral_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.434152334 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fRealFracConst_$cp1RealFrac_closure
.type Data.Functor.Const.$fRealFracConst_$cp1RealFrac_closure, @object
Data.Functor.Const.$fRealFracConst_$cp1RealFrac_closure:
	.quad	Data.Functor.Const.$fRealFracConst_$cp1RealFrac_info


==================== Asm code ====================
2018-03-16 16:02:25.434913402 UTC

.section .text
.align 8
sat_s776X_entry:
_c77NM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77NN
_c77NO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.$p1RealFrac_entry@gotpcrel(%rip)
_c77NN:
	jmp *-16(%r13)
	.size sat_s776X_entry, .-sat_s776X_entry


==================== Asm code ====================
2018-03-16 16:02:25.435551122 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776X_info:
	.quad	sat_s776X_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.436294003 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fRealFracConst_$cp1RealFrac_entry
.type Data.Functor.Const.$fRealFracConst_$cp1RealFrac_entry, @object
Data.Functor.Const.$fRealFracConst_$cp1RealFrac_entry:
_c77NP:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c77NT
_c77NS:
	leaq sat_s776X_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fRealConst_entry
_c77NT:
	movq $24,904(%r13)
	leaq Data.Functor.Const.$fRealFracConst_$cp1RealFrac_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fRealFracConst_$cp1RealFrac_entry, .-Data.Functor.Const.$fRealFracConst_$cp1RealFrac_entry


==================== Asm code ====================
2018-03-16 16:02:25.436975284 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fRealFracConst_$cp1RealFrac_info
.type Data.Functor.Const.$fRealFracConst_$cp1RealFrac_info, @object
Data.Functor.Const.$fRealFracConst_$cp1RealFrac_info:
	.quad	Data.Functor.Const.$fRealFracConst_$cp1RealFrac_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.444310596 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fRealFracConst_closure
.type Data.Functor.Const.$fRealFracConst_closure, @object
Data.Functor.Const.$fRealFracConst_closure:
	.quad	Data.Functor.Const.$fRealFracConst_info


==================== Asm code ====================
2018-03-16 16:02:25.445172254 UTC

.section .text
.align 8
sat_s777a_entry:
_c77Od:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Oe
_c77Of:
	movq %r14,%rax
	movq 7(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Real.floor_entry@gotpcrel(%rip)
_c77Oe:
	jmp *-8(%r13)
	.size sat_s777a_entry, .-sat_s777a_entry


==================== Asm code ====================
2018-03-16 16:02:25.445910809 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777a_info:
	.quad	sat_s777a_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.44722694 UTC

.section .text
.align 8
sat_s7778_entry:
_c77Ol:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Om
_c77On:
	movq %r14,%rax
	movq 7(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Real.ceiling_entry@gotpcrel(%rip)
_c77Om:
	jmp *-8(%r13)
	.size sat_s7778_entry, .-sat_s7778_entry


==================== Asm code ====================
2018-03-16 16:02:25.447891913 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7778_info:
	.quad	sat_s7778_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.448634905 UTC

.section .text
.align 8
sat_s7776_entry:
_c77Ot:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Ou
_c77Ov:
	movq %r14,%rax
	movq 7(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Real.round_entry@gotpcrel(%rip)
_c77Ou:
	jmp *-8(%r13)
	.size sat_s7776_entry, .-sat_s7776_entry


==================== Asm code ====================
2018-03-16 16:02:25.449285196 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7776_info:
	.quad	sat_s7776_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.449982125 UTC

.section .text
.align 8
sat_s7774_entry:
_c77OB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77OC
_c77OD:
	movq %r14,%rax
	movq 7(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Real.truncate_entry@gotpcrel(%rip)
_c77OC:
	jmp *-8(%r13)
	.size sat_s7774_entry, .-sat_s7774_entry


==================== Asm code ====================
2018-03-16 16:02:25.450550928 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7774_info:
	.quad	sat_s7774_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.451200898 UTC

.section .text
.align 8
sat_s7772_entry:
_c77OJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77OK
_c77OL:
	movq %r14,%rax
	movq 7(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Real.properFraction_entry@gotpcrel(%rip)
_c77OK:
	jmp *-8(%r13)
	.size sat_s7772_entry, .-sat_s7772_entry


==================== Asm code ====================
2018-03-16 16:02:25.451877815 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7772_info:
	.quad	sat_s7772_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.45256779 UTC

.section .text
.align 8
sat_s7770_entry:
_c77OQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77OR
_c77OS:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fRealFracConst_$cp2RealFrac_entry
_c77OR:
	jmp *-16(%r13)
	.size sat_s7770_entry, .-sat_s7770_entry


==================== Asm code ====================
2018-03-16 16:02:25.453221009 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7770_info:
	.quad	sat_s7770_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.453926665 UTC

.section .text
.align 8
sat_s776Z_entry:
_c77OX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77OY
_c77OZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fRealFracConst_$cp1RealFrac_entry
_c77OY:
	jmp *-16(%r13)
	.size sat_s776Z_entry, .-sat_s776Z_entry


==================== Asm code ====================
2018-03-16 16:02:25.454525098 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s776Z_info:
	.quad	sat_s776Z_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.455380885 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fRealFracConst_entry
.type Data.Functor.Const.$fRealFracConst_entry, @object
Data.Functor.Const.$fRealFracConst_entry:
_c77P1:
	addq $192,%r12
	cmpq 856(%r13),%r12
	ja _c77P5
_c77P4:
	leaq sat_s777a_info(%rip),%rax
	movq %rax,-184(%r12)
	movq %r14,-176(%r12)
	leaq sat_s7778_info(%rip),%rax
	movq %rax,-168(%r12)
	movq %r14,-160(%r12)
	leaq sat_s7776_info(%rip),%rax
	movq %rax,-152(%r12)
	movq %r14,-144(%r12)
	leaq sat_s7774_info(%rip),%rax
	movq %rax,-136(%r12)
	movq %r14,-128(%r12)
	leaq sat_s7772_info(%rip),%rax
	movq %rax,-120(%r12)
	movq %r14,-112(%r12)
	leaq sat_s7770_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %r14,-88(%r12)
	leaq sat_s776Z_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq GHC.Real.C:RealFrac_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	leaq -104(%r12),%rax
	movq %rax,-40(%r12)
	leaq -119(%r12),%rax
	movq %rax,-32(%r12)
	leaq -135(%r12),%rax
	movq %rax,-24(%r12)
	leaq -151(%r12),%rax
	movq %rax,-16(%r12)
	leaq -167(%r12),%rax
	movq %rax,-8(%r12)
	leaq -183(%r12),%rax
	movq %rax,(%r12)
	leaq -55(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c77P5:
	movq $192,904(%r13)
	leaq Data.Functor.Const.$fRealFracConst_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fRealFracConst_entry, .-Data.Functor.Const.$fRealFracConst_entry


==================== Asm code ====================
2018-03-16 16:02:25.456254913 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fRealFracConst_info
.type Data.Functor.Const.$fRealFracConst_info, @object
Data.Functor.Const.$fRealFracConst_info:
	.quad	Data.Functor.Const.$fRealFracConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.459591921 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_closure
.type Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_closure, @object
Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_closure:
	.quad	Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_info


==================== Asm code ====================
2018-03-16 16:02:25.46034314 UTC

.section .text
.align 8
sat_s777c_entry:
_c77Q7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Q8
_c77Q9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.$p1RealFloat_entry@gotpcrel(%rip)
_c77Q8:
	jmp *-16(%r13)
	.size sat_s777c_entry, .-sat_s777c_entry


==================== Asm code ====================
2018-03-16 16:02:25.460992904 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777c_info:
	.quad	sat_s777c_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.461704389 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_entry
.type Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_entry, @object
Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_entry:
_c77Qa:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c77Qe
_c77Qd:
	leaq sat_s777c_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fRealFracConst_entry
_c77Qe:
	movq $24,904(%r13)
	leaq Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_entry, .-Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_entry


==================== Asm code ====================
2018-03-16 16:02:25.462354737 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_info
.type Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_info, @object
Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_info:
	.quad	Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.474130805 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fRealFloatConst_closure
.type Data.Functor.Const.$fRealFloatConst_closure, @object
Data.Functor.Const.$fRealFloatConst_closure:
	.quad	Data.Functor.Const.$fRealFloatConst_info


==================== Asm code ====================
2018-03-16 16:02:25.474973603 UTC

.section .text
.align 8
sat_s777t_entry:
_c77Qx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Qy
_c77Qz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.atan2_entry@gotpcrel(%rip)
_c77Qy:
	jmp *-16(%r13)
	.size sat_s777t_entry, .-sat_s777t_entry


==================== Asm code ====================
2018-03-16 16:02:25.475656643 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777t_info:
	.quad	sat_s777t_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.476420984 UTC

.section .text
.align 8
sat_s777s_entry:
_c77QE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77QF
_c77QG:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.isIEEE_entry@gotpcrel(%rip)
_c77QF:
	jmp *-16(%r13)
	.size sat_s777s_entry, .-sat_s777s_entry


==================== Asm code ====================
2018-03-16 16:02:25.477088529 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777s_info:
	.quad	sat_s777s_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.478084607 UTC

.section .text
.align 8
sat_s777r_entry:
_c77QL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77QM
_c77QN:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.isNegativeZero_entry@gotpcrel(%rip)
_c77QM:
	jmp *-16(%r13)
	.size sat_s777r_entry, .-sat_s777r_entry


==================== Asm code ====================
2018-03-16 16:02:25.478796634 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777r_info:
	.quad	sat_s777r_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.479567337 UTC

.section .text
.align 8
sat_s777q_entry:
_c77QS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77QT
_c77QU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.isDenormalized_entry@gotpcrel(%rip)
_c77QT:
	jmp *-16(%r13)
	.size sat_s777q_entry, .-sat_s777q_entry


==================== Asm code ====================
2018-03-16 16:02:25.48087304 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777q_info:
	.quad	sat_s777q_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.481561047 UTC

.section .text
.align 8
sat_s777p_entry:
_c77QZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77R0
_c77R1:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.isInfinite_entry@gotpcrel(%rip)
_c77R0:
	jmp *-16(%r13)
	.size sat_s777p_entry, .-sat_s777p_entry


==================== Asm code ====================
2018-03-16 16:02:25.482177386 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777p_info:
	.quad	sat_s777p_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.482880596 UTC

.section .text
.align 8
sat_s777o_entry:
_c77R6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77R7
_c77R8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.isNaN_entry@gotpcrel(%rip)
_c77R7:
	jmp *-16(%r13)
	.size sat_s777o_entry, .-sat_s777o_entry


==================== Asm code ====================
2018-03-16 16:02:25.483538123 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777o_info:
	.quad	sat_s777o_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.484243276 UTC

.section .text
.align 8
sat_s777n_entry:
_c77Rd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Re
_c77Rf:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.scaleFloat_entry@gotpcrel(%rip)
_c77Re:
	jmp *-16(%r13)
	.size sat_s777n_entry, .-sat_s777n_entry


==================== Asm code ====================
2018-03-16 16:02:25.484893311 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777n_info:
	.quad	sat_s777n_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.485628286 UTC

.section .text
.align 8
sat_s777m_entry:
_c77Rk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Rl
_c77Rm:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.significand_entry@gotpcrel(%rip)
_c77Rl:
	jmp *-16(%r13)
	.size sat_s777m_entry, .-sat_s777m_entry


==================== Asm code ====================
2018-03-16 16:02:25.486294052 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777m_info:
	.quad	sat_s777m_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.486999246 UTC

.section .text
.align 8
sat_s777l_entry:
_c77Rr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Rs
_c77Rt:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.exponent_entry@gotpcrel(%rip)
_c77Rs:
	jmp *-16(%r13)
	.size sat_s777l_entry, .-sat_s777l_entry


==================== Asm code ====================
2018-03-16 16:02:25.487627114 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777l_info:
	.quad	sat_s777l_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.48833538 UTC

.section .text
.align 8
sat_s777k_entry:
_c77Ry:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Rz
_c77RA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.encodeFloat_entry@gotpcrel(%rip)
_c77Rz:
	jmp *-16(%r13)
	.size sat_s777k_entry, .-sat_s777k_entry


==================== Asm code ====================
2018-03-16 16:02:25.488966326 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777k_info:
	.quad	sat_s777k_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.48982465 UTC

.section .text
.align 8
sat_s777j_entry:
_c77RF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77RG
_c77RH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.decodeFloat_entry@gotpcrel(%rip)
_c77RG:
	jmp *-16(%r13)
	.size sat_s777j_entry, .-sat_s777j_entry


==================== Asm code ====================
2018-03-16 16:02:25.490425991 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777j_info:
	.quad	sat_s777j_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.491152055 UTC

.section .text
.align 8
sat_s777i_entry:
_c77RM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77RN
_c77RO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.floatRange_entry@gotpcrel(%rip)
_c77RN:
	jmp *-16(%r13)
	.size sat_s777i_entry, .-sat_s777i_entry


==================== Asm code ====================
2018-03-16 16:02:25.491940072 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777i_info:
	.quad	sat_s777i_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.492620571 UTC

.section .text
.align 8
sat_s777h_entry:
_c77RT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77RU
_c77RV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.floatDigits_entry@gotpcrel(%rip)
_c77RU:
	jmp *-16(%r13)
	.size sat_s777h_entry, .-sat_s777h_entry


==================== Asm code ====================
2018-03-16 16:02:25.493331528 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777h_info:
	.quad	sat_s777h_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.49398201 UTC

.section .text
.align 8
sat_s777g_entry:
_c77S0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77S1
_c77S2:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Float.floatRadix_entry@gotpcrel(%rip)
_c77S1:
	jmp *-16(%r13)
	.size sat_s777g_entry, .-sat_s777g_entry


==================== Asm code ====================
2018-03-16 16:02:25.494610761 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777g_info:
	.quad	sat_s777g_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.495304882 UTC

.section .text
.align 8
sat_s777f_entry:
_c77S7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77S8
_c77S9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fRealFloatConst_$cp2RealFloat_entry
_c77S8:
	jmp *-16(%r13)
	.size sat_s777f_entry, .-sat_s777f_entry


==================== Asm code ====================
2018-03-16 16:02:25.495957246 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777f_info:
	.quad	sat_s777f_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.496662305 UTC

.section .text
.align 8
sat_s777e_entry:
_c77Se:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Sf
_c77Sg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fRealFloatConst_$cp1RealFloat_entry
_c77Sf:
	jmp *-16(%r13)
	.size sat_s777e_entry, .-sat_s777e_entry


==================== Asm code ====================
2018-03-16 16:02:25.497308699 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777e_info:
	.quad	sat_s777e_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.498392591 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fRealFloatConst_entry
.type Data.Functor.Const.$fRealFloatConst_entry, @object
Data.Functor.Const.$fRealFloatConst_entry:
_c77Si:
	addq $520,%r12
	cmpq 856(%r13),%r12
	ja _c77Sm
_c77Sl:
	leaq sat_s777t_info(%rip),%rax
	movq %rax,-512(%r12)
	movq %r14,-496(%r12)
	leaq sat_s777s_info(%rip),%rax
	movq %rax,-488(%r12)
	movq %r14,-472(%r12)
	leaq sat_s777r_info(%rip),%rax
	movq %rax,-464(%r12)
	movq %r14,-448(%r12)
	leaq sat_s777q_info(%rip),%rax
	movq %rax,-440(%r12)
	movq %r14,-424(%r12)
	leaq sat_s777p_info(%rip),%rax
	movq %rax,-416(%r12)
	movq %r14,-400(%r12)
	leaq sat_s777o_info(%rip),%rax
	movq %rax,-392(%r12)
	movq %r14,-376(%r12)
	leaq sat_s777n_info(%rip),%rax
	movq %rax,-368(%r12)
	movq %r14,-352(%r12)
	leaq sat_s777m_info(%rip),%rax
	movq %rax,-344(%r12)
	movq %r14,-328(%r12)
	leaq sat_s777l_info(%rip),%rax
	movq %rax,-320(%r12)
	movq %r14,-304(%r12)
	leaq sat_s777k_info(%rip),%rax
	movq %rax,-296(%r12)
	movq %r14,-280(%r12)
	leaq sat_s777j_info(%rip),%rax
	movq %rax,-272(%r12)
	movq %r14,-256(%r12)
	leaq sat_s777i_info(%rip),%rax
	movq %rax,-248(%r12)
	movq %r14,-232(%r12)
	leaq sat_s777h_info(%rip),%rax
	movq %rax,-224(%r12)
	movq %r14,-208(%r12)
	leaq sat_s777g_info(%rip),%rax
	movq %rax,-200(%r12)
	movq %r14,-184(%r12)
	leaq sat_s777f_info(%rip),%rax
	movq %rax,-176(%r12)
	movq %r14,-160(%r12)
	leaq sat_s777e_info(%rip),%rax
	movq %rax,-152(%r12)
	movq %r14,-136(%r12)
	movq GHC.Float.C:RealFloat_con_info@gotpcrel(%rip),%rax
	movq %rax,-128(%r12)
	leaq -152(%r12),%rax
	movq %rax,-120(%r12)
	leaq -176(%r12),%rax
	movq %rax,-112(%r12)
	leaq -200(%r12),%rax
	movq %rax,-104(%r12)
	leaq -224(%r12),%rax
	movq %rax,-96(%r12)
	leaq -248(%r12),%rax
	movq %rax,-88(%r12)
	leaq -272(%r12),%rax
	movq %rax,-80(%r12)
	leaq -296(%r12),%rax
	movq %rax,-72(%r12)
	leaq -320(%r12),%rax
	movq %rax,-64(%r12)
	leaq -344(%r12),%rax
	movq %rax,-56(%r12)
	leaq -368(%r12),%rax
	movq %rax,-48(%r12)
	leaq -392(%r12),%rax
	movq %rax,-40(%r12)
	leaq -416(%r12),%rax
	movq %rax,-32(%r12)
	leaq -440(%r12),%rax
	movq %rax,-24(%r12)
	leaq -464(%r12),%rax
	movq %rax,-16(%r12)
	leaq -488(%r12),%rax
	movq %rax,-8(%r12)
	leaq -512(%r12),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c77Sm:
	movq $520,904(%r13)
	leaq Data.Functor.Const.$fRealFloatConst_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fRealFloatConst_entry, .-Data.Functor.Const.$fRealFloatConst_entry


==================== Asm code ====================
2018-03-16 16:02:25.499492594 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fRealFloatConst_info
.type Data.Functor.Const.$fRealFloatConst_info, @object
Data.Functor.Const.$fRealFloatConst_info:
	.quad	Data.Functor.Const.$fRealFloatConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.506712338 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fEnumConst_closure
.type Data.Functor.Const.$fEnumConst_closure, @object
Data.Functor.Const.$fEnumConst_closure:
	.quad	Data.Functor.Const.$fEnumConst_info


==================== Asm code ====================
2018-03-16 16:02:25.507546481 UTC

.section .text
.align 8
sat_s777C_entry:
_c77Up:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Uq
_c77Ur:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Enum.enumFromThenTo_entry@gotpcrel(%rip)
_c77Uq:
	jmp *-16(%r13)
	.size sat_s777C_entry, .-sat_s777C_entry


==================== Asm code ====================
2018-03-16 16:02:25.508235423 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777C_info:
	.quad	sat_s777C_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.508967642 UTC

.section .text
.align 8
sat_s777B_entry:
_c77Uw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Ux
_c77Uy:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Enum.enumFromTo_entry@gotpcrel(%rip)
_c77Ux:
	jmp *-16(%r13)
	.size sat_s777B_entry, .-sat_s777B_entry


==================== Asm code ====================
2018-03-16 16:02:25.509733051 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777B_info:
	.quad	sat_s777B_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.510497326 UTC

.section .text
.align 8
sat_s777A_entry:
_c77UD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77UE
_c77UF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Enum.enumFromThen_entry@gotpcrel(%rip)
_c77UE:
	jmp *-16(%r13)
	.size sat_s777A_entry, .-sat_s777A_entry


==================== Asm code ====================
2018-03-16 16:02:25.51120748 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777A_info:
	.quad	sat_s777A_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.511951462 UTC

.section .text
.align 8
sat_s777z_entry:
_c77UK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77UL
_c77UM:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Enum.enumFrom_entry@gotpcrel(%rip)
_c77UL:
	jmp *-16(%r13)
	.size sat_s777z_entry, .-sat_s777z_entry


==================== Asm code ====================
2018-03-16 16:02:25.512616408 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777z_info:
	.quad	sat_s777z_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.514190514 UTC

.section .text
.align 8
sat_s777y_entry:
_c77UR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77US
_c77UT:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Enum.fromEnum_entry@gotpcrel(%rip)
_c77US:
	jmp *-16(%r13)
	.size sat_s777y_entry, .-sat_s777y_entry


==================== Asm code ====================
2018-03-16 16:02:25.514822547 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777y_info:
	.quad	sat_s777y_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.515477375 UTC

.section .text
.align 8
sat_s777x_entry:
_c77UY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77UZ
_c77V0:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Enum.toEnum_entry@gotpcrel(%rip)
_c77UZ:
	jmp *-16(%r13)
	.size sat_s777x_entry, .-sat_s777x_entry


==================== Asm code ====================
2018-03-16 16:02:25.51607958 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777x_info:
	.quad	sat_s777x_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.516759687 UTC

.section .text
.align 8
sat_s777w_entry:
_c77V5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77V6
_c77V7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Enum.pred_entry@gotpcrel(%rip)
_c77V6:
	jmp *-16(%r13)
	.size sat_s777w_entry, .-sat_s777w_entry


==================== Asm code ====================
2018-03-16 16:02:25.517452589 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777w_info:
	.quad	sat_s777w_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.51815018 UTC

.section .text
.align 8
sat_s777v_entry:
_c77Vc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Vd
_c77Ve:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Enum.succ_entry@gotpcrel(%rip)
_c77Vd:
	jmp *-16(%r13)
	.size sat_s777v_entry, .-sat_s777v_entry


==================== Asm code ====================
2018-03-16 16:02:25.518766807 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777v_info:
	.quad	sat_s777v_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.519694522 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fEnumConst_entry
.type Data.Functor.Const.$fEnumConst_entry, @object
Data.Functor.Const.$fEnumConst_entry:
_c77Vg:
	addq $264,%r12
	cmpq 856(%r13),%r12
	ja _c77Vk
_c77Vj:
	leaq sat_s777C_info(%rip),%rax
	movq %rax,-256(%r12)
	movq %r14,-240(%r12)
	leaq sat_s777B_info(%rip),%rax
	movq %rax,-232(%r12)
	movq %r14,-216(%r12)
	leaq sat_s777A_info(%rip),%rax
	movq %rax,-208(%r12)
	movq %r14,-192(%r12)
	leaq sat_s777z_info(%rip),%rax
	movq %rax,-184(%r12)
	movq %r14,-168(%r12)
	leaq sat_s777y_info(%rip),%rax
	movq %rax,-160(%r12)
	movq %r14,-144(%r12)
	leaq sat_s777x_info(%rip),%rax
	movq %rax,-136(%r12)
	movq %r14,-120(%r12)
	leaq sat_s777w_info(%rip),%rax
	movq %rax,-112(%r12)
	movq %r14,-96(%r12)
	leaq sat_s777v_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %r14,-72(%r12)
	movq GHC.Enum.C:Enum_con_info@gotpcrel(%rip),%rax
	movq %rax,-64(%r12)
	leaq -88(%r12),%rax
	movq %rax,-56(%r12)
	leaq -112(%r12),%rax
	movq %rax,-48(%r12)
	leaq -136(%r12),%rax
	movq %rax,-40(%r12)
	leaq -160(%r12),%rax
	movq %rax,-32(%r12)
	leaq -184(%r12),%rax
	movq %rax,-24(%r12)
	leaq -208(%r12),%rax
	movq %rax,-16(%r12)
	leaq -232(%r12),%rax
	movq %rax,-8(%r12)
	leaq -256(%r12),%rax
	movq %rax,(%r12)
	leaq -63(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c77Vk:
	movq $264,904(%r13)
	leaq Data.Functor.Const.$fEnumConst_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fEnumConst_entry, .-Data.Functor.Const.$fEnumConst_entry


==================== Asm code ====================
2018-03-16 16:02:25.520605731 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fEnumConst_info
.type Data.Functor.Const.$fEnumConst_info, @object
Data.Functor.Const.$fEnumConst_info:
	.quad	Data.Functor.Const.$fEnumConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.523828892 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fIntegralConst_$cp2Integral_closure
.type Data.Functor.Const.$fIntegralConst_$cp2Integral_closure, @object
Data.Functor.Const.$fIntegralConst_$cp2Integral_closure:
	.quad	Data.Functor.Const.$fIntegralConst_$cp2Integral_info


==================== Asm code ====================
2018-03-16 16:02:25.524553734 UTC

.section .text
.align 8
sat_s777E_entry:
_c77Wt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Wu
_c77Wv:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.$p2Integral_entry@gotpcrel(%rip)
_c77Wu:
	jmp *-16(%r13)
	.size sat_s777E_entry, .-sat_s777E_entry


==================== Asm code ====================
2018-03-16 16:02:25.525194435 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777E_info:
	.quad	sat_s777E_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.52640211 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fIntegralConst_$cp2Integral_entry
.type Data.Functor.Const.$fIntegralConst_$cp2Integral_entry, @object
Data.Functor.Const.$fIntegralConst_$cp2Integral_entry:
_c77Ww:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c77WA
_c77Wz:
	leaq sat_s777E_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fEnumConst_entry
_c77WA:
	movq $24,904(%r13)
	leaq Data.Functor.Const.$fIntegralConst_$cp2Integral_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fIntegralConst_$cp2Integral_entry, .-Data.Functor.Const.$fIntegralConst_$cp2Integral_entry


==================== Asm code ====================
2018-03-16 16:02:25.527046373 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fIntegralConst_$cp2Integral_info
.type Data.Functor.Const.$fIntegralConst_$cp2Integral_info, @object
Data.Functor.Const.$fIntegralConst_$cp2Integral_info:
	.quad	Data.Functor.Const.$fIntegralConst_$cp2Integral_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.534726368 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fIntegralConst_closure
.type Data.Functor.Const.$fIntegralConst_closure, @object
Data.Functor.Const.$fIntegralConst_closure:
	.quad	Data.Functor.Const.$fIntegralConst_info


==================== Asm code ====================
2018-03-16 16:02:25.535458781 UTC

.section .text
.align 8
sat_s777O_entry:
_c77WT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77WU
_c77WV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.toInteger_entry@gotpcrel(%rip)
_c77WU:
	jmp *-16(%r13)
	.size sat_s777O_entry, .-sat_s777O_entry


==================== Asm code ====================
2018-03-16 16:02:25.536097428 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777O_info:
	.quad	sat_s777O_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.536834408 UTC

.section .text
.align 8
sat_s777N_entry:
_c77X0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77X1
_c77X2:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.divMod_entry@gotpcrel(%rip)
_c77X1:
	jmp *-16(%r13)
	.size sat_s777N_entry, .-sat_s777N_entry


==================== Asm code ====================
2018-03-16 16:02:25.537484997 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777N_info:
	.quad	sat_s777N_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.538220956 UTC

.section .text
.align 8
sat_s777M_entry:
_c77X7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77X8
_c77X9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.quotRem_entry@gotpcrel(%rip)
_c77X8:
	jmp *-16(%r13)
	.size sat_s777M_entry, .-sat_s777M_entry


==================== Asm code ====================
2018-03-16 16:02:25.538832198 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777M_info:
	.quad	sat_s777M_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.5395286 UTC

.section .text
.align 8
sat_s777L_entry:
_c77Xe:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Xf
_c77Xg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.mod_entry@gotpcrel(%rip)
_c77Xf:
	jmp *-16(%r13)
	.size sat_s777L_entry, .-sat_s777L_entry


==================== Asm code ====================
2018-03-16 16:02:25.540172879 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777L_info:
	.quad	sat_s777L_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.54089569 UTC

.section .text
.align 8
sat_s777K_entry:
_c77Xl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Xm
_c77Xn:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.div_entry@gotpcrel(%rip)
_c77Xm:
	jmp *-16(%r13)
	.size sat_s777K_entry, .-sat_s777K_entry


==================== Asm code ====================
2018-03-16 16:02:25.541564829 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777K_info:
	.quad	sat_s777K_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.542292144 UTC

.section .text
.align 8
sat_s777J_entry:
_c77Xs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Xt
_c77Xu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.rem_entry@gotpcrel(%rip)
_c77Xt:
	jmp *-16(%r13)
	.size sat_s777J_entry, .-sat_s777J_entry


==================== Asm code ====================
2018-03-16 16:02:25.542989425 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777J_info:
	.quad	sat_s777J_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.543717359 UTC

.section .text
.align 8
sat_s777I_entry:
_c77Xz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77XA
_c77XB:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.quot_entry@gotpcrel(%rip)
_c77XA:
	jmp *-16(%r13)
	.size sat_s777I_entry, .-sat_s777I_entry


==================== Asm code ====================
2018-03-16 16:02:25.544424327 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777I_info:
	.quad	sat_s777I_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.545179369 UTC

.section .text
.align 8
sat_s777H_entry:
_c77XG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77XH
_c77XI:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fIntegralConst_$cp2Integral_entry
_c77XH:
	jmp *-16(%r13)
	.size sat_s777H_entry, .-sat_s777H_entry


==================== Asm code ====================
2018-03-16 16:02:25.546265552 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777H_info:
	.quad	sat_s777H_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.547519987 UTC

.section .text
.align 8
sat_s777G_entry:
_c77XN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77XO
_c77XP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fIntegralConst_$cp1Integral_entry
_c77XO:
	jmp *-16(%r13)
	.size sat_s777G_entry, .-sat_s777G_entry


==================== Asm code ====================
2018-03-16 16:02:25.548179425 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777G_info:
	.quad	sat_s777G_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.549076852 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fIntegralConst_entry
.type Data.Functor.Const.$fIntegralConst_entry, @object
Data.Functor.Const.$fIntegralConst_entry:
_c77XR:
	addq $296,%r12
	cmpq 856(%r13),%r12
	ja _c77XV
_c77XU:
	leaq sat_s777O_info(%rip),%rax
	movq %rax,-288(%r12)
	movq %r14,-272(%r12)
	leaq sat_s777N_info(%rip),%rax
	movq %rax,-264(%r12)
	movq %r14,-248(%r12)
	leaq sat_s777M_info(%rip),%rax
	movq %rax,-240(%r12)
	movq %r14,-224(%r12)
	leaq sat_s777L_info(%rip),%rax
	movq %rax,-216(%r12)
	movq %r14,-200(%r12)
	leaq sat_s777K_info(%rip),%rax
	movq %rax,-192(%r12)
	movq %r14,-176(%r12)
	leaq sat_s777J_info(%rip),%rax
	movq %rax,-168(%r12)
	movq %r14,-152(%r12)
	leaq sat_s777I_info(%rip),%rax
	movq %rax,-144(%r12)
	movq %r14,-128(%r12)
	leaq sat_s777H_info(%rip),%rax
	movq %rax,-120(%r12)
	movq %r14,-104(%r12)
	leaq sat_s777G_info(%rip),%rax
	movq %rax,-96(%r12)
	movq %r14,-80(%r12)
	movq GHC.Real.C:Integral_con_info@gotpcrel(%rip),%rax
	movq %rax,-72(%r12)
	leaq -96(%r12),%rax
	movq %rax,-64(%r12)
	leaq -120(%r12),%rax
	movq %rax,-56(%r12)
	leaq -144(%r12),%rax
	movq %rax,-48(%r12)
	leaq -168(%r12),%rax
	movq %rax,-40(%r12)
	leaq -192(%r12),%rax
	movq %rax,-32(%r12)
	leaq -216(%r12),%rax
	movq %rax,-24(%r12)
	leaq -240(%r12),%rax
	movq %rax,-16(%r12)
	leaq -264(%r12),%rax
	movq %rax,-8(%r12)
	leaq -288(%r12),%rax
	movq %rax,(%r12)
	leaq -71(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c77XV:
	movq $296,904(%r13)
	leaq Data.Functor.Const.$fIntegralConst_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fIntegralConst_entry, .-Data.Functor.Const.$fIntegralConst_entry


==================== Asm code ====================
2018-03-16 16:02:25.550069413 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fIntegralConst_info
.type Data.Functor.Const.$fIntegralConst_info, @object
Data.Functor.Const.$fIntegralConst_info:
	.quad	Data.Functor.Const.$fIntegralConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.553865427 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fBoundedConst_closure
.type Data.Functor.Const.$fBoundedConst_closure, @object
Data.Functor.Const.$fBoundedConst_closure:
	.quad	Data.Functor.Const.$fBoundedConst_info


==================== Asm code ====================
2018-03-16 16:02:25.554651703 UTC

.section .text
.align 8
sat_s777R_entry:
_c77Zb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Zc
_c77Zd:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Enum.maxBound_entry@gotpcrel(%rip)
_c77Zc:
	jmp *-16(%r13)
	.size sat_s777R_entry, .-sat_s777R_entry


==================== Asm code ====================
2018-03-16 16:02:25.55529348 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777R_info:
	.quad	sat_s777R_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.555969687 UTC

.section .text
.align 8
sat_s777Q_entry:
_c77Zi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77Zj
_c77Zk:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Enum.minBound_entry@gotpcrel(%rip)
_c77Zj:
	jmp *-16(%r13)
	.size sat_s777Q_entry, .-sat_s777Q_entry


==================== Asm code ====================
2018-03-16 16:02:25.556612202 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777Q_info:
	.quad	sat_s777Q_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.557432009 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fBoundedConst_entry
.type Data.Functor.Const.$fBoundedConst_entry, @object
Data.Functor.Const.$fBoundedConst_entry:
_c77Zm:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c77Zq
_c77Zp:
	leaq sat_s777R_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-48(%r12)
	leaq sat_s777Q_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq GHC.Enum.C:Bounded_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c77Zq:
	movq $72,904(%r13)
	leaq Data.Functor.Const.$fBoundedConst_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fBoundedConst_entry, .-Data.Functor.Const.$fBoundedConst_entry


==================== Asm code ====================
2018-03-16 16:02:25.558148007 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fBoundedConst_info
.type Data.Functor.Const.$fBoundedConst_info, @object
Data.Functor.Const.$fBoundedConst_info:
	.quad	Data.Functor.Const.$fBoundedConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.561224306 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fBitsConst_$cp1Bits_closure
.type Data.Functor.Const.$fBitsConst_$cp1Bits_closure, @object
Data.Functor.Const.$fBitsConst_$cp1Bits_closure:
	.quad	Data.Functor.Const.$fBitsConst_$cp1Bits_info


==================== Asm code ====================
2018-03-16 16:02:25.562291268 UTC

.section .text
.align 8
sat_s777T_entry:
_c77ZT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c77ZU
_c77ZV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.$p1Bits_entry@gotpcrel(%rip)
_c77ZU:
	jmp *-16(%r13)
	.size sat_s777T_entry, .-sat_s777T_entry


==================== Asm code ====================
2018-03-16 16:02:25.562928564 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777T_info:
	.quad	sat_s777T_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.563669446 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fBitsConst_$cp1Bits_entry
.type Data.Functor.Const.$fBitsConst_$cp1Bits_entry, @object
Data.Functor.Const.$fBitsConst_$cp1Bits_entry:
_c77ZW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c7800
_c77ZZ:
	leaq sat_s777T_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fEqConst_entry
_c7800:
	movq $24,904(%r13)
	leaq Data.Functor.Const.$fBitsConst_$cp1Bits_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fBitsConst_$cp1Bits_entry, .-Data.Functor.Const.$fBitsConst_$cp1Bits_entry


==================== Asm code ====================
2018-03-16 16:02:25.564357392 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fBitsConst_$cp1Bits_info
.type Data.Functor.Const.$fBitsConst_$cp1Bits_info, @object
Data.Functor.Const.$fBitsConst_$cp1Bits_info:
	.quad	Data.Functor.Const.$fBitsConst_$cp1Bits_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.582103409 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fBitsConst_closure
.type Data.Functor.Const.$fBitsConst_closure, @object
Data.Functor.Const.$fBitsConst_closure:
	.quad	Data.Functor.Const.$fBitsConst_info


==================== Asm code ====================
2018-03-16 16:02:25.583030787 UTC

.section .text
.align 8
sat_s778h_entry:
_c780j:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c780k
_c780l:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.popCount_entry@gotpcrel(%rip)
_c780k:
	jmp *-16(%r13)
	.size sat_s778h_entry, .-sat_s778h_entry


==================== Asm code ====================
2018-03-16 16:02:25.583679703 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s778h_info:
	.quad	sat_s778h_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.584418252 UTC

.section .text
.align 8
sat_s778g_entry:
_c780q:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c780r
_c780s:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.rotateR_entry@gotpcrel(%rip)
_c780r:
	jmp *-16(%r13)
	.size sat_s778g_entry, .-sat_s778g_entry


==================== Asm code ====================
2018-03-16 16:02:25.585045441 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s778g_info:
	.quad	sat_s778g_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.585829933 UTC

.section .text
.align 8
sat_s778f_entry:
_c780x:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c780y
_c780z:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.rotateL_entry@gotpcrel(%rip)
_c780y:
	jmp *-16(%r13)
	.size sat_s778f_entry, .-sat_s778f_entry


==================== Asm code ====================
2018-03-16 16:02:25.586484031 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s778f_info:
	.quad	sat_s778f_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.587221382 UTC

.section .text
.align 8
sat_s778e_entry:
_c780E:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c780F
_c780G:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.unsafeShiftR_entry@gotpcrel(%rip)
_c780F:
	jmp *-16(%r13)
	.size sat_s778e_entry, .-sat_s778e_entry


==================== Asm code ====================
2018-03-16 16:02:25.587870565 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s778e_info:
	.quad	sat_s778e_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.588591022 UTC

.section .text
.align 8
sat_s778d_entry:
_c780L:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c780M
_c780N:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.shiftR_entry@gotpcrel(%rip)
_c780M:
	jmp *-16(%r13)
	.size sat_s778d_entry, .-sat_s778d_entry


==================== Asm code ====================
2018-03-16 16:02:25.589220014 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s778d_info:
	.quad	sat_s778d_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.589922906 UTC

.section .text
.align 8
sat_s778c_entry:
_c780S:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c780T
_c780U:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.unsafeShiftL_entry@gotpcrel(%rip)
_c780T:
	jmp *-16(%r13)
	.size sat_s778c_entry, .-sat_s778c_entry


==================== Asm code ====================
2018-03-16 16:02:25.590581569 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s778c_info:
	.quad	sat_s778c_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.591321834 UTC

.section .text
.align 8
sat_s778b_entry:
_c780Z:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c7810
_c7811:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.shiftL_entry@gotpcrel(%rip)
_c7810:
	jmp *-16(%r13)
	.size sat_s778b_entry, .-sat_s778b_entry


==================== Asm code ====================
2018-03-16 16:02:25.591971864 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s778b_info:
	.quad	sat_s778b_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.592695446 UTC

.section .text
.align 8
sat_s778a_entry:
_c7816:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c7817
_c7818:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.isSigned_entry@gotpcrel(%rip)
_c7817:
	jmp *-16(%r13)
	.size sat_s778a_entry, .-sat_s778a_entry


==================== Asm code ====================
2018-03-16 16:02:25.595496546 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s778a_info:
	.quad	sat_s778a_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.596355467 UTC

.section .text
.align 8
sat_s7789_entry:
_c781d:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c781e
_c781f:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.bitSize_entry@gotpcrel(%rip)
_c781e:
	jmp *-16(%r13)
	.size sat_s7789_entry, .-sat_s7789_entry


==================== Asm code ====================
2018-03-16 16:02:25.597012293 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7789_info:
	.quad	sat_s7789_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.59776548 UTC

.section .text
.align 8
sat_s7788_entry:
_c781k:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c781l
_c781m:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.bitSizeMaybe_entry@gotpcrel(%rip)
_c781l:
	jmp *-16(%r13)
	.size sat_s7788_entry, .-sat_s7788_entry


==================== Asm code ====================
2018-03-16 16:02:25.598415531 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7788_info:
	.quad	sat_s7788_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.599158653 UTC

.section .text
.align 8
sat_s7787_entry:
_c781r:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c781s
_c781t:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.testBit_entry@gotpcrel(%rip)
_c781s:
	jmp *-16(%r13)
	.size sat_s7787_entry, .-sat_s7787_entry


==================== Asm code ====================
2018-03-16 16:02:25.599797575 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7787_info:
	.quad	sat_s7787_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.600454272 UTC

.section .text
.align 8
sat_s7786_entry:
_c781y:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c781z
_c781A:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.complementBit_entry@gotpcrel(%rip)
_c781z:
	jmp *-16(%r13)
	.size sat_s7786_entry, .-sat_s7786_entry


==================== Asm code ====================
2018-03-16 16:02:25.60108074 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7786_info:
	.quad	sat_s7786_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.601790191 UTC

.section .text
.align 8
sat_s7785_entry:
_c781F:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c781G
_c781H:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.clearBit_entry@gotpcrel(%rip)
_c781G:
	jmp *-16(%r13)
	.size sat_s7785_entry, .-sat_s7785_entry


==================== Asm code ====================
2018-03-16 16:02:25.602451407 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7785_info:
	.quad	sat_s7785_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.603189354 UTC

.section .text
.align 8
sat_s7784_entry:
_c781M:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c781N
_c781O:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.setBit_entry@gotpcrel(%rip)
_c781N:
	jmp *-16(%r13)
	.size sat_s7784_entry, .-sat_s7784_entry


==================== Asm code ====================
2018-03-16 16:02:25.603847774 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7784_info:
	.quad	sat_s7784_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.604554393 UTC

.section .text
.align 8
sat_s7783_entry:
_c781T:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c781U
_c781V:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.bit_entry@gotpcrel(%rip)
_c781U:
	jmp *-16(%r13)
	.size sat_s7783_entry, .-sat_s7783_entry


==================== Asm code ====================
2018-03-16 16:02:25.605216859 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7783_info:
	.quad	sat_s7783_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.606324508 UTC

.section .text
.align 8
sat_s7782_entry:
_c7820:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c7821
_c7822:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.zeroBits_entry@gotpcrel(%rip)
_c7821:
	jmp *-16(%r13)
	.size sat_s7782_entry, .-sat_s7782_entry


==================== Asm code ====================
2018-03-16 16:02:25.607017658 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7782_info:
	.quad	sat_s7782_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.607738028 UTC

.section .text
.align 8
sat_s7781_entry:
_c7827:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c7828
_c7829:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.rotate_entry@gotpcrel(%rip)
_c7828:
	jmp *-16(%r13)
	.size sat_s7781_entry, .-sat_s7781_entry


==================== Asm code ====================
2018-03-16 16:02:25.608375886 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7781_info:
	.quad	sat_s7781_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.609098103 UTC

.section .text
.align 8
sat_s7780_entry:
_c782e:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c782f
_c782g:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.shift_entry@gotpcrel(%rip)
_c782f:
	jmp *-16(%r13)
	.size sat_s7780_entry, .-sat_s7780_entry


==================== Asm code ====================
2018-03-16 16:02:25.609809827 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7780_info:
	.quad	sat_s7780_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.610521233 UTC

.section .text
.align 8
sat_s777Z_entry:
_c782l:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c782m
_c782n:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.complement_entry@gotpcrel(%rip)
_c782m:
	jmp *-16(%r13)
	.size sat_s777Z_entry, .-sat_s777Z_entry


==================== Asm code ====================
2018-03-16 16:02:25.611180355 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777Z_info:
	.quad	sat_s777Z_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.611951069 UTC

.section .text
.align 8
sat_s777Y_entry:
_c782s:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c782t
_c782u:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.xor_entry@gotpcrel(%rip)
_c782t:
	jmp *-16(%r13)
	.size sat_s777Y_entry, .-sat_s777Y_entry


==================== Asm code ====================
2018-03-16 16:02:25.612690993 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777Y_info:
	.quad	sat_s777Y_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.613507746 UTC

.section .text
.align 8
sat_s777X_entry:
_c782z:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c782A
_c782B:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits..|._entry@gotpcrel(%rip)
_c782A:
	jmp *-16(%r13)
	.size sat_s777X_entry, .-sat_s777X_entry


==================== Asm code ====================
2018-03-16 16:02:25.615026823 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777X_info:
	.quad	sat_s777X_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.615832339 UTC

.section .text
.align 8
sat_s777W_entry:
_c782G:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c782H
_c782I:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits..&._entry@gotpcrel(%rip)
_c782H:
	jmp *-16(%r13)
	.size sat_s777W_entry, .-sat_s777W_entry


==================== Asm code ====================
2018-03-16 16:02:25.616512587 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777W_info:
	.quad	sat_s777W_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.617210684 UTC

.section .text
.align 8
sat_s777V_entry:
_c782N:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c782O
_c782P:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fBitsConst_$cp1Bits_entry
_c782O:
	jmp *-16(%r13)
	.size sat_s777V_entry, .-sat_s777V_entry


==================== Asm code ====================
2018-03-16 16:02:25.618140225 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s777V_info:
	.quad	sat_s777V_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.619324468 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fBitsConst_entry
.type Data.Functor.Const.$fBitsConst_entry, @object
Data.Functor.Const.$fBitsConst_entry:
_c782R:
	addq $744,%r12
	cmpq 856(%r13),%r12
	ja _c782V
_c782U:
	leaq sat_s778h_info(%rip),%rax
	movq %rax,-736(%r12)
	movq %r14,-720(%r12)
	leaq sat_s778g_info(%rip),%rax
	movq %rax,-712(%r12)
	movq %r14,-696(%r12)
	leaq sat_s778f_info(%rip),%rax
	movq %rax,-688(%r12)
	movq %r14,-672(%r12)
	leaq sat_s778e_info(%rip),%rax
	movq %rax,-664(%r12)
	movq %r14,-648(%r12)
	leaq sat_s778d_info(%rip),%rax
	movq %rax,-640(%r12)
	movq %r14,-624(%r12)
	leaq sat_s778c_info(%rip),%rax
	movq %rax,-616(%r12)
	movq %r14,-600(%r12)
	leaq sat_s778b_info(%rip),%rax
	movq %rax,-592(%r12)
	movq %r14,-576(%r12)
	leaq sat_s778a_info(%rip),%rax
	movq %rax,-568(%r12)
	movq %r14,-552(%r12)
	leaq sat_s7789_info(%rip),%rax
	movq %rax,-544(%r12)
	movq %r14,-528(%r12)
	leaq sat_s7788_info(%rip),%rax
	movq %rax,-520(%r12)
	movq %r14,-504(%r12)
	leaq sat_s7787_info(%rip),%rax
	movq %rax,-496(%r12)
	movq %r14,-480(%r12)
	leaq sat_s7786_info(%rip),%rax
	movq %rax,-472(%r12)
	movq %r14,-456(%r12)
	leaq sat_s7785_info(%rip),%rax
	movq %rax,-448(%r12)
	movq %r14,-432(%r12)
	leaq sat_s7784_info(%rip),%rax
	movq %rax,-424(%r12)
	movq %r14,-408(%r12)
	leaq sat_s7783_info(%rip),%rax
	movq %rax,-400(%r12)
	movq %r14,-384(%r12)
	leaq sat_s7782_info(%rip),%rax
	movq %rax,-376(%r12)
	movq %r14,-360(%r12)
	leaq sat_s7781_info(%rip),%rax
	movq %rax,-352(%r12)
	movq %r14,-336(%r12)
	leaq sat_s7780_info(%rip),%rax
	movq %rax,-328(%r12)
	movq %r14,-312(%r12)
	leaq sat_s777Z_info(%rip),%rax
	movq %rax,-304(%r12)
	movq %r14,-288(%r12)
	leaq sat_s777Y_info(%rip),%rax
	movq %rax,-280(%r12)
	movq %r14,-264(%r12)
	leaq sat_s777X_info(%rip),%rax
	movq %rax,-256(%r12)
	movq %r14,-240(%r12)
	leaq sat_s777W_info(%rip),%rax
	movq %rax,-232(%r12)
	movq %r14,-216(%r12)
	leaq sat_s777V_info(%rip),%rax
	movq %rax,-208(%r12)
	movq %r14,-192(%r12)
	movq Data.Bits.C:Bits_con_info@gotpcrel(%rip),%rax
	movq %rax,-184(%r12)
	leaq -208(%r12),%rax
	movq %rax,-176(%r12)
	leaq -232(%r12),%rax
	movq %rax,-168(%r12)
	leaq -256(%r12),%rax
	movq %rax,-160(%r12)
	leaq -280(%r12),%rax
	movq %rax,-152(%r12)
	leaq -304(%r12),%rax
	movq %rax,-144(%r12)
	leaq -328(%r12),%rax
	movq %rax,-136(%r12)
	leaq -352(%r12),%rax
	movq %rax,-128(%r12)
	leaq -376(%r12),%rax
	movq %rax,-120(%r12)
	leaq -400(%r12),%rax
	movq %rax,-112(%r12)
	leaq -424(%r12),%rax
	movq %rax,-104(%r12)
	leaq -448(%r12),%rax
	movq %rax,-96(%r12)
	leaq -472(%r12),%rax
	movq %rax,-88(%r12)
	leaq -496(%r12),%rax
	movq %rax,-80(%r12)
	leaq -520(%r12),%rax
	movq %rax,-72(%r12)
	leaq -544(%r12),%rax
	movq %rax,-64(%r12)
	leaq -568(%r12),%rax
	movq %rax,-56(%r12)
	leaq -592(%r12),%rax
	movq %rax,-48(%r12)
	leaq -616(%r12),%rax
	movq %rax,-40(%r12)
	leaq -640(%r12),%rax
	movq %rax,-32(%r12)
	leaq -664(%r12),%rax
	movq %rax,-24(%r12)
	leaq -688(%r12),%rax
	movq %rax,-16(%r12)
	leaq -712(%r12),%rax
	movq %rax,-8(%r12)
	leaq -736(%r12),%rax
	movq %rax,(%r12)
	leaq -183(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c782V:
	movq $744,904(%r13)
	leaq Data.Functor.Const.$fBitsConst_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fBitsConst_entry, .-Data.Functor.Const.$fBitsConst_entry


==================== Asm code ====================
2018-03-16 16:02:25.620637956 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fBitsConst_info
.type Data.Functor.Const.$fBitsConst_info, @object
Data.Functor.Const.$fBitsConst_info:
	.quad	Data.Functor.Const.$fBitsConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.623861297 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_closure
.type Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_closure, @object
Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_closure:
	.quad	Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_info


==================== Asm code ====================
2018-03-16 16:02:25.62463834 UTC

.section .text
.align 8
sat_s778j_entry:
_c785L:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c785M
_c785N:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.$p1FiniteBits_entry@gotpcrel(%rip)
_c785M:
	jmp *-16(%r13)
	.size sat_s778j_entry, .-sat_s778j_entry


==================== Asm code ====================
2018-03-16 16:02:25.625326639 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s778j_info:
	.quad	sat_s778j_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.626039307 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_entry
.type Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_entry, @object
Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_entry:
_c785O:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c785S
_c785R:
	leaq sat_s778j_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp Data.Functor.Const.$fBitsConst_entry
_c785S:
	movq $24,904(%r13)
	leaq Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_entry, .-Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_entry


==================== Asm code ====================
2018-03-16 16:02:25.626714415 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_info
.type Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_info, @object
Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_info:
	.quad	Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.631543258 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$fFiniteBitsConst_closure
.type Data.Functor.Const.$fFiniteBitsConst_closure, @object
Data.Functor.Const.$fFiniteBitsConst_closure:
	.quad	Data.Functor.Const.$fFiniteBitsConst_info


==================== Asm code ====================
2018-03-16 16:02:25.632277171 UTC

.section .text
.align 8
sat_s778o_entry:
_c786b:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c786c
_c786d:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.countTrailingZeros_entry@gotpcrel(%rip)
_c786c:
	jmp *-16(%r13)
	.size sat_s778o_entry, .-sat_s778o_entry


==================== Asm code ====================
2018-03-16 16:02:25.632981744 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s778o_info:
	.quad	sat_s778o_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.634041086 UTC

.section .text
.align 8
sat_s778n_entry:
_c786i:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c786j
_c786k:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.countLeadingZeros_entry@gotpcrel(%rip)
_c786j:
	jmp *-16(%r13)
	.size sat_s778n_entry, .-sat_s778n_entry


==================== Asm code ====================
2018-03-16 16:02:25.634666149 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s778n_info:
	.quad	sat_s778n_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.635371951 UTC

.section .text
.align 8
sat_s778m_entry:
_c786p:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c786q
_c786r:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Bits.finiteBitSize_entry@gotpcrel(%rip)
_c786q:
	jmp *-16(%r13)
	.size sat_s778m_entry, .-sat_s778m_entry


==================== Asm code ====================
2018-03-16 16:02:25.636076748 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s778m_info:
	.quad	sat_s778m_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.636739525 UTC

.section .text
.align 8
sat_s778l_entry:
_c786w:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c786x
_c786y:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Functor.Const.$fFiniteBitsConst_$cp1FiniteBits_entry
_c786x:
	jmp *-16(%r13)
	.size sat_s778l_entry, .-sat_s778l_entry


==================== Asm code ====================
2018-03-16 16:02:25.637425788 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s778l_info:
	.quad	sat_s778l_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:02:25.638238199 UTC

.section .text
.align 8
.globl Data.Functor.Const.$fFiniteBitsConst_entry
.type Data.Functor.Const.$fFiniteBitsConst_entry, @object
Data.Functor.Const.$fFiniteBitsConst_entry:
_c786A:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _c786E
_c786D:
	leaq sat_s778o_info(%rip),%rax
	movq %rax,-128(%r12)
	movq %r14,-112(%r12)
	leaq sat_s778n_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %r14,-88(%r12)
	leaq sat_s778m_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	leaq sat_s778l_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-40(%r12)
	movq Data.Bits.C:FiniteBits_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -80(%r12),%rax
	movq %rax,-16(%r12)
	leaq -104(%r12),%rax
	movq %rax,-8(%r12)
	leaq -128(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c786E:
	movq $136,904(%r13)
	leaq Data.Functor.Const.$fFiniteBitsConst_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Functor.Const.$fFiniteBitsConst_entry, .-Data.Functor.Const.$fFiniteBitsConst_entry


==================== Asm code ====================
2018-03-16 16:02:25.639066442 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.$fFiniteBitsConst_info
.type Data.Functor.Const.$fFiniteBitsConst_info, @object
Data.Functor.Const.$fFiniteBitsConst_info:
	.quad	Data.Functor.Const.$fFiniteBitsConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.64149085 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.getConst1_closure
.type Data.Functor.Const.getConst1_closure, @object
Data.Functor.Const.getConst1_closure:
	.quad	Data.Functor.Const.getConst1_info


==================== Asm code ====================
2018-03-16 16:02:25.642146063 UTC

.section .text
.align 8
.globl Data.Functor.Const.getConst1_entry
.type Data.Functor.Const.getConst1_entry, @object
Data.Functor.Const.getConst1_entry:
_c787h:
	movq %r14,%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size Data.Functor.Const.getConst1_entry, .-Data.Functor.Const.getConst1_entry


==================== Asm code ====================
2018-03-16 16:02:25.642776399 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.getConst1_info
.type Data.Functor.Const.getConst1_info, @object
Data.Functor.Const.getConst1_info:
	.quad	Data.Functor.Const.getConst1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.645013683 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.getConst_closure
.type Data.Functor.Const.getConst_closure, @object
Data.Functor.Const.getConst_closure:
	.quad	Data.Functor.Const.getConst_info


==================== Asm code ====================
2018-03-16 16:02:25.64574686 UTC

.section .text
.align 8
.globl Data.Functor.Const.getConst_entry
.type Data.Functor.Const.getConst_entry, @object
Data.Functor.Const.getConst_entry:
_c787s:
	jmp Data.Functor.Const.getConst1_entry
	.size Data.Functor.Const.getConst_entry, .-Data.Functor.Const.getConst_entry


==================== Asm code ====================
2018-03-16 16:02:25.646369922 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Functor.Const.getConst_info
.type Data.Functor.Const.getConst_info, @object
Data.Functor.Const.getConst_info:
	.quad	Data.Functor.Const.getConst_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:02:25.648661706 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Const.$trModule4_bytes
.type Data.Functor.Const.$trModule4_bytes, @object
Data.Functor.Const.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:02:25.650687501 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$trModule3_closure
.type Data.Functor.Const.$trModule3_closure, @object
Data.Functor.Const.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.Functor.Const.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:02:25.652390842 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Const.$trModule2_bytes
.type Data.Functor.Const.$trModule2_bytes, @object
Data.Functor.Const.$trModule2_bytes:
	.asciz "Data.Functor.Const"


==================== Asm code ====================
2018-03-16 16:02:25.654187599 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$trModule1_closure
.type Data.Functor.Const.$trModule1_closure, @object
Data.Functor.Const.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.Functor.Const.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:02:25.656036779 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$trModule_closure
.type Data.Functor.Const.$trModule_closure, @object
Data.Functor.Const.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	Data.Functor.Const.$trModule3_closure+1
	.quad	Data.Functor.Const.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:25.657834735 UTC

.section .data
.align 8
.align 1
$krep_r74ZT_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 16:02:25.659531698 UTC

.section .data
.align 8
.align 1
$krep1_r74ZU_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:02:25.661325871 UTC

.section .data
.align 8
.align 1
$krep2_r74ZV_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_r74ZU_closure+2
	.quad	GHC.Types.krep$*_closure
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:25.663063229 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$tcConst1_closure
.type Data.Functor.Const.$tcConst1_closure, @object
Data.Functor.Const.$tcConst1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.Types.krep$*_closure
	.quad	$krep2_r74ZV_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:25.664762242 UTC

.section .data
.align 8
.align 1
$krep3_r74ZW_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	2


==================== Asm code ====================
2018-03-16 16:02:25.666491743 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$tcConst2_closure
.type Data.Functor.Const.$tcConst2_closure, @object
Data.Functor.Const.$tcConst2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.Functor.Const.$fReadConst5_bytes


==================== Asm code ====================
2018-03-16 16:02:25.668232327 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$tcConst_closure
.type Data.Functor.Const.$tcConst_closure, @object
Data.Functor.Const.$tcConst_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Data.Functor.Const.$trModule_closure+1
	.quad	Data.Functor.Const.$tcConst2_closure+1
	.quad	Data.Functor.Const.$tcConst1_closure+4
	.quad	-242646752423709034
	.quad	-1564575527563685611
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:25.670111076 UTC

.section .data
.align 8
.align 1
$krep4_r74ZX_closure:
	.quad	:_con_info
	.quad	$krep3_r74ZW_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:25.671865799 UTC

.section .data
.align 8
.align 1
$krep5_r74ZY_closure:
	.quad	:_con_info
	.quad	$krep_r74ZT_closure+2
	.quad	$krep4_r74ZX_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:25.674654336 UTC

.section .data
.align 8
.align 1
$krep6_r74ZZ_closure:
	.quad	:_con_info
	.quad	$krep1_r74ZU_closure+2
	.quad	$krep5_r74ZY_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:25.676312222 UTC

.section .data
.align 8
.align 1
$krep7_r7500_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	Data.Functor.Const.$tcConst_closure+1
	.quad	$krep6_r74ZZ_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:25.677991688 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$tc'Const1_closure
.type Data.Functor.Const.$tc'Const1_closure, @object
Data.Functor.Const.$tc'Const1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r74ZT_closure+2
	.quad	$krep7_r7500_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:25.679575188 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Functor.Const.$tc'Const3_bytes
.type Data.Functor.Const.$tc'Const3_bytes, @object
Data.Functor.Const.$tc'Const3_bytes:
	.asciz "'Const"


==================== Asm code ====================
2018-03-16 16:02:25.681229924 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$tc'Const2_closure
.type Data.Functor.Const.$tc'Const2_closure, @object
Data.Functor.Const.$tc'Const2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.Functor.Const.$tc'Const3_bytes


==================== Asm code ====================
2018-03-16 16:02:25.682913595 UTC

.section .data
.align 8
.align 1
.globl Data.Functor.Const.$tc'Const_closure
.type Data.Functor.Const.$tc'Const_closure, @object
Data.Functor.Const.$tc'Const_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Data.Functor.Const.$trModule_closure+1
	.quad	Data.Functor.Const.$tc'Const2_closure+1
	.quad	Data.Functor.Const.$tc'Const1_closure+4
	.quad	9035619270378585414
	.quad	-8649482434963437528
	.quad	3
	.quad	3


==================== Asm code ====================
2018-03-16 16:02:25.684902483 UTC

.section .data.rel.ro
.align 8
.align 1
S77av_srt:
	.quad	Data.Functor.Const.$fReadConst4_closure
	.quad	GHC.Read.lex1_closure
	.quad	GHC.Read.readParen_closure
	.quad	Data.Functor.Const.$w$creadsPrec_closure
	.quad	Data.Functor.Const.$fReadConst_$creadsPrec_closure
	.quad	Data.Functor.Const.$fReadConst2_closure
	.quad	GHC.Read.list_closure
	.quad	Data.Functor.Const.$fReadConst_$creadList_closure
	.quad	Data.Functor.Const.$w$creadListPrec_closure
	.quad	Data.Functor.Const.$fReadConst_closure
	.quad	Data.Functor.Const.$fShowConst1_closure
	.quad	Data.Functor.Const.$w$cshowsPrec_closure
	.quad	Data.Functor.Const.$fShowConst_$cshowsPrec_closure
	.quad	Data.Functor.Const.$fShowConst_$cshow_closure
	.quad	Data.Functor.Const.$fShowConst_$cshowList_closure
	.quad	Data.Functor.Const.$fShowConst_closure
	.quad	Data.Semigroup.Internal.$fMonoidSum2_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	Data.Functor.Const.$fFoldableConst1_closure
	.quad	Data.Functor.Const.$fFoldableConst3_closure
	.quad	Data.Functor.Const.$fFoldableConst6_closure
	.quad	Data.Functor.Const.$fFoldableConst8_closure
	.quad	Data.Semigroup.Internal.$fMonoidProduct2_closure
	.quad	Data.Functor.Const.$fApplicativeConst_closure
	.quad	Data.Functor.Const.$fFunctorConst_closure

