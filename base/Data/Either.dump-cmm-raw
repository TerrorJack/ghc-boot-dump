
==================== Raw Cmm ====================
2018-03-16 16:00:13.304758276 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:00:13.307269383 UTC

[section ""data" . Data.Either.$fApplicativeEither_$cfmap_closure" {
     Data.Either.$fApplicativeEither_$cfmap_closure:
         const Data.Either.$fApplicativeEither_$cfmap_info;
 },
 Data.Either.$fApplicativeEither_$cfmap_entry() //  [R2, R3]
         { []
         }
     {offset
       c5fBz: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5fBA; else goto c5fBB;
       c5fBA: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fApplicativeEither_$cfmap_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5fBB: // global
           I64[Sp - 16] = block_c5fBs_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5fBM; else goto c5fBt;
       u5fBM: // global
           call _c5fBs(R1) args: 0, res: 0, upd: 0;
       c5fBt: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fApplicativeEither_$cfmap_info" {
     Data.Either.$fApplicativeEither_$cfmap_info:
         const Data.Either.$fApplicativeEither_$cfmap_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5fBs() //  [R1]
         { []
         }
     {offset
       c5fBs: // global
           if (R1 & 7 == 1) goto c5fBw; else goto c5fBx;
       c5fBw: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5fBx: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5fBL; else goto c5fBK;
       c5fBL: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5fBK: // global
           _s5exp::P64 = P64[R1 + 6];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _s5exp::P64;
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fBs_info" {
     block_c5fBs_info:
         const _c5fBs;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.314898426 UTC

[section ""data" . Data.Either.$fFunctorEither_$c<$_closure" {
     Data.Either.$fFunctorEither_$c<$_closure:
         const Data.Either.$fFunctorEither_$c<$_info;
 },
 Data.Either.$fFunctorEither_$c<$_entry() //  [R2, R3]
         { []
         }
     {offset
       c5fCe: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5fCf; else goto c5fCg;
       c5fCf: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fFunctorEither_$c<$_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5fCg: // global
           I64[Sp - 16] = block_c5fC7_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5fCq; else goto c5fC8;
       u5fCq: // global
           call _c5fC7(R1) args: 0, res: 0, upd: 0;
       c5fC8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fFunctorEither_$c<$_info" {
     Data.Either.$fFunctorEither_$c<$_info:
         const Data.Either.$fFunctorEither_$c<$_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5fC7() //  [R1]
         { []
         }
     {offset
       c5fC7: // global
           if (R1 & 7 == 1) goto c5fCb; else goto c5fCc;
       c5fCb: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5fCc: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5fCp; else goto c5fCo;
       c5fCp: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5fCo: // global
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fC7_info" {
     block_c5fC7_info:
         const _c5fC7;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.320819953 UTC

[section ""data" . Data.Either.$fFunctorEither_closure" {
     Data.Either.$fFunctorEither_closure:
         const GHC.Base.C:Functor_con_info;
         const Data.Either.$fApplicativeEither_$cfmap_closure+2;
         const Data.Either.$fFunctorEither_$c<$_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.323110865 UTC

[section ""cstring" . lvl_r5exb_bytes" {
     lvl_r5exb_bytes:
         I8[] [115,116,105,109,101,115,58,32,112,111,115,105,116,105,118,101,32,109,117,108,116,105,112,108,105,101,114,32,101,120,112,101,99,116,101,100]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.325746893 UTC

[section ""data" . Data.Either.$fSemigroupEither1_closure" {
     Data.Either.$fSemigroupEither1_closure:
         const Data.Either.$fSemigroupEither1_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Either.$fSemigroupEither1_entry() //  [R1]
         { []
         }
     {offset
       c5fCQ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5fCR; else goto c5fCS;
       c5fCR: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5fCS: // global
           (_c5fCL::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5fCL::I64 == 0) goto c5fCN; else goto c5fCM;
       c5fCN: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5fCM: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5fCL::I64;
           I64[Sp - 24] = block_c5fCO_info;
           R2 = lvl_r5exb_bytes;
           Sp = Sp - 24;
           call GHC.CString.unpackCString#_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . Data.Either.$fSemigroupEither1_info" {
     Data.Either.$fSemigroupEither1_info:
         const Data.Either.$fSemigroupEither1_entry;
         const 0;
         const 4294967317;
         const S5eEs_srt;
 },
 _c5fCO() //  [R1]
         { []
         }
     {offset
       c5fCO: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5fCO_info" {
     block_c5fCO_info:
         const _c5fCO;
         const 0;
         const 4294967326;
         const S5eEs_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.331651904 UTC

[section ""data" . Data.Either.$fSemigroupEither2_closure" {
     Data.Either.$fSemigroupEither2_closure:
         const Data.Either.$fSemigroupEither2_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Either.$fSemigroupEither2_entry() //  [R1]
         { []
         }
     {offset
       c5fDc: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5fDd; else goto c5fDe;
       c5fDd: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5fDe: // global
           (_c5fD9::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5fD9::I64 == 0) goto c5fDb; else goto c5fDa;
       c5fDb: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5fDa: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5fD9::I64;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Either.$fSemigroupEither2_info" {
     Data.Either.$fSemigroupEither2_info:
         const Data.Either.$fSemigroupEither2_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.338235119 UTC

[section ""data" . Data.Either.$fSemigroupEither_$cstimes_closure" {
     Data.Either.$fSemigroupEither_$cstimes_closure:
         const Data.Either.$fSemigroupEither_$cstimes_info;
         const 0;
 },
 sat_s5exD_entry() //  [R1]
         { []
         }
     {offset
       c5fDA: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5fDB; else goto c5fDC;
       c5fDB: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5fDC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5fDy_info;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call GHC.Real.$p1Real_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5exD_info" {
     sat_s5exD_info:
         const sat_s5exD_entry;
         const 1;
         const 4294967312;
         const S5eEs_srt+8;
 },
 _c5fDy() //  [R1]
         { []
         }
     {offset
       c5fDy: // global
           R2 = R1;
           I64[Sp - 8] = stg_ap_p_info;
           P64[Sp] = Data.Either.$fSemigroupEither2_closure;
           Sp = Sp - 8;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5fDy_info" {
     block_c5fDy_info:
         const _c5fDy;
         const 0;
         const 4294967326;
         const S5eEs_srt+8;
 },
 Data.Either.$fSemigroupEither_$cstimes_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5fDG: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5fDI; else goto c5fDJ;
       c5fDI: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fSemigroupEither_$cstimes_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5fDJ: // global
           I64[Sp - 24] = block_c5fDq_info;
           R2 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call GHC.Real.$p1Integral_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fSemigroupEither_$cstimes_info" {
     Data.Either.$fSemigroupEither_$cstimes_info:
         const Data.Either.$fSemigroupEither_$cstimes_entry;
         const 0;
         const 30064771086;
         const 12884901911;
         const S5eEs_srt+8;
 },
 _c5fDq() //  [R1]
         { []
         }
     {offset
       c5fDq: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5fDM; else goto c5fDL;
       c5fDM: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5fDL: // global
           I64[Hp - 16] = sat_s5exD_info;
           P64[Hp] = R1;
           I64[Sp - 8] = block_c5fDH_info;
           R2 = R1;
           P64[Sp] = Hp - 16;
           Sp = Sp - 8;
           call GHC.Real.$p2Real_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fDq_info" {
     block_c5fDq_info:
         const _c5fDq;
         const 2;
         const 21474836510;
         const S5eEs_srt+8;
 },
 _c5fDH() //  [R1]
         { []
         }
     {offset
       c5fDH: // global
           _s5exy::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c5fDQ_info;
           R2 = R1;
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = _s5exy::P64;
           Sp = Sp - 8;
           call GHC.Classes.<=_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fDH_info" {
     block_c5fDH_info:
         const _c5fDH;
         const 3;
         const 4294967326;
         const S5eEs_srt+24;
 },
 _c5fDQ() //  [R1]
         { []
         }
     {offset
       c5fDQ: // global
           if (R1 & 7 == 1) goto c5fDX; else goto c5fE1;
       c5fDX: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5fE1: // global
           R1 = Data.Either.$fSemigroupEither1_closure;
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fDQ_info" {
     block_c5fDQ_info:
         const _c5fDQ;
         const 1;
         const 4294967326;
         const S5eEs_srt+24;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.351092679 UTC

[section ""data" . Data.Either.$fSemigroupEither_$c<>_closure" {
     Data.Either.$fSemigroupEither_$c<>_closure:
         const Data.Either.$fSemigroupEither_$c<>_info;
 },
 Data.Either.$fSemigroupEither_$c<>_entry() //  [R2, R3]
         { []
         }
     {offset
       c5fEF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5fEG; else goto c5fEH;
       c5fEG: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fSemigroupEither_$c<>_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5fEH: // global
           I64[Sp - 16] = block_c5fEy_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5fEO; else goto c5fEz;
       u5fEO: // global
           call _c5fEy(R1) args: 0, res: 0, upd: 0;
       c5fEz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fSemigroupEither_$c<>_info" {
     Data.Either.$fSemigroupEither_$c<>_info:
         const Data.Either.$fSemigroupEither_$c<>_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5fEy() //  [R1]
         { []
         }
     {offset
       c5fEy: // global
           if (R1 & 7 == 1) goto c5fEC; else goto c5fED;
       c5fEC: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5fED: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fEy_info" {
     block_c5fEy_info:
         const _c5fEy;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.358450553 UTC

[section ""data" . Data.Either.$fSemigroupEither3_closure" {
     Data.Either.$fSemigroupEither3_closure:
         const Data.Either.$fSemigroupEither3_info;
 },
 Data.Either.$fSemigroupEither3_entry() //  [R2, R3]
         { []
         }
     {offset
       c5fFf: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5fFg; else goto u5fFB;
       c5fFg: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fSemigroupEither3_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       u5fFB: // global
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call _c5fF5() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.Either.$fSemigroupEither3_info" {
     Data.Either.$fSemigroupEither3_info:
         const Data.Either.$fSemigroupEither3_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5fF5() //  []
         { []
         }
     {offset
       c5fF5: // global
           I64[Sp - 8] = block_c5fF8_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5fFD; else goto c5fF9;
       u5fFD: // global
           call _c5fF8(R1) args: 0, res: 0, upd: 0;
       c5fF9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5fF8() //  [R1]
         { []
         }
     {offset
       c5fF8: // global
           _s5exK::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5fFc; else goto c5fFd;
       c5fFc: // global
           R1 = _s5exK::P64 & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5fFd: // global
           I64[Sp] = block_c5fFn_info;
           _s5exN::P64 = P64[R1 + 6];
           _s5exO::P64 = P64[R1 + 14];
           R1 = _s5exK::P64;
           P64[Sp + 8] = _s5exO::P64;
           P64[Sp + 16] = _s5exN::P64;
           if (R1 & 7 != 0) goto u5fFE; else goto c5fFp;
       u5fFE: // global
           call _c5fFn(R1) args: 0, res: 0, upd: 0;
       c5fFp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fF8_info" {
     block_c5fF8_info:
         const _c5fF8;
         const 130;
         const 30;
 },
 _c5fFn() //  [R1]
         { []
         }
     {offset
       c5fFn: // global
           if (R1 & 7 == 1) goto c5fFv; else goto c5fFz;
       c5fFv: // global
           _s5exL::P64 = P64[Sp + 8];
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = _s5exL::P64;
           Sp = Sp + 8;
           call _c5fF5() args: 0, res: 0, upd: 0;
       c5fFz: // global
           R1 = R1 & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fFn_info" {
     block_c5fFn_info:
         const _c5fFn;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.373930149 UTC

[section ""data" . Data.Either.$fSemigroupEither_$csconcat_closure" {
     Data.Either.$fSemigroupEither_$csconcat_closure:
         const Data.Either.$fSemigroupEither_$csconcat_info;
 },
 Data.Either.$fSemigroupEither_$csconcat_entry() //  [R2]
         { []
         }
     {offset
       c5fGc: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5fGd; else goto c5fGe;
       c5fGd: // global
           R2 = R2;
           R1 = Data.Either.$fSemigroupEither_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5fGe: // global
           I64[Sp - 8] = block_c5fG9_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5fGi; else goto c5fGa;
       u5fGi: // global
           call _c5fG9(R1) args: 0, res: 0, upd: 0;
       c5fGa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fSemigroupEither_$csconcat_info" {
     Data.Either.$fSemigroupEither_$csconcat_info:
         const Data.Either.$fSemigroupEither_$csconcat_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5fG9() //  [R1]
         { []
         }
     {offset
       c5fG9: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call Data.Either.$fSemigroupEither3_entry(R3,
                                                     R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fG9_info" {
     block_c5fG9_info:
         const _c5fG9;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.379405154 UTC

[section ""data" . Data.Either.$fSemigroupEither_closure" {
     Data.Either.$fSemigroupEither_closure:
         const GHC.Base.C:Semigroup_con_info;
         const Data.Either.$fSemigroupEither_$c<>_closure+2;
         const Data.Either.$fSemigroupEither_$csconcat_closure+1;
         const Data.Either.$fSemigroupEither_$cstimes_closure+3;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.382615615 UTC

[section ""data" . Data.Either.$fApplicativeEither_$c<*>_closure" {
     Data.Either.$fApplicativeEither_$c<*>_closure:
         const Data.Either.$fApplicativeEither_$c<*>_info;
 },
 Data.Either.$fApplicativeEither_$c<*>_entry() //  [R2, R3]
         { []
         }
     {offset
       c5fGE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5fGF; else goto c5fGG;
       c5fGF: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fApplicativeEither_$c<*>_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5fGG: // global
           I64[Sp - 16] = block_c5fGx_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5fGN; else goto c5fGy;
       u5fGN: // global
           call _c5fGx(R1) args: 0, res: 0, upd: 0;
       c5fGy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fApplicativeEither_$c<*>_info" {
     Data.Either.$fApplicativeEither_$c<*>_info:
         const Data.Either.$fApplicativeEither_$c<*>_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5fGx() //  [R1]
         { []
         }
     {offset
       c5fGx: // global
           if (R1 & 7 == 1) goto c5fGB; else goto c5fGC;
       c5fGB: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5fGC: // global
           R3 = P64[Sp + 8];
           R2 = P64[R1 + 6];
           Sp = Sp + 16;
           call Data.Either.$fApplicativeEither_$cfmap_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fGx_info" {
     block_c5fGx_info:
         const _c5fGx;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.391159656 UTC

[section ""data" . Data.Either.$fApplicativeEither_$cliftA2_closure" {
     Data.Either.$fApplicativeEither_$cliftA2_closure:
         const Data.Either.$fApplicativeEither_$cliftA2_info;
 },
 ds_s5ey3_entry() //  [R1]
         { []
         }
     {offset
       c5fHg: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5fHh; else goto c5fHi;
       c5fHh: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5fHi: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c5fH9_info;
           _s5ey1::P64 = P64[R1 + 16];
           R1 = P64[R1 + 24];
           P64[Sp - 24] = _s5ey1::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5fHt; else goto c5fHa;
       u5fHt: // global
           call _c5fH9(R1) args: 0, res: 0, upd: 0;
       c5fHa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds_s5ey3_info" {
     ds_s5ey3_info:
         const ds_s5ey3_entry;
         const 2;
         const 18;
 },
 _c5fH9() //  [R1]
         { []
         }
     {offset
       c5fH9: // global
           if (R1 & 7 == 1) goto c5fHd; else goto c5fHe;
       c5fHd: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
       c5fHe: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5fHs; else goto c5fHr;
       c5fHs: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c5fHr: // global
           _s5ey6::P64 = P64[R1 + 6];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _s5ey6::P64;
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5fH9_info" {
     block_c5fH9_info:
         const _c5fH9;
         const 1;
         const 30;
 },
 sat_s5eyc_entry() //  [R1, R2]
         { []
         }
     {offset
       c5fHG: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5fHH; else goto c5fHI;
       c5fHH: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5fHI: // global
           I64[Sp - 16] = block_c5fHz_info;
           R1 = P64[R1 + 7];
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5fHP; else goto c5fHA;
       u5fHP: // global
           call _c5fHz(R1) args: 0, res: 0, upd: 0;
       c5fHA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5eyc_info" {
     sat_s5eyc_info:
         const sat_s5eyc_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c5fHz() //  [R1]
         { []
         }
     {offset
       c5fHz: // global
           if (R1 & 7 == 1) goto c5fHD; else goto c5fHE;
       c5fHD: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5fHE: // global
           R3 = P64[Sp + 8];
           R2 = P64[R1 + 6];
           Sp = Sp + 16;
           call Data.Either.$fApplicativeEither_$cfmap_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fHz_info" {
     block_c5fHz_info:
         const _c5fHz;
         const 1;
         const 30;
 },
 Data.Either.$fApplicativeEither_$cliftA2_entry() //  [R2, R3]
         { []
         }
     {offset
       c5fHQ: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5fHU; else goto c5fHT;
       c5fHU: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fApplicativeEither_$cliftA2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5fHT: // global
           I64[Hp - 40] = ds_s5ey3_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = R3;
           I64[Hp - 8] = sat_s5eyc_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fApplicativeEither_$cliftA2_info" {
     Data.Either.$fApplicativeEither_$cliftA2_info:
         const Data.Either.$fApplicativeEither_$cliftA2_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.403776185 UTC

[section ""data" . Data.Either.$fApplicativeEither_$c*>_closure" {
     Data.Either.$fApplicativeEither_$c*>_closure:
         const Data.Either.$fApplicativeEither_$c*>_info;
 },
 Data.Either.$fApplicativeEither_$c*>_entry() //  [R2, R3]
         { []
         }
     {offset
       c5fID: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5fIE; else goto c5fIF;
       c5fIE: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fApplicativeEither_$c*>_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5fIF: // global
           I64[Sp - 16] = block_c5fIw_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5fIM; else goto c5fIx;
       u5fIM: // global
           call _c5fIw(R1) args: 0, res: 0, upd: 0;
       c5fIx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fApplicativeEither_$c*>_info" {
     Data.Either.$fApplicativeEither_$c*>_info:
         const Data.Either.$fApplicativeEither_$c*>_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5fIw() //  [R1]
         { []
         }
     {offset
       c5fIw: // global
           if (R1 & 7 == 1) goto c5fIA; else goto c5fIB;
       c5fIA: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5fIB: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fIw_info" {
     block_c5fIw_info:
         const _c5fIw;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.411486446 UTC

[section ""data" . Data.Either.$fApplicativeEither_$c<*_closure" {
     Data.Either.$fApplicativeEither_$c<*_closure:
         const Data.Either.$fApplicativeEither_$c<*_info;
 },
 Data.Either.$fApplicativeEither_$c<*_entry() //  [R2, R3]
         { []
         }
     {offset
       c5fJd: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5fJe; else goto c5fJf;
       c5fJe: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fApplicativeEither_$c<*_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5fJf: // global
           I64[Sp - 16] = block_c5fJ6_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5fJD; else goto c5fJ7;
       u5fJD: // global
           call _c5fJ6(R1) args: 0, res: 0, upd: 0;
       c5fJ7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fApplicativeEither_$c<*_info" {
     Data.Either.$fApplicativeEither_$c<*_info:
         const Data.Either.$fApplicativeEither_$c<*_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5fJ6() //  [R1]
         { []
         }
     {offset
       c5fJ6: // global
           if (R1 & 7 == 1) goto u5fJz; else goto c5fJb;
       u5fJz: // global
           P64[Sp + 8] = R1;
           Sp = Sp + 8;
           call _c5fJx() args: 0, res: 0, upd: 0;
       c5fJb: // global
           I64[Sp] = block_c5fJl_info;
           _s5eyk::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5eyk::P64;
           if (R1 & 7 != 0) goto u5fJB; else goto c5fJn;
       u5fJB: // global
           call _c5fJl(R1) args: 0, res: 0, upd: 0;
       c5fJn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fJ6_info" {
     block_c5fJ6_info:
         const _c5fJ6;
         const 1;
         const 30;
 },
 _c5fJl() //  [R1]
         { []
         }
     {offset
       c5fJl: // global
           if (R1 & 7 == 1) goto c5fJt; else goto u5fJA;
       c5fJt: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       u5fJA: // global
           Sp = Sp + 8;
           call _c5fJx() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5fJl_info" {
     block_c5fJl_info:
         const _c5fJl;
         const 1;
         const 30;
 },
 _c5fJx() //  []
         { []
         }
     {offset
       c5fJx: // global
           R1 = P64[Sp] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.41980088 UTC

[section ""data" . Data.Either.$fApplicativeEither_closure" {
     Data.Either.$fApplicativeEither_closure:
         const GHC.Base.C:Applicative_con_info;
         const Data.Either.$fFunctorEither_closure+1;
         const Data.Either.Right_closure+1;
         const Data.Either.$fApplicativeEither_$c<*>_closure+2;
         const Data.Either.$fApplicativeEither_$cliftA2_closure+2;
         const Data.Either.$fApplicativeEither_$c*>_closure+2;
         const Data.Either.$fApplicativeEither_$c<*_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.422843733 UTC

[section ""data" . Data.Either.$fMonadEither_$c>>=_closure" {
     Data.Either.$fMonadEither_$c>>=_closure:
         const Data.Either.$fMonadEither_$c>>=_info;
 },
 Data.Either.$fMonadEither_$c>>=_entry() //  [R2, R3]
         { []
         }
     {offset
       c5fKe: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5fKf; else goto c5fKg;
       c5fKf: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fMonadEither_$c>>=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5fKg: // global
           I64[Sp - 16] = block_c5fK7_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5fKn; else goto c5fK8;
       u5fKn: // global
           call _c5fK7(R1) args: 0, res: 0, upd: 0;
       c5fK8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fMonadEither_$c>>=_info" {
     Data.Either.$fMonadEither_$c>>=_info:
         const Data.Either.$fMonadEither_$c>>=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5fK7() //  [R1]
         { []
         }
     {offset
       c5fK7: // global
           if (R1 & 7 == 1) goto c5fKb; else goto c5fKc;
       c5fKb: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5fKc: // global
           R2 = P64[R1 + 6];
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fK7_info" {
     block_c5fK7_info:
         const _c5fK7;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.42955516 UTC

[section ""data" . Data.Either.$fMonadEither_$c>>_closure" {
     Data.Either.$fMonadEither_$c>>_closure:
         const Data.Either.$fMonadEither_$c>>_info;
 },
 Data.Either.$fMonadEither_$c>>_entry() //  [R2, R3]
         { []
         }
     {offset
       c5fKF: // global
           R3 = R3;
           R2 = R2;
           call Data.Either.$fApplicativeEither_$c*>_entry(R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fMonadEither_$c>>_info" {
     Data.Either.$fMonadEither_$c>>_info:
         const Data.Either.$fMonadEither_$c>>_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.433708993 UTC

[section ""data" . lvl1_r5exc_closure" {
     lvl1_r5exc_closure:
         const lvl1_r5exc_info;
         const 0;
 },
 lvl1_r5exc_entry() //  [R2]
         { []
         }
     {offset
       c5fKQ: // global
           R2 = R2;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . lvl1_r5exc_info" {
     lvl1_r5exc_info:
         const lvl1_r5exc_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const S5eEs_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.438644744 UTC

[section ""data" . Data.Either.$fMonadEither_closure" {
     Data.Either.$fMonadEither_closure:
         const GHC.Base.C:Monad_con_info;
         const Data.Either.$fApplicativeEither_closure+1;
         const Data.Either.$fMonadEither_$c>>=_closure+2;
         const Data.Either.$fMonadEither_$c>>_closure+2;
         const Data.Either.Right_closure+1;
         const lvl1_r5exc_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.441591442 UTC

[section ""cstring" . Data.Either.$fShowEither5_bytes" {
     Data.Either.$fShowEither5_bytes:
         I8[] [76,101,102,116,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.44408726 UTC

[section ""data" . Data.Either.$fShowEither4_closure" {
     Data.Either.$fShowEither4_closure:
         const Data.Either.$fShowEither4_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Either.$fShowEither4_entry() //  [R1]
         { []
         }
     {offset
       c5fL5: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5fL6; else goto c5fL7;
       c5fL6: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5fL7: // global
           (_c5fL2::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5fL2::I64 == 0) goto c5fL4; else goto c5fL3;
       c5fL4: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5fL3: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5fL2::I64;
           R2 = Data.Either.$fShowEither5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Either.$fShowEither4_info" {
     Data.Either.$fShowEither4_info:
         const Data.Either.$fShowEither4_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.448142312 UTC

[section ""data" . Data.Either.$fReadEither4_closure" {
     Data.Either.$fReadEither4_closure:
         const GHC.Types.I#_con_info;
         const 11;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.449935439 UTC

[section ""cstring" . Data.Either.$fShowEither3_bytes" {
     Data.Either.$fShowEither3_bytes:
         I8[] [82,105,103,104,116,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.452859626 UTC

[section ""data" . Data.Either.$fShowEither2_closure" {
     Data.Either.$fShowEither2_closure:
         const Data.Either.$fShowEither2_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Either.$fShowEither2_entry() //  [R1]
         { []
         }
     {offset
       c5fLn: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5fLo; else goto c5fLp;
       c5fLo: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5fLp: // global
           (_c5fLk::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5fLk::I64 == 0) goto c5fLm; else goto c5fLl;
       c5fLm: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5fLl: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5fLk::I64;
           R2 = Data.Either.$fShowEither3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Either.$fShowEither2_info" {
     Data.Either.$fShowEither2_info:
         const Data.Either.$fShowEither2_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.46771199 UTC

[section ""data" . Data.Either.$w$cshowsPrec_closure" {
     Data.Either.$w$cshowsPrec_closure:
         const Data.Either.$w$cshowsPrec_info;
         const 0;
 },
 Data.Either.$w$cshowsPrec_slow() //  [R1]
         { []
         }
     {offset
       c5fLy: // global
           R5 = P64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call Data.Either.$w$cshowsPrec_entry(R5,
                                                R4,
                                                R3,
                                                R2,
                                                R1) args: 8, res: 0, upd: 8;
     }
 },
 g_s5eyC_entry() //  [R1]
         { []
         }
     {offset
       c5fLL: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5fLM; else goto c5fLN;
       c5fLM: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5fLN: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Data.Either.$fReadEither4_closure+1;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 40;
           call GHC.Show.showsPrec_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . g_s5eyC_info" {
     g_s5eyC_info:
         const g_s5eyC_entry;
         const 2;
         const 18;
 },
 sat_s5eyF_entry() //  [R1]
         { []
         }
     {offset
       c5fM0: // global
           R2 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5eyF_info" {
     sat_s5eyF_info:
         const sat_s5eyF_entry;
         const 2;
         const 18;
 },
 sat_s5eyG_entry() //  [R1, R2]
         { []
         }
     {offset
       c5fM3: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5fM7; else goto c5fM6;
       c5fM7: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5fM6: // global
           _s5eyC::P64 = P64[R1 + 7];
           I64[Hp - 24] = sat_s5eyF_info;
           P64[Hp - 8] = _s5eyC::P64;
           P64[Hp] = R2;
           R3 = Hp - 24;
           R2 = Data.Either.$fShowEither4_closure;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5eyG_info" {
     sat_s5eyG_info:
         const sat_s5eyG_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5eEs_srt+32;
 },
 sat_s5eyJ_entry() //  [R1]
         { []
         }
     {offset
       c5fMn: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5fMr; else goto c5fMq;
       c5fMr: // global
           HpAlloc = 24;
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5fMq: // global
           _s5eyC::P64 = P64[R1 + 16];
           _s5eyH::P64 = P64[R1 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)2_closure;
           P64[Hp] = _s5eyH::P64;
           R2 = Hp - 14;
           R1 = _s5eyC::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5eyJ_info" {
     sat_s5eyJ_info:
         const sat_s5eyJ_entry;
         const 2;
         const 18;
 },
 sat_s5eyK_entry() //  [R1]
         { []
         }
     {offset
       c5fMs: // global
           _s5eyK::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5fMt; else goto c5fMu;
       c5fMu: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5fMw; else goto c5fMv;
       c5fMw: // global
           HpAlloc = 32;
           goto c5fMt;
       c5fMt: // global
           R1 = _s5eyK::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5fMv: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5eyK::P64;
           _s5eyC::P64 = P64[_s5eyK::P64 + 16];
           _s5eyH::P64 = P64[_s5eyK::P64 + 24];
           I64[Hp - 24] = sat_s5eyJ_info;
           P64[Hp - 8] = _s5eyC::P64;
           P64[Hp] = _s5eyH::P64;
           R3 = Hp - 24;
           R2 = Data.Either.$fShowEither4_closure;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5eyK_info" {
     sat_s5eyK_info:
         const sat_s5eyK_entry;
         const 2;
         const 4294967314;
         const S5eEs_srt+32;
 },
 sat_s5eyL_entry() //  [R1, R2]
         { []
         }
     {offset
       c5fMy: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5fMC; else goto c5fMB;
       c5fMC: // global
           HpAlloc = 56;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5fMB: // global
           _s5eyC::P64 = P64[R1 + 7];
           I64[Hp - 48] = sat_s5eyK_info;
           P64[Hp - 32] = _s5eyC::P64;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)4_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5eyL_info" {
     sat_s5eyL_info:
         const sat_s5eyL_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5eEs_srt+32;
 },
 g_s5eyN_entry() //  [R1]
         { []
         }
     {offset
       c5fMJ: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5fMK; else goto c5fML;
       c5fMK: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5fML: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Data.Either.$fReadEither4_closure+1;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 40;
           call GHC.Show.showsPrec_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . g_s5eyN_info" {
     g_s5eyN_info:
         const g_s5eyN_entry;
         const 2;
         const 18;
 },
 sat_s5eyQ_entry() //  [R1]
         { []
         }
     {offset
       c5fMY: // global
           R2 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5eyQ_info" {
     sat_s5eyQ_info:
         const sat_s5eyQ_entry;
         const 2;
         const 18;
 },
 sat_s5eyR_entry() //  [R1, R2]
         { []
         }
     {offset
       c5fN1: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5fN5; else goto c5fN4;
       c5fN5: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5fN4: // global
           _s5eyN::P64 = P64[R1 + 7];
           I64[Hp - 24] = sat_s5eyQ_info;
           P64[Hp - 8] = _s5eyN::P64;
           P64[Hp] = R2;
           R3 = Hp - 24;
           R2 = Data.Either.$fShowEither2_closure;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5eyR_info" {
     sat_s5eyR_info:
         const sat_s5eyR_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5eEs_srt+40;
 },
 sat_s5eyU_entry() //  [R1]
         { []
         }
     {offset
       c5fNl: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5fNp; else goto c5fNo;
       c5fNp: // global
           HpAlloc = 24;
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5fNo: // global
           _s5eyN::P64 = P64[R1 + 16];
           _s5eyS::P64 = P64[R1 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)2_closure;
           P64[Hp] = _s5eyS::P64;
           R2 = Hp - 14;
           R1 = _s5eyN::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5eyU_info" {
     sat_s5eyU_info:
         const sat_s5eyU_entry;
         const 2;
         const 18;
 },
 sat_s5eyV_entry() //  [R1]
         { []
         }
     {offset
       c5fNq: // global
           _s5eyV::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5fNr; else goto c5fNs;
       c5fNs: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5fNu; else goto c5fNt;
       c5fNu: // global
           HpAlloc = 32;
           goto c5fNr;
       c5fNr: // global
           R1 = _s5eyV::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5fNt: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5eyV::P64;
           _s5eyN::P64 = P64[_s5eyV::P64 + 16];
           _s5eyS::P64 = P64[_s5eyV::P64 + 24];
           I64[Hp - 24] = sat_s5eyU_info;
           P64[Hp - 8] = _s5eyN::P64;
           P64[Hp] = _s5eyS::P64;
           R3 = Hp - 24;
           R2 = Data.Either.$fShowEither2_closure;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5eyV_info" {
     sat_s5eyV_info:
         const sat_s5eyV_entry;
         const 2;
         const 4294967314;
         const S5eEs_srt+40;
 },
 sat_s5eyW_entry() //  [R1, R2]
         { []
         }
     {offset
       c5fNw: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5fNA; else goto c5fNz;
       c5fNA: // global
           HpAlloc = 56;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5fNz: // global
           _s5eyN::P64 = P64[R1 + 7];
           I64[Hp - 48] = sat_s5eyV_info;
           P64[Hp - 32] = _s5eyN::P64;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)4_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5eyW_info" {
     sat_s5eyW_info:
         const sat_s5eyW_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5eEs_srt+40;
 },
 Data.Either.$w$cshowsPrec_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5fNF: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5fNG; else goto c5fNH;
       c5fNG: // global
           R1 = Data.Either.$w$cshowsPrec_closure;
           P64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           I64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           call (stg_gc_fun)(R1) args: 40, res: 0, upd: 8;
       c5fNH: // global
           I64[Sp - 32] = block_c5fLC_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           I64[Sp - 8] = R4;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5fNU; else goto c5fLD;
       u5fNU: // global
           call _c5fLC(R1) args: 0, res: 0, upd: 0;
       c5fLD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$w$cshowsPrec_info" {
     Data.Either.$w$cshowsPrec_info:
         const Data.Either.$w$cshowsPrec_entry;
         const 0;
         const 30064771086;
         const 17179869184;
         const S5eEs_srt+32;
         const 260;
         const Data.Either.$w$cshowsPrec_slow;
 },
 _c5fLC() //  [R1]
         { []
         }
     {offset
       c5fLC: // global
           _s5eyy::I64 = I64[Sp + 24];
           if (R1 & 7 == 1) goto c5fNC; else goto c5fND;
       c5fNC: // global
           Hp = Hp + 48;
           _s5eyA::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5fNQ; else goto c5fNJ;
       c5fNJ: // global
           _s5eyB::P64 = P64[_s5eyA::P64 + 7];
           I64[Hp - 40] = g_s5eyC_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _s5eyB::P64;
           _c5fLH::P64 = Hp - 40;
           if (%MO_S_Lt_W64(_s5eyy::I64, 11)) goto c5fNM; else goto c5fNN;
       c5fNM: // global
           I64[Hp - 8] = sat_s5eyG_info;
           P64[Hp] = _c5fLH::P64;
           R1 = Hp - 7;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5fNN: // global
           I64[Hp - 8] = sat_s5eyL_info;
           P64[Hp] = _c5fLH::P64;
           R1 = Hp - 7;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5fND: // global
           Hp = Hp + 48;
           _s5eyA::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5fNQ; else goto c5fNP;
       c5fNQ: // global
           HpAlloc = 48;
           R1 = _s5eyA::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5fNP: // global
           _s5eyM::P64 = P64[_s5eyA::P64 + 6];
           I64[Hp - 40] = g_s5eyN_info;
           P64[Hp - 24] = P64[Sp + 16];
           P64[Hp - 16] = _s5eyM::P64;
           _c5fMF::P64 = Hp - 40;
           if (%MO_S_Lt_W64(_s5eyy::I64, 11)) goto c5fNS; else goto c5fNT;
       c5fNS: // global
           I64[Hp - 8] = sat_s5eyR_info;
           P64[Hp] = _c5fMF::P64;
           R1 = Hp - 7;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5fNT: // global
           I64[Hp - 8] = sat_s5eyW_info;
           P64[Hp] = _c5fMF::P64;
           R1 = Hp - 7;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fLC_info" {
     block_c5fLC_info:
         const _c5fLC;
         const 259;
         const 12884901918;
         const S5eEs_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.498391935 UTC

[section ""data" . Data.Either.$fShowEither_$cshowsPrec_closure" {
     Data.Either.$fShowEither_$cshowsPrec_closure:
         const Data.Either.$fShowEither_$cshowsPrec_info;
         const 0;
 },
 Data.Either.$fShowEither_$cshowsPrec_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5fP5: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5fP6; else goto c5fP7;
       c5fP6: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fShowEither_$cshowsPrec_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5fP7: // global
           I64[Sp - 32] = block_c5fP2_info;
           R1 = R4;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5fPb; else goto c5fP3;
       u5fPb: // global
           call _c5fP2(R1) args: 0, res: 0, upd: 0;
       c5fP3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fShowEither_$cshowsPrec_info" {
     Data.Either.$fShowEither_$cshowsPrec_info:
         const Data.Either.$fShowEither_$cshowsPrec_entry;
         const 0;
         const 12884901902;
         const 17179869208;
         const S5eEs_srt+48;
 },
 _c5fP2() //  [R1]
         { []
         }
     {offset
       c5fP2: // global
           R5 = P64[Sp + 24];
           R4 = I64[R1 + 7];
           R3 = P64[Sp + 16];
           R2 = P64[Sp + 8];
           Sp = Sp + 32;
           call Data.Either.$w$cshowsPrec_entry(R5,
                                                R4,
                                                R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fP2_info" {
     block_c5fP2_info:
         const _c5fP2;
         const 3;
         const 4294967326;
         const S5eEs_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.506108498 UTC

[section ""data" . Data.Either.$fShowEither_$cshow_closure" {
     Data.Either.$fShowEither_$cshow_closure:
         const Data.Either.$fShowEither_$cshow_info;
         const 0;
 },
 sat_s5ez8_entry() //  [R1]
         { []
         }
     {offset
       c5fPy: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5fPz; else goto c5fPA;
       c5fPz: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5fPA: // global
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_ppp_info;
           P64[Sp - 24] = Data.Either.$fReadEither4_closure+1;
           P64[Sp - 16] = P64[R1 + 24];
           P64[Sp - 8] = GHC.Types.[]_closure+1;
           Sp = Sp - 32;
           call GHC.Show.showsPrec_entry(R2) args: 40, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5ez8_info" {
     sat_s5ez8_info:
         const sat_s5ez8_entry;
         const 2;
         const 18;
 },
 sat_s5eza_entry() //  [R1]
         { []
         }
     {offset
       c5fPH: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5fPI; else goto c5fPJ;
       c5fPI: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5fPJ: // global
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_ppp_info;
           P64[Sp - 24] = Data.Either.$fReadEither4_closure+1;
           P64[Sp - 16] = P64[R1 + 24];
           P64[Sp - 8] = GHC.Types.[]_closure+1;
           Sp = Sp - 32;
           call GHC.Show.showsPrec_entry(R2) args: 40, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5eza_info" {
     sat_s5eza_info:
         const sat_s5eza_entry;
         const 2;
         const 18;
 },
 Data.Either.$fShowEither_$cshow_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5fPO: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5fPP; else goto c5fPQ;
       c5fPP: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fShowEither_$cshow_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5fPQ: // global
           I64[Sp - 24] = block_c5fPp_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5fPX; else goto c5fPq;
       u5fPX: // global
           call _c5fPp(R1) args: 0, res: 0, upd: 0;
       c5fPq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fShowEither_$cshow_info" {
     Data.Either.$fShowEither_$cshow_info:
         const Data.Either.$fShowEither_$cshow_entry;
         const 0;
         const 81604378638;
         const 12884901911;
         const S5eEs_srt+32;
 },
 _c5fPp() //  [R1]
         { []
         }
     {offset
       c5fPp: // global
           if (R1 & 7 == 1) goto c5fPL; else goto c5fPM;
       c5fPL: // global
           Hp = Hp + 32;
           _s5ez6::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5fPW; else goto c5fPS;
       c5fPS: // global
           _s5ez7::P64 = P64[_s5ez6::P64 + 7];
           I64[Hp - 24] = sat_s5ez8_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = _s5ez7::P64;
           R3 = Hp - 24;
           R2 = Data.Either.$fShowEither4_closure;
           Sp = Sp + 24;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c5fPM: // global
           Hp = Hp + 32;
           _s5ez6::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5fPW; else goto c5fPV;
       c5fPW: // global
           HpAlloc = 32;
           R1 = _s5ez6::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5fPV: // global
           _s5ez9::P64 = P64[_s5ez6::P64 + 6];
           I64[Hp - 24] = sat_s5eza_info;
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = _s5ez9::P64;
           R3 = Hp - 24;
           R2 = Data.Either.$fShowEither2_closure;
           Sp = Sp + 24;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fPp_info" {
     block_c5fPp_info:
         const _c5fPp;
         const 2;
         const 12884901918;
         const S5eEs_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.515881286 UTC

[section ""data" . Data.Either.$fShowEither1_closure" {
     Data.Either.$fShowEither1_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.519764804 UTC

[section ""data" . Data.Either.$fShowEither_$cshowList_closure" {
     Data.Either.$fShowEither_$cshowList_closure:
         const Data.Either.$fShowEither_$cshowList_info;
         const 0;
 },
 sat_s5ezg_entry() //  [R1, R2]
         { []
         }
     {offset
       c5fQv: // global
           R5 = R2;
           R4 = 0;
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           call Data.Either.$w$cshowsPrec_entry(R5,
                                                R4,
                                                R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5ezg_info" {
     sat_s5ezg_info:
         const sat_s5ezg_entry;
         const 2;
         const 4294967307;
         const 4294967301;
         const S5eEs_srt+48;
 },
 Data.Either.$fShowEither_$cshowList_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5fQy: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5fQC; else goto c5fQB;
       c5fQC: // global
           HpAlloc = 24;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fShowEither_$cshowList_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5fQB: // global
           I64[Hp - 16] = sat_s5ezg_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           _s5ezd::P64 = R4;
           R4 = R5;
           R3 = _s5ezd::P64;
           R2 = Hp - 15;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fShowEither_$cshowList_info" {
     Data.Either.$fShowEither_$cshowList_info:
         const Data.Either.$fShowEither_$cshowList_entry;
         const 0;
         const 38654705678;
         const 17179869208;
         const S5eEs_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.526603801 UTC

[section ""data" . Data.Either.$fShowEither_closure" {
     Data.Either.$fShowEither_closure:
         const Data.Either.$fShowEither_info;
         const 0;
 },
 sat_s5ezl_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5fQT: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fShowEither_$cshowList_entry(R5,
                                                          R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5ezl_info" {
     sat_s5ezl_info:
         const sat_s5ezl_entry;
         const 2;
         const 4294967307;
         const 8589934607;
         const S5eEs_srt+72;
 },
 sat_s5ezk_entry() //  [R1, R2]
         { []
         }
     {offset
       c5fR1: // global
           R4 = R2;
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           call Data.Either.$fShowEither_$cshow_entry(R4,
                                                      R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5ezk_info" {
     sat_s5ezk_info:
         const sat_s5ezk_entry;
         const 2;
         const 4294967307;
         const 4294967301;
         const S5eEs_srt+64;
 },
 sat_s5ezj_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5fR9: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fShowEither_$cshowsPrec_entry(R5,
                                                           R4,
                                                           R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5ezj_info" {
     sat_s5ezj_info:
         const sat_s5ezj_entry;
         const 2;
         const 4294967307;
         const 8589934607;
         const S5eEs_srt+56;
 },
 Data.Either.$fShowEither_entry() //  [R2, R3]
         { []
         }
     {offset
       c5fRd: // global
           Hp = Hp + 104;
           if (Hp > HpLim) (likely: False) goto c5fRh; else goto c5fRg;
       c5fRh: // global
           HpAlloc = 104;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fShowEither_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5fRg: // global
           I64[Hp - 96] = sat_s5ezl_info;
           P64[Hp - 88] = R2;
           P64[Hp - 80] = R3;
           I64[Hp - 72] = sat_s5ezk_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = sat_s5ezj_info;
           P64[Hp - 40] = R2;
           P64[Hp - 32] = R3;
           I64[Hp - 24] = GHC.Show.C:Show_con_info;
           P64[Hp - 16] = Hp - 46;
           P64[Hp - 8] = Hp - 71;
           P64[Hp] = Hp - 94;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fShowEither_info" {
     Data.Either.$fShowEither_info:
         const Data.Either.$fShowEither_entry;
         const 0;
         const 64424509454;
         const 8589934607;
         const S5eEs_srt+56;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.535341454 UTC

[section ""cstring" . Data.Either.$fReadEither3_bytes" {
     Data.Either.$fReadEither3_bytes:
         I8[] [76,101,102,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.538625392 UTC

[section ""data" . Data.Either.$fReadEither2_closure" {
     Data.Either.$fReadEither2_closure:
         const Data.Either.$fReadEither2_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Either.$fReadEither2_entry() //  [R1]
         { []
         }
     {offset
       c5fRG: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5fRH; else goto c5fRI;
       c5fRH: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5fRI: // global
           (_c5fRD::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5fRD::I64 == 0) goto c5fRF; else goto c5fRE;
       c5fRF: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5fRE: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5fRD::I64;
           R2 = Data.Either.$fReadEither3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Either.$fReadEither2_info" {
     Data.Either.$fReadEither2_info:
         const Data.Either.$fReadEither2_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.542828149 UTC

[section ""data" . Data.Either.$fReadEither_lexeme_closure" {
     Data.Either.$fReadEither_lexeme_closure:
         const Text.Read.Lex.Ident_con_info;
         const Data.Either.$fReadEither2_closure;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.544526038 UTC

[section ""cstring" . Data.Either.$fReadEither6_bytes" {
     Data.Either.$fReadEither6_bytes:
         I8[] [82,105,103,104,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.547149286 UTC

[section ""data" . Data.Either.$fReadEither5_closure" {
     Data.Either.$fReadEither5_closure:
         const Data.Either.$fReadEither5_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Either.$fReadEither5_entry() //  [R1]
         { []
         }
     {offset
       c5fRY: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5fRZ; else goto c5fS0;
       c5fRZ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5fS0: // global
           (_c5fRV::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5fRV::I64 == 0) goto c5fRX; else goto c5fRW;
       c5fRX: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5fRW: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5fRV::I64;
           R2 = Data.Either.$fReadEither6_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Either.$fReadEither5_info" {
     Data.Either.$fReadEither5_info:
         const Data.Either.$fReadEither5_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.551472149 UTC

[section ""data" . Data.Either.$fReadEither_lexeme1_closure" {
     Data.Either.$fReadEither_lexeme1_closure:
         const Text.Read.Lex.Ident_con_info;
         const Data.Either.$fReadEither5_closure;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.559026602 UTC

[section ""data" . Data.Either.$fReadEither1_closure" {
     Data.Either.$fReadEither1_closure:
         const Data.Either.$fReadEither1_info;
         const 0;
 },
 sat_s5ezz_entry() //  [R1, R2]
         { []
         }
     {offset
       c5fSG: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5fSK; else goto c5fSJ;
       c5fSK: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5fSJ: // global
           _s5ezr::P64 = P64[R1 + 7];
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = R2;
           R2 = Hp - 6;
           R1 = _s5ezr::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5ezz_info" {
     sat_s5ezz_info:
         const sat_s5ezz_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_s5ezA_entry() //  [R1, R2]
         { []
         }
     {offset
       c5fSL: // global
           _s5ezw::P64 = R2;
           _s5ezA::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c5fSM; else goto c5fSN;
       c5fSN: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5fSP; else goto c5fSO;
       c5fSP: // global
           HpAlloc = 16;
           goto c5fSM;
       c5fSM: // global
           R2 = _s5ezw::P64;
           R1 = _s5ezA::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5fSO: // global
           _s5ezn::P64 = P64[_s5ezA::P64 + 7];
           _s5ezr::P64 = P64[_s5ezA::P64 + 15];
           I64[Hp - 8] = sat_s5ezz_info;
           P64[Hp] = _s5ezr::P64;
           R2 = _s5ezn::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Data.Either.$fReadEither4_closure+1;
           P64[Sp - 8] = Hp - 7;
           Sp = Sp - 24;
           call GHC.Read.readPrec_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5ezA_info" {
     sat_s5ezA_info:
         const sat_s5ezA_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 karg_s5ezu_entry() //  [R1]
         { []
         }
     {offset
       c5fST: // global
           _s5ezu::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c5fSU; else goto c5fSV;
       c5fSV: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5fSX; else goto c5fSW;
       c5fSX: // global
           HpAlloc = 24;
           goto c5fSU;
       c5fSU: // global
           R1 = _s5ezu::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5fSW: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5ezu::P64;
           if (%MO_S_Gt_W64(I64[_s5ezu::P64 + 32],
                            10)) goto c5fSR; else goto c5fSS;
       c5fSR: // global
           Hp = Hp - 24;
           R1 = Text.ParserCombinators.ReadP.Fail_closure+3;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c5fSS: // global
           _s5ezn::P64 = P64[_s5ezu::P64 + 16];
           _s5ezr::P64 = P64[_s5ezu::P64 + 24];
           I64[Hp - 16] = sat_s5ezA_info;
           P64[Hp - 8] = _s5ezn::P64;
           P64[Hp] = _s5ezr::P64;
           I64[Sp - 24] = block_c5fSY_info;
           R3 = Hp - 15;
           R2 = Data.Either.$fReadEither_lexeme1_closure+4;
           Sp = Sp - 24;
           call Text.Read.Lex.$wexpect_entry(R3, R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . karg_s5ezu_info" {
     karg_s5ezu_info:
         const karg_s5ezu_entry;
         const 4294967298;
         const 12884901903;
         const S5eEs_srt+88;
 },
 _c5fSY() //  [R1]
         { []
         }
     {offset
       c5fSY: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5fT3; else goto c5fT2;
       c5fT3: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c5fT2: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5fSY_info" {
     block_c5fSY_info:
         const _c5fSY;
         const 0;
         const 30;
 },
 sat_s5ezH_entry() //  [R1, R2]
         { []
         }
     {offset
       c5fTj: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5fTn; else goto c5fTm;
       c5fTn: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5fTm: // global
           _s5ezr::P64 = P64[R1 + 7];
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = R2;
           R2 = Hp - 7;
           R1 = _s5ezr::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5ezH_info" {
     sat_s5ezH_info:
         const sat_s5ezH_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_s5ezI_entry() //  [R1, R2]
         { []
         }
     {offset
       c5fTo: // global
           _s5ezE::P64 = R2;
           _s5ezI::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c5fTp; else goto c5fTq;
       c5fTq: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5fTs; else goto c5fTr;
       c5fTs: // global
           HpAlloc = 16;
           goto c5fTp;
       c5fTp: // global
           R2 = _s5ezE::P64;
           R1 = _s5ezI::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5fTr: // global
           _s5ezm::P64 = P64[_s5ezI::P64 + 7];
           _s5ezr::P64 = P64[_s5ezI::P64 + 15];
           I64[Hp - 8] = sat_s5ezH_info;
           P64[Hp] = _s5ezr::P64;
           R2 = _s5ezm::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Data.Either.$fReadEither4_closure+1;
           P64[Sp - 8] = Hp - 7;
           Sp = Sp - 24;
           call GHC.Read.readPrec_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5ezI_info" {
     sat_s5ezI_info:
         const sat_s5ezI_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_s5ezM_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5fTt: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5fTu; else goto c5fTv;
       c5fTu: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5fTv: // global
           I64[Sp - 32] = block_c5fSi_info;
           _s5ezm::P64 = P64[R1 + 6];
           _s5ezn::P64 = P64[R1 + 14];
           R1 = R2;
           P64[Sp - 24] = _s5ezm::P64;
           P64[Sp - 16] = _s5ezn::P64;
           P64[Sp - 8] = R3;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5fTI; else goto c5fSj;
       u5fTI: // global
           call _c5fSi(R1) args: 0, res: 0, upd: 0;
       c5fSj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5ezM_info" {
     sat_s5ezM_info:
         const sat_s5ezM_entry;
         const 2;
         const 64424509451;
         const 8589934607;
         const S5eEs_srt+88;
 },
 _c5fSi() //  [R1]
         { []
         }
     {offset
       c5fSi: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c5fTy; else goto c5fTx;
       c5fTy: // global
           HpAlloc = 64;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5fTx: // global
           _s5ezt::I64 = I64[R1 + 7];
           I64[Hp - 56] = karg_s5ezu_info;
           P64[Hp - 40] = P64[Sp + 16];
           _s5ezr::P64 = P64[Sp + 24];
           P64[Hp - 32] = _s5ezr::P64;
           I64[Hp - 24] = _s5ezt::I64;
           _c5fSn::P64 = Hp - 56;
           if (%MO_S_Gt_W64(_s5ezt::I64, 10)) goto c5fTA; else goto c5fTE;
       c5fTA: // global
           Hp = Hp - 24;
           R3 = _c5fSn::P64;
           R2 = Text.ParserCombinators.ReadP.Fail_closure+3;
           Sp = Sp + 32;
           call Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_entry(R3,
                                                                        R2) args: 8, res: 0, upd: 8;
       c5fTE: // global
           I64[Hp - 16] = sat_s5ezI_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = _s5ezr::P64;
           I64[Sp + 16] = block_c5fTB_info;
           R3 = Hp - 15;
           R2 = Data.Either.$fReadEither_lexeme_closure+4;
           P64[Sp + 24] = _c5fSn::P64;
           Sp = Sp + 16;
           call Text.Read.Lex.$wexpect_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fSi_info" {
     block_c5fSi_info:
         const _c5fSi;
         const 3;
         const 64424509470;
         const S5eEs_srt+88;
 },
 _c5fTB() //  [R1]
         { []
         }
     {offset
       c5fTB: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5fTH; else goto c5fTG;
       c5fTH: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5fTG: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R3 = P64[Sp + 8];
           R2 = Hp - 6;
           Sp = Sp + 16;
           call Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_entry(R3,
                                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fTB_info" {
     block_c5fTB_info:
         const _c5fTB;
         const 1;
         const 4294967326;
         const S5eEs_srt+104;
 },
 Data.Either.$fReadEither1_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5fTJ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5fTN; else goto c5fTM;
       c5fTN: // global
           HpAlloc = 24;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fReadEither1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5fTM: // global
           I64[Hp - 16] = sat_s5ezM_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           _s5ezo::P64 = R4;
           R4 = R5;
           R3 = _s5ezo::P64;
           R2 = Hp - 14;
           call GHC.Read.list3_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fReadEither1_info" {
     Data.Either.$fReadEither1_info:
         const Data.Either.$fReadEither1_entry;
         const 0;
         const 270582939662;
         const 17179869208;
         const S5eEs_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.582921982 UTC

[section ""data" . Data.Either.$fReadEither_$creadsPrec_closure" {
     Data.Either.$fReadEither_$creadsPrec_closure:
         const Data.Either.$fReadEither_$creadsPrec_info;
         const 0;
 },
 sat_s5ezQ_entry() //  [R1]
         { []
         }
     {offset
       c5fUC: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5fUD; else goto c5fUE;
       c5fUD: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5fUE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R5 = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           R4 = P64[R1 + 32];
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Either.$fReadEither1_entry(R5,
                                                R4,
                                                R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5ezQ_info" {
     sat_s5ezQ_info:
         const sat_s5ezQ_entry;
         const 3;
         const 4294967311;
         const S5eEs_srt+128;
 },
 Data.Either.$fReadEither_$creadsPrec_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5fUF: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c5fUJ; else goto c5fUI;
       c5fUJ: // global
           HpAlloc = 40;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fReadEither_$creadsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5fUI: // global
           I64[Hp - 32] = sat_s5ezQ_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           R2 = Hp - 32;
           R1 = Text.ParserCombinators.ReadP.run_closure+2;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fReadEither_$creadsPrec_info" {
     Data.Either.$fReadEither_$creadsPrec_info:
         const Data.Either.$fReadEither_$creadsPrec_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S5eEs_srt+128;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.590253473 UTC

[section ""data" . Data.Either.$fReadEither_$creadListPrec_closure" {
     Data.Either.$fReadEither_$creadListPrec_closure:
         const Data.Either.$fReadEither_$creadListPrec_info;
         const 0;
 },
 sat_s5ezT_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5fV1: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fReadEither1_entry(R5,
                                                R4,
                                                R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5ezT_info" {
     sat_s5ezT_info:
         const sat_s5ezT_entry;
         const 2;
         const 4294967307;
         const 8589934607;
         const S5eEs_srt+128;
 },
 Data.Either.$fReadEither_$creadListPrec_entry() //  [R2, R3]
         { []
         }
     {offset
       c5fV4: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5fV8; else goto c5fV7;
       c5fV8: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fReadEither_$creadListPrec_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5fV7: // global
           I64[Hp - 16] = sat_s5ezT_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R2 = Hp - 14;
           call GHC.Read.list_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fReadEither_$creadListPrec_info" {
     Data.Either.$fReadEither_$creadListPrec_info:
         const Data.Either.$fReadEither_$creadListPrec_entry;
         const 0;
         const 55834574862;
         const 8589934607;
         const S5eEs_srt+128;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.597495948 UTC

[section ""data" . Data.Either.$fReadEither_$creadList_closure" {
     Data.Either.$fReadEither_$creadList_closure:
         const Data.Either.$fReadEither_$creadList_info;
         const 0;
 },
 sat_s5ezW_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5fVt: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fReadEither1_entry(R5,
                                                R4,
                                                R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5ezW_info" {
     sat_s5ezW_info:
         const sat_s5ezW_entry;
         const 2;
         const 4294967307;
         const 8589934607;
         const S5eEs_srt+128;
 },
 sat_s5ezX_entry() //  [R1]
         { []
         }
     {offset
       c5fVw: // global
           _s5ezX::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto c5fVx; else goto c5fVy;
       c5fVy: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5fVA; else goto c5fVz;
       c5fVA: // global
           HpAlloc = 24;
           goto c5fVx;
       c5fVx: // global
           R1 = _s5ezX::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5fVz: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5ezX::P64;
           _s5ezU::P64 = P64[_s5ezX::P64 + 16];
           _s5ezV::P64 = P64[_s5ezX::P64 + 24];
           I64[Hp - 16] = sat_s5ezW_info;
           P64[Hp - 8] = _s5ezU::P64;
           P64[Hp] = _s5ezV::P64;
           R2 = Hp - 14;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = GHC.Read.$fRead()7_closure;
           P64[Sp - 24] = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           Sp = Sp - 40;
           call GHC.Read.list_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5ezX_info" {
     sat_s5ezX_info:
         const sat_s5ezX_entry;
         const 2;
         const 21474836498;
         const S5eEs_srt+128;
 },
 Data.Either.$fReadEither_$creadList_entry() //  [R2, R3]
         { []
         }
     {offset
       c5fVB: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5fVF; else goto c5fVE;
       c5fVF: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fReadEither_$creadList_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5fVE: // global
           I64[Hp - 24] = sat_s5ezX_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R2 = Hp - 24;
           R1 = Text.ParserCombinators.ReadP.run_closure+2;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fReadEither_$creadList_info" {
     Data.Either.$fReadEither_$creadList_info:
         const Data.Either.$fReadEither_$creadList_entry;
         const 0;
         const 90194313230;
         const 8589934607;
         const S5eEs_srt+128;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.608266565 UTC

[section ""data" . Data.Either.$fReadEither_closure" {
     Data.Either.$fReadEither_closure:
         const Data.Either.$fReadEither_info;
         const 0;
 },
 sat_s5eA3_entry() //  [R1]
         { []
         }
     {offset
       c5fVZ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5fW0; else goto c5fW1;
       c5fW0: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5fW1: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Either.$fReadEither_$creadListPrec_entry(R3,
                                                              R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5eA3_info" {
     sat_s5eA3_info:
         const sat_s5eA3_entry;
         const 2;
         const 4294967314;
         const S5eEs_srt+152;
 },
 sat_s5eA2_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5fW7: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fReadEither1_entry(R5,
                                                R4,
                                                R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5eA2_info" {
     sat_s5eA2_info:
         const sat_s5eA2_entry;
         const 2;
         const 4294967307;
         const 8589934607;
         const S5eEs_srt+128;
 },
 sat_s5eA1_entry() //  [R1]
         { []
         }
     {offset
       c5fWe: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5fWf; else goto c5fWg;
       c5fWf: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5fWg: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Either.$fReadEither_$creadList_entry(R3,
                                                          R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5eA1_info" {
     sat_s5eA1_info:
         const sat_s5eA1_entry;
         const 2;
         const 4294967314;
         const S5eEs_srt+160;
 },
 sat_s5eA0_entry() //  [R1, R2]
         { []
         }
     {offset
       c5fWm: // global
           R4 = R2;
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           call Data.Either.$fReadEither_$creadsPrec_entry(R4,
                                                           R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5eA0_info" {
     sat_s5eA0_info:
         const sat_s5eA0_entry;
         const 2;
         const 4294967307;
         const 4294967301;
         const S5eEs_srt+136;
 },
 Data.Either.$fReadEither_entry() //  [R2, R3]
         { []
         }
     {offset
       c5fWq: // global
           Hp = Hp + 152;
           if (Hp > HpLim) (likely: False) goto c5fWu; else goto c5fWt;
       c5fWu: // global
           HpAlloc = 152;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fReadEither_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5fWt: // global
           I64[Hp - 144] = sat_s5eA3_info;
           P64[Hp - 128] = R2;
           P64[Hp - 120] = R3;
           I64[Hp - 112] = sat_s5eA2_info;
           P64[Hp - 104] = R2;
           P64[Hp - 96] = R3;
           I64[Hp - 88] = sat_s5eA1_info;
           P64[Hp - 72] = R2;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = sat_s5eA0_info;
           P64[Hp - 48] = R2;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = GHC.Read.C:Read_con_info;
           P64[Hp - 24] = Hp - 55;
           P64[Hp - 16] = Hp - 88;
           P64[Hp - 8] = Hp - 110;
           P64[Hp] = Hp - 144;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fReadEither_info" {
     Data.Either.$fReadEither_info:
         const Data.Either.$fReadEither_entry;
         const 0;
         const 253403070478;
         const 8589934607;
         const S5eEs_srt+128;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.621735572 UTC

[section ""data" . Data.Either.$fOrdEither_$c<_closure" {
     Data.Either.$fOrdEither_$c<_closure:
         const Data.Either.$fOrdEither_$c<_info;
 },
 Data.Either.$fOrdEither_$c<_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5fX3: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5fX4; else goto c5fX5;
       c5fX4: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fOrdEither_$c<_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5fX5: // global
           I64[Sp - 32] = block_c5fWW_info;
           R1 = R4;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5fXE; else goto c5fWX;
       u5fXE: // global
           call _c5fWW(R1) args: 0, res: 0, upd: 0;
       c5fWX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fOrdEither_$c<_info" {
     Data.Either.$fOrdEither_$c<_info:
         const Data.Either.$fOrdEither_$c<_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c5fWW() //  [R1]
         { []
         }
     {offset
       c5fWW: // global
           _s5eA7::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5fX0; else goto c5fX1;
       c5fX0: // global
           I64[Sp] = block_c5fX8_info;
           _s5eA9::P64 = P64[R1 + 7];
           R1 = _s5eA7::P64;
           P64[Sp + 24] = _s5eA9::P64;
           if (R1 & 7 != 0) goto u5fXC; else goto c5fXa;
       u5fXC: // global
           call _c5fX8(R1) args: 0, res: 0, upd: 0;
       c5fXa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c5fX1: // global
           I64[Sp + 8] = block_c5fXn_info;
           _s5eAd::P64 = P64[R1 + 6];
           R1 = _s5eA7::P64;
           P64[Sp + 24] = _s5eAd::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5fXD; else goto c5fXp;
       u5fXD: // global
           call _c5fXn(R1) args: 0, res: 0, upd: 0;
       c5fXp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fWW_info" {
     block_c5fWW_info:
         const _c5fWW;
         const 3;
         const 30;
 },
 _c5fX8() //  [R1]
         { []
         }
     {offset
       c5fX8: // global
           if (R1 & 7 == 1) goto c5fXg; else goto c5fXk;
       c5fXg: // global
           R2 = P64[Sp + 8];
           I64[Sp + 8] = stg_ap_pp_info;
           P64[Sp + 16] = P64[Sp + 24];
           P64[Sp + 24] = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Classes.<_entry(R2) args: 32, res: 0, upd: 8;
       c5fXk: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fX8_info" {
     block_c5fX8_info:
         const _c5fX8;
         const 131;
         const 30;
 },
 _c5fXn() //  [R1]
         { []
         }
     {offset
       c5fXn: // global
           if (R1 & 7 == 1) goto c5fXv; else goto c5fXz;
       c5fXv: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5fXz: // global
           R2 = P64[Sp + 8];
           I64[Sp] = stg_ap_pp_info;
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = P64[R1 + 6];
           call GHC.Classes.<_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fXn_info" {
     block_c5fXn_info:
         const _c5fXn;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.634046315 UTC

[section ""data" . Data.Either.$fOrdEither_$ccompare_closure" {
     Data.Either.$fOrdEither_$ccompare_closure:
         const Data.Either.$fOrdEither_$ccompare_info;
 },
 Data.Either.$fOrdEither_$ccompare_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5fYj: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5fYk; else goto c5fYl;
       c5fYk: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fOrdEither_$ccompare_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5fYl: // global
           I64[Sp - 32] = block_c5fYc_info;
           R1 = R4;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5fYU; else goto c5fYd;
       u5fYU: // global
           call _c5fYc(R1) args: 0, res: 0, upd: 0;
       c5fYd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fOrdEither_$ccompare_info" {
     Data.Either.$fOrdEither_$ccompare_info:
         const Data.Either.$fOrdEither_$ccompare_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c5fYc() //  [R1]
         { []
         }
     {offset
       c5fYc: // global
           _s5eAk::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5fYg; else goto c5fYh;
       c5fYg: // global
           I64[Sp] = block_c5fYo_info;
           _s5eAm::P64 = P64[R1 + 7];
           R1 = _s5eAk::P64;
           P64[Sp + 24] = _s5eAm::P64;
           if (R1 & 7 != 0) goto u5fYS; else goto c5fYq;
       u5fYS: // global
           call _c5fYo(R1) args: 0, res: 0, upd: 0;
       c5fYq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c5fYh: // global
           I64[Sp + 8] = block_c5fYD_info;
           _s5eAq::P64 = P64[R1 + 6];
           R1 = _s5eAk::P64;
           P64[Sp + 24] = _s5eAq::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5fYT; else goto c5fYF;
       u5fYT: // global
           call _c5fYD(R1) args: 0, res: 0, upd: 0;
       c5fYF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fYc_info" {
     block_c5fYc_info:
         const _c5fYc;
         const 3;
         const 30;
 },
 _c5fYo() //  [R1]
         { []
         }
     {offset
       c5fYo: // global
           if (R1 & 7 == 1) goto c5fYw; else goto c5fYA;
       c5fYw: // global
           R2 = P64[Sp + 8];
           I64[Sp + 8] = stg_ap_pp_info;
           P64[Sp + 16] = P64[Sp + 24];
           P64[Sp + 24] = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Classes.compare_entry(R2) args: 32, res: 0, upd: 8;
       c5fYA: // global
           R1 = GHC.Types.LT_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fYo_info" {
     block_c5fYo_info:
         const _c5fYo;
         const 131;
         const 30;
 },
 _c5fYD() //  [R1]
         { []
         }
     {offset
       c5fYD: // global
           if (R1 & 7 == 1) goto c5fYL; else goto c5fYP;
       c5fYL: // global
           R1 = GHC.Types.GT_closure+3;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5fYP: // global
           R2 = P64[Sp + 8];
           I64[Sp] = stg_ap_pp_info;
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = P64[R1 + 6];
           call GHC.Classes.compare_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fYD_info" {
     block_c5fYD_info:
         const _c5fYD;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.646485743 UTC

[section ""data" . Data.Either.$fEqEither_$c==_closure" {
     Data.Either.$fEqEither_$c==_closure:
         const Data.Either.$fEqEither_$c==_info;
 },
 Data.Either.$fEqEither_$c==_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5fZz: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5fZA; else goto c5fZB;
       c5fZA: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fEqEither_$c==_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5fZB: // global
           I64[Sp - 32] = block_c5fZs_info;
           R1 = R4;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5g0c; else goto c5fZt;
       u5g0c: // global
           call _c5fZs(R1) args: 0, res: 0, upd: 0;
       c5fZt: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fEqEither_$c==_info" {
     Data.Either.$fEqEither_$c==_info:
         const Data.Either.$fEqEither_$c==_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c5fZs() //  [R1]
         { []
         }
     {offset
       c5fZs: // global
           _s5eAx::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5fZw; else goto c5fZx;
       c5fZw: // global
           I64[Sp] = block_c5fZE_info;
           _s5eAz::P64 = P64[R1 + 7];
           R1 = _s5eAx::P64;
           P64[Sp + 24] = _s5eAz::P64;
           if (R1 & 7 != 0) goto u5g0a; else goto c5fZG;
       u5g0a: // global
           call _c5fZE(R1) args: 0, res: 0, upd: 0;
       c5fZG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c5fZx: // global
           I64[Sp + 8] = block_c5fZT_info;
           _s5eAD::P64 = P64[R1 + 6];
           R1 = _s5eAx::P64;
           P64[Sp + 24] = _s5eAD::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5g0b; else goto c5fZV;
       u5g0b: // global
           call _c5fZT(R1) args: 0, res: 0, upd: 0;
       c5fZV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fZs_info" {
     block_c5fZs_info:
         const _c5fZs;
         const 3;
         const 30;
 },
 _c5fZE() //  [R1]
         { []
         }
     {offset
       c5fZE: // global
           if (R1 & 7 == 1) goto c5fZM; else goto u5g09;
       c5fZM: // global
           R2 = P64[Sp + 8];
           I64[Sp + 8] = stg_ap_pp_info;
           P64[Sp + 16] = P64[Sp + 24];
           P64[Sp + 24] = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
       u5g09: // global
           Sp = Sp + 32;
           call _c5g01() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5fZE_info" {
     block_c5fZE_info:
         const _c5fZE;
         const 131;
         const 30;
 },
 _c5fZT() //  [R1]
         { []
         }
     {offset
       c5fZT: // global
           if (R1 & 7 == 1) goto u5g08; else goto c5g05;
       u5g08: // global
           Sp = Sp + 24;
           call _c5g01() args: 0, res: 0, upd: 0;
       c5g05: // global
           R2 = P64[Sp + 8];
           I64[Sp] = stg_ap_pp_info;
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = P64[R1 + 6];
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5fZT_info" {
     block_c5fZT_info:
         const _c5fZT;
         const 2;
         const 30;
 },
 _c5g01() //  []
         { []
         }
     {offset
       c5g01: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.660543283 UTC

[section ""data" . Data.Either.$fEqEither_$c/=_closure" {
     Data.Either.$fEqEither_$c/=_closure:
         const Data.Either.$fEqEither_$c/=_info;
 },
 Data.Either.$fEqEither_$c/=_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5g0U: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5g0V; else goto c5g0W;
       c5g0V: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fEqEither_$c/=_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5g0W: // global
           I64[Sp - 32] = block_c5g0N_info;
           R1 = R4;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5g1Z; else goto c5g0O;
       u5g1Z: // global
           call _c5g0N(R1) args: 0, res: 0, upd: 0;
       c5g0O: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fEqEither_$c/=_info" {
     Data.Either.$fEqEither_$c/=_info:
         const Data.Either.$fEqEither_$c/=_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c5g0N() //  [R1]
         { []
         }
     {offset
       c5g0N: // global
           _s5eAK::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5g0R; else goto c5g0S;
       c5g0R: // global
           I64[Sp] = block_c5g0Z_info;
           _s5eAM::P64 = P64[R1 + 7];
           R1 = _s5eAK::P64;
           P64[Sp + 24] = _s5eAM::P64;
           if (R1 & 7 != 0) goto u5g1X; else goto c5g11;
       u5g1X: // global
           call _c5g0Z(R1) args: 0, res: 0, upd: 0;
       c5g11: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c5g0S: // global
           I64[Sp + 8] = block_c5g1p_info;
           _s5eAR::P64 = P64[R1 + 6];
           R1 = _s5eAK::P64;
           P64[Sp + 24] = _s5eAR::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5g1Y; else goto c5g1r;
       u5g1Y: // global
           call _c5g1p(R1) args: 0, res: 0, upd: 0;
       c5g1r: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5g0N_info" {
     block_c5g0N_info:
         const _c5g0N;
         const 3;
         const 30;
 },
 _c5g0Z() //  [R1]
         { []
         }
     {offset
       c5g0Z: // global
           if (R1 & 7 == 1) goto c5g18; else goto u5g1U;
       c5g18: // global
           _s5eAM::P64 = P64[Sp + 24];
           I64[Sp + 24] = block_c5g15_info;
           R2 = P64[Sp + 8];
           I64[Sp] = stg_ap_pp_info;
           P64[Sp + 8] = _s5eAM::P64;
           P64[Sp + 16] = P64[R1 + 7];
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
       u5g1U: // global
           Sp = Sp + 32;
           call _c5g1I() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5g0Z_info" {
     block_c5g0Z_info:
         const _c5g0Z;
         const 131;
         const 30;
 },
 _c5g15() //  [R1]
         { []
         }
     {offset
       c5g15: // global
           if (R1 & 7 == 1) goto u5g1V; else goto u5g1W;
       u5g1V: // global
           Sp = Sp + 8;
           call _c5g1I() args: 0, res: 0, upd: 0;
       u5g1W: // global
           Sp = Sp + 8;
           call _c5g1M() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5g15_info" {
     block_c5g15_info:
         const _c5g15;
         const 0;
         const 30;
 },
 _c5g1p() //  [R1]
         { []
         }
     {offset
       c5g1p: // global
           if (R1 & 7 == 1) goto u5g1R; else goto c5g1C;
       u5g1R: // global
           Sp = Sp + 24;
           call _c5g1I() args: 0, res: 0, upd: 0;
       c5g1C: // global
           _s5eAR::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c5g1A_info;
           R2 = P64[Sp + 8];
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = _s5eAR::P64;
           P64[Sp + 8] = P64[R1 + 6];
           Sp = Sp - 8;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5g1p_info" {
     block_c5g1p_info:
         const _c5g1p;
         const 2;
         const 30;
 },
 _c5g1A() //  [R1]
         { []
         }
     {offset
       c5g1A: // global
           if (R1 & 7 == 1) goto u5g1S; else goto u5g1T;
       u5g1S: // global
           Sp = Sp + 8;
           call _c5g1I() args: 0, res: 0, upd: 0;
       u5g1T: // global
           Sp = Sp + 8;
           call _c5g1M() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5g1A_info" {
     block_c5g1A_info:
         const _c5g1A;
         const 0;
         const 30;
 },
 _c5g1I() //  []
         { []
         }
     {offset
       c5g1I: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c5g1M() //  []
         { []
         }
     {offset
       c5g1M: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.677058497 UTC

[section ""data" . Data.Either.$fEqEither_closure" {
     Data.Either.$fEqEither_closure:
         const Data.Either.$fEqEither_info;
 },
 sat_s5eAZ_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5g2U: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fEqEither_$c/=_entry(R5,
                                                  R4,
                                                  R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5eAZ_info" {
     sat_s5eAZ_info:
         const sat_s5eAZ_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_s5eAY_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5g32: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fEqEither_$c==_entry(R5,
                                                  R4,
                                                  R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5eAY_info" {
     sat_s5eAY_info:
         const sat_s5eAY_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 Data.Either.$fEqEither_entry() //  [R2, R3]
         { []
         }
     {offset
       c5g36: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c5g3a; else goto c5g39;
       c5g3a: // global
           HpAlloc = 72;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fEqEither_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5g39: // global
           I64[Hp - 64] = sat_s5eAZ_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = sat_s5eAY_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = GHC.Classes.C:Eq_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 62;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fEqEither_info" {
     Data.Either.$fEqEither_info:
         const Data.Either.$fEqEither_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.686741673 UTC

[section ""data" . Data.Either.$fOrdEither_$cp1Ord_closure" {
     Data.Either.$fOrdEither_$cp1Ord_closure:
         const Data.Either.$fOrdEither_$cp1Ord_info;
 },
 sat_s5eB3_entry() //  [R1]
         { []
         }
     {offset
       c5g3w: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5g3x; else goto c5g3y;
       c5g3x: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5g3y: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.$p1Ord_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5eB3_info" {
     sat_s5eB3_info:
         const sat_s5eB3_entry;
         const 1;
         const 16;
 },
 sat_s5eB2_entry() //  [R1]
         { []
         }
     {offset
       c5g3D: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5g3E; else goto c5g3F;
       c5g3E: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5g3F: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.$p1Ord_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5eB2_info" {
     sat_s5eB2_info:
         const sat_s5eB2_entry;
         const 1;
         const 16;
 },
 Data.Either.$fOrdEither_$cp1Ord_entry() //  [R2, R3]
         { []
         }
     {offset
       c5g3G: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5g3K; else goto c5g3J;
       c5g3K: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fOrdEither_$cp1Ord_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5g3J: // global
           I64[Hp - 40] = sat_s5eB3_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s5eB2_info;
           P64[Hp] = R2;
           R3 = Hp - 40;
           R2 = Hp - 16;
           call Data.Either.$fEqEither_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fOrdEither_$cp1Ord_info" {
     Data.Either.$fOrdEither_$cp1Ord_info:
         const Data.Either.$fOrdEither_$cp1Ord_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.697457582 UTC

[section ""data" . Data.Either.$fOrdEither_$c<=_closure" {
     Data.Either.$fOrdEither_$c<=_closure:
         const Data.Either.$fOrdEither_$c<=_info;
 },
 Data.Either.$fOrdEither_$c<=_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5g48: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5g49; else goto c5g4a;
       c5g49: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fOrdEither_$c<=_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5g4a: // global
           I64[Sp - 32] = block_c5g41_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5g5d; else goto c5g42;
       u5g5d: // global
           call _c5g41(R1) args: 0, res: 0, upd: 0;
       c5g42: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fOrdEither_$c<=_info" {
     Data.Either.$fOrdEither_$c<=_info:
         const Data.Either.$fOrdEither_$c<=_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c5g41() //  [R1]
         { []
         }
     {offset
       c5g41: // global
           _s5eB6::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5g45; else goto c5g46;
       c5g45: // global
           I64[Sp] = block_c5g4d_info;
           _s5eB9::P64 = P64[R1 + 7];
           R1 = _s5eB6::P64;
           P64[Sp + 24] = _s5eB9::P64;
           if (R1 & 7 != 0) goto u5g5b; else goto c5g4f;
       u5g5b: // global
           call _c5g4d(R1) args: 0, res: 0, upd: 0;
       c5g4f: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c5g46: // global
           I64[Sp + 8] = block_c5g4D_info;
           _s5eBe::P64 = P64[R1 + 6];
           R1 = _s5eB6::P64;
           P64[Sp + 24] = _s5eBe::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5g5c; else goto c5g4F;
       u5g5c: // global
           call _c5g4D(R1) args: 0, res: 0, upd: 0;
       c5g4F: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5g41_info" {
     block_c5g41_info:
         const _c5g41;
         const 3;
         const 30;
 },
 _c5g4d() //  [R1]
         { []
         }
     {offset
       c5g4d: // global
           if (R1 & 7 == 1) goto c5g4m; else goto u5g58;
       c5g4m: // global
           _s5eB9::P64 = P64[Sp + 24];
           I64[Sp + 24] = block_c5g4j_info;
           R2 = P64[Sp + 8];
           I64[Sp] = stg_ap_pp_info;
           P64[Sp + 8] = _s5eB9::P64;
           P64[Sp + 16] = P64[R1 + 7];
           call GHC.Classes.<_entry(R2) args: 32, res: 8, upd: 8;
       u5g58: // global
           Sp = Sp + 32;
           call _c5g50() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5g4d_info" {
     block_c5g4d_info:
         const _c5g4d;
         const 131;
         const 30;
 },
 _c5g4j() //  [R1]
         { []
         }
     {offset
       c5g4j: // global
           if (R1 & 7 == 1) goto u5g59; else goto u5g5a;
       u5g59: // global
           Sp = Sp + 8;
           call _c5g4W() args: 0, res: 0, upd: 0;
       u5g5a: // global
           Sp = Sp + 8;
           call _c5g50() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5g4j_info" {
     block_c5g4j_info:
         const _c5g4j;
         const 0;
         const 30;
 },
 _c5g4D() //  [R1]
         { []
         }
     {offset
       c5g4D: // global
           if (R1 & 7 == 1) goto u5g55; else goto c5g4Q;
       u5g55: // global
           Sp = Sp + 24;
           call _c5g4W() args: 0, res: 0, upd: 0;
       c5g4Q: // global
           _s5eBe::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c5g4O_info;
           R2 = P64[Sp + 8];
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = _s5eBe::P64;
           P64[Sp + 8] = P64[R1 + 6];
           Sp = Sp - 8;
           call GHC.Classes.<_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5g4D_info" {
     block_c5g4D_info:
         const _c5g4D;
         const 2;
         const 30;
 },
 _c5g4O() //  [R1]
         { []
         }
     {offset
       c5g4O: // global
           if (R1 & 7 == 1) goto u5g56; else goto u5g57;
       u5g56: // global
           Sp = Sp + 8;
           call _c5g4W() args: 0, res: 0, upd: 0;
       u5g57: // global
           Sp = Sp + 8;
           call _c5g50() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5g4O_info" {
     block_c5g4O_info:
         const _c5g4O;
         const 0;
         const 30;
 },
 _c5g4W() //  []
         { []
         }
     {offset
       c5g4W: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c5g50() //  []
         { []
         }
     {offset
       c5g50: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.718264795 UTC

[section ""data" . Data.Either.$fOrdEither_$cmax_closure" {
     Data.Either.$fOrdEither_$cmax_closure:
         const Data.Either.$fOrdEither_$cmax_info;
 },
 Data.Either.$fOrdEither_$cmax_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5g6a: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c5g6b; else goto c5g6c;
       c5g6b: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fOrdEither_$cmax_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5g6c: // global
           I64[Sp - 32] = block_c5g63_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5g7e; else goto c5g64;
       u5g7e: // global
           call _c5g63(R1) args: 0, res: 0, upd: 0;
       c5g64: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fOrdEither_$cmax_info" {
     Data.Either.$fOrdEither_$cmax_info:
         const Data.Either.$fOrdEither_$cmax_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c5g63() //  [R1]
         { []
         }
     {offset
       c5g63: // global
           _s5eBl::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5g67; else goto c5g68;
       c5g67: // global
           I64[Sp] = block_c5g6f_info;
           _s5eBn::P64 = R1;
           _s5eBo::P64 = P64[R1 + 7];
           R1 = _s5eBl::P64;
           P64[Sp + 16] = _s5eBo::P64;
           P64[Sp + 24] = _s5eBn::P64;
           if (R1 & 7 != 0) goto u5g7c; else goto c5g6h;
       u5g7c: // global
           call _c5g6f(R1) args: 0, res: 0, upd: 0;
       c5g6h: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c5g68: // global
           I64[Sp] = block_c5g6F_info;
           _s5eBn::P64 = R1;
           _s5eBt::P64 = P64[R1 + 6];
           R1 = _s5eBl::P64;
           P64[Sp + 8] = _s5eBt::P64;
           P64[Sp + 24] = _s5eBn::P64;
           if (R1 & 7 != 0) goto u5g7d; else goto c5g6H;
       u5g7d: // global
           call _c5g6F(R1) args: 0, res: 0, upd: 0;
       c5g6H: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5g63_info" {
     block_c5g63_info:
         const _c5g63;
         const 3;
         const 30;
 },
 _c5g6f() //  [R1]
         { []
         }
     {offset
       c5g6f: // global
           if (R1 & 7 == 1) goto c5g6o; else goto u5g79;
       c5g6o: // global
           _s5eBj::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5g6l_info;
           R2 = _s5eBj::P64;
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = P64[Sp + 16];
           P64[Sp] = P64[R1 + 7];
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call GHC.Classes.<_entry(R2) args: 32, res: 8, upd: 8;
       u5g79: // global
           P64[Sp + 24] = R1;
           Sp = Sp + 24;
           call _c5g6C() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5g6f_info" {
     block_c5g6f_info:
         const _c5g6f;
         const 3;
         const 30;
 },
 _c5g6l() //  [R1]
         { []
         }
     {offset
       c5g6l: // global
           if (R1 & 7 == 1) goto u5g7a; else goto u5g7b;
       u5g7a: // global
           Sp = Sp + 16;
           call _c5g6Y() args: 0, res: 0, upd: 0;
       u5g7b: // global
           P64[Sp + 16] = P64[Sp + 8];
           Sp = Sp + 16;
           call _c5g6C() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5g6l_info" {
     block_c5g6l_info:
         const _c5g6l;
         const 2;
         const 30;
 },
 _c5g6C() //  []
         { []
         }
     {offset
       c5g6C: // global
           R1 = P64[Sp] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c5g6F() //  [R1]
         { []
         }
     {offset
       c5g6F: // global
           if (R1 & 7 == 1) goto u5g77; else goto c5g6S;
       u5g77: // global
           Sp = Sp + 24;
           call _c5g6Y() args: 0, res: 0, upd: 0;
       c5g6S: // global
           _s5eBt::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5g6Q_info;
           R2 = P64[Sp + 16];
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = _s5eBt::P64;
           P64[Sp] = P64[R1 + 6];
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call GHC.Classes.<_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5g6F_info" {
     block_c5g6F_info:
         const _c5g6F;
         const 3;
         const 30;
 },
 _c5g6Q() //  [R1]
         { []
         }
     {offset
       c5g6Q: // global
           if (R1 & 7 == 1) goto u5g78; else goto c5g72;
       u5g78: // global
           Sp = Sp + 16;
           call _c5g6Y() args: 0, res: 0, upd: 0;
       c5g72: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5g6Q_info" {
     block_c5g6Q_info:
         const _c5g6Q;
         const 2;
         const 30;
 },
 _c5g6Y() //  []
         { []
         }
     {offset
       c5g6Y: // global
           R1 = P64[Sp] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.737540881 UTC

[section ""data" . Data.Either.$fOrdEither_$c>=_closure" {
     Data.Either.$fOrdEither_$c>=_closure:
         const Data.Either.$fOrdEither_$c>=_info;
 },
 Data.Either.$fOrdEither_$c>=_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5g8g: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5g8h; else goto c5g8i;
       c5g8h: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fOrdEither_$c>=_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5g8i: // global
           I64[Sp - 32] = block_c5g89_info;
           R1 = R4;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5g9l; else goto c5g8a;
       u5g9l: // global
           call _c5g89(R1) args: 0, res: 0, upd: 0;
       c5g8a: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fOrdEither_$c>=_info" {
     Data.Either.$fOrdEither_$c>=_info:
         const Data.Either.$fOrdEither_$c>=_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c5g89() //  [R1]
         { []
         }
     {offset
       c5g89: // global
           _s5eBB::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5g8d; else goto c5g8e;
       c5g8d: // global
           I64[Sp] = block_c5g8l_info;
           _s5eBD::P64 = P64[R1 + 7];
           R1 = _s5eBB::P64;
           P64[Sp + 24] = _s5eBD::P64;
           if (R1 & 7 != 0) goto u5g9j; else goto c5g8n;
       u5g9j: // global
           call _c5g8l(R1) args: 0, res: 0, upd: 0;
       c5g8n: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c5g8e: // global
           I64[Sp + 8] = block_c5g8L_info;
           _s5eBI::P64 = P64[R1 + 6];
           R1 = _s5eBB::P64;
           P64[Sp + 24] = _s5eBI::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5g9k; else goto c5g8N;
       u5g9k: // global
           call _c5g8L(R1) args: 0, res: 0, upd: 0;
       c5g8N: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5g89_info" {
     block_c5g89_info:
         const _c5g89;
         const 3;
         const 30;
 },
 _c5g8l() //  [R1]
         { []
         }
     {offset
       c5g8l: // global
           if (R1 & 7 == 1) goto c5g8u; else goto u5g9g;
       c5g8u: // global
           _s5eBD::P64 = P64[Sp + 24];
           I64[Sp + 24] = block_c5g8r_info;
           R2 = P64[Sp + 8];
           I64[Sp] = stg_ap_pp_info;
           P64[Sp + 8] = _s5eBD::P64;
           P64[Sp + 16] = P64[R1 + 7];
           call GHC.Classes.<_entry(R2) args: 32, res: 8, upd: 8;
       u5g9g: // global
           Sp = Sp + 32;
           call _c5g98() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5g8l_info" {
     block_c5g8l_info:
         const _c5g8l;
         const 131;
         const 30;
 },
 _c5g8r() //  [R1]
         { []
         }
     {offset
       c5g8r: // global
           if (R1 & 7 == 1) goto u5g9h; else goto u5g9i;
       u5g9h: // global
           Sp = Sp + 8;
           call _c5g94() args: 0, res: 0, upd: 0;
       u5g9i: // global
           Sp = Sp + 8;
           call _c5g98() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5g8r_info" {
     block_c5g8r_info:
         const _c5g8r;
         const 0;
         const 30;
 },
 _c5g8L() //  [R1]
         { []
         }
     {offset
       c5g8L: // global
           if (R1 & 7 == 1) goto u5g9d; else goto c5g8Y;
       u5g9d: // global
           Sp = Sp + 24;
           call _c5g94() args: 0, res: 0, upd: 0;
       c5g8Y: // global
           _s5eBI::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c5g8W_info;
           R2 = P64[Sp + 8];
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = _s5eBI::P64;
           P64[Sp + 8] = P64[R1 + 6];
           Sp = Sp - 8;
           call GHC.Classes.<_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5g8L_info" {
     block_c5g8L_info:
         const _c5g8L;
         const 2;
         const 30;
 },
 _c5g8W() //  [R1]
         { []
         }
     {offset
       c5g8W: // global
           if (R1 & 7 == 1) goto u5g9e; else goto u5g9f;
       u5g9e: // global
           Sp = Sp + 8;
           call _c5g94() args: 0, res: 0, upd: 0;
       u5g9f: // global
           Sp = Sp + 8;
           call _c5g98() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5g8W_info" {
     block_c5g8W_info:
         const _c5g8W;
         const 0;
         const 30;
 },
 _c5g94() //  []
         { []
         }
     {offset
       c5g94: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c5g98() //  []
         { []
         }
     {offset
       c5g98: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.755782362 UTC

[section ""data" . Data.Either.$fOrdEither_$cmin_closure" {
     Data.Either.$fOrdEither_$cmin_closure:
         const Data.Either.$fOrdEither_$cmin_info;
 },
 Data.Either.$fOrdEither_$cmin_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5gai: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c5gaj; else goto c5gak;
       c5gaj: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fOrdEither_$cmin_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gak: // global
           I64[Sp - 32] = block_c5gab_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5gbm; else goto c5gac;
       u5gbm: // global
           call _c5gab(R1) args: 0, res: 0, upd: 0;
       c5gac: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fOrdEither_$cmin_info" {
     Data.Either.$fOrdEither_$cmin_info:
         const Data.Either.$fOrdEither_$cmin_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c5gab() //  [R1]
         { []
         }
     {offset
       c5gab: // global
           _s5eBP::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5gaf; else goto c5gag;
       c5gaf: // global
           I64[Sp] = block_c5gan_info;
           _s5eBR::P64 = R1;
           _s5eBS::P64 = P64[R1 + 7];
           R1 = _s5eBP::P64;
           P64[Sp + 16] = _s5eBS::P64;
           P64[Sp + 24] = _s5eBR::P64;
           if (R1 & 7 != 0) goto u5gbk; else goto c5gap;
       u5gbk: // global
           call _c5gan(R1) args: 0, res: 0, upd: 0;
       c5gap: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c5gag: // global
           I64[Sp] = block_c5gaN_info;
           _s5eBR::P64 = R1;
           _s5eBX::P64 = P64[R1 + 6];
           R1 = _s5eBP::P64;
           P64[Sp + 8] = _s5eBX::P64;
           P64[Sp + 24] = _s5eBR::P64;
           if (R1 & 7 != 0) goto u5gbl; else goto c5gaP;
       u5gbl: // global
           call _c5gaN(R1) args: 0, res: 0, upd: 0;
       c5gaP: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gab_info" {
     block_c5gab_info:
         const _c5gab;
         const 3;
         const 30;
 },
 _c5gan() //  [R1]
         { []
         }
     {offset
       c5gan: // global
           if (R1 & 7 == 1) goto c5gaw; else goto u5gbi;
       c5gaw: // global
           _s5eBN::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5gat_info;
           R2 = _s5eBN::P64;
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = P64[Sp + 16];
           P64[Sp] = P64[R1 + 7];
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call GHC.Classes.<_entry(R2) args: 32, res: 8, upd: 8;
       u5gbi: // global
           Sp = Sp + 24;
           call _c5gba() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5gan_info" {
     block_c5gan_info:
         const _c5gan;
         const 3;
         const 30;
 },
 _c5gat() //  [R1]
         { []
         }
     {offset
       c5gat: // global
           if (R1 & 7 == 1) goto c5gaC; else goto u5gbj;
       c5gaC: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       u5gbj: // global
           Sp = Sp + 16;
           call _c5gba() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5gat_info" {
     block_c5gat_info:
         const _c5gat;
         const 2;
         const 30;
 },
 _c5gaN() //  [R1]
         { []
         }
     {offset
       c5gaN: // global
           if (R1 & 7 == 1) goto u5gbf; else goto c5gb0;
       u5gbf: // global
           P64[Sp + 24] = R1;
           Sp = Sp + 24;
           call _c5gb6() args: 0, res: 0, upd: 0;
       c5gb0: // global
           _s5eBX::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5gaY_info;
           R2 = P64[Sp + 16];
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = _s5eBX::P64;
           P64[Sp] = P64[R1 + 6];
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call GHC.Classes.<_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gaN_info" {
     block_c5gaN_info:
         const _c5gaN;
         const 3;
         const 30;
 },
 _c5gaY() //  [R1]
         { []
         }
     {offset
       c5gaY: // global
           if (R1 & 7 == 1) goto u5gbg; else goto u5gbh;
       u5gbg: // global
           P64[Sp + 16] = P64[Sp + 8];
           Sp = Sp + 16;
           call _c5gb6() args: 0, res: 0, upd: 0;
       u5gbh: // global
           Sp = Sp + 16;
           call _c5gba() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5gaY_info" {
     block_c5gaY_info:
         const _c5gaY;
         const 2;
         const 30;
 },
 _c5gb6() //  []
         { []
         }
     {offset
       c5gb6: // global
           R1 = P64[Sp] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c5gba() //  []
         { []
         }
     {offset
       c5gba: // global
           R1 = P64[Sp] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.778805043 UTC

[section ""data" . Data.Either.$fOrdEither_closure" {
     Data.Either.$fOrdEither_closure:
         const Data.Either.$fOrdEither_info;
 },
 sat_s5eCd_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5gcm: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fOrdEither_$cmin_entry(R5,
                                                    R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5eCd_info" {
     sat_s5eCd_info:
         const sat_s5eCd_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_s5eCc_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5gcu: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fOrdEither_$cmax_entry(R5,
                                                    R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5eCc_info" {
     sat_s5eCc_info:
         const sat_s5eCc_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_s5eCb_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5gcC: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fOrdEither_$c>=_entry(R5,
                                                   R4,
                                                   R3,
                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5eCb_info" {
     sat_s5eCb_info:
         const sat_s5eCb_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_s5eCa_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5gcK: // global
           R5 = R2;
           R4 = R3;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fOrdEither_$c<_entry(R5,
                                                  R4,
                                                  R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5eCa_info" {
     sat_s5eCa_info:
         const sat_s5eCa_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_s5eC7_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5gcS: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fOrdEither_$c<=_entry(R5,
                                                   R4,
                                                   R3,
                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5eC7_info" {
     sat_s5eC7_info:
         const sat_s5eC7_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_s5eC6_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5gd0: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fOrdEither_$c<_entry(R5,
                                                  R4,
                                                  R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5eC6_info" {
     sat_s5eC6_info:
         const sat_s5eC6_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_s5eC5_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5gd8: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fOrdEither_$ccompare_entry(R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5eC5_info" {
     sat_s5eC5_info:
         const sat_s5eC5_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_s5eC4_entry() //  [R1]
         { []
         }
     {offset
       c5gdf: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5gdg; else goto c5gdh;
       c5gdg: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gdh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Either.$fOrdEither_$cp1Ord_entry(R3,
                                                      R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5eC4_info" {
     sat_s5eC4_info:
         const sat_s5eC4_entry;
         const 2;
         const 18;
 },
 Data.Either.$fOrdEither_entry() //  [R2, R3]
         { []
         }
     {offset
       c5gdj: // global
           Hp = Hp + 272;
           if (Hp > HpLim) (likely: False) goto c5gdn; else goto c5gdm;
       c5gdn: // global
           HpAlloc = 272;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fOrdEither_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gdm: // global
           I64[Hp - 264] = sat_s5eCd_info;
           P64[Hp - 256] = R2;
           P64[Hp - 248] = R3;
           I64[Hp - 240] = sat_s5eCc_info;
           P64[Hp - 232] = R2;
           P64[Hp - 224] = R3;
           I64[Hp - 216] = sat_s5eCb_info;
           P64[Hp - 208] = R2;
           P64[Hp - 200] = R3;
           I64[Hp - 192] = sat_s5eCa_info;
           P64[Hp - 184] = R2;
           P64[Hp - 176] = R3;
           I64[Hp - 168] = sat_s5eC7_info;
           P64[Hp - 160] = R2;
           P64[Hp - 152] = R3;
           I64[Hp - 144] = sat_s5eC6_info;
           P64[Hp - 136] = R2;
           P64[Hp - 128] = R3;
           I64[Hp - 120] = sat_s5eC5_info;
           P64[Hp - 112] = R2;
           P64[Hp - 104] = R3;
           I64[Hp - 96] = sat_s5eC4_info;
           P64[Hp - 80] = R2;
           P64[Hp - 72] = R3;
           I64[Hp - 64] = GHC.Classes.C:Ord_con_info;
           P64[Hp - 56] = Hp - 96;
           P64[Hp - 48] = Hp - 118;
           P64[Hp - 40] = Hp - 142;
           P64[Hp - 32] = Hp - 166;
           P64[Hp - 24] = Hp - 190;
           P64[Hp - 16] = Hp - 214;
           P64[Hp - 8] = Hp - 238;
           P64[Hp] = Hp - 262;
           R1 = Hp - 63;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fOrdEither_info" {
     Data.Either.$fOrdEither_info:
         const Data.Either.$fOrdEither_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.798396801 UTC

[section ""data" . Data.Either.either_closure" {
     Data.Either.either_closure:
         const Data.Either.either_info;
 },
 Data.Either.either_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5geb: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5gec; else goto c5ged;
       c5gec: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.either_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5ged: // global
           I64[Sp - 24] = block_c5ge4_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5gek; else goto c5ge5;
       u5gek: // global
           call _c5ge4(R1) args: 0, res: 0, upd: 0;
       c5ge5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.either_info" {
     Data.Either.either_info:
         const Data.Either.either_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5ge4() //  [R1]
         { []
         }
     {offset
       c5ge4: // global
           if (R1 & 7 == 1) goto c5ge8; else goto c5ge9;
       c5ge8: // global
           R2 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
       c5ge9: // global
           R2 = P64[R1 + 6];
           R1 = P64[Sp + 16];
           Sp = Sp + 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ge4_info" {
     block_c5ge4_info:
         const _c5ge4;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.807397105 UTC

[section ""data" . Data.Either.$wpartitionEithers_closure" {
     Data.Either.$wpartitionEithers_closure:
         const Data.Either.$wpartitionEithers_info;
 },
 eta_s5eCo_entry() //  [R1]
         { []
         }
     {offset
       c5geN: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5geO; else goto c5geP;
       c5geO: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5geP: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5geK_info;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call Data.Either.$wpartitionEithers_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . eta_s5eCo_info" {
     eta_s5eCo_info:
         const eta_s5eCo_entry;
         const 1;
         const 16;
 },
 _c5geK() //  [R1, R2]
         { []
         }
     {offset
       c5geK: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5geS; else goto c5geR;
       c5geS: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c5geR: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5geK_info" {
     block_c5geK_info:
         const _c5geK;
         const 0;
         const 30;
 },
 Data.Either.$wpartitionEithers_entry() //  [R2]
         { []
         }
     {offset
       c5geX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5geY; else goto c5geZ;
       c5geY: // global
           R2 = R2;
           R1 = Data.Either.$wpartitionEithers_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5geZ: // global
           I64[Sp - 8] = block_c5geA_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5gft; else goto c5geB;
       u5gft: // global
           call _c5geA(R1) args: 0, res: 0, upd: 0;
       c5geB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$wpartitionEithers_info" {
     Data.Either.$wpartitionEithers_info:
         const Data.Either.$wpartitionEithers_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5geA() //  [R1]
         { []
         }
     {offset
       c5geA: // global
           if (R1 & 7 == 1) goto c5geU; else goto c5geV;
       c5geU: // global
           R2 = GHC.Types.[]_closure+1;
           R1 = GHC.Types.[]_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
       c5geV: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5gf5; else goto c5gf4;
       c5gf5: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5gf4: // global
           _s5eCm::P64 = P64[R1 + 6];
           _s5eCn::P64 = P64[R1 + 14];
           I64[Hp - 16] = eta_s5eCo_info;
           P64[Hp] = _s5eCn::P64;
           I64[Sp - 8] = block_c5gf2_info;
           R1 = _s5eCm::P64;
           P64[Sp] = Hp - 16;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5gfs; else goto c5gf6;
       u5gfs: // global
           call _c5gf2(R1) args: 0, res: 0, upd: 0;
       c5gf6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5geA_info" {
     block_c5geA_info:
         const _c5geA;
         const 0;
         const 30;
 },
 _c5gf2() //  [R1]
         { []
         }
     {offset
       c5gf2: // global
           _c5geG::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5gfe; else goto c5gfn;
       c5gfe: // global
           Hp = Hp + 72;
           _s5eCs::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5gfq; else goto c5gfg;
       c5gfg: // global
           _s5eCt::P64 = P64[_s5eCs::P64 + 7];
           I64[Hp - 64] = stg_sel_1_upd_info;
           P64[Hp - 48] = _c5geG::P64;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _c5geG::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5eCt::P64;
           P64[Hp] = Hp - 40;
           R2 = Hp - 64;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
       c5gfn: // global
           Hp = Hp + 72;
           _s5eCs::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5gfq; else goto c5gfp;
       c5gfq: // global
           HpAlloc = 72;
           R1 = _s5eCs::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5gfp: // global
           _s5eCD::P64 = P64[_s5eCs::P64 + 6];
           I64[Hp - 64] = stg_sel_1_upd_info;
           P64[Hp - 48] = _c5geG::P64;
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = _s5eCD::P64;
           P64[Hp - 24] = Hp - 64;
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _c5geG::P64;
           R2 = Hp - 38;
           R1 = Hp - 16;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gf2_info" {
     block_c5gf2_info:
         const _c5gf2;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.820451996 UTC

[section ""data" . Data.Either.partitionEithers_closure" {
     Data.Either.partitionEithers_closure:
         const Data.Either.partitionEithers_info;
 },
 Data.Either.partitionEithers_entry() //  [R2]
         { []
         }
     {offset
       c5gg6: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5gg7; else goto c5gg8;
       c5gg7: // global
           R2 = R2;
           R1 = Data.Either.partitionEithers_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5gg8: // global
           I64[Sp - 8] = block_c5gg3_info;
           R2 = R2;
           Sp = Sp - 8;
           call Data.Either.$wpartitionEithers_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.partitionEithers_info" {
     Data.Either.partitionEithers_info:
         const Data.Either.partitionEithers_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5gg3() //  [R1, R2]
         { []
         }
     {offset
       c5gg3: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5ggb; else goto c5gga;
       c5ggb: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c5gga: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gg3_info" {
     block_c5gg3_info:
         const _c5gg3;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.828466417 UTC

[section ""data" . poly_go_r5exd_closure" {
     poly_go_r5exd_closure:
         const poly_go_r5exd_info;
 },
 sat_s5eCX_entry() //  [R1]
         { []
         }
     {offset
       c5ggE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5ggF; else goto c5ggG;
       c5ggF: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5ggG: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call poly_go_r5exd_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5eCX_info" {
     sat_s5eCX_info:
         const sat_s5eCX_entry;
         const 1;
         const 16;
 },
 poly_go_r5exd_entry() //  [R2]
         { []
         }
     {offset
       c5ggL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5ggM; else goto u5gh2;
       c5ggM: // global
           R2 = R2;
           R1 = poly_go_r5exd_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       u5gh2: // global
           P64[Sp - 8] = R2;
           Sp = Sp - 8;
           call _c5ggm() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . poly_go_r5exd_info" {
     poly_go_r5exd_info:
         const poly_go_r5exd_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5ggm() //  []
         { []
         }
     {offset
       c5ggm: // global
           _s5eCR::P64 = P64[Sp];
           I64[Sp] = block_c5ggp_info;
           R1 = _s5eCR::P64;
           if (R1 & 7 != 0) goto u5gh4; else goto c5ggq;
       u5gh4: // global
           call _c5ggp(R1) args: 0, res: 0, upd: 0;
       c5ggq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5ggp() //  [R1]
         { []
         }
     {offset
       c5ggp: // global
           if (R1 & 7 == 1) goto c5ggI; else goto c5ggJ;
       c5ggI: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5ggJ: // global
           I64[Sp - 8] = block_c5ggv_info;
           _s5eCU::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5eCU::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5gh5; else goto c5ggw;
       u5gh5: // global
           call _c5ggv(R1) args: 0, res: 0, upd: 0;
       c5ggw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ggp_info" {
     block_c5ggp_info:
         const _c5ggp;
         const 0;
         const 30;
 },
 _c5ggv() //  [R1]
         { []
         }
     {offset
       c5ggv: // global
           _s5eCU::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5ggT; else goto c5gh0;
       c5ggT: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5ggW; else goto c5ggV;
       c5ggW: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5ggV: // global
           _s5eCW::P64 = P64[R1 + 7];
           I64[Hp - 40] = sat_s5eCX_info;
           P64[Hp - 24] = _s5eCU::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5eCW::P64;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5gh0: // global
           P64[Sp + 8] = _s5eCU::P64;
           Sp = Sp + 8;
           call _c5ggm() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5ggv_info" {
     block_c5ggv_info:
         const _c5ggv;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.839096803 UTC

[section ""data" . Data.Either.lefts_closure" {
     Data.Either.lefts_closure:
         const Data.Either.lefts_info;
 },
 Data.Either.lefts_entry() //  [R2]
         { []
         }
     {offset
       c5ghC: // global
           R2 = R2;
           call poly_go_r5exd_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.lefts_info" {
     Data.Either.lefts_info:
         const Data.Either.lefts_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.844514189 UTC

[section ""data" . poly_go1_r5exe_closure" {
     poly_go1_r5exe_closure:
         const poly_go1_r5exe_info;
 },
 sat_s5eD7_entry() //  [R1]
         { []
         }
     {offset
       c5gi3: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5gi4; else goto c5gi5;
       c5gi4: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gi5: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call poly_go1_r5exe_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5eD7_info" {
     sat_s5eD7_info:
         const sat_s5eD7_entry;
         const 1;
         const 16;
 },
 poly_go1_r5exe_entry() //  [R2]
         { []
         }
     {offset
       c5gia: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5gib; else goto u5giq;
       c5gib: // global
           R2 = R2;
           R1 = poly_go1_r5exe_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       u5giq: // global
           P64[Sp - 8] = R2;
           Sp = Sp - 8;
           call _c5ghK() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . poly_go1_r5exe_info" {
     poly_go1_r5exe_info:
         const poly_go1_r5exe_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5ghK() //  []
         { []
         }
     {offset
       c5ghK: // global
           _s5eD0::P64 = P64[Sp];
           I64[Sp] = block_c5ghN_info;
           R1 = _s5eD0::P64;
           if (R1 & 7 != 0) goto u5gis; else goto c5ghO;
       u5gis: // global
           call _c5ghN(R1) args: 0, res: 0, upd: 0;
       c5ghO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5ghN() //  [R1]
         { []
         }
     {offset
       c5ghN: // global
           if (R1 & 7 == 1) goto c5gi7; else goto c5gi8;
       c5gi7: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5gi8: // global
           I64[Sp - 8] = block_c5ghT_info;
           _s5eD3::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5eD3::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5git; else goto c5ghU;
       u5git: // global
           call _c5ghT(R1) args: 0, res: 0, upd: 0;
       c5ghU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ghN_info" {
     block_c5ghN_info:
         const _c5ghN;
         const 0;
         const 30;
 },
 _c5ghT() //  [R1]
         { []
         }
     {offset
       c5ghT: // global
           _s5eD3::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5gij; else goto c5gil;
       c5gij: // global
           P64[Sp + 8] = _s5eD3::P64;
           Sp = Sp + 8;
           call _c5ghK() args: 0, res: 0, upd: 0;
       c5gil: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5gio; else goto c5gin;
       c5gio: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5gin: // global
           _s5eD6::P64 = P64[R1 + 6];
           I64[Hp - 40] = sat_s5eD7_info;
           P64[Hp - 24] = _s5eD3::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5eD6::P64;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ghT_info" {
     block_c5ghT_info:
         const _c5ghT;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.855282111 UTC

[section ""data" . Data.Either.rights_closure" {
     Data.Either.rights_closure:
         const Data.Either.rights_info;
 },
 Data.Either.rights_entry() //  [R2]
         { []
         }
     {offset
       c5gj0: // global
           R2 = R2;
           call poly_go1_r5exe_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.rights_info" {
     Data.Either.rights_info:
         const Data.Either.rights_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.860084491 UTC

[section ""data" . Data.Either.isLeft_closure" {
     Data.Either.isLeft_closure:
         const Data.Either.isLeft_info;
 },
 Data.Either.isLeft_entry() //  [R2]
         { []
         }
     {offset
       c5gji: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5gjj; else goto c5gjk;
       c5gjj: // global
           R2 = R2;
           R1 = Data.Either.isLeft_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5gjk: // global
           I64[Sp - 8] = block_c5gjb_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5gjr; else goto c5gjc;
       u5gjr: // global
           call _c5gjb(R1) args: 0, res: 0, upd: 0;
       c5gjc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.isLeft_info" {
     Data.Either.isLeft_info:
         const Data.Either.isLeft_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5gjb() //  [R1]
         { []
         }
     {offset
       c5gjb: // global
           if (R1 & 7 == 1) goto c5gjf; else goto c5gjg;
       c5gjf: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5gjg: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gjb_info" {
     block_c5gjb_info:
         const _c5gjb;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.866617769 UTC

[section ""data" . Data.Either.isRight_closure" {
     Data.Either.isRight_closure:
         const Data.Either.isRight_info;
 },
 Data.Either.isRight_entry() //  [R2]
         { []
         }
     {offset
       c5gjQ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5gjR; else goto c5gjS;
       c5gjR: // global
           R2 = R2;
           R1 = Data.Either.isRight_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5gjS: // global
           I64[Sp - 8] = block_c5gjJ_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5gjZ; else goto c5gjK;
       u5gjZ: // global
           call _c5gjJ(R1) args: 0, res: 0, upd: 0;
       c5gjK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.isRight_info" {
     Data.Either.isRight_info:
         const Data.Either.isRight_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5gjJ() //  [R1]
         { []
         }
     {offset
       c5gjJ: // global
           if (R1 & 7 == 1) goto c5gjN; else goto c5gjO;
       c5gjN: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5gjO: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gjJ_info" {
     block_c5gjJ_info:
         const _c5gjJ;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.87330728 UTC

[section ""data" . Data.Either.fromLeft_closure" {
     Data.Either.fromLeft_closure:
         const Data.Either.fromLeft_info;
 },
 Data.Either.fromLeft_entry() //  [R2, R3]
         { []
         }
     {offset
       c5gko: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5gkp; else goto c5gkq;
       c5gkp: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.fromLeft_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gkq: // global
           I64[Sp - 16] = block_c5gkh_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5gkx; else goto c5gki;
       u5gkx: // global
           call _c5gkh(R1) args: 0, res: 0, upd: 0;
       c5gki: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.fromLeft_info" {
     Data.Either.fromLeft_info:
         const Data.Either.fromLeft_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5gkh() //  [R1]
         { []
         }
     {offset
       c5gkh: // global
           if (R1 & 7 == 1) goto c5gkl; else goto c5gkm;
       c5gkl: // global
           R1 = P64[R1 + 7];
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5gkm: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gkh_info" {
     block_c5gkh_info:
         const _c5gkh;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.879552212 UTC

[section ""data" . Data.Either.fromRight_closure" {
     Data.Either.fromRight_closure:
         const Data.Either.fromRight_info;
 },
 Data.Either.fromRight_entry() //  [R2, R3]
         { []
         }
     {offset
       c5gkU: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5gkV; else goto c5gkW;
       c5gkV: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.fromRight_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gkW: // global
           I64[Sp - 16] = block_c5gkN_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5gl3; else goto c5gkO;
       u5gl3: // global
           call _c5gkN(R1) args: 0, res: 0, upd: 0;
       c5gkO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.fromRight_info" {
     Data.Either.fromRight_info:
         const Data.Either.fromRight_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5gkN() //  [R1]
         { []
         }
     {offset
       c5gkN: // global
           if (R1 & 7 == 1) goto c5gkR; else goto c5gkS;
       c5gkR: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5gkS: // global
           R1 = P64[R1 + 6];
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gkN_info" {
     block_c5gkN_info:
         const _c5gkN;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.885443961 UTC

[section ""cstring" . Data.Either.$trModule4_bytes" {
     Data.Either.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.887263371 UTC

[section ""data" . Data.Either.$trModule3_closure" {
     Data.Either.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Either.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.889038218 UTC

[section ""cstring" . Data.Either.$trModule2_bytes" {
     Data.Either.$trModule2_bytes:
         I8[] [68,97,116,97,46,69,105,116,104,101,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.891223623 UTC

[section ""data" . Data.Either.$trModule1_closure" {
     Data.Either.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Either.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.892956838 UTC

[section ""data" . Data.Either.$trModule_closure" {
     Data.Either.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Either.$trModule3_closure+1;
         const Data.Either.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.894830706 UTC

[section ""data" . $krep_r5exf_closure" {
     $krep_r5exf_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.896484899 UTC

[section ""data" . $krep1_r5exg_closure" {
     $krep1_r5exg_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.898531459 UTC

[section ""cstring" . Data.Either.$tcEither2_bytes" {
     Data.Either.$tcEither2_bytes:
         I8[] [69,105,116,104,101,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.900612384 UTC

[section ""data" . Data.Either.$tcEither1_closure" {
     Data.Either.$tcEither1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Either.$tcEither2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.902317726 UTC

[section ""data" . Data.Either.$tcEither_closure" {
     Data.Either.$tcEither_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Either.$trModule_closure+1;
         const Data.Either.$tcEither1_closure+1;
         const GHC.Types.krep$*->*->*_closure;
         const 16074290893719807138;
         const 14958199358864670905;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.904170553 UTC

[section ""data" . $krep2_r5exh_closure" {
     $krep2_r5exh_closure:
         const :_con_info;
         const $krep_r5exf_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.906012049 UTC

[section ""data" . $krep3_r5exi_closure" {
     $krep3_r5exi_closure:
         const :_con_info;
         const $krep1_r5exg_closure+2;
         const $krep2_r5exh_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.907877543 UTC

[section ""data" . $krep4_r5exj_closure" {
     $krep4_r5exj_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Either.$tcEither_closure+1;
         const $krep3_r5exi_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.910137961 UTC

[section ""data" . Data.Either.$tc'Left1_closure" {
     Data.Either.$tc'Left1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep1_r5exg_closure+2;
         const $krep4_r5exj_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.911933417 UTC

[section ""cstring" . Data.Either.$tc'Left3_bytes" {
     Data.Either.$tc'Left3_bytes:
         I8[] [39,76,101,102,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.913753604 UTC

[section ""data" . Data.Either.$tc'Left2_closure" {
     Data.Either.$tc'Left2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Either.$tc'Left3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.915648477 UTC

[section ""data" . Data.Either.$tc'Left_closure" {
     Data.Either.$tc'Left_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Either.$trModule_closure+1;
         const Data.Either.$tc'Left2_closure+1;
         const Data.Either.$tc'Left1_closure+4;
         const 14915236324383360020;
         const 11027491440201056612;
         const 2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.918351565 UTC

[section ""data" . Data.Either.$tc'Right1_closure" {
     Data.Either.$tc'Right1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r5exf_closure+2;
         const $krep4_r5exj_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.920470301 UTC

[section ""cstring" . Data.Either.$tc'Right3_bytes" {
     Data.Either.$tc'Right3_bytes:
         I8[] [39,82,105,103,104,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.922248585 UTC

[section ""data" . Data.Either.$tc'Right2_closure" {
     Data.Either.$tc'Right2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Either.$tc'Right3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.924053548 UTC

[section ""data" . Data.Either.$tc'Right_closure" {
     Data.Either.$tc'Right_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Either.$trModule_closure+1;
         const Data.Either.$tc'Right2_closure+1;
         const Data.Either.$tc'Right1_closure+4;
         const 10395468319011834275;
         const 16371021254350888909;
         const 2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.926580876 UTC

[section ""data" . Data.Either.Left_closure" {
     Data.Either.Left_closure:
         const Data.Either.Left_info;
 },
 Data.Either.Left_entry() //  [R2]
         { []
         }
     {offset
       c5glF: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5glJ; else goto c5glI;
       c5glJ: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = Data.Either.Left_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5glI: // global
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.Left_info" {
     Data.Either.Left_info:
         const Data.Either.Left_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.931180625 UTC

[section ""data" . Data.Either.Right_closure" {
     Data.Either.Right_closure:
         const Data.Either.Right_info;
 },
 Data.Either.Right_entry() //  [R2]
         { []
         }
     {offset
       c5glU: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5glY; else goto c5glX;
       c5glY: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = Data.Either.Right_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5glX: // global
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = R2;
           R1 = Hp - 6;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.Right_info" {
     Data.Either.Right_info:
         const Data.Either.Right_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.93559899 UTC

[section ""cstring" . i5fBl_str" {
     i5fBl_str:
         I8[] [98,97,115,101,58,68,97,116,97,46,69,105,116,104,101,114,46,76,101,102,116]
 },
 Data.Either.Left_con_entry() //  [R1]
         { []
         }
     {offset
       c5gm4: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.Left_con_info" {
     Data.Either.Left_con_info:
         const Data.Either.Left_con_entry;
         const 1;
         const 2;
         const i5fBl_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.939181572 UTC

[section ""cstring" . i5fBn_str" {
     i5fBn_str:
         I8[] [98,97,115,101,58,68,97,116,97,46,69,105,116,104,101,114,46,82,105,103,104,116]
 },
 Data.Either.Right_con_entry() //  [R1]
         { []
         }
     {offset
       c5gma: // global
           R1 = R1 + 2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.Right_con_info" {
     Data.Either.Right_con_info:
         const Data.Either.Right_con_entry;
         const 1;
         const 4294967298;
         const i5fBn_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:13.942966535 UTC

[section ""relreadonly" . S5eEs_srt" {
     S5eEs_srt:
         const GHC.Err.errorWithoutStackTrace_closure;
         const Data.Either.$fSemigroupEither2_closure;
         const Data.Either.$fSemigroupEither_$cstimes_closure;
         const Data.Either.$fSemigroupEither1_closure;
         const Data.Either.$fShowEither4_closure;
         const Data.Either.$fShowEither2_closure;
         const Data.Either.$w$cshowsPrec_closure;
         const Data.Either.$fShowEither_$cshowsPrec_closure;
         const Data.Either.$fShowEither_$cshow_closure;
         const Data.Either.$fShowEither_$cshowList_closure;
         const Data.Either.$fShowEither_closure;
         const Text.Read.Lex.$wexpect_closure;
         const Data.Either.$fReadEither_lexeme1_closure;
         const Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_closure;
         const Data.Either.$fReadEither_lexeme_closure;
         const GHC.Read.list3_closure;
         const Data.Either.$fReadEither1_closure;
         const Data.Either.$fReadEither_$creadsPrec_closure;
         const GHC.Read.list_closure;
         const Data.Either.$fReadEither_$creadListPrec_closure;
         const Data.Either.$fReadEither_$creadList_closure;
         const Data.Either.$fReadEither_closure;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.05513046 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:00:16.059413718 UTC

[section ""data" . Data.Either.$fApplicativeEither_$cfmap_closure" {
     Data.Either.$fApplicativeEither_$cfmap_closure:
         const Data.Either.$fApplicativeEither_$cfmap_info;
 },
 Data.Either.$fApplicativeEither_$cfmap_entry() //  [R2, R3]
         { []
         }
     {offset
       c5gsy: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5gsz; else goto c5gsA;
       c5gsz: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fApplicativeEither_$cfmap_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gsA: // global
           I64[Sp - 16] = block_c5gsr_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5gsL; else goto c5gss;
       u5gsL: // global
           call _c5gsr(R1) args: 0, res: 0, upd: 0;
       c5gss: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fApplicativeEither_$cfmap_info" {
     Data.Either.$fApplicativeEither_$cfmap_info:
         const Data.Either.$fApplicativeEither_$cfmap_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5gsr() //  [R1]
         { []
         }
     {offset
       c5gsr: // global
           if (R1 & 7 == 1) goto c5gsv; else goto c5gsw;
       c5gsv: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5gsw: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5gsK; else goto c5gsJ;
       c5gsK: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5gsJ: // global
           _s5gml::P64 = P64[R1 + 6];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _s5gml::P64;
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gsr_info" {
     block_c5gsr_info:
         const _c5gsr;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.071337007 UTC

[section ""data" . Data.Either.$fFunctorEither_$c<$_closure" {
     Data.Either.$fFunctorEither_$c<$_closure:
         const Data.Either.$fFunctorEither_$c<$_info;
 },
 Data.Either.$fFunctorEither_$c<$_entry() //  [R2, R3]
         { []
         }
     {offset
       c5gtg: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5gth; else goto c5gti;
       c5gth: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fFunctorEither_$c<$_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gti: // global
           I64[Sp - 16] = block_c5gt9_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5gts; else goto c5gta;
       u5gts: // global
           call _c5gt9(R1) args: 0, res: 0, upd: 0;
       c5gta: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fFunctorEither_$c<$_info" {
     Data.Either.$fFunctorEither_$c<$_info:
         const Data.Either.$fFunctorEither_$c<$_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5gt9() //  [R1]
         { []
         }
     {offset
       c5gt9: // global
           if (R1 & 7 == 1) goto c5gtd; else goto c5gte;
       c5gtd: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5gte: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5gtr; else goto c5gtq;
       c5gtr: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5gtq: // global
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gt9_info" {
     block_c5gt9_info:
         const _c5gt9;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.081834691 UTC

[section ""data" . Data.Either.$fFunctorEither_closure" {
     Data.Either.$fFunctorEither_closure:
         const GHC.Base.C:Functor_con_info;
         const Data.Either.$fApplicativeEither_$cfmap_closure+2;
         const Data.Either.$fFunctorEither_$c<$_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.084318128 UTC

[section ""cstring" . lvl_r5exb_bytes" {
     lvl_r5exb_bytes:
         I8[] [115,116,105,109,101,115,58,32,112,111,115,105,116,105,118,101,32,109,117,108,116,105,112,108,105,101,114,32,101,120,112,101,99,116,101,100]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.087493639 UTC

[section ""data" . Data.Either.$fSemigroupEither1_closure" {
     Data.Either.$fSemigroupEither1_closure:
         const Data.Either.$fSemigroupEither1_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Either.$fSemigroupEither1_entry() //  [R1]
         { []
         }
     {offset
       c5gtU: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5gtV; else goto c5gtW;
       c5gtV: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gtW: // global
           (_c5gtP::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5gtP::I64 == 0) goto c5gtR; else goto c5gtQ;
       c5gtR: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5gtQ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5gtP::I64;
           I64[Sp - 24] = block_c5gtS_info;
           R2 = lvl_r5exb_bytes;
           Sp = Sp - 24;
           call GHC.CString.unpackCString#_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . Data.Either.$fSemigroupEither1_info" {
     Data.Either.$fSemigroupEither1_info:
         const Data.Either.$fSemigroupEither1_entry;
         const 0;
         const 4294967317;
         const S5gu0_srt;
 },
 _c5gtS() //  [R1]
         { []
         }
     {offset
       c5gtS: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5gtS_info" {
     block_c5gtS_info:
         const _c5gtS;
         const 0;
         const 4294967326;
         const S5gu0_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.095345613 UTC

[section ""data" . Data.Either.$fSemigroupEither2_closure" {
     Data.Either.$fSemigroupEither2_closure:
         const Data.Either.$fSemigroupEither2_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Either.$fSemigroupEither2_entry() //  [R1]
         { []
         }
     {offset
       c5guj: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5guk; else goto c5gul;
       c5guk: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gul: // global
           (_c5gug::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5gug::I64 == 0) goto c5gui; else goto c5guh;
       c5gui: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5guh: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5gug::I64;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Either.$fSemigroupEither2_info" {
     Data.Either.$fSemigroupEither2_info:
         const Data.Either.$fSemigroupEither2_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.105958394 UTC

[section ""data" . Data.Either.$fSemigroupEither_$cstimes_closure" {
     Data.Either.$fSemigroupEither_$cstimes_closure:
         const Data.Either.$fSemigroupEither_$cstimes_info;
         const 0;
 },
 sat_s5gmz_entry() //  [R1]
         { []
         }
     {offset
       c5guK: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5guL; else goto c5guM;
       c5guL: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5guM: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5guI_info;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call GHC.Real.$p1Real_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5gmz_info" {
     sat_s5gmz_info:
         const sat_s5gmz_entry;
         const 1;
         const 4294967312;
         const S5gu0_srt+8;
 },
 _c5guI() //  [R1]
         { []
         }
     {offset
       c5guI: // global
           R2 = R1;
           I64[Sp - 8] = stg_ap_p_info;
           P64[Sp] = Data.Either.$fSemigroupEither2_closure;
           Sp = Sp - 8;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5guI_info" {
     block_c5guI_info:
         const _c5guI;
         const 0;
         const 4294967326;
         const S5gu0_srt+8;
 },
 Data.Either.$fSemigroupEither_$cstimes_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5guQ: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5guS; else goto c5guT;
       c5guS: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fSemigroupEither_$cstimes_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5guT: // global
           I64[Sp - 24] = block_c5guA_info;
           R2 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call GHC.Real.$p1Integral_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fSemigroupEither_$cstimes_info" {
     Data.Either.$fSemigroupEither_$cstimes_info:
         const Data.Either.$fSemigroupEither_$cstimes_entry;
         const 0;
         const 30064771086;
         const 12884901911;
         const S5gu0_srt+8;
 },
 _c5guA() //  [R1]
         { []
         }
     {offset
       c5guA: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5guW; else goto c5guV;
       c5guW: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5guV: // global
           I64[Hp - 16] = sat_s5gmz_info;
           P64[Hp] = R1;
           I64[Sp - 8] = block_c5guR_info;
           R2 = R1;
           P64[Sp] = Hp - 16;
           Sp = Sp - 8;
           call GHC.Real.$p2Real_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5guA_info" {
     block_c5guA_info:
         const _c5guA;
         const 2;
         const 21474836510;
         const S5gu0_srt+8;
 },
 _c5guR() //  [R1]
         { []
         }
     {offset
       c5guR: // global
           _s5gmu::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c5gv0_info;
           R2 = R1;
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = _s5gmu::P64;
           Sp = Sp - 8;
           call GHC.Classes.<=_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5guR_info" {
     block_c5guR_info:
         const _c5guR;
         const 3;
         const 4294967326;
         const S5gu0_srt+24;
 },
 _c5gv0() //  [R1]
         { []
         }
     {offset
       c5gv0: // global
           if (R1 & 7 == 1) goto c5gv7; else goto c5gvb;
       c5gv7: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5gvb: // global
           R1 = Data.Either.$fSemigroupEither1_closure;
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gv0_info" {
     block_c5gv0_info:
         const _c5gv0;
         const 1;
         const 4294967326;
         const S5gu0_srt+24;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.125212957 UTC

[section ""data" . Data.Either.$fSemigroupEither_$c<>_closure" {
     Data.Either.$fSemigroupEither_$c<>_closure:
         const Data.Either.$fSemigroupEither_$c<>_info;
 },
 Data.Either.$fSemigroupEither_$c<>_entry() //  [R2, R3]
         { []
         }
     {offset
       c5gvY: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5gvZ; else goto c5gw0;
       c5gvZ: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fSemigroupEither_$c<>_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gw0: // global
           I64[Sp - 16] = block_c5gvR_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5gw7; else goto c5gvS;
       u5gw7: // global
           call _c5gvR(R1) args: 0, res: 0, upd: 0;
       c5gvS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fSemigroupEither_$c<>_info" {
     Data.Either.$fSemigroupEither_$c<>_info:
         const Data.Either.$fSemigroupEither_$c<>_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5gvR() //  [R1]
         { []
         }
     {offset
       c5gvR: // global
           if (R1 & 7 == 1) goto c5gvV; else goto c5gvW;
       c5gvV: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5gvW: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gvR_info" {
     block_c5gvR_info:
         const _c5gvR;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.136854935 UTC

[section ""data" . Data.Either.$fSemigroupEither3_closure" {
     Data.Either.$fSemigroupEither3_closure:
         const Data.Either.$fSemigroupEither3_info;
 },
 Data.Either.$fSemigroupEither3_entry() //  [R2, R3]
         { []
         }
     {offset
       c5gwz: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5gwA; else goto u5gwV;
       c5gwA: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fSemigroupEither3_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       u5gwV: // global
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call _c5gwp() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Data.Either.$fSemigroupEither3_info" {
     Data.Either.$fSemigroupEither3_info:
         const Data.Either.$fSemigroupEither3_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5gwp() //  []
         { []
         }
     {offset
       c5gwp: // global
           I64[Sp - 8] = block_c5gws_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5gwX; else goto c5gwt;
       u5gwX: // global
           call _c5gws(R1) args: 0, res: 0, upd: 0;
       c5gwt: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5gws() //  [R1]
         { []
         }
     {offset
       c5gws: // global
           _s5gmG::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5gww; else goto c5gwx;
       c5gww: // global
           R1 = _s5gmG::P64 & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5gwx: // global
           I64[Sp] = block_c5gwH_info;
           _s5gmJ::P64 = P64[R1 + 6];
           _s5gmK::P64 = P64[R1 + 14];
           R1 = _s5gmG::P64;
           P64[Sp + 8] = _s5gmK::P64;
           P64[Sp + 16] = _s5gmJ::P64;
           if (R1 & 7 != 0) goto u5gwY; else goto c5gwJ;
       u5gwY: // global
           call _c5gwH(R1) args: 0, res: 0, upd: 0;
       c5gwJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gws_info" {
     block_c5gws_info:
         const _c5gws;
         const 130;
         const 30;
 },
 _c5gwH() //  [R1]
         { []
         }
     {offset
       c5gwH: // global
           if (R1 & 7 == 1) goto c5gwP; else goto c5gwT;
       c5gwP: // global
           _s5gmH::P64 = P64[Sp + 8];
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = _s5gmH::P64;
           Sp = Sp + 8;
           call _c5gwp() args: 0, res: 0, upd: 0;
       c5gwT: // global
           R1 = R1 & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gwH_info" {
     block_c5gwH_info:
         const _c5gwH;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.150473379 UTC

[section ""data" . Data.Either.$fSemigroupEither_$csconcat_closure" {
     Data.Either.$fSemigroupEither_$csconcat_closure:
         const Data.Either.$fSemigroupEither_$csconcat_info;
 },
 Data.Either.$fSemigroupEither_$csconcat_entry() //  [R2]
         { []
         }
     {offset
       c5gxy: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5gxz; else goto c5gxA;
       c5gxz: // global
           R2 = R2;
           R1 = Data.Either.$fSemigroupEither_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5gxA: // global
           I64[Sp - 8] = block_c5gxv_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5gxE; else goto c5gxw;
       u5gxE: // global
           call _c5gxv(R1) args: 0, res: 0, upd: 0;
       c5gxw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fSemigroupEither_$csconcat_info" {
     Data.Either.$fSemigroupEither_$csconcat_info:
         const Data.Either.$fSemigroupEither_$csconcat_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5gxv() //  [R1]
         { []
         }
     {offset
       c5gxv: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call Data.Either.$fSemigroupEither3_entry(R3,
                                                     R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gxv_info" {
     block_c5gxv_info:
         const _c5gxv;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.158057878 UTC

[section ""data" . Data.Either.$fSemigroupEither_closure" {
     Data.Either.$fSemigroupEither_closure:
         const GHC.Base.C:Semigroup_con_info;
         const Data.Either.$fSemigroupEither_$c<>_closure+2;
         const Data.Either.$fSemigroupEither_$csconcat_closure+1;
         const Data.Either.$fSemigroupEither_$cstimes_closure+3;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.16355788 UTC

[section ""data" . Data.Either.$fApplicativeEither_$c<*>_closure" {
     Data.Either.$fApplicativeEither_$c<*>_closure:
         const Data.Either.$fApplicativeEither_$c<*>_info;
 },
 Data.Either.$fApplicativeEither_$c<*>_entry() //  [R2, R3]
         { []
         }
     {offset
       c5gy1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5gy2; else goto c5gy3;
       c5gy2: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fApplicativeEither_$c<*>_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gy3: // global
           I64[Sp - 16] = block_c5gxU_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5gya; else goto c5gxV;
       u5gya: // global
           call _c5gxU(R1) args: 0, res: 0, upd: 0;
       c5gxV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fApplicativeEither_$c<*>_info" {
     Data.Either.$fApplicativeEither_$c<*>_info:
         const Data.Either.$fApplicativeEither_$c<*>_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5gxU() //  [R1]
         { []
         }
     {offset
       c5gxU: // global
           if (R1 & 7 == 1) goto c5gxY; else goto c5gxZ;
       c5gxY: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5gxZ: // global
           R3 = P64[Sp + 8];
           R2 = P64[R1 + 6];
           Sp = Sp + 16;
           call Data.Either.$fApplicativeEither_$cfmap_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gxU_info" {
     block_c5gxU_info:
         const _c5gxU;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.175642584 UTC

[section ""data" . Data.Either.$fApplicativeEither_$cliftA2_closure" {
     Data.Either.$fApplicativeEither_$cliftA2_closure:
         const Data.Either.$fApplicativeEither_$cliftA2_info;
 },
 ds_s5gmZ_entry() //  [R1]
         { []
         }
     {offset
       c5gyE: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5gyF; else goto c5gyG;
       c5gyF: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gyG: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c5gyx_info;
           _s5gmX::P64 = P64[R1 + 16];
           R1 = P64[R1 + 24];
           P64[Sp - 24] = _s5gmX::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5gyR; else goto c5gyy;
       u5gyR: // global
           call _c5gyx(R1) args: 0, res: 0, upd: 0;
       c5gyy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . ds_s5gmZ_info" {
     ds_s5gmZ_info:
         const ds_s5gmZ_entry;
         const 2;
         const 18;
 },
 _c5gyx() //  [R1]
         { []
         }
     {offset
       c5gyx: // global
           if (R1 & 7 == 1) goto c5gyB; else goto c5gyC;
       c5gyB: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
       c5gyC: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5gyQ; else goto c5gyP;
       c5gyQ: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c5gyP: // global
           _s5gn2::P64 = P64[R1 + 6];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _s5gn2::P64;
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5gyx_info" {
     block_c5gyx_info:
         const _c5gyx;
         const 1;
         const 30;
 },
 sat_s5gn8_entry() //  [R1, R2]
         { []
         }
     {offset
       c5gz4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5gz5; else goto c5gz6;
       c5gz5: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5gz6: // global
           I64[Sp - 16] = block_c5gyX_info;
           R1 = P64[R1 + 7];
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5gzd; else goto c5gyY;
       u5gzd: // global
           call _c5gyX(R1) args: 0, res: 0, upd: 0;
       c5gyY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5gn8_info" {
     sat_s5gn8_info:
         const sat_s5gn8_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c5gyX() //  [R1]
         { []
         }
     {offset
       c5gyX: // global
           if (R1 & 7 == 1) goto c5gz1; else goto c5gz2;
       c5gz1: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5gz2: // global
           R3 = P64[Sp + 8];
           R2 = P64[R1 + 6];
           Sp = Sp + 16;
           call Data.Either.$fApplicativeEither_$cfmap_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gyX_info" {
     block_c5gyX_info:
         const _c5gyX;
         const 1;
         const 30;
 },
 Data.Either.$fApplicativeEither_$cliftA2_entry() //  [R2, R3]
         { []
         }
     {offset
       c5gze: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5gzi; else goto c5gzh;
       c5gzi: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fApplicativeEither_$cliftA2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gzh: // global
           I64[Hp - 40] = ds_s5gmZ_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = R3;
           I64[Hp - 8] = sat_s5gn8_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fApplicativeEither_$cliftA2_info" {
     Data.Either.$fApplicativeEither_$cliftA2_info:
         const Data.Either.$fApplicativeEither_$cliftA2_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.193605137 UTC

[section ""data" . Data.Either.$fApplicativeEither_$c*>_closure" {
     Data.Either.$fApplicativeEither_$c*>_closure:
         const Data.Either.$fApplicativeEither_$c*>_info;
 },
 Data.Either.$fApplicativeEither_$c*>_entry() //  [R2, R3]
         { []
         }
     {offset
       c5gA8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5gA9; else goto c5gAa;
       c5gA9: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fApplicativeEither_$c*>_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gAa: // global
           I64[Sp - 16] = block_c5gA1_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5gAh; else goto c5gA2;
       u5gAh: // global
           call _c5gA1(R1) args: 0, res: 0, upd: 0;
       c5gA2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fApplicativeEither_$c*>_info" {
     Data.Either.$fApplicativeEither_$c*>_info:
         const Data.Either.$fApplicativeEither_$c*>_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5gA1() //  [R1]
         { []
         }
     {offset
       c5gA1: // global
           if (R1 & 7 == 1) goto c5gA5; else goto c5gA6;
       c5gA5: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5gA6: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gA1_info" {
     block_c5gA1_info:
         const _c5gA1;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.203740549 UTC

[section ""data" . Data.Either.$fApplicativeEither_$c<*_closure" {
     Data.Either.$fApplicativeEither_$c<*_closure:
         const Data.Either.$fApplicativeEither_$c<*_info;
 },
 Data.Either.$fApplicativeEither_$c<*_entry() //  [R2, R3]
         { []
         }
     {offset
       c5gAJ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5gAK; else goto c5gAL;
       c5gAK: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fApplicativeEither_$c<*_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gAL: // global
           I64[Sp - 16] = block_c5gAC_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5gB9; else goto c5gAD;
       u5gB9: // global
           call _c5gAC(R1) args: 0, res: 0, upd: 0;
       c5gAD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fApplicativeEither_$c<*_info" {
     Data.Either.$fApplicativeEither_$c<*_info:
         const Data.Either.$fApplicativeEither_$c<*_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5gAC() //  [R1]
         { []
         }
     {offset
       c5gAC: // global
           if (R1 & 7 == 1) goto u5gB5; else goto c5gAH;
       u5gB5: // global
           P64[Sp + 8] = R1;
           Sp = Sp + 8;
           call _c5gB3() args: 0, res: 0, upd: 0;
       c5gAH: // global
           I64[Sp] = block_c5gAR_info;
           _s5gng::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5gng::P64;
           if (R1 & 7 != 0) goto u5gB7; else goto c5gAT;
       u5gB7: // global
           call _c5gAR(R1) args: 0, res: 0, upd: 0;
       c5gAT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gAC_info" {
     block_c5gAC_info:
         const _c5gAC;
         const 1;
         const 30;
 },
 _c5gAR() //  [R1]
         { []
         }
     {offset
       c5gAR: // global
           if (R1 & 7 == 1) goto c5gAZ; else goto u5gB6;
       c5gAZ: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       u5gB6: // global
           Sp = Sp + 8;
           call _c5gB3() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5gAR_info" {
     block_c5gAR_info:
         const _c5gAR;
         const 1;
         const 30;
 },
 _c5gB3() //  []
         { []
         }
     {offset
       c5gB3: // global
           R1 = P64[Sp] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.215085592 UTC

[section ""data" . Data.Either.$fApplicativeEither_closure" {
     Data.Either.$fApplicativeEither_closure:
         const GHC.Base.C:Applicative_con_info;
         const Data.Either.$fFunctorEither_closure+1;
         const Data.Either.Right_closure+1;
         const Data.Either.$fApplicativeEither_$c<*>_closure+2;
         const Data.Either.$fApplicativeEither_$cliftA2_closure+2;
         const Data.Either.$fApplicativeEither_$c*>_closure+2;
         const Data.Either.$fApplicativeEither_$c<*_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.219382655 UTC

[section ""data" . Data.Either.$fMonadEither_$c>>=_closure" {
     Data.Either.$fMonadEither_$c>>=_closure:
         const Data.Either.$fMonadEither_$c>>=_info;
 },
 Data.Either.$fMonadEither_$c>>=_entry() //  [R2, R3]
         { []
         }
     {offset
       c5gBM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5gBN; else goto c5gBO;
       c5gBN: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fMonadEither_$c>>=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gBO: // global
           I64[Sp - 16] = block_c5gBF_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5gBV; else goto c5gBG;
       u5gBV: // global
           call _c5gBF(R1) args: 0, res: 0, upd: 0;
       c5gBG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fMonadEither_$c>>=_info" {
     Data.Either.$fMonadEither_$c>>=_info:
         const Data.Either.$fMonadEither_$c>>=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5gBF() //  [R1]
         { []
         }
     {offset
       c5gBF: // global
           if (R1 & 7 == 1) goto c5gBJ; else goto c5gBK;
       c5gBJ: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5gBK: // global
           R2 = P64[R1 + 6];
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gBF_info" {
     block_c5gBF_info:
         const _c5gBF;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.228620764 UTC

[section ""data" . Data.Either.$fMonadEither_$c>>_closure" {
     Data.Either.$fMonadEither_$c>>_closure:
         const Data.Either.$fMonadEither_$c>>_info;
 },
 Data.Either.$fMonadEither_$c>>_entry() //  [R2, R3]
         { []
         }
     {offset
       c5gCe: // global
           R3 = R3;
           R2 = R2;
           call Data.Either.$fApplicativeEither_$c*>_entry(R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fMonadEither_$c>>_info" {
     Data.Either.$fMonadEither_$c>>_info:
         const Data.Either.$fMonadEither_$c>>_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.233631849 UTC

[section ""data" . lvl1_r5exc_closure" {
     lvl1_r5exc_closure:
         const lvl1_r5exc_info;
         const 0;
 },
 lvl1_r5exc_entry() //  [R2]
         { []
         }
     {offset
       c5gCp: // global
           R2 = R2;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . lvl1_r5exc_info" {
     lvl1_r5exc_info:
         const lvl1_r5exc_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const S5gu0_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.238282019 UTC

[section ""data" . Data.Either.$fMonadEither_closure" {
     Data.Either.$fMonadEither_closure:
         const GHC.Base.C:Monad_con_info;
         const Data.Either.$fApplicativeEither_closure+1;
         const Data.Either.$fMonadEither_$c>>=_closure+2;
         const Data.Either.$fMonadEither_$c>>_closure+2;
         const Data.Either.Right_closure+1;
         const lvl1_r5exc_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.240867988 UTC

[section ""cstring" . Data.Either.$fShowEither5_bytes" {
     Data.Either.$fShowEither5_bytes:
         I8[] [76,101,102,116,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.244401619 UTC

[section ""data" . Data.Either.$fShowEither4_closure" {
     Data.Either.$fShowEither4_closure:
         const Data.Either.$fShowEither4_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Either.$fShowEither4_entry() //  [R1]
         { []
         }
     {offset
       c5gCE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5gCF; else goto c5gCG;
       c5gCF: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gCG: // global
           (_c5gCB::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5gCB::I64 == 0) goto c5gCD; else goto c5gCC;
       c5gCD: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5gCC: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5gCB::I64;
           R2 = Data.Either.$fShowEither5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Either.$fShowEither4_info" {
     Data.Either.$fShowEither4_info:
         const Data.Either.$fShowEither4_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.249752603 UTC

[section ""data" . Data.Either.$fReadEither4_closure" {
     Data.Either.$fReadEither4_closure:
         const GHC.Types.I#_con_info;
         const 11;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.252142081 UTC

[section ""cstring" . Data.Either.$fShowEither3_bytes" {
     Data.Either.$fShowEither3_bytes:
         I8[] [82,105,103,104,116,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.256666899 UTC

[section ""data" . Data.Either.$fShowEither2_closure" {
     Data.Either.$fShowEither2_closure:
         const Data.Either.$fShowEither2_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Either.$fShowEither2_entry() //  [R1]
         { []
         }
     {offset
       c5gCX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5gCY; else goto c5gCZ;
       c5gCY: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gCZ: // global
           (_c5gCU::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5gCU::I64 == 0) goto c5gCW; else goto c5gCV;
       c5gCW: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5gCV: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5gCU::I64;
           R2 = Data.Either.$fShowEither3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Either.$fShowEither2_info" {
     Data.Either.$fShowEither2_info:
         const Data.Either.$fShowEither2_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.274606003 UTC

[section ""data" . Data.Either.$w$cshowsPrec_closure" {
     Data.Either.$w$cshowsPrec_closure:
         const Data.Either.$w$cshowsPrec_info;
         const 0;
 },
 Data.Either.$w$cshowsPrec_slow() //  [R1]
         { []
         }
     {offset
       c5gD9: // global
           R5 = P64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call Data.Either.$w$cshowsPrec_entry(R5,
                                                R4,
                                                R3,
                                                R2,
                                                R1) args: 8, res: 0, upd: 8;
     }
 },
 g_s5gny_entry() //  [R1]
         { []
         }
     {offset
       c5gDm: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5gDn; else goto c5gDo;
       c5gDn: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gDo: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Data.Either.$fReadEither4_closure+1;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 40;
           call GHC.Show.showsPrec_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . g_s5gny_info" {
     g_s5gny_info:
         const g_s5gny_entry;
         const 2;
         const 18;
 },
 sat_s5gnB_entry() //  [R1]
         { []
         }
     {offset
       c5gDB: // global
           R2 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5gnB_info" {
     sat_s5gnB_info:
         const sat_s5gnB_entry;
         const 2;
         const 18;
 },
 sat_s5gnC_entry() //  [R1, R2]
         { []
         }
     {offset
       c5gDE: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5gDI; else goto c5gDH;
       c5gDI: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5gDH: // global
           _s5gny::P64 = P64[R1 + 7];
           I64[Hp - 24] = sat_s5gnB_info;
           P64[Hp - 8] = _s5gny::P64;
           P64[Hp] = R2;
           R3 = Hp - 24;
           R2 = Data.Either.$fShowEither4_closure;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5gnC_info" {
     sat_s5gnC_info:
         const sat_s5gnC_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5gu0_srt+32;
 },
 sat_s5gnF_entry() //  [R1]
         { []
         }
     {offset
       c5gDY: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5gE2; else goto c5gE1;
       c5gE2: // global
           HpAlloc = 24;
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gE1: // global
           _s5gny::P64 = P64[R1 + 16];
           _s5gnD::P64 = P64[R1 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)2_closure;
           P64[Hp] = _s5gnD::P64;
           R2 = Hp - 14;
           R1 = _s5gny::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5gnF_info" {
     sat_s5gnF_info:
         const sat_s5gnF_entry;
         const 2;
         const 18;
 },
 sat_s5gnG_entry() //  [R1]
         { []
         }
     {offset
       c5gE3: // global
           _s5gnG::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5gE4; else goto c5gE5;
       c5gE5: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5gE7; else goto c5gE6;
       c5gE7: // global
           HpAlloc = 32;
           goto c5gE4;
       c5gE4: // global
           R1 = _s5gnG::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gE6: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5gnG::P64;
           _s5gny::P64 = P64[_s5gnG::P64 + 16];
           _s5gnD::P64 = P64[_s5gnG::P64 + 24];
           I64[Hp - 24] = sat_s5gnF_info;
           P64[Hp - 8] = _s5gny::P64;
           P64[Hp] = _s5gnD::P64;
           R3 = Hp - 24;
           R2 = Data.Either.$fShowEither4_closure;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5gnG_info" {
     sat_s5gnG_info:
         const sat_s5gnG_entry;
         const 2;
         const 4294967314;
         const S5gu0_srt+32;
 },
 sat_s5gnH_entry() //  [R1, R2]
         { []
         }
     {offset
       c5gE9: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5gEd; else goto c5gEc;
       c5gEd: // global
           HpAlloc = 56;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5gEc: // global
           _s5gny::P64 = P64[R1 + 7];
           I64[Hp - 48] = sat_s5gnG_info;
           P64[Hp - 32] = _s5gny::P64;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)4_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5gnH_info" {
     sat_s5gnH_info:
         const sat_s5gnH_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5gu0_srt+32;
 },
 g_s5gnJ_entry() //  [R1]
         { []
         }
     {offset
       c5gEk: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5gEl; else goto c5gEm;
       c5gEl: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gEm: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Data.Either.$fReadEither4_closure+1;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 40;
           call GHC.Show.showsPrec_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . g_s5gnJ_info" {
     g_s5gnJ_info:
         const g_s5gnJ_entry;
         const 2;
         const 18;
 },
 sat_s5gnM_entry() //  [R1]
         { []
         }
     {offset
       c5gEz: // global
           R2 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5gnM_info" {
     sat_s5gnM_info:
         const sat_s5gnM_entry;
         const 2;
         const 18;
 },
 sat_s5gnN_entry() //  [R1, R2]
         { []
         }
     {offset
       c5gEC: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5gEG; else goto c5gEF;
       c5gEG: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5gEF: // global
           _s5gnJ::P64 = P64[R1 + 7];
           I64[Hp - 24] = sat_s5gnM_info;
           P64[Hp - 8] = _s5gnJ::P64;
           P64[Hp] = R2;
           R3 = Hp - 24;
           R2 = Data.Either.$fShowEither2_closure;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5gnN_info" {
     sat_s5gnN_info:
         const sat_s5gnN_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5gu0_srt+40;
 },
 sat_s5gnQ_entry() //  [R1]
         { []
         }
     {offset
       c5gEW: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5gF0; else goto c5gEZ;
       c5gF0: // global
           HpAlloc = 24;
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gEZ: // global
           _s5gnJ::P64 = P64[R1 + 16];
           _s5gnO::P64 = P64[R1 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)2_closure;
           P64[Hp] = _s5gnO::P64;
           R2 = Hp - 14;
           R1 = _s5gnJ::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5gnQ_info" {
     sat_s5gnQ_info:
         const sat_s5gnQ_entry;
         const 2;
         const 18;
 },
 sat_s5gnR_entry() //  [R1]
         { []
         }
     {offset
       c5gF1: // global
           _s5gnR::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5gF2; else goto c5gF3;
       c5gF3: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5gF5; else goto c5gF4;
       c5gF5: // global
           HpAlloc = 32;
           goto c5gF2;
       c5gF2: // global
           R1 = _s5gnR::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gF4: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5gnR::P64;
           _s5gnJ::P64 = P64[_s5gnR::P64 + 16];
           _s5gnO::P64 = P64[_s5gnR::P64 + 24];
           I64[Hp - 24] = sat_s5gnQ_info;
           P64[Hp - 8] = _s5gnJ::P64;
           P64[Hp] = _s5gnO::P64;
           R3 = Hp - 24;
           R2 = Data.Either.$fShowEither2_closure;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5gnR_info" {
     sat_s5gnR_info:
         const sat_s5gnR_entry;
         const 2;
         const 4294967314;
         const S5gu0_srt+40;
 },
 sat_s5gnS_entry() //  [R1, R2]
         { []
         }
     {offset
       c5gF7: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5gFb; else goto c5gFa;
       c5gFb: // global
           HpAlloc = 56;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5gFa: // global
           _s5gnJ::P64 = P64[R1 + 7];
           I64[Hp - 48] = sat_s5gnR_info;
           P64[Hp - 32] = _s5gnJ::P64;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)4_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5gnS_info" {
     sat_s5gnS_info:
         const sat_s5gnS_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5gu0_srt+40;
 },
 Data.Either.$w$cshowsPrec_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5gFg: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5gFh; else goto c5gFi;
       c5gFh: // global
           R1 = Data.Either.$w$cshowsPrec_closure;
           P64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           I64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           call (stg_gc_fun)(R1) args: 40, res: 0, upd: 8;
       c5gFi: // global
           I64[Sp - 32] = block_c5gDd_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           I64[Sp - 8] = R4;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5gFv; else goto c5gDe;
       u5gFv: // global
           call _c5gDd(R1) args: 0, res: 0, upd: 0;
       c5gDe: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$w$cshowsPrec_info" {
     Data.Either.$w$cshowsPrec_info:
         const Data.Either.$w$cshowsPrec_entry;
         const 0;
         const 30064771086;
         const 17179869184;
         const S5gu0_srt+32;
         const 260;
         const Data.Either.$w$cshowsPrec_slow;
 },
 _c5gDd() //  [R1]
         { []
         }
     {offset
       c5gDd: // global
           _s5gnu::I64 = I64[Sp + 24];
           if (R1 & 7 == 1) goto c5gFd; else goto c5gFe;
       c5gFd: // global
           Hp = Hp + 48;
           _s5gnw::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5gFr; else goto c5gFk;
       c5gFk: // global
           _s5gnx::P64 = P64[_s5gnw::P64 + 7];
           I64[Hp - 40] = g_s5gny_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _s5gnx::P64;
           _c5gDi::P64 = Hp - 40;
           if (%MO_S_Lt_W64(_s5gnu::I64, 11)) goto c5gFn; else goto c5gFo;
       c5gFn: // global
           I64[Hp - 8] = sat_s5gnC_info;
           P64[Hp] = _c5gDi::P64;
           R1 = Hp - 7;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5gFo: // global
           I64[Hp - 8] = sat_s5gnH_info;
           P64[Hp] = _c5gDi::P64;
           R1 = Hp - 7;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5gFe: // global
           Hp = Hp + 48;
           _s5gnw::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5gFr; else goto c5gFq;
       c5gFr: // global
           HpAlloc = 48;
           R1 = _s5gnw::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5gFq: // global
           _s5gnI::P64 = P64[_s5gnw::P64 + 6];
           I64[Hp - 40] = g_s5gnJ_info;
           P64[Hp - 24] = P64[Sp + 16];
           P64[Hp - 16] = _s5gnI::P64;
           _c5gEg::P64 = Hp - 40;
           if (%MO_S_Lt_W64(_s5gnu::I64, 11)) goto c5gFt; else goto c5gFu;
       c5gFt: // global
           I64[Hp - 8] = sat_s5gnN_info;
           P64[Hp] = _c5gEg::P64;
           R1 = Hp - 7;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5gFu: // global
           I64[Hp - 8] = sat_s5gnS_info;
           P64[Hp] = _c5gEg::P64;
           R1 = Hp - 7;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gDd_info" {
     block_c5gDd_info:
         const _c5gDd;
         const 259;
         const 12884901918;
         const S5gu0_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.319869946 UTC

[section ""data" . Data.Either.$fShowEither_$cshowsPrec_closure" {
     Data.Either.$fShowEither_$cshowsPrec_closure:
         const Data.Either.$fShowEither_$cshowsPrec_info;
         const 0;
 },
 Data.Either.$fShowEither_$cshowsPrec_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5gH9: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5gHa; else goto c5gHb;
       c5gHa: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fShowEither_$cshowsPrec_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gHb: // global
           I64[Sp - 32] = block_c5gH6_info;
           R1 = R4;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5gHf; else goto c5gH7;
       u5gHf: // global
           call _c5gH6(R1) args: 0, res: 0, upd: 0;
       c5gH7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fShowEither_$cshowsPrec_info" {
     Data.Either.$fShowEither_$cshowsPrec_info:
         const Data.Either.$fShowEither_$cshowsPrec_entry;
         const 0;
         const 12884901902;
         const 17179869208;
         const S5gu0_srt+48;
 },
 _c5gH6() //  [R1]
         { []
         }
     {offset
       c5gH6: // global
           R5 = P64[Sp + 24];
           R4 = I64[R1 + 7];
           R3 = P64[Sp + 16];
           R2 = P64[Sp + 8];
           Sp = Sp + 32;
           call Data.Either.$w$cshowsPrec_entry(R5,
                                                R4,
                                                R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gH6_info" {
     block_c5gH6_info:
         const _c5gH6;
         const 3;
         const 4294967326;
         const S5gu0_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.329827952 UTC

[section ""data" . Data.Either.$fShowEither_$cshow_closure" {
     Data.Either.$fShowEither_$cshow_closure:
         const Data.Either.$fShowEither_$cshow_info;
         const 0;
 },
 sat_s5go4_entry() //  [R1]
         { []
         }
     {offset
       c5gHD: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5gHE; else goto c5gHF;
       c5gHE: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gHF: // global
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_ppp_info;
           P64[Sp - 24] = Data.Either.$fReadEither4_closure+1;
           P64[Sp - 16] = P64[R1 + 24];
           P64[Sp - 8] = GHC.Types.[]_closure+1;
           Sp = Sp - 32;
           call GHC.Show.showsPrec_entry(R2) args: 40, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5go4_info" {
     sat_s5go4_info:
         const sat_s5go4_entry;
         const 2;
         const 18;
 },
 sat_s5go6_entry() //  [R1]
         { []
         }
     {offset
       c5gHM: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5gHN; else goto c5gHO;
       c5gHN: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gHO: // global
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_ppp_info;
           P64[Sp - 24] = Data.Either.$fReadEither4_closure+1;
           P64[Sp - 16] = P64[R1 + 24];
           P64[Sp - 8] = GHC.Types.[]_closure+1;
           Sp = Sp - 32;
           call GHC.Show.showsPrec_entry(R2) args: 40, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5go6_info" {
     sat_s5go6_info:
         const sat_s5go6_entry;
         const 2;
         const 18;
 },
 Data.Either.$fShowEither_$cshow_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5gHT: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5gHU; else goto c5gHV;
       c5gHU: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fShowEither_$cshow_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gHV: // global
           I64[Sp - 24] = block_c5gHu_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5gI2; else goto c5gHv;
       u5gI2: // global
           call _c5gHu(R1) args: 0, res: 0, upd: 0;
       c5gHv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fShowEither_$cshow_info" {
     Data.Either.$fShowEither_$cshow_info:
         const Data.Either.$fShowEither_$cshow_entry;
         const 0;
         const 81604378638;
         const 12884901911;
         const S5gu0_srt+32;
 },
 _c5gHu() //  [R1]
         { []
         }
     {offset
       c5gHu: // global
           if (R1 & 7 == 1) goto c5gHQ; else goto c5gHR;
       c5gHQ: // global
           Hp = Hp + 32;
           _s5go2::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5gI1; else goto c5gHX;
       c5gHX: // global
           _s5go3::P64 = P64[_s5go2::P64 + 7];
           I64[Hp - 24] = sat_s5go4_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = _s5go3::P64;
           R3 = Hp - 24;
           R2 = Data.Either.$fShowEither4_closure;
           Sp = Sp + 24;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c5gHR: // global
           Hp = Hp + 32;
           _s5go2::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5gI1; else goto c5gI0;
       c5gI1: // global
           HpAlloc = 32;
           R1 = _s5go2::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5gI0: // global
           _s5go5::P64 = P64[_s5go2::P64 + 6];
           I64[Hp - 24] = sat_s5go6_info;
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = _s5go5::P64;
           R3 = Hp - 24;
           R2 = Data.Either.$fShowEither2_closure;
           Sp = Sp + 24;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gHu_info" {
     block_c5gHu_info:
         const _c5gHu;
         const 2;
         const 12884901918;
         const S5gu0_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.340005725 UTC

[section ""data" . Data.Either.$fShowEither1_closure" {
     Data.Either.$fShowEither1_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.343400375 UTC

[section ""data" . Data.Either.$fShowEither_$cshowList_closure" {
     Data.Either.$fShowEither_$cshowList_closure:
         const Data.Either.$fShowEither_$cshowList_info;
         const 0;
 },
 sat_s5goc_entry() //  [R1, R2]
         { []
         }
     {offset
       c5gIL: // global
           R5 = R2;
           R4 = 0;
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           call Data.Either.$w$cshowsPrec_entry(R5,
                                                R4,
                                                R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5goc_info" {
     sat_s5goc_info:
         const sat_s5goc_entry;
         const 2;
         const 4294967307;
         const 4294967301;
         const S5gu0_srt+48;
 },
 Data.Either.$fShowEither_$cshowList_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5gIO: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5gIS; else goto c5gIR;
       c5gIS: // global
           HpAlloc = 24;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fShowEither_$cshowList_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gIR: // global
           I64[Hp - 16] = sat_s5goc_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           _s5go9::P64 = R4;
           R4 = R5;
           R3 = _s5go9::P64;
           R2 = Hp - 15;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fShowEither_$cshowList_info" {
     Data.Either.$fShowEither_$cshowList_info:
         const Data.Either.$fShowEither_$cshowList_entry;
         const 0;
         const 38654705678;
         const 17179869208;
         const S5gu0_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.350819142 UTC

[section ""data" . Data.Either.$fShowEither_closure" {
     Data.Either.$fShowEither_closure:
         const Data.Either.$fShowEither_info;
         const 0;
 },
 sat_s5goh_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5gJa: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fShowEither_$cshowList_entry(R5,
                                                          R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5goh_info" {
     sat_s5goh_info:
         const sat_s5goh_entry;
         const 2;
         const 4294967307;
         const 8589934607;
         const S5gu0_srt+72;
 },
 sat_s5gog_entry() //  [R1, R2]
         { []
         }
     {offset
       c5gJi: // global
           R4 = R2;
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           call Data.Either.$fShowEither_$cshow_entry(R4,
                                                      R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5gog_info" {
     sat_s5gog_info:
         const sat_s5gog_entry;
         const 2;
         const 4294967307;
         const 4294967301;
         const S5gu0_srt+64;
 },
 sat_s5gof_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5gJq: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fShowEither_$cshowsPrec_entry(R5,
                                                           R4,
                                                           R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5gof_info" {
     sat_s5gof_info:
         const sat_s5gof_entry;
         const 2;
         const 4294967307;
         const 8589934607;
         const S5gu0_srt+56;
 },
 Data.Either.$fShowEither_entry() //  [R2, R3]
         { []
         }
     {offset
       c5gJu: // global
           Hp = Hp + 104;
           if (Hp > HpLim) (likely: False) goto c5gJy; else goto c5gJx;
       c5gJy: // global
           HpAlloc = 104;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fShowEither_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gJx: // global
           I64[Hp - 96] = sat_s5goh_info;
           P64[Hp - 88] = R2;
           P64[Hp - 80] = R3;
           I64[Hp - 72] = sat_s5gog_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = sat_s5gof_info;
           P64[Hp - 40] = R2;
           P64[Hp - 32] = R3;
           I64[Hp - 24] = GHC.Show.C:Show_con_info;
           P64[Hp - 16] = Hp - 46;
           P64[Hp - 8] = Hp - 71;
           P64[Hp] = Hp - 94;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fShowEither_info" {
     Data.Either.$fShowEither_info:
         const Data.Either.$fShowEither_entry;
         const 0;
         const 64424509454;
         const 8589934607;
         const S5gu0_srt+56;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.359039906 UTC

[section ""cstring" . Data.Either.$fReadEither3_bytes" {
     Data.Either.$fReadEither3_bytes:
         I8[] [76,101,102,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.361571479 UTC

[section ""data" . Data.Either.$fReadEither2_closure" {
     Data.Either.$fReadEither2_closure:
         const Data.Either.$fReadEither2_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Either.$fReadEither2_entry() //  [R1]
         { []
         }
     {offset
       c5gK1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5gK2; else goto c5gK3;
       c5gK2: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gK3: // global
           (_c5gJY::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5gJY::I64 == 0) goto c5gK0; else goto c5gJZ;
       c5gK0: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5gJZ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5gJY::I64;
           R2 = Data.Either.$fReadEither3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Either.$fReadEither2_info" {
     Data.Either.$fReadEither2_info:
         const Data.Either.$fReadEither2_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.365171328 UTC

[section ""data" . Data.Either.$fReadEither_lexeme_closure" {
     Data.Either.$fReadEither_lexeme_closure:
         const Text.Read.Lex.Ident_con_info;
         const Data.Either.$fReadEither2_closure;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.367428298 UTC

[section ""cstring" . Data.Either.$fReadEither6_bytes" {
     Data.Either.$fReadEither6_bytes:
         I8[] [82,105,103,104,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.370011739 UTC

[section ""data" . Data.Either.$fReadEither5_closure" {
     Data.Either.$fReadEither5_closure:
         const Data.Either.$fReadEither5_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Either.$fReadEither5_entry() //  [R1]
         { []
         }
     {offset
       c5gKk: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5gKl; else goto c5gKm;
       c5gKl: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gKm: // global
           (_c5gKh::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5gKh::I64 == 0) goto c5gKj; else goto c5gKi;
       c5gKj: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5gKi: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5gKh::I64;
           R2 = Data.Either.$fReadEither6_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Either.$fReadEither5_info" {
     Data.Either.$fReadEither5_info:
         const Data.Either.$fReadEither5_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.37384792 UTC

[section ""data" . Data.Either.$fReadEither_lexeme1_closure" {
     Data.Either.$fReadEither_lexeme1_closure:
         const Text.Read.Lex.Ident_con_info;
         const Data.Either.$fReadEither5_closure;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.382215154 UTC

[section ""data" . Data.Either.$fReadEither1_closure" {
     Data.Either.$fReadEither1_closure:
         const Data.Either.$fReadEither1_info;
         const 0;
 },
 sat_s5gov_entry() //  [R1, R2]
         { []
         }
     {offset
       c5gL3: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5gL7; else goto c5gL6;
       c5gL7: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5gL6: // global
           _s5gon::P64 = P64[R1 + 7];
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = R2;
           R2 = Hp - 6;
           R1 = _s5gon::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5gov_info" {
     sat_s5gov_info:
         const sat_s5gov_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_s5gow_entry() //  [R1, R2]
         { []
         }
     {offset
       c5gL8: // global
           _s5gos::P64 = R2;
           _s5gow::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c5gL9; else goto c5gLa;
       c5gLa: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5gLc; else goto c5gLb;
       c5gLc: // global
           HpAlloc = 16;
           goto c5gL9;
       c5gL9: // global
           R2 = _s5gos::P64;
           R1 = _s5gow::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5gLb: // global
           _s5goj::P64 = P64[_s5gow::P64 + 7];
           _s5gon::P64 = P64[_s5gow::P64 + 15];
           I64[Hp - 8] = sat_s5gov_info;
           P64[Hp] = _s5gon::P64;
           R2 = _s5goj::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Data.Either.$fReadEither4_closure+1;
           P64[Sp - 8] = Hp - 7;
           Sp = Sp - 24;
           call GHC.Read.readPrec_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5gow_info" {
     sat_s5gow_info:
         const sat_s5gow_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 karg_s5goq_entry() //  [R1]
         { []
         }
     {offset
       c5gLg: // global
           _s5goq::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c5gLh; else goto c5gLi;
       c5gLi: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5gLk; else goto c5gLj;
       c5gLk: // global
           HpAlloc = 24;
           goto c5gLh;
       c5gLh: // global
           R1 = _s5goq::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gLj: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5goq::P64;
           if (%MO_S_Gt_W64(I64[_s5goq::P64 + 32],
                            10)) goto c5gLe; else goto c5gLf;
       c5gLe: // global
           Hp = Hp - 24;
           R1 = Text.ParserCombinators.ReadP.Fail_closure+3;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c5gLf: // global
           _s5goj::P64 = P64[_s5goq::P64 + 16];
           _s5gon::P64 = P64[_s5goq::P64 + 24];
           I64[Hp - 16] = sat_s5gow_info;
           P64[Hp - 8] = _s5goj::P64;
           P64[Hp] = _s5gon::P64;
           I64[Sp - 24] = block_c5gLl_info;
           R3 = Hp - 15;
           R2 = Data.Either.$fReadEither_lexeme1_closure+4;
           Sp = Sp - 24;
           call Text.Read.Lex.$wexpect_entry(R3, R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . karg_s5goq_info" {
     karg_s5goq_info:
         const karg_s5goq_entry;
         const 4294967298;
         const 12884901903;
         const S5gu0_srt+88;
 },
 _c5gLl() //  [R1]
         { []
         }
     {offset
       c5gLl: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5gLq; else goto c5gLp;
       c5gLq: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c5gLp: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5gLl_info" {
     block_c5gLl_info:
         const _c5gLl;
         const 0;
         const 30;
 },
 sat_s5goD_entry() //  [R1, R2]
         { []
         }
     {offset
       c5gLG: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5gLK; else goto c5gLJ;
       c5gLK: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5gLJ: // global
           _s5gon::P64 = P64[R1 + 7];
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = R2;
           R2 = Hp - 7;
           R1 = _s5gon::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5goD_info" {
     sat_s5goD_info:
         const sat_s5goD_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_s5goE_entry() //  [R1, R2]
         { []
         }
     {offset
       c5gLL: // global
           _s5goA::P64 = R2;
           _s5goE::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c5gLM; else goto c5gLN;
       c5gLN: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5gLP; else goto c5gLO;
       c5gLP: // global
           HpAlloc = 16;
           goto c5gLM;
       c5gLM: // global
           R2 = _s5goA::P64;
           R1 = _s5goE::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5gLO: // global
           _s5goi::P64 = P64[_s5goE::P64 + 7];
           _s5gon::P64 = P64[_s5goE::P64 + 15];
           I64[Hp - 8] = sat_s5goD_info;
           P64[Hp] = _s5gon::P64;
           R2 = _s5goi::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Data.Either.$fReadEither4_closure+1;
           P64[Sp - 8] = Hp - 7;
           Sp = Sp - 24;
           call GHC.Read.readPrec_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5goE_info" {
     sat_s5goE_info:
         const sat_s5goE_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_s5goI_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5gLQ: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5gLR; else goto c5gLS;
       c5gLR: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gLS: // global
           I64[Sp - 32] = block_c5gKF_info;
           _s5goi::P64 = P64[R1 + 6];
           _s5goj::P64 = P64[R1 + 14];
           R1 = R2;
           P64[Sp - 24] = _s5goi::P64;
           P64[Sp - 16] = _s5goj::P64;
           P64[Sp - 8] = R3;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5gM5; else goto c5gKG;
       u5gM5: // global
           call _c5gKF(R1) args: 0, res: 0, upd: 0;
       c5gKG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5goI_info" {
     sat_s5goI_info:
         const sat_s5goI_entry;
         const 2;
         const 64424509451;
         const 8589934607;
         const S5gu0_srt+88;
 },
 _c5gKF() //  [R1]
         { []
         }
     {offset
       c5gKF: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c5gLV; else goto c5gLU;
       c5gLV: // global
           HpAlloc = 64;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5gLU: // global
           _s5gop::I64 = I64[R1 + 7];
           I64[Hp - 56] = karg_s5goq_info;
           P64[Hp - 40] = P64[Sp + 16];
           _s5gon::P64 = P64[Sp + 24];
           P64[Hp - 32] = _s5gon::P64;
           I64[Hp - 24] = _s5gop::I64;
           _c5gKK::P64 = Hp - 56;
           if (%MO_S_Gt_W64(_s5gop::I64, 10)) goto c5gLX; else goto c5gM1;
       c5gLX: // global
           Hp = Hp - 24;
           R3 = _c5gKK::P64;
           R2 = Text.ParserCombinators.ReadP.Fail_closure+3;
           Sp = Sp + 32;
           call Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_entry(R3,
                                                                        R2) args: 8, res: 0, upd: 8;
       c5gM1: // global
           I64[Hp - 16] = sat_s5goE_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = _s5gon::P64;
           I64[Sp + 16] = block_c5gLY_info;
           R3 = Hp - 15;
           R2 = Data.Either.$fReadEither_lexeme_closure+4;
           P64[Sp + 24] = _c5gKK::P64;
           Sp = Sp + 16;
           call Text.Read.Lex.$wexpect_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gKF_info" {
     block_c5gKF_info:
         const _c5gKF;
         const 3;
         const 64424509470;
         const S5gu0_srt+88;
 },
 _c5gLY() //  [R1]
         { []
         }
     {offset
       c5gLY: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5gM4; else goto c5gM3;
       c5gM4: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5gM3: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R3 = P64[Sp + 8];
           R2 = Hp - 6;
           Sp = Sp + 16;
           call Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_entry(R3,
                                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gLY_info" {
     block_c5gLY_info:
         const _c5gLY;
         const 1;
         const 4294967326;
         const S5gu0_srt+104;
 },
 Data.Either.$fReadEither1_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5gM6: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5gMa; else goto c5gM9;
       c5gMa: // global
           HpAlloc = 24;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fReadEither1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gM9: // global
           I64[Hp - 16] = sat_s5goI_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           _s5gok::P64 = R4;
           R4 = R5;
           R3 = _s5gok::P64;
           R2 = Hp - 14;
           call GHC.Read.list3_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fReadEither1_info" {
     Data.Either.$fReadEither1_info:
         const Data.Either.$fReadEither1_entry;
         const 0;
         const 270582939662;
         const 17179869208;
         const S5gu0_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.405025843 UTC

[section ""data" . Data.Either.$fReadEither_$creadsPrec_closure" {
     Data.Either.$fReadEither_$creadsPrec_closure:
         const Data.Either.$fReadEither_$creadsPrec_info;
         const 0;
 },
 sat_s5goM_entry() //  [R1]
         { []
         }
     {offset
       c5gNj: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5gNk; else goto c5gNl;
       c5gNk: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gNl: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R5 = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           R4 = P64[R1 + 32];
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Either.$fReadEither1_entry(R5,
                                                R4,
                                                R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5goM_info" {
     sat_s5goM_info:
         const sat_s5goM_entry;
         const 3;
         const 4294967311;
         const S5gu0_srt+128;
 },
 Data.Either.$fReadEither_$creadsPrec_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5gNm: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c5gNq; else goto c5gNp;
       c5gNq: // global
           HpAlloc = 40;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fReadEither_$creadsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gNp: // global
           I64[Hp - 32] = sat_s5goM_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           R2 = Hp - 32;
           R1 = Text.ParserCombinators.ReadP.run_closure+2;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fReadEither_$creadsPrec_info" {
     Data.Either.$fReadEither_$creadsPrec_info:
         const Data.Either.$fReadEither_$creadsPrec_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S5gu0_srt+128;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.411675107 UTC

[section ""data" . Data.Either.$fReadEither_$creadListPrec_closure" {
     Data.Either.$fReadEither_$creadListPrec_closure:
         const Data.Either.$fReadEither_$creadListPrec_info;
         const 0;
 },
 sat_s5goP_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5gNM: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fReadEither1_entry(R5,
                                                R4,
                                                R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5goP_info" {
     sat_s5goP_info:
         const sat_s5goP_entry;
         const 2;
         const 4294967307;
         const 8589934607;
         const S5gu0_srt+128;
 },
 Data.Either.$fReadEither_$creadListPrec_entry() //  [R2, R3]
         { []
         }
     {offset
       c5gNP: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5gNT; else goto c5gNS;
       c5gNT: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fReadEither_$creadListPrec_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gNS: // global
           I64[Hp - 16] = sat_s5goP_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R2 = Hp - 14;
           call GHC.Read.list_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fReadEither_$creadListPrec_info" {
     Data.Either.$fReadEither_$creadListPrec_info:
         const Data.Either.$fReadEither_$creadListPrec_entry;
         const 0;
         const 55834574862;
         const 8589934607;
         const S5gu0_srt+128;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.419734864 UTC

[section ""data" . Data.Either.$fReadEither_$creadList_closure" {
     Data.Either.$fReadEither_$creadList_closure:
         const Data.Either.$fReadEither_$creadList_info;
         const 0;
 },
 sat_s5goS_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5gOf: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fReadEither1_entry(R5,
                                                R4,
                                                R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5goS_info" {
     sat_s5goS_info:
         const sat_s5goS_entry;
         const 2;
         const 4294967307;
         const 8589934607;
         const S5gu0_srt+128;
 },
 sat_s5goT_entry() //  [R1]
         { []
         }
     {offset
       c5gOi: // global
           _s5goT::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto c5gOj; else goto c5gOk;
       c5gOk: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5gOm; else goto c5gOl;
       c5gOm: // global
           HpAlloc = 24;
           goto c5gOj;
       c5gOj: // global
           R1 = _s5goT::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gOl: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5goT::P64;
           _s5goQ::P64 = P64[_s5goT::P64 + 16];
           _s5goR::P64 = P64[_s5goT::P64 + 24];
           I64[Hp - 16] = sat_s5goS_info;
           P64[Hp - 8] = _s5goQ::P64;
           P64[Hp] = _s5goR::P64;
           R2 = Hp - 14;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = GHC.Read.$fRead()7_closure;
           P64[Sp - 24] = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           Sp = Sp - 40;
           call GHC.Read.list_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5goT_info" {
     sat_s5goT_info:
         const sat_s5goT_entry;
         const 2;
         const 21474836498;
         const S5gu0_srt+128;
 },
 Data.Either.$fReadEither_$creadList_entry() //  [R2, R3]
         { []
         }
     {offset
       c5gOn: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5gOr; else goto c5gOq;
       c5gOr: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fReadEither_$creadList_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gOq: // global
           I64[Hp - 24] = sat_s5goT_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R2 = Hp - 24;
           R1 = Text.ParserCombinators.ReadP.run_closure+2;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fReadEither_$creadList_info" {
     Data.Either.$fReadEither_$creadList_info:
         const Data.Either.$fReadEither_$creadList_entry;
         const 0;
         const 90194313230;
         const 8589934607;
         const S5gu0_srt+128;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.429672911 UTC

[section ""data" . Data.Either.$fReadEither_closure" {
     Data.Either.$fReadEither_closure:
         const Data.Either.$fReadEither_info;
         const 0;
 },
 sat_s5goZ_entry() //  [R1]
         { []
         }
     {offset
       c5gOT: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5gOU; else goto c5gOV;
       c5gOU: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gOV: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Either.$fReadEither_$creadListPrec_entry(R3,
                                                              R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5goZ_info" {
     sat_s5goZ_info:
         const sat_s5goZ_entry;
         const 2;
         const 4294967314;
         const S5gu0_srt+152;
 },
 sat_s5goY_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5gP1: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fReadEither1_entry(R5,
                                                R4,
                                                R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5goY_info" {
     sat_s5goY_info:
         const sat_s5goY_entry;
         const 2;
         const 4294967307;
         const 8589934607;
         const S5gu0_srt+128;
 },
 sat_s5goX_entry() //  [R1]
         { []
         }
     {offset
       c5gP8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5gP9; else goto c5gPa;
       c5gP9: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gPa: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Either.$fReadEither_$creadList_entry(R3,
                                                          R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5goX_info" {
     sat_s5goX_info:
         const sat_s5goX_entry;
         const 2;
         const 4294967314;
         const S5gu0_srt+160;
 },
 sat_s5goW_entry() //  [R1, R2]
         { []
         }
     {offset
       c5gPg: // global
           R4 = R2;
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           call Data.Either.$fReadEither_$creadsPrec_entry(R4,
                                                           R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5goW_info" {
     sat_s5goW_info:
         const sat_s5goW_entry;
         const 2;
         const 4294967307;
         const 4294967301;
         const S5gu0_srt+136;
 },
 Data.Either.$fReadEither_entry() //  [R2, R3]
         { []
         }
     {offset
       c5gPk: // global
           Hp = Hp + 152;
           if (Hp > HpLim) (likely: False) goto c5gPo; else goto c5gPn;
       c5gPo: // global
           HpAlloc = 152;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fReadEither_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gPn: // global
           I64[Hp - 144] = sat_s5goZ_info;
           P64[Hp - 128] = R2;
           P64[Hp - 120] = R3;
           I64[Hp - 112] = sat_s5goY_info;
           P64[Hp - 104] = R2;
           P64[Hp - 96] = R3;
           I64[Hp - 88] = sat_s5goX_info;
           P64[Hp - 72] = R2;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = sat_s5goW_info;
           P64[Hp - 48] = R2;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = GHC.Read.C:Read_con_info;
           P64[Hp - 24] = Hp - 55;
           P64[Hp - 16] = Hp - 88;
           P64[Hp - 8] = Hp - 110;
           P64[Hp] = Hp - 144;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fReadEither_info" {
     Data.Either.$fReadEither_info:
         const Data.Either.$fReadEither_entry;
         const 0;
         const 253403070478;
         const 8589934607;
         const S5gu0_srt+128;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.442109743 UTC

[section ""data" . Data.Either.$fOrdEither_$c<_closure" {
     Data.Either.$fOrdEither_$c<_closure:
         const Data.Either.$fOrdEither_$c<_info;
 },
 Data.Either.$fOrdEither_$c<_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5gQ4: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5gQ5; else goto c5gQ6;
       c5gQ5: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fOrdEither_$c<_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gQ6: // global
           I64[Sp - 32] = block_c5gPX_info;
           R1 = R4;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5gQF; else goto c5gPY;
       u5gQF: // global
           call _c5gPX(R1) args: 0, res: 0, upd: 0;
       c5gPY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fOrdEither_$c<_info" {
     Data.Either.$fOrdEither_$c<_info:
         const Data.Either.$fOrdEither_$c<_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c5gPX() //  [R1]
         { []
         }
     {offset
       c5gPX: // global
           _s5gp3::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5gQ1; else goto c5gQ2;
       c5gQ1: // global
           I64[Sp] = block_c5gQ9_info;
           _s5gp5::P64 = P64[R1 + 7];
           R1 = _s5gp3::P64;
           P64[Sp + 24] = _s5gp5::P64;
           if (R1 & 7 != 0) goto u5gQD; else goto c5gQb;
       u5gQD: // global
           call _c5gQ9(R1) args: 0, res: 0, upd: 0;
       c5gQb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c5gQ2: // global
           I64[Sp + 8] = block_c5gQo_info;
           _s5gp9::P64 = P64[R1 + 6];
           R1 = _s5gp3::P64;
           P64[Sp + 24] = _s5gp9::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5gQE; else goto c5gQq;
       u5gQE: // global
           call _c5gQo(R1) args: 0, res: 0, upd: 0;
       c5gQq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gPX_info" {
     block_c5gPX_info:
         const _c5gPX;
         const 3;
         const 30;
 },
 _c5gQ9() //  [R1]
         { []
         }
     {offset
       c5gQ9: // global
           if (R1 & 7 == 1) goto c5gQh; else goto c5gQl;
       c5gQh: // global
           R2 = P64[Sp + 8];
           I64[Sp + 8] = stg_ap_pp_info;
           P64[Sp + 16] = P64[Sp + 24];
           P64[Sp + 24] = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Classes.<_entry(R2) args: 32, res: 0, upd: 8;
       c5gQl: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gQ9_info" {
     block_c5gQ9_info:
         const _c5gQ9;
         const 131;
         const 30;
 },
 _c5gQo() //  [R1]
         { []
         }
     {offset
       c5gQo: // global
           if (R1 & 7 == 1) goto c5gQw; else goto c5gQA;
       c5gQw: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5gQA: // global
           R2 = P64[Sp + 8];
           I64[Sp] = stg_ap_pp_info;
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = P64[R1 + 6];
           call GHC.Classes.<_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gQo_info" {
     block_c5gQo_info:
         const _c5gQo;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.45408083 UTC

[section ""data" . Data.Either.$fOrdEither_$ccompare_closure" {
     Data.Either.$fOrdEither_$ccompare_closure:
         const Data.Either.$fOrdEither_$ccompare_info;
 },
 Data.Either.$fOrdEither_$ccompare_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5gRr: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5gRs; else goto c5gRt;
       c5gRs: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fOrdEither_$ccompare_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gRt: // global
           I64[Sp - 32] = block_c5gRk_info;
           R1 = R4;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5gS2; else goto c5gRl;
       u5gS2: // global
           call _c5gRk(R1) args: 0, res: 0, upd: 0;
       c5gRl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fOrdEither_$ccompare_info" {
     Data.Either.$fOrdEither_$ccompare_info:
         const Data.Either.$fOrdEither_$ccompare_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c5gRk() //  [R1]
         { []
         }
     {offset
       c5gRk: // global
           _s5gpg::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5gRo; else goto c5gRp;
       c5gRo: // global
           I64[Sp] = block_c5gRw_info;
           _s5gpi::P64 = P64[R1 + 7];
           R1 = _s5gpg::P64;
           P64[Sp + 24] = _s5gpi::P64;
           if (R1 & 7 != 0) goto u5gS0; else goto c5gRy;
       u5gS0: // global
           call _c5gRw(R1) args: 0, res: 0, upd: 0;
       c5gRy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c5gRp: // global
           I64[Sp + 8] = block_c5gRL_info;
           _s5gpm::P64 = P64[R1 + 6];
           R1 = _s5gpg::P64;
           P64[Sp + 24] = _s5gpm::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5gS1; else goto c5gRN;
       u5gS1: // global
           call _c5gRL(R1) args: 0, res: 0, upd: 0;
       c5gRN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gRk_info" {
     block_c5gRk_info:
         const _c5gRk;
         const 3;
         const 30;
 },
 _c5gRw() //  [R1]
         { []
         }
     {offset
       c5gRw: // global
           if (R1 & 7 == 1) goto c5gRE; else goto c5gRI;
       c5gRE: // global
           R2 = P64[Sp + 8];
           I64[Sp + 8] = stg_ap_pp_info;
           P64[Sp + 16] = P64[Sp + 24];
           P64[Sp + 24] = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Classes.compare_entry(R2) args: 32, res: 0, upd: 8;
       c5gRI: // global
           R1 = GHC.Types.LT_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gRw_info" {
     block_c5gRw_info:
         const _c5gRw;
         const 131;
         const 30;
 },
 _c5gRL() //  [R1]
         { []
         }
     {offset
       c5gRL: // global
           if (R1 & 7 == 1) goto c5gRT; else goto c5gRX;
       c5gRT: // global
           R1 = GHC.Types.GT_closure+3;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5gRX: // global
           R2 = P64[Sp + 8];
           I64[Sp] = stg_ap_pp_info;
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = P64[R1 + 6];
           call GHC.Classes.compare_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gRL_info" {
     block_c5gRL_info:
         const _c5gRL;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.466781177 UTC

[section ""data" . Data.Either.$fEqEither_$c==_closure" {
     Data.Either.$fEqEither_$c==_closure:
         const Data.Either.$fEqEither_$c==_info;
 },
 Data.Either.$fEqEither_$c==_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5gSO: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5gSP; else goto c5gSQ;
       c5gSP: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fEqEither_$c==_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gSQ: // global
           I64[Sp - 32] = block_c5gSH_info;
           R1 = R4;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5gTr; else goto c5gSI;
       u5gTr: // global
           call _c5gSH(R1) args: 0, res: 0, upd: 0;
       c5gSI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fEqEither_$c==_info" {
     Data.Either.$fEqEither_$c==_info:
         const Data.Either.$fEqEither_$c==_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c5gSH() //  [R1]
         { []
         }
     {offset
       c5gSH: // global
           _s5gpt::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5gSL; else goto c5gSM;
       c5gSL: // global
           I64[Sp] = block_c5gST_info;
           _s5gpv::P64 = P64[R1 + 7];
           R1 = _s5gpt::P64;
           P64[Sp + 24] = _s5gpv::P64;
           if (R1 & 7 != 0) goto u5gTp; else goto c5gSV;
       u5gTp: // global
           call _c5gST(R1) args: 0, res: 0, upd: 0;
       c5gSV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c5gSM: // global
           I64[Sp + 8] = block_c5gT8_info;
           _s5gpz::P64 = P64[R1 + 6];
           R1 = _s5gpt::P64;
           P64[Sp + 24] = _s5gpz::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5gTq; else goto c5gTa;
       u5gTq: // global
           call _c5gT8(R1) args: 0, res: 0, upd: 0;
       c5gTa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gSH_info" {
     block_c5gSH_info:
         const _c5gSH;
         const 3;
         const 30;
 },
 _c5gST() //  [R1]
         { []
         }
     {offset
       c5gST: // global
           if (R1 & 7 == 1) goto c5gT1; else goto u5gTo;
       c5gT1: // global
           R2 = P64[Sp + 8];
           I64[Sp + 8] = stg_ap_pp_info;
           P64[Sp + 16] = P64[Sp + 24];
           P64[Sp + 24] = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
       u5gTo: // global
           Sp = Sp + 32;
           call _c5gTg() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5gST_info" {
     block_c5gST_info:
         const _c5gST;
         const 131;
         const 30;
 },
 _c5gT8() //  [R1]
         { []
         }
     {offset
       c5gT8: // global
           if (R1 & 7 == 1) goto u5gTn; else goto c5gTk;
       u5gTn: // global
           Sp = Sp + 24;
           call _c5gTg() args: 0, res: 0, upd: 0;
       c5gTk: // global
           R2 = P64[Sp + 8];
           I64[Sp] = stg_ap_pp_info;
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = P64[R1 + 6];
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gT8_info" {
     block_c5gT8_info:
         const _c5gT8;
         const 2;
         const 30;
 },
 _c5gTg() //  []
         { []
         }
     {offset
       c5gTg: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.484832643 UTC

[section ""data" . Data.Either.$fEqEither_$c/=_closure" {
     Data.Either.$fEqEither_$c/=_closure:
         const Data.Either.$fEqEither_$c/=_info;
 },
 Data.Either.$fEqEither_$c/=_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5gUf: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5gUg; else goto c5gUh;
       c5gUg: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fEqEither_$c/=_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gUh: // global
           I64[Sp - 32] = block_c5gU8_info;
           R1 = R4;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5gVk; else goto c5gU9;
       u5gVk: // global
           call _c5gU8(R1) args: 0, res: 0, upd: 0;
       c5gU9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fEqEither_$c/=_info" {
     Data.Either.$fEqEither_$c/=_info:
         const Data.Either.$fEqEither_$c/=_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c5gU8() //  [R1]
         { []
         }
     {offset
       c5gU8: // global
           _s5gpG::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5gUc; else goto c5gUd;
       c5gUc: // global
           I64[Sp] = block_c5gUk_info;
           _s5gpI::P64 = P64[R1 + 7];
           R1 = _s5gpG::P64;
           P64[Sp + 24] = _s5gpI::P64;
           if (R1 & 7 != 0) goto u5gVi; else goto c5gUm;
       u5gVi: // global
           call _c5gUk(R1) args: 0, res: 0, upd: 0;
       c5gUm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c5gUd: // global
           I64[Sp + 8] = block_c5gUK_info;
           _s5gpN::P64 = P64[R1 + 6];
           R1 = _s5gpG::P64;
           P64[Sp + 24] = _s5gpN::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5gVj; else goto c5gUM;
       u5gVj: // global
           call _c5gUK(R1) args: 0, res: 0, upd: 0;
       c5gUM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gU8_info" {
     block_c5gU8_info:
         const _c5gU8;
         const 3;
         const 30;
 },
 _c5gUk() //  [R1]
         { []
         }
     {offset
       c5gUk: // global
           if (R1 & 7 == 1) goto c5gUt; else goto u5gVf;
       c5gUt: // global
           _s5gpI::P64 = P64[Sp + 24];
           I64[Sp + 24] = block_c5gUq_info;
           R2 = P64[Sp + 8];
           I64[Sp] = stg_ap_pp_info;
           P64[Sp + 8] = _s5gpI::P64;
           P64[Sp + 16] = P64[R1 + 7];
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
       u5gVf: // global
           Sp = Sp + 32;
           call _c5gV3() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5gUk_info" {
     block_c5gUk_info:
         const _c5gUk;
         const 131;
         const 30;
 },
 _c5gUq() //  [R1]
         { []
         }
     {offset
       c5gUq: // global
           if (R1 & 7 == 1) goto u5gVg; else goto u5gVh;
       u5gVg: // global
           Sp = Sp + 8;
           call _c5gV3() args: 0, res: 0, upd: 0;
       u5gVh: // global
           Sp = Sp + 8;
           call _c5gV7() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5gUq_info" {
     block_c5gUq_info:
         const _c5gUq;
         const 0;
         const 30;
 },
 _c5gUK() //  [R1]
         { []
         }
     {offset
       c5gUK: // global
           if (R1 & 7 == 1) goto u5gVc; else goto c5gUX;
       u5gVc: // global
           Sp = Sp + 24;
           call _c5gV3() args: 0, res: 0, upd: 0;
       c5gUX: // global
           _s5gpN::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c5gUV_info;
           R2 = P64[Sp + 8];
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = _s5gpN::P64;
           P64[Sp + 8] = P64[R1 + 6];
           Sp = Sp - 8;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gUK_info" {
     block_c5gUK_info:
         const _c5gUK;
         const 2;
         const 30;
 },
 _c5gUV() //  [R1]
         { []
         }
     {offset
       c5gUV: // global
           if (R1 & 7 == 1) goto u5gVd; else goto u5gVe;
       u5gVd: // global
           Sp = Sp + 8;
           call _c5gV3() args: 0, res: 0, upd: 0;
       u5gVe: // global
           Sp = Sp + 8;
           call _c5gV7() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5gUV_info" {
     block_c5gUV_info:
         const _c5gUV;
         const 0;
         const 30;
 },
 _c5gV3() //  []
         { []
         }
     {offset
       c5gV3: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c5gV7() //  []
         { []
         }
     {offset
       c5gV7: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.505606415 UTC

[section ""data" . Data.Either.$fEqEither_closure" {
     Data.Either.$fEqEither_closure:
         const Data.Either.$fEqEither_info;
 },
 sat_s5gpV_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5gWo: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fEqEither_$c/=_entry(R5,
                                                  R4,
                                                  R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5gpV_info" {
     sat_s5gpV_info:
         const sat_s5gpV_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_s5gpU_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5gWw: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fEqEither_$c==_entry(R5,
                                                  R4,
                                                  R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5gpU_info" {
     sat_s5gpU_info:
         const sat_s5gpU_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 Data.Either.$fEqEither_entry() //  [R2, R3]
         { []
         }
     {offset
       c5gWA: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c5gWE; else goto c5gWD;
       c5gWE: // global
           HpAlloc = 72;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fEqEither_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gWD: // global
           I64[Hp - 64] = sat_s5gpV_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = sat_s5gpU_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = GHC.Classes.C:Eq_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = Hp - 62;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fEqEither_info" {
     Data.Either.$fEqEither_info:
         const Data.Either.$fEqEither_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.513887108 UTC

[section ""data" . Data.Either.$fOrdEither_$cp1Ord_closure" {
     Data.Either.$fOrdEither_$cp1Ord_closure:
         const Data.Either.$fOrdEither_$cp1Ord_info;
 },
 sat_s5gpZ_entry() //  [R1]
         { []
         }
     {offset
       c5gX3: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5gX4; else goto c5gX5;
       c5gX4: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gX5: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.$p1Ord_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5gpZ_info" {
     sat_s5gpZ_info:
         const sat_s5gpZ_entry;
         const 1;
         const 16;
 },
 sat_s5gpY_entry() //  [R1]
         { []
         }
     {offset
       c5gXa: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5gXb; else goto c5gXc;
       c5gXb: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5gXc: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Classes.$p1Ord_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5gpY_info" {
     sat_s5gpY_info:
         const sat_s5gpY_entry;
         const 1;
         const 16;
 },
 Data.Either.$fOrdEither_$cp1Ord_entry() //  [R2, R3]
         { []
         }
     {offset
       c5gXd: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5gXh; else goto c5gXg;
       c5gXh: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fOrdEither_$cp1Ord_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gXg: // global
           I64[Hp - 40] = sat_s5gpZ_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s5gpY_info;
           P64[Hp] = R2;
           R3 = Hp - 40;
           R2 = Hp - 16;
           call Data.Either.$fEqEither_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fOrdEither_$cp1Ord_info" {
     Data.Either.$fOrdEither_$cp1Ord_info:
         const Data.Either.$fOrdEither_$cp1Ord_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.524579466 UTC

[section ""data" . Data.Either.$fOrdEither_$c<=_closure" {
     Data.Either.$fOrdEither_$c<=_closure:
         const Data.Either.$fOrdEither_$c<=_info;
 },
 Data.Either.$fOrdEither_$c<=_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5gXJ: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5gXK; else goto c5gXL;
       c5gXK: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fOrdEither_$c<=_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gXL: // global
           I64[Sp - 32] = block_c5gXC_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5gYO; else goto c5gXD;
       u5gYO: // global
           call _c5gXC(R1) args: 0, res: 0, upd: 0;
       c5gXD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fOrdEither_$c<=_info" {
     Data.Either.$fOrdEither_$c<=_info:
         const Data.Either.$fOrdEither_$c<=_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c5gXC() //  [R1]
         { []
         }
     {offset
       c5gXC: // global
           _s5gq2::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5gXG; else goto c5gXH;
       c5gXG: // global
           I64[Sp] = block_c5gXO_info;
           _s5gq5::P64 = P64[R1 + 7];
           R1 = _s5gq2::P64;
           P64[Sp + 24] = _s5gq5::P64;
           if (R1 & 7 != 0) goto u5gYM; else goto c5gXQ;
       u5gYM: // global
           call _c5gXO(R1) args: 0, res: 0, upd: 0;
       c5gXQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c5gXH: // global
           I64[Sp + 8] = block_c5gYe_info;
           _s5gqa::P64 = P64[R1 + 6];
           R1 = _s5gq2::P64;
           P64[Sp + 24] = _s5gqa::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5gYN; else goto c5gYg;
       u5gYN: // global
           call _c5gYe(R1) args: 0, res: 0, upd: 0;
       c5gYg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gXC_info" {
     block_c5gXC_info:
         const _c5gXC;
         const 3;
         const 30;
 },
 _c5gXO() //  [R1]
         { []
         }
     {offset
       c5gXO: // global
           if (R1 & 7 == 1) goto c5gXX; else goto u5gYJ;
       c5gXX: // global
           _s5gq5::P64 = P64[Sp + 24];
           I64[Sp + 24] = block_c5gXU_info;
           R2 = P64[Sp + 8];
           I64[Sp] = stg_ap_pp_info;
           P64[Sp + 8] = _s5gq5::P64;
           P64[Sp + 16] = P64[R1 + 7];
           call GHC.Classes.<_entry(R2) args: 32, res: 8, upd: 8;
       u5gYJ: // global
           Sp = Sp + 32;
           call _c5gYB() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5gXO_info" {
     block_c5gXO_info:
         const _c5gXO;
         const 131;
         const 30;
 },
 _c5gXU() //  [R1]
         { []
         }
     {offset
       c5gXU: // global
           if (R1 & 7 == 1) goto u5gYK; else goto u5gYL;
       u5gYK: // global
           Sp = Sp + 8;
           call _c5gYx() args: 0, res: 0, upd: 0;
       u5gYL: // global
           Sp = Sp + 8;
           call _c5gYB() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5gXU_info" {
     block_c5gXU_info:
         const _c5gXU;
         const 0;
         const 30;
 },
 _c5gYe() //  [R1]
         { []
         }
     {offset
       c5gYe: // global
           if (R1 & 7 == 1) goto u5gYG; else goto c5gYr;
       u5gYG: // global
           Sp = Sp + 24;
           call _c5gYx() args: 0, res: 0, upd: 0;
       c5gYr: // global
           _s5gqa::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c5gYp_info;
           R2 = P64[Sp + 8];
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = _s5gqa::P64;
           P64[Sp + 8] = P64[R1 + 6];
           Sp = Sp - 8;
           call GHC.Classes.<_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gYe_info" {
     block_c5gYe_info:
         const _c5gYe;
         const 2;
         const 30;
 },
 _c5gYp() //  [R1]
         { []
         }
     {offset
       c5gYp: // global
           if (R1 & 7 == 1) goto u5gYH; else goto u5gYI;
       u5gYH: // global
           Sp = Sp + 8;
           call _c5gYx() args: 0, res: 0, upd: 0;
       u5gYI: // global
           Sp = Sp + 8;
           call _c5gYB() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5gYp_info" {
     block_c5gYp_info:
         const _c5gYp;
         const 0;
         const 30;
 },
 _c5gYx() //  []
         { []
         }
     {offset
       c5gYx: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c5gYB() //  []
         { []
         }
     {offset
       c5gYB: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.542914974 UTC

[section ""data" . Data.Either.$fOrdEither_$cmax_closure" {
     Data.Either.$fOrdEither_$cmax_closure:
         const Data.Either.$fOrdEither_$cmax_info;
 },
 Data.Either.$fOrdEither_$cmax_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5gZU: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c5gZV; else goto c5gZW;
       c5gZV: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fOrdEither_$cmax_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5gZW: // global
           I64[Sp - 32] = block_c5gZN_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5h0Y; else goto c5gZO;
       u5h0Y: // global
           call _c5gZN(R1) args: 0, res: 0, upd: 0;
       c5gZO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fOrdEither_$cmax_info" {
     Data.Either.$fOrdEither_$cmax_info:
         const Data.Either.$fOrdEither_$cmax_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c5gZN() //  [R1]
         { []
         }
     {offset
       c5gZN: // global
           _s5gqh::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5gZR; else goto c5gZS;
       c5gZR: // global
           I64[Sp] = block_c5gZZ_info;
           _s5gqj::P64 = R1;
           _s5gqk::P64 = P64[R1 + 7];
           R1 = _s5gqh::P64;
           P64[Sp + 16] = _s5gqk::P64;
           P64[Sp + 24] = _s5gqj::P64;
           if (R1 & 7 != 0) goto u5h0W; else goto c5h01;
       u5h0W: // global
           call _c5gZZ(R1) args: 0, res: 0, upd: 0;
       c5h01: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c5gZS: // global
           I64[Sp] = block_c5h0p_info;
           _s5gqj::P64 = R1;
           _s5gqp::P64 = P64[R1 + 6];
           R1 = _s5gqh::P64;
           P64[Sp + 8] = _s5gqp::P64;
           P64[Sp + 24] = _s5gqj::P64;
           if (R1 & 7 != 0) goto u5h0X; else goto c5h0r;
       u5h0X: // global
           call _c5h0p(R1) args: 0, res: 0, upd: 0;
       c5h0r: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5gZN_info" {
     block_c5gZN_info:
         const _c5gZN;
         const 3;
         const 30;
 },
 _c5gZZ() //  [R1]
         { []
         }
     {offset
       c5gZZ: // global
           if (R1 & 7 == 1) goto c5h08; else goto u5h0T;
       c5h08: // global
           _s5gqf::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5h05_info;
           R2 = _s5gqf::P64;
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = P64[Sp + 16];
           P64[Sp] = P64[R1 + 7];
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call GHC.Classes.<_entry(R2) args: 32, res: 8, upd: 8;
       u5h0T: // global
           P64[Sp + 24] = R1;
           Sp = Sp + 24;
           call _c5h0m() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5gZZ_info" {
     block_c5gZZ_info:
         const _c5gZZ;
         const 3;
         const 30;
 },
 _c5h05() //  [R1]
         { []
         }
     {offset
       c5h05: // global
           if (R1 & 7 == 1) goto u5h0U; else goto u5h0V;
       u5h0U: // global
           Sp = Sp + 16;
           call _c5h0I() args: 0, res: 0, upd: 0;
       u5h0V: // global
           P64[Sp + 16] = P64[Sp + 8];
           Sp = Sp + 16;
           call _c5h0m() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5h05_info" {
     block_c5h05_info:
         const _c5h05;
         const 2;
         const 30;
 },
 _c5h0m() //  []
         { []
         }
     {offset
       c5h0m: // global
           R1 = P64[Sp] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c5h0p() //  [R1]
         { []
         }
     {offset
       c5h0p: // global
           if (R1 & 7 == 1) goto u5h0R; else goto c5h0C;
       u5h0R: // global
           Sp = Sp + 24;
           call _c5h0I() args: 0, res: 0, upd: 0;
       c5h0C: // global
           _s5gqp::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5h0A_info;
           R2 = P64[Sp + 16];
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = _s5gqp::P64;
           P64[Sp] = P64[R1 + 6];
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call GHC.Classes.<_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5h0p_info" {
     block_c5h0p_info:
         const _c5h0p;
         const 3;
         const 30;
 },
 _c5h0A() //  [R1]
         { []
         }
     {offset
       c5h0A: // global
           if (R1 & 7 == 1) goto u5h0S; else goto c5h0M;
       u5h0S: // global
           Sp = Sp + 16;
           call _c5h0I() args: 0, res: 0, upd: 0;
       c5h0M: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5h0A_info" {
     block_c5h0A_info:
         const _c5h0A;
         const 2;
         const 30;
 },
 _c5h0I() //  []
         { []
         }
     {offset
       c5h0I: // global
           R1 = P64[Sp] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.56193836 UTC

[section ""data" . Data.Either.$fOrdEither_$c>=_closure" {
     Data.Either.$fOrdEither_$c>=_closure:
         const Data.Either.$fOrdEither_$c>=_info;
 },
 Data.Either.$fOrdEither_$c>=_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5h27: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5h28; else goto c5h29;
       c5h28: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fOrdEither_$c>=_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5h29: // global
           I64[Sp - 32] = block_c5h20_info;
           R1 = R4;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5h3c; else goto c5h21;
       u5h3c: // global
           call _c5h20(R1) args: 0, res: 0, upd: 0;
       c5h21: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fOrdEither_$c>=_info" {
     Data.Either.$fOrdEither_$c>=_info:
         const Data.Either.$fOrdEither_$c>=_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c5h20() //  [R1]
         { []
         }
     {offset
       c5h20: // global
           _s5gqx::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5h24; else goto c5h25;
       c5h24: // global
           I64[Sp] = block_c5h2c_info;
           _s5gqz::P64 = P64[R1 + 7];
           R1 = _s5gqx::P64;
           P64[Sp + 24] = _s5gqz::P64;
           if (R1 & 7 != 0) goto u5h3a; else goto c5h2e;
       u5h3a: // global
           call _c5h2c(R1) args: 0, res: 0, upd: 0;
       c5h2e: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c5h25: // global
           I64[Sp + 8] = block_c5h2C_info;
           _s5gqE::P64 = P64[R1 + 6];
           R1 = _s5gqx::P64;
           P64[Sp + 24] = _s5gqE::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5h3b; else goto c5h2E;
       u5h3b: // global
           call _c5h2C(R1) args: 0, res: 0, upd: 0;
       c5h2E: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5h20_info" {
     block_c5h20_info:
         const _c5h20;
         const 3;
         const 30;
 },
 _c5h2c() //  [R1]
         { []
         }
     {offset
       c5h2c: // global
           if (R1 & 7 == 1) goto c5h2l; else goto u5h37;
       c5h2l: // global
           _s5gqz::P64 = P64[Sp + 24];
           I64[Sp + 24] = block_c5h2i_info;
           R2 = P64[Sp + 8];
           I64[Sp] = stg_ap_pp_info;
           P64[Sp + 8] = _s5gqz::P64;
           P64[Sp + 16] = P64[R1 + 7];
           call GHC.Classes.<_entry(R2) args: 32, res: 8, upd: 8;
       u5h37: // global
           Sp = Sp + 32;
           call _c5h2Z() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5h2c_info" {
     block_c5h2c_info:
         const _c5h2c;
         const 131;
         const 30;
 },
 _c5h2i() //  [R1]
         { []
         }
     {offset
       c5h2i: // global
           if (R1 & 7 == 1) goto u5h38; else goto u5h39;
       u5h38: // global
           Sp = Sp + 8;
           call _c5h2V() args: 0, res: 0, upd: 0;
       u5h39: // global
           Sp = Sp + 8;
           call _c5h2Z() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5h2i_info" {
     block_c5h2i_info:
         const _c5h2i;
         const 0;
         const 30;
 },
 _c5h2C() //  [R1]
         { []
         }
     {offset
       c5h2C: // global
           if (R1 & 7 == 1) goto u5h34; else goto c5h2P;
       u5h34: // global
           Sp = Sp + 24;
           call _c5h2V() args: 0, res: 0, upd: 0;
       c5h2P: // global
           _s5gqE::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c5h2N_info;
           R2 = P64[Sp + 8];
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = _s5gqE::P64;
           P64[Sp + 8] = P64[R1 + 6];
           Sp = Sp - 8;
           call GHC.Classes.<_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5h2C_info" {
     block_c5h2C_info:
         const _c5h2C;
         const 2;
         const 30;
 },
 _c5h2N() //  [R1]
         { []
         }
     {offset
       c5h2N: // global
           if (R1 & 7 == 1) goto u5h35; else goto u5h36;
       u5h35: // global
           Sp = Sp + 8;
           call _c5h2V() args: 0, res: 0, upd: 0;
       u5h36: // global
           Sp = Sp + 8;
           call _c5h2Z() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5h2N_info" {
     block_c5h2N_info:
         const _c5h2N;
         const 0;
         const 30;
 },
 _c5h2V() //  []
         { []
         }
     {offset
       c5h2V: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c5h2Z() //  []
         { []
         }
     {offset
       c5h2Z: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.584610213 UTC

[section ""data" . Data.Either.$fOrdEither_$cmin_closure" {
     Data.Either.$fOrdEither_$cmin_closure:
         const Data.Either.$fOrdEither_$cmin_info;
 },
 Data.Either.$fOrdEither_$cmin_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5h4i: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c5h4j; else goto c5h4k;
       c5h4j: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fOrdEither_$cmin_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5h4k: // global
           I64[Sp - 32] = block_c5h4b_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5h5m; else goto c5h4c;
       u5h5m: // global
           call _c5h4b(R1) args: 0, res: 0, upd: 0;
       c5h4c: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fOrdEither_$cmin_info" {
     Data.Either.$fOrdEither_$cmin_info:
         const Data.Either.$fOrdEither_$cmin_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c5h4b() //  [R1]
         { []
         }
     {offset
       c5h4b: // global
           _s5gqL::P64 = P64[Sp + 24];
           if (R1 & 7 == 1) goto c5h4f; else goto c5h4g;
       c5h4f: // global
           I64[Sp] = block_c5h4n_info;
           _s5gqN::P64 = R1;
           _s5gqO::P64 = P64[R1 + 7];
           R1 = _s5gqL::P64;
           P64[Sp + 16] = _s5gqO::P64;
           P64[Sp + 24] = _s5gqN::P64;
           if (R1 & 7 != 0) goto u5h5k; else goto c5h4p;
       u5h5k: // global
           call _c5h4n(R1) args: 0, res: 0, upd: 0;
       c5h4p: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c5h4g: // global
           I64[Sp] = block_c5h4N_info;
           _s5gqN::P64 = R1;
           _s5gqT::P64 = P64[R1 + 6];
           R1 = _s5gqL::P64;
           P64[Sp + 8] = _s5gqT::P64;
           P64[Sp + 24] = _s5gqN::P64;
           if (R1 & 7 != 0) goto u5h5l; else goto c5h4P;
       u5h5l: // global
           call _c5h4N(R1) args: 0, res: 0, upd: 0;
       c5h4P: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5h4b_info" {
     block_c5h4b_info:
         const _c5h4b;
         const 3;
         const 30;
 },
 _c5h4n() //  [R1]
         { []
         }
     {offset
       c5h4n: // global
           if (R1 & 7 == 1) goto c5h4w; else goto u5h5i;
       c5h4w: // global
           _s5gqJ::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5h4t_info;
           R2 = _s5gqJ::P64;
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = P64[Sp + 16];
           P64[Sp] = P64[R1 + 7];
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call GHC.Classes.<_entry(R2) args: 32, res: 8, upd: 8;
       u5h5i: // global
           Sp = Sp + 24;
           call _c5h5a() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5h4n_info" {
     block_c5h4n_info:
         const _c5h4n;
         const 3;
         const 30;
 },
 _c5h4t() //  [R1]
         { []
         }
     {offset
       c5h4t: // global
           if (R1 & 7 == 1) goto c5h4C; else goto u5h5j;
       c5h4C: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       u5h5j: // global
           Sp = Sp + 16;
           call _c5h5a() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5h4t_info" {
     block_c5h4t_info:
         const _c5h4t;
         const 2;
         const 30;
 },
 _c5h4N() //  [R1]
         { []
         }
     {offset
       c5h4N: // global
           if (R1 & 7 == 1) goto u5h5f; else goto c5h50;
       u5h5f: // global
           P64[Sp + 24] = R1;
           Sp = Sp + 24;
           call _c5h56() args: 0, res: 0, upd: 0;
       c5h50: // global
           _s5gqT::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5h4Y_info;
           R2 = P64[Sp + 16];
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = _s5gqT::P64;
           P64[Sp] = P64[R1 + 6];
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call GHC.Classes.<_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5h4N_info" {
     block_c5h4N_info:
         const _c5h4N;
         const 3;
         const 30;
 },
 _c5h4Y() //  [R1]
         { []
         }
     {offset
       c5h4Y: // global
           if (R1 & 7 == 1) goto u5h5g; else goto u5h5h;
       u5h5g: // global
           P64[Sp + 16] = P64[Sp + 8];
           Sp = Sp + 16;
           call _c5h56() args: 0, res: 0, upd: 0;
       u5h5h: // global
           Sp = Sp + 16;
           call _c5h5a() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5h4Y_info" {
     block_c5h4Y_info:
         const _c5h4Y;
         const 2;
         const 30;
 },
 _c5h56() //  []
         { []
         }
     {offset
       c5h56: // global
           R1 = P64[Sp] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c5h5a() //  []
         { []
         }
     {offset
       c5h5a: // global
           R1 = P64[Sp] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.602440421 UTC

[section ""data" . Data.Either.$fOrdEither_closure" {
     Data.Either.$fOrdEither_closure:
         const Data.Either.$fOrdEither_info;
 },
 sat_s5gr9_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5h6t: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fOrdEither_$cmin_entry(R5,
                                                    R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5gr9_info" {
     sat_s5gr9_info:
         const sat_s5gr9_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_s5gr8_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5h6B: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fOrdEither_$cmax_entry(R5,
                                                    R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5gr8_info" {
     sat_s5gr8_info:
         const sat_s5gr8_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_s5gr7_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5h6J: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fOrdEither_$c>=_entry(R5,
                                                   R4,
                                                   R3,
                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5gr7_info" {
     sat_s5gr7_info:
         const sat_s5gr7_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_s5gr6_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5h6R: // global
           R5 = R2;
           R4 = R3;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fOrdEither_$c<_entry(R5,
                                                  R4,
                                                  R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5gr6_info" {
     sat_s5gr6_info:
         const sat_s5gr6_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_s5gr3_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5h6Z: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fOrdEither_$c<=_entry(R5,
                                                   R4,
                                                   R3,
                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5gr3_info" {
     sat_s5gr3_info:
         const sat_s5gr3_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_s5gr2_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5h77: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fOrdEither_$c<_entry(R5,
                                                  R4,
                                                  R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5gr2_info" {
     sat_s5gr2_info:
         const sat_s5gr2_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_s5gr1_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5h7f: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Data.Either.$fOrdEither_$ccompare_entry(R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5gr1_info" {
     sat_s5gr1_info:
         const sat_s5gr1_entry;
         const 2;
         const 11;
         const 8589934607;
 },
 sat_s5gr0_entry() //  [R1]
         { []
         }
     {offset
       c5h7m: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5h7n; else goto c5h7o;
       c5h7n: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5h7o: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Either.$fOrdEither_$cp1Ord_entry(R3,
                                                      R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5gr0_info" {
     sat_s5gr0_info:
         const sat_s5gr0_entry;
         const 2;
         const 18;
 },
 Data.Either.$fOrdEither_entry() //  [R2, R3]
         { []
         }
     {offset
       c5h7q: // global
           Hp = Hp + 272;
           if (Hp > HpLim) (likely: False) goto c5h7u; else goto c5h7t;
       c5h7u: // global
           HpAlloc = 272;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.$fOrdEither_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5h7t: // global
           I64[Hp - 264] = sat_s5gr9_info;
           P64[Hp - 256] = R2;
           P64[Hp - 248] = R3;
           I64[Hp - 240] = sat_s5gr8_info;
           P64[Hp - 232] = R2;
           P64[Hp - 224] = R3;
           I64[Hp - 216] = sat_s5gr7_info;
           P64[Hp - 208] = R2;
           P64[Hp - 200] = R3;
           I64[Hp - 192] = sat_s5gr6_info;
           P64[Hp - 184] = R2;
           P64[Hp - 176] = R3;
           I64[Hp - 168] = sat_s5gr3_info;
           P64[Hp - 160] = R2;
           P64[Hp - 152] = R3;
           I64[Hp - 144] = sat_s5gr2_info;
           P64[Hp - 136] = R2;
           P64[Hp - 128] = R3;
           I64[Hp - 120] = sat_s5gr1_info;
           P64[Hp - 112] = R2;
           P64[Hp - 104] = R3;
           I64[Hp - 96] = sat_s5gr0_info;
           P64[Hp - 80] = R2;
           P64[Hp - 72] = R3;
           I64[Hp - 64] = GHC.Classes.C:Ord_con_info;
           P64[Hp - 56] = Hp - 96;
           P64[Hp - 48] = Hp - 118;
           P64[Hp - 40] = Hp - 142;
           P64[Hp - 32] = Hp - 166;
           P64[Hp - 24] = Hp - 190;
           P64[Hp - 16] = Hp - 214;
           P64[Hp - 8] = Hp - 238;
           P64[Hp] = Hp - 262;
           R1 = Hp - 63;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$fOrdEither_info" {
     Data.Either.$fOrdEither_info:
         const Data.Either.$fOrdEither_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.621813946 UTC

[section ""data" . Data.Either.either_closure" {
     Data.Either.either_closure:
         const Data.Either.either_info;
 },
 Data.Either.either_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5h8s: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5h8t; else goto c5h8u;
       c5h8t: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.either_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5h8u: // global
           I64[Sp - 24] = block_c5h8l_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5h8B; else goto c5h8m;
       u5h8B: // global
           call _c5h8l(R1) args: 0, res: 0, upd: 0;
       c5h8m: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.either_info" {
     Data.Either.either_info:
         const Data.Either.either_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c5h8l() //  [R1]
         { []
         }
     {offset
       c5h8l: // global
           if (R1 & 7 == 1) goto c5h8p; else goto c5h8q;
       c5h8p: // global
           R2 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
       c5h8q: // global
           R2 = P64[R1 + 6];
           R1 = P64[Sp + 16];
           Sp = Sp + 24;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5h8l_info" {
     block_c5h8l_info:
         const _c5h8l;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.630630718 UTC

[section ""data" . Data.Either.$wpartitionEithers_closure" {
     Data.Either.$wpartitionEithers_closure:
         const Data.Either.$wpartitionEithers_info;
 },
 eta_s5grk_entry() //  [R1]
         { []
         }
     {offset
       c5h95: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5h96; else goto c5h97;
       c5h96: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5h97: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c5h92_info;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call Data.Either.$wpartitionEithers_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . eta_s5grk_info" {
     eta_s5grk_info:
         const eta_s5grk_entry;
         const 1;
         const 16;
 },
 _c5h92() //  [R1, R2]
         { []
         }
     {offset
       c5h92: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5h9a; else goto c5h99;
       c5h9a: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c5h99: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5h92_info" {
     block_c5h92_info:
         const _c5h92;
         const 0;
         const 30;
 },
 Data.Either.$wpartitionEithers_entry() //  [R2]
         { []
         }
     {offset
       c5h9f: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5h9g; else goto c5h9h;
       c5h9g: // global
           R2 = R2;
           R1 = Data.Either.$wpartitionEithers_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5h9h: // global
           I64[Sp - 8] = block_c5h8S_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5h9L; else goto c5h8T;
       u5h9L: // global
           call _c5h8S(R1) args: 0, res: 0, upd: 0;
       c5h8T: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.$wpartitionEithers_info" {
     Data.Either.$wpartitionEithers_info:
         const Data.Either.$wpartitionEithers_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5h8S() //  [R1]
         { []
         }
     {offset
       c5h8S: // global
           if (R1 & 7 == 1) goto c5h9c; else goto c5h9d;
       c5h9c: // global
           R2 = GHC.Types.[]_closure+1;
           R1 = GHC.Types.[]_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
       c5h9d: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5h9n; else goto c5h9m;
       c5h9n: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5h9m: // global
           _s5gri::P64 = P64[R1 + 6];
           _s5grj::P64 = P64[R1 + 14];
           I64[Hp - 16] = eta_s5grk_info;
           P64[Hp] = _s5grj::P64;
           I64[Sp - 8] = block_c5h9k_info;
           R1 = _s5gri::P64;
           P64[Sp] = Hp - 16;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5h9K; else goto c5h9o;
       u5h9K: // global
           call _c5h9k(R1) args: 0, res: 0, upd: 0;
       c5h9o: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5h8S_info" {
     block_c5h8S_info:
         const _c5h8S;
         const 0;
         const 30;
 },
 _c5h9k() //  [R1]
         { []
         }
     {offset
       c5h9k: // global
           _c5h8Y::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5h9w; else goto c5h9F;
       c5h9w: // global
           Hp = Hp + 72;
           _s5gro::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5h9I; else goto c5h9y;
       c5h9y: // global
           _s5grp::P64 = P64[_s5gro::P64 + 7];
           I64[Hp - 64] = stg_sel_1_upd_info;
           P64[Hp - 48] = _c5h8Y::P64;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = _c5h8Y::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5grp::P64;
           P64[Hp] = Hp - 40;
           R2 = Hp - 64;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
       c5h9F: // global
           Hp = Hp + 72;
           _s5gro::P64 = R1;
           if (Hp > HpLim) (likely: False) goto c5h9I; else goto c5h9H;
       c5h9I: // global
           HpAlloc = 72;
           R1 = _s5gro::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5h9H: // global
           _s5grz::P64 = P64[_s5gro::P64 + 6];
           I64[Hp - 64] = stg_sel_1_upd_info;
           P64[Hp - 48] = _c5h8Y::P64;
           I64[Hp - 40] = :_con_info;
           P64[Hp - 32] = _s5grz::P64;
           P64[Hp - 24] = Hp - 64;
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _c5h8Y::P64;
           R2 = Hp - 38;
           R1 = Hp - 16;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5h9k_info" {
     block_c5h9k_info:
         const _c5h9k;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.643063857 UTC

[section ""data" . Data.Either.partitionEithers_closure" {
     Data.Either.partitionEithers_closure:
         const Data.Either.partitionEithers_info;
 },
 Data.Either.partitionEithers_entry() //  [R2]
         { []
         }
     {offset
       c5haC: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5haD; else goto c5haE;
       c5haD: // global
           R2 = R2;
           R1 = Data.Either.partitionEithers_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5haE: // global
           I64[Sp - 8] = block_c5haz_info;
           R2 = R2;
           Sp = Sp - 8;
           call Data.Either.$wpartitionEithers_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.partitionEithers_info" {
     Data.Either.partitionEithers_info:
         const Data.Either.partitionEithers_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5haz() //  [R1, R2]
         { []
         }
     {offset
       c5haz: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5haH; else goto c5haG;
       c5haH: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c5haG: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5haz_info" {
     block_c5haz_info:
         const _c5haz;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.650887959 UTC

[section ""data" . poly_go_r5exd_closure" {
     poly_go_r5exd_closure:
         const poly_go_r5exd_info;
 },
 sat_s5grT_entry() //  [R1]
         { []
         }
     {offset
       c5hbc: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5hbd; else goto c5hbe;
       c5hbd: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5hbe: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call poly_go_r5exd_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5grT_info" {
     sat_s5grT_info:
         const sat_s5grT_entry;
         const 1;
         const 16;
 },
 poly_go_r5exd_entry() //  [R2]
         { []
         }
     {offset
       c5hbj: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5hbk; else goto u5hbA;
       c5hbk: // global
           R2 = R2;
           R1 = poly_go_r5exd_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       u5hbA: // global
           P64[Sp - 8] = R2;
           Sp = Sp - 8;
           call _c5haU() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . poly_go_r5exd_info" {
     poly_go_r5exd_info:
         const poly_go_r5exd_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5haU() //  []
         { []
         }
     {offset
       c5haU: // global
           _s5grN::P64 = P64[Sp];
           I64[Sp] = block_c5haX_info;
           R1 = _s5grN::P64;
           if (R1 & 7 != 0) goto u5hbC; else goto c5haY;
       u5hbC: // global
           call _c5haX(R1) args: 0, res: 0, upd: 0;
       c5haY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5haX() //  [R1]
         { []
         }
     {offset
       c5haX: // global
           if (R1 & 7 == 1) goto c5hbg; else goto c5hbh;
       c5hbg: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5hbh: // global
           I64[Sp - 8] = block_c5hb3_info;
           _s5grQ::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5grQ::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5hbD; else goto c5hb4;
       u5hbD: // global
           call _c5hb3(R1) args: 0, res: 0, upd: 0;
       c5hb4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5haX_info" {
     block_c5haX_info:
         const _c5haX;
         const 0;
         const 30;
 },
 _c5hb3() //  [R1]
         { []
         }
     {offset
       c5hb3: // global
           _s5grQ::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5hbr; else goto c5hby;
       c5hbr: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5hbu; else goto c5hbt;
       c5hbu: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5hbt: // global
           _s5grS::P64 = P64[R1 + 7];
           I64[Hp - 40] = sat_s5grT_info;
           P64[Hp - 24] = _s5grQ::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5grS::P64;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5hby: // global
           P64[Sp + 8] = _s5grQ::P64;
           Sp = Sp + 8;
           call _c5haU() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c5hb3_info" {
     block_c5hb3_info:
         const _c5hb3;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.66436806 UTC

[section ""data" . Data.Either.lefts_closure" {
     Data.Either.lefts_closure:
         const Data.Either.lefts_info;
 },
 Data.Either.lefts_entry() //  [R2]
         { []
         }
     {offset
       c5hcg: // global
           R2 = R2;
           call poly_go_r5exd_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.lefts_info" {
     Data.Either.lefts_info:
         const Data.Either.lefts_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.669354346 UTC

[section ""data" . poly_go1_r5exe_closure" {
     poly_go1_r5exe_closure:
         const poly_go1_r5exe_info;
 },
 sat_s5gs3_entry() //  [R1]
         { []
         }
     {offset
       c5hcH: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5hcI; else goto c5hcJ;
       c5hcI: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5hcJ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call poly_go1_r5exe_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5gs3_info" {
     sat_s5gs3_info:
         const sat_s5gs3_entry;
         const 1;
         const 16;
 },
 poly_go1_r5exe_entry() //  [R2]
         { []
         }
     {offset
       c5hcO: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5hcP; else goto u5hd4;
       c5hcP: // global
           R2 = R2;
           R1 = poly_go1_r5exe_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       u5hd4: // global
           P64[Sp - 8] = R2;
           Sp = Sp - 8;
           call _c5hco() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . poly_go1_r5exe_info" {
     poly_go1_r5exe_info:
         const poly_go1_r5exe_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5hco() //  []
         { []
         }
     {offset
       c5hco: // global
           _s5grW::P64 = P64[Sp];
           I64[Sp] = block_c5hcr_info;
           R1 = _s5grW::P64;
           if (R1 & 7 != 0) goto u5hd6; else goto c5hcs;
       u5hd6: // global
           call _c5hcr(R1) args: 0, res: 0, upd: 0;
       c5hcs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5hcr() //  [R1]
         { []
         }
     {offset
       c5hcr: // global
           if (R1 & 7 == 1) goto c5hcL; else goto c5hcM;
       c5hcL: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5hcM: // global
           I64[Sp - 8] = block_c5hcx_info;
           _s5grZ::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5grZ::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5hd7; else goto c5hcy;
       u5hd7: // global
           call _c5hcx(R1) args: 0, res: 0, upd: 0;
       c5hcy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5hcr_info" {
     block_c5hcr_info:
         const _c5hcr;
         const 0;
         const 30;
 },
 _c5hcx() //  [R1]
         { []
         }
     {offset
       c5hcx: // global
           _s5grZ::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c5hcX; else goto c5hcZ;
       c5hcX: // global
           P64[Sp + 8] = _s5grZ::P64;
           Sp = Sp + 8;
           call _c5hco() args: 0, res: 0, upd: 0;
       c5hcZ: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5hd2; else goto c5hd1;
       c5hd2: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5hd1: // global
           _s5gs2::P64 = P64[R1 + 6];
           I64[Hp - 40] = sat_s5gs3_info;
           P64[Hp - 24] = _s5grZ::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s5gs2::P64;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5hcx_info" {
     block_c5hcx_info:
         const _c5hcx;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.679676148 UTC

[section ""data" . Data.Either.rights_closure" {
     Data.Either.rights_closure:
         const Data.Either.rights_info;
 },
 Data.Either.rights_entry() //  [R2]
         { []
         }
     {offset
       c5hdK: // global
           R2 = R2;
           call poly_go1_r5exe_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.rights_info" {
     Data.Either.rights_info:
         const Data.Either.rights_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.683753623 UTC

[section ""data" . Data.Either.isLeft_closure" {
     Data.Either.isLeft_closure:
         const Data.Either.isLeft_info;
 },
 Data.Either.isLeft_entry() //  [R2]
         { []
         }
     {offset
       c5he2: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5he3; else goto c5he4;
       c5he3: // global
           R2 = R2;
           R1 = Data.Either.isLeft_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5he4: // global
           I64[Sp - 8] = block_c5hdV_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5heb; else goto c5hdW;
       u5heb: // global
           call _c5hdV(R1) args: 0, res: 0, upd: 0;
       c5hdW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.isLeft_info" {
     Data.Either.isLeft_info:
         const Data.Either.isLeft_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5hdV() //  [R1]
         { []
         }
     {offset
       c5hdV: // global
           if (R1 & 7 == 1) goto c5hdZ; else goto c5he0;
       c5hdZ: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5he0: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5hdV_info" {
     block_c5hdV_info:
         const _c5hdV;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.689780523 UTC

[section ""data" . Data.Either.isRight_closure" {
     Data.Either.isRight_closure:
         const Data.Either.isRight_info;
 },
 Data.Either.isRight_entry() //  [R2]
         { []
         }
     {offset
       c5heD: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5heE; else goto c5heF;
       c5heE: // global
           R2 = R2;
           R1 = Data.Either.isRight_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5heF: // global
           I64[Sp - 8] = block_c5hew_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5heM; else goto c5hex;
       u5heM: // global
           call _c5hew(R1) args: 0, res: 0, upd: 0;
       c5hex: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.isRight_info" {
     Data.Either.isRight_info:
         const Data.Either.isRight_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5hew() //  [R1]
         { []
         }
     {offset
       c5hew: // global
           if (R1 & 7 == 1) goto c5heA; else goto c5heB;
       c5heA: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5heB: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5hew_info" {
     block_c5hew_info:
         const _c5hew;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.696472508 UTC

[section ""data" . Data.Either.fromLeft_closure" {
     Data.Either.fromLeft_closure:
         const Data.Either.fromLeft_info;
 },
 Data.Either.fromLeft_entry() //  [R2, R3]
         { []
         }
     {offset
       c5hfe: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5hff; else goto c5hfg;
       c5hff: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.fromLeft_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5hfg: // global
           I64[Sp - 16] = block_c5hf7_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5hfn; else goto c5hf8;
       u5hfn: // global
           call _c5hf7(R1) args: 0, res: 0, upd: 0;
       c5hf8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.fromLeft_info" {
     Data.Either.fromLeft_info:
         const Data.Either.fromLeft_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5hf7() //  [R1]
         { []
         }
     {offset
       c5hf7: // global
           if (R1 & 7 == 1) goto c5hfb; else goto c5hfc;
       c5hfb: // global
           R1 = P64[R1 + 7];
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5hfc: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5hf7_info" {
     block_c5hf7_info:
         const _c5hf7;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.702409875 UTC

[section ""data" . Data.Either.fromRight_closure" {
     Data.Either.fromRight_closure:
         const Data.Either.fromRight_info;
 },
 Data.Either.fromRight_entry() //  [R2, R3]
         { []
         }
     {offset
       c5hfL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5hfM; else goto c5hfN;
       c5hfM: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Either.fromRight_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5hfN: // global
           I64[Sp - 16] = block_c5hfE_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5hfU; else goto c5hfF;
       u5hfU: // global
           call _c5hfE(R1) args: 0, res: 0, upd: 0;
       c5hfF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.fromRight_info" {
     Data.Either.fromRight_info:
         const Data.Either.fromRight_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5hfE() //  [R1]
         { []
         }
     {offset
       c5hfE: // global
           if (R1 & 7 == 1) goto c5hfI; else goto c5hfJ;
       c5hfI: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       c5hfJ: // global
           R1 = P64[R1 + 6];
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5hfE_info" {
     block_c5hfE_info:
         const _c5hfE;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.70759989 UTC

[section ""cstring" . Data.Either.$trModule4_bytes" {
     Data.Either.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.709325104 UTC

[section ""data" . Data.Either.$trModule3_closure" {
     Data.Either.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Either.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.711020322 UTC

[section ""cstring" . Data.Either.$trModule2_bytes" {
     Data.Either.$trModule2_bytes:
         I8[] [68,97,116,97,46,69,105,116,104,101,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.71274289 UTC

[section ""data" . Data.Either.$trModule1_closure" {
     Data.Either.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Either.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.714512253 UTC

[section ""data" . Data.Either.$trModule_closure" {
     Data.Either.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Either.$trModule3_closure+1;
         const Data.Either.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.716203626 UTC

[section ""data" . $krep_r5exf_closure" {
     $krep_r5exf_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.718155641 UTC

[section ""data" . $krep1_r5exg_closure" {
     $krep1_r5exg_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.719839264 UTC

[section ""cstring" . Data.Either.$tcEither2_bytes" {
     Data.Either.$tcEither2_bytes:
         I8[] [69,105,116,104,101,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.722296126 UTC

[section ""data" . Data.Either.$tcEither1_closure" {
     Data.Either.$tcEither1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Either.$tcEither2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.724216606 UTC

[section ""data" . Data.Either.$tcEither_closure" {
     Data.Either.$tcEither_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Either.$trModule_closure+1;
         const Data.Either.$tcEither1_closure+1;
         const GHC.Types.krep$*->*->*_closure;
         const 16074290893719807138;
         const 14958199358864670905;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.726106542 UTC

[section ""data" . $krep2_r5exh_closure" {
     $krep2_r5exh_closure:
         const :_con_info;
         const $krep_r5exf_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.72803915 UTC

[section ""data" . $krep3_r5exi_closure" {
     $krep3_r5exi_closure:
         const :_con_info;
         const $krep1_r5exg_closure+2;
         const $krep2_r5exh_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.729796269 UTC

[section ""data" . $krep4_r5exj_closure" {
     $krep4_r5exj_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Either.$tcEither_closure+1;
         const $krep3_r5exi_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.731712354 UTC

[section ""data" . Data.Either.$tc'Left1_closure" {
     Data.Either.$tc'Left1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep1_r5exg_closure+2;
         const $krep4_r5exj_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.734068325 UTC

[section ""cstring" . Data.Either.$tc'Left3_bytes" {
     Data.Either.$tc'Left3_bytes:
         I8[] [39,76,101,102,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.735753317 UTC

[section ""data" . Data.Either.$tc'Left2_closure" {
     Data.Either.$tc'Left2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Either.$tc'Left3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.737562648 UTC

[section ""data" . Data.Either.$tc'Left_closure" {
     Data.Either.$tc'Left_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Either.$trModule_closure+1;
         const Data.Either.$tc'Left2_closure+1;
         const Data.Either.$tc'Left1_closure+4;
         const 14915236324383360020;
         const 11027491440201056612;
         const 2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.739450314 UTC

[section ""data" . Data.Either.$tc'Right1_closure" {
     Data.Either.$tc'Right1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r5exf_closure+2;
         const $krep4_r5exj_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.741198897 UTC

[section ""cstring" . Data.Either.$tc'Right3_bytes" {
     Data.Either.$tc'Right3_bytes:
         I8[] [39,82,105,103,104,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.742928555 UTC

[section ""data" . Data.Either.$tc'Right2_closure" {
     Data.Either.$tc'Right2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Either.$tc'Right3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.744655032 UTC

[section ""data" . Data.Either.$tc'Right_closure" {
     Data.Either.$tc'Right_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Either.$trModule_closure+1;
         const Data.Either.$tc'Right2_closure+1;
         const Data.Either.$tc'Right1_closure+4;
         const 10395468319011834275;
         const 16371021254350888909;
         const 2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.747131702 UTC

[section ""data" . Data.Either.Left_closure" {
     Data.Either.Left_closure:
         const Data.Either.Left_info;
 },
 Data.Either.Left_entry() //  [R2]
         { []
         }
     {offset
       c5hgx: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5hgB; else goto c5hgA;
       c5hgB: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = Data.Either.Left_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5hgA: // global
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.Left_info" {
     Data.Either.Left_info:
         const Data.Either.Left_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.752810706 UTC

[section ""data" . Data.Either.Right_closure" {
     Data.Either.Right_closure:
         const Data.Either.Right_info;
 },
 Data.Either.Right_entry() //  [R2]
         { []
         }
     {offset
       c5hgN: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5hgR; else goto c5hgQ;
       c5hgR: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = Data.Either.Right_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5hgQ: // global
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = R2;
           R1 = Hp - 6;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.Right_info" {
     Data.Either.Right_info:
         const Data.Either.Right_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.756597683 UTC

[section ""cstring" . i5hgZ_str" {
     i5hgZ_str:
         I8[] [98,97,115,101,58,68,97,116,97,46,69,105,116,104,101,114,46,76,101,102,116]
 },
 Data.Either.Left_con_entry() //  [R1]
         { []
         }
     {offset
       c5hgY: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.Left_con_info" {
     Data.Either.Left_con_info:
         const Data.Either.Left_con_entry;
         const 1;
         const 2;
         const i5hgZ_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.759968783 UTC

[section ""cstring" . i5hh6_str" {
     i5hh6_str:
         I8[] [98,97,115,101,58,68,97,116,97,46,69,105,116,104,101,114,46,82,105,103,104,116]
 },
 Data.Either.Right_con_entry() //  [R1]
         { []
         }
     {offset
       c5hh5: // global
           R1 = R1 + 2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Either.Right_con_info" {
     Data.Either.Right_con_info:
         const Data.Either.Right_con_entry;
         const 1;
         const 4294967298;
         const i5hh6_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:16.763626183 UTC

[section ""relreadonly" . S5gu0_srt" {
     S5gu0_srt:
         const GHC.Err.errorWithoutStackTrace_closure;
         const Data.Either.$fSemigroupEither2_closure;
         const Data.Either.$fSemigroupEither_$cstimes_closure;
         const Data.Either.$fSemigroupEither1_closure;
         const Data.Either.$fShowEither4_closure;
         const Data.Either.$fShowEither2_closure;
         const Data.Either.$w$cshowsPrec_closure;
         const Data.Either.$fShowEither_$cshowsPrec_closure;
         const Data.Either.$fShowEither_$cshow_closure;
         const Data.Either.$fShowEither_$cshowList_closure;
         const Data.Either.$fShowEither_closure;
         const Text.Read.Lex.$wexpect_closure;
         const Data.Either.$fReadEither_lexeme1_closure;
         const Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_closure;
         const Data.Either.$fReadEither_lexeme_closure;
         const GHC.Read.list3_closure;
         const Data.Either.$fReadEither1_closure;
         const Data.Either.$fReadEither_$creadsPrec_closure;
         const GHC.Read.list_closure;
         const Data.Either.$fReadEither_$creadListPrec_closure;
         const Data.Either.$fReadEither_$creadList_closure;
         const Data.Either.$fReadEither_closure;
 }]

