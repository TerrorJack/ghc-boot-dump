
==================== Raw Cmm ====================
2018-03-16 16:00:06.465469022 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:00:06.466806109 UTC

[section ""data" . Data.Type.Coercion.testCoercion_closure" {
     Data.Type.Coercion.testCoercion_closure:
         const Data.Type.Coercion.testCoercion_info;
 },
 Data.Type.Coercion.testCoercion_entry() //  [R2]
         { []
         }
     {offset
       c5aa7: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.testCoercion_info" {
     Data.Type.Coercion.testCoercion_info:
         const Data.Type.Coercion.testCoercion_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.469974093 UTC

[section ""cstring" . lvl_r59Bb_bytes" {
     lvl_r59Bb_bytes:
         I8[] [68,97,116,97,46,84,121,112,101,46,67,111,101,114,99,105,111,110,46,116,111,69,110,117,109,58,32,98,97,100,32,97,114,103,117,109,101,110,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.472524136 UTC

[section ""data" . Data.Type.Coercion.$fEnumCoercion1_closure" {
     Data.Type.Coercion.$fEnumCoercion1_closure:
         const Data.Type.Coercion.$fEnumCoercion1_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Type.Coercion.$fEnumCoercion1_entry() //  [R1]
         { []
         }
     {offset
       c5aan: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5aao; else goto c5aap;
       c5aao: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5aap: // global
           (_c5aai::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5aai::I64 == 0) goto c5aak; else goto c5aaj;
       c5aak: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5aaj: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5aai::I64;
           I64[Sp - 24] = block_c5aal_info;
           R2 = lvl_r59Bb_bytes;
           Sp = Sp - 24;
           call GHC.CString.unpackCString#_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fEnumCoercion1_info" {
     Data.Type.Coercion.$fEnumCoercion1_info:
         const Data.Type.Coercion.$fEnumCoercion1_entry;
         const 0;
         const 4294967317;
         const S59Fe_srt;
 },
 _c5aal() //  [R1]
         { []
         }
     {offset
       c5aal: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5aal_info" {
     block_c5aal_info:
         const _c5aal;
         const 0;
         const 4294967326;
         const S59Fe_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.478633641 UTC

[section ""data" . Data.Type.Coercion.$fEnumCoercion_$ctoEnum_closure" {
     Data.Type.Coercion.$fEnumCoercion_$ctoEnum_closure:
         const Data.Type.Coercion.$fEnumCoercion_$ctoEnum_info;
         const 0;
 },
 Data.Type.Coercion.$fEnumCoercion_$ctoEnum_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aaK: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aaL; else goto c5aaM;
       c5aaL: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fEnumCoercion_$ctoEnum_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aaM: // global
           I64[Sp - 16] = block_c5aaH_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5aaZ; else goto c5aaI;
       u5aaZ: // global
           call _c5aaH(R1) args: 0, res: 0, upd: 0;
       c5aaI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fEnumCoercion_$ctoEnum_info" {
     Data.Type.Coercion.$fEnumCoercion_$ctoEnum_info:
         const Data.Type.Coercion.$fEnumCoercion_$ctoEnum_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S59Fe_srt+8;
 },
 _c5aaH() //  [R1]
         { []
         }
     {offset
       c5aaH: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5aaR; else goto c5aaQ;
       c5aaR: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5aaQ: // global
           if (I64[R1 + 7] == 0) goto c5aaY; else goto c5aaU;
       c5aaY: // global
           I64[Hp - 8] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5aaU: // global
           Hp = Hp - 16;
           R1 = Data.Type.Coercion.$fEnumCoercion1_closure;
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aaH_info" {
     block_c5aaH_info:
         const _c5aaH;
         const 1;
         const 4294967326;
         const S59Fe_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.485865159 UTC

[section ""data" . Data.Type.Coercion.$w$cenumFromTo_closure" {
     Data.Type.Coercion.$w$cenumFromTo_closure:
         const Data.Type.Coercion.$w$cenumFromTo_info;
         const 0;
 },
 sat_s59BI_entry() //  [R1]
         { []
         }
     {offset
       c5abu: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5abv; else goto c5abw;
       c5abv: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5abw: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s59BG::I64 = I64[R1 + 24];
           if (_s59BG::I64 != 0) goto c5abs; else goto c5abt;
       c5abs: // global
           R2 = _s59BG::I64 + 1;
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call go_s59BC_entry(R2, R1) args: 24, res: 0, upd: 24;
       c5abt: // global
           R1 = []_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s59BI_info" {
     sat_s59BI_info:
         const sat_s59BI_entry;
         const 4294967297;
         const 4294967315;
         const S59Fe_srt+8;
 },
 sat_s59BF_entry() //  [R1]
         { []
         }
     {offset
       c5abH: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5abI; else goto c5abJ;
       c5abI: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5abJ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 24] == 0) goto c5abG; else goto c5abF;
       c5abG: // global
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c5abF: // global
           R1 = Data.Type.Coercion.$fEnumCoercion1_closure;
           Sp = Sp - 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s59BF_info" {
     sat_s59BF_info:
         const sat_s59BF_entry;
         const 4294967297;
         const 4294967315;
         const S59Fe_srt+8;
 },
 go_s59BC_entry() //  [R1, R2]
         { []
         }
     {offset
       c5abL: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto c5abP; else goto c5abO;
       c5abP: // global
           HpAlloc = 88;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5abO: // global
           _s59BB::P64 = P64[R1 + 7];
           I64[Hp - 80] = sat_s59BI_info;
           P64[Hp - 64] = R1;
           I64[Hp - 56] = R2;
           I64[Hp - 48] = sat_s59BF_info;
           P64[Hp - 32] = _s59BB::P64;
           I64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 80;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . go_s59BC_info" {
     go_s59BC_info:
         const go_s59BC_entry;
         const 1;
         const 4294967305;
         const 4294967300;
         const S59Fe_srt+8;
 },
 Data.Type.Coercion.$w$cenumFromTo_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5abQ: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5abU; else goto c5abT;
       c5abU: // global
           HpAlloc = 32;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$w$cenumFromTo_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5abT: // global
           I64[Hp - 24] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp - 16] = R2;
           I64[Hp - 8] = go_s59BC_info;
           P64[Hp] = Hp - 23;
           R2 = 0;
           R1 = Hp - 7;
           call go_s59BC_entry(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$w$cenumFromTo_info" {
     Data.Type.Coercion.$w$cenumFromTo_info:
         const Data.Type.Coercion.$w$cenumFromTo_entry;
         const 0;
         const 21474836494;
         const 12884901911;
         const S59Fe_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.496371556 UTC

[section ""data" . Data.Type.Coercion.$fEnumCoercion_$cenumFromTo_closure" {
     Data.Type.Coercion.$fEnumCoercion_$cenumFromTo_closure:
         const Data.Type.Coercion.$fEnumCoercion_$cenumFromTo_info;
         const 0;
 },
 Data.Type.Coercion.$fEnumCoercion_$cenumFromTo_entry() //  [R2, R3,
                                                             R4]
         { []
         }
     {offset
       c5aco: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5acs; else goto c5act;
       c5acs: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fEnumCoercion_$cenumFromTo_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5act: // global
           I64[Sp - 24] = block_c5acl_info;
           R1 = R3;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5acB; else goto c5acm;
       u5acB: // global
           call _c5acl(R1) args: 0, res: 0, upd: 0;
       c5acm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fEnumCoercion_$cenumFromTo_info" {
     Data.Type.Coercion.$fEnumCoercion_$cenumFromTo_info:
         const Data.Type.Coercion.$fEnumCoercion_$cenumFromTo_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S59Fe_srt+24;
 },
 _c5acl() //  [R1]
         { []
         }
     {offset
       c5acl: // global
           I64[Sp] = block_c5acr_info;
           _s59BM::P64 = R1;
           R1 = P64[Sp + 16];
           P64[Sp + 16] = _s59BM::P64;
           if (R1 & 7 != 0) goto u5acA; else goto c5acv;
       u5acA: // global
           call _c5acr(R1) args: 0, res: 0, upd: 0;
       c5acv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5acl_info" {
     block_c5acl_info:
         const _c5acl;
         const 2;
         const 4294967326;
         const S59Fe_srt+24;
 },
 _c5acr() //  [R1]
         { []
         }
     {offset
       c5acr: // global
           R4 = R1;
           R3 = P64[Sp + 16];
           R2 = P64[Sp + 8];
           Sp = Sp + 24;
           call Data.Type.Coercion.$w$cenumFromTo_entry(R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5acr_info" {
     block_c5acr_info:
         const _c5acr;
         const 2;
         const 4294967326;
         const S59Fe_srt+24;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.503220295 UTC

[section ""data" . lvl1_r59Bc_closure" {
     lvl1_r59Bc_closure:
         const lvl1_r59Bc_info;
         const 0;
         const 0;
         const 0;
 },
 lvl1_r59Bc_entry() //  [R1]
         { []
         }
     {offset
       c5acV: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5acW; else goto c5acX;
       c5acW: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5acX: // global
           (_c5acS::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5acS::I64 == 0) goto c5acU; else goto c5acT;
       c5acU: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5acT: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5acS::I64;
           R3 = 0;
           R2 = 0;
           Sp = Sp - 16;
           call GHC.Enum.efdInt_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl1_r59Bc_info" {
     lvl1_r59Bc_info:
         const lvl1_r59Bc_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.508126933 UTC

[section ""data" . Data.Type.Coercion.$fEnumCoercion_$cenumFromThen_closure" {
     Data.Type.Coercion.$fEnumCoercion_$cenumFromThen_closure:
         const Data.Type.Coercion.$fEnumCoercion_$cenumFromThen_info;
         const 0;
 },
 sat_s59BX_entry() //  [R1, R2]
         { []
         }
     {offset
       c5ado: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Type.Coercion.$fEnumCoercion_$ctoEnum_entry(R3,
                                                                 R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s59BX_info" {
     sat_s59BX_info:
         const sat_s59BX_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S59Fe_srt+16;
 },
 Data.Type.Coercion.$fEnumCoercion_$cenumFromThen_entry() //  [R2,
                                                               R3, R4]
         { []
         }
     {offset
       c5adr: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5ads; else goto c5adt;
       c5ads: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fEnumCoercion_$cenumFromThen_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5adt: // global
           I64[Sp - 24] = block_c5ad9_info;
           R1 = R3;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5adz; else goto c5ada;
       u5adz: // global
           call _c5ad9() args: 0, res: 0, upd: 0;
       c5ada: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fEnumCoercion_$cenumFromThen_info" {
     Data.Type.Coercion.$fEnumCoercion_$cenumFromThen_info:
         const Data.Type.Coercion.$fEnumCoercion_$cenumFromThen_entry;
         const 0;
         const 107374182414;
         const 12884901911;
         const S59Fe_srt+16;
 },
 _c5ad9() //  []
         { []
         }
     {offset
       c5ad9: // global
           I64[Sp] = block_c5ade_info;
           R1 = P64[Sp + 16];
           if (R1 & 7 != 0) goto u5ady; else goto c5adf;
       u5ady: // global
           call _c5ade(R1) args: 0, res: 0, upd: 0;
       c5adf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ad9_info" {
     block_c5ad9_info:
         const _c5ad9;
         const 2;
         const 73014444062;
         const S59Fe_srt+16;
 },
 _c5ade() //  [R1]
         { []
         }
     {offset
       c5ade: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5adx; else goto c5adw;
       c5adx: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5adw: // global
           I64[Hp - 8] = sat_s59BX_info;
           P64[Hp] = P64[Sp + 8];
           R3 = lvl1_r59Bc_closure;
           R2 = Hp - 7;
           Sp = Sp + 24;
           call GHC.Base.map_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ade_info" {
     block_c5ade_info:
         const _c5ade;
         const 130;
         const 73014444062;
         const S59Fe_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.51822893 UTC

[section ""data" . Data.Type.Coercion.$w$cenumFrom_closure" {
     Data.Type.Coercion.$w$cenumFrom_closure:
         const Data.Type.Coercion.$w$cenumFrom_info;
         const 0;
 },
 sat_s59C7_entry() //  [R1]
         { []
         }
     {offset
       c5ae9: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aea; else goto c5aeb;
       c5aea: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5aeb: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s59C5::I64 = I64[R1 + 24];
           if (_s59C5::I64 != 9223372036854775807) goto c5ae7; else goto c5ae8;
       c5ae7: // global
           R2 = _s59C5::I64 + 1;
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call go_s59C1_entry(R2, R1) args: 24, res: 0, upd: 24;
       c5ae8: // global
           R1 = []_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s59C7_info" {
     sat_s59C7_info:
         const sat_s59C7_entry;
         const 4294967297;
         const 4294967315;
         const S59Fe_srt+8;
 },
 sat_s59C4_entry() //  [R1]
         { []
         }
     {offset
       c5aem: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aen; else goto c5aeo;
       c5aen: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5aeo: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 24] == 0) goto c5ael; else goto c5aek;
       c5ael: // global
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c5aek: // global
           R1 = Data.Type.Coercion.$fEnumCoercion1_closure;
           Sp = Sp - 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s59C4_info" {
     sat_s59C4_info:
         const sat_s59C4_entry;
         const 4294967297;
         const 4294967315;
         const S59Fe_srt+8;
 },
 go_s59C1_entry() //  [R1, R2]
         { []
         }
     {offset
       c5aeq: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto c5aeu; else goto c5aet;
       c5aeu: // global
           HpAlloc = 88;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5aet: // global
           _s59C0::P64 = P64[R1 + 7];
           I64[Hp - 80] = sat_s59C7_info;
           P64[Hp - 64] = R1;
           I64[Hp - 56] = R2;
           I64[Hp - 48] = sat_s59C4_info;
           P64[Hp - 32] = _s59C0::P64;
           I64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 80;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . go_s59C1_info" {
     go_s59C1_info:
         const go_s59C1_entry;
         const 1;
         const 4294967305;
         const 4294967300;
         const S59Fe_srt+8;
 },
 Data.Type.Coercion.$w$cenumFrom_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aev: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5aez; else goto c5aey;
       c5aez: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$w$cenumFrom_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aey: // global
           I64[Hp - 24] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp - 16] = R2;
           I64[Hp - 8] = go_s59C1_info;
           P64[Hp] = Hp - 23;
           R2 = 0;
           R1 = Hp - 7;
           call go_s59C1_entry(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$w$cenumFrom_info" {
     Data.Type.Coercion.$w$cenumFrom_info:
         const Data.Type.Coercion.$w$cenumFrom_entry;
         const 0;
         const 279172874254;
         const 8589934607;
         const S59Fe_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.528839391 UTC

[section ""data" . Data.Type.Coercion.$fEnumCoercion_$cenumFrom_closure" {
     Data.Type.Coercion.$fEnumCoercion_$cenumFrom_closure:
         const Data.Type.Coercion.$fEnumCoercion_$cenumFrom_info;
         const 0;
 },
 Data.Type.Coercion.$fEnumCoercion_$cenumFrom_entry() //  [R2, R3]
         { []
         }
     {offset
       c5af4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5af5; else goto c5af6;
       c5af5: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fEnumCoercion_$cenumFrom_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5af6: // global
           I64[Sp - 16] = block_c5af1_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5afa; else goto c5af2;
       u5afa: // global
           call _c5af1(R1) args: 0, res: 0, upd: 0;
       c5af2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fEnumCoercion_$cenumFrom_info" {
     Data.Type.Coercion.$fEnumCoercion_$cenumFrom_info:
         const Data.Type.Coercion.$fEnumCoercion_$cenumFrom_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S59Fe_srt+56;
 },
 _c5af1() //  [R1]
         { []
         }
     {offset
       c5af1: // global
           R3 = R1;
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call Data.Type.Coercion.$w$cenumFrom_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5af1_info" {
     block_c5af1_info:
         const _c5af1;
         const 1;
         const 4294967326;
         const S59Fe_srt+56;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.53710205 UTC

[section ""data" . Data.Type.Coercion.$w$cenumFromThenTo_closure" {
     Data.Type.Coercion.$w$cenumFromThenTo_closure:
         const Data.Type.Coercion.$w$cenumFromThenTo_info;
         const 0;
 },
 sat_s59Cm_entry() //  [R1]
         { []
         }
     {offset
       c5afF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5afG; else goto c5afH;
       c5afG: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5afH: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = I64[R1 + 24];
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call go_up_s59Ch_entry(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s59Cm_info" {
     sat_s59Cm_info:
         const sat_s59Cm_entry;
         const 4294967297;
         const 4294967315;
         const S59Fe_srt+8;
 },
 sat_s59Cl_entry() //  [R1]
         { []
         }
     {offset
       c5afQ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5afR; else goto c5afS;
       c5afR: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5afS: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 24] == 0) goto c5afP; else goto c5afO;
       c5afP: // global
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c5afO: // global
           R1 = Data.Type.Coercion.$fEnumCoercion1_closure;
           Sp = Sp - 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s59Cl_info" {
     sat_s59Cl_info:
         const sat_s59Cl_entry;
         const 4294967297;
         const 4294967315;
         const S59Fe_srt+8;
 },
 sat_s59Co_entry() //  [R1]
         { []
         }
     {offset
       c5ag2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5ag3; else goto c5ag4;
       c5ag3: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5ag4: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 24] == 0) goto c5ag1; else goto c5ag0;
       c5ag1: // global
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c5ag0: // global
           R1 = Data.Type.Coercion.$fEnumCoercion1_closure;
           Sp = Sp - 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s59Co_info" {
     sat_s59Co_info:
         const sat_s59Co_entry;
         const 4294967297;
         const 4294967315;
         const S59Fe_srt+8;
 },
 go_up_s59Ch_entry() //  [R1, R2]
         { []
         }
     {offset
       c5ag8: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto c5agc; else goto c5agb;
       c5agc: // global
           HpAlloc = 88;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5agb: // global
           _s59Cg::P64 = P64[R1 + 7];
           if (%MO_S_Le_W64(R2, 0)) goto c5ag6; else goto c5ag7;
       c5ag6: // global
           I64[Hp - 80] = sat_s59Cm_info;
           P64[Hp - 64] = R1;
           I64[Hp - 56] = R2;
           I64[Hp - 48] = sat_s59Cl_info;
           P64[Hp - 32] = _s59Cg::P64;
           I64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 80;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5ag7: // global
           I64[Hp - 80] = sat_s59Co_info;
           P64[Hp - 64] = _s59Cg::P64;
           I64[Hp - 56] = R2;
           I64[Hp - 48] = :_con_info;
           P64[Hp - 40] = Hp - 80;
           P64[Hp - 32] = GHC.Types.[]_closure+1;
           _c5age::P64 = Hp - 46;
           Hp = Hp - 32;
           R1 = _c5age::P64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . go_up_s59Ch_info" {
     go_up_s59Ch_info:
         const go_up_s59Ch_entry;
         const 1;
         const 4294967305;
         const 4294967300;
         const S59Fe_srt+8;
 },
 sat_s59Cp_entry() //  [R1]
         { []
         }
     {offset
       c5agf: // global
           _s59Cp::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5agg; else goto c5agh;
       c5agh: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5agj; else goto c5agi;
       c5agj: // global
           HpAlloc = 16;
           goto c5agg;
       c5agg: // global
           R1 = _s59Cp::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5agi: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s59Cp::P64;
           _s59Cg::P64 = P64[_s59Cp::P64 + 16];
           I64[Hp - 8] = go_up_s59Ch_info;
           P64[Hp] = _s59Cg::P64;
           R2 = 0;
           R1 = Hp - 7;
           Sp = Sp - 16;
           call go_up_s59Ch_entry(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s59Cp_info" {
     sat_s59Cp_info:
         const sat_s59Cp_entry;
         const 1;
         const 4294967312;
         const S59Fe_srt+8;
 },
 Data.Type.Coercion.$w$cenumFromThenTo_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5agk: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c5ago; else goto c5agn;
       c5ago: // global
           HpAlloc = 40;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$w$cenumFromThenTo_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5agn: // global
           I64[Hp - 32] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = sat_s59Cp_info;
           _c5afo::P64 = Hp - 31;
           P64[Hp] = _c5afo::P64;
           R2 = Hp - 16;
           R1 = _c5afo::P64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$w$cenumFromThenTo_info" {
     Data.Type.Coercion.$w$cenumFromThenTo_info:
         const Data.Type.Coercion.$w$cenumFromThenTo_entry;
         const 0;
         const 1103806595086;
         const 17179869208;
         const S59Fe_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.5531708 UTC

[section ""data" . Data.Type.Coercion.$fEnumCoercion_$cenumFromThenTo_closure" {
     Data.Type.Coercion.$fEnumCoercion_$cenumFromThenTo_closure:
         const Data.Type.Coercion.$fEnumCoercion_$cenumFromThenTo_info;
         const 0;
 },
 Data.Type.Coercion.$fEnumCoercion_$cenumFromThenTo_entry() //  [R2,
                                                                 R3, R4, R5]
         { []
         }
     {offset
       c5ah3: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5ahj; else goto c5ahk;
       c5ahj: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fEnumCoercion_$cenumFromThenTo_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5ahk: // global
           I64[Sp - 32] = block_c5ah0_info;
           R1 = R3;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5ahs; else goto c5ah1;
       u5ahs: // global
           call _c5ah0(R1) args: 0, res: 0, upd: 0;
       c5ah1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fEnumCoercion_$cenumFromThenTo_info" {
     Data.Type.Coercion.$fEnumCoercion_$cenumFromThenTo_info:
         const Data.Type.Coercion.$fEnumCoercion_$cenumFromThenTo_entry;
         const 0;
         const 12884901902;
         const 17179869208;
         const S59Fe_srt+72;
 },
 _c5ah0() //  [R1]
         { []
         }
     {offset
       c5ah0: // global
           I64[Sp] = block_c5ah6_info;
           _s59Cu::P64 = R1;
           R1 = P64[Sp + 16];
           P64[Sp + 16] = _s59Cu::P64;
           if (R1 & 7 != 0) goto u5ahr; else goto c5ah7;
       u5ahr: // global
           call _c5ah6(R1) args: 0, res: 0, upd: 0;
       c5ah7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ah0_info" {
     block_c5ah0_info:
         const _c5ah0;
         const 3;
         const 4294967326;
         const S59Fe_srt+72;
 },
 _c5ah6() //  [R1]
         { []
         }
     {offset
       c5ah6: // global
           I64[Sp] = block_c5ahb_info;
           _s59Cw::P64 = R1;
           R1 = P64[Sp + 24];
           P64[Sp + 24] = _s59Cw::P64;
           if (R1 & 7 != 0) goto u5aht; else goto c5ahc;
       u5aht: // global
           call _c5ahb(R1) args: 0, res: 0, upd: 0;
       c5ahc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ah6_info" {
     block_c5ah6_info:
         const _c5ah6;
         const 3;
         const 4294967326;
         const S59Fe_srt+72;
 },
 _c5ahb() //  [R1]
         { []
         }
     {offset
       c5ahb: // global
           _s59Cw::P64 = P64[Sp + 24];
           I64[Sp + 24] = block_c5ahg_info;
           R5 = R1;
           R4 = _s59Cw::P64;
           R3 = P64[Sp + 16];
           R2 = P64[Sp + 8];
           Sp = Sp + 24;
           call Data.Type.Coercion.$w$cenumFromThenTo_entry(R5,
                                                            R4,
                                                            R3,
                                                            R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ahb_info" {
     block_c5ahb_info:
         const _c5ahb;
         const 3;
         const 4294967326;
         const S59Fe_srt+72;
 },
 _c5ahg() //  [R1, R2]
         { []
         }
     {offset
       c5ahg: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5ahq; else goto c5ahp;
       c5ahq: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c5ahp: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ahg_info" {
     block_c5ahg_info:
         const _c5ahg;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.563067377 UTC

[section ""data" . lvl2_r59Bd_closure" {
     lvl2_r59Bd_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.565509976 UTC

[section ""data" . lvl3_r59Be_closure" {
     lvl3_r59Be_closure:
         const lvl3_r59Be_info;
 },
 lvl3_r59Be_entry() //  [R2]
         { []
         }
     {offset
       c5ahX: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5ahY; else goto c5ahZ;
       c5ahY: // global
           R2 = R2;
           R1 = lvl3_r59Be_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5ahZ: // global
           I64[Sp - 8] = block_c5ahU_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5ai3; else goto c5ahV;
       u5ai3: // global
           call _c5ahU() args: 0, res: 0, upd: 0;
       c5ahV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . lvl3_r59Be_info" {
     lvl3_r59Be_info:
         const lvl3_r59Be_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5ahU() //  []
         { []
         }
     {offset
       c5ahU: // global
           R1 = lvl2_r59Bd_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ahU_info" {
     block_c5ahU_info:
         const _c5ahU;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.571537108 UTC

[section ""data" . lvl4_r59Bf_closure" {
     lvl4_r59Bf_closure:
         const lvl4_r59Bf_info;
         const 0;
 },
 lvl4_r59Bf_entry() //  [R2]
         { []
         }
     {offset
       c5ail: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5aim; else goto c5ain;
       c5aim: // global
           R2 = R2;
           R1 = lvl4_r59Bf_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5ain: // global
           I64[Sp - 8] = block_c5aii_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5air; else goto c5aij;
       u5air: // global
           call _c5aii() args: 0, res: 0, upd: 0;
       c5aij: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . lvl4_r59Bf_info" {
     lvl4_r59Bf_info:
         const lvl4_r59Bf_entry;
         const 0;
         const 4402341478414;
         const 4294967301;
         const S59Fe_srt+8;
 },
 _c5aii() //  []
         { []
         }
     {offset
       c5aii: // global
           R1 = Data.Type.Coercion.$fEnumCoercion1_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aii_info" {
     block_c5aii_info:
         const _c5aii;
         const 0;
         const 4294967326;
         const S59Fe_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.578586448 UTC

[section ""data" . Data.Type.Coercion.$fEnumCoercion_closure" {
     Data.Type.Coercion.$fEnumCoercion_closure:
         const Data.Type.Coercion.$fEnumCoercion_info;
         const 0;
 },
 sat_s59CO_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       c5aiL: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Data.Type.Coercion.$fEnumCoercion_$cenumFromThenTo_entry(R5,
                                                                         R4,
                                                                         R3,
                                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s59CO_info" {
     sat_s59CO_info:
         const sat_s59CO_entry;
         const 1;
         const 4294967305;
         const 12884901911;
         const S59Fe_srt+80;
 },
 sat_s59CN_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5aiT: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Type.Coercion.$fEnumCoercion_$cenumFromTo_entry(R4,
                                                                     R3,
                                                                     R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s59CN_info" {
     sat_s59CN_info:
         const sat_s59CN_entry;
         const 1;
         const 4294967305;
         const 8589934607;
         const S59Fe_srt+32;
 },
 sat_s59CM_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5aj1: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Type.Coercion.$fEnumCoercion_$cenumFromThen_entry(R4,
                                                                       R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s59CM_info" {
     sat_s59CM_info:
         const sat_s59CM_entry;
         const 1;
         const 4294967305;
         const 8589934607;
         const S59Fe_srt+40;
 },
 sat_s59CL_entry() //  [R1, R2]
         { []
         }
     {offset
       c5aj9: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Type.Coercion.$fEnumCoercion_$cenumFrom_entry(R3,
                                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s59CL_info" {
     sat_s59CL_info:
         const sat_s59CL_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S59Fe_srt+64;
 },
 sat_s59CK_entry() //  [R1, R2]
         { []
         }
     {offset
       c5ajh: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Type.Coercion.$fEnumCoercion_$ctoEnum_entry(R3,
                                                                 R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s59CK_info" {
     sat_s59CK_info:
         const sat_s59CK_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S59Fe_srt+16;
 },
 Data.Type.Coercion.$fEnumCoercion_entry() //  [R2]
         { []
         }
     {offset
       c5ajl: // global
           Hp = Hp + 152;
           if (Hp > HpLim) (likely: False) goto c5ajp; else goto c5ajo;
       c5ajp: // global
           HpAlloc = 152;
           R2 = R2;
           R1 = Data.Type.Coercion.$fEnumCoercion_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5ajo: // global
           I64[Hp - 144] = sat_s59CO_info;
           P64[Hp - 136] = R2;
           I64[Hp - 128] = sat_s59CN_info;
           P64[Hp - 120] = R2;
           I64[Hp - 112] = sat_s59CM_info;
           P64[Hp - 104] = R2;
           I64[Hp - 96] = sat_s59CL_info;
           P64[Hp - 88] = R2;
           I64[Hp - 80] = sat_s59CK_info;
           P64[Hp - 72] = R2;
           I64[Hp - 64] = GHC.Enum.C:Enum_con_info;
           P64[Hp - 56] = lvl4_r59Bf_closure+1;
           P64[Hp - 48] = lvl4_r59Bf_closure+1;
           P64[Hp - 40] = Hp - 79;
           P64[Hp - 32] = lvl3_r59Be_closure+1;
           P64[Hp - 24] = Hp - 95;
           P64[Hp - 16] = Hp - 110;
           P64[Hp - 8] = Hp - 126;
           P64[Hp] = Hp - 141;
           R1 = Hp - 63;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fEnumCoercion_info" {
     Data.Type.Coercion.$fEnumCoercion_info:
         const Data.Type.Coercion.$fEnumCoercion_entry;
         const 0;
         const 8027293876238;
         const 4294967301;
         const S59Fe_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.591076652 UTC

[section ""data" . Data.Type.Coercion.$fTestCoercionk:~:_$ctestCoercion_closure" {
     Data.Type.Coercion.$fTestCoercionk:~:_$ctestCoercion_closure:
         const Data.Type.Coercion.$fTestCoercionk:~:_$ctestCoercion_info;
 },
 Data.Type.Coercion.$fTestCoercionk:~:_$ctestCoercion_entry() //  [R2,
                                                                   R3]
         { []
         }
     {offset
       c5ajW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5ak7; else goto c5ak8;
       c5ak7: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fTestCoercionk:~:_$ctestCoercion_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5ak8: // global
           I64[Sp - 16] = block_c5ajT_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5ake; else goto c5ajU;
       u5ake: // global
           call _c5ajT() args: 0, res: 0, upd: 0;
       c5ajU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fTestCoercionk:~:_$ctestCoercion_info" {
     Data.Type.Coercion.$fTestCoercionk:~:_$ctestCoercion_info:
         const Data.Type.Coercion.$fTestCoercionk:~:_$ctestCoercion_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5ajT() //  []
         { []
         }
     {offset
       c5ajT: // global
           _s59CQ::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5ajZ_info;
           R1 = _s59CQ::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5akd; else goto c5ak0;
       u5akd: // global
           call _c5ajZ(R1) args: 0, res: 0, upd: 0;
       c5ak0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ajT_info" {
     block_c5ajT_info:
         const _c5ajT;
         const 1;
         const 30;
 },
 _c5ajZ() //  [R1]
         { []
         }
     {offset
       c5ajZ: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5akc; else goto c5akb;
       c5akc: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5akb: // global
           I64[Hp - 40] = GHC.Types.MkCoercible_con_info;
           I64[Hp - 24] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp - 16] = Hp - 39;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ajZ_info" {
     block_c5ajZ_info:
         const _c5ajZ;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.598099165 UTC

[section ""data" . Data.Type.Coercion.$fTestCoercionk:~:_closure" {
     Data.Type.Coercion.$fTestCoercionk:~:_closure:
         const Data.Type.Coercion.$fTestCoercionk:~:_info;
 },
 Data.Type.Coercion.$fTestCoercionk:~:_entry() //  [R2, R3]
         { []
         }
     {offset
       c5akz: // global
           R3 = R3;
           R2 = R2;
           call Data.Type.Coercion.$fTestCoercionk:~:_$ctestCoercion_entry(R3,
                                                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fTestCoercionk:~:_info" {
     Data.Type.Coercion.$fTestCoercionk:~:_info:
         const Data.Type.Coercion.$fTestCoercionk:~:_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.602383598 UTC

[section ""data" . Data.Type.Coercion.$fTestCoercionk:~~:_$ctestCoercion_closure" {
     Data.Type.Coercion.$fTestCoercionk:~~:_$ctestCoercion_closure:
         const Data.Type.Coercion.$fTestCoercionk:~~:_$ctestCoercion_info;
 },
 Data.Type.Coercion.$fTestCoercionk:~~:_$ctestCoercion_entry() //  [R2,
                                                                    R3]
         { []
         }
     {offset
       c5akN: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5akY; else goto c5akZ;
       c5akY: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fTestCoercionk:~~:_$ctestCoercion_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5akZ: // global
           I64[Sp - 16] = block_c5akK_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5al5; else goto c5akL;
       u5al5: // global
           call _c5akK() args: 0, res: 0, upd: 0;
       c5akL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fTestCoercionk:~~:_$ctestCoercion_info" {
     Data.Type.Coercion.$fTestCoercionk:~~:_$ctestCoercion_info:
         const Data.Type.Coercion.$fTestCoercionk:~~:_$ctestCoercion_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5akK() //  []
         { []
         }
     {offset
       c5akK: // global
           _s59CW::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5akQ_info;
           R1 = _s59CW::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5al4; else goto c5akR;
       u5al4: // global
           call _c5akQ(R1) args: 0, res: 0, upd: 0;
       c5akR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5akK_info" {
     block_c5akK_info:
         const _c5akK;
         const 1;
         const 30;
 },
 _c5akQ() //  [R1]
         { []
         }
     {offset
       c5akQ: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5al3; else goto c5al2;
       c5al3: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5al2: // global
           I64[Hp - 40] = GHC.Types.MkCoercible_con_info;
           I64[Hp - 24] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp - 16] = Hp - 39;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5akQ_info" {
     block_c5akQ_info:
         const _c5akQ;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.610210241 UTC

[section ""data" . Data.Type.Coercion.$fTestCoercionk:~~:_closure" {
     Data.Type.Coercion.$fTestCoercionk:~~:_closure:
         const Data.Type.Coercion.$fTestCoercionk:~~:_info;
 },
 Data.Type.Coercion.$fTestCoercionk:~~:_entry() //  [R2, R3]
         { []
         }
     {offset
       c5alq: // global
           R3 = R3;
           R2 = R2;
           call Data.Type.Coercion.$fTestCoercionk:~~:_$ctestCoercion_entry(R3,
                                                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fTestCoercionk:~~:_info" {
     Data.Type.Coercion.$fTestCoercionk:~~:_info:
         const Data.Type.Coercion.$fTestCoercionk:~~:_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.614830354 UTC

[section ""data" . Data.Type.Coercion.$fTestCoercionkCoercion_$ctestCoercion_closure" {
     Data.Type.Coercion.$fTestCoercionkCoercion_$ctestCoercion_closure:
         const Data.Type.Coercion.$fTestCoercionkCoercion_$ctestCoercion_info;
 },
 Data.Type.Coercion.$fTestCoercionkCoercion_$ctestCoercion_entry() //  [R2,
                                                                        R3]
         { []
         }
     {offset
       c5alE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5alT; else goto c5alU;
       c5alT: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fTestCoercionkCoercion_$ctestCoercion_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5alU: // global
           I64[Sp - 16] = block_c5alB_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5am2; else goto c5alC;
       u5am2: // global
           call _c5alB(R1) args: 0, res: 0, upd: 0;
       c5alC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fTestCoercionkCoercion_$ctestCoercion_info" {
     Data.Type.Coercion.$fTestCoercionkCoercion_$ctestCoercion_info:
         const Data.Type.Coercion.$fTestCoercionkCoercion_$ctestCoercion_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5alB() //  [R1]
         { []
         }
     {offset
       c5alB: // global
           I64[Sp] = block_c5alH_info;
           _s59D4::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s59D4::P64;
           if (R1 & 7 != 0) goto u5am1; else goto c5alI;
       u5am1: // global
           call _c5alH(R1) args: 0, res: 0, upd: 0;
       c5alI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5alB_info" {
     block_c5alB_info:
         const _c5alB;
         const 1;
         const 30;
 },
 _c5alH() //  [R1]
         { []
         }
     {offset
       c5alH: // global
           I64[Sp] = block_c5alM_info;
           R2 = P64[Sp + 8];
           P64[Sp + 8] = P64[R1 + 7];
           call GHC.Types.coercible_sel_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5alH_info" {
     block_c5alH_info:
         const _c5alH;
         const 1;
         const 30;
 },
 _c5alM() //  []
         { []
         }
     {offset
       c5alM: // global
           _s59D6::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5alO_info;
           R2 = _s59D6::P64;
           Sp = Sp + 8;
           call GHC.Types.coercible_sel_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5alM_info" {
     block_c5alM_info:
         const _c5alM;
         const 1;
         const 30;
 },
 _c5alO() //  []
         { []
         }
     {offset
       c5alO: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5am0; else goto c5alZ;
       c5am0: // global
           HpAlloc = 48;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c5alZ: // global
           I64[Hp - 40] = GHC.Types.MkCoercible_con_info;
           I64[Hp - 24] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp - 16] = Hp - 39;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5alO_info" {
     block_c5alO_info:
         const _c5alO;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.624929853 UTC

[section ""data" . Data.Type.Coercion.$fTestCoercionkCoercion_closure" {
     Data.Type.Coercion.$fTestCoercionkCoercion_closure:
         const Data.Type.Coercion.$fTestCoercionkCoercion_info;
 },
 Data.Type.Coercion.$fTestCoercionkCoercion_entry() //  [R2, R3]
         { []
         }
     {offset
       c5amu: // global
           R3 = R3;
           R2 = R2;
           call Data.Type.Coercion.$fTestCoercionkCoercion_$ctestCoercion_entry(R3,
                                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fTestCoercionkCoercion_info" {
     Data.Type.Coercion.$fTestCoercionkCoercion_info:
         const Data.Type.Coercion.$fTestCoercionkCoercion_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.62902625 UTC

[section ""data" . Data.Type.Coercion.$fEqCoercion_$c==_closure" {
     Data.Type.Coercion.$fEqCoercion_$c==_closure:
         const Data.Type.Coercion.$fEqCoercion_$c==_info;
 },
 Data.Type.Coercion.$fEqCoercion_$c==_entry() //  [R2, R3]
         { []
         }
     {offset
       c5amI: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5amM; else goto c5amN;
       c5amM: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fEqCoercion_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5amN: // global
           I64[Sp - 16] = block_c5amF_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5amV; else goto c5amG;
       u5amV: // global
           call _c5amF() args: 0, res: 0, upd: 0;
       c5amG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fEqCoercion_$c==_info" {
     Data.Type.Coercion.$fEqCoercion_$c==_info:
         const Data.Type.Coercion.$fEqCoercion_$c==_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5amF() //  []
         { []
         }
     {offset
       c5amF: // global
           _s59Da::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5amL_info;
           R1 = _s59Da::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5amU; else goto c5amP;
       u5amU: // global
           call _c5amL() args: 0, res: 0, upd: 0;
       c5amP: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5amF_info" {
     block_c5amF_info:
         const _c5amF;
         const 1;
         const 30;
 },
 _c5amL() //  []
         { []
         }
     {offset
       c5amL: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5amL_info" {
     block_c5amL_info:
         const _c5amL;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.636772071 UTC

[section ""data" . Data.Type.Coercion.$fEqCoercion_$c/=_closure" {
     Data.Type.Coercion.$fEqCoercion_$c/=_closure:
         const Data.Type.Coercion.$fEqCoercion_$c/=_info;
 },
 Data.Type.Coercion.$fEqCoercion_$c/=_entry() //  [R2, R3]
         { []
         }
     {offset
       c5anh: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5anl; else goto c5anm;
       c5anl: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fEqCoercion_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5anm: // global
           I64[Sp - 16] = block_c5ane_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5anu; else goto c5anf;
       u5anu: // global
           call _c5ane() args: 0, res: 0, upd: 0;
       c5anf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fEqCoercion_$c/=_info" {
     Data.Type.Coercion.$fEqCoercion_$c/=_info:
         const Data.Type.Coercion.$fEqCoercion_$c/=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5ane() //  []
         { []
         }
     {offset
       c5ane: // global
           _s59Dg::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5ank_info;
           R1 = _s59Dg::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5ant; else goto c5ano;
       u5ant: // global
           call _c5ank() args: 0, res: 0, upd: 0;
       c5ano: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ane_info" {
     block_c5ane_info:
         const _c5ane;
         const 1;
         const 30;
 },
 _c5ank() //  []
         { []
         }
     {offset
       c5ank: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ank_info" {
     block_c5ank_info:
         const _c5ank;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.643736097 UTC

[section ""data" . Data.Type.Coercion.$fEqCoercion_closure" {
     Data.Type.Coercion.$fEqCoercion_closure:
         const GHC.Classes.C:Eq_con_info;
         const Data.Type.Coercion.$fEqCoercion_$c==_closure+2;
         const Data.Type.Coercion.$fEqCoercion_$c/=_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.645796224 UTC

[section ""cstring" . Data.Type.Coercion.$fReadCoercion3_bytes" {
     Data.Type.Coercion.$fReadCoercion3_bytes:
         I8[] [67,111,101,114,99,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.648060193 UTC

[section ""data" . Data.Type.Coercion.$fReadCoercion2_closure" {
     Data.Type.Coercion.$fReadCoercion2_closure:
         const Data.Type.Coercion.$fReadCoercion2_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Type.Coercion.$fReadCoercion2_entry() //  [R1]
         { []
         }
     {offset
       c5anR: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5anS; else goto c5anT;
       c5anS: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5anT: // global
           (_c5anO::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5anO::I64 == 0) goto c5anQ; else goto c5anP;
       c5anQ: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5anP: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5anO::I64;
           R2 = Data.Type.Coercion.$fReadCoercion3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fReadCoercion2_info" {
     Data.Type.Coercion.$fReadCoercion2_info:
         const Data.Type.Coercion.$fReadCoercion2_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.652420331 UTC

[section ""data" . Data.Type.Coercion.$fShowCoercion_$cshowsPrec_closure" {
     Data.Type.Coercion.$fShowCoercion_$cshowsPrec_closure:
         const Data.Type.Coercion.$fShowCoercion_$cshowsPrec_info;
         const 0;
 },
 Data.Type.Coercion.$fShowCoercion_$cshowsPrec_entry() //  [R2, R3,
                                                            R4]
         { []
         }
     {offset
       c5ao8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5ao9; else goto c5aoa;
       c5ao9: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fShowCoercion_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aoa: // global
           I64[Sp - 16] = block_c5ao5_info;
           R1 = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5aoe; else goto c5ao6;
       u5aoe: // global
           call _c5ao5() args: 0, res: 0, upd: 0;
       c5ao6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fShowCoercion_$cshowsPrec_info" {
     Data.Type.Coercion.$fShowCoercion_$cshowsPrec_info:
         const Data.Type.Coercion.$fShowCoercion_$cshowsPrec_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S59Fe_srt+104;
 },
 _c5ao5() //  []
         { []
         }
     {offset
       c5ao5: // global
           R3 = P64[Sp + 8];
           R2 = Data.Type.Coercion.$fReadCoercion2_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ao5_info" {
     block_c5ao5_info:
         const _c5ao5;
         const 1;
         const 4294967326;
         const S59Fe_srt+104;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.658072337 UTC

[section ""data" . Data.Type.Coercion.$fShowCoercion_$cshow_closure" {
     Data.Type.Coercion.$fShowCoercion_$cshow_closure:
         const Data.Type.Coercion.$fShowCoercion_$cshow_info;
         const 0;
 },
 Data.Type.Coercion.$fShowCoercion_$cshow_entry() //  [R2]
         { []
         }
     {offset
       c5aov: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5aow; else goto c5aox;
       c5aow: // global
           R2 = R2;
           R1 = Data.Type.Coercion.$fShowCoercion_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5aox: // global
           I64[Sp - 8] = block_c5aos_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5aoB; else goto c5aot;
       u5aoB: // global
           call _c5aos() args: 0, res: 0, upd: 0;
       c5aot: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fShowCoercion_$cshow_info" {
     Data.Type.Coercion.$fShowCoercion_$cshow_info:
         const Data.Type.Coercion.$fShowCoercion_$cshow_entry;
         const 0;
         const 21474836494;
         const 4294967301;
         const S59Fe_srt+104;
 },
 _c5aos() //  []
         { []
         }
     {offset
       c5aos: // global
           R1 = Data.Type.Coercion.$fReadCoercion2_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aos_info" {
     block_c5aos_info:
         const _c5aos;
         const 0;
         const 4294967326;
         const S59Fe_srt+104;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.66383164 UTC

[section ""data" . Data.Type.Coercion.$fShowCoercion1_closure" {
     Data.Type.Coercion.$fShowCoercion1_closure:
         const Data.Type.Coercion.$fShowCoercion1_info;
         const 0;
 },
 Data.Type.Coercion.$fShowCoercion1_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aoT: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aoU; else goto c5aoV;
       c5aoU: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fShowCoercion1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aoV: // global
           I64[Sp - 16] = block_c5aoQ_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5aoZ; else goto c5aoR;
       u5aoZ: // global
           call _c5aoQ() args: 0, res: 0, upd: 0;
       c5aoR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fShowCoercion1_info" {
     Data.Type.Coercion.$fShowCoercion1_info:
         const Data.Type.Coercion.$fShowCoercion1_entry;
         const 0;
         const 38654705678;
         const 8589934607;
         const S59Fe_srt+104;
 },
 _c5aoQ() //  []
         { []
         }
     {offset
       c5aoQ: // global
           R3 = P64[Sp + 8];
           R2 = Data.Type.Coercion.$fReadCoercion2_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aoQ_info" {
     block_c5aoQ_info:
         const _c5aoQ;
         const 1;
         const 4294967326;
         const S59Fe_srt+104;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.668744889 UTC

[section ""data" . Data.Type.Coercion.$fShowCoercion_$cshowList_closure" {
     Data.Type.Coercion.$fShowCoercion_$cshowList_closure:
         const Data.Type.Coercion.$fShowCoercion_$cshowList_info;
         const 0;
 },
 Data.Type.Coercion.$fShowCoercion_$cshowList_entry() //  [R2, R3]
         { []
         }
     {offset
       c5apd: // global
           R4 = R3;
           R3 = R2;
           R2 = Data.Type.Coercion.$fShowCoercion1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fShowCoercion_$cshowList_info" {
     Data.Type.Coercion.$fShowCoercion_$cshowList_info:
         const Data.Type.Coercion.$fShowCoercion_$cshowList_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S59Fe_srt+128;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.671806219 UTC

[section ""data" . Data.Type.Coercion.$fShowCoercion_closure" {
     Data.Type.Coercion.$fShowCoercion_closure:
         const GHC.Show.C:Show_con_info;
         const Data.Type.Coercion.$fShowCoercion_$cshowsPrec_closure+3;
         const Data.Type.Coercion.$fShowCoercion_$cshow_closure+1;
         const Data.Type.Coercion.$fShowCoercion_$cshowList_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.675029948 UTC

[section ""data" . Data.Type.Coercion.$fOrdCoercion_$c<_closure" {
     Data.Type.Coercion.$fOrdCoercion_$c<_closure:
         const Data.Type.Coercion.$fOrdCoercion_$c<_info;
 },
 Data.Type.Coercion.$fOrdCoercion_$c<_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aps: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5apw; else goto c5apx;
       c5apw: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fOrdCoercion_$c<_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5apx: // global
           I64[Sp - 16] = block_c5app_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5apF; else goto c5apq;
       u5apF: // global
           call _c5app() args: 0, res: 0, upd: 0;
       c5apq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fOrdCoercion_$c<_info" {
     Data.Type.Coercion.$fOrdCoercion_$c<_info:
         const Data.Type.Coercion.$fOrdCoercion_$c<_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5app() //  []
         { []
         }
     {offset
       c5app: // global
           _s59DA::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5apv_info;
           R1 = _s59DA::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5apE; else goto c5apz;
       u5apE: // global
           call _c5apv() args: 0, res: 0, upd: 0;
       c5apz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5app_info" {
     block_c5app_info:
         const _c5app;
         const 1;
         const 30;
 },
 _c5apv() //  []
         { []
         }
     {offset
       c5apv: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5apv_info" {
     block_c5apv_info:
         const _c5apv;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.682881859 UTC

[section ""data" . Data.Type.Coercion.$fOrdCoercion_$ccompare_closure" {
     Data.Type.Coercion.$fOrdCoercion_$ccompare_closure:
         const Data.Type.Coercion.$fOrdCoercion_$ccompare_info;
 },
 Data.Type.Coercion.$fOrdCoercion_$ccompare_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aq1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aq5; else goto c5aq6;
       c5aq5: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fOrdCoercion_$ccompare_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aq6: // global
           I64[Sp - 16] = block_c5apY_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5aqe; else goto c5apZ;
       u5aqe: // global
           call _c5apY() args: 0, res: 0, upd: 0;
       c5apZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fOrdCoercion_$ccompare_info" {
     Data.Type.Coercion.$fOrdCoercion_$ccompare_info:
         const Data.Type.Coercion.$fOrdCoercion_$ccompare_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5apY() //  []
         { []
         }
     {offset
       c5apY: // global
           _s59DG::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5aq4_info;
           R1 = _s59DG::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5aqd; else goto c5aq8;
       u5aqd: // global
           call _c5aq4() args: 0, res: 0, upd: 0;
       c5aq8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5apY_info" {
     block_c5apY_info:
         const _c5apY;
         const 1;
         const 30;
 },
 _c5aq4() //  []
         { []
         }
     {offset
       c5aq4: // global
           R1 = GHC.Types.EQ_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aq4_info" {
     block_c5aq4_info:
         const _c5aq4;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.690226803 UTC

[section ""data" . Data.Type.Coercion.$fOrdCoercion_$c<=_closure" {
     Data.Type.Coercion.$fOrdCoercion_$c<=_closure:
         const Data.Type.Coercion.$fOrdCoercion_$c<=_info;
 },
 Data.Type.Coercion.$fOrdCoercion_$c<=_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aqA: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aqE; else goto c5aqF;
       c5aqE: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fOrdCoercion_$c<=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aqF: // global
           I64[Sp - 16] = block_c5aqx_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5aqN; else goto c5aqy;
       u5aqN: // global
           call _c5aqx() args: 0, res: 0, upd: 0;
       c5aqy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fOrdCoercion_$c<=_info" {
     Data.Type.Coercion.$fOrdCoercion_$c<=_info:
         const Data.Type.Coercion.$fOrdCoercion_$c<=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5aqx() //  []
         { []
         }
     {offset
       c5aqx: // global
           _s59DL::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5aqD_info;
           R1 = _s59DL::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5aqM; else goto c5aqH;
       u5aqM: // global
           call _c5aqD() args: 0, res: 0, upd: 0;
       c5aqH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aqx_info" {
     block_c5aqx_info:
         const _c5aqx;
         const 1;
         const 30;
 },
 _c5aqD() //  []
         { []
         }
     {offset
       c5aqD: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aqD_info" {
     block_c5aqD_info:
         const _c5aqD;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.697422047 UTC

[section ""data" . Data.Type.Coercion.$fOrdCoercion_$cmax_closure" {
     Data.Type.Coercion.$fOrdCoercion_$cmax_closure:
         const Data.Type.Coercion.$fOrdCoercion_$cmax_info;
 },
 Data.Type.Coercion.$fOrdCoercion_$cmax_entry() //  [R2, R3]
         { []
         }
     {offset
       c5ar9: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5ara; else goto c5arb;
       c5ara: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fOrdCoercion_$cmax_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5arb: // global
           I64[Sp - 16] = block_c5ar6_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5arf; else goto c5ar7;
       u5arf: // global
           call _c5ar6() args: 0, res: 0, upd: 0;
       c5ar7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fOrdCoercion_$cmax_info" {
     Data.Type.Coercion.$fOrdCoercion_$cmax_info:
         const Data.Type.Coercion.$fOrdCoercion_$cmax_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5ar6() //  []
         { []
         }
     {offset
       c5ar6: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ar6_info" {
     block_c5ar6_info:
         const _c5ar6;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.703641424 UTC

[section ""data" . Data.Type.Coercion.$fOrdCoercion_$c>_closure" {
     Data.Type.Coercion.$fOrdCoercion_$c>_closure:
         const Data.Type.Coercion.$fOrdCoercion_$c>_info;
 },
 Data.Type.Coercion.$fOrdCoercion_$c>_entry() //  [R2, R3]
         { []
         }
     {offset
       c5ary: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5arC; else goto c5arD;
       c5arC: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fOrdCoercion_$c>_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5arD: // global
           I64[Sp - 16] = block_c5arv_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5arL; else goto c5arw;
       u5arL: // global
           call _c5arv() args: 0, res: 0, upd: 0;
       c5arw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fOrdCoercion_$c>_info" {
     Data.Type.Coercion.$fOrdCoercion_$c>_info:
         const Data.Type.Coercion.$fOrdCoercion_$c>_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5arv() //  []
         { []
         }
     {offset
       c5arv: // global
           _s59DV::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5arB_info;
           R1 = _s59DV::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5arK; else goto c5arF;
       u5arK: // global
           call _c5arB() args: 0, res: 0, upd: 0;
       c5arF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5arv_info" {
     block_c5arv_info:
         const _c5arv;
         const 1;
         const 30;
 },
 _c5arB() //  []
         { []
         }
     {offset
       c5arB: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5arB_info" {
     block_c5arB_info:
         const _c5arB;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.711524591 UTC

[section ""data" . Data.Type.Coercion.$fOrdCoercion_$cmin_closure" {
     Data.Type.Coercion.$fOrdCoercion_$cmin_closure:
         const Data.Type.Coercion.$fOrdCoercion_$cmin_info;
 },
 Data.Type.Coercion.$fOrdCoercion_$cmin_entry() //  [R2, R3]
         { []
         }
     {offset
       c5as7: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5as8; else goto c5as9;
       c5as8: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fOrdCoercion_$cmin_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5as9: // global
           I64[Sp - 16] = block_c5as4_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5asd; else goto c5as5;
       u5asd: // global
           call _c5as4() args: 0, res: 0, upd: 0;
       c5as5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fOrdCoercion_$cmin_info" {
     Data.Type.Coercion.$fOrdCoercion_$cmin_info:
         const Data.Type.Coercion.$fOrdCoercion_$cmin_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5as4() //  []
         { []
         }
     {offset
       c5as4: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5as4_info" {
     block_c5as4_info:
         const _c5as4;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.716348727 UTC

[section ""data" . Data.Type.Coercion.$fOrdCoercion_closure" {
     Data.Type.Coercion.$fOrdCoercion_closure:
         const GHC.Classes.C:Ord_con_info;
         const Data.Type.Coercion.$fEqCoercion_closure+1;
         const Data.Type.Coercion.$fOrdCoercion_$ccompare_closure+2;
         const Data.Type.Coercion.$fOrdCoercion_$c<_closure+2;
         const Data.Type.Coercion.$fOrdCoercion_$c<=_closure+2;
         const Data.Type.Coercion.$fOrdCoercion_$c>_closure+2;
         const Data.Type.Coercion.$fEqCoercion_$c==_closure+2;
         const Data.Type.Coercion.$fOrdCoercion_$cmax_closure+2;
         const Data.Type.Coercion.$fOrdCoercion_$cmin_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.718245303 UTC

[section ""data" . Data.Type.Coercion.$fReadCoercion_lexeme_closure" {
     Data.Type.Coercion.$fReadCoercion_lexeme_closure:
         const Text.Read.Lex.Ident_con_info;
         const Data.Type.Coercion.$fReadCoercion2_closure;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.72217373 UTC

[section ""data" . Data.Type.Coercion.$fReadCoercion1_closure" {
     Data.Type.Coercion.$fReadCoercion1_closure:
         const Data.Type.Coercion.$fReadCoercion1_info;
         const 0;
 },
 sat_s59Ec_entry() //  [R1]
         { []
         }
     {offset
       c5asG: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 15];
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s59Ec_info" {
     sat_s59Ec_info:
         const sat_s59Ec_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_s59Ef_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5asM: // global
           _s59Ea::P64 = R3;
           _s59E9::P64 = R2;
           _s59Ef::P64 = R1;
           if ((Sp + -8) < SpLim) (likely: False) goto c5asN; else goto c5asO;
       c5asO: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5asQ; else goto c5asP;
       c5asQ: // global
           HpAlloc = 24;
           goto c5asN;
       c5asN: // global
           R3 = _s59Ea::P64;
           R2 = _s59E9::P64;
           R1 = _s59Ef::P64;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5asP: // global
           _s59E8::P64 = P64[_s59Ef::P64 + 6];
           I64[Hp - 16] = sat_s59Ec_info;
           P64[Hp - 8] = _s59E8::P64;
           P64[Hp] = _s59Ea::P64;
           I64[Sp - 8] = block_c5asJ_info;
           R3 = Hp - 15;
           R2 = Data.Type.Coercion.$fReadCoercion_lexeme_closure+4;
           Sp = Sp - 8;
           call Text.Read.Lex.$wexpect_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s59Ef_info" {
     sat_s59Ef_info:
         const sat_s59Ef_entry;
         const 1;
         const 12884901897;
         const 8589934607;
         const S59Fe_srt+136;
 },
 _c5asJ() //  [R1]
         { []
         }
     {offset
       c5asJ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5asT; else goto c5asS;
       c5asT: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5asS: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5asJ_info" {
     block_c5asJ_info:
         const _c5asJ;
         const 0;
         const 30;
 },
 Data.Type.Coercion.$fReadCoercion1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5asU: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5asY; else goto c5asX;
       c5asY: // global
           HpAlloc = 32;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fReadCoercion1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5asX: // global
           I64[Hp - 24] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp - 16] = R2;
           I64[Hp - 8] = sat_s59Ef_info;
           P64[Hp] = Hp - 23;
           R4 = R4;
           R3 = R3;
           R2 = Hp - 6;
           call GHC.Read.list3_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fReadCoercion1_info" {
     Data.Type.Coercion.$fReadCoercion1_info:
         const Data.Type.Coercion.$fReadCoercion1_entry;
         const 0;
         const 64424509454;
         const 12884901911;
         const S59Fe_srt+136;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.731505678 UTC

[section ""data" . Data.Type.Coercion.$fReadCoercion_$creadsPrec_closure" {
     Data.Type.Coercion.$fReadCoercion_$creadsPrec_closure:
         const Data.Type.Coercion.$fReadCoercion_$creadsPrec_info;
         const 0;
 },
 sat_s59Ei_entry() //  [R1]
         { []
         }
     {offset
       c5atn: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5ato; else goto c5atp;
       c5ato: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5atp: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R4 = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Type.Coercion.$fReadCoercion1_entry(R4,
                                                         R3,
                                                         R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s59Ei_info" {
     sat_s59Ei_info:
         const sat_s59Ei_entry;
         const 2;
         const 4294967314;
         const S59Fe_srt+160;
 },
 Data.Type.Coercion.$fReadCoercion_$creadsPrec_entry() //  [R2, R3]
         { []
         }
     {offset
       c5atq: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5atu; else goto c5att;
       c5atu: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fReadCoercion_$creadsPrec_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5att: // global
           I64[Hp - 24] = sat_s59Ei_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R2 = Hp - 24;
           R1 = Text.ParserCombinators.ReadP.run_closure+2;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fReadCoercion_$creadsPrec_info" {
     Data.Type.Coercion.$fReadCoercion_$creadsPrec_info:
         const Data.Type.Coercion.$fReadCoercion_$creadsPrec_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S59Fe_srt+160;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.737921292 UTC

[section ""data" . Data.Type.Coercion.$fReadCoercion_$creadListPrec_closure" {
     Data.Type.Coercion.$fReadCoercion_$creadListPrec_closure:
         const Data.Type.Coercion.$fReadCoercion_$creadListPrec_info;
         const 0;
 },
 sat_s59Ek_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5atM: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Type.Coercion.$fReadCoercion1_entry(R4,
                                                         R3,
                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s59Ek_info" {
     sat_s59Ek_info:
         const sat_s59Ek_entry;
         const 1;
         const 4294967305;
         const 8589934607;
         const S59Fe_srt+160;
 },
 Data.Type.Coercion.$fReadCoercion_$creadListPrec_entry() //  [R2]
         { []
         }
     {offset
       c5atP: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5atT; else goto c5atS;
       c5atT: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = Data.Type.Coercion.$fReadCoercion_$creadListPrec_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5atS: // global
           I64[Hp - 8] = sat_s59Ek_info;
           P64[Hp] = R2;
           R2 = Hp - 6;
           call GHC.Read.list_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fReadCoercion_$creadListPrec_info" {
     Data.Type.Coercion.$fReadCoercion_$creadListPrec_info:
         const Data.Type.Coercion.$fReadCoercion_$creadListPrec_entry;
         const 0;
         const 55834574862;
         const 4294967301;
         const S59Fe_srt+160;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.744864522 UTC

[section ""data" . Data.Type.Coercion.$fReadCoercion_$creadList_closure" {
     Data.Type.Coercion.$fReadCoercion_$creadList_closure:
         const Data.Type.Coercion.$fReadCoercion_$creadList_info;
         const 0;
 },
 sat_s59Em_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5aue: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Type.Coercion.$fReadCoercion1_entry(R4,
                                                         R3,
                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s59Em_info" {
     sat_s59Em_info:
         const sat_s59Em_entry;
         const 1;
         const 4294967305;
         const 8589934607;
         const S59Fe_srt+160;
 },
 sat_s59En_entry() //  [R1]
         { []
         }
     {offset
       c5auh: // global
           _s59En::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto c5aui; else goto c5auj;
       c5auj: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5aul; else goto c5auk;
       c5aul: // global
           HpAlloc = 16;
           goto c5aui;
       c5aui: // global
           R1 = _s59En::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5auk: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s59En::P64;
           _s59El::P64 = P64[_s59En::P64 + 16];
           I64[Hp - 8] = sat_s59Em_info;
           P64[Hp] = _s59El::P64;
           R2 = Hp - 6;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = GHC.Read.$fRead()7_closure;
           P64[Sp - 24] = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           Sp = Sp - 40;
           call GHC.Read.list_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s59En_info" {
     sat_s59En_info:
         const sat_s59En_entry;
         const 1;
         const 21474836496;
         const S59Fe_srt+160;
 },
 Data.Type.Coercion.$fReadCoercion_$creadList_entry() //  [R2]
         { []
         }
     {offset
       c5aum: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5auq; else goto c5aup;
       c5auq: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Data.Type.Coercion.$fReadCoercion_$creadList_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5aup: // global
           I64[Hp - 16] = sat_s59En_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           R1 = Text.ParserCombinators.ReadP.run_closure+2;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fReadCoercion_$creadList_info" {
     Data.Type.Coercion.$fReadCoercion_$creadList_info:
         const Data.Type.Coercion.$fReadCoercion_$creadList_entry;
         const 0;
         const 90194313230;
         const 4294967301;
         const S59Fe_srt+160;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.754980225 UTC

[section ""data" . Data.Type.Coercion.$fReadCoercion_closure" {
     Data.Type.Coercion.$fReadCoercion_closure:
         const Data.Type.Coercion.$fReadCoercion_info;
         const 0;
 },
 sat_s59Es_entry() //  [R1]
         { []
         }
     {offset
       c5auK: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5auL; else goto c5auM;
       c5auL: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5auM: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Type.Coercion.$fReadCoercion_$creadListPrec_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s59Es_info" {
     sat_s59Es_info:
         const sat_s59Es_entry;
         const 1;
         const 4294967312;
         const S59Fe_srt+184;
 },
 sat_s59Er_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5auS: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Type.Coercion.$fReadCoercion1_entry(R4,
                                                         R3,
                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s59Er_info" {
     sat_s59Er_info:
         const sat_s59Er_entry;
         const 1;
         const 4294967305;
         const 8589934607;
         const S59Fe_srt+160;
 },
 sat_s59Eq_entry() //  [R1]
         { []
         }
     {offset
       c5auZ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5av0; else goto c5av1;
       c5av0: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5av1: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Type.Coercion.$fReadCoercion_$creadList_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s59Eq_info" {
     sat_s59Eq_info:
         const sat_s59Eq_entry;
         const 1;
         const 4294967312;
         const S59Fe_srt+192;
 },
 sat_s59Ep_entry() //  [R1, R2]
         { []
         }
     {offset
       c5av7: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Type.Coercion.$fReadCoercion_$creadsPrec_entry(R3,
                                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s59Ep_info" {
     sat_s59Ep_info:
         const sat_s59Ep_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S59Fe_srt+168;
 },
 Data.Type.Coercion.$fReadCoercion_entry() //  [R2]
         { []
         }
     {offset
       c5avb: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto c5avf; else goto c5ave;
       c5avf: // global
           HpAlloc = 120;
           R2 = R2;
           R1 = Data.Type.Coercion.$fReadCoercion_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5ave: // global
           I64[Hp - 112] = sat_s59Es_info;
           P64[Hp - 96] = R2;
           I64[Hp - 88] = sat_s59Er_info;
           P64[Hp - 80] = R2;
           I64[Hp - 72] = sat_s59Eq_info;
           P64[Hp - 56] = R2;
           I64[Hp - 48] = sat_s59Ep_info;
           P64[Hp - 40] = R2;
           I64[Hp - 32] = GHC.Read.C:Read_con_info;
           P64[Hp - 24] = Hp - 47;
           P64[Hp - 16] = Hp - 72;
           P64[Hp - 8] = Hp - 86;
           P64[Hp] = Hp - 112;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fReadCoercion_info" {
     Data.Type.Coercion.$fReadCoercion_info:
         const Data.Type.Coercion.$fReadCoercion_entry;
         const 0;
         const 253403070478;
         const 4294967301;
         const S59Fe_srt+160;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.765435579 UTC

[section ""data" . Data.Type.Coercion.$fBoundedCoercion_closure" {
     Data.Type.Coercion.$fBoundedCoercion_closure:
         const Data.Type.Coercion.$fBoundedCoercion_info;
 },
 Data.Type.Coercion.$fBoundedCoercion_entry() //  [R2]
         { []
         }
     {offset
       c5avJ: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c5avN; else goto c5avM;
       c5avN: // global
           HpAlloc = 40;
           R2 = R2;
           R1 = Data.Type.Coercion.$fBoundedCoercion_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5avM: // global
           I64[Hp - 32] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = GHC.Enum.C:Bounded_con_info;
           _c5avH::P64 = Hp - 31;
           P64[Hp - 8] = _c5avH::P64;
           P64[Hp] = _c5avH::P64;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fBoundedCoercion_info" {
     Data.Type.Coercion.$fBoundedCoercion_info:
         const Data.Type.Coercion.$fBoundedCoercion_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.770071585 UTC

[section ""data" . Data.Type.Coercion.coerceWith_closure" {
     Data.Type.Coercion.coerceWith_closure:
         const Data.Type.Coercion.coerceWith_info;
 },
 Data.Type.Coercion.coerceWith_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aw0: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aw4; else goto c5aw5;
       c5aw4: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.coerceWith_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aw5: // global
           I64[Sp - 16] = block_c5avX_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5awd; else goto c5avY;
       u5awd: // global
           call _c5avX(R1) args: 0, res: 0, upd: 0;
       c5avY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.coerceWith_info" {
     Data.Type.Coercion.coerceWith_info:
         const Data.Type.Coercion.coerceWith_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5avX() //  [R1]
         { []
         }
     {offset
       c5avX: // global
           I64[Sp] = block_c5aw3_info;
           R1 = P64[R1 + 7];
           if (R1 & 7 != 0) goto u5awc; else goto c5aw7;
       u5awc: // global
           call _c5aw3() args: 0, res: 0, upd: 0;
       c5aw7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5avX_info" {
     block_c5avX_info:
         const _c5avX;
         const 1;
         const 30;
 },
 _c5aw3() //  []
         { []
         }
     {offset
       c5aw3: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aw3_info" {
     block_c5aw3_info:
         const _c5aw3;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.777639421 UTC

[section ""data" . Data.Type.Coercion.gcoerceWith_closure" {
     Data.Type.Coercion.gcoerceWith_closure:
         const Data.Type.Coercion.gcoerceWith_info;
 },
 Data.Type.Coercion.gcoerceWith_entry() //  [R2, R3]
         { []
         }
     {offset
       c5awy: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5awz; else goto c5awA;
       c5awz: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.gcoerceWith_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5awA: // global
           I64[Sp - 16] = block_c5awv_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5awE; else goto c5aww;
       u5awE: // global
           call _c5awv(R1) args: 0, res: 0, upd: 0;
       c5aww: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.gcoerceWith_info" {
     Data.Type.Coercion.gcoerceWith_info:
         const Data.Type.Coercion.gcoerceWith_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5awv() //  [R1]
         { []
         }
     {offset
       c5awv: // global
           R2 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5awv_info" {
     block_c5awv_info:
         const _c5awv;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.783675775 UTC

[section ""data" . Data.Type.Coercion.sym_closure" {
     Data.Type.Coercion.sym_closure:
         const Data.Type.Coercion.sym_info;
 },
 Data.Type.Coercion.sym_entry() //  [R2]
         { []
         }
     {offset
       c5awV: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5ax2; else goto c5ax3;
       c5ax2: // global
           R2 = R2;
           R1 = Data.Type.Coercion.sym_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5ax3: // global
           I64[Sp - 8] = block_c5awS_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5ax8; else goto c5awT;
       u5ax8: // global
           call _c5awS(R1) args: 0, res: 0, upd: 0;
       c5awT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.sym_info" {
     Data.Type.Coercion.sym_info:
         const Data.Type.Coercion.sym_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5awS() //  [R1]
         { []
         }
     {offset
       c5awS: // global
           I64[Sp] = block_c5awY_info;
           R2 = P64[R1 + 7];
           call GHC.Types.coercible_sel_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5awS_info" {
     block_c5awS_info:
         const _c5awS;
         const 0;
         const 30;
 },
 _c5awY() //  []
         { []
         }
     {offset
       c5awY: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5ax7; else goto c5ax6;
       c5ax7: // global
           HpAlloc = 32;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c5ax6: // global
           I64[Hp - 24] = GHC.Types.MkCoercible_con_info;
           I64[Hp - 8] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5awY_info" {
     block_c5awY_info:
         const _c5awY;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.792208251 UTC

[section ""data" . Data.Type.Coercion.trans_closure" {
     Data.Type.Coercion.trans_closure:
         const Data.Type.Coercion.trans_info;
 },
 Data.Type.Coercion.trans_entry() //  [R2, R3]
         { []
         }
     {offset
       c5axu: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5axI; else goto c5axJ;
       c5axI: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.trans_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5axJ: // global
           I64[Sp - 16] = block_c5axr_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5axQ; else goto c5axs;
       u5axQ: // global
           call _c5axr(R1) args: 0, res: 0, upd: 0;
       c5axs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.trans_info" {
     Data.Type.Coercion.trans_info:
         const Data.Type.Coercion.trans_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5axr() //  [R1]
         { []
         }
     {offset
       c5axr: // global
           I64[Sp] = block_c5axx_info;
           R2 = P64[R1 + 7];
           call GHC.Types.coercible_sel_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5axr_info" {
     block_c5axr_info:
         const _c5axr;
         const 1;
         const 30;
 },
 _c5axx() //  []
         { []
         }
     {offset
       c5axx: // global
           _s59EK::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5axz_info;
           R1 = _s59EK::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5axR; else goto c5axA;
       u5axR: // global
           call _c5axz(R1) args: 0, res: 0, upd: 0;
       c5axA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5axx_info" {
     block_c5axx_info:
         const _c5axx;
         const 1;
         const 30;
 },
 _c5axz() //  [R1]
         { []
         }
     {offset
       c5axz: // global
           I64[Sp] = block_c5axE_info;
           R2 = P64[R1 + 7];
           call GHC.Types.coercible_sel_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5axz_info" {
     block_c5axz_info:
         const _c5axz;
         const 0;
         const 30;
 },
 _c5axE() //  []
         { []
         }
     {offset
       c5axE: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5axP; else goto c5axO;
       c5axP: // global
           HpAlloc = 32;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c5axO: // global
           I64[Hp - 24] = GHC.Types.MkCoercible_con_info;
           I64[Hp - 8] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5axE_info" {
     block_c5axE_info:
         const _c5axE;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.802954051 UTC

[section ""data" . Data.Type.Coercion.repr_closure" {
     Data.Type.Coercion.repr_closure:
         const Data.Type.Coercion.repr_info;
 },
 Data.Type.Coercion.repr_entry() //  [R2]
         { []
         }
     {offset
       c5ayk: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5ayp; else goto c5ayq;
       c5ayp: // global
           R2 = R2;
           R1 = Data.Type.Coercion.repr_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5ayq: // global
           I64[Sp - 8] = block_c5ayh_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5ayu; else goto c5ayi;
       u5ayu: // global
           call _c5ayh(R1) args: 0, res: 0, upd: 0;
       c5ayi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.repr_info" {
     Data.Type.Coercion.repr_info:
         const Data.Type.Coercion.repr_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5ayh() //  [R1]
         { []
         }
     {offset
       c5ayh: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5ayt; else goto c5ays;
       c5ayt: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5ays: // global
           I64[Hp - 24] = GHC.Types.MkCoercible_con_info;
           I64[Hp - 8] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ayh_info" {
     block_c5ayh_info:
         const _c5ayh;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.808028699 UTC

[section ""cstring" . Data.Type.Coercion.$trModule4_bytes" {
     Data.Type.Coercion.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.81024745 UTC

[section ""data" . Data.Type.Coercion.$trModule3_closure" {
     Data.Type.Coercion.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Type.Coercion.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.81182415 UTC

[section ""cstring" . Data.Type.Coercion.$trModule2_bytes" {
     Data.Type.Coercion.$trModule2_bytes:
         I8[] [68,97,116,97,46,84,121,112,101,46,67,111,101,114,99,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.813490118 UTC

[section ""data" . Data.Type.Coercion.$trModule1_closure" {
     Data.Type.Coercion.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Type.Coercion.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.815192531 UTC

[section ""data" . Data.Type.Coercion.$trModule_closure" {
     Data.Type.Coercion.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Type.Coercion.$trModule3_closure+1;
         const Data.Type.Coercion.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.81693291 UTC

[section ""data" . $krep_r59Bg_closure" {
     $krep_r59Bg_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.819489869 UTC

[section ""data" . $krep1_r59Bh_closure" {
     $krep1_r59Bh_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.821480272 UTC

[section ""data" . $krep2_r59Bi_closure" {
     $krep2_r59Bi_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep1_r59Bh_closure+2;
         const GHC.Types.krep$*_closure;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.823228717 UTC

[section ""data" . Data.Type.Coercion.$tcCoercion1_closure" {
     Data.Type.Coercion.$tcCoercion1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep1_r59Bh_closure+2;
         const $krep2_r59Bi_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.825070566 UTC

[section ""data" . Data.Type.Coercion.$tcTestCoercion1_closure" {
     Data.Type.Coercion.$tcTestCoercion1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r59Bi_closure+4;
         const $krep_r59Bg_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.826859295 UTC

[section ""data" . $krep3_r59Bj_closure" {
     $krep3_r59Bj_closure:
         const GHC.Types.KindRepVar_con_info;
         const 2;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.828861609 UTC

[section ""data" . $krep4_r59Bk_closure" {
     $krep4_r59Bk_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.830789066 UTC

[section ""data" . $krep5_r59Bl_closure" {
     $krep5_r59Bl_closure:
         const :_con_info;
         const $krep3_r59Bj_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.832647443 UTC

[section ""data" . $krep6_r59Bm_closure" {
     $krep6_r59Bm_closure:
         const :_con_info;
         const $krep4_r59Bk_closure+2;
         const $krep5_r59Bl_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.834729579 UTC

[section ""data" . $krep7_r59Bn_closure" {
     $krep7_r59Bn_closure:
         const :_con_info;
         const $krep1_r59Bh_closure+2;
         const $krep6_r59Bm_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.8363997 UTC

[section ""data" . $krep8_r59Bo_closure" {
     $krep8_r59Bo_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcCoercible_closure;
         const $krep7_r59Bn_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.838144794 UTC

[section ""data" . Data.Type.Coercion.$tcCoercion2_closure" {
     Data.Type.Coercion.$tcCoercion2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Type.Coercion.$fReadCoercion3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.839807386 UTC

[section ""data" . Data.Type.Coercion.$tcCoercion_closure" {
     Data.Type.Coercion.$tcCoercion_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Type.Coercion.$trModule_closure+1;
         const Data.Type.Coercion.$tcCoercion2_closure+1;
         const Data.Type.Coercion.$tcCoercion1_closure+4;
         const 14885566513674463733;
         const 8268940906925368652;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.841658813 UTC

[section ""data" . $krep9_r59Bp_closure" {
     $krep9_r59Bp_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Type.Coercion.$tcCoercion_closure+1;
         const $krep7_r59Bn_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.843375566 UTC

[section ""data" . Data.Type.Coercion.$tc'Coercion1_closure" {
     Data.Type.Coercion.$tc'Coercion1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep8_r59Bo_closure+1;
         const $krep9_r59Bp_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.845677361 UTC

[section ""cstring" . Data.Type.Coercion.$tc'Coercion3_bytes" {
     Data.Type.Coercion.$tc'Coercion3_bytes:
         I8[] [39,67,111,101,114,99,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.847330255 UTC

[section ""data" . Data.Type.Coercion.$tc'Coercion2_closure" {
     Data.Type.Coercion.$tc'Coercion2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Type.Coercion.$tc'Coercion3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.849065234 UTC

[section ""data" . Data.Type.Coercion.$tc'Coercion_closure" {
     Data.Type.Coercion.$tc'Coercion_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Type.Coercion.$trModule_closure+1;
         const Data.Type.Coercion.$tc'Coercion2_closure+1;
         const Data.Type.Coercion.$tc'Coercion1_closure+4;
         const 16177208673276072700;
         const 13187043378465993605;
         const 3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.851333362 UTC

[section ""cstring" . Data.Type.Coercion.$tcTestCoercion3_bytes" {
     Data.Type.Coercion.$tcTestCoercion3_bytes:
         I8[] [84,101,115,116,67,111,101,114,99,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.852960961 UTC

[section ""data" . Data.Type.Coercion.$tcTestCoercion2_closure" {
     Data.Type.Coercion.$tcTestCoercion2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Type.Coercion.$tcTestCoercion3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.854799381 UTC

[section ""data" . Data.Type.Coercion.$tcTestCoercion_closure" {
     Data.Type.Coercion.$tcTestCoercion_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Type.Coercion.$trModule_closure+1;
         const Data.Type.Coercion.$tcTestCoercion2_closure+1;
         const Data.Type.Coercion.$tcTestCoercion1_closure+4;
         const 14520160333183018944;
         const 2439357669602544154;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.857128768 UTC

[section ""data" . Data.Type.Coercion.Coercion_closure" {
     Data.Type.Coercion.Coercion_closure:
         const Data.Type.Coercion.Coercion_info;
 },
 Data.Type.Coercion.Coercion_entry() //  [R2]
         { []
         }
     {offset
       c5azb: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5azf; else goto c5aze;
       c5azf: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = Data.Type.Coercion.Coercion_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5aze: // global
           I64[Hp - 8] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.Coercion_info" {
     Data.Type.Coercion.Coercion_info:
         const Data.Type.Coercion.Coercion_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.860617684 UTC

[section ""cstring" . i5aa2_str" {
     i5aa2_str:
         I8[] [98,97,115,101,58,68,97,116,97,46,84,121,112,101,46,67,111,101,114,99,105,111,110,46,67,111,101,114,99,105,111,110]
 },
 Data.Type.Coercion.Coercion_con_entry() //  [R1]
         { []
         }
     {offset
       c5azl: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.Coercion_con_info" {
     Data.Type.Coercion.Coercion_con_info:
         const Data.Type.Coercion.Coercion_con_entry;
         const 1;
         const 2;
         const i5aa2_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:06.863904912 UTC

[section ""relreadonly" . S59Fe_srt" {
     S59Fe_srt:
         const GHC.Err.errorWithoutStackTrace_closure;
         const Data.Type.Coercion.$fEnumCoercion1_closure;
         const Data.Type.Coercion.$fEnumCoercion_$ctoEnum_closure;
         const Data.Type.Coercion.$w$cenumFromTo_closure;
         const Data.Type.Coercion.$fEnumCoercion_$cenumFromTo_closure;
         const Data.Type.Coercion.$fEnumCoercion_$cenumFromThen_closure;
         const lvl1_r59Bc_closure;
         const Data.Type.Coercion.$w$cenumFrom_closure;
         const Data.Type.Coercion.$fEnumCoercion_$cenumFrom_closure;
         const Data.Type.Coercion.$w$cenumFromThenTo_closure;
         const Data.Type.Coercion.$fEnumCoercion_$cenumFromThenTo_closure;
         const lvl4_r59Bf_closure;
         const Data.Type.Coercion.$fEnumCoercion_closure;
         const Data.Type.Coercion.$fReadCoercion2_closure;
         const Data.Type.Coercion.$fShowCoercion_$cshowsPrec_closure;
         const Data.Type.Coercion.$fShowCoercion_$cshow_closure;
         const Data.Type.Coercion.$fShowCoercion1_closure;
         const Text.Read.Lex.$wexpect_closure;
         const Data.Type.Coercion.$fReadCoercion_lexeme_closure;
         const GHC.Read.list3_closure;
         const Data.Type.Coercion.$fReadCoercion1_closure;
         const Data.Type.Coercion.$fReadCoercion_$creadsPrec_closure;
         const GHC.Read.list_closure;
         const Data.Type.Coercion.$fReadCoercion_$creadListPrec_closure;
         const Data.Type.Coercion.$fReadCoercion_$creadList_closure;
         const Data.Type.Coercion.$fReadCoercion_closure;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.717219775 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:00:07.719155328 UTC

[section ""data" . Data.Type.Coercion.testCoercion_closure" {
     Data.Type.Coercion.testCoercion_closure:
         const Data.Type.Coercion.testCoercion_info;
 },
 Data.Type.Coercion.testCoercion_entry() //  [R2]
         { []
         }
     {offset
       c5aCY: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.testCoercion_info" {
     Data.Type.Coercion.testCoercion_info:
         const Data.Type.Coercion.testCoercion_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.722612301 UTC

[section ""cstring" . lvl_r59Bb_bytes" {
     lvl_r59Bb_bytes:
         I8[] [68,97,116,97,46,84,121,112,101,46,67,111,101,114,99,105,111,110,46,116,111,69,110,117,109,58,32,98,97,100,32,97,114,103,117,109,101,110,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.726490745 UTC

[section ""data" . Data.Type.Coercion.$fEnumCoercion1_closure" {
     Data.Type.Coercion.$fEnumCoercion1_closure:
         const Data.Type.Coercion.$fEnumCoercion1_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Type.Coercion.$fEnumCoercion1_entry() //  [R1]
         { []
         }
     {offset
       c5aDe: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5aDf; else goto c5aDg;
       c5aDf: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5aDg: // global
           (_c5aD9::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5aD9::I64 == 0) goto c5aDb; else goto c5aDa;
       c5aDb: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5aDa: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5aD9::I64;
           I64[Sp - 24] = block_c5aDc_info;
           R2 = lvl_r59Bb_bytes;
           Sp = Sp - 24;
           call GHC.CString.unpackCString#_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fEnumCoercion1_info" {
     Data.Type.Coercion.$fEnumCoercion1_info:
         const Data.Type.Coercion.$fEnumCoercion1_entry;
         const 0;
         const 4294967317;
         const S5aDk_srt;
 },
 _c5aDc() //  [R1]
         { []
         }
     {offset
       c5aDc: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c5aDc_info" {
     block_c5aDc_info:
         const _c5aDc;
         const 0;
         const 4294967326;
         const S5aDk_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.732924517 UTC

[section ""data" . Data.Type.Coercion.$fEnumCoercion_$ctoEnum_closure" {
     Data.Type.Coercion.$fEnumCoercion_$ctoEnum_closure:
         const Data.Type.Coercion.$fEnumCoercion_$ctoEnum_info;
         const 0;
 },
 Data.Type.Coercion.$fEnumCoercion_$ctoEnum_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aDE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aDF; else goto c5aDG;
       c5aDF: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fEnumCoercion_$ctoEnum_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aDG: // global
           I64[Sp - 16] = block_c5aDB_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5aDT; else goto c5aDC;
       u5aDT: // global
           call _c5aDB(R1) args: 0, res: 0, upd: 0;
       c5aDC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fEnumCoercion_$ctoEnum_info" {
     Data.Type.Coercion.$fEnumCoercion_$ctoEnum_info:
         const Data.Type.Coercion.$fEnumCoercion_$ctoEnum_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S5aDk_srt+8;
 },
 _c5aDB() //  [R1]
         { []
         }
     {offset
       c5aDB: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5aDL; else goto c5aDK;
       c5aDL: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5aDK: // global
           if (I64[R1 + 7] == 0) goto c5aDS; else goto c5aDO;
       c5aDS: // global
           I64[Hp - 8] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5aDO: // global
           Hp = Hp - 16;
           R1 = Data.Type.Coercion.$fEnumCoercion1_closure;
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aDB_info" {
     block_c5aDB_info:
         const _c5aDB;
         const 1;
         const 4294967326;
         const S5aDk_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.740807179 UTC

[section ""data" . Data.Type.Coercion.$w$cenumFromTo_closure" {
     Data.Type.Coercion.$w$cenumFromTo_closure:
         const Data.Type.Coercion.$w$cenumFromTo_info;
         const 0;
 },
 sat_s5azJ_entry() //  [R1]
         { []
         }
     {offset
       c5aEq: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aEr; else goto c5aEs;
       c5aEr: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5aEs: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s5azH::I64 = I64[R1 + 24];
           if (_s5azH::I64 != 0) goto c5aEo; else goto c5aEp;
       c5aEo: // global
           R2 = _s5azH::I64 + 1;
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call go_s5azD_entry(R2, R1) args: 24, res: 0, upd: 24;
       c5aEp: // global
           R1 = []_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5azJ_info" {
     sat_s5azJ_info:
         const sat_s5azJ_entry;
         const 4294967297;
         const 4294967315;
         const S5aDk_srt+8;
 },
 sat_s5azG_entry() //  [R1]
         { []
         }
     {offset
       c5aED: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aEE; else goto c5aEF;
       c5aEE: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5aEF: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 24] == 0) goto c5aEC; else goto c5aEB;
       c5aEC: // global
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c5aEB: // global
           R1 = Data.Type.Coercion.$fEnumCoercion1_closure;
           Sp = Sp - 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5azG_info" {
     sat_s5azG_info:
         const sat_s5azG_entry;
         const 4294967297;
         const 4294967315;
         const S5aDk_srt+8;
 },
 go_s5azD_entry() //  [R1, R2]
         { []
         }
     {offset
       c5aEH: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto c5aEL; else goto c5aEK;
       c5aEL: // global
           HpAlloc = 88;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5aEK: // global
           _s5azC::P64 = P64[R1 + 7];
           I64[Hp - 80] = sat_s5azJ_info;
           P64[Hp - 64] = R1;
           I64[Hp - 56] = R2;
           I64[Hp - 48] = sat_s5azG_info;
           P64[Hp - 32] = _s5azC::P64;
           I64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 80;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . go_s5azD_info" {
     go_s5azD_info:
         const go_s5azD_entry;
         const 1;
         const 4294967305;
         const 4294967300;
         const S5aDk_srt+8;
 },
 Data.Type.Coercion.$w$cenumFromTo_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5aEM: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5aEQ; else goto c5aEP;
       c5aEQ: // global
           HpAlloc = 32;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$w$cenumFromTo_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aEP: // global
           I64[Hp - 24] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp - 16] = R2;
           I64[Hp - 8] = go_s5azD_info;
           P64[Hp] = Hp - 23;
           R2 = 0;
           R1 = Hp - 7;
           call go_s5azD_entry(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$w$cenumFromTo_info" {
     Data.Type.Coercion.$w$cenumFromTo_info:
         const Data.Type.Coercion.$w$cenumFromTo_entry;
         const 0;
         const 21474836494;
         const 12884901911;
         const S5aDk_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.753354305 UTC

[section ""data" . Data.Type.Coercion.$fEnumCoercion_$cenumFromTo_closure" {
     Data.Type.Coercion.$fEnumCoercion_$cenumFromTo_closure:
         const Data.Type.Coercion.$fEnumCoercion_$cenumFromTo_info;
         const 0;
 },
 Data.Type.Coercion.$fEnumCoercion_$cenumFromTo_entry() //  [R2, R3,
                                                             R4]
         { []
         }
     {offset
       c5aFs: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5aFw; else goto c5aFx;
       c5aFw: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fEnumCoercion_$cenumFromTo_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aFx: // global
           I64[Sp - 24] = block_c5aFp_info;
           R1 = R3;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5aFF; else goto c5aFq;
       u5aFF: // global
           call _c5aFp(R1) args: 0, res: 0, upd: 0;
       c5aFq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fEnumCoercion_$cenumFromTo_info" {
     Data.Type.Coercion.$fEnumCoercion_$cenumFromTo_info:
         const Data.Type.Coercion.$fEnumCoercion_$cenumFromTo_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S5aDk_srt+24;
 },
 _c5aFp() //  [R1]
         { []
         }
     {offset
       c5aFp: // global
           I64[Sp] = block_c5aFv_info;
           _s5azN::P64 = R1;
           R1 = P64[Sp + 16];
           P64[Sp + 16] = _s5azN::P64;
           if (R1 & 7 != 0) goto u5aFE; else goto c5aFz;
       u5aFE: // global
           call _c5aFv(R1) args: 0, res: 0, upd: 0;
       c5aFz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aFp_info" {
     block_c5aFp_info:
         const _c5aFp;
         const 2;
         const 4294967326;
         const S5aDk_srt+24;
 },
 _c5aFv() //  [R1]
         { []
         }
     {offset
       c5aFv: // global
           R4 = R1;
           R3 = P64[Sp + 16];
           R2 = P64[Sp + 8];
           Sp = Sp + 24;
           call Data.Type.Coercion.$w$cenumFromTo_entry(R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aFv_info" {
     block_c5aFv_info:
         const _c5aFv;
         const 2;
         const 4294967326;
         const S5aDk_srt+24;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.763707961 UTC

[section ""data" . lvl1_r59Bc_closure" {
     lvl1_r59Bc_closure:
         const lvl1_r59Bc_info;
         const 0;
         const 0;
         const 0;
 },
 lvl1_r59Bc_entry() //  [R1]
         { []
         }
     {offset
       c5aG1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aG2; else goto c5aG3;
       c5aG2: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5aG3: // global
           (_c5aFY::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5aFY::I64 == 0) goto c5aG0; else goto c5aFZ;
       c5aG0: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5aFZ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5aFY::I64;
           R3 = 0;
           R2 = 0;
           Sp = Sp - 16;
           call GHC.Enum.efdInt_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl1_r59Bc_info" {
     lvl1_r59Bc_info:
         const lvl1_r59Bc_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.771326647 UTC

[section ""data" . Data.Type.Coercion.$fEnumCoercion_$cenumFromThen_closure" {
     Data.Type.Coercion.$fEnumCoercion_$cenumFromThen_closure:
         const Data.Type.Coercion.$fEnumCoercion_$cenumFromThen_info;
         const 0;
 },
 sat_s5azY_entry() //  [R1, R2]
         { []
         }
     {offset
       c5aGv: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Type.Coercion.$fEnumCoercion_$ctoEnum_entry(R3,
                                                                 R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5azY_info" {
     sat_s5azY_info:
         const sat_s5azY_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5aDk_srt+16;
 },
 Data.Type.Coercion.$fEnumCoercion_$cenumFromThen_entry() //  [R2,
                                                               R3, R4]
         { []
         }
     {offset
       c5aGy: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5aGz; else goto c5aGA;
       c5aGz: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fEnumCoercion_$cenumFromThen_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aGA: // global
           I64[Sp - 24] = block_c5aGg_info;
           R1 = R3;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5aGG; else goto c5aGh;
       u5aGG: // global
           call _c5aGg() args: 0, res: 0, upd: 0;
       c5aGh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fEnumCoercion_$cenumFromThen_info" {
     Data.Type.Coercion.$fEnumCoercion_$cenumFromThen_info:
         const Data.Type.Coercion.$fEnumCoercion_$cenumFromThen_entry;
         const 0;
         const 107374182414;
         const 12884901911;
         const S5aDk_srt+16;
 },
 _c5aGg() //  []
         { []
         }
     {offset
       c5aGg: // global
           I64[Sp] = block_c5aGl_info;
           R1 = P64[Sp + 16];
           if (R1 & 7 != 0) goto u5aGF; else goto c5aGm;
       u5aGF: // global
           call _c5aGl(R1) args: 0, res: 0, upd: 0;
       c5aGm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aGg_info" {
     block_c5aGg_info:
         const _c5aGg;
         const 2;
         const 73014444062;
         const S5aDk_srt+16;
 },
 _c5aGl() //  [R1]
         { []
         }
     {offset
       c5aGl: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5aGE; else goto c5aGD;
       c5aGE: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5aGD: // global
           I64[Hp - 8] = sat_s5azY_info;
           P64[Hp] = P64[Sp + 8];
           R3 = lvl1_r59Bc_closure;
           R2 = Hp - 7;
           Sp = Sp + 24;
           call GHC.Base.map_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aGl_info" {
     block_c5aGl_info:
         const _c5aGl;
         const 130;
         const 73014444062;
         const S5aDk_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.78774712 UTC

[section ""data" . Data.Type.Coercion.$w$cenumFrom_closure" {
     Data.Type.Coercion.$w$cenumFrom_closure:
         const Data.Type.Coercion.$w$cenumFrom_info;
         const 0;
 },
 sat_s5aA8_entry() //  [R1]
         { []
         }
     {offset
       c5aHj: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aHk; else goto c5aHl;
       c5aHk: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5aHl: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s5aA6::I64 = I64[R1 + 24];
           if (_s5aA6::I64 != 9223372036854775807) goto c5aHh; else goto c5aHi;
       c5aHh: // global
           R2 = _s5aA6::I64 + 1;
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call go_s5aA2_entry(R2, R1) args: 24, res: 0, upd: 24;
       c5aHi: // global
           R1 = []_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5aA8_info" {
     sat_s5aA8_info:
         const sat_s5aA8_entry;
         const 4294967297;
         const 4294967315;
         const S5aDk_srt+8;
 },
 sat_s5aA5_entry() //  [R1]
         { []
         }
     {offset
       c5aHw: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aHx; else goto c5aHy;
       c5aHx: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5aHy: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 24] == 0) goto c5aHv; else goto c5aHu;
       c5aHv: // global
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c5aHu: // global
           R1 = Data.Type.Coercion.$fEnumCoercion1_closure;
           Sp = Sp - 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5aA5_info" {
     sat_s5aA5_info:
         const sat_s5aA5_entry;
         const 4294967297;
         const 4294967315;
         const S5aDk_srt+8;
 },
 go_s5aA2_entry() //  [R1, R2]
         { []
         }
     {offset
       c5aHA: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto c5aHE; else goto c5aHD;
       c5aHE: // global
           HpAlloc = 88;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5aHD: // global
           _s5aA1::P64 = P64[R1 + 7];
           I64[Hp - 80] = sat_s5aA8_info;
           P64[Hp - 64] = R1;
           I64[Hp - 56] = R2;
           I64[Hp - 48] = sat_s5aA5_info;
           P64[Hp - 32] = _s5aA1::P64;
           I64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 80;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . go_s5aA2_info" {
     go_s5aA2_info:
         const go_s5aA2_entry;
         const 1;
         const 4294967305;
         const 4294967300;
         const S5aDk_srt+8;
 },
 Data.Type.Coercion.$w$cenumFrom_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aHF: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5aHJ; else goto c5aHI;
       c5aHJ: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$w$cenumFrom_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aHI: // global
           I64[Hp - 24] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp - 16] = R2;
           I64[Hp - 8] = go_s5aA2_info;
           P64[Hp] = Hp - 23;
           R2 = 0;
           R1 = Hp - 7;
           call go_s5aA2_entry(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$w$cenumFrom_info" {
     Data.Type.Coercion.$w$cenumFrom_info:
         const Data.Type.Coercion.$w$cenumFrom_entry;
         const 0;
         const 279172874254;
         const 8589934607;
         const S5aDk_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.802747981 UTC

[section ""data" . Data.Type.Coercion.$fEnumCoercion_$cenumFrom_closure" {
     Data.Type.Coercion.$fEnumCoercion_$cenumFrom_closure:
         const Data.Type.Coercion.$fEnumCoercion_$cenumFrom_info;
         const 0;
 },
 Data.Type.Coercion.$fEnumCoercion_$cenumFrom_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aIm: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aIn; else goto c5aIo;
       c5aIn: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fEnumCoercion_$cenumFrom_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aIo: // global
           I64[Sp - 16] = block_c5aIj_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5aIs; else goto c5aIk;
       u5aIs: // global
           call _c5aIj(R1) args: 0, res: 0, upd: 0;
       c5aIk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fEnumCoercion_$cenumFrom_info" {
     Data.Type.Coercion.$fEnumCoercion_$cenumFrom_info:
         const Data.Type.Coercion.$fEnumCoercion_$cenumFrom_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S5aDk_srt+56;
 },
 _c5aIj() //  [R1]
         { []
         }
     {offset
       c5aIj: // global
           R3 = R1;
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call Data.Type.Coercion.$w$cenumFrom_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aIj_info" {
     block_c5aIj_info:
         const _c5aIj;
         const 1;
         const 4294967326;
         const S5aDk_srt+56;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.815302352 UTC

[section ""data" . Data.Type.Coercion.$w$cenumFromThenTo_closure" {
     Data.Type.Coercion.$w$cenumFromThenTo_closure:
         const Data.Type.Coercion.$w$cenumFromThenTo_info;
         const 0;
 },
 sat_s5aAn_entry() //  [R1]
         { []
         }
     {offset
       c5aIY: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aIZ; else goto c5aJ0;
       c5aIZ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5aJ0: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = I64[R1 + 24];
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call go_up_s5aAi_entry(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5aAn_info" {
     sat_s5aAn_info:
         const sat_s5aAn_entry;
         const 4294967297;
         const 4294967315;
         const S5aDk_srt+8;
 },
 sat_s5aAm_entry() //  [R1]
         { []
         }
     {offset
       c5aJ9: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aJa; else goto c5aJb;
       c5aJa: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5aJb: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 24] == 0) goto c5aJ8; else goto c5aJ7;
       c5aJ8: // global
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c5aJ7: // global
           R1 = Data.Type.Coercion.$fEnumCoercion1_closure;
           Sp = Sp - 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5aAm_info" {
     sat_s5aAm_info:
         const sat_s5aAm_entry;
         const 4294967297;
         const 4294967315;
         const S5aDk_srt+8;
 },
 sat_s5aAp_entry() //  [R1]
         { []
         }
     {offset
       c5aJl: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aJm; else goto c5aJn;
       c5aJm: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5aJn: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 24] == 0) goto c5aJk; else goto c5aJj;
       c5aJk: // global
           R1 = P64[R1 + 16];
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c5aJj: // global
           R1 = Data.Type.Coercion.$fEnumCoercion1_closure;
           Sp = Sp - 16;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5aAp_info" {
     sat_s5aAp_info:
         const sat_s5aAp_entry;
         const 4294967297;
         const 4294967315;
         const S5aDk_srt+8;
 },
 go_up_s5aAi_entry() //  [R1, R2]
         { []
         }
     {offset
       c5aJr: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto c5aJv; else goto c5aJu;
       c5aJv: // global
           HpAlloc = 88;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5aJu: // global
           _s5aAh::P64 = P64[R1 + 7];
           if (%MO_S_Le_W64(R2, 0)) goto c5aJp; else goto c5aJq;
       c5aJp: // global
           I64[Hp - 80] = sat_s5aAn_info;
           P64[Hp - 64] = R1;
           I64[Hp - 56] = R2;
           I64[Hp - 48] = sat_s5aAm_info;
           P64[Hp - 32] = _s5aAh::P64;
           I64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 80;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5aJq: // global
           I64[Hp - 80] = sat_s5aAp_info;
           P64[Hp - 64] = _s5aAh::P64;
           I64[Hp - 56] = R2;
           I64[Hp - 48] = :_con_info;
           P64[Hp - 40] = Hp - 80;
           P64[Hp - 32] = GHC.Types.[]_closure+1;
           _c5aJx::P64 = Hp - 46;
           Hp = Hp - 32;
           R1 = _c5aJx::P64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . go_up_s5aAi_info" {
     go_up_s5aAi_info:
         const go_up_s5aAi_entry;
         const 1;
         const 4294967305;
         const 4294967300;
         const S5aDk_srt+8;
 },
 sat_s5aAq_entry() //  [R1]
         { []
         }
     {offset
       c5aJy: // global
           _s5aAq::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5aJz; else goto c5aJA;
       c5aJA: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5aJC; else goto c5aJB;
       c5aJC: // global
           HpAlloc = 16;
           goto c5aJz;
       c5aJz: // global
           R1 = _s5aAq::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5aJB: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5aAq::P64;
           _s5aAh::P64 = P64[_s5aAq::P64 + 16];
           I64[Hp - 8] = go_up_s5aAi_info;
           P64[Hp] = _s5aAh::P64;
           R2 = 0;
           R1 = Hp - 7;
           Sp = Sp - 16;
           call go_up_s5aAi_entry(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5aAq_info" {
     sat_s5aAq_info:
         const sat_s5aAq_entry;
         const 1;
         const 4294967312;
         const S5aDk_srt+8;
 },
 Data.Type.Coercion.$w$cenumFromThenTo_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5aJD: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c5aJH; else goto c5aJG;
       c5aJH: // global
           HpAlloc = 40;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$w$cenumFromThenTo_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aJG: // global
           I64[Hp - 32] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = sat_s5aAq_info;
           _c5aIH::P64 = Hp - 31;
           P64[Hp] = _c5aIH::P64;
           R2 = Hp - 16;
           R1 = _c5aIH::P64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$w$cenumFromThenTo_info" {
     Data.Type.Coercion.$w$cenumFromThenTo_info:
         const Data.Type.Coercion.$w$cenumFromThenTo_entry;
         const 0;
         const 1103806595086;
         const 17179869208;
         const S5aDk_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.838861176 UTC

[section ""data" . Data.Type.Coercion.$fEnumCoercion_$cenumFromThenTo_closure" {
     Data.Type.Coercion.$fEnumCoercion_$cenumFromThenTo_closure:
         const Data.Type.Coercion.$fEnumCoercion_$cenumFromThenTo_info;
         const 0;
 },
 Data.Type.Coercion.$fEnumCoercion_$cenumFromThenTo_entry() //  [R2,
                                                                 R3, R4, R5]
         { []
         }
     {offset
       c5aKA: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c5aKQ; else goto c5aKR;
       c5aKQ: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fEnumCoercion_$cenumFromThenTo_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aKR: // global
           I64[Sp - 32] = block_c5aKx_info;
           R1 = R3;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u5aKZ; else goto c5aKy;
       u5aKZ: // global
           call _c5aKx(R1) args: 0, res: 0, upd: 0;
       c5aKy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fEnumCoercion_$cenumFromThenTo_info" {
     Data.Type.Coercion.$fEnumCoercion_$cenumFromThenTo_info:
         const Data.Type.Coercion.$fEnumCoercion_$cenumFromThenTo_entry;
         const 0;
         const 12884901902;
         const 17179869208;
         const S5aDk_srt+72;
 },
 _c5aKx() //  [R1]
         { []
         }
     {offset
       c5aKx: // global
           I64[Sp] = block_c5aKD_info;
           _s5aAv::P64 = R1;
           R1 = P64[Sp + 16];
           P64[Sp + 16] = _s5aAv::P64;
           if (R1 & 7 != 0) goto u5aKY; else goto c5aKE;
       u5aKY: // global
           call _c5aKD(R1) args: 0, res: 0, upd: 0;
       c5aKE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aKx_info" {
     block_c5aKx_info:
         const _c5aKx;
         const 3;
         const 4294967326;
         const S5aDk_srt+72;
 },
 _c5aKD() //  [R1]
         { []
         }
     {offset
       c5aKD: // global
           I64[Sp] = block_c5aKI_info;
           _s5aAx::P64 = R1;
           R1 = P64[Sp + 24];
           P64[Sp + 24] = _s5aAx::P64;
           if (R1 & 7 != 0) goto u5aL0; else goto c5aKJ;
       u5aL0: // global
           call _c5aKI(R1) args: 0, res: 0, upd: 0;
       c5aKJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aKD_info" {
     block_c5aKD_info:
         const _c5aKD;
         const 3;
         const 4294967326;
         const S5aDk_srt+72;
 },
 _c5aKI() //  [R1]
         { []
         }
     {offset
       c5aKI: // global
           _s5aAx::P64 = P64[Sp + 24];
           I64[Sp + 24] = block_c5aKN_info;
           R5 = R1;
           R4 = _s5aAx::P64;
           R3 = P64[Sp + 16];
           R2 = P64[Sp + 8];
           Sp = Sp + 24;
           call Data.Type.Coercion.$w$cenumFromThenTo_entry(R5,
                                                            R4,
                                                            R3,
                                                            R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aKI_info" {
     block_c5aKI_info:
         const _c5aKI;
         const 3;
         const 4294967326;
         const S5aDk_srt+72;
 },
 _c5aKN() //  [R1, R2]
         { []
         }
     {offset
       c5aKN: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5aKX; else goto c5aKW;
       c5aKX: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c5aKW: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aKN_info" {
     block_c5aKN_info:
         const _c5aKN;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.855967627 UTC

[section ""data" . lvl2_r59Bd_closure" {
     lvl2_r59Bd_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.859489947 UTC

[section ""data" . lvl3_r59Be_closure" {
     lvl3_r59Be_closure:
         const lvl3_r59Be_info;
 },
 lvl3_r59Be_entry() //  [R2]
         { []
         }
     {offset
       c5aLz: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5aLA; else goto c5aLB;
       c5aLA: // global
           R2 = R2;
           R1 = lvl3_r59Be_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5aLB: // global
           I64[Sp - 8] = block_c5aLw_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5aLF; else goto c5aLx;
       u5aLF: // global
           call _c5aLw() args: 0, res: 0, upd: 0;
       c5aLx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . lvl3_r59Be_info" {
     lvl3_r59Be_info:
         const lvl3_r59Be_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5aLw() //  []
         { []
         }
     {offset
       c5aLw: // global
           R1 = lvl2_r59Bd_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aLw_info" {
     block_c5aLw_info:
         const _c5aLw;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.865500601 UTC

[section ""data" . lvl4_r59Bf_closure" {
     lvl4_r59Bf_closure:
         const lvl4_r59Bf_info;
         const 0;
 },
 lvl4_r59Bf_entry() //  [R2]
         { []
         }
     {offset
       c5aLY: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5aLZ; else goto c5aM0;
       c5aLZ: // global
           R2 = R2;
           R1 = lvl4_r59Bf_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5aM0: // global
           I64[Sp - 8] = block_c5aLV_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5aM4; else goto c5aLW;
       u5aM4: // global
           call _c5aLV() args: 0, res: 0, upd: 0;
       c5aLW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . lvl4_r59Bf_info" {
     lvl4_r59Bf_info:
         const lvl4_r59Bf_entry;
         const 0;
         const 4402341478414;
         const 4294967301;
         const S5aDk_srt+8;
 },
 _c5aLV() //  []
         { []
         }
     {offset
       c5aLV: // global
           R1 = Data.Type.Coercion.$fEnumCoercion1_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aLV_info" {
     block_c5aLV_info:
         const _c5aLV;
         const 0;
         const 4294967326;
         const S5aDk_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.872897103 UTC

[section ""data" . Data.Type.Coercion.$fEnumCoercion_closure" {
     Data.Type.Coercion.$fEnumCoercion_closure:
         const Data.Type.Coercion.$fEnumCoercion_info;
         const 0;
 },
 sat_s5aAP_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       c5aMp: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Data.Type.Coercion.$fEnumCoercion_$cenumFromThenTo_entry(R5,
                                                                         R4,
                                                                         R3,
                                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5aAP_info" {
     sat_s5aAP_info:
         const sat_s5aAP_entry;
         const 1;
         const 4294967305;
         const 12884901911;
         const S5aDk_srt+80;
 },
 sat_s5aAO_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5aMx: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Type.Coercion.$fEnumCoercion_$cenumFromTo_entry(R4,
                                                                     R3,
                                                                     R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5aAO_info" {
     sat_s5aAO_info:
         const sat_s5aAO_entry;
         const 1;
         const 4294967305;
         const 8589934607;
         const S5aDk_srt+32;
 },
 sat_s5aAN_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5aMF: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Type.Coercion.$fEnumCoercion_$cenumFromThen_entry(R4,
                                                                       R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5aAN_info" {
     sat_s5aAN_info:
         const sat_s5aAN_entry;
         const 1;
         const 4294967305;
         const 8589934607;
         const S5aDk_srt+40;
 },
 sat_s5aAM_entry() //  [R1, R2]
         { []
         }
     {offset
       c5aMN: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Type.Coercion.$fEnumCoercion_$cenumFrom_entry(R3,
                                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5aAM_info" {
     sat_s5aAM_info:
         const sat_s5aAM_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5aDk_srt+64;
 },
 sat_s5aAL_entry() //  [R1, R2]
         { []
         }
     {offset
       c5aMV: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Type.Coercion.$fEnumCoercion_$ctoEnum_entry(R3,
                                                                 R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5aAL_info" {
     sat_s5aAL_info:
         const sat_s5aAL_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5aDk_srt+16;
 },
 Data.Type.Coercion.$fEnumCoercion_entry() //  [R2]
         { []
         }
     {offset
       c5aMZ: // global
           Hp = Hp + 152;
           if (Hp > HpLim) (likely: False) goto c5aN3; else goto c5aN2;
       c5aN3: // global
           HpAlloc = 152;
           R2 = R2;
           R1 = Data.Type.Coercion.$fEnumCoercion_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5aN2: // global
           I64[Hp - 144] = sat_s5aAP_info;
           P64[Hp - 136] = R2;
           I64[Hp - 128] = sat_s5aAO_info;
           P64[Hp - 120] = R2;
           I64[Hp - 112] = sat_s5aAN_info;
           P64[Hp - 104] = R2;
           I64[Hp - 96] = sat_s5aAM_info;
           P64[Hp - 88] = R2;
           I64[Hp - 80] = sat_s5aAL_info;
           P64[Hp - 72] = R2;
           I64[Hp - 64] = GHC.Enum.C:Enum_con_info;
           P64[Hp - 56] = lvl4_r59Bf_closure+1;
           P64[Hp - 48] = lvl4_r59Bf_closure+1;
           P64[Hp - 40] = Hp - 79;
           P64[Hp - 32] = lvl3_r59Be_closure+1;
           P64[Hp - 24] = Hp - 95;
           P64[Hp - 16] = Hp - 110;
           P64[Hp - 8] = Hp - 126;
           P64[Hp] = Hp - 141;
           R1 = Hp - 63;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fEnumCoercion_info" {
     Data.Type.Coercion.$fEnumCoercion_info:
         const Data.Type.Coercion.$fEnumCoercion_entry;
         const 0;
         const 8027293876238;
         const 4294967301;
         const S5aDk_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.886382386 UTC

[section ""data" . Data.Type.Coercion.$fTestCoercionk:~:_$ctestCoercion_closure" {
     Data.Type.Coercion.$fTestCoercionk:~:_$ctestCoercion_closure:
         const Data.Type.Coercion.$fTestCoercionk:~:_$ctestCoercion_info;
 },
 Data.Type.Coercion.$fTestCoercionk:~:_$ctestCoercion_entry() //  [R2,
                                                                   R3]
         { []
         }
     {offset
       c5aNJ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aNU; else goto c5aNV;
       c5aNU: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fTestCoercionk:~:_$ctestCoercion_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aNV: // global
           I64[Sp - 16] = block_c5aNG_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5aO1; else goto c5aNH;
       u5aO1: // global
           call _c5aNG() args: 0, res: 0, upd: 0;
       c5aNH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fTestCoercionk:~:_$ctestCoercion_info" {
     Data.Type.Coercion.$fTestCoercionk:~:_$ctestCoercion_info:
         const Data.Type.Coercion.$fTestCoercionk:~:_$ctestCoercion_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5aNG() //  []
         { []
         }
     {offset
       c5aNG: // global
           _s5aAR::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5aNM_info;
           R1 = _s5aAR::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5aO0; else goto c5aNN;
       u5aO0: // global
           call _c5aNM(R1) args: 0, res: 0, upd: 0;
       c5aNN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aNG_info" {
     block_c5aNG_info:
         const _c5aNG;
         const 1;
         const 30;
 },
 _c5aNM() //  [R1]
         { []
         }
     {offset
       c5aNM: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5aNZ; else goto c5aNY;
       c5aNZ: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5aNY: // global
           I64[Hp - 40] = GHC.Types.MkCoercible_con_info;
           I64[Hp - 24] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp - 16] = Hp - 39;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aNM_info" {
     block_c5aNM_info:
         const _c5aNM;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.894247613 UTC

[section ""data" . Data.Type.Coercion.$fTestCoercionk:~:_closure" {
     Data.Type.Coercion.$fTestCoercionk:~:_closure:
         const Data.Type.Coercion.$fTestCoercionk:~:_info;
 },
 Data.Type.Coercion.$fTestCoercionk:~:_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aOr: // global
           R3 = R3;
           R2 = R2;
           call Data.Type.Coercion.$fTestCoercionk:~:_$ctestCoercion_entry(R3,
                                                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fTestCoercionk:~:_info" {
     Data.Type.Coercion.$fTestCoercionk:~:_info:
         const Data.Type.Coercion.$fTestCoercionk:~:_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.898829143 UTC

[section ""data" . Data.Type.Coercion.$fTestCoercionk:~~:_$ctestCoercion_closure" {
     Data.Type.Coercion.$fTestCoercionk:~~:_$ctestCoercion_closure:
         const Data.Type.Coercion.$fTestCoercionk:~~:_$ctestCoercion_info;
 },
 Data.Type.Coercion.$fTestCoercionk:~~:_$ctestCoercion_entry() //  [R2,
                                                                    R3]
         { []
         }
     {offset
       c5aOF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aOQ; else goto c5aOR;
       c5aOQ: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fTestCoercionk:~~:_$ctestCoercion_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aOR: // global
           I64[Sp - 16] = block_c5aOC_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5aOX; else goto c5aOD;
       u5aOX: // global
           call _c5aOC() args: 0, res: 0, upd: 0;
       c5aOD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fTestCoercionk:~~:_$ctestCoercion_info" {
     Data.Type.Coercion.$fTestCoercionk:~~:_$ctestCoercion_info:
         const Data.Type.Coercion.$fTestCoercionk:~~:_$ctestCoercion_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5aOC() //  []
         { []
         }
     {offset
       c5aOC: // global
           _s5aAX::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5aOI_info;
           R1 = _s5aAX::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5aOW; else goto c5aOJ;
       u5aOW: // global
           call _c5aOI(R1) args: 0, res: 0, upd: 0;
       c5aOJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aOC_info" {
     block_c5aOC_info:
         const _c5aOC;
         const 1;
         const 30;
 },
 _c5aOI() //  [R1]
         { []
         }
     {offset
       c5aOI: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5aOV; else goto c5aOU;
       c5aOV: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5aOU: // global
           I64[Hp - 40] = GHC.Types.MkCoercible_con_info;
           I64[Hp - 24] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp - 16] = Hp - 39;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aOI_info" {
     block_c5aOI_info:
         const _c5aOI;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.907245475 UTC

[section ""data" . Data.Type.Coercion.$fTestCoercionk:~~:_closure" {
     Data.Type.Coercion.$fTestCoercionk:~~:_closure:
         const Data.Type.Coercion.$fTestCoercionk:~~:_info;
 },
 Data.Type.Coercion.$fTestCoercionk:~~:_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aPn: // global
           R3 = R3;
           R2 = R2;
           call Data.Type.Coercion.$fTestCoercionk:~~:_$ctestCoercion_entry(R3,
                                                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fTestCoercionk:~~:_info" {
     Data.Type.Coercion.$fTestCoercionk:~~:_info:
         const Data.Type.Coercion.$fTestCoercionk:~~:_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.912686154 UTC

[section ""data" . Data.Type.Coercion.$fTestCoercionkCoercion_$ctestCoercion_closure" {
     Data.Type.Coercion.$fTestCoercionkCoercion_$ctestCoercion_closure:
         const Data.Type.Coercion.$fTestCoercionkCoercion_$ctestCoercion_info;
 },
 Data.Type.Coercion.$fTestCoercionkCoercion_$ctestCoercion_entry() //  [R2,
                                                                        R3]
         { []
         }
     {offset
       c5aPB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aPQ; else goto c5aPR;
       c5aPQ: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fTestCoercionkCoercion_$ctestCoercion_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aPR: // global
           I64[Sp - 16] = block_c5aPy_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5aPZ; else goto c5aPz;
       u5aPZ: // global
           call _c5aPy(R1) args: 0, res: 0, upd: 0;
       c5aPz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fTestCoercionkCoercion_$ctestCoercion_info" {
     Data.Type.Coercion.$fTestCoercionkCoercion_$ctestCoercion_info:
         const Data.Type.Coercion.$fTestCoercionkCoercion_$ctestCoercion_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5aPy() //  [R1]
         { []
         }
     {offset
       c5aPy: // global
           I64[Sp] = block_c5aPE_info;
           _s5aB5::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5aB5::P64;
           if (R1 & 7 != 0) goto u5aPY; else goto c5aPF;
       u5aPY: // global
           call _c5aPE(R1) args: 0, res: 0, upd: 0;
       c5aPF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aPy_info" {
     block_c5aPy_info:
         const _c5aPy;
         const 1;
         const 30;
 },
 _c5aPE() //  [R1]
         { []
         }
     {offset
       c5aPE: // global
           I64[Sp] = block_c5aPJ_info;
           R2 = P64[Sp + 8];
           P64[Sp + 8] = P64[R1 + 7];
           call GHC.Types.coercible_sel_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aPE_info" {
     block_c5aPE_info:
         const _c5aPE;
         const 1;
         const 30;
 },
 _c5aPJ() //  []
         { []
         }
     {offset
       c5aPJ: // global
           _s5aB7::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5aPL_info;
           R2 = _s5aB7::P64;
           Sp = Sp + 8;
           call GHC.Types.coercible_sel_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aPJ_info" {
     block_c5aPJ_info:
         const _c5aPJ;
         const 1;
         const 30;
 },
 _c5aPL() //  []
         { []
         }
     {offset
       c5aPL: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5aPX; else goto c5aPW;
       c5aPX: // global
           HpAlloc = 48;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c5aPW: // global
           I64[Hp - 40] = GHC.Types.MkCoercible_con_info;
           I64[Hp - 24] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp - 16] = Hp - 39;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aPL_info" {
     block_c5aPL_info:
         const _c5aPL;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.923085477 UTC

[section ""data" . Data.Type.Coercion.$fTestCoercionkCoercion_closure" {
     Data.Type.Coercion.$fTestCoercionkCoercion_closure:
         const Data.Type.Coercion.$fTestCoercionkCoercion_info;
 },
 Data.Type.Coercion.$fTestCoercionkCoercion_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aQy: // global
           R3 = R3;
           R2 = R2;
           call Data.Type.Coercion.$fTestCoercionkCoercion_$ctestCoercion_entry(R3,
                                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fTestCoercionkCoercion_info" {
     Data.Type.Coercion.$fTestCoercionkCoercion_info:
         const Data.Type.Coercion.$fTestCoercionkCoercion_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.9279803 UTC

[section ""data" . Data.Type.Coercion.$fEqCoercion_$c==_closure" {
     Data.Type.Coercion.$fEqCoercion_$c==_closure:
         const Data.Type.Coercion.$fEqCoercion_$c==_info;
 },
 Data.Type.Coercion.$fEqCoercion_$c==_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aQM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aQQ; else goto c5aQR;
       c5aQQ: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fEqCoercion_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aQR: // global
           I64[Sp - 16] = block_c5aQJ_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5aQZ; else goto c5aQK;
       u5aQZ: // global
           call _c5aQJ() args: 0, res: 0, upd: 0;
       c5aQK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fEqCoercion_$c==_info" {
     Data.Type.Coercion.$fEqCoercion_$c==_info:
         const Data.Type.Coercion.$fEqCoercion_$c==_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5aQJ() //  []
         { []
         }
     {offset
       c5aQJ: // global
           _s5aBb::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5aQP_info;
           R1 = _s5aBb::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5aQY; else goto c5aQT;
       u5aQY: // global
           call _c5aQP() args: 0, res: 0, upd: 0;
       c5aQT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aQJ_info" {
     block_c5aQJ_info:
         const _c5aQJ;
         const 1;
         const 30;
 },
 _c5aQP() //  []
         { []
         }
     {offset
       c5aQP: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aQP_info" {
     block_c5aQP_info:
         const _c5aQP;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.939064434 UTC

[section ""data" . Data.Type.Coercion.$fEqCoercion_$c/=_closure" {
     Data.Type.Coercion.$fEqCoercion_$c/=_closure:
         const Data.Type.Coercion.$fEqCoercion_$c/=_info;
 },
 Data.Type.Coercion.$fEqCoercion_$c/=_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aRo: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aRs; else goto c5aRt;
       c5aRs: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fEqCoercion_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aRt: // global
           I64[Sp - 16] = block_c5aRl_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5aRB; else goto c5aRm;
       u5aRB: // global
           call _c5aRl() args: 0, res: 0, upd: 0;
       c5aRm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fEqCoercion_$c/=_info" {
     Data.Type.Coercion.$fEqCoercion_$c/=_info:
         const Data.Type.Coercion.$fEqCoercion_$c/=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5aRl() //  []
         { []
         }
     {offset
       c5aRl: // global
           _s5aBh::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5aRr_info;
           R1 = _s5aBh::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5aRA; else goto c5aRv;
       u5aRA: // global
           call _c5aRr() args: 0, res: 0, upd: 0;
       c5aRv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aRl_info" {
     block_c5aRl_info:
         const _c5aRl;
         const 1;
         const 30;
 },
 _c5aRr() //  []
         { []
         }
     {offset
       c5aRr: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aRr_info" {
     block_c5aRr_info:
         const _c5aRr;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.945885961 UTC

[section ""data" . Data.Type.Coercion.$fEqCoercion_closure" {
     Data.Type.Coercion.$fEqCoercion_closure:
         const GHC.Classes.C:Eq_con_info;
         const Data.Type.Coercion.$fEqCoercion_$c==_closure+2;
         const Data.Type.Coercion.$fEqCoercion_$c/=_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.947618168 UTC

[section ""cstring" . Data.Type.Coercion.$fReadCoercion3_bytes" {
     Data.Type.Coercion.$fReadCoercion3_bytes:
         I8[] [67,111,101,114,99,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.950329881 UTC

[section ""data" . Data.Type.Coercion.$fReadCoercion2_closure" {
     Data.Type.Coercion.$fReadCoercion2_closure:
         const Data.Type.Coercion.$fReadCoercion2_info;
         const 0;
         const 0;
         const 0;
 },
 Data.Type.Coercion.$fReadCoercion2_entry() //  [R1]
         { []
         }
     {offset
       c5aS1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aS2; else goto c5aS3;
       c5aS2: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5aS3: // global
           (_c5aRY::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5aRY::I64 == 0) goto c5aS0; else goto c5aRZ;
       c5aS0: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5aRZ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5aRY::I64;
           R2 = Data.Type.Coercion.$fReadCoercion3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fReadCoercion2_info" {
     Data.Type.Coercion.$fReadCoercion2_info:
         const Data.Type.Coercion.$fReadCoercion2_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.95553711 UTC

[section ""data" . Data.Type.Coercion.$fShowCoercion_$cshowsPrec_closure" {
     Data.Type.Coercion.$fShowCoercion_$cshowsPrec_closure:
         const Data.Type.Coercion.$fShowCoercion_$cshowsPrec_info;
         const 0;
 },
 Data.Type.Coercion.$fShowCoercion_$cshowsPrec_entry() //  [R2, R3,
                                                            R4]
         { []
         }
     {offset
       c5aSj: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aSk; else goto c5aSl;
       c5aSk: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fShowCoercion_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aSl: // global
           I64[Sp - 16] = block_c5aSg_info;
           R1 = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5aSp; else goto c5aSh;
       u5aSp: // global
           call _c5aSg() args: 0, res: 0, upd: 0;
       c5aSh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fShowCoercion_$cshowsPrec_info" {
     Data.Type.Coercion.$fShowCoercion_$cshowsPrec_info:
         const Data.Type.Coercion.$fShowCoercion_$cshowsPrec_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S5aDk_srt+104;
 },
 _c5aSg() //  []
         { []
         }
     {offset
       c5aSg: // global
           R3 = P64[Sp + 8];
           R2 = Data.Type.Coercion.$fReadCoercion2_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aSg_info" {
     block_c5aSg_info:
         const _c5aSg;
         const 1;
         const 4294967326;
         const S5aDk_srt+104;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.962890911 UTC

[section ""data" . Data.Type.Coercion.$fShowCoercion_$cshow_closure" {
     Data.Type.Coercion.$fShowCoercion_$cshow_closure:
         const Data.Type.Coercion.$fShowCoercion_$cshow_info;
         const 0;
 },
 Data.Type.Coercion.$fShowCoercion_$cshow_entry() //  [R2]
         { []
         }
     {offset
       c5aSH: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5aSI; else goto c5aSJ;
       c5aSI: // global
           R2 = R2;
           R1 = Data.Type.Coercion.$fShowCoercion_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5aSJ: // global
           I64[Sp - 8] = block_c5aSE_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5aSN; else goto c5aSF;
       u5aSN: // global
           call _c5aSE() args: 0, res: 0, upd: 0;
       c5aSF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fShowCoercion_$cshow_info" {
     Data.Type.Coercion.$fShowCoercion_$cshow_info:
         const Data.Type.Coercion.$fShowCoercion_$cshow_entry;
         const 0;
         const 21474836494;
         const 4294967301;
         const S5aDk_srt+104;
 },
 _c5aSE() //  []
         { []
         }
     {offset
       c5aSE: // global
           R1 = Data.Type.Coercion.$fReadCoercion2_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aSE_info" {
     block_c5aSE_info:
         const _c5aSE;
         const 0;
         const 4294967326;
         const S5aDk_srt+104;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.969051581 UTC

[section ""data" . Data.Type.Coercion.$fShowCoercion1_closure" {
     Data.Type.Coercion.$fShowCoercion1_closure:
         const Data.Type.Coercion.$fShowCoercion1_info;
         const 0;
 },
 Data.Type.Coercion.$fShowCoercion1_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aT6: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aT7; else goto c5aT8;
       c5aT7: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fShowCoercion1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aT8: // global
           I64[Sp - 16] = block_c5aT3_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5aTc; else goto c5aT4;
       u5aTc: // global
           call _c5aT3() args: 0, res: 0, upd: 0;
       c5aT4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fShowCoercion1_info" {
     Data.Type.Coercion.$fShowCoercion1_info:
         const Data.Type.Coercion.$fShowCoercion1_entry;
         const 0;
         const 38654705678;
         const 8589934607;
         const S5aDk_srt+104;
 },
 _c5aT3() //  []
         { []
         }
     {offset
       c5aT3: // global
           R3 = P64[Sp + 8];
           R2 = Data.Type.Coercion.$fReadCoercion2_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aT3_info" {
     block_c5aT3_info:
         const _c5aT3;
         const 1;
         const 4294967326;
         const S5aDk_srt+104;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.975480277 UTC

[section ""data" . Data.Type.Coercion.$fShowCoercion_$cshowList_closure" {
     Data.Type.Coercion.$fShowCoercion_$cshowList_closure:
         const Data.Type.Coercion.$fShowCoercion_$cshowList_info;
         const 0;
 },
 Data.Type.Coercion.$fShowCoercion_$cshowList_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aTr: // global
           R4 = R3;
           R3 = R2;
           R2 = Data.Type.Coercion.$fShowCoercion1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fShowCoercion_$cshowList_info" {
     Data.Type.Coercion.$fShowCoercion_$cshowList_info:
         const Data.Type.Coercion.$fShowCoercion_$cshowList_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S5aDk_srt+128;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.980027368 UTC

[section ""data" . Data.Type.Coercion.$fShowCoercion_closure" {
     Data.Type.Coercion.$fShowCoercion_closure:
         const GHC.Show.C:Show_con_info;
         const Data.Type.Coercion.$fShowCoercion_$cshowsPrec_closure+3;
         const Data.Type.Coercion.$fShowCoercion_$cshow_closure+1;
         const Data.Type.Coercion.$fShowCoercion_$cshowList_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.984345869 UTC

[section ""data" . Data.Type.Coercion.$fOrdCoercion_$c<_closure" {
     Data.Type.Coercion.$fOrdCoercion_$c<_closure:
         const Data.Type.Coercion.$fOrdCoercion_$c<_info;
 },
 Data.Type.Coercion.$fOrdCoercion_$c<_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aTG: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aTK; else goto c5aTL;
       c5aTK: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fOrdCoercion_$c<_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aTL: // global
           I64[Sp - 16] = block_c5aTD_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5aTT; else goto c5aTE;
       u5aTT: // global
           call _c5aTD() args: 0, res: 0, upd: 0;
       c5aTE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fOrdCoercion_$c<_info" {
     Data.Type.Coercion.$fOrdCoercion_$c<_info:
         const Data.Type.Coercion.$fOrdCoercion_$c<_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5aTD() //  []
         { []
         }
     {offset
       c5aTD: // global
           _s5aBB::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5aTJ_info;
           R1 = _s5aBB::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5aTS; else goto c5aTN;
       u5aTS: // global
           call _c5aTJ() args: 0, res: 0, upd: 0;
       c5aTN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aTD_info" {
     block_c5aTD_info:
         const _c5aTD;
         const 1;
         const 30;
 },
 _c5aTJ() //  []
         { []
         }
     {offset
       c5aTJ: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aTJ_info" {
     block_c5aTJ_info:
         const _c5aTJ;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:07.993415398 UTC

[section ""data" . Data.Type.Coercion.$fOrdCoercion_$ccompare_closure" {
     Data.Type.Coercion.$fOrdCoercion_$ccompare_closure:
         const Data.Type.Coercion.$fOrdCoercion_$ccompare_info;
 },
 Data.Type.Coercion.$fOrdCoercion_$ccompare_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aUi: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aUm; else goto c5aUn;
       c5aUm: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fOrdCoercion_$ccompare_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aUn: // global
           I64[Sp - 16] = block_c5aUf_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5aUv; else goto c5aUg;
       u5aUv: // global
           call _c5aUf() args: 0, res: 0, upd: 0;
       c5aUg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fOrdCoercion_$ccompare_info" {
     Data.Type.Coercion.$fOrdCoercion_$ccompare_info:
         const Data.Type.Coercion.$fOrdCoercion_$ccompare_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5aUf() //  []
         { []
         }
     {offset
       c5aUf: // global
           _s5aBH::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5aUl_info;
           R1 = _s5aBH::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5aUu; else goto c5aUp;
       u5aUu: // global
           call _c5aUl() args: 0, res: 0, upd: 0;
       c5aUp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aUf_info" {
     block_c5aUf_info:
         const _c5aUf;
         const 1;
         const 30;
 },
 _c5aUl() //  []
         { []
         }
     {offset
       c5aUl: // global
           R1 = GHC.Types.EQ_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aUl_info" {
     block_c5aUl_info:
         const _c5aUl;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.00376743 UTC

[section ""data" . Data.Type.Coercion.$fOrdCoercion_$c<=_closure" {
     Data.Type.Coercion.$fOrdCoercion_$c<=_closure:
         const Data.Type.Coercion.$fOrdCoercion_$c<=_info;
 },
 Data.Type.Coercion.$fOrdCoercion_$c<=_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aUU: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aUY; else goto c5aUZ;
       c5aUY: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fOrdCoercion_$c<=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aUZ: // global
           I64[Sp - 16] = block_c5aUR_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5aV7; else goto c5aUS;
       u5aV7: // global
           call _c5aUR() args: 0, res: 0, upd: 0;
       c5aUS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fOrdCoercion_$c<=_info" {
     Data.Type.Coercion.$fOrdCoercion_$c<=_info:
         const Data.Type.Coercion.$fOrdCoercion_$c<=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5aUR() //  []
         { []
         }
     {offset
       c5aUR: // global
           _s5aBM::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5aUX_info;
           R1 = _s5aBM::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5aV6; else goto c5aV1;
       u5aV6: // global
           call _c5aUX() args: 0, res: 0, upd: 0;
       c5aV1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aUR_info" {
     block_c5aUR_info:
         const _c5aUR;
         const 1;
         const 30;
 },
 _c5aUX() //  []
         { []
         }
     {offset
       c5aUX: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aUX_info" {
     block_c5aUX_info:
         const _c5aUX;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.015211957 UTC

[section ""data" . Data.Type.Coercion.$fOrdCoercion_$cmax_closure" {
     Data.Type.Coercion.$fOrdCoercion_$cmax_closure:
         const Data.Type.Coercion.$fOrdCoercion_$cmax_info;
 },
 Data.Type.Coercion.$fOrdCoercion_$cmax_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aVw: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aVx; else goto c5aVy;
       c5aVx: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fOrdCoercion_$cmax_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aVy: // global
           I64[Sp - 16] = block_c5aVt_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5aVC; else goto c5aVu;
       u5aVC: // global
           call _c5aVt() args: 0, res: 0, upd: 0;
       c5aVu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fOrdCoercion_$cmax_info" {
     Data.Type.Coercion.$fOrdCoercion_$cmax_info:
         const Data.Type.Coercion.$fOrdCoercion_$cmax_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5aVt() //  []
         { []
         }
     {offset
       c5aVt: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aVt_info" {
     block_c5aVt_info:
         const _c5aVt;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.024958337 UTC

[section ""data" . Data.Type.Coercion.$fOrdCoercion_$c>_closure" {
     Data.Type.Coercion.$fOrdCoercion_$c>_closure:
         const Data.Type.Coercion.$fOrdCoercion_$c>_info;
 },
 Data.Type.Coercion.$fOrdCoercion_$c>_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aVW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aW0; else goto c5aW1;
       c5aW0: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fOrdCoercion_$c>_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aW1: // global
           I64[Sp - 16] = block_c5aVT_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5aW9; else goto c5aVU;
       u5aW9: // global
           call _c5aVT() args: 0, res: 0, upd: 0;
       c5aVU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fOrdCoercion_$c>_info" {
     Data.Type.Coercion.$fOrdCoercion_$c>_info:
         const Data.Type.Coercion.$fOrdCoercion_$c>_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5aVT() //  []
         { []
         }
     {offset
       c5aVT: // global
           _s5aBW::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5aVZ_info;
           R1 = _s5aBW::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5aW8; else goto c5aW3;
       u5aW8: // global
           call _c5aVZ() args: 0, res: 0, upd: 0;
       c5aW3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aVT_info" {
     block_c5aVT_info:
         const _c5aVT;
         const 1;
         const 30;
 },
 _c5aVZ() //  []
         { []
         }
     {offset
       c5aVZ: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aVZ_info" {
     block_c5aVZ_info:
         const _c5aVZ;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.037715654 UTC

[section ""data" . Data.Type.Coercion.$fOrdCoercion_$cmin_closure" {
     Data.Type.Coercion.$fOrdCoercion_$cmin_closure:
         const Data.Type.Coercion.$fOrdCoercion_$cmin_info;
 },
 Data.Type.Coercion.$fOrdCoercion_$cmin_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aWy: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aWz; else goto c5aWA;
       c5aWz: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fOrdCoercion_$cmin_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aWA: // global
           I64[Sp - 16] = block_c5aWv_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5aWE; else goto c5aWw;
       u5aWE: // global
           call _c5aWv() args: 0, res: 0, upd: 0;
       c5aWw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fOrdCoercion_$cmin_info" {
     Data.Type.Coercion.$fOrdCoercion_$cmin_info:
         const Data.Type.Coercion.$fOrdCoercion_$cmin_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5aWv() //  []
         { []
         }
     {offset
       c5aWv: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aWv_info" {
     block_c5aWv_info:
         const _c5aWv;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.045639274 UTC

[section ""data" . Data.Type.Coercion.$fOrdCoercion_closure" {
     Data.Type.Coercion.$fOrdCoercion_closure:
         const GHC.Classes.C:Ord_con_info;
         const Data.Type.Coercion.$fEqCoercion_closure+1;
         const Data.Type.Coercion.$fOrdCoercion_$ccompare_closure+2;
         const Data.Type.Coercion.$fOrdCoercion_$c<_closure+2;
         const Data.Type.Coercion.$fOrdCoercion_$c<=_closure+2;
         const Data.Type.Coercion.$fOrdCoercion_$c>_closure+2;
         const Data.Type.Coercion.$fEqCoercion_$c==_closure+2;
         const Data.Type.Coercion.$fOrdCoercion_$cmax_closure+2;
         const Data.Type.Coercion.$fOrdCoercion_$cmin_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.048461857 UTC

[section ""data" . Data.Type.Coercion.$fReadCoercion_lexeme_closure" {
     Data.Type.Coercion.$fReadCoercion_lexeme_closure:
         const Text.Read.Lex.Ident_con_info;
         const Data.Type.Coercion.$fReadCoercion2_closure;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.054922295 UTC

[section ""data" . Data.Type.Coercion.$fReadCoercion1_closure" {
     Data.Type.Coercion.$fReadCoercion1_closure:
         const Data.Type.Coercion.$fReadCoercion1_info;
         const 0;
 },
 sat_s5aCd_entry() //  [R1]
         { []
         }
     {offset
       c5aX8: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 15];
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5aCd_info" {
     sat_s5aCd_info:
         const sat_s5aCd_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_s5aCg_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5aXe: // global
           _s5aCb::P64 = R3;
           _s5aCa::P64 = R2;
           _s5aCg::P64 = R1;
           if ((Sp + -8) < SpLim) (likely: False) goto c5aXf; else goto c5aXg;
       c5aXg: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5aXi; else goto c5aXh;
       c5aXi: // global
           HpAlloc = 24;
           goto c5aXf;
       c5aXf: // global
           R3 = _s5aCb::P64;
           R2 = _s5aCa::P64;
           R1 = _s5aCg::P64;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aXh: // global
           _s5aC9::P64 = P64[_s5aCg::P64 + 6];
           I64[Hp - 16] = sat_s5aCd_info;
           P64[Hp - 8] = _s5aC9::P64;
           P64[Hp] = _s5aCb::P64;
           I64[Sp - 8] = block_c5aXb_info;
           R3 = Hp - 15;
           R2 = Data.Type.Coercion.$fReadCoercion_lexeme_closure+4;
           Sp = Sp - 8;
           call Text.Read.Lex.$wexpect_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5aCg_info" {
     sat_s5aCg_info:
         const sat_s5aCg_entry;
         const 1;
         const 12884901897;
         const 8589934607;
         const S5aDk_srt+136;
 },
 _c5aXb() //  [R1]
         { []
         }
     {offset
       c5aXb: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5aXl; else goto c5aXk;
       c5aXl: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5aXk: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5aXb_info" {
     block_c5aXb_info:
         const _c5aXb;
         const 0;
         const 30;
 },
 Data.Type.Coercion.$fReadCoercion1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5aXm: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5aXq; else goto c5aXp;
       c5aXq: // global
           HpAlloc = 32;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fReadCoercion1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aXp: // global
           I64[Hp - 24] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp - 16] = R2;
           I64[Hp - 8] = sat_s5aCg_info;
           P64[Hp] = Hp - 23;
           R4 = R4;
           R3 = R3;
           R2 = Hp - 6;
           call GHC.Read.list3_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fReadCoercion1_info" {
     Data.Type.Coercion.$fReadCoercion1_info:
         const Data.Type.Coercion.$fReadCoercion1_entry;
         const 0;
         const 64424509454;
         const 12884901911;
         const S5aDk_srt+136;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.071362847 UTC

[section ""data" . Data.Type.Coercion.$fReadCoercion_$creadsPrec_closure" {
     Data.Type.Coercion.$fReadCoercion_$creadsPrec_closure:
         const Data.Type.Coercion.$fReadCoercion_$creadsPrec_info;
         const 0;
 },
 sat_s5aCj_entry() //  [R1]
         { []
         }
     {offset
       c5aXU: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aXV; else goto c5aXW;
       c5aXV: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5aXW: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R4 = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Type.Coercion.$fReadCoercion1_entry(R4,
                                                         R3,
                                                         R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5aCj_info" {
     sat_s5aCj_info:
         const sat_s5aCj_entry;
         const 2;
         const 4294967314;
         const S5aDk_srt+160;
 },
 Data.Type.Coercion.$fReadCoercion_$creadsPrec_entry() //  [R2, R3]
         { []
         }
     {offset
       c5aXX: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5aY1; else goto c5aY0;
       c5aY1: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.$fReadCoercion_$creadsPrec_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5aY0: // global
           I64[Hp - 24] = sat_s5aCj_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R2 = Hp - 24;
           R1 = Text.ParserCombinators.ReadP.run_closure+2;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fReadCoercion_$creadsPrec_info" {
     Data.Type.Coercion.$fReadCoercion_$creadsPrec_info:
         const Data.Type.Coercion.$fReadCoercion_$creadsPrec_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S5aDk_srt+160;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.080937709 UTC

[section ""data" . Data.Type.Coercion.$fReadCoercion_$creadListPrec_closure" {
     Data.Type.Coercion.$fReadCoercion_$creadListPrec_closure:
         const Data.Type.Coercion.$fReadCoercion_$creadListPrec_info;
         const 0;
 },
 sat_s5aCl_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5aYn: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Type.Coercion.$fReadCoercion1_entry(R4,
                                                         R3,
                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5aCl_info" {
     sat_s5aCl_info:
         const sat_s5aCl_entry;
         const 1;
         const 4294967305;
         const 8589934607;
         const S5aDk_srt+160;
 },
 Data.Type.Coercion.$fReadCoercion_$creadListPrec_entry() //  [R2]
         { []
         }
     {offset
       c5aYq: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5aYu; else goto c5aYt;
       c5aYu: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = Data.Type.Coercion.$fReadCoercion_$creadListPrec_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5aYt: // global
           I64[Hp - 8] = sat_s5aCl_info;
           P64[Hp] = R2;
           R2 = Hp - 6;
           call GHC.Read.list_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fReadCoercion_$creadListPrec_info" {
     Data.Type.Coercion.$fReadCoercion_$creadListPrec_info:
         const Data.Type.Coercion.$fReadCoercion_$creadListPrec_entry;
         const 0;
         const 55834574862;
         const 4294967301;
         const S5aDk_srt+160;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.091501474 UTC

[section ""data" . Data.Type.Coercion.$fReadCoercion_$creadList_closure" {
     Data.Type.Coercion.$fReadCoercion_$creadList_closure:
         const Data.Type.Coercion.$fReadCoercion_$creadList_info;
         const 0;
 },
 sat_s5aCn_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5aYQ: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Type.Coercion.$fReadCoercion1_entry(R4,
                                                         R3,
                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5aCn_info" {
     sat_s5aCn_info:
         const sat_s5aCn_entry;
         const 1;
         const 4294967305;
         const 8589934607;
         const S5aDk_srt+160;
 },
 sat_s5aCo_entry() //  [R1]
         { []
         }
     {offset
       c5aYT: // global
           _s5aCo::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto c5aYU; else goto c5aYV;
       c5aYV: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5aYX; else goto c5aYW;
       c5aYX: // global
           HpAlloc = 16;
           goto c5aYU;
       c5aYU: // global
           R1 = _s5aCo::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5aYW: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5aCo::P64;
           _s5aCm::P64 = P64[_s5aCo::P64 + 16];
           I64[Hp - 8] = sat_s5aCn_info;
           P64[Hp] = _s5aCm::P64;
           R2 = Hp - 6;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = GHC.Read.$fRead()7_closure;
           P64[Sp - 24] = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           Sp = Sp - 40;
           call GHC.Read.list_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5aCo_info" {
     sat_s5aCo_info:
         const sat_s5aCo_entry;
         const 1;
         const 21474836496;
         const S5aDk_srt+160;
 },
 Data.Type.Coercion.$fReadCoercion_$creadList_entry() //  [R2]
         { []
         }
     {offset
       c5aYY: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5aZ2; else goto c5aZ1;
       c5aZ2: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Data.Type.Coercion.$fReadCoercion_$creadList_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5aZ1: // global
           I64[Hp - 16] = sat_s5aCo_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           R1 = Text.ParserCombinators.ReadP.run_closure+2;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fReadCoercion_$creadList_info" {
     Data.Type.Coercion.$fReadCoercion_$creadList_info:
         const Data.Type.Coercion.$fReadCoercion_$creadList_entry;
         const 0;
         const 90194313230;
         const 4294967301;
         const S5aDk_srt+160;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.103598176 UTC

[section ""data" . Data.Type.Coercion.$fReadCoercion_closure" {
     Data.Type.Coercion.$fReadCoercion_closure:
         const Data.Type.Coercion.$fReadCoercion_info;
         const 0;
 },
 sat_s5aCt_entry() //  [R1]
         { []
         }
     {offset
       c5aZu: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aZv; else goto c5aZw;
       c5aZv: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5aZw: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Type.Coercion.$fReadCoercion_$creadListPrec_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5aCt_info" {
     sat_s5aCt_info:
         const sat_s5aCt_entry;
         const 1;
         const 4294967312;
         const S5aDk_srt+184;
 },
 sat_s5aCs_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c5aZC: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Data.Type.Coercion.$fReadCoercion1_entry(R4,
                                                         R3,
                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5aCs_info" {
     sat_s5aCs_info:
         const sat_s5aCs_entry;
         const 1;
         const 4294967305;
         const 8589934607;
         const S5aDk_srt+160;
 },
 sat_s5aCr_entry() //  [R1]
         { []
         }
     {offset
       c5aZJ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5aZK; else goto c5aZL;
       c5aZK: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5aZL: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Type.Coercion.$fReadCoercion_$creadList_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5aCr_info" {
     sat_s5aCr_info:
         const sat_s5aCr_entry;
         const 1;
         const 4294967312;
         const S5aDk_srt+192;
 },
 sat_s5aCq_entry() //  [R1, R2]
         { []
         }
     {offset
       c5aZR: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Data.Type.Coercion.$fReadCoercion_$creadsPrec_entry(R3,
                                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5aCq_info" {
     sat_s5aCq_info:
         const sat_s5aCq_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5aDk_srt+168;
 },
 Data.Type.Coercion.$fReadCoercion_entry() //  [R2]
         { []
         }
     {offset
       c5aZV: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto c5aZZ; else goto c5aZY;
       c5aZZ: // global
           HpAlloc = 120;
           R2 = R2;
           R1 = Data.Type.Coercion.$fReadCoercion_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5aZY: // global
           I64[Hp - 112] = sat_s5aCt_info;
           P64[Hp - 96] = R2;
           I64[Hp - 88] = sat_s5aCs_info;
           P64[Hp - 80] = R2;
           I64[Hp - 72] = sat_s5aCr_info;
           P64[Hp - 56] = R2;
           I64[Hp - 48] = sat_s5aCq_info;
           P64[Hp - 40] = R2;
           I64[Hp - 32] = GHC.Read.C:Read_con_info;
           P64[Hp - 24] = Hp - 47;
           P64[Hp - 16] = Hp - 72;
           P64[Hp - 8] = Hp - 86;
           P64[Hp] = Hp - 112;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fReadCoercion_info" {
     Data.Type.Coercion.$fReadCoercion_info:
         const Data.Type.Coercion.$fReadCoercion_entry;
         const 0;
         const 253403070478;
         const 4294967301;
         const S5aDk_srt+160;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.114907404 UTC

[section ""data" . Data.Type.Coercion.$fBoundedCoercion_closure" {
     Data.Type.Coercion.$fBoundedCoercion_closure:
         const Data.Type.Coercion.$fBoundedCoercion_info;
 },
 Data.Type.Coercion.$fBoundedCoercion_entry() //  [R2]
         { []
         }
     {offset
       c5b0A: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c5b0E; else goto c5b0D;
       c5b0E: // global
           HpAlloc = 40;
           R2 = R2;
           R1 = Data.Type.Coercion.$fBoundedCoercion_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5b0D: // global
           I64[Hp - 32] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = GHC.Enum.C:Bounded_con_info;
           _c5b0y::P64 = Hp - 31;
           P64[Hp - 8] = _c5b0y::P64;
           P64[Hp] = _c5b0y::P64;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.$fBoundedCoercion_info" {
     Data.Type.Coercion.$fBoundedCoercion_info:
         const Data.Type.Coercion.$fBoundedCoercion_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.119962526 UTC

[section ""data" . Data.Type.Coercion.coerceWith_closure" {
     Data.Type.Coercion.coerceWith_closure:
         const Data.Type.Coercion.coerceWith_info;
 },
 Data.Type.Coercion.coerceWith_entry() //  [R2, R3]
         { []
         }
     {offset
       c5b0T: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5b0X; else goto c5b0Y;
       c5b0X: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.coerceWith_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5b0Y: // global
           I64[Sp - 16] = block_c5b0Q_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5b16; else goto c5b0R;
       u5b16: // global
           call _c5b0Q(R1) args: 0, res: 0, upd: 0;
       c5b0R: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.coerceWith_info" {
     Data.Type.Coercion.coerceWith_info:
         const Data.Type.Coercion.coerceWith_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5b0Q() //  [R1]
         { []
         }
     {offset
       c5b0Q: // global
           I64[Sp] = block_c5b0W_info;
           R1 = P64[R1 + 7];
           if (R1 & 7 != 0) goto u5b15; else goto c5b10;
       u5b15: // global
           call _c5b0W() args: 0, res: 0, upd: 0;
       c5b10: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5b0Q_info" {
     block_c5b0Q_info:
         const _c5b0Q;
         const 1;
         const 30;
 },
 _c5b0W() //  []
         { []
         }
     {offset
       c5b0W: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5b0W_info" {
     block_c5b0W_info:
         const _c5b0W;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.127769125 UTC

[section ""data" . Data.Type.Coercion.gcoerceWith_closure" {
     Data.Type.Coercion.gcoerceWith_closure:
         const Data.Type.Coercion.gcoerceWith_info;
 },
 Data.Type.Coercion.gcoerceWith_entry() //  [R2, R3]
         { []
         }
     {offset
       c5b1t: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5b1u; else goto c5b1v;
       c5b1u: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.gcoerceWith_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5b1v: // global
           I64[Sp - 16] = block_c5b1q_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5b1z; else goto c5b1r;
       u5b1z: // global
           call _c5b1q(R1) args: 0, res: 0, upd: 0;
       c5b1r: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.gcoerceWith_info" {
     Data.Type.Coercion.gcoerceWith_info:
         const Data.Type.Coercion.gcoerceWith_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5b1q() //  [R1]
         { []
         }
     {offset
       c5b1q: // global
           R2 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5b1q_info" {
     block_c5b1q_info:
         const _c5b1q;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.135207515 UTC

[section ""data" . Data.Type.Coercion.sym_closure" {
     Data.Type.Coercion.sym_closure:
         const Data.Type.Coercion.sym_info;
 },
 Data.Type.Coercion.sym_entry() //  [R2]
         { []
         }
     {offset
       c5b1R: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5b1Y; else goto c5b1Z;
       c5b1Y: // global
           R2 = R2;
           R1 = Data.Type.Coercion.sym_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5b1Z: // global
           I64[Sp - 8] = block_c5b1O_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5b24; else goto c5b1P;
       u5b24: // global
           call _c5b1O(R1) args: 0, res: 0, upd: 0;
       c5b1P: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.sym_info" {
     Data.Type.Coercion.sym_info:
         const Data.Type.Coercion.sym_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5b1O() //  [R1]
         { []
         }
     {offset
       c5b1O: // global
           I64[Sp] = block_c5b1U_info;
           R2 = P64[R1 + 7];
           call GHC.Types.coercible_sel_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5b1O_info" {
     block_c5b1O_info:
         const _c5b1O;
         const 0;
         const 30;
 },
 _c5b1U() //  []
         { []
         }
     {offset
       c5b1U: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5b23; else goto c5b22;
       c5b23: // global
           HpAlloc = 32;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c5b22: // global
           I64[Hp - 24] = GHC.Types.MkCoercible_con_info;
           I64[Hp - 8] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5b1U_info" {
     block_c5b1U_info:
         const _c5b1U;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.143685278 UTC

[section ""data" . Data.Type.Coercion.trans_closure" {
     Data.Type.Coercion.trans_closure:
         const Data.Type.Coercion.trans_info;
 },
 Data.Type.Coercion.trans_entry() //  [R2, R3]
         { []
         }
     {offset
       c5b2u: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5b2I; else goto c5b2J;
       c5b2I: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Type.Coercion.trans_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5b2J: // global
           I64[Sp - 16] = block_c5b2r_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5b2Q; else goto c5b2s;
       u5b2Q: // global
           call _c5b2r(R1) args: 0, res: 0, upd: 0;
       c5b2s: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.trans_info" {
     Data.Type.Coercion.trans_info:
         const Data.Type.Coercion.trans_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5b2r() //  [R1]
         { []
         }
     {offset
       c5b2r: // global
           I64[Sp] = block_c5b2x_info;
           R2 = P64[R1 + 7];
           call GHC.Types.coercible_sel_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5b2r_info" {
     block_c5b2r_info:
         const _c5b2r;
         const 1;
         const 30;
 },
 _c5b2x() //  []
         { []
         }
     {offset
       c5b2x: // global
           _s5aCL::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5b2z_info;
           R1 = _s5aCL::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u5b2R; else goto c5b2A;
       u5b2R: // global
           call _c5b2z(R1) args: 0, res: 0, upd: 0;
       c5b2A: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5b2x_info" {
     block_c5b2x_info:
         const _c5b2x;
         const 1;
         const 30;
 },
 _c5b2z() //  [R1]
         { []
         }
     {offset
       c5b2z: // global
           I64[Sp] = block_c5b2E_info;
           R2 = P64[R1 + 7];
           call GHC.Types.coercible_sel_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5b2z_info" {
     block_c5b2z_info:
         const _c5b2z;
         const 0;
         const 30;
 },
 _c5b2E() //  []
         { []
         }
     {offset
       c5b2E: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5b2P; else goto c5b2O;
       c5b2P: // global
           HpAlloc = 32;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c5b2O: // global
           I64[Hp - 24] = GHC.Types.MkCoercible_con_info;
           I64[Hp - 8] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5b2E_info" {
     block_c5b2E_info:
         const _c5b2E;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.159639466 UTC

[section ""data" . Data.Type.Coercion.repr_closure" {
     Data.Type.Coercion.repr_closure:
         const Data.Type.Coercion.repr_info;
 },
 Data.Type.Coercion.repr_entry() //  [R2]
         { []
         }
     {offset
       c5b3q: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5b3v; else goto c5b3w;
       c5b3v: // global
           R2 = R2;
           R1 = Data.Type.Coercion.repr_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5b3w: // global
           I64[Sp - 8] = block_c5b3n_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5b3A; else goto c5b3o;
       u5b3A: // global
           call _c5b3n(R1) args: 0, res: 0, upd: 0;
       c5b3o: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.repr_info" {
     Data.Type.Coercion.repr_info:
         const Data.Type.Coercion.repr_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5b3n() //  [R1]
         { []
         }
     {offset
       c5b3n: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c5b3z; else goto c5b3y;
       c5b3z: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5b3y: // global
           I64[Hp - 24] = GHC.Types.MkCoercible_con_info;
           I64[Hp - 8] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp] = Hp - 23;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5b3n_info" {
     block_c5b3n_info:
         const _c5b3n;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.167626805 UTC

[section ""cstring" . Data.Type.Coercion.$trModule4_bytes" {
     Data.Type.Coercion.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.169648734 UTC

[section ""data" . Data.Type.Coercion.$trModule3_closure" {
     Data.Type.Coercion.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Type.Coercion.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.171230213 UTC

[section ""cstring" . Data.Type.Coercion.$trModule2_bytes" {
     Data.Type.Coercion.$trModule2_bytes:
         I8[] [68,97,116,97,46,84,121,112,101,46,67,111,101,114,99,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.1741694 UTC

[section ""data" . Data.Type.Coercion.$trModule1_closure" {
     Data.Type.Coercion.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Type.Coercion.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.17674494 UTC

[section ""data" . Data.Type.Coercion.$trModule_closure" {
     Data.Type.Coercion.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Type.Coercion.$trModule3_closure+1;
         const Data.Type.Coercion.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.179394504 UTC

[section ""data" . $krep_r59Bg_closure" {
     $krep_r59Bg_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.182004937 UTC

[section ""data" . $krep1_r59Bh_closure" {
     $krep1_r59Bh_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.184507397 UTC

[section ""data" . $krep2_r59Bi_closure" {
     $krep2_r59Bi_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep1_r59Bh_closure+2;
         const GHC.Types.krep$*_closure;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.186994177 UTC

[section ""data" . Data.Type.Coercion.$tcCoercion1_closure" {
     Data.Type.Coercion.$tcCoercion1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep1_r59Bh_closure+2;
         const $krep2_r59Bi_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.189716665 UTC

[section ""data" . Data.Type.Coercion.$tcTestCoercion1_closure" {
     Data.Type.Coercion.$tcTestCoercion1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r59Bi_closure+4;
         const $krep_r59Bg_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.192970284 UTC

[section ""data" . $krep3_r59Bj_closure" {
     $krep3_r59Bj_closure:
         const GHC.Types.KindRepVar_con_info;
         const 2;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.195355034 UTC

[section ""data" . $krep4_r59Bk_closure" {
     $krep4_r59Bk_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.197705772 UTC

[section ""data" . $krep5_r59Bl_closure" {
     $krep5_r59Bl_closure:
         const :_con_info;
         const $krep3_r59Bj_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.199989707 UTC

[section ""data" . $krep6_r59Bm_closure" {
     $krep6_r59Bm_closure:
         const :_con_info;
         const $krep4_r59Bk_closure+2;
         const $krep5_r59Bl_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.202339001 UTC

[section ""data" . $krep7_r59Bn_closure" {
     $krep7_r59Bn_closure:
         const :_con_info;
         const $krep1_r59Bh_closure+2;
         const $krep6_r59Bm_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.204874945 UTC

[section ""data" . $krep8_r59Bo_closure" {
     $krep8_r59Bo_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcCoercible_closure;
         const $krep7_r59Bn_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.206790011 UTC

[section ""data" . Data.Type.Coercion.$tcCoercion2_closure" {
     Data.Type.Coercion.$tcCoercion2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Type.Coercion.$fReadCoercion3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.208588656 UTC

[section ""data" . Data.Type.Coercion.$tcCoercion_closure" {
     Data.Type.Coercion.$tcCoercion_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Type.Coercion.$trModule_closure+1;
         const Data.Type.Coercion.$tcCoercion2_closure+1;
         const Data.Type.Coercion.$tcCoercion1_closure+4;
         const 14885566513674463733;
         const 8268940906925368652;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.210511127 UTC

[section ""data" . $krep9_r59Bp_closure" {
     $krep9_r59Bp_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Type.Coercion.$tcCoercion_closure+1;
         const $krep7_r59Bn_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.212377246 UTC

[section ""data" . Data.Type.Coercion.$tc'Coercion1_closure" {
     Data.Type.Coercion.$tc'Coercion1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep8_r59Bo_closure+1;
         const $krep9_r59Bp_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.214285364 UTC

[section ""cstring" . Data.Type.Coercion.$tc'Coercion3_bytes" {
     Data.Type.Coercion.$tc'Coercion3_bytes:
         I8[] [39,67,111,101,114,99,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.216090808 UTC

[section ""data" . Data.Type.Coercion.$tc'Coercion2_closure" {
     Data.Type.Coercion.$tc'Coercion2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Type.Coercion.$tc'Coercion3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.21935224 UTC

[section ""data" . Data.Type.Coercion.$tc'Coercion_closure" {
     Data.Type.Coercion.$tc'Coercion_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Type.Coercion.$trModule_closure+1;
         const Data.Type.Coercion.$tc'Coercion2_closure+1;
         const Data.Type.Coercion.$tc'Coercion1_closure+4;
         const 16177208673276072700;
         const 13187043378465993605;
         const 3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.221137142 UTC

[section ""cstring" . Data.Type.Coercion.$tcTestCoercion3_bytes" {
     Data.Type.Coercion.$tcTestCoercion3_bytes:
         I8[] [84,101,115,116,67,111,101,114,99,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.22298775 UTC

[section ""data" . Data.Type.Coercion.$tcTestCoercion2_closure" {
     Data.Type.Coercion.$tcTestCoercion2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Type.Coercion.$tcTestCoercion3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.224749058 UTC

[section ""data" . Data.Type.Coercion.$tcTestCoercion_closure" {
     Data.Type.Coercion.$tcTestCoercion_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Type.Coercion.$trModule_closure+1;
         const Data.Type.Coercion.$tcTestCoercion2_closure+1;
         const Data.Type.Coercion.$tcTestCoercion1_closure+4;
         const 14520160333183018944;
         const 2439357669602544154;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.22730115 UTC

[section ""data" . Data.Type.Coercion.Coercion_closure" {
     Data.Type.Coercion.Coercion_closure:
         const Data.Type.Coercion.Coercion_info;
 },
 Data.Type.Coercion.Coercion_entry() //  [R2]
         { []
         }
     {offset
       c5b4k: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5b4o; else goto c5b4n;
       c5b4o: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = Data.Type.Coercion.Coercion_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5b4n: // global
           I64[Hp - 8] = Data.Type.Coercion.Coercion_con_info;
           P64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.Coercion_info" {
     Data.Type.Coercion.Coercion_info:
         const Data.Type.Coercion.Coercion_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.231159059 UTC

[section ""cstring" . i5b4w_str" {
     i5b4w_str:
         I8[] [98,97,115,101,58,68,97,116,97,46,84,121,112,101,46,67,111,101,114,99,105,111,110,46,67,111,101,114,99,105,111,110]
 },
 Data.Type.Coercion.Coercion_con_entry() //  [R1]
         { []
         }
     {offset
       c5b4v: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Type.Coercion.Coercion_con_info" {
     Data.Type.Coercion.Coercion_con_info:
         const Data.Type.Coercion.Coercion_con_entry;
         const 1;
         const 2;
         const i5b4w_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:08.235868313 UTC

[section ""relreadonly" . S5aDk_srt" {
     S5aDk_srt:
         const GHC.Err.errorWithoutStackTrace_closure;
         const Data.Type.Coercion.$fEnumCoercion1_closure;
         const Data.Type.Coercion.$fEnumCoercion_$ctoEnum_closure;
         const Data.Type.Coercion.$w$cenumFromTo_closure;
         const Data.Type.Coercion.$fEnumCoercion_$cenumFromTo_closure;
         const Data.Type.Coercion.$fEnumCoercion_$cenumFromThen_closure;
         const lvl1_r59Bc_closure;
         const Data.Type.Coercion.$w$cenumFrom_closure;
         const Data.Type.Coercion.$fEnumCoercion_$cenumFrom_closure;
         const Data.Type.Coercion.$w$cenumFromThenTo_closure;
         const Data.Type.Coercion.$fEnumCoercion_$cenumFromThenTo_closure;
         const lvl4_r59Bf_closure;
         const Data.Type.Coercion.$fEnumCoercion_closure;
         const Data.Type.Coercion.$fReadCoercion2_closure;
         const Data.Type.Coercion.$fShowCoercion_$cshowsPrec_closure;
         const Data.Type.Coercion.$fShowCoercion_$cshow_closure;
         const Data.Type.Coercion.$fShowCoercion1_closure;
         const Text.Read.Lex.$wexpect_closure;
         const Data.Type.Coercion.$fReadCoercion_lexeme_closure;
         const GHC.Read.list3_closure;
         const Data.Type.Coercion.$fReadCoercion1_closure;
         const Data.Type.Coercion.$fReadCoercion_$creadsPrec_closure;
         const GHC.Read.list_closure;
         const Data.Type.Coercion.$fReadCoercion_$creadListPrec_closure;
         const Data.Type.Coercion.$fReadCoercion_$creadList_closure;
         const Data.Type.Coercion.$fReadCoercion_closure;
 }]

