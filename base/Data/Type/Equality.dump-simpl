
==================== Tidy Core ====================
2018-03-16 16:00:01.382678353 UTC

Result size of Tidy Core
  = {terms: 1,575, types: 4,653, coercions: 1,113, joins: 0/6}

-- RHS size: {terms: 5, types: 8, coercions: 4, joins: 0/0}
Data.Type.Equality.$p1~ [InlPrag=INLINE]
  :: forall k (a :: k) (b :: k).
     ((a :: k) ~ (b :: k)) =>
     (a :: k) ~~ (b :: k)
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=True)
         Tmpl= \ (@ k_a54KO)
                 (@ (a_a54KP :: k_a54KO))
                 (@ (b_a54KQ :: k_a54KO))
                 (v_B1 [Occ=Once] :: (a_a54KP :: k_a54KO) ~ (b_a54KQ :: k_a54KO)) ->
                 v_B1
                 `cast` (Data.Type.Equality.N:~[0]
                             <k_a54KO>_N <a_a54KP>_N <b_a54KQ>_N
                         :: ((a_a54KP :: k_a54KO) ~ (b_a54KQ :: k_a54KO) :: Constraint)
                            ~R# ((a_a54KP :: k_a54KO) ~~ (b_a54KQ :: k_a54KO) :: Constraint))}]
Data.Type.Equality.$p1~
  = \ (@ k_a54KO)
      (@ (a_a54KP :: k_a54KO))
      (@ (b_a54KQ :: k_a54KO))
      (v_B1 :: (a_a54KP :: k_a54KO) ~ (b_a54KQ :: k_a54KO)) ->
      v_B1
      `cast` (Data.Type.Equality.N:~[0]
                  <k_a54KO>_N <a_a54KP>_N <b_a54KQ>_N
              :: ((a_a54KP :: k_a54KO) ~ (b_a54KQ :: k_a54KO) :: Constraint)
                 ~R# ((a_a54KP :: k_a54KO) ~~ (b_a54KQ :: k_a54KO) :: Constraint))

-- RHS size: {terms: 4, types: 8, coercions: 3, joins: 0/0}
testEquality [InlPrag=INLINE]
  :: forall k (f :: k -> *).
     TestEquality f =>
     forall (a :: k) (b :: k). f a -> f b -> Maybe (a :~: b)
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=True)
         Tmpl= \ (@ k_a54Or)
                 (@ (f_a54KD :: k_a54Or -> *))
                 (v_B1 [Occ=Once] :: TestEquality f_a54KD) ->
                 v_B1
                 `cast` (Data.Type.Equality.N:TestEquality[0]
                             <k_a54Or>_N <f_a54KD>_N
                         :: (TestEquality f_a54KD :: Constraint)
                            ~R# (forall (a :: k) (b :: k).
                                 f_a54KD a -> f_a54KD b -> Maybe (a :~: b) :: *))}]
testEquality
  = \ (@ k_a54Or)
      (@ (f_a54KD :: k_a54Or -> *))
      (v_B1 :: TestEquality f_a54KD) ->
      v_B1
      `cast` (Data.Type.Equality.N:TestEquality[0]
                  <k_a54Or>_N <f_a54KD>_N
              :: (TestEquality f_a54KD :: Constraint)
                 ~R# (forall (a :: k) (b :: k).
                      f_a54KD a -> f_a54KD b -> Maybe (a :~: b) :: *))

-- RHS size: {terms: 3, types: 7, coercions: 2, joins: 0/0}
Data.Type.Equality.$WHRefl [InlPrag=INLINE[2]]
  :: forall k2 (a :: k2). a :~~: a
[GblId[DataConWrapper],
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k2_a54Nu) (@ (a_a54KK :: k2_a54Nu)) ->
                 Data.Type.Equality.HRefl
                   @ k2_a54Nu
                   @ k2_a54Nu
                   @ a_a54KK
                   @ a_a54KK
                   @~ (<k2_a54Nu>_N :: (k2_a54Nu :: *) ~# (k2_a54Nu :: *))
                   @~ (<a_a54KK>_N
                       :: (a_a54KK :: k2_a54Nu) ~# (a_a54KK :: k2_a54Nu))}]
Data.Type.Equality.$WHRefl
  = \ (@ k2_a54Nu) (@ (a_a54KK :: k2_a54Nu)) ->
      Data.Type.Equality.HRefl
        @ k2_a54Nu
        @ k2_a54Nu
        @ a_a54KK
        @ a_a54KK
        @~ (<k2_a54Nu>_N :: (k2_a54Nu :: *) ~# (k2_a54Nu :: *))
        @~ (<a_a54KK>_N :: (a_a54KK :: k2_a54Nu) ~# (a_a54KK :: k2_a54Nu))

-- RHS size: {terms: 3, types: 6, coercions: 1, joins: 0/0}
Data.Type.Equality.$WRefl [InlPrag=INLINE[2]]
  :: forall k (a :: k). a :~: a
[GblId[DataConWrapper],
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a54MA) (@ (a_a54KN :: k_a54MA)) ->
                 Data.Type.Equality.Refl
                   @ k_a54MA
                   @ a_a54KN
                   @ a_a54KN
                   @~ (<a_a54KN>_N :: (a_a54KN :: k_a54MA) ~# (a_a54KN :: k_a54MA))}]
Data.Type.Equality.$WRefl
  = \ (@ k_a54MA) (@ (a_a54KN :: k_a54MA)) ->
      Data.Type.Equality.Refl
        @ k_a54MA
        @ a_a54KN
        @ a_a54KN
        @~ (<a_a54KN>_N :: (a_a54KN :: k_a54MA) ~# (a_a54KN :: k_a54MA))

-- RHS size: {terms: 9, types: 18, coercions: 0, joins: 0/0}
Data.Type.Equality.$f~kab_$cp1~
  :: forall k (a :: k) (b :: k).
     ((a :: k) ~~ (b :: k)) =>
     (a :: k) ~~ (b :: k)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a556S)
                 (@ (a_a556T :: k_a556S))
                 (@ (b_a556U :: k_a556S))
                 ($d~~_a556V :: (a_a556T :: k_a556S) ~~ (b_a556U :: k_a556S)) ->
                 case GHC.Types.heq_sel
                        @ k_a556S @ k_a556S @ a_a556T @ b_a556U $d~~_a556V
                 of
                 { __DEFAULT ->
                 $d~~_a556V
                 }}]
Data.Type.Equality.$f~kab_$cp1~
  = \ (@ k_a556S)
      (@ (a_a556T :: k_a556S))
      (@ (b_a556U :: k_a556S))
      ($d~~_a556V :: (a_a556T :: k_a556S) ~~ (b_a556U :: k_a556S)) ->
      case GHC.Types.heq_sel
             @ k_a556S @ k_a556S @ a_a556T @ b_a556U $d~~_a556V
      of co_a558E [Dmd=<L,A>]
      { __DEFAULT ->
      $d~~_a556V
      }

-- RHS size: {terms: 1, types: 0, coercions: 18, joins: 0/0}
Data.Type.Equality.$f~kab [InlPrag=INLINE (sat-args=0)]
  :: forall k (a :: k) (b :: k).
     ((a :: k) ~~ (b :: k)) =>
     (a :: k) ~ (b :: k)
[GblId[DFunId(nt)],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=True)
         Tmpl= Data.Type.Equality.$f~kab_$cp1~
               `cast` (forall (k :: <*>_N) (a :: <k>_N) (b :: <k>_N).
                       <(a :: k) ~~ (b :: k)>_R
                       ->_R Sym (Data.Type.Equality.N:~[0] <k>_N) <a>_N <b>_N
                       :: (forall k (a :: k) (b :: k).
                           ((a :: k) ~~ (b :: k)) =>
                           (a :: k) ~~ (b :: k) :: *)
                          ~R# (forall k (a :: k) (b :: k).
                               ((a :: k) ~~ (b :: k)) =>
                               (a :: k) ~ (b :: k) :: *))}]
Data.Type.Equality.$f~kab
  = Data.Type.Equality.$f~kab_$cp1~
    `cast` (forall (k :: <*>_N) (a :: <k>_N) (b :: <k>_N).
            <(a :: k) ~~ (b :: k)>_R
            ->_R Sym (Data.Type.Equality.N:~[0] <k>_N) <a>_N <b>_N
            :: (forall k (a :: k) (b :: k).
                ((a :: k) ~~ (b :: k)) =>
                (a :: k) ~~ (b :: k) :: *)
               ~R# (forall k (a :: k) (b :: k).
                    ((a :: k) ~~ (b :: k)) =>
                    (a :: k) ~ (b :: k) :: *))

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$fEnum:~:3 :: Int
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Data.Type.Equality.$fEnum:~:3 = GHC.Types.I# 0#

-- RHS size: {terms: 13, types: 30, coercions: 4, joins: 0/0}
Data.Type.Equality.$fEnum:~:_$cfromEnum
  :: forall k (a :: k) (b :: k).
     ((a :: k) ~ (b :: k)) =>
     (a :~: b) -> Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)><S,1*H>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a555Z)
                 (@ (a_a5560 :: k_a555Z))
                 (@ (b_a5561 :: k_a555Z))
                 ($d~_a5562 [Occ=Once]
                    :: (a_a5560 :: k_a555Z) ~ (b_a5561 :: k_a555Z))
                 (eta_B1 [Occ=Once!] :: a_a5560 :~: b_a5561) ->
                 case GHC.Types.heq_sel
                        @ k_a555Z
                        @ k_a555Z
                        @ a_a5560
                        @ b_a5561
                        ($d~_a5562
                         `cast` (Data.Type.Equality.N:~[0]
                                     <k_a555Z>_N <a_a5560>_N <b_a5561>_N
                                 :: ((a_a5560 :: k_a555Z) ~ (b_a5561 :: k_a555Z) :: Constraint)
                                    ~R# ((a_a5560 :: k_a555Z)
                                         ~~ (b_a5561 :: k_a555Z) :: Constraint)))
                 of
                 { __DEFAULT ->
                 case eta_B1 of { Refl _ [Occ=Dead] ->
                 Data.Type.Equality.$fEnum:~:3
                 }
                 }}]
Data.Type.Equality.$fEnum:~:_$cfromEnum
  = \ (@ k_a555Z)
      (@ (a_a5560 :: k_a555Z))
      (@ (b_a5561 :: k_a555Z))
      ($d~_a5562 :: (a_a5560 :: k_a555Z) ~ (b_a5561 :: k_a555Z))
      (eta_B1 :: a_a5560 :~: b_a5561) ->
      case GHC.Types.heq_sel
             @ k_a555Z
             @ k_a555Z
             @ a_a5560
             @ b_a5561
             ($d~_a5562
              `cast` (Data.Type.Equality.N:~[0]
                          <k_a555Z>_N <a_a5560>_N <b_a5561>_N
                      :: ((a_a5560 :: k_a555Z) ~ (b_a5561 :: k_a555Z) :: Constraint)
                         ~R# ((a_a5560 :: k_a555Z) ~~ (b_a5561 :: k_a555Z) :: Constraint)))
      of co_a558t [Dmd=<L,A>]
      { __DEFAULT ->
      case eta_B1 of { Refl co1_a556u [Dmd=<L,A>] ->
      Data.Type.Equality.$fEnum:~:3
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_r5689 :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl_r5689 = "Data.Type.Equality.toEnum: bad argument"#

-- RHS size: {terms: 6, types: 9, coercions: 0, joins: 0/0}
Data.Type.Equality.$fEnum:~:1
  :: forall k (a :: k) (b :: k). a :~: b
[GblId, Str=x]
Data.Type.Equality.$fEnum:~:1
  = \ (@ k_a555Z)
      (@ (a_a5560 :: k_a555Z))
      (@ (b_a5561 :: k_a555Z)) ->
      errorWithoutStackTrace
        @ 'LiftedRep @ (a_a5560 :~: b_a5561) (unpackCString# lvl_r5689)

-- RHS size: {terms: 18, types: 26, coercions: 8, joins: 0/0}
Data.Type.Equality.$fEnum:~:_$ctoEnum
  :: forall k (a :: k) (b :: k).
     ((a :: k) ~ (b :: k)) =>
     Int -> a :~: b
[GblId,
 Arity=2,
 Str=<S(S),1*U(1*U)><S(S),1*U(1*U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a555Z)
                 (@ (a_a5560 :: k_a555Z))
                 (@ (b_a5561 :: k_a555Z))
                 ($d~_a5562 [Occ=Once]
                    :: (a_a5560 :: k_a555Z) ~ (b_a5561 :: k_a555Z))
                 (eta_B1 [Occ=Once!] :: Int) ->
                 case GHC.Types.heq_sel
                        @ k_a555Z
                        @ k_a555Z
                        @ a_a5560
                        @ b_a5561
                        ($d~_a5562
                         `cast` (Data.Type.Equality.N:~[0]
                                     <k_a555Z>_N <a_a5560>_N <b_a5561>_N
                                 :: ((a_a5560 :: k_a555Z) ~ (b_a5561 :: k_a555Z) :: Constraint)
                                    ~R# ((a_a5560 :: k_a555Z)
                                         ~~ (b_a5561 :: k_a555Z) :: Constraint)))
                 of co_a558t
                 { __DEFAULT ->
                 case eta_B1 of { I# ds_d55cb [Occ=Once!] ->
                 case ds_d55cb of {
                   __DEFAULT ->
                     Data.Type.Equality.$fEnum:~:1 @ k_a555Z @ a_a5560 @ b_a5561;
                   0# ->
                     (Data.Type.Equality.$WRefl @ k_a555Z @ a_a5560)
                     `cast` (((:~:) <k_a555Z>_N <a_a5560>_N co_a558t)_R
                             :: (a_a5560 :~: a_a5560 :: *) ~R# (a_a5560 :~: b_a5561 :: *))
                 }
                 }
                 }}]
Data.Type.Equality.$fEnum:~:_$ctoEnum
  = \ (@ k_a555Z)
      (@ (a_a5560 :: k_a555Z))
      (@ (b_a5561 :: k_a555Z))
      ($d~_a5562 :: (a_a5560 :: k_a555Z) ~ (b_a5561 :: k_a555Z))
      (eta_B1 :: Int) ->
      case GHC.Types.heq_sel
             @ k_a555Z
             @ k_a555Z
             @ a_a5560
             @ b_a5561
             ($d~_a5562
              `cast` (Data.Type.Equality.N:~[0]
                          <k_a555Z>_N <a_a5560>_N <b_a5561>_N
                      :: ((a_a5560 :: k_a555Z) ~ (b_a5561 :: k_a555Z) :: Constraint)
                         ~R# ((a_a5560 :: k_a555Z) ~~ (b_a5561 :: k_a555Z) :: Constraint)))
      of co_a558t
      { __DEFAULT ->
      case eta_B1 of { I# ds_d55cb ->
      case ds_d55cb of {
        __DEFAULT ->
          Data.Type.Equality.$fEnum:~:1 @ k_a555Z @ a_a5560 @ b_a5561;
        0# ->
          (Data.Type.Equality.$WRefl @ k_a555Z @ a_a5560)
          `cast` (((:~:) <k_a555Z>_N <a_a5560>_N co_a558t)_R
                  :: (a_a5560 :~: a_a5560 :: *) ~R# (a_a5560 :~: b_a5561 :: *))
      }
      }
      }

-- RHS size: {terms: 14, types: 33, coercions: 13, joins: 0/0}
Data.Type.Equality.$fEnum:~:_$csucc
  :: forall k (a :: k) (b :: k).
     ((a :: k) ~ (b :: k)) =>
     (a :~: b) -> a :~: b
[GblId, Arity=2, Str=<B,U(U)><B,A>x, Unf=OtherCon []]
Data.Type.Equality.$fEnum:~:_$csucc
  = \ (@ k_a555Z)
      (@ (a_a5560 :: k_a555Z))
      (@ (b_a5561 :: k_a555Z))
      ($d~_a5562 :: (a_a5560 :: k_a555Z) ~ (b_a5561 :: k_a555Z))
      _ [Occ=Dead] ->
      case GHC.Types.heq_sel
             @ k_a555Z
             @ k_a555Z
             @ a_a5560
             @ b_a5561
             ($d~_a5562
              `cast` (Data.Type.Equality.N:~[0]
                          <k_a555Z>_N <a_a5560>_N <b_a5561>_N
                      :: ((a_a5560 :: k_a555Z) ~ (b_a5561 :: k_a555Z) :: Constraint)
                         ~R# ((a_a5560 :: k_a555Z) ~~ (b_a5561 :: k_a555Z) :: Constraint)))
      of co_a558t [Dmd=<B,U>]
      { __DEFAULT ->
      case GHC.Types.heq_sel
             @ k_a555Z
             @ k_a555Z
             @ b_a5561
             @ b_a5561
             ($d~_a5562
              `cast` (Data.Type.Equality.N:~[0] <k_a555Z>_N co_a558t <b_a5561>_N
                      :: ((a_a5560 :: k_a555Z) ~ (b_a5561 :: k_a555Z) :: Constraint)
                         ~R# ((b_a5561 :: k_a555Z) ~~ (b_a5561 :: k_a555Z) :: Constraint)))
      of co1_X55bI [Dmd=<B,A>]
      { __DEFAULT ->
      (Data.Type.Equality.$fEnum:~:1 @ k_a555Z @ b_a5561 @ b_a5561)
      `cast` (((:~:) <k_a555Z>_N (Sym co_a558t) <b_a5561>_N)_R
              :: (b_a5561 :~: b_a5561 :: *) ~R# (a_a5560 :~: b_a5561 :: *))
      }
      }

-- RHS size: {terms: 34, types: 56, coercions: 18, joins: 0/1}
Data.Type.Equality.$w$cenumFromTo [InlPrag=NOUSERINLINE[0]]
  :: forall k (a :: k) (b :: k).
     ((a :: k) ~ (b :: k)) =>
     (a :~: b) -> (a :~: b) -> [a :~: b]
[GblId,
 Arity=3,
 Str=<S(S),U(U)><L,A><L,A>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0 0] 171 0}]
Data.Type.Equality.$w$cenumFromTo
  = \ (@ k_s55JS)
      (@ (a_s55JT :: k_s55JS))
      (@ (b_s55JU :: k_s55JS))
      (w_s55JV :: (a_s55JT :: k_s55JS) ~ (b_s55JU :: k_s55JS))
      _ [Occ=Dead]
      _ [Occ=Dead] ->
      case GHC.Types.heq_sel
             @ k_s55JS
             @ k_s55JS
             @ a_s55JT
             @ b_s55JU
             (w_s55JV
              `cast` (Data.Type.Equality.N:~[0]
                          <k_s55JS>_N <a_s55JT>_N <b_s55JU>_N
                      :: ((a_s55JT :: k_s55JS) ~ (b_s55JU :: k_s55JS) :: Constraint)
                         ~R# ((a_s55JT :: k_s55JS) ~~ (b_s55JU :: k_s55JS) :: Constraint)))
      of co_a558t
      { __DEFAULT ->
      case GHC.Types.heq_sel
             @ k_s55JS
             @ k_s55JS
             @ b_s55JU
             @ b_s55JU
             (w_s55JV
              `cast` (Data.Type.Equality.N:~[0] <k_s55JS>_N co_a558t <b_s55JU>_N
                      :: ((a_s55JT :: k_s55JS) ~ (b_s55JU :: k_s55JS) :: Constraint)
                         ~R# ((b_s55JU :: k_s55JS) ~~ (b_s55JU :: k_s55JS) :: Constraint)))
      of co1_X55bN [Dmd=<L,A>]
      { __DEFAULT ->
      letrec {
        go_i1MGC [Occ=LoopBreaker] :: Int# -> [a_s55JT :~: b_s55JU]
        [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []]
        go_i1MGC
          = \ (x_i1MGD :: Int#) ->
              GHC.Types.:
                @ (a_s55JT :~: b_s55JU)
                (case x_i1MGD of {
                   __DEFAULT ->
                     (Data.Type.Equality.$fEnum:~:1 @ k_s55JS @ b_s55JU @ b_s55JU)
                     `cast` (((:~:) <k_s55JS>_N (Sym co_a558t) <b_s55JU>_N)_R
                             :: (b_s55JU :~: b_s55JU :: *) ~R# (a_s55JT :~: b_s55JU :: *));
                   0# ->
                     (Data.Type.Equality.$WRefl @ k_s55JS @ b_s55JU)
                     `cast` (((:~:) <k_s55JS>_N (Sym co_a558t) <b_s55JU>_N)_R
                             :: (b_s55JU :~: b_s55JU :: *) ~R# (a_s55JT :~: b_s55JU :: *))
                 })
                (case x_i1MGD of wild_X3n {
                   __DEFAULT -> go_i1MGC (+# wild_X3n 1#);
                   0# -> GHC.Types.[] @ (a_s55JT :~: b_s55JU)
                 }); } in
      go_i1MGC 0#
      }
      }

-- RHS size: {terms: 16, types: 37, coercions: 0, joins: 0/0}
Data.Type.Equality.$fEnum:~:_$cenumFromTo [InlPrag=NOUSERINLINE[0]]
  :: forall k (a :: k) (b :: k).
     ((a :: k) ~ (b :: k)) =>
     (a :~: b) -> (a :~: b) -> [a :~: b]
[GblId,
 Arity=3,
 Str=<S(S),U(U)><S,1*H><S,1*H>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_s55JS)
                 (@ (a_s55JT :: k_s55JS))
                 (@ (b_s55JU :: k_s55JS))
                 (w_s55JV [Occ=Once] :: (a_s55JT :: k_s55JS) ~ (b_s55JU :: k_s55JS))
                 (w1_s55JW [Occ=Once!] :: a_s55JT :~: b_s55JU)
                 (w2_s55JX [Occ=Once!] :: a_s55JT :~: b_s55JU) ->
                 case w1_s55JW of w3_X55K3 { Refl _ [Occ=Dead] ->
                 case w2_s55JX of w4_X55K5 { Refl _ [Occ=Dead] ->
                 Data.Type.Equality.$w$cenumFromTo
                   @ k_s55JS @ a_s55JT @ b_s55JU w_s55JV w3_X55K3 w4_X55K5
                 }
                 }}]
Data.Type.Equality.$fEnum:~:_$cenumFromTo
  = \ (@ k_s55JS)
      (@ (a_s55JT :: k_s55JS))
      (@ (b_s55JU :: k_s55JS))
      (w_s55JV :: (a_s55JT :: k_s55JS) ~ (b_s55JU :: k_s55JS))
      (w1_s55JW :: a_s55JT :~: b_s55JU)
      (w2_s55JX :: a_s55JT :~: b_s55JU) ->
      case w1_s55JW of w3_X55MV { Refl ipv_s55Mg [Dmd=<L,A>] ->
      case w2_s55JX of w4_X55N1 { Refl ipv1_s55Mj [Dmd=<L,A>] ->
      Data.Type.Equality.$w$cenumFromTo
        @ k_s55JS @ a_s55JT @ b_s55JU w_s55JV w3_X55MV w4_X55N1
      }
      }

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$fEnum:~:2 :: [Int]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
Data.Type.Equality.$fEnum:~:2 = GHC.Enum.efdInt 0# 0#

-- RHS size: {terms: 18, types: 42, coercions: 19, joins: 0/0}
Data.Type.Equality.$w$cenumFromThen [InlPrag=NOUSERINLINE[0]]
  :: forall k (a :: k) (b :: k).
     ((a :: k) ~ (b :: k)) =>
     (a :~: b) -> (a :~: b) -> [a :~: b]
[GblId,
 Arity=3,
 Str=<S(S),U(U)><L,A><L,A>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0 0] 110 0}]
Data.Type.Equality.$w$cenumFromThen
  = \ (@ k_s55JZ)
      (@ (a_s55K0 :: k_s55JZ))
      (@ (b_s55K1 :: k_s55JZ))
      (w_s55K2 :: (a_s55K0 :: k_s55JZ) ~ (b_s55K1 :: k_s55JZ))
      _ [Occ=Dead]
      _ [Occ=Dead] ->
      case GHC.Types.heq_sel
             @ k_s55JZ
             @ k_s55JZ
             @ a_s55K0
             @ b_s55K1
             (w_s55K2
              `cast` (Data.Type.Equality.N:~[0]
                          <k_s55JZ>_N <a_s55K0>_N <b_s55K1>_N
                      :: ((a_s55K0 :: k_s55JZ) ~ (b_s55K1 :: k_s55JZ) :: Constraint)
                         ~R# ((a_s55K0 :: k_s55JZ) ~~ (b_s55K1 :: k_s55JZ) :: Constraint)))
      of co_a558t
      { __DEFAULT ->
      case GHC.Types.heq_sel
             @ k_s55JZ
             @ k_s55JZ
             @ b_s55K1
             @ b_s55K1
             (w_s55K2
              `cast` (Data.Type.Equality.N:~[0] <k_s55JZ>_N co_a558t <b_s55K1>_N
                      :: ((a_s55K0 :: k_s55JZ) ~ (b_s55K1 :: k_s55JZ) :: Constraint)
                         ~R# ((b_s55K1 :: k_s55JZ) ~~ (b_s55K1 :: k_s55JZ) :: Constraint)))
      of co1_X55bO [Dmd=<L,A>]
      { __DEFAULT ->
      map
        @ Int
        @ (a_s55K0 :~: b_s55K1)
        ((Data.Type.Equality.$fEnum:~:_$ctoEnum
            @ k_s55JZ
            @ b_s55K1
            @ b_s55K1
            (w_s55K2
             `cast` (((~) <k_s55JZ>_N co_a558t <b_s55K1>_N)_R
                     :: ((a_s55K0 :: k_s55JZ) ~ (b_s55K1 :: k_s55JZ) :: Constraint)
                        ~R# ((b_s55K1 :: k_s55JZ) ~ (b_s55K1 :: k_s55JZ) :: Constraint))))
         `cast` (<Int>_R
                 ->_R ((:~:) <k_s55JZ>_N (Sym co_a558t) <b_s55K1>_N)_R
                 :: (Int -> b_s55K1 :~: b_s55K1 :: *)
                    ~R# (Int -> a_s55K0 :~: b_s55K1 :: *)))
        Data.Type.Equality.$fEnum:~:2
      }
      }

-- RHS size: {terms: 16, types: 37, coercions: 0, joins: 0/0}
Data.Type.Equality.$fEnum:~:_$cenumFromThen [InlPrag=NOUSERINLINE[0]]
  :: forall k (a :: k) (b :: k).
     ((a :: k) ~ (b :: k)) =>
     (a :~: b) -> (a :~: b) -> [a :~: b]
[GblId,
 Arity=3,
 Str=<S(S),U(U)><S,1*H><S,1*H>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_s55JZ)
                 (@ (a_s55K0 :: k_s55JZ))
                 (@ (b_s55K1 :: k_s55JZ))
                 (w_s55K2 [Occ=Once] :: (a_s55K0 :: k_s55JZ) ~ (b_s55K1 :: k_s55JZ))
                 (w1_s55K3 [Occ=Once!] :: a_s55K0 :~: b_s55K1)
                 (w2_s55K4 [Occ=Once!] :: a_s55K0 :~: b_s55K1) ->
                 case w1_s55K3 of w3_X55Ka { Refl _ [Occ=Dead] ->
                 case w2_s55K4 of w4_X55Kc { Refl _ [Occ=Dead] ->
                 Data.Type.Equality.$w$cenumFromThen
                   @ k_s55JZ @ a_s55K0 @ b_s55K1 w_s55K2 w3_X55Ka w4_X55Kc
                 }
                 }}]
Data.Type.Equality.$fEnum:~:_$cenumFromThen
  = \ (@ k_s55JZ)
      (@ (a_s55K0 :: k_s55JZ))
      (@ (b_s55K1 :: k_s55JZ))
      (w_s55K2 :: (a_s55K0 :: k_s55JZ) ~ (b_s55K1 :: k_s55JZ))
      (w1_s55K3 :: a_s55K0 :~: b_s55K1)
      (w2_s55K4 :: a_s55K0 :~: b_s55K1) ->
      case w1_s55K3 of w3_X55N4 { Refl ipv_s55Mv [Dmd=<L,A>] ->
      case w2_s55K4 of w4_X55Na { Refl ipv1_s55My [Dmd=<L,A>] ->
      Data.Type.Equality.$w$cenumFromThen
        @ k_s55JZ @ a_s55K0 @ b_s55K1 w_s55K2 w3_X55N4 w4_X55Na
      }
      }

-- RHS size: {terms: 33, types: 52, coercions: 18, joins: 0/1}
Data.Type.Equality.$w$cenumFrom [InlPrag=NOUSERINLINE[0]]
  :: forall k (a :: k) (b :: k).
     ((a :: k) ~ (b :: k)) =>
     (a :~: b) -> [a :~: b]
[GblId,
 Arity=2,
 Str=<S(S),U(U)><L,A>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 171 0}]
Data.Type.Equality.$w$cenumFrom
  = \ (@ k_s55K7)
      (@ (a_s55K8 :: k_s55K7))
      (@ (b_s55K9 :: k_s55K7))
      (w_s55Ka :: (a_s55K8 :: k_s55K7) ~ (b_s55K9 :: k_s55K7))
      _ [Occ=Dead] ->
      case GHC.Types.heq_sel
             @ k_s55K7
             @ k_s55K7
             @ a_s55K8
             @ b_s55K9
             (w_s55Ka
              `cast` (Data.Type.Equality.N:~[0]
                          <k_s55K7>_N <a_s55K8>_N <b_s55K9>_N
                      :: ((a_s55K8 :: k_s55K7) ~ (b_s55K9 :: k_s55K7) :: Constraint)
                         ~R# ((a_s55K8 :: k_s55K7) ~~ (b_s55K9 :: k_s55K7) :: Constraint)))
      of co_a558t
      { __DEFAULT ->
      case GHC.Types.heq_sel
             @ k_s55K7
             @ k_s55K7
             @ b_s55K9
             @ b_s55K9
             (w_s55Ka
              `cast` (Data.Type.Equality.N:~[0] <k_s55K7>_N co_a558t <b_s55K9>_N
                      :: ((a_s55K8 :: k_s55K7) ~ (b_s55K9 :: k_s55K7) :: Constraint)
                         ~R# ((b_s55K9 :: k_s55K7) ~~ (b_s55K9 :: k_s55K7) :: Constraint)))
      of co1_X55bO [Dmd=<L,A>]
      { __DEFAULT ->
      letrec {
        go_i1MGC [Occ=LoopBreaker] :: Int# -> [a_s55K8 :~: b_s55K9]
        [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []]
        go_i1MGC
          = \ (x_i1MGD :: Int#) ->
              GHC.Types.:
                @ (a_s55K8 :~: b_s55K9)
                (case x_i1MGD of {
                   __DEFAULT ->
                     (Data.Type.Equality.$fEnum:~:1 @ k_s55K7 @ b_s55K9 @ b_s55K9)
                     `cast` (((:~:) <k_s55K7>_N (Sym co_a558t) <b_s55K9>_N)_R
                             :: (b_s55K9 :~: b_s55K9 :: *) ~R# (a_s55K8 :~: b_s55K9 :: *));
                   0# ->
                     (Data.Type.Equality.$WRefl @ k_s55K7 @ b_s55K9)
                     `cast` (((:~:) <k_s55K7>_N (Sym co_a558t) <b_s55K9>_N)_R
                             :: (b_s55K9 :~: b_s55K9 :: *) ~R# (a_s55K8 :~: b_s55K9 :: *))
                 })
                (case x_i1MGD of wild_X3g {
                   __DEFAULT -> go_i1MGC (+# wild_X3g 1#);
                   9223372036854775807# -> GHC.Types.[] @ (a_s55K8 :~: b_s55K9)
                 }); } in
      go_i1MGC 0#
      }
      }

-- RHS size: {terms: 11, types: 24, coercions: 0, joins: 0/0}
Data.Type.Equality.$fEnum:~:_$cenumFrom [InlPrag=NOUSERINLINE[0]]
  :: forall k (a :: k) (b :: k).
     ((a :: k) ~ (b :: k)) =>
     (a :~: b) -> [a :~: b]
[GblId,
 Arity=2,
 Str=<S(S),U(U)><S,1*H>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_s55K7)
                 (@ (a_s55K8 :: k_s55K7))
                 (@ (b_s55K9 :: k_s55K7))
                 (w_s55Ka [Occ=Once] :: (a_s55K8 :: k_s55K7) ~ (b_s55K9 :: k_s55K7))
                 (w1_s55Kb [Occ=Once!] :: a_s55K8 :~: b_s55K9) ->
                 case w1_s55Kb of w2_X55Kh { Refl _ [Occ=Dead] ->
                 Data.Type.Equality.$w$cenumFrom
                   @ k_s55K7 @ a_s55K8 @ b_s55K9 w_s55Ka w2_X55Kh
                 }}]
Data.Type.Equality.$fEnum:~:_$cenumFrom
  = \ (@ k_s55K7)
      (@ (a_s55K8 :: k_s55K7))
      (@ (b_s55K9 :: k_s55K7))
      (w_s55Ka :: (a_s55K8 :: k_s55K7) ~ (b_s55K9 :: k_s55K7))
      (w1_s55Kb :: a_s55K8 :~: b_s55K9) ->
      case w1_s55Kb of w2_X55Nd { Refl ipv_s55MM [Dmd=<L,A>] ->
      Data.Type.Equality.$w$cenumFrom
        @ k_s55K7 @ a_s55K8 @ b_s55K9 w_s55Ka w2_X55Nd
      }

-- RHS size: {terms: 44, types: 83, coercions: 33, joins: 0/1}
Data.Type.Equality.$w$cenumFromThenTo [InlPrag=NOUSERINLINE[0]]
  :: forall k (a :: k) (b :: k).
     ((a :: k) ~ (b :: k)) =>
     (a :~: b) -> (a :~: b) -> (a :~: b) -> (# a :~: b, [a :~: b] #)
[GblId,
 Arity=4,
 Str=<S(S),U(U)><L,A><L,A><L,A>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0 0 0] 201 30}]
Data.Type.Equality.$w$cenumFromThenTo
  = \ (@ k_s55Kj)
      (@ (a_s55Kk :: k_s55Kj))
      (@ (b_s55Kl :: k_s55Kj))
      (w_s55Km :: (a_s55Kk :: k_s55Kj) ~ (b_s55Kl :: k_s55Kj))
      _ [Occ=Dead]
      _ [Occ=Dead]
      _ [Occ=Dead] ->
      case GHC.Types.heq_sel
             @ k_s55Kj
             @ k_s55Kj
             @ a_s55Kk
             @ b_s55Kl
             (w_s55Km
              `cast` (Data.Type.Equality.N:~[0]
                          <k_s55Kj>_N <a_s55Kk>_N <b_s55Kl>_N
                      :: ((a_s55Kk :: k_s55Kj) ~ (b_s55Kl :: k_s55Kj) :: Constraint)
                         ~R# ((a_s55Kk :: k_s55Kj) ~~ (b_s55Kl :: k_s55Kj) :: Constraint)))
      of co_a558t
      { __DEFAULT ->
      case GHC.Types.heq_sel
             @ k_s55Kj
             @ k_s55Kj
             @ b_s55Kl
             @ b_s55Kl
             (w_s55Km
              `cast` (Data.Type.Equality.N:~[0] <k_s55Kj>_N co_a558t <b_s55Kl>_N
                      :: ((a_s55Kk :: k_s55Kj) ~ (b_s55Kl :: k_s55Kj) :: Constraint)
                         ~R# ((b_s55Kl :: k_s55Kj) ~~ (b_s55Kl :: k_s55Kj) :: Constraint)))
      of co1_X55bS [Dmd=<L,A>]
      { __DEFAULT ->
      (# (Data.Type.Equality.$WRefl @ k_s55Kj @ b_s55Kl)
         `cast` (((:~:) <k_s55Kj>_N (Sym co_a558t) <b_s55Kl>_N)_R
                 :: (b_s55Kl :~: b_s55Kl :: *) ~R# (a_s55Kk :~: b_s55Kl :: *)),
         letrec {
           go_up_i2ioZ [Occ=LoopBreaker] :: Int# -> [a_s55Kk :~: b_s55Kl]
           [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
           go_up_i2ioZ
             = \ (x_i2ip0 :: Int#) ->
                 case ># x_i2ip0 0# of {
                   __DEFAULT ->
                     GHC.Types.:
                       @ (a_s55Kk :~: b_s55Kl)
                       (case x_i2ip0 of {
                          __DEFAULT ->
                            (Data.Type.Equality.$fEnum:~:1 @ k_s55Kj @ b_s55Kl @ b_s55Kl)
                            `cast` (((:~:) <k_s55Kj>_N (Sym co_a558t) <b_s55Kl>_N)_R
                                    :: (b_s55Kl :~: b_s55Kl :: *) ~R# (a_s55Kk :~: b_s55Kl :: *));
                          0# ->
                            (Data.Type.Equality.$WRefl @ k_s55Kj @ b_s55Kl)
                            `cast` (((:~:) <k_s55Kj>_N (Sym co_a558t) <b_s55Kl>_N)_R
                                    :: (b_s55Kl :~: b_s55Kl :: *) ~R# (a_s55Kk :~: b_s55Kl :: *))
                        })
                       (go_up_i2ioZ x_i2ip0);
                   1# ->
                     GHC.Types.:
                       @ (a_s55Kk :~: b_s55Kl)
                       (case x_i2ip0 of {
                          __DEFAULT ->
                            (Data.Type.Equality.$fEnum:~:1 @ k_s55Kj @ b_s55Kl @ b_s55Kl)
                            `cast` (((:~:) <k_s55Kj>_N (Sym co_a558t) <b_s55Kl>_N)_R
                                    :: (b_s55Kl :~: b_s55Kl :: *) ~R# (a_s55Kk :~: b_s55Kl :: *));
                          0# ->
                            (Data.Type.Equality.$WRefl @ k_s55Kj @ b_s55Kl)
                            `cast` (((:~:) <k_s55Kj>_N (Sym co_a558t) <b_s55Kl>_N)_R
                                    :: (b_s55Kl :~: b_s55Kl :: *) ~R# (a_s55Kk :~: b_s55Kl :: *))
                        })
                       (GHC.Types.[] @ (a_s55Kk :~: b_s55Kl))
                 }; } in
         go_up_i2ioZ 0# #)
      }
      }

-- RHS size: {terms: 26, types: 75, coercions: 0, joins: 0/0}
Data.Type.Equality.$fEnum:~:_$cenumFromThenTo [InlPrag=NOUSERINLINE[0]]
  :: forall k (a :: k) (b :: k).
     ((a :: k) ~ (b :: k)) =>
     (a :~: b) -> (a :~: b) -> (a :~: b) -> [a :~: b]
[GblId,
 Arity=4,
 Str=<S(S),U(U)><S,1*H><S,1*H><S,1*H>m2,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_s55Kj)
                 (@ (a_s55Kk :: k_s55Kj))
                 (@ (b_s55Kl :: k_s55Kj))
                 (w_s55Km [Occ=Once] :: (a_s55Kk :: k_s55Kj) ~ (b_s55Kl :: k_s55Kj))
                 (w1_s55Kn [Occ=Once!] :: a_s55Kk :~: b_s55Kl)
                 (w2_s55Ko [Occ=Once!] :: a_s55Kk :~: b_s55Kl)
                 (w3_s55Kp [Occ=Once!] :: a_s55Kk :~: b_s55Kl) ->
                 case w1_s55Kn of w4_X55Kv { Refl _ [Occ=Dead] ->
                 case w2_s55Ko of w5_X55Kx { Refl _ [Occ=Dead] ->
                 case w3_s55Kp of w6_X55Kz { Refl _ [Occ=Dead] ->
                 case Data.Type.Equality.$w$cenumFromThenTo
                        @ k_s55Kj @ a_s55Kk @ b_s55Kl w_s55Km w4_X55Kv w5_X55Kx w6_X55Kz
                 of
                 { (# ww1_s55LL [Occ=Once], ww2_s55LM [Occ=Once] #) ->
                 GHC.Types.: @ (a_s55Kk :~: b_s55Kl) ww1_s55LL ww2_s55LM
                 }
                 }
                 }
                 }}]
Data.Type.Equality.$fEnum:~:_$cenumFromThenTo
  = \ (@ k_s55Kj)
      (@ (a_s55Kk :: k_s55Kj))
      (@ (b_s55Kl :: k_s55Kj))
      (w_s55Km :: (a_s55Kk :: k_s55Kj) ~ (b_s55Kl :: k_s55Kj))
      (w1_s55Kn :: a_s55Kk :~: b_s55Kl)
      (w2_s55Ko :: a_s55Kk :~: b_s55Kl)
      (w3_s55Kp :: a_s55Kk :~: b_s55Kl) ->
      case w1_s55Kn of w4_X55Nu { Refl ipv_s55N7 [Dmd=<L,A>] ->
      case w2_s55Ko of w5_X55NA { Refl ipv1_s55Na [Dmd=<L,A>] ->
      case w3_s55Kp of w6_X55NG { Refl ipv2_s55Nd [Dmd=<L,A>] ->
      case Data.Type.Equality.$w$cenumFromThenTo
             @ k_s55Kj @ a_s55Kk @ b_s55Kl w_s55Km w4_X55Nu w5_X55NA w6_X55NG
      of
      { (# ww1_s55LL, ww2_s55LM #) ->
      GHC.Types.: @ (a_s55Kk :~: b_s55Kl) ww1_s55LL ww2_s55LM
      }
      }
      }
      }

-- RHS size: {terms: 21, types: 36, coercions: 0, joins: 0/0}
Data.Type.Equality.$fEnum:~: [InlPrag=NOUSERINLINE CONLIKE]
  :: forall k (a :: k) (b :: k).
     ((a :: k) ~ (b :: k)) =>
     Enum (a :~: b)
[GblId[DFunId],
 Arity=1,
 Str=<L,U(U)>m,
 Unf=DFun: \ (@ k_a54MS)
             (@ (a_a54KV :: k_a54MS))
             (@ (b_a54KW :: k_a54MS))
             (v_B1 :: (a_a54KV :: k_a54MS) ~ (b_a54KW :: k_a54MS)) ->
       GHC.Enum.C:Enum TYPE: a_a54KV :~: b_a54KW
                       Data.Type.Equality.$fEnum:~:_$csucc
                         @ k_a54MS @ a_a54KV @ b_a54KW v_B1
                       Data.Type.Equality.$fEnum:~:_$csucc
                         @ k_a54MS @ a_a54KV @ b_a54KW v_B1
                       Data.Type.Equality.$fEnum:~:_$ctoEnum
                         @ k_a54MS @ a_a54KV @ b_a54KW v_B1
                       Data.Type.Equality.$fEnum:~:_$cfromEnum
                         @ k_a54MS @ a_a54KV @ b_a54KW v_B1
                       Data.Type.Equality.$fEnum:~:_$cenumFrom
                         @ k_a54MS @ a_a54KV @ b_a54KW v_B1
                       Data.Type.Equality.$fEnum:~:_$cenumFromThen
                         @ k_a54MS @ a_a54KV @ b_a54KW v_B1
                       Data.Type.Equality.$fEnum:~:_$cenumFromTo
                         @ k_a54MS @ a_a54KV @ b_a54KW v_B1
                       Data.Type.Equality.$fEnum:~:_$cenumFromThenTo
                         @ k_a54MS @ a_a54KV @ b_a54KW v_B1]
Data.Type.Equality.$fEnum:~:
  = \ (@ k_a555Z)
      (@ (a_a5560 :: k_a555Z))
      (@ (b_a5561 :: k_a555Z))
      ($d~_a5562 :: (a_a5560 :: k_a555Z) ~ (b_a5561 :: k_a555Z)) ->
      GHC.Enum.C:Enum
        @ (a_a5560 :~: b_a5561)
        (Data.Type.Equality.$fEnum:~:_$csucc
           @ k_a555Z @ a_a5560 @ b_a5561 $d~_a5562)
        (Data.Type.Equality.$fEnum:~:_$csucc
           @ k_a555Z @ a_a5560 @ b_a5561 $d~_a5562)
        (Data.Type.Equality.$fEnum:~:_$ctoEnum
           @ k_a555Z @ a_a5560 @ b_a5561 $d~_a5562)
        (Data.Type.Equality.$fEnum:~:_$cfromEnum
           @ k_a555Z @ a_a5560 @ b_a5561 $d~_a5562)
        (Data.Type.Equality.$fEnum:~:_$cenumFrom
           @ k_a555Z @ a_a5560 @ b_a5561 $d~_a5562)
        (Data.Type.Equality.$fEnum:~:_$cenumFromThen
           @ k_a555Z @ a_a5560 @ b_a5561 $d~_a5562)
        (Data.Type.Equality.$fEnum:~:_$cenumFromTo
           @ k_a555Z @ a_a5560 @ b_a5561 $d~_a5562)
        (Data.Type.Equality.$fEnum:~:_$cenumFromThenTo
           @ k_a555Z @ a_a5560 @ b_a5561 $d~_a5562)

-- RHS size: {terms: 14, types: 42, coercions: 0, joins: 0/0}
Data.Type.Equality.$fEnum:~~:_$cfromEnum
  :: forall k2 k1 (a :: k1) (b :: k2).
     ((a :: k1) ~~ (b :: k2)) =>
     (a :~~: b) -> Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)><S,1*H>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k2_a554V)
                 (@ k1_a554W)
                 (@ (a_a554X :: k1_a554W))
                 (@ (b_a554Y :: k2_a554V))
                 ($d~~_a554Z [Occ=Once]
                    :: (a_a554X :: k1_a554W) ~~ (b_a554Y :: k2_a554V))
                 (eta_B1 [Occ=Once!] :: a_a554X :~~: b_a554Y) ->
                 case GHC.Types.heq_sel
                        @ k1_a554W @ k2_a554V @ a_a554X @ b_a554Y $d~~_a554Z
                 of
                 { __DEFAULT ->
                 case eta_B1 of { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 Data.Type.Equality.$fEnum:~:3
                 }
                 }}]
Data.Type.Equality.$fEnum:~~:_$cfromEnum
  = \ (@ k2_a554V)
      (@ k1_a554W)
      (@ (a_a554X :: k1_a554W))
      (@ (b_a554Y :: k2_a554V))
      ($d~~_a554Z :: (a_a554X :: k1_a554W) ~~ (b_a554Y :: k2_a554V))
      (eta_B1 :: a_a554X :~~: b_a554Y) ->
      case GHC.Types.heq_sel
             @ k1_a554W @ k2_a554V @ a_a554X @ b_a554Y $d~~_a554Z
      of co_a558d [Dmd=<L,A>]
      { __DEFAULT ->
      case eta_B1 of
      { HRefl co1_a555w [Dmd=<L,A>] co2_a555x [Dmd=<L,A>] ->
      Data.Type.Equality.$fEnum:~:3
      }
      }

-- RHS size: {terms: 7, types: 12, coercions: 0, joins: 0/0}
Data.Type.Equality.$fEnum:~~:1
  :: forall k1 (a :: k1) k2 (b :: k2). a :~~: b
[GblId, Str=x]
Data.Type.Equality.$fEnum:~~:1
  = \ (@ k1_a554W)
      (@ (a_a554X :: k1_a554W))
      (@ k2_a554V)
      (@ (b_a554Y :: k2_a554V)) ->
      errorWithoutStackTrace
        @ 'LiftedRep @ (a_a554X :~~: b_a554Y) (unpackCString# lvl_r5689)

-- RHS size: {terms: 19, types: 30, coercions: 18, joins: 0/0}
Data.Type.Equality.$fEnum:~~:_$ctoEnum
  :: forall k2 k1 (a :: k1) (b :: k2).
     ((a :: k1) ~~ (b :: k2)) =>
     Int -> a :~~: b
[GblId,
 Arity=2,
 Str=<S(S),1*U(1*U)><S(S),1*U(1*U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k2_a554V)
                 (@ k1_a554W)
                 (@ (a_a554X :: k1_a554W))
                 (@ (b_a554Y :: k2_a554V))
                 ($d~~_a554Z [Occ=Once]
                    :: (a_a554X :: k1_a554W) ~~ (b_a554Y :: k2_a554V))
                 (eta_B1 [Occ=Once!] :: Int) ->
                 case GHC.Types.heq_sel
                        @ k1_a554W @ k2_a554V @ a_a554X @ b_a554Y $d~~_a554Z
                 of co_a558d
                 { __DEFAULT ->
                 case eta_B1 of { I# ds_d55bl [Occ=Once!] ->
                 case ds_d55bl of {
                   __DEFAULT ->
                     Data.Type.Equality.$fEnum:~~:1
                       @ k1_a554W @ a_a554X @ k2_a554V @ b_a554Y;
                   0# ->
                     (Data.Type.Equality.$WHRefl @ k1_a554W @ a_a554X)
                     `cast` (((:~~:)
                                <k1_a554W>_N
                                (Kind co_a558d)
                                <a_a554X>_N
                                (Sym (Coh (Sym co_a558d) (Sym (Kind co_a558d))) ; Coh <b_a554Y>_N
                                                                                      (Sym (Kind
                                                                                                co_a558d))))_R
                             :: (a_a554X :~~: a_a554X :: *) ~R# (a_a554X :~~: b_a554Y :: *))
                 }
                 }
                 }}]
Data.Type.Equality.$fEnum:~~:_$ctoEnum
  = \ (@ k2_a554V)
      (@ k1_a554W)
      (@ (a_a554X :: k1_a554W))
      (@ (b_a554Y :: k2_a554V))
      ($d~~_a554Z :: (a_a554X :: k1_a554W) ~~ (b_a554Y :: k2_a554V))
      (eta_B1 :: Int) ->
      case GHC.Types.heq_sel
             @ k1_a554W @ k2_a554V @ a_a554X @ b_a554Y $d~~_a554Z
      of co_a558d
      { __DEFAULT ->
      case eta_B1 of { I# ds_d55bl ->
      case ds_d55bl of {
        __DEFAULT ->
          Data.Type.Equality.$fEnum:~~:1
            @ k1_a554W @ a_a554X @ k2_a554V @ b_a554Y;
        0# ->
          (Data.Type.Equality.$WHRefl @ k1_a554W @ a_a554X)
          `cast` (((:~~:)
                     <k1_a554W>_N
                     (Kind co_a558d)
                     <a_a554X>_N
                     (Sym (Coh (Sym co_a558d) (Sym (Kind co_a558d))) ; Coh <b_a554Y>_N
                                                                           (Sym (Kind co_a558d))))_R
                  :: (a_a554X :~~: a_a554X :: *) ~R# (a_a554X :~~: b_a554Y :: *))
      }
      }
      }

-- RHS size: {terms: 15, types: 38, coercions: 48, joins: 0/0}
Data.Type.Equality.$fEnum:~~:_$csucc
  :: forall k2 k1 (a :: k1) (b :: k2).
     ((a :: k1) ~~ (b :: k2)) =>
     (a :~~: b) -> a :~~: b
[GblId, Arity=2, Str=<B,U(U)><B,A>x, Unf=OtherCon []]
Data.Type.Equality.$fEnum:~~:_$csucc
  = \ (@ k2_a554V)
      (@ k1_a554W)
      (@ (a_a554X :: k1_a554W))
      (@ (b_a554Y :: k2_a554V))
      ($d~~_a554Z :: (a_a554X :: k1_a554W) ~~ (b_a554Y :: k2_a554V))
      _ [Occ=Dead] ->
      case GHC.Types.heq_sel
             @ k1_a554W @ k2_a554V @ a_a554X @ b_a554Y $d~~_a554Z
      of co_a558d [Dmd=<B,U>]
      { __DEFAULT ->
      case GHC.Types.heq_sel
             @ k2_a554V
             @ k2_a554V
             @ b_a554Y
             @ b_a554Y
             ($d~~_a554Z
              `cast` (((~~)
                         (Kind co_a558d)
                         <k2_a554V>_N
                         (Sym (Coh (Sym co_a558d)
                                   (Sym (Kind co_a558d))) ; (Coh (Sym (Coh <b_a554Y>_N
                                                                           (Sym (Kind co_a558d))))
                                                                 (Sym (Kind
                                                                           co_a558d)) ; Coh <b_a554Y>_N
                                                                                            (Sym (Kind
                                                                                                      co_a558d))))
                         <b_a554Y>_N)_R
                      :: ((a_a554X :: k1_a554W) ~~ (b_a554Y :: k2_a554V) :: Constraint)
                         ~R# ((b_a554Y :: k2_a554V)
                              ~~ (b_a554Y :: k2_a554V) :: Constraint)))
      of co1_X55bE [Dmd=<B,A>]
      { __DEFAULT ->
      (Data.Type.Equality.$fEnum:~~:1
         @ k2_a554V @ b_a554Y @ k2_a554V @ b_a554Y)
      `cast` (((:~~:)
                 (Sym (Kind co_a558d))
                 <k2_a554V>_N
                 (Sym (Coh <b_a554Y>_N (Sym (Kind co_a558d))) ; Coh (Sym co_a558d)
                                                                    (Sym (Kind co_a558d)))
                 <b_a554Y>_N)_R
              :: (b_a554Y :~~: b_a554Y :: *) ~R# (a_a554X :~~: b_a554Y :: *))
      }
      }

-- RHS size: {terms: 35, types: 65, coercions: 67, joins: 0/1}
Data.Type.Equality.$w$cenumFromTo1 [InlPrag=NOUSERINLINE[0]]
  :: forall k2 k1 (a :: k1) (b :: k2).
     ((a :: k1) ~~ (b :: k2)) =>
     (a :~~: b) -> (a :~~: b) -> [a :~~: b]
[GblId,
 Arity=3,
 Str=<S(S),U(U)><L,A><L,A>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [30 0 0] 171 0}]
Data.Type.Equality.$w$cenumFromTo1
  = \ (@ k2_s55KB)
      (@ k1_s55KC)
      (@ (a_s55KD :: k1_s55KC))
      (@ (b_s55KE :: k2_s55KB))
      (w_s55KF :: (a_s55KD :: k1_s55KC) ~~ (b_s55KE :: k2_s55KB))
      _ [Occ=Dead]
      _ [Occ=Dead] ->
      case GHC.Types.heq_sel
             @ k1_s55KC @ k2_s55KB @ a_s55KD @ b_s55KE w_s55KF
      of co_a558d
      { __DEFAULT ->
      case GHC.Types.heq_sel
             @ k2_s55KB
             @ k2_s55KB
             @ b_s55KE
             @ b_s55KE
             (w_s55KF
              `cast` (((~~)
                         (Kind co_a558d)
                         <k2_s55KB>_N
                         (Sym (Coh (Sym co_a558d)
                                   (Sym (Kind co_a558d))) ; (Coh (Sym (Coh <b_s55KE>_N
                                                                           (Sym (Kind co_a558d))))
                                                                 (Sym (Kind
                                                                           co_a558d)) ; Coh <b_s55KE>_N
                                                                                            (Sym (Kind
                                                                                                      co_a558d))))
                         <b_s55KE>_N)_R
                      :: ((a_s55KD :: k1_s55KC) ~~ (b_s55KE :: k2_s55KB) :: Constraint)
                         ~R# ((b_s55KE :: k2_s55KB)
                              ~~ (b_s55KE :: k2_s55KB) :: Constraint)))
      of co1_X55bJ [Dmd=<L,A>]
      { __DEFAULT ->
      letrec {
        go_i1MGC [Occ=LoopBreaker] :: Int# -> [a_s55KD :~~: b_s55KE]
        [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []]
        go_i1MGC
          = \ (x_i1MGD :: Int#) ->
              GHC.Types.:
                @ (a_s55KD :~~: b_s55KE)
                (case x_i1MGD of {
                   __DEFAULT ->
                     (Data.Type.Equality.$fEnum:~~:1
                        @ k2_s55KB @ b_s55KE @ k2_s55KB @ b_s55KE)
                     `cast` (((:~~:)
                                (Sym (Kind co_a558d))
                                <k2_s55KB>_N
                                (Sym (Coh <b_s55KE>_N (Sym (Kind co_a558d))) ; Coh (Sym co_a558d)
                                                                                   (Sym (Kind
                                                                                             co_a558d)))
                                <b_s55KE>_N)_R
                             :: (b_s55KE :~~: b_s55KE :: *) ~R# (a_s55KD :~~: b_s55KE :: *));
                   0# ->
                     (Data.Type.Equality.$WHRefl @ k2_s55KB @ b_s55KE)
                     `cast` (((:~~:)
                                (Sym (Kind co_a558d))
                                <k2_s55KB>_N
                                (Sym (Coh <b_s55KE>_N (Sym (Kind co_a558d))) ; Coh (Sym co_a558d)
                                                                                   (Sym (Kind
                                                                                             co_a558d)))
                                <b_s55KE>_N)_R
                             :: (b_s55KE :~~: b_s55KE :: *) ~R# (a_s55KD :~~: b_s55KE :: *))
                 })
                (case x_i1MGD of wild_X3B {
                   __DEFAULT -> go_i1MGC (+# wild_X3B 1#);
                   0# -> GHC.Types.[] @ (a_s55KD :~~: b_s55KE)
                 }); } in
      go_i1MGC 0#
      }
      }

-- RHS size: {terms: 17, types: 59, coercions: 0, joins: 0/0}
Data.Type.Equality.$fEnum:~~:_$cenumFromTo [InlPrag=NOUSERINLINE[0]]
  :: forall k2 k1 (a :: k1) (b :: k2).
     ((a :: k1) ~~ (b :: k2)) =>
     (a :~~: b) -> (a :~~: b) -> [a :~~: b]
[GblId,
 Arity=3,
 Str=<S(S),U(U)><S,1*H><S,1*H>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k2_s55KB)
                 (@ k1_s55KC)
                 (@ (a_s55KD :: k1_s55KC))
                 (@ (b_s55KE :: k2_s55KB))
                 (w_s55KF [Occ=Once]
                    :: (a_s55KD :: k1_s55KC) ~~ (b_s55KE :: k2_s55KB))
                 (w1_s55KG [Occ=Once!] :: a_s55KD :~~: b_s55KE)
                 (w2_s55KH [Occ=Once!] :: a_s55KD :~~: b_s55KE) ->
                 case w1_s55KG of w3_X55KO { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 case w2_s55KH of w4_X55KQ { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 Data.Type.Equality.$w$cenumFromTo1
                   @ k2_s55KB @ k1_s55KC @ a_s55KD @ b_s55KE w_s55KF w3_X55KO w4_X55KQ
                 }
                 }}]
Data.Type.Equality.$fEnum:~~:_$cenumFromTo
  = \ (@ k2_s55KB)
      (@ k1_s55KC)
      (@ (a_s55KD :: k1_s55KC))
      (@ (b_s55KE :: k2_s55KB))
      (w_s55KF :: (a_s55KD :: k1_s55KC) ~~ (b_s55KE :: k2_s55KB))
      (w1_s55KG :: a_s55KD :~~: b_s55KE)
      (w2_s55KH :: a_s55KD :~~: b_s55KE) ->
      case w1_s55KG of w3_X55NV
      { HRefl ipv_s55NL [Dmd=<L,A>] ipv1_s55NM [Dmd=<L,A>] ->
      case w2_s55KH of w4_X55O2
      { HRefl ipv2_s55NP [Dmd=<L,A>] ipv3_s55NQ [Dmd=<L,A>] ->
      Data.Type.Equality.$w$cenumFromTo1
        @ k2_s55KB @ k1_s55KC @ a_s55KD @ b_s55KE w_s55KF w3_X55NV w4_X55O2
      }
      }

-- RHS size: {terms: 19, types: 49, coercions: 79, joins: 0/0}
Data.Type.Equality.$w$cenumFromThen1 [InlPrag=NOUSERINLINE[0]]
  :: forall k2 k1 (a :: k1) (b :: k2).
     ((a :: k1) ~~ (b :: k2)) =>
     (a :~~: b) -> (a :~~: b) -> [a :~~: b]
[GblId,
 Arity=3,
 Str=<S(S),U(U)><L,A><L,A>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [30 0 0] 110 0}]
Data.Type.Equality.$w$cenumFromThen1
  = \ (@ k2_s55KJ)
      (@ k1_s55KK)
      (@ (a_s55KL :: k1_s55KK))
      (@ (b_s55KM :: k2_s55KJ))
      (w_s55KN :: (a_s55KL :: k1_s55KK) ~~ (b_s55KM :: k2_s55KJ))
      _ [Occ=Dead]
      _ [Occ=Dead] ->
      case GHC.Types.heq_sel
             @ k1_s55KK @ k2_s55KJ @ a_s55KL @ b_s55KM w_s55KN
      of co_a558d
      { __DEFAULT ->
      case GHC.Types.heq_sel
             @ k2_s55KJ
             @ k2_s55KJ
             @ b_s55KM
             @ b_s55KM
             (w_s55KN
              `cast` (((~~)
                         (Kind co_a558d)
                         <k2_s55KJ>_N
                         (Sym (Coh (Sym co_a558d)
                                   (Sym (Kind co_a558d))) ; (Coh (Sym (Coh <b_s55KM>_N
                                                                           (Sym (Kind co_a558d))))
                                                                 (Sym (Kind
                                                                           co_a558d)) ; Coh <b_s55KM>_N
                                                                                            (Sym (Kind
                                                                                                      co_a558d))))
                         <b_s55KM>_N)_R
                      :: ((a_s55KL :: k1_s55KK) ~~ (b_s55KM :: k2_s55KJ) :: Constraint)
                         ~R# ((b_s55KM :: k2_s55KJ)
                              ~~ (b_s55KM :: k2_s55KJ) :: Constraint)))
      of co1_X55bK [Dmd=<L,A>]
      { __DEFAULT ->
      map
        @ Int
        @ (a_s55KL :~~: b_s55KM)
        ((Data.Type.Equality.$fEnum:~~:_$ctoEnum
            @ k2_s55KJ
            @ k2_s55KJ
            @ b_s55KM
            @ b_s55KM
            (w_s55KN
             `cast` (((~~)
                        (Kind co_a558d)
                        <k2_s55KJ>_N
                        (Sym (Coh (Sym co_a558d)
                                  (Sym (Kind co_a558d))) ; (Coh (Sym (Coh <b_s55KM>_N
                                                                          (Sym (Kind co_a558d))))
                                                                (Sym (Kind
                                                                          co_a558d)) ; Coh <b_s55KM>_N
                                                                                           (Sym (Kind
                                                                                                     co_a558d))))
                        <b_s55KM>_N)_R
                     :: ((a_s55KL :: k1_s55KK) ~~ (b_s55KM :: k2_s55KJ) :: Constraint)
                        ~R# ((b_s55KM :: k2_s55KJ)
                             ~~ (b_s55KM :: k2_s55KJ) :: Constraint))))
         `cast` (<Int>_R
                 ->_R ((:~~:)
                         (Sym (Kind co_a558d))
                         <k2_s55KJ>_N
                         (Sym (Coh <b_s55KM>_N (Sym (Kind co_a558d))) ; Coh (Sym co_a558d)
                                                                            (Sym (Kind co_a558d)))
                         <b_s55KM>_N)_R
                 :: (Int -> b_s55KM :~~: b_s55KM :: *)
                    ~R# (Int -> a_s55KL :~~: b_s55KM :: *)))
        Data.Type.Equality.$fEnum:~:2
      }
      }

-- RHS size: {terms: 17, types: 59, coercions: 0, joins: 0/0}
Data.Type.Equality.$fEnum:~~:_$cenumFromThen [InlPrag=NOUSERINLINE[0]]
  :: forall k2 k1 (a :: k1) (b :: k2).
     ((a :: k1) ~~ (b :: k2)) =>
     (a :~~: b) -> (a :~~: b) -> [a :~~: b]
[GblId,
 Arity=3,
 Str=<S(S),U(U)><S,1*H><S,1*H>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k2_s55KJ)
                 (@ k1_s55KK)
                 (@ (a_s55KL :: k1_s55KK))
                 (@ (b_s55KM :: k2_s55KJ))
                 (w_s55KN [Occ=Once]
                    :: (a_s55KL :: k1_s55KK) ~~ (b_s55KM :: k2_s55KJ))
                 (w1_s55KO [Occ=Once!] :: a_s55KL :~~: b_s55KM)
                 (w2_s55KP [Occ=Once!] :: a_s55KL :~~: b_s55KM) ->
                 case w1_s55KO of w3_X55KW { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 case w2_s55KP of w4_X55KY { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 Data.Type.Equality.$w$cenumFromThen1
                   @ k2_s55KJ @ k1_s55KK @ a_s55KL @ b_s55KM w_s55KN w3_X55KW w4_X55KY
                 }
                 }}]
Data.Type.Equality.$fEnum:~~:_$cenumFromThen
  = \ (@ k2_s55KJ)
      (@ k1_s55KK)
      (@ (a_s55KL :: k1_s55KK))
      (@ (b_s55KM :: k2_s55KJ))
      (w_s55KN :: (a_s55KL :: k1_s55KK) ~~ (b_s55KM :: k2_s55KJ))
      (w1_s55KO :: a_s55KL :~~: b_s55KM)
      (w2_s55KP :: a_s55KL :~~: b_s55KM) ->
      case w1_s55KO of w3_X55O5
      { HRefl ipv_s55O4 [Dmd=<L,A>] ipv1_s55O5 [Dmd=<L,A>] ->
      case w2_s55KP of w4_X55Oc
      { HRefl ipv2_s55O8 [Dmd=<L,A>] ipv3_s55O9 [Dmd=<L,A>] ->
      Data.Type.Equality.$w$cenumFromThen1
        @ k2_s55KJ @ k1_s55KK @ a_s55KL @ b_s55KM w_s55KN w3_X55O5 w4_X55Oc
      }
      }

-- RHS size: {terms: 34, types: 60, coercions: 67, joins: 0/1}
Data.Type.Equality.$w$cenumFrom1 [InlPrag=NOUSERINLINE[0]]
  :: forall k2 k1 (a :: k1) (b :: k2).
     ((a :: k1) ~~ (b :: k2)) =>
     (a :~~: b) -> [a :~~: b]
[GblId,
 Arity=2,
 Str=<S(S),U(U)><L,A>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [30 0] 171 0}]
Data.Type.Equality.$w$cenumFrom1
  = \ (@ k2_s55KS)
      (@ k1_s55KT)
      (@ (a_s55KU :: k1_s55KT))
      (@ (b_s55KV :: k2_s55KS))
      (w_s55KW :: (a_s55KU :: k1_s55KT) ~~ (b_s55KV :: k2_s55KS))
      _ [Occ=Dead] ->
      case GHC.Types.heq_sel
             @ k1_s55KT @ k2_s55KS @ a_s55KU @ b_s55KV w_s55KW
      of co_a558d
      { __DEFAULT ->
      case GHC.Types.heq_sel
             @ k2_s55KS
             @ k2_s55KS
             @ b_s55KV
             @ b_s55KV
             (w_s55KW
              `cast` (((~~)
                         (Kind co_a558d)
                         <k2_s55KS>_N
                         (Sym (Coh (Sym co_a558d)
                                   (Sym (Kind co_a558d))) ; (Coh (Sym (Coh <b_s55KV>_N
                                                                           (Sym (Kind co_a558d))))
                                                                 (Sym (Kind
                                                                           co_a558d)) ; Coh <b_s55KV>_N
                                                                                            (Sym (Kind
                                                                                                      co_a558d))))
                         <b_s55KV>_N)_R
                      :: ((a_s55KU :: k1_s55KT) ~~ (b_s55KV :: k2_s55KS) :: Constraint)
                         ~R# ((b_s55KV :: k2_s55KS)
                              ~~ (b_s55KV :: k2_s55KS) :: Constraint)))
      of co1_X55bK [Dmd=<L,A>]
      { __DEFAULT ->
      letrec {
        go_i1MGC [Occ=LoopBreaker] :: Int# -> [a_s55KU :~~: b_s55KV]
        [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []]
        go_i1MGC
          = \ (x_i1MGD :: Int#) ->
              GHC.Types.:
                @ (a_s55KU :~~: b_s55KV)
                (case x_i1MGD of {
                   __DEFAULT ->
                     (Data.Type.Equality.$fEnum:~~:1
                        @ k2_s55KS @ b_s55KV @ k2_s55KS @ b_s55KV)
                     `cast` (((:~~:)
                                (Sym (Kind co_a558d))
                                <k2_s55KS>_N
                                (Sym (Coh <b_s55KV>_N (Sym (Kind co_a558d))) ; Coh (Sym co_a558d)
                                                                                   (Sym (Kind
                                                                                             co_a558d)))
                                <b_s55KV>_N)_R
                             :: (b_s55KV :~~: b_s55KV :: *) ~R# (a_s55KU :~~: b_s55KV :: *));
                   0# ->
                     (Data.Type.Equality.$WHRefl @ k2_s55KS @ b_s55KV)
                     `cast` (((:~~:)
                                (Sym (Kind co_a558d))
                                <k2_s55KS>_N
                                (Sym (Coh <b_s55KV>_N (Sym (Kind co_a558d))) ; Coh (Sym co_a558d)
                                                                                   (Sym (Kind
                                                                                             co_a558d)))
                                <b_s55KV>_N)_R
                             :: (b_s55KV :~~: b_s55KV :: *) ~R# (a_s55KU :~~: b_s55KV :: *))
                 })
                (case x_i1MGD of wild_X3t {
                   __DEFAULT -> go_i1MGC (+# wild_X3t 1#);
                   9223372036854775807# -> GHC.Types.[] @ (a_s55KU :~~: b_s55KV)
                 }); } in
      go_i1MGC 0#
      }
      }

-- RHS size: {terms: 12, types: 37, coercions: 0, joins: 0/0}
Data.Type.Equality.$fEnum:~~:_$cenumFrom [InlPrag=NOUSERINLINE[0]]
  :: forall k2 k1 (a :: k1) (b :: k2).
     ((a :: k1) ~~ (b :: k2)) =>
     (a :~~: b) -> [a :~~: b]
[GblId,
 Arity=2,
 Str=<S(S),U(U)><S,1*H>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k2_s55KS)
                 (@ k1_s55KT)
                 (@ (a_s55KU :: k1_s55KT))
                 (@ (b_s55KV :: k2_s55KS))
                 (w_s55KW [Occ=Once]
                    :: (a_s55KU :: k1_s55KT) ~~ (b_s55KV :: k2_s55KS))
                 (w1_s55KX [Occ=Once!] :: a_s55KU :~~: b_s55KV) ->
                 case w1_s55KX of w2_X55L4 { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 Data.Type.Equality.$w$cenumFrom1
                   @ k2_s55KS @ k1_s55KT @ a_s55KU @ b_s55KV w_s55KW w2_X55L4
                 }}]
Data.Type.Equality.$fEnum:~~:_$cenumFrom
  = \ (@ k2_s55KS)
      (@ k1_s55KT)
      (@ (a_s55KU :: k1_s55KT))
      (@ (b_s55KV :: k2_s55KS))
      (w_s55KW :: (a_s55KU :: k1_s55KT) ~~ (b_s55KV :: k2_s55KS))
      (w1_s55KX :: a_s55KU :~~: b_s55KV) ->
      case w1_s55KX of w2_X55Of
      { HRefl ipv_s55Op [Dmd=<L,A>] ipv1_s55Oq [Dmd=<L,A>] ->
      Data.Type.Equality.$w$cenumFrom1
        @ k2_s55KS @ k1_s55KT @ a_s55KU @ b_s55KV w_s55KW w2_X55Of
      }

-- RHS size: {terms: 45, types: 97, coercions: 124, joins: 0/1}
Data.Type.Equality.$w$cenumFromThenTo1 [InlPrag=NOUSERINLINE[0]]
  :: forall k2 k1 (a :: k1) (b :: k2).
     ((a :: k1) ~~ (b :: k2)) =>
     (a :~~: b)
     -> (a :~~: b) -> (a :~~: b) -> (# a :~~: b, [a :~~: b] #)
[GblId,
 Arity=4,
 Str=<S(S),U(U)><L,A><L,A><L,A>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 0 0 0] 201 30}]
Data.Type.Equality.$w$cenumFromThenTo1
  = \ (@ k2_s55L6)
      (@ k1_s55L7)
      (@ (a_s55L8 :: k1_s55L7))
      (@ (b_s55L9 :: k2_s55L6))
      (w_s55La :: (a_s55L8 :: k1_s55L7) ~~ (b_s55L9 :: k2_s55L6))
      _ [Occ=Dead]
      _ [Occ=Dead]
      _ [Occ=Dead] ->
      case GHC.Types.heq_sel
             @ k1_s55L7 @ k2_s55L6 @ a_s55L8 @ b_s55L9 w_s55La
      of co_a558d
      { __DEFAULT ->
      case GHC.Types.heq_sel
             @ k2_s55L6
             @ k2_s55L6
             @ b_s55L9
             @ b_s55L9
             (w_s55La
              `cast` (((~~)
                         (Kind co_a558d)
                         <k2_s55L6>_N
                         (Sym (Coh (Sym co_a558d)
                                   (Sym (Kind co_a558d))) ; (Coh (Sym (Coh <b_s55L9>_N
                                                                           (Sym (Kind co_a558d))))
                                                                 (Sym (Kind
                                                                           co_a558d)) ; Coh <b_s55L9>_N
                                                                                            (Sym (Kind
                                                                                                      co_a558d))))
                         <b_s55L9>_N)_R
                      :: ((a_s55L8 :: k1_s55L7) ~~ (b_s55L9 :: k2_s55L6) :: Constraint)
                         ~R# ((b_s55L9 :: k2_s55L6)
                              ~~ (b_s55L9 :: k2_s55L6) :: Constraint)))
      of co1_X55bO [Dmd=<L,A>]
      { __DEFAULT ->
      (# (Data.Type.Equality.$WHRefl @ k2_s55L6 @ b_s55L9)
         `cast` (((:~~:)
                    (Sym (Kind co_a558d))
                    <k2_s55L6>_N
                    (Sym (Coh <b_s55L9>_N (Sym (Kind co_a558d))) ; Coh (Sym co_a558d)
                                                                       (Sym (Kind co_a558d)))
                    <b_s55L9>_N)_R
                 :: (b_s55L9 :~~: b_s55L9 :: *) ~R# (a_s55L8 :~~: b_s55L9 :: *)),
         letrec {
           go_up_i2ioZ [Occ=LoopBreaker] :: Int# -> [a_s55L8 :~~: b_s55L9]
           [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
           go_up_i2ioZ
             = \ (x_i2ip0 :: Int#) ->
                 case ># x_i2ip0 0# of {
                   __DEFAULT ->
                     GHC.Types.:
                       @ (a_s55L8 :~~: b_s55L9)
                       (case x_i2ip0 of {
                          __DEFAULT ->
                            (Data.Type.Equality.$fEnum:~~:1
                               @ k2_s55L6 @ b_s55L9 @ k2_s55L6 @ b_s55L9)
                            `cast` (((:~~:)
                                       (Sym (Kind co_a558d))
                                       <k2_s55L6>_N
                                       (Sym (Coh <b_s55L9>_N
                                                 (Sym (Kind co_a558d))) ; Coh (Sym co_a558d)
                                                                              (Sym (Kind co_a558d)))
                                       <b_s55L9>_N)_R
                                    :: (b_s55L9 :~~: b_s55L9 :: *) ~R# (a_s55L8 :~~: b_s55L9 :: *));
                          0# ->
                            (Data.Type.Equality.$WHRefl @ k2_s55L6 @ b_s55L9)
                            `cast` (((:~~:)
                                       (Sym (Kind co_a558d))
                                       <k2_s55L6>_N
                                       (Sym (Coh <b_s55L9>_N
                                                 (Sym (Kind co_a558d))) ; Coh (Sym co_a558d)
                                                                              (Sym (Kind co_a558d)))
                                       <b_s55L9>_N)_R
                                    :: (b_s55L9 :~~: b_s55L9 :: *) ~R# (a_s55L8 :~~: b_s55L9 :: *))
                        })
                       (go_up_i2ioZ x_i2ip0);
                   1# ->
                     GHC.Types.:
                       @ (a_s55L8 :~~: b_s55L9)
                       (case x_i2ip0 of {
                          __DEFAULT ->
                            (Data.Type.Equality.$fEnum:~~:1
                               @ k2_s55L6 @ b_s55L9 @ k2_s55L6 @ b_s55L9)
                            `cast` (((:~~:)
                                       (Sym (Kind co_a558d))
                                       <k2_s55L6>_N
                                       (Sym (Coh <b_s55L9>_N
                                                 (Sym (Kind co_a558d))) ; Coh (Sym co_a558d)
                                                                              (Sym (Kind co_a558d)))
                                       <b_s55L9>_N)_R
                                    :: (b_s55L9 :~~: b_s55L9 :: *) ~R# (a_s55L8 :~~: b_s55L9 :: *));
                          0# ->
                            (Data.Type.Equality.$WHRefl @ k2_s55L6 @ b_s55L9)
                            `cast` (((:~~:)
                                       (Sym (Kind co_a558d))
                                       <k2_s55L6>_N
                                       (Sym (Coh <b_s55L9>_N
                                                 (Sym (Kind co_a558d))) ; Coh (Sym co_a558d)
                                                                              (Sym (Kind co_a558d)))
                                       <b_s55L9>_N)_R
                                    :: (b_s55L9 :~~: b_s55L9 :: *) ~R# (a_s55L8 :~~: b_s55L9 :: *))
                        })
                       (GHC.Types.[] @ (a_s55L8 :~~: b_s55L9))
                 }; } in
         go_up_i2ioZ 0# #)
      }
      }

-- RHS size: {terms: 27, types: 111, coercions: 0, joins: 0/0}
Data.Type.Equality.$fEnum:~~:_$cenumFromThenTo [InlPrag=NOUSERINLINE[0]]
  :: forall k2 k1 (a :: k1) (b :: k2).
     ((a :: k1) ~~ (b :: k2)) =>
     (a :~~: b) -> (a :~~: b) -> (a :~~: b) -> [a :~~: b]
[GblId,
 Arity=4,
 Str=<S(S),U(U)><S,1*H><S,1*H><S,1*H>m2,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k2_s55L6)
                 (@ k1_s55L7)
                 (@ (a_s55L8 :: k1_s55L7))
                 (@ (b_s55L9 :: k2_s55L6))
                 (w_s55La [Occ=Once]
                    :: (a_s55L8 :: k1_s55L7) ~~ (b_s55L9 :: k2_s55L6))
                 (w1_s55Lb [Occ=Once!] :: a_s55L8 :~~: b_s55L9)
                 (w2_s55Lc [Occ=Once!] :: a_s55L8 :~~: b_s55L9)
                 (w3_s55Ld [Occ=Once!] :: a_s55L8 :~~: b_s55L9) ->
                 case w1_s55Lb of w4_X55Lk { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 case w2_s55Lc of w5_X55Lm { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 case w3_s55Ld of w6_X55Lo { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 case Data.Type.Equality.$w$cenumFromThenTo1
                        @ k2_s55L6
                        @ k1_s55L7
                        @ a_s55L8
                        @ b_s55L9
                        w_s55La
                        w4_X55Lk
                        w5_X55Lm
                        w6_X55Lo
                 of
                 { (# ww1_s55LO [Occ=Once], ww2_s55LP [Occ=Once] #) ->
                 GHC.Types.: @ (a_s55L8 :~~: b_s55L9) ww1_s55LO ww2_s55LP
                 }
                 }
                 }
                 }}]
Data.Type.Equality.$fEnum:~~:_$cenumFromThenTo
  = \ (@ k2_s55L6)
      (@ k1_s55L7)
      (@ (a_s55L8 :: k1_s55L7))
      (@ (b_s55L9 :: k2_s55L6))
      (w_s55La :: (a_s55L8 :: k1_s55L7) ~~ (b_s55L9 :: k2_s55L6))
      (w1_s55Lb :: a_s55L8 :~~: b_s55L9)
      (w2_s55Lc :: a_s55L8 :~~: b_s55L9)
      (w3_s55Ld :: a_s55L8 :~~: b_s55L9) ->
      case w1_s55Lb of w4_X55Oy
      { HRefl ipv_s55OM [Dmd=<L,A>] ipv1_s55ON [Dmd=<L,A>] ->
      case w2_s55Lc of w5_X55OF
      { HRefl ipv2_s55OQ [Dmd=<L,A>] ipv3_s55OR [Dmd=<L,A>] ->
      case w3_s55Ld of w6_X55OM
      { HRefl ipv4_s55OU [Dmd=<L,A>] ipv5_s55OV [Dmd=<L,A>] ->
      case Data.Type.Equality.$w$cenumFromThenTo1
             @ k2_s55L6
             @ k1_s55L7
             @ a_s55L8
             @ b_s55L9
             w_s55La
             w4_X55Oy
             w5_X55OF
             w6_X55OM
      of
      { (# ww1_s55LO, ww2_s55LP #) ->
      GHC.Types.: @ (a_s55L8 :~~: b_s55L9) ww1_s55LO ww2_s55LP
      }
      }
      }
      }

-- RHS size: {terms: 22, types: 48, coercions: 0, joins: 0/0}
Data.Type.Equality.$fEnum:~~: [InlPrag=NOUSERINLINE CONLIKE]
  :: forall k2 k1 (a :: k1) (b :: k2).
     ((a :: k1) ~~ (b :: k2)) =>
     Enum (a :~~: b)
[GblId[DFunId],
 Arity=1,
 Str=<L,U(U)>m,
 Unf=DFun: \ (@ k2_a54NO)
             (@ k1_a54NN)
             (@ (a_a54KT :: k1_a54NN))
             (@ (b_a54KU :: k2_a54NO))
             (v_B1 :: (a_a54KT :: k1_a54NN) ~~ (b_a54KU :: k2_a54NO)) ->
       GHC.Enum.C:Enum TYPE: a_a54KT :~~: b_a54KU
                       Data.Type.Equality.$fEnum:~~:_$csucc
                         @ k2_a54NO @ k1_a54NN @ a_a54KT @ b_a54KU v_B1
                       Data.Type.Equality.$fEnum:~~:_$csucc
                         @ k2_a54NO @ k1_a54NN @ a_a54KT @ b_a54KU v_B1
                       Data.Type.Equality.$fEnum:~~:_$ctoEnum
                         @ k2_a54NO @ k1_a54NN @ a_a54KT @ b_a54KU v_B1
                       Data.Type.Equality.$fEnum:~~:_$cfromEnum
                         @ k2_a54NO @ k1_a54NN @ a_a54KT @ b_a54KU v_B1
                       Data.Type.Equality.$fEnum:~~:_$cenumFrom
                         @ k2_a54NO @ k1_a54NN @ a_a54KT @ b_a54KU v_B1
                       Data.Type.Equality.$fEnum:~~:_$cenumFromThen
                         @ k2_a54NO @ k1_a54NN @ a_a54KT @ b_a54KU v_B1
                       Data.Type.Equality.$fEnum:~~:_$cenumFromTo
                         @ k2_a54NO @ k1_a54NN @ a_a54KT @ b_a54KU v_B1
                       Data.Type.Equality.$fEnum:~~:_$cenumFromThenTo
                         @ k2_a54NO @ k1_a54NN @ a_a54KT @ b_a54KU v_B1]
Data.Type.Equality.$fEnum:~~:
  = \ (@ k2_a554V)
      (@ k1_a554W)
      (@ (a_a554X :: k1_a554W))
      (@ (b_a554Y :: k2_a554V))
      ($d~~_a554Z :: (a_a554X :: k1_a554W) ~~ (b_a554Y :: k2_a554V)) ->
      GHC.Enum.C:Enum
        @ (a_a554X :~~: b_a554Y)
        (Data.Type.Equality.$fEnum:~~:_$csucc
           @ k2_a554V @ k1_a554W @ a_a554X @ b_a554Y $d~~_a554Z)
        (Data.Type.Equality.$fEnum:~~:_$csucc
           @ k2_a554V @ k1_a554W @ a_a554X @ b_a554Y $d~~_a554Z)
        (Data.Type.Equality.$fEnum:~~:_$ctoEnum
           @ k2_a554V @ k1_a554W @ a_a554X @ b_a554Y $d~~_a554Z)
        (Data.Type.Equality.$fEnum:~~:_$cfromEnum
           @ k2_a554V @ k1_a554W @ a_a554X @ b_a554Y $d~~_a554Z)
        (Data.Type.Equality.$fEnum:~~:_$cenumFrom
           @ k2_a554V @ k1_a554W @ a_a554X @ b_a554Y $d~~_a554Z)
        (Data.Type.Equality.$fEnum:~~:_$cenumFromThen
           @ k2_a554V @ k1_a554W @ a_a554X @ b_a554Y $d~~_a554Z)
        (Data.Type.Equality.$fEnum:~~:_$cenumFromTo
           @ k2_a554V @ k1_a554W @ a_a554X @ b_a554Y $d~~_a554Z)
        (Data.Type.Equality.$fEnum:~~:_$cenumFromThenTo
           @ k2_a554V @ k1_a554W @ a_a554X @ b_a554Y $d~~_a554Z)

-- RHS size: {terms: 4, types: 9, coercions: 0, joins: 0/0}
Data.Type.Equality.$fTestEqualityk:~:1
  :: forall k (a :: k). Maybe (a :~: a)
[GblId,
 Caf=NoCafRefs,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Data.Type.Equality.$fTestEqualityk:~:1
  = \ (@ k_a554C) (@ (a_a554H :: k_a554C)) ->
      GHC.Base.Just
        @ (a_a554H :~: a_a554H)
        (Data.Type.Equality.$WRefl @ k_a554C @ a_a554H)

-- RHS size: {terms: 13, types: 33, coercions: 8, joins: 0/0}
Data.Type.Equality.$fTestEqualityk:~:_$ctestEquality
  :: forall k (a1 :: k) (a2 :: k) (b :: k).
     (a1 :~: a2) -> (a1 :~: b) -> Maybe (a2 :~: b)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U)><S,1*U(U)>m2,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a554C)
                 (@ (a_a554D :: k_a554C))
                 (@ (a1_a554H :: k_a554C))
                 (@ (b_a554I :: k_a554C))
                 (ds_d55aK [Occ=Once!] :: a_a554D :~: a1_a554H)
                 (ds1_d55aL [Occ=Once!] :: a_a554D :~: b_a554I) ->
                 case ds_d55aK of { Refl co_a554K ->
                 case ds1_d55aL of { Refl co1_a554L ->
                 (Data.Type.Equality.$fTestEqualityk:~:1 @ k_a554C @ a1_a554H)
                 `cast` ((Maybe
                            ((:~:) <k_a554C>_N <a1_a554H>_N (co_a554K ; Sym co1_a554L))_R)_R
                         :: (Maybe (a1_a554H :~: a1_a554H) :: *)
                            ~R# (Maybe (a1_a554H :~: b_a554I) :: *))
                 }
                 }}]
Data.Type.Equality.$fTestEqualityk:~:_$ctestEquality
  = \ (@ k_a554C)
      (@ (a_a554D :: k_a554C))
      (@ (a1_a554H :: k_a554C))
      (@ (b_a554I :: k_a554C))
      (ds_d55aK :: a_a554D :~: a1_a554H)
      (ds1_d55aL :: a_a554D :~: b_a554I) ->
      case ds_d55aK of { Refl co_a554K ->
      case ds1_d55aL of { Refl co1_a554L ->
      (Data.Type.Equality.$fTestEqualityk:~:1 @ k_a554C @ a1_a554H)
      `cast` ((Maybe
                 ((:~:) <k_a554C>_N <a1_a554H>_N (co_a554K ; Sym co1_a554L))_R)_R
              :: (Maybe (a1_a554H :~: a1_a554H) :: *)
                 ~R# (Maybe (a1_a554H :~: b_a554I) :: *))
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 11, joins: 0/0}
Data.Type.Equality.$fTestEqualityk:~: [InlPrag=INLINE (sat-args=0)]
  :: forall k (a :: k). TestEquality ((:~:) a)
[GblId[DFunId(nt)],
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U)><S,1*U(U)>m2,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=False,boring_ok=True)
         Tmpl= Data.Type.Equality.$fTestEqualityk:~:_$ctestEquality
               `cast` (forall (k :: <*>_N) (a :: <k>_N).
                       Sym (Data.Type.Equality.N:TestEquality[0] <k>_N <(:~:) a>_N)
                       :: (forall k (a :: k) (a :: k) (b :: k).
                           (a :~: a) -> (a :~: b) -> Maybe (a :~: b) :: *)
                          ~R# (forall k (a :: k). TestEquality ((:~:) a) :: Constraint))}]
Data.Type.Equality.$fTestEqualityk:~:
  = Data.Type.Equality.$fTestEqualityk:~:_$ctestEquality
    `cast` (forall (k :: <*>_N) (a :: <k>_N).
            Sym (Data.Type.Equality.N:TestEquality[0] <k>_N <(:~:) a>_N)
            :: (forall k (a :: k) (a :: k) (b :: k).
                (a :~: a) -> (a :~: b) -> Maybe (a :~: b) :: *)
               ~R# (forall k (a :: k). TestEquality ((:~:) a) :: Constraint))

-- RHS size: {terms: 14, types: 53, coercions: 8, joins: 0/0}
Data.Type.Equality.$fTestEqualityk:~~:_$ctestEquality
  :: forall k k1 (a1 :: k1) (a2 :: k) (b :: k).
     (a1 :~~: a2) -> (a1 :~~: b) -> Maybe (a2 :~: b)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(A,U)><S,1*U(A,U)>m2,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a554g)
                 (@ k1_a554h)
                 (@ (a_a554i :: k1_a554h))
                 (@ (a1_a554m :: k_a554g))
                 (@ (b_a554n :: k_a554g))
                 (ds_d55aq [Occ=Once!] :: a_a554i :~~: a1_a554m)
                 (ds1_d55ar [Occ=Once!] :: a_a554i :~~: b_a554n) ->
                 case ds_d55aq of { HRefl _ [Occ=Dead] co1_a554q ->
                 case ds1_d55ar of { HRefl _ [Occ=Dead] co3_a554s ->
                 (Data.Type.Equality.$fTestEqualityk:~:1 @ k_a554g @ a1_a554m)
                 `cast` ((Maybe
                            ((:~:) <k_a554g>_N <a1_a554m>_N (co1_a554q ; Sym co3_a554s))_R)_R
                         :: (Maybe (a1_a554m :~: a1_a554m) :: *)
                            ~R# (Maybe (a1_a554m :~: b_a554n) :: *))
                 }
                 }}]
Data.Type.Equality.$fTestEqualityk:~~:_$ctestEquality
  = \ (@ k_a554g)
      (@ k1_a554h)
      (@ (a_a554i :: k1_a554h))
      (@ (a1_a554m :: k_a554g))
      (@ (b_a554n :: k_a554g))
      (ds_d55aq :: a_a554i :~~: a1_a554m)
      (ds1_d55ar :: a_a554i :~~: b_a554n) ->
      case ds_d55aq of { HRefl co_a554p [Dmd=<L,A>] co1_a554q ->
      case ds1_d55ar of { HRefl co2_a554r [Dmd=<L,A>] co3_a554s ->
      (Data.Type.Equality.$fTestEqualityk:~:1 @ k_a554g @ a1_a554m)
      `cast` ((Maybe
                 ((:~:) <k_a554g>_N <a1_a554m>_N (co1_a554q ; Sym co3_a554s))_R)_R
              :: (Maybe (a1_a554m :~: a1_a554m) :: *)
                 ~R# (Maybe (a1_a554m :~: b_a554n) :: *))
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 15, joins: 0/0}
Data.Type.Equality.$fTestEqualityk:~~: [InlPrag=INLINE (sat-args=0)]
  :: forall k k1 (a :: k1). TestEquality ((:~~:) a)
[GblId[DFunId(nt)],
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(A,U)><S,1*U(A,U)>m2,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=False,boring_ok=True)
         Tmpl= Data.Type.Equality.$fTestEqualityk:~~:_$ctestEquality
               `cast` (forall (k :: <*>_N) (k1 :: <*>_N) (a :: <k1>_N).
                       Sym (Data.Type.Equality.N:TestEquality[0] <k>_N <(:~~:) a>_N)
                       :: (forall k k1 (a :: k1) (a :: k) (b :: k).
                           (a :~~: a) -> (a :~~: b) -> Maybe (a :~: b) :: *)
                          ~R# (forall k k1 (a :: k1).
                               TestEquality ((:~~:) a) :: Constraint))}]
Data.Type.Equality.$fTestEqualityk:~~:
  = Data.Type.Equality.$fTestEqualityk:~~:_$ctestEquality
    `cast` (forall (k :: <*>_N) (k1 :: <*>_N) (a :: <k1>_N).
            Sym (Data.Type.Equality.N:TestEquality[0] <k>_N <(:~~:) a>_N)
            :: (forall k k1 (a :: k1) (a :: k) (b :: k).
                (a :~~: a) -> (a :~~: b) -> Maybe (a :~: b) :: *)
               ~R# (forall k k1 (a :: k1). TestEquality ((:~~:) a) :: Constraint))

-- RHS size: {terms: 12, types: 30, coercions: 0, joins: 0/0}
Data.Type.Equality.$fEq:~:_$c==
  :: forall k (a :: k) (b :: k). (a :~: b) -> (a :~: b) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*H><S,1*H>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a553Y)
                 (@ (a_a553Z :: k_a553Y))
                 (@ (b_a5540 :: k_a553Y))
                 (ds_d55am [Occ=Once!] :: a_a553Z :~: b_a5540)
                 (ds1_d55an [Occ=Once!] :: a_a553Z :~: b_a5540) ->
                 case ds_d55am of { Refl _ [Occ=Dead] ->
                 case ds1_d55an of { Refl _ [Occ=Dead] -> GHC.Types.True }
                 }}]
Data.Type.Equality.$fEq:~:_$c==
  = \ (@ k_a553Y)
      (@ (a_a553Z :: k_a553Y))
      (@ (b_a5540 :: k_a553Y))
      (ds_d55am :: a_a553Z :~: b_a5540)
      (ds1_d55an :: a_a553Z :~: b_a5540) ->
      case ds_d55am of { Refl co_a5545 [Dmd=<L,A>] ->
      case ds1_d55an of { Refl co1_a5546 [Dmd=<L,A>] -> GHC.Types.True }
      }

-- RHS size: {terms: 12, types: 30, coercions: 0, joins: 0/0}
Data.Type.Equality.$fEq:~:_$c/= [InlPrag=INLINE (sat-args=2)]
  :: forall k (a :: k) (b :: k). (a :~: b) -> (a :~: b) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*H><S,1*H>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ k_a553Y)
                 (@ (a_a553Z :: k_a553Y))
                 (@ (b_a5540 :: k_a553Y))
                 (x_a22b [Occ=Once!] :: a_a553Z :~: b_a5540)
                 (y_a22c [Occ=Once!] :: a_a553Z :~: b_a5540) ->
                 case x_a22b of { Refl _ [Occ=Dead] ->
                 case y_a22c of { Refl _ [Occ=Dead] -> GHC.Types.False }
                 }}]
Data.Type.Equality.$fEq:~:_$c/=
  = \ (@ k_a553Y)
      (@ (a_a553Z :: k_a553Y))
      (@ (b_a5540 :: k_a553Y))
      (eta_B2 :: a_a553Z :~: b_a5540)
      (eta1_B1 :: a_a553Z :~: b_a5540) ->
      case eta_B2 of { Refl co_a5545 [Dmd=<L,A>] ->
      case eta1_B1 of { Refl co1_a5546 [Dmd=<L,A>] -> GHC.Types.False }
      }

-- RHS size: {terms: 6, types: 14, coercions: 0, joins: 0/0}
Data.Type.Equality.$fEq:~: [InlPrag=NOUSERINLINE CONLIKE]
  :: forall k (a :: k) (b :: k). Eq (a :~: b)
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ (@ k_a54Tx)
             (@ (a_a54LF :: k_a54Tx))
             (@ (b_a54LG :: k_a54Tx)) ->
       GHC.Classes.C:Eq TYPE: a_a54LF :~: b_a54LG
                        Data.Type.Equality.$fEq:~:_$c== @ k_a54Tx @ a_a54LF @ b_a54LG
                        Data.Type.Equality.$fEq:~:_$c/= @ k_a54Tx @ a_a54LF @ b_a54LG]
Data.Type.Equality.$fEq:~:
  = \ (@ k_a553Y)
      (@ (a_a553Z :: k_a553Y))
      (@ (b_a5540 :: k_a553Y)) ->
      GHC.Classes.C:Eq
        @ (a_a553Z :~: b_a5540)
        (Data.Type.Equality.$fEq:~:_$c== @ k_a553Y @ a_a553Z @ b_a5540)
        (Data.Type.Equality.$fEq:~:_$c/= @ k_a553Y @ a_a553Z @ b_a5540)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$fRead:~:3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Data.Type.Equality.$fRead:~:3 = "Refl"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$fRead:~:2 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Data.Type.Equality.$fRead:~:2
  = unpackCString# Data.Type.Equality.$fRead:~:3

-- RHS size: {terms: 12, types: 20, coercions: 0, joins: 0/0}
Data.Type.Equality.$fShow:~:_$cshowsPrec
  :: forall k (a :: k) (b :: k). Int -> (a :~: b) -> ShowS
[GblId,
 Arity=3,
 Str=<L,A><S,1*H><L,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a553D)
                 (@ (a_a553E :: k_a553D))
                 (@ (b_a553F :: k_a553D))
                 _ [Occ=Dead]
                 (ds1_d55ak [Occ=Once!] :: a_a553E :~: b_a553F)
                 (eta_B1 [Occ=Once] :: String) ->
                 case ds1_d55ak of { Refl _ [Occ=Dead] ->
                 augment
                   @ Char
                   (\ (@ b1_i1Jmb)
                      (c_i1Jmc [Occ=Once, OS=OneShot] :: Char -> b1_i1Jmb -> b1_i1Jmb)
                      (n_i1Jmd [Occ=Once, OS=OneShot] :: b1_i1Jmb) ->
                      foldr
                        @ Char @ b1_i1Jmb c_i1Jmc n_i1Jmd Data.Type.Equality.$fRead:~:2)
                   eta_B1
                 }}]
Data.Type.Equality.$fShow:~:_$cshowsPrec
  = \ (@ k_a553D)
      (@ (a_a553E :: k_a553D))
      (@ (b_a553F :: k_a553D))
      _ [Occ=Dead]
      (ds1_d55ak :: a_a553E :~: b_a553F)
      (eta_B1 :: String) ->
      case ds1_d55ak of { Refl co_a553K [Dmd=<L,A>] ->
      ++ @ Char Data.Type.Equality.$fRead:~:2 eta_B1
      }

-- RHS size: {terms: 8, types: 17, coercions: 0, joins: 0/0}
Data.Type.Equality.$fShow:~:_$cshow
  :: forall k (a :: k) (b :: k). (a :~: b) -> String
[GblId,
 Arity=1,
 Str=<S,1*H>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a553D)
                 (@ (a_a553E :: k_a553D))
                 (@ (b_a553F :: k_a553D))
                 (x_i1Jj2 [Occ=Once!] :: a_a553E :~: b_a553F) ->
                 case x_i1Jj2 of { Refl _ [Occ=Dead] ->
                 Data.Type.Equality.$fRead:~:2
                 }}]
Data.Type.Equality.$fShow:~:_$cshow
  = \ (@ k_a553D)
      (@ (a_a553E :: k_a553D))
      (@ (b_a553F :: k_a553D))
      (x_i1Jj2 :: a_a553E :~: b_a553F) ->
      case x_i1Jj2 of { Refl co_a553K [Dmd=<L,A>] ->
      Data.Type.Equality.$fRead:~:2
      }

-- RHS size: {terms: 11, types: 19, coercions: 0, joins: 0/0}
Data.Type.Equality.$fShow:~:1
  :: forall k (a :: k) (b :: k). (a :~: b) -> ShowS
[GblId,
 Arity=2,
 Str=<S,1*H><L,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a553D)
                 (@ (a_a553E :: k_a553D))
                 (@ (b_a553F :: k_a553D))
                 (ds_d55ak [Occ=Once!] :: a_a553E :~: b_a553F)
                 (eta_B1 [Occ=Once] :: String) ->
                 case ds_d55ak of { Refl _ [Occ=Dead] ->
                 augment
                   @ Char
                   (\ (@ b1_i1Jmb)
                      (c_i1Jmc [Occ=Once, OS=OneShot] :: Char -> b1_i1Jmb -> b1_i1Jmb)
                      (n_i1Jmd [Occ=Once, OS=OneShot] :: b1_i1Jmb) ->
                      foldr
                        @ Char @ b1_i1Jmb c_i1Jmc n_i1Jmd Data.Type.Equality.$fRead:~:2)
                   eta_B1
                 }}]
Data.Type.Equality.$fShow:~:1
  = \ (@ k_a553D)
      (@ (a_a553E :: k_a553D))
      (@ (b_a553F :: k_a553D))
      (ds_d55ak :: a_a553E :~: b_a553F)
      (eta_B1 :: String) ->
      case ds_d55ak of { Refl co_a553K [Dmd=<L,A>] ->
      ++ @ Char Data.Type.Equality.$fRead:~:2 eta_B1
      }

-- RHS size: {terms: 9, types: 17, coercions: 0, joins: 0/0}
Data.Type.Equality.$fShow:~:_$cshowList
  :: forall k (a :: k) (b :: k). [a :~: b] -> ShowS
[GblId,
 Arity=2,
 Str=<S,1*U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a553D)
                 (@ (a_a553E :: k_a553D))
                 (@ (b_a553F :: k_a553D))
                 (ls_i1Mix [Occ=Once] :: [a_a553E :~: b_a553F])
                 (s_i1Miy [Occ=Once] :: String) ->
                 showList__
                   @ (a_a553E :~: b_a553F)
                   (Data.Type.Equality.$fShow:~:1 @ k_a553D @ a_a553E @ b_a553F)
                   ls_i1Mix
                   s_i1Miy}]
Data.Type.Equality.$fShow:~:_$cshowList
  = \ (@ k_a553D)
      (@ (a_a553E :: k_a553D))
      (@ (b_a553F :: k_a553D))
      (ls_i1Mix :: [a_a553E :~: b_a553F])
      (s_i1Miy :: String) ->
      showList__
        @ (a_a553E :~: b_a553F)
        (Data.Type.Equality.$fShow:~:1 @ k_a553D @ a_a553E @ b_a553F)
        ls_i1Mix
        s_i1Miy

-- RHS size: {terms: 7, types: 17, coercions: 0, joins: 0/0}
Data.Type.Equality.$fShow:~: [InlPrag=NOUSERINLINE CONLIKE]
  :: forall k (a :: k) (b :: k). Show (a :~: b)
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ (@ k_a54Ti)
             (@ (a_a54LD :: k_a54Ti))
             (@ (b_a54LE :: k_a54Ti)) ->
       GHC.Show.C:Show TYPE: a_a54LD :~: b_a54LE
                       Data.Type.Equality.$fShow:~:_$cshowsPrec
                         @ k_a54Ti @ a_a54LD @ b_a54LE
                       Data.Type.Equality.$fShow:~:_$cshow @ k_a54Ti @ a_a54LD @ b_a54LE
                       Data.Type.Equality.$fShow:~:_$cshowList
                         @ k_a54Ti @ a_a54LD @ b_a54LE]
Data.Type.Equality.$fShow:~:
  = \ (@ k_a553D)
      (@ (a_a553E :: k_a553D))
      (@ (b_a553F :: k_a553D)) ->
      GHC.Show.C:Show
        @ (a_a553E :~: b_a553F)
        (Data.Type.Equality.$fShow:~:_$cshowsPrec
           @ k_a553D @ a_a553E @ b_a553F)
        (Data.Type.Equality.$fShow:~:_$cshow @ k_a553D @ a_a553E @ b_a553F)
        (Data.Type.Equality.$fShow:~:_$cshowList
           @ k_a553D @ a_a553E @ b_a553F)

-- RHS size: {terms: 12, types: 30, coercions: 0, joins: 0/0}
Data.Type.Equality.$fOrd:~:_$c<
  :: forall k (a :: k) (b :: k). (a :~: b) -> (a :~: b) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*H><S,1*H>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a552E)
                 (@ (a_a552F :: k_a552E))
                 (@ (b_a552G :: k_a552E))
                 (a1_a54Uv [Occ=Once!] :: a_a552F :~: b_a552G)
                 (b1_a54Uw [Occ=Once!] :: a_a552F :~: b_a552G) ->
                 case a1_a54Uv of { Refl _ [Occ=Dead] ->
                 case b1_a54Uw of { Refl _ [Occ=Dead] -> GHC.Types.False }
                 }}]
Data.Type.Equality.$fOrd:~:_$c<
  = \ (@ k_a552E)
      (@ (a_a552F :: k_a552E))
      (@ (b_a552G :: k_a552E))
      (a1_a54Uv :: a_a552F :~: b_a552G)
      (b1_a54Uw :: a_a552F :~: b_a552G) ->
      case a1_a54Uv of { Refl co_a5533 [Dmd=<L,A>] ->
      case b1_a54Uw of { Refl co1_a5536 [Dmd=<L,A>] -> GHC.Types.False }
      }

-- RHS size: {terms: 12, types: 30, coercions: 0, joins: 0/0}
Data.Type.Equality.$fOrd:~:_$ccompare
  :: forall k (a :: k) (b :: k). (a :~: b) -> (a :~: b) -> Ordering
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*H><S,1*H>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a552E)
                 (@ (a_a552F :: k_a552E))
                 (@ (b_a552G :: k_a552E))
                 (a1_a54Ut [Occ=Once!] :: a_a552F :~: b_a552G)
                 (b1_a54Uu [Occ=Once!] :: a_a552F :~: b_a552G) ->
                 case a1_a54Ut of { Refl _ [Occ=Dead] ->
                 case b1_a54Uu of { Refl _ [Occ=Dead] -> GHC.Types.EQ }
                 }}]
Data.Type.Equality.$fOrd:~:_$ccompare
  = \ (@ k_a552E)
      (@ (a_a552F :: k_a552E))
      (@ (b_a552G :: k_a552E))
      (a1_a54Ut :: a_a552F :~: b_a552G)
      (b1_a54Uu :: a_a552F :~: b_a552G) ->
      case a1_a54Ut of { Refl co_a552R [Dmd=<L,A>] ->
      case b1_a54Uu of { Refl co1_a552U [Dmd=<L,A>] -> GHC.Types.EQ }
      }

-- RHS size: {terms: 12, types: 30, coercions: 0, joins: 0/0}
Data.Type.Equality.$fOrd:~:_$c<=
  :: forall k (a :: k) (b :: k). (a :~: b) -> (a :~: b) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*H><S,1*H>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a552E)
                 (@ (a_a552F :: k_a552E))
                 (@ (b_a552G :: k_a552E))
                 (a1_a54Ux [Occ=Once!] :: a_a552F :~: b_a552G)
                 (b1_a54Uy [Occ=Once!] :: a_a552F :~: b_a552G) ->
                 case b1_a54Uy of { Refl _ [Occ=Dead] ->
                 case a1_a54Ux of { Refl _ [Occ=Dead] -> GHC.Types.True }
                 }}]
Data.Type.Equality.$fOrd:~:_$c<=
  = \ (@ k_a552E)
      (@ (a_a552F :: k_a552E))
      (@ (b_a552G :: k_a552E))
      (a1_a54Ux :: a_a552F :~: b_a552G)
      (b1_a54Uy :: a_a552F :~: b_a552G) ->
      case b1_a54Uy of { Refl co_a5533 [Dmd=<L,A>] ->
      case a1_a54Ux of { Refl co1_a5536 [Dmd=<L,A>] -> GHC.Types.True }
      }

-- RHS size: {terms: 9, types: 21, coercions: 0, joins: 0/0}
Data.Type.Equality.$fOrd:~:_$cmax
  :: forall k (a :: k) (b :: k). (a :~: b) -> (a :~: b) -> a :~: b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*H><S,1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a552E)
                 (@ (a_a552F :: k_a552E))
                 (@ (b_a552G :: k_a552E))
                 (x_a55d [Occ=Once!] :: a_a552F :~: b_a552G)
                 (y_a55e [Occ=Once!] :: a_a552F :~: b_a552G) ->
                 case y_a55e of wild_X2f { Refl _ [Occ=Dead] ->
                 case x_a55d of { Refl _ [Occ=Dead] -> wild_X2f }
                 }}]
Data.Type.Equality.$fOrd:~:_$cmax
  = \ (@ k_a552E)
      (@ (a_a552F :: k_a552E))
      (@ (b_a552G :: k_a552E))
      (x_a55d :: a_a552F :~: b_a552G)
      (y_a55e :: a_a552F :~: b_a552G) ->
      case x_a55d of { Refl co_a5536 [Dmd=<L,A>] -> y_a55e }

-- RHS size: {terms: 12, types: 30, coercions: 0, joins: 0/0}
Data.Type.Equality.$fOrd:~:_$c>
  :: forall k (a :: k) (b :: k). (a :~: b) -> (a :~: b) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*H><S,1*H>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a552E)
                 (@ (a_a552F :: k_a552E))
                 (@ (b_a552G :: k_a552E))
                 (a1_a54Uz [Occ=Once!] :: a_a552F :~: b_a552G)
                 (b1_a54UA [Occ=Once!] :: a_a552F :~: b_a552G) ->
                 case b1_a54UA of { Refl _ [Occ=Dead] ->
                 case a1_a54Uz of { Refl _ [Occ=Dead] -> GHC.Types.False }
                 }}]
Data.Type.Equality.$fOrd:~:_$c>
  = \ (@ k_a552E)
      (@ (a_a552F :: k_a552E))
      (@ (b_a552G :: k_a552E))
      (a1_a54Uz :: a_a552F :~: b_a552G)
      (b1_a54UA :: a_a552F :~: b_a552G) ->
      case b1_a54UA of { Refl co_a5533 [Dmd=<L,A>] ->
      case a1_a54Uz of { Refl co1_a5536 [Dmd=<L,A>] -> GHC.Types.False }
      }

-- RHS size: {terms: 9, types: 21, coercions: 0, joins: 0/0}
Data.Type.Equality.$fOrd:~:_$cmin
  :: forall k (a :: k) (b :: k). (a :~: b) -> (a :~: b) -> a :~: b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U)><S,1*H>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a552E)
                 (@ (a_a552F :: k_a552E))
                 (@ (b_a552G :: k_a552E))
                 (x_a55m [Occ=Once] :: a_a552F :~: b_a552G)
                 (y_a55n [Occ=Once!] :: a_a552F :~: b_a552G) ->
                 case y_a55n of { Refl _ [Occ=Dead] -> x_a55m }}]
Data.Type.Equality.$fOrd:~:_$cmin
  = \ (@ k_a552E)
      (@ (a_a552F :: k_a552E))
      (@ (b_a552G :: k_a552E))
      (x_a55m :: a_a552F :~: b_a552G)
      (y_a55n :: a_a552F :~: b_a552G) ->
      case y_a55n of { Refl co_a5533 [Dmd=<L,A>] -> x_a55m }

-- RHS size: {terms: 12, types: 32, coercions: 0, joins: 0/0}
Data.Type.Equality.$fOrd:~: [InlPrag=NOUSERINLINE CONLIKE]
  :: forall k (a :: k) (b :: k). Ord (a :~: b)
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ (@ k_a54T3)
             (@ (a_a54LB :: k_a54T3))
             (@ (b_a54LC :: k_a54T3)) ->
       GHC.Classes.C:Ord TYPE: a_a54LB :~: b_a54LC
                         Data.Type.Equality.$fEq:~: @ k_a54T3 @ a_a54LB @ b_a54LC
                         Data.Type.Equality.$fOrd:~:_$ccompare @ k_a54T3 @ a_a54LB @ b_a54LC
                         Data.Type.Equality.$fOrd:~:_$c< @ k_a54T3 @ a_a54LB @ b_a54LC
                         Data.Type.Equality.$fOrd:~:_$c<= @ k_a54T3 @ a_a54LB @ b_a54LC
                         Data.Type.Equality.$fOrd:~:_$c> @ k_a54T3 @ a_a54LB @ b_a54LC
                         Data.Type.Equality.$fEq:~:_$c== @ k_a54T3 @ a_a54LB @ b_a54LC
                         Data.Type.Equality.$fOrd:~:_$cmax @ k_a54T3 @ a_a54LB @ b_a54LC
                         Data.Type.Equality.$fOrd:~:_$cmin @ k_a54T3 @ a_a54LB @ b_a54LC]
Data.Type.Equality.$fOrd:~:
  = \ (@ k_a552E)
      (@ (a_a552F :: k_a552E))
      (@ (b_a552G :: k_a552E)) ->
      GHC.Classes.C:Ord
        @ (a_a552F :~: b_a552G)
        (Data.Type.Equality.$fEq:~: @ k_a552E @ a_a552F @ b_a552G)
        (Data.Type.Equality.$fOrd:~:_$ccompare
           @ k_a552E @ a_a552F @ b_a552G)
        (Data.Type.Equality.$fOrd:~:_$c< @ k_a552E @ a_a552F @ b_a552G)
        (Data.Type.Equality.$fOrd:~:_$c<= @ k_a552E @ a_a552F @ b_a552G)
        (Data.Type.Equality.$fOrd:~:_$c> @ k_a552E @ a_a552F @ b_a552G)
        (Data.Type.Equality.$fEq:~:_$c== @ k_a552E @ a_a552F @ b_a552G)
        (Data.Type.Equality.$fOrd:~:_$cmax @ k_a552E @ a_a552F @ b_a552G)
        (Data.Type.Equality.$fOrd:~:_$cmin @ k_a552E @ a_a552F @ b_a552G)

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$fRead:~:_lexeme :: Text.Read.Lex.Lexeme
[GblId,
 Str=m4,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Data.Type.Equality.$fRead:~:_lexeme
  = Text.Read.Lex.Ident Data.Type.Equality.$fRead:~:2

-- RHS size: {terms: 14, types: 25, coercions: 0, joins: 0/0}
Data.Type.Equality.$fRead:~:1
  :: forall k (a :: k).
     Text.ParserCombinators.ReadPrec.Prec
     -> forall b.
        ((a :~: a) -> Text.ParserCombinators.ReadP.P b)
        -> Text.ParserCombinators.ReadP.P b
[GblId,
 Arity=2,
 Str=<L,A><L,1*C1(U)>m2,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a5522)
                 (@ (a_a5523 :: k_a5522))
                 _ [Occ=Dead]
                 (@ b_X3nkn)
                 (eta_X42 [Occ=Once!]
                    :: (a_a5523 :~: a_a5523)
                       -> Text.ParserCombinators.ReadP.P b_X3nkn) ->
                 case Text.Read.Lex.$wexpect
                        Data.Type.Equality.$fRead:~:_lexeme
                        @ b_X3nkn
                        (\ _ [Occ=Dead, OS=OneShot] ->
                           eta_X42 (Data.Type.Equality.$WRefl @ k_a5522 @ a_a5523))
                 of
                 { (# ww1_s3xlt [Occ=Once] #) ->
                 Text.ParserCombinators.ReadP.Look @ b_X3nkn ww1_s3xlt
                 }}]
Data.Type.Equality.$fRead:~:1
  = \ (@ k_a5522)
      (@ (a_a5523 :: k_a5522))
      _ [Occ=Dead]
      (@ b_X3nkn)
      (eta_X42
         :: (a_a5523 :~: a_a5523)
            -> Text.ParserCombinators.ReadP.P b_X3nkn) ->
      case Text.Read.Lex.$wexpect
             Data.Type.Equality.$fRead:~:_lexeme
             @ b_X3nkn
             (\ _ [Occ=Dead, OS=OneShot] ->
                eta_X42 (Data.Type.Equality.$WRefl @ k_a5522 @ a_a5523))
      of
      { (# ww1_s3xlt #) ->
      Text.ParserCombinators.ReadP.Look @ b_X3nkn ww1_s3xlt
      }

-- RHS size: {terms: 15, types: 33, coercions: 27, joins: 0/0}
Data.Type.Equality.$fRead:~:4
  :: forall k (a :: k) (b :: k).
     ((a :: k) ~ (b :: k)) =>
     Text.ParserCombinators.ReadPrec.Prec
     -> forall b1.
        ((a :~: b) -> Text.ParserCombinators.ReadP.P b1)
        -> Text.ParserCombinators.ReadP.P b1
[GblId,
 Arity=3,
 Str=<S(S),1*U(1*U)><L,U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a5522)
                 (@ (a_a5523 :: k_a5522))
                 (@ (b_a5524 :: k_a5522))
                 ($d~_a5525 [Occ=Once]
                    :: (a_a5523 :: k_a5522) ~ (b_a5524 :: k_a5522))
                 (eta_B2 [Occ=Once] :: Text.ParserCombinators.ReadPrec.Prec)
                 (@ b1_a3ngn)
                 (eta1_B1 [Occ=Once]
                    :: (a_a5523 :~: b_a5524)
                       -> Text.ParserCombinators.ReadP.P b1_a3ngn) ->
                 case GHC.Types.heq_sel
                        @ k_a5522
                        @ k_a5522
                        @ a_a5523
                        @ b_a5524
                        ($d~_a5525
                         `cast` (Data.Type.Equality.N:~[0]
                                     <k_a5522>_N <a_a5523>_N <b_a5524>_N
                                 :: ((a_a5523 :: k_a5522) ~ (b_a5524 :: k_a5522) :: Constraint)
                                    ~R# ((a_a5523 :: k_a5522)
                                         ~~ (b_a5524 :: k_a5522) :: Constraint)))
                 of co_a557W
                 { __DEFAULT ->
                 GHC.Read.list3
                   @ (a_a5523 :~: a_a5523)
                   ((Data.Type.Equality.$fRead:~:1 @ k_a5522 @ a_a5523)
                    `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <a_a5523
                                            :~: a_a5523>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                        <a_a5523 :~: a_a5523>_R)
                            :: (Text.ParserCombinators.ReadPrec.Prec
                                -> forall b.
                                   ((a_a5523 :~: a_a5523) -> Text.ParserCombinators.ReadP.P b)
                                   -> Text.ParserCombinators.ReadP.P b :: *)
                               ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                                      (a_a5523 :~: a_a5523) :: *)))
                   eta_B2
                   @ b1_a3ngn
                   (eta1_B1
                    `cast` (((:~:) <k_a5522>_N <a_a5523>_N (Sym co_a557W))_R
                            ->_R <Text.ParserCombinators.ReadP.P b1_a3ngn>_R
                            :: ((a_a5523 :~: b_a5524)
                                -> Text.ParserCombinators.ReadP.P b1_a3ngn :: *)
                               ~R# ((a_a5523 :~: a_a5523)
                                    -> Text.ParserCombinators.ReadP.P b1_a3ngn :: *)))
                 }}]
Data.Type.Equality.$fRead:~:4
  = \ (@ k_a5522)
      (@ (a_a5523 :: k_a5522))
      (@ (b_a5524 :: k_a5522))
      ($d~_a5525 :: (a_a5523 :: k_a5522) ~ (b_a5524 :: k_a5522))
      (eta_B2 :: Text.ParserCombinators.ReadPrec.Prec)
      (@ b1_a3ngn)
      (eta1_B1
         :: (a_a5523 :~: b_a5524)
            -> Text.ParserCombinators.ReadP.P b1_a3ngn) ->
      case GHC.Types.heq_sel
             @ k_a5522
             @ k_a5522
             @ a_a5523
             @ b_a5524
             ($d~_a5525
              `cast` (Data.Type.Equality.N:~[0]
                          <k_a5522>_N <a_a5523>_N <b_a5524>_N
                      :: ((a_a5523 :: k_a5522) ~ (b_a5524 :: k_a5522) :: Constraint)
                         ~R# ((a_a5523 :: k_a5522) ~~ (b_a5524 :: k_a5522) :: Constraint)))
      of co_a557W
      { __DEFAULT ->
      GHC.Read.list3
        @ (a_a5523 :~: a_a5523)
        ((Data.Type.Equality.$fRead:~:1 @ k_a5522 @ a_a5523)
         `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                  ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                <a_a5523
                                 :~: a_a5523>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                             <a_a5523 :~: a_a5523>_R)
                 :: (Text.ParserCombinators.ReadPrec.Prec
                     -> forall b.
                        ((a_a5523 :~: a_a5523) -> Text.ParserCombinators.ReadP.P b)
                        -> Text.ParserCombinators.ReadP.P b :: *)
                    ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                           (a_a5523 :~: a_a5523) :: *)))
        eta_B2
        @ b1_a3ngn
        (eta1_B1
         `cast` (((:~:) <k_a5522>_N <a_a5523>_N (Sym co_a557W))_R
                 ->_R <Text.ParserCombinators.ReadP.P b1_a3ngn>_R
                 :: ((a_a5523 :~: b_a5524)
                     -> Text.ParserCombinators.ReadP.P b1_a3ngn :: *)
                    ~R# ((a_a5523 :~: a_a5523)
                         -> Text.ParserCombinators.ReadP.P b1_a3ngn :: *)))
      }

-- RHS size: {terms: 18, types: 45, coercions: 33, joins: 0/0}
Data.Type.Equality.$fRead:~:_$creadsPrec
  :: forall k (a :: k) (b :: k).
     ((a :: k) ~ (b :: k)) =>
     Int -> ReadS (a :~: b)
[GblId,
 Arity=2,
 Str=<S(S),U(U)><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 120 60}]
Data.Type.Equality.$fRead:~:_$creadsPrec
  = \ (@ k_X555C)
      (@ (a_X555E :: k_X555C))
      (@ (b_X555G :: k_X555C))
      ($d~_X555I :: (a_X555E :: k_X555C) ~ (b_X555G :: k_X555C))
      (eta_B1 :: Int) ->
      case GHC.Types.heq_sel
             @ k_X555C
             @ k_X555C
             @ a_X555E
             @ b_X555G
             ($d~_X555I
              `cast` (Data.Type.Equality.N:~[0]
                          <k_X555C>_N <a_X555E>_N <b_X555G>_N
                      :: ((a_X555E :: k_X555C) ~ (b_X555G :: k_X555C) :: Constraint)
                         ~R# ((a_X555E :: k_X555C) ~~ (b_X555G :: k_X555C) :: Constraint)))
      of co_a557W
      { __DEFAULT ->
      Text.ParserCombinators.ReadP.run
        @ (a_X555E :~: b_X555G)
        (case GHC.Types.heq_sel
                @ k_X555C
                @ k_X555C
                @ b_X555G
                @ b_X555G
                ($d~_X555I
                 `cast` (Data.Type.Equality.N:~[0] <k_X555C>_N co_a557W <b_X555G>_N
                         :: ((a_X555E :: k_X555C) ~ (b_X555G :: k_X555C) :: Constraint)
                            ~R# ((b_X555G :: k_X555C) ~~ (b_X555G :: k_X555C) :: Constraint)))
         of co1_X55c5 [Dmd=<L,A>]
         { __DEFAULT ->
         GHC.Read.list3
           @ (b_X555G :~: b_X555G)
           ((Data.Type.Equality.$fRead:~:1 @ k_X555C @ b_X555G)
            `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                     ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                   <b_X555G
                                    :~: b_X555G>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                <b_X555G :~: b_X555G>_R)
                    :: (Text.ParserCombinators.ReadPrec.Prec
                        -> forall b.
                           ((b_X555G :~: b_X555G) -> Text.ParserCombinators.ReadP.P b)
                           -> Text.ParserCombinators.ReadP.P b :: *)
                       ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                              (b_X555G :~: b_X555G) :: *)))
           eta_B1
           @ (a_X555E :~: b_X555G)
           ((Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
               @ (a_X555E :~: b_X555G))
            `cast` (((:~:) <k_X555C>_N co_a557W <b_X555G>_N)_R
                    ->_R <Text.ParserCombinators.ReadP.P (a_X555E :~: b_X555G)>_R
                    :: ((a_X555E :~: b_X555G)
                        -> Text.ParserCombinators.ReadP.P (a_X555E :~: b_X555G) :: *)
                       ~R# ((b_X555G :~: b_X555G)
                            -> Text.ParserCombinators.ReadP.P (a_X555E :~: b_X555G) :: *)))
         })
      }

-- RHS size: {terms: 20, types: 46, coercions: 38, joins: 0/0}
Data.Type.Equality.$fRead:~:_$creadListPrec
  :: forall k (a :: k) (b :: k).
     ((a :: k) ~ (b :: k)) =>
     Text.ParserCombinators.ReadPrec.ReadPrec [a :~: b]
[GblId,
 Arity=1,
 Str=<S(S),U(U)>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 140 0}]
Data.Type.Equality.$fRead:~:_$creadListPrec
  = \ (@ k_X555D)
      (@ (a_X555F :: k_X555D))
      (@ (b_X555H :: k_X555D))
      ($d~_X555J :: (a_X555F :: k_X555D) ~ (b_X555H :: k_X555D)) ->
      case GHC.Types.heq_sel
             @ k_X555D
             @ k_X555D
             @ a_X555F
             @ b_X555H
             ($d~_X555J
              `cast` (Data.Type.Equality.N:~[0]
                          <k_X555D>_N <a_X555F>_N <b_X555H>_N
                      :: ((a_X555F :: k_X555D) ~ (b_X555H :: k_X555D) :: Constraint)
                         ~R# ((a_X555F :: k_X555D) ~~ (b_X555H :: k_X555D) :: Constraint)))
      of co_a557W
      { __DEFAULT ->
      list
        @ (a_X555F :~: b_X555H)
        ((\ (eta_B2 [OS=OneShot] :: Text.ParserCombinators.ReadPrec.Prec)
            (@ b1_a3ngn)
            (eta1_B1
               :: (b_X555H :~: b_X555H)
                  -> Text.ParserCombinators.ReadP.P b1_a3ngn) ->
            case GHC.Types.heq_sel
                   @ k_X555D
                   @ k_X555D
                   @ b_X555H
                   @ b_X555H
                   ($d~_X555J
                    `cast` (Data.Type.Equality.N:~[0] <k_X555D>_N co_a557W <b_X555H>_N
                            :: ((a_X555F :: k_X555D) ~ (b_X555H :: k_X555D) :: Constraint)
                               ~R# ((b_X555H :: k_X555D) ~~ (b_X555H :: k_X555D) :: Constraint)))
            of co1_X55c5 [Dmd=<L,A>]
            { __DEFAULT ->
            GHC.Read.list3
              @ (b_X555H :~: b_X555H)
              ((Data.Type.Equality.$fRead:~:1 @ k_X555D @ b_X555H)
               `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <b_X555H
                                       :~: b_X555H>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                   <b_X555H :~: b_X555H>_R)
                       :: (Text.ParserCombinators.ReadPrec.Prec
                           -> forall b.
                              ((b_X555H :~: b_X555H) -> Text.ParserCombinators.ReadP.P b)
                              -> Text.ParserCombinators.ReadP.P b :: *)
                          ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                                 (b_X555H :~: b_X555H) :: *)))
              eta_B2
              @ b1_a3ngn
              eta1_B1
            })
         `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                  ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                <b_X555H
                                 :~: b_X555H>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                             ((:~:)
                                                                <k_X555D>_N co_a557W <b_X555H>_N)_R)
                 :: (Text.ParserCombinators.ReadPrec.Prec
                     -> forall b.
                        ((b_X555H :~: b_X555H) -> Text.ParserCombinators.ReadP.P b)
                        -> Text.ParserCombinators.ReadP.P b :: *)
                    ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                           (a_X555F :~: b_X555H) :: *)))
      }

-- RHS size: {terms: 23, types: 61, coercions: 51, joins: 0/0}
Data.Type.Equality.$fRead:~:_$creadList
  :: forall k (a :: k) (b :: k).
     ((a :: k) ~ (b :: k)) =>
     ReadS [a :~: b]
[GblId,
 Arity=1,
 Str=<S(S),U(U)>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 180 60}]
Data.Type.Equality.$fRead:~:_$creadList
  = \ (@ k_X555E)
      (@ (a_X555G :: k_X555E))
      (@ (b_X555I :: k_X555E))
      ($d~_X555K :: (a_X555G :: k_X555E) ~ (b_X555I :: k_X555E)) ->
      case GHC.Types.heq_sel
             @ k_X555E
             @ k_X555E
             @ a_X555G
             @ b_X555I
             ($d~_X555K
              `cast` (Data.Type.Equality.N:~[0]
                          <k_X555E>_N <a_X555G>_N <b_X555I>_N
                      :: ((a_X555G :: k_X555E) ~ (b_X555I :: k_X555E) :: Constraint)
                         ~R# ((a_X555G :: k_X555E) ~~ (b_X555I :: k_X555E) :: Constraint)))
      of co_a557W
      { __DEFAULT ->
      Text.ParserCombinators.ReadP.run
        @ [a_X555G :~: b_X555I]
        (case GHC.Types.heq_sel
                @ k_X555E
                @ k_X555E
                @ b_X555I
                @ b_X555I
                ($d~_X555K
                 `cast` (Data.Type.Equality.N:~[0] <k_X555E>_N co_a557W <b_X555I>_N
                         :: ((a_X555G :: k_X555E) ~ (b_X555I :: k_X555E) :: Constraint)
                            ~R# ((b_X555I :: k_X555E) ~~ (b_X555I :: k_X555E) :: Constraint)))
         of co1_X55aV [Dmd=<L,A>]
         { __DEFAULT ->
         ((((list
               @ (b_X555I :~: b_X555I)
               ((\ (eta_B2 [OS=OneShot] :: Text.ParserCombinators.ReadPrec.Prec)
                   (@ b1_a3ngn)
                   (eta1_B1
                      :: (b_X555I :~: b_X555I)
                         -> Text.ParserCombinators.ReadP.P b1_a3ngn) ->
                   GHC.Read.list3
                     @ (b_X555I :~: b_X555I)
                     ((Data.Type.Equality.$fRead:~:1 @ k_X555E @ b_X555I)
                      `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                               ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                             <b_X555I
                                              :~: b_X555I>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                          <b_X555I :~: b_X555I>_R)
                              :: (Text.ParserCombinators.ReadPrec.Prec
                                  -> forall b.
                                     ((b_X555I :~: b_X555I) -> Text.ParserCombinators.ReadP.P b)
                                     -> Text.ParserCombinators.ReadP.P b :: *)
                                 ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                                        (b_X555I :~: b_X555I) :: *)))
                     eta_B2
                     @ b1_a3ngn
                     eta1_B1)
                `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <b_X555I
                                        :~: b_X555I>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                    <b_X555I :~: b_X555I>_R)
                        :: (Text.ParserCombinators.ReadPrec.Prec
                            -> forall b.
                               ((b_X555I :~: b_X555I) -> Text.ParserCombinators.ReadP.P b)
                               -> Text.ParserCombinators.ReadP.P b :: *)
                           ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                                  (b_X555I :~: b_X555I) :: *))))
            `cast` (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                        ([((:~:) <k_X555E>_N (Sym co_a557W) <b_X555I>_N)_R])_R
                    :: (Text.ParserCombinators.ReadPrec.ReadPrec
                          [b_X555I :~: b_X555I] :: *)
                       ~R# (Text.ParserCombinators.ReadPrec.Prec
                            -> Text.ParserCombinators.ReadP.ReadP [a_X555G :~: b_X555I] :: *)))
             GHC.Read.$fRead()7)
          `cast` (Text.ParserCombinators.ReadP.N:ReadP[0]
                      <[a_X555G :~: b_X555I]>_R
                  :: (Text.ParserCombinators.ReadP.ReadP [a_X555G :~: b_X555I] :: *)
                     ~R# (forall b.
                          ([a_X555G :~: b_X555I] -> Text.ParserCombinators.ReadP.P b)
                          -> Text.ParserCombinators.ReadP.P b :: *)))
           @ [a_X555G :~: b_X555I]
           (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
              @ [a_X555G :~: b_X555I])
         })
      }

-- RHS size: {terms: 13, types: 24, coercions: 15, joins: 0/0}
Data.Type.Equality.$fRead:~: [InlPrag=NOUSERINLINE CONLIKE]
  :: forall k (a :: k) (b :: k).
     ((a :: k) ~ (b :: k)) =>
     Read (a :~: b)
[GblId[DFunId],
 Arity=1,
 Str=<L,U(U)>m,
 Unf=DFun: \ (@ k_a54SH)
             (@ (a_a54Lz :: k_a54SH))
             (@ (b_a54LA :: k_a54SH))
             (v_B1 :: (a_a54Lz :: k_a54SH) ~ (b_a54LA :: k_a54SH)) ->
       GHC.Read.C:Read TYPE: a_a54Lz :~: b_a54LA
                       Data.Type.Equality.$fRead:~:_$creadsPrec
                         @ k_a54SH @ a_a54Lz @ b_a54LA v_B1
                       Data.Type.Equality.$fRead:~:_$creadList
                         @ k_a54SH @ a_a54Lz @ b_a54LA v_B1
                       (Data.Type.Equality.$fRead:~:4 @ k_a54SH @ a_a54Lz @ b_a54LA v_B1)
                       `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                                ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                              <a_a54Lz
                                               :~: b_a54LA>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                           <a_a54Lz :~: b_a54LA>_R)
                               :: (Text.ParserCombinators.ReadPrec.Prec
                                   -> forall b.
                                      ((a_a54Lz :~: b_a54LA) -> Text.ParserCombinators.ReadP.P b)
                                      -> Text.ParserCombinators.ReadP.P b :: *)
                                  ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                                         (a_a54Lz :~: b_a54LA) :: *))
                       Data.Type.Equality.$fRead:~:_$creadListPrec
                         @ k_a54SH @ a_a54Lz @ b_a54LA v_B1]
Data.Type.Equality.$fRead:~:
  = \ (@ k_X555F)
      (@ (a_X555H :: k_X555F))
      (@ (b_X555J :: k_X555F))
      ($d~_X555L :: (a_X555H :: k_X555F) ~ (b_X555J :: k_X555F)) ->
      GHC.Read.C:Read
        @ (a_X555H :~: b_X555J)
        (Data.Type.Equality.$fRead:~:_$creadsPrec
           @ k_X555F @ a_X555H @ b_X555J $d~_X555L)
        (Data.Type.Equality.$fRead:~:_$creadList
           @ k_X555F @ a_X555H @ b_X555J $d~_X555L)
        ((Data.Type.Equality.$fRead:~:4
            @ k_X555F @ a_X555H @ b_X555J $d~_X555L)
         `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                  ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                <a_X555H
                                 :~: b_X555J>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                             <a_X555H :~: b_X555J>_R)
                 :: (Text.ParserCombinators.ReadPrec.Prec
                     -> forall b.
                        ((a_X555H :~: b_X555J) -> Text.ParserCombinators.ReadP.P b)
                        -> Text.ParserCombinators.ReadP.P b :: *)
                    ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                           (a_X555H :~: b_X555J) :: *)))
        (Data.Type.Equality.$fRead:~:_$creadListPrec
           @ k_X555F @ a_X555H @ b_X555J $d~_X555L)

-- RHS size: {terms: 9, types: 19, coercions: 8, joins: 0/0}
Data.Type.Equality.$fBounded:~:_$cmaxBound
  :: forall k (a :: k) (b :: k). ((a :: k) ~ (b :: k)) => a :~: b
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a551I)
                 (@ (a_a551J :: k_a551I))
                 (@ (b_a551K :: k_a551I))
                 ($d~_a551L [Occ=Once]
                    :: (a_a551J :: k_a551I) ~ (b_a551K :: k_a551I)) ->
                 case GHC.Types.heq_sel
                        @ k_a551I
                        @ k_a551I
                        @ a_a551J
                        @ b_a551K
                        ($d~_a551L
                         `cast` (Data.Type.Equality.N:~[0]
                                     <k_a551I>_N <a_a551J>_N <b_a551K>_N
                                 :: ((a_a551J :: k_a551I) ~ (b_a551K :: k_a551I) :: Constraint)
                                    ~R# ((a_a551J :: k_a551I)
                                         ~~ (b_a551K :: k_a551I) :: Constraint)))
                 of co_a557Q
                 { __DEFAULT ->
                 (Data.Type.Equality.$WRefl @ k_a551I @ a_a551J)
                 `cast` (((:~:) <k_a551I>_N <a_a551J>_N co_a557Q)_R
                         :: (a_a551J :~: a_a551J :: *) ~R# (a_a551J :~: b_a551K :: *))
                 }}]
Data.Type.Equality.$fBounded:~:_$cmaxBound
  = \ (@ k_a551I)
      (@ (a_a551J :: k_a551I))
      (@ (b_a551K :: k_a551I))
      ($d~_a551L :: (a_a551J :: k_a551I) ~ (b_a551K :: k_a551I)) ->
      case GHC.Types.heq_sel
             @ k_a551I
             @ k_a551I
             @ a_a551J
             @ b_a551K
             ($d~_a551L
              `cast` (Data.Type.Equality.N:~[0]
                          <k_a551I>_N <a_a551J>_N <b_a551K>_N
                      :: ((a_a551J :: k_a551I) ~ (b_a551K :: k_a551I) :: Constraint)
                         ~R# ((a_a551J :: k_a551I) ~~ (b_a551K :: k_a551I) :: Constraint)))
      of co_a557Q
      { __DEFAULT ->
      (Data.Type.Equality.$WRefl @ k_a551I @ a_a551J)
      `cast` (((:~:) <k_a551I>_N <a_a551J>_N co_a557Q)_R
              :: (a_a551J :~: a_a551J :: *) ~R# (a_a551J :~: b_a551K :: *))
      }

-- RHS size: {terms: 9, types: 18, coercions: 0, joins: 0/0}
Data.Type.Equality.$fBounded:~: [InlPrag=NOUSERINLINE CONLIKE]
  :: forall k (a :: k) (b :: k).
     ((a :: k) ~ (b :: k)) =>
     Bounded (a :~: b)
[GblId[DFunId],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U(U)>m,
 Unf=DFun: \ (@ k_a54Sk)
             (@ (a_a54Lx :: k_a54Sk))
             (@ (b_a54Ly :: k_a54Sk))
             (v_B1 :: (a_a54Lx :: k_a54Sk) ~ (b_a54Ly :: k_a54Sk)) ->
       GHC.Enum.C:Bounded TYPE: a_a54Lx :~: b_a54Ly
                          Data.Type.Equality.$fBounded:~:_$cmaxBound
                            @ k_a54Sk @ a_a54Lx @ b_a54Ly v_B1
                          Data.Type.Equality.$fBounded:~:_$cmaxBound
                            @ k_a54Sk @ a_a54Lx @ b_a54Ly v_B1]
Data.Type.Equality.$fBounded:~:
  = \ (@ k_a551I)
      (@ (a_a551J :: k_a551I))
      (@ (b_a551K :: k_a551I))
      ($d~_a551L :: (a_a551J :: k_a551I) ~ (b_a551K :: k_a551I)) ->
      GHC.Enum.C:Bounded
        @ (a_a551J :~: b_a551K)
        (Data.Type.Equality.$fBounded:~:_$cmaxBound
           @ k_a551I @ a_a551J @ b_a551K $d~_a551L)
        (Data.Type.Equality.$fBounded:~:_$cmaxBound
           @ k_a551I @ a_a551J @ b_a551K $d~_a551L)

-- RHS size: {terms: 13, types: 50, coercions: 0, joins: 0/0}
Data.Type.Equality.$fEq:~~:_$c==
  :: forall k2 k1 (a :: k1) (b :: k2).
     (a :~~: b) -> (a :~~: b) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*H><S,1*H>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k2_a551n)
                 (@ k1_a551o)
                 (@ (a_a551p :: k1_a551o))
                 (@ (b_a551q :: k2_a551n))
                 (ds_d55a7 [Occ=Once!] :: a_a551p :~~: b_a551q)
                 (ds1_d55a8 [Occ=Once!] :: a_a551p :~~: b_a551q) ->
                 case ds_d55a7 of { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 case ds1_d55a8 of { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 GHC.Types.True
                 }
                 }}]
Data.Type.Equality.$fEq:~~:_$c==
  = \ (@ k2_a551n)
      (@ k1_a551o)
      (@ (a_a551p :: k1_a551o))
      (@ (b_a551q :: k2_a551n))
      (ds_d55a7 :: a_a551p :~~: b_a551q)
      (ds1_d55a8 :: a_a551p :~~: b_a551q) ->
      case ds_d55a7 of
      { HRefl co_a551v [Dmd=<L,A>] co1_a551w [Dmd=<L,A>] ->
      case ds1_d55a8 of
      { HRefl co2_a551x [Dmd=<L,A>] co3_a551y [Dmd=<L,A>] ->
      GHC.Types.True
      }
      }

-- RHS size: {terms: 13, types: 50, coercions: 0, joins: 0/0}
Data.Type.Equality.$fEq:~~:_$c/= [InlPrag=INLINE (sat-args=2)]
  :: forall k2 k1 (a :: k1) (b :: k2).
     (a :~~: b) -> (a :~~: b) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*H><S,1*H>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ k2_a551n)
                 (@ k1_a551o)
                 (@ (a_a551p :: k1_a551o))
                 (@ (b_a551q :: k2_a551n))
                 (x_a22b [Occ=Once!] :: a_a551p :~~: b_a551q)
                 (y_a22c [Occ=Once!] :: a_a551p :~~: b_a551q) ->
                 case x_a22b of { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 case y_a22c of { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 GHC.Types.False
                 }
                 }}]
Data.Type.Equality.$fEq:~~:_$c/=
  = \ (@ k2_a551n)
      (@ k1_a551o)
      (@ (a_a551p :: k1_a551o))
      (@ (b_a551q :: k2_a551n))
      (eta_B2 :: a_a551p :~~: b_a551q)
      (eta1_B1 :: a_a551p :~~: b_a551q) ->
      case eta_B2 of
      { HRefl co_a551v [Dmd=<L,A>] co1_a551w [Dmd=<L,A>] ->
      case eta1_B1 of
      { HRefl co2_a551x [Dmd=<L,A>] co3_a551y [Dmd=<L,A>] ->
      GHC.Types.False
      }
      }

-- RHS size: {terms: 7, types: 19, coercions: 0, joins: 0/0}
Data.Type.Equality.$fEq:~~: [InlPrag=NOUSERINLINE CONLIKE]
  :: forall k2 k1 (a :: k1) (b :: k2). Eq (a :~~: b)
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ (@ k2_a54S2)
             (@ k1_a54S1)
             (@ (a_a54Lv :: k1_a54S1))
             (@ (b_a54Lw :: k2_a54S2)) ->
       GHC.Classes.C:Eq TYPE: a_a54Lv :~~: b_a54Lw
                        Data.Type.Equality.$fEq:~~:_$c==
                          @ k2_a54S2 @ k1_a54S1 @ a_a54Lv @ b_a54Lw
                        Data.Type.Equality.$fEq:~~:_$c/=
                          @ k2_a54S2 @ k1_a54S1 @ a_a54Lv @ b_a54Lw]
Data.Type.Equality.$fEq:~~:
  = \ (@ k2_a551n)
      (@ k1_a551o)
      (@ (a_a551p :: k1_a551o))
      (@ (b_a551q :: k2_a551n)) ->
      GHC.Classes.C:Eq
        @ (a_a551p :~~: b_a551q)
        (Data.Type.Equality.$fEq:~~:_$c==
           @ k2_a551n @ k1_a551o @ a_a551p @ b_a551q)
        (Data.Type.Equality.$fEq:~~:_$c/=
           @ k2_a551n @ k1_a551o @ a_a551p @ b_a551q)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$fRead:~~:3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
Data.Type.Equality.$fRead:~~:3 = "HRefl"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$fRead:~~:2 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Data.Type.Equality.$fRead:~~:2
  = unpackCString# Data.Type.Equality.$fRead:~~:3

-- RHS size: {terms: 13, types: 31, coercions: 0, joins: 0/0}
Data.Type.Equality.$fShow:~~:_$cshowsPrec
  :: forall k2 k1 (a :: k1) (b :: k2). Int -> (a :~~: b) -> ShowS
[GblId,
 Arity=3,
 Str=<L,A><S,1*H><L,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k2_a5510)
                 (@ k1_a5511)
                 (@ (a_a5512 :: k1_a5511))
                 (@ (b_a5513 :: k2_a5510))
                 _ [Occ=Dead]
                 (ds1_d55a5 [Occ=Once!] :: a_a5512 :~~: b_a5513)
                 (eta_B1 [Occ=Once] :: String) ->
                 case ds1_d55a5 of { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 augment
                   @ Char
                   (\ (@ b1_i1Jmb)
                      (c_i1Jmc [Occ=Once, OS=OneShot] :: Char -> b1_i1Jmb -> b1_i1Jmb)
                      (n_i1Jmd [Occ=Once, OS=OneShot] :: b1_i1Jmb) ->
                      foldr
                        @ Char @ b1_i1Jmb c_i1Jmc n_i1Jmd Data.Type.Equality.$fRead:~~:2)
                   eta_B1
                 }}]
Data.Type.Equality.$fShow:~~:_$cshowsPrec
  = \ (@ k2_a5510)
      (@ k1_a5511)
      (@ (a_a5512 :: k1_a5511))
      (@ (b_a5513 :: k2_a5510))
      _ [Occ=Dead]
      (ds1_d55a5 :: a_a5512 :~~: b_a5513)
      (eta_B1 :: String) ->
      case ds1_d55a5 of
      { HRefl co_a5518 [Dmd=<L,A>] co1_a5519 [Dmd=<L,A>] ->
      ++ @ Char Data.Type.Equality.$fRead:~~:2 eta_B1
      }

-- RHS size: {terms: 9, types: 28, coercions: 0, joins: 0/0}
Data.Type.Equality.$fShow:~~:_$cshow
  :: forall k2 k1 (a :: k1) (b :: k2). (a :~~: b) -> String
[GblId,
 Arity=1,
 Str=<S,1*H>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k2_a5510)
                 (@ k1_a5511)
                 (@ (a_a5512 :: k1_a5511))
                 (@ (b_a5513 :: k2_a5510))
                 (x_i1Jj2 [Occ=Once!] :: a_a5512 :~~: b_a5513) ->
                 case x_i1Jj2 of { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 Data.Type.Equality.$fRead:~~:2
                 }}]
Data.Type.Equality.$fShow:~~:_$cshow
  = \ (@ k2_a5510)
      (@ k1_a5511)
      (@ (a_a5512 :: k1_a5511))
      (@ (b_a5513 :: k2_a5510))
      (x_i1Jj2 :: a_a5512 :~~: b_a5513) ->
      case x_i1Jj2 of
      { HRefl co_a5518 [Dmd=<L,A>] co1_a5519 [Dmd=<L,A>] ->
      Data.Type.Equality.$fRead:~~:2
      }

-- RHS size: {terms: 12, types: 30, coercions: 0, joins: 0/0}
Data.Type.Equality.$fShow:~~:1
  :: forall k2 (b :: k2) k1 (a :: k1). (a :~~: b) -> ShowS
[GblId,
 Arity=2,
 Str=<S,1*H><L,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k2_a5510)
                 (@ (b_a5513 :: k2_a5510))
                 (@ k1_a5511)
                 (@ (a_a5512 :: k1_a5511))
                 (ds_d55a5 [Occ=Once!] :: a_a5512 :~~: b_a5513)
                 (eta_B1 [Occ=Once] :: String) ->
                 case ds_d55a5 of { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 augment
                   @ Char
                   (\ (@ b1_i1Jmb)
                      (c_i1Jmc [Occ=Once, OS=OneShot] :: Char -> b1_i1Jmb -> b1_i1Jmb)
                      (n_i1Jmd [Occ=Once, OS=OneShot] :: b1_i1Jmb) ->
                      foldr
                        @ Char @ b1_i1Jmb c_i1Jmc n_i1Jmd Data.Type.Equality.$fRead:~~:2)
                   eta_B1
                 }}]
Data.Type.Equality.$fShow:~~:1
  = \ (@ k2_a5510)
      (@ (b_a5513 :: k2_a5510))
      (@ k1_a5511)
      (@ (a_a5512 :: k1_a5511))
      (ds_d55a5 :: a_a5512 :~~: b_a5513)
      (eta_B1 :: String) ->
      case ds_d55a5 of
      { HRefl co_a5518 [Dmd=<L,A>] co1_a5519 [Dmd=<L,A>] ->
      ++ @ Char Data.Type.Equality.$fRead:~~:2 eta_B1
      }

-- RHS size: {terms: 10, types: 22, coercions: 0, joins: 0/0}
Data.Type.Equality.$fShow:~~:_$cshowList
  :: forall k2 k1 (a :: k1) (b :: k2). [a :~~: b] -> ShowS
[GblId,
 Arity=2,
 Str=<S,1*U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k2_a5510)
                 (@ k1_a5511)
                 (@ (a_a5512 :: k1_a5511))
                 (@ (b_a5513 :: k2_a5510))
                 (ls_i1Mix [Occ=Once] :: [a_a5512 :~~: b_a5513])
                 (s_i1Miy [Occ=Once] :: String) ->
                 showList__
                   @ (a_a5512 :~~: b_a5513)
                   (Data.Type.Equality.$fShow:~~:1
                      @ k2_a5510 @ b_a5513 @ k1_a5511 @ a_a5512)
                   ls_i1Mix
                   s_i1Miy}]
Data.Type.Equality.$fShow:~~:_$cshowList
  = \ (@ k2_a5510)
      (@ k1_a5511)
      (@ (a_a5512 :: k1_a5511))
      (@ (b_a5513 :: k2_a5510))
      (ls_i1Mix :: [a_a5512 :~~: b_a5513])
      (s_i1Miy :: String) ->
      showList__
        @ (a_a5512 :~~: b_a5513)
        (Data.Type.Equality.$fShow:~~:1
           @ k2_a5510 @ b_a5513 @ k1_a5511 @ a_a5512)
        ls_i1Mix
        s_i1Miy

-- RHS size: {terms: 8, types: 23, coercions: 0, joins: 0/0}
Data.Type.Equality.$fShow:~~: [InlPrag=NOUSERINLINE CONLIKE]
  :: forall k2 k1 (a :: k1) (b :: k2). Show (a :~~: b)
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ (@ k2_a54RK)
             (@ k1_a54RJ)
             (@ (a_a54Lt :: k1_a54RJ))
             (@ (b_a54Lu :: k2_a54RK)) ->
       GHC.Show.C:Show TYPE: a_a54Lt :~~: b_a54Lu
                       Data.Type.Equality.$fShow:~~:_$cshowsPrec
                         @ k2_a54RK @ k1_a54RJ @ a_a54Lt @ b_a54Lu
                       Data.Type.Equality.$fShow:~~:_$cshow
                         @ k2_a54RK @ k1_a54RJ @ a_a54Lt @ b_a54Lu
                       Data.Type.Equality.$fShow:~~:_$cshowList
                         @ k2_a54RK @ k1_a54RJ @ a_a54Lt @ b_a54Lu]
Data.Type.Equality.$fShow:~~:
  = \ (@ k2_a5510)
      (@ k1_a5511)
      (@ (a_a5512 :: k1_a5511))
      (@ (b_a5513 :: k2_a5510)) ->
      GHC.Show.C:Show
        @ (a_a5512 :~~: b_a5513)
        (Data.Type.Equality.$fShow:~~:_$cshowsPrec
           @ k2_a5510 @ k1_a5511 @ a_a5512 @ b_a5513)
        (Data.Type.Equality.$fShow:~~:_$cshow
           @ k2_a5510 @ k1_a5511 @ a_a5512 @ b_a5513)
        (Data.Type.Equality.$fShow:~~:_$cshowList
           @ k2_a5510 @ k1_a5511 @ a_a5512 @ b_a5513)

-- RHS size: {terms: 13, types: 50, coercions: 0, joins: 0/0}
Data.Type.Equality.$fOrd:~~:_$c<
  :: forall k2 k1 (a :: k1) (b :: k2).
     (a :~~: b) -> (a :~~: b) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*H><S,1*H>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k2_a54ZW)
                 (@ k1_a54ZX)
                 (@ (a_a54ZY :: k1_a54ZX))
                 (@ (b_a54ZZ :: k2_a54ZW))
                 (a1_a54Ul [Occ=Once!] :: a_a54ZY :~~: b_a54ZZ)
                 (b1_a54Um [Occ=Once!] :: a_a54ZY :~~: b_a54ZZ) ->
                 case a1_a54Ul of { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 case b1_a54Um of { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 GHC.Types.False
                 }
                 }}]
Data.Type.Equality.$fOrd:~~:_$c<
  = \ (@ k2_a54ZW)
      (@ k1_a54ZX)
      (@ (a_a54ZY :: k1_a54ZX))
      (@ (b_a54ZZ :: k2_a54ZW))
      (a1_a54Ul :: a_a54ZY :~~: b_a54ZZ)
      (b1_a54Um :: a_a54ZY :~~: b_a54ZZ) ->
      case a1_a54Ul of
      { HRefl co_a550o [Dmd=<L,A>] co1_a550p [Dmd=<L,A>] ->
      case b1_a54Um of
      { HRefl co2_a550s [Dmd=<L,A>] co3_a550t [Dmd=<L,A>] ->
      GHC.Types.False
      }
      }

-- RHS size: {terms: 13, types: 50, coercions: 0, joins: 0/0}
Data.Type.Equality.$fOrd:~~:_$ccompare
  :: forall k2 k1 (a :: k1) (b :: k2).
     (a :~~: b) -> (a :~~: b) -> Ordering
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*H><S,1*H>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k2_a54ZW)
                 (@ k1_a54ZX)
                 (@ (a_a54ZY :: k1_a54ZX))
                 (@ (b_a54ZZ :: k2_a54ZW))
                 (a1_a54Uj [Occ=Once!] :: a_a54ZY :~~: b_a54ZZ)
                 (b1_a54Uk [Occ=Once!] :: a_a54ZY :~~: b_a54ZZ) ->
                 case a1_a54Uj of { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 case b1_a54Uk of { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 GHC.Types.EQ
                 }
                 }}]
Data.Type.Equality.$fOrd:~~:_$ccompare
  = \ (@ k2_a54ZW)
      (@ k1_a54ZX)
      (@ (a_a54ZY :: k1_a54ZX))
      (@ (b_a54ZZ :: k2_a54ZW))
      (a1_a54Uj :: a_a54ZY :~~: b_a54ZZ)
      (b1_a54Uk :: a_a54ZY :~~: b_a54ZZ) ->
      case a1_a54Uj of
      { HRefl co_a550a [Dmd=<L,A>] co1_a550b [Dmd=<L,A>] ->
      case b1_a54Uk of
      { HRefl co2_a550e [Dmd=<L,A>] co3_a550f [Dmd=<L,A>] ->
      GHC.Types.EQ
      }
      }

-- RHS size: {terms: 13, types: 50, coercions: 0, joins: 0/0}
Data.Type.Equality.$fOrd:~~:_$c<=
  :: forall k2 k1 (a :: k1) (b :: k2).
     (a :~~: b) -> (a :~~: b) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*H><S,1*H>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k2_a54ZW)
                 (@ k1_a54ZX)
                 (@ (a_a54ZY :: k1_a54ZX))
                 (@ (b_a54ZZ :: k2_a54ZW))
                 (a1_a54Un [Occ=Once!] :: a_a54ZY :~~: b_a54ZZ)
                 (b1_a54Uo [Occ=Once!] :: a_a54ZY :~~: b_a54ZZ) ->
                 case b1_a54Uo of { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 case a1_a54Un of { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 GHC.Types.True
                 }
                 }}]
Data.Type.Equality.$fOrd:~~:_$c<=
  = \ (@ k2_a54ZW)
      (@ k1_a54ZX)
      (@ (a_a54ZY :: k1_a54ZX))
      (@ (b_a54ZZ :: k2_a54ZW))
      (a1_a54Un :: a_a54ZY :~~: b_a54ZZ)
      (b1_a54Uo :: a_a54ZY :~~: b_a54ZZ) ->
      case b1_a54Uo of
      { HRefl co_a550o [Dmd=<L,A>] co1_a550p [Dmd=<L,A>] ->
      case a1_a54Un of
      { HRefl co2_a550s [Dmd=<L,A>] co3_a550t [Dmd=<L,A>] ->
      GHC.Types.True
      }
      }

-- RHS size: {terms: 10, types: 33, coercions: 0, joins: 0/0}
Data.Type.Equality.$fOrd:~~:_$cmax
  :: forall k2 k1 (a :: k1) (b :: k2).
     (a :~~: b) -> (a :~~: b) -> a :~~: b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*H><S,1*U(U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k2_a54ZW)
                 (@ k1_a54ZX)
                 (@ (a_a54ZY :: k1_a54ZX))
                 (@ (b_a54ZZ :: k2_a54ZW))
                 (x_a55d [Occ=Once!] :: a_a54ZY :~~: b_a54ZZ)
                 (y_a55e [Occ=Once!] :: a_a54ZY :~~: b_a54ZZ) ->
                 case y_a55e of wild_X2D { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 case x_a55d of { HRefl _ [Occ=Dead] _ [Occ=Dead] -> wild_X2D }
                 }}]
Data.Type.Equality.$fOrd:~~:_$cmax
  = \ (@ k2_a54ZW)
      (@ k1_a54ZX)
      (@ (a_a54ZY :: k1_a54ZX))
      (@ (b_a54ZZ :: k2_a54ZW))
      (x_a55d :: a_a54ZY :~~: b_a54ZZ)
      (y_a55e :: a_a54ZY :~~: b_a54ZZ) ->
      case x_a55d of
      { HRefl co_a550s [Dmd=<L,A>] co1_a550t [Dmd=<L,A>] ->
      y_a55e
      }

-- RHS size: {terms: 13, types: 50, coercions: 0, joins: 0/0}
Data.Type.Equality.$fOrd:~~:_$c>
  :: forall k2 k1 (a :: k1) (b :: k2).
     (a :~~: b) -> (a :~~: b) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*H><S,1*H>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k2_a54ZW)
                 (@ k1_a54ZX)
                 (@ (a_a54ZY :: k1_a54ZX))
                 (@ (b_a54ZZ :: k2_a54ZW))
                 (a1_a54Up [Occ=Once!] :: a_a54ZY :~~: b_a54ZZ)
                 (b1_a54Uq [Occ=Once!] :: a_a54ZY :~~: b_a54ZZ) ->
                 case b1_a54Uq of { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 case a1_a54Up of { HRefl _ [Occ=Dead] _ [Occ=Dead] ->
                 GHC.Types.False
                 }
                 }}]
Data.Type.Equality.$fOrd:~~:_$c>
  = \ (@ k2_a54ZW)
      (@ k1_a54ZX)
      (@ (a_a54ZY :: k1_a54ZX))
      (@ (b_a54ZZ :: k2_a54ZW))
      (a1_a54Up :: a_a54ZY :~~: b_a54ZZ)
      (b1_a54Uq :: a_a54ZY :~~: b_a54ZZ) ->
      case b1_a54Uq of
      { HRefl co_a550o [Dmd=<L,A>] co1_a550p [Dmd=<L,A>] ->
      case a1_a54Up of
      { HRefl co2_a550s [Dmd=<L,A>] co3_a550t [Dmd=<L,A>] ->
      GHC.Types.False
      }
      }

-- RHS size: {terms: 10, types: 33, coercions: 0, joins: 0/0}
Data.Type.Equality.$fOrd:~~:_$cmin
  :: forall k2 k1 (a :: k1) (b :: k2).
     (a :~~: b) -> (a :~~: b) -> a :~~: b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U,U)><S,1*H>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k2_a54ZW)
                 (@ k1_a54ZX)
                 (@ (a_a54ZY :: k1_a54ZX))
                 (@ (b_a54ZZ :: k2_a54ZW))
                 (x_a55m [Occ=Once] :: a_a54ZY :~~: b_a54ZZ)
                 (y_a55n [Occ=Once!] :: a_a54ZY :~~: b_a54ZZ) ->
                 case y_a55n of { HRefl _ [Occ=Dead] _ [Occ=Dead] -> x_a55m }}]
Data.Type.Equality.$fOrd:~~:_$cmin
  = \ (@ k2_a54ZW)
      (@ k1_a54ZX)
      (@ (a_a54ZY :: k1_a54ZX))
      (@ (b_a54ZZ :: k2_a54ZW))
      (x_a55m :: a_a54ZY :~~: b_a54ZZ)
      (y_a55n :: a_a54ZY :~~: b_a54ZZ) ->
      case y_a55n of
      { HRefl co_a550o [Dmd=<L,A>] co1_a550p [Dmd=<L,A>] ->
      x_a55m
      }

-- RHS size: {terms: 13, types: 43, coercions: 0, joins: 0/0}
Data.Type.Equality.$fOrd:~~: [InlPrag=NOUSERINLINE CONLIKE]
  :: forall k2 k1 (a :: k1) (b :: k2). Ord (a :~~: b)
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ (@ k2_a54Rs)
             (@ k1_a54Rr)
             (@ (a_a54Lr :: k1_a54Rr))
             (@ (b_a54Ls :: k2_a54Rs)) ->
       GHC.Classes.C:Ord TYPE: a_a54Lr :~~: b_a54Ls
                         Data.Type.Equality.$fEq:~~:
                           @ k2_a54Rs @ k1_a54Rr @ a_a54Lr @ b_a54Ls
                         Data.Type.Equality.$fOrd:~~:_$ccompare
                           @ k2_a54Rs @ k1_a54Rr @ a_a54Lr @ b_a54Ls
                         Data.Type.Equality.$fOrd:~~:_$c<
                           @ k2_a54Rs @ k1_a54Rr @ a_a54Lr @ b_a54Ls
                         Data.Type.Equality.$fOrd:~~:_$c<=
                           @ k2_a54Rs @ k1_a54Rr @ a_a54Lr @ b_a54Ls
                         Data.Type.Equality.$fOrd:~~:_$c>
                           @ k2_a54Rs @ k1_a54Rr @ a_a54Lr @ b_a54Ls
                         Data.Type.Equality.$fEq:~~:_$c==
                           @ k2_a54Rs @ k1_a54Rr @ a_a54Lr @ b_a54Ls
                         Data.Type.Equality.$fOrd:~~:_$cmax
                           @ k2_a54Rs @ k1_a54Rr @ a_a54Lr @ b_a54Ls
                         Data.Type.Equality.$fOrd:~~:_$cmin
                           @ k2_a54Rs @ k1_a54Rr @ a_a54Lr @ b_a54Ls]
Data.Type.Equality.$fOrd:~~:
  = \ (@ k2_a54ZW)
      (@ k1_a54ZX)
      (@ (a_a54ZY :: k1_a54ZX))
      (@ (b_a54ZZ :: k2_a54ZW)) ->
      GHC.Classes.C:Ord
        @ (a_a54ZY :~~: b_a54ZZ)
        (Data.Type.Equality.$fEq:~~:
           @ k2_a54ZW @ k1_a54ZX @ a_a54ZY @ b_a54ZZ)
        (Data.Type.Equality.$fOrd:~~:_$ccompare
           @ k2_a54ZW @ k1_a54ZX @ a_a54ZY @ b_a54ZZ)
        (Data.Type.Equality.$fOrd:~~:_$c<
           @ k2_a54ZW @ k1_a54ZX @ a_a54ZY @ b_a54ZZ)
        (Data.Type.Equality.$fOrd:~~:_$c<=
           @ k2_a54ZW @ k1_a54ZX @ a_a54ZY @ b_a54ZZ)
        (Data.Type.Equality.$fOrd:~~:_$c>
           @ k2_a54ZW @ k1_a54ZX @ a_a54ZY @ b_a54ZZ)
        (Data.Type.Equality.$fEq:~~:_$c==
           @ k2_a54ZW @ k1_a54ZX @ a_a54ZY @ b_a54ZZ)
        (Data.Type.Equality.$fOrd:~~:_$cmax
           @ k2_a54ZW @ k1_a54ZX @ a_a54ZY @ b_a54ZZ)
        (Data.Type.Equality.$fOrd:~~:_$cmin
           @ k2_a54ZW @ k1_a54ZX @ a_a54ZY @ b_a54ZZ)

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$fRead:~~:_lexeme :: Text.Read.Lex.Lexeme
[GblId,
 Str=m4,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Data.Type.Equality.$fRead:~~:_lexeme
  = Text.Read.Lex.Ident Data.Type.Equality.$fRead:~~:2

-- RHS size: {terms: 14, types: 26, coercions: 0, joins: 0/0}
Data.Type.Equality.$fRead:~~:1
  :: forall k1 (a :: k1).
     Text.ParserCombinators.ReadPrec.Prec
     -> forall b.
        ((a :~~: a) -> Text.ParserCombinators.ReadP.P b)
        -> Text.ParserCombinators.ReadP.P b
[GblId,
 Arity=2,
 Str=<L,A><L,1*C1(U)>m2,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k1_a54Zj)
                 (@ (a_a54Zk :: k1_a54Zj))
                 _ [Occ=Dead]
                 (@ b_X3nkW)
                 (eta_X4B [Occ=Once!]
                    :: (a_a54Zk :~~: a_a54Zk)
                       -> Text.ParserCombinators.ReadP.P b_X3nkW) ->
                 case Text.Read.Lex.$wexpect
                        Data.Type.Equality.$fRead:~~:_lexeme
                        @ b_X3nkW
                        (\ _ [Occ=Dead, OS=OneShot] ->
                           eta_X4B (Data.Type.Equality.$WHRefl @ k1_a54Zj @ a_a54Zk))
                 of
                 { (# ww1_s3xlt [Occ=Once] #) ->
                 Text.ParserCombinators.ReadP.Look @ b_X3nkW ww1_s3xlt
                 }}]
Data.Type.Equality.$fRead:~~:1
  = \ (@ k1_a54Zj)
      (@ (a_a54Zk :: k1_a54Zj))
      _ [Occ=Dead]
      (@ b_X3nkW)
      (eta_X4B
         :: (a_a54Zk :~~: a_a54Zk)
            -> Text.ParserCombinators.ReadP.P b_X3nkW) ->
      case Text.Read.Lex.$wexpect
             Data.Type.Equality.$fRead:~~:_lexeme
             @ b_X3nkW
             (\ _ [Occ=Dead, OS=OneShot] ->
                eta_X4B (Data.Type.Equality.$WHRefl @ k1_a54Zj @ a_a54Zk))
      of
      { (# ww1_s3xlt #) ->
      Text.ParserCombinators.ReadP.Look @ b_X3nkW ww1_s3xlt
      }

-- RHS size: {terms: 16, types: 38, coercions: 39, joins: 0/0}
Data.Type.Equality.$fRead:~~:4
  :: forall k2 k1 (a :: k1) (b :: k2).
     ((a :: k1) ~~ (b :: k2)) =>
     Text.ParserCombinators.ReadPrec.Prec
     -> forall b1.
        ((a :~~: b) -> Text.ParserCombinators.ReadP.P b1)
        -> Text.ParserCombinators.ReadP.P b1
[GblId,
 Arity=3,
 Str=<S(S),1*U(1*U)><L,U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k2_a54Zi)
                 (@ k1_a54Zj)
                 (@ (a_a54Zk :: k1_a54Zj))
                 (@ (b_a54Zl :: k2_a54Zi))
                 ($d~~_a54Zm [Occ=Once]
                    :: (a_a54Zk :: k1_a54Zj) ~~ (b_a54Zl :: k2_a54Zi))
                 (eta_B2 [Occ=Once] :: Text.ParserCombinators.ReadPrec.Prec)
                 (@ b1_a3ngn)
                 (eta1_B1 [Occ=Once]
                    :: (a_a54Zk :~~: b_a54Zl)
                       -> Text.ParserCombinators.ReadP.P b1_a3ngn) ->
                 case GHC.Types.heq_sel
                        @ k1_a54Zj @ k2_a54Zi @ a_a54Zk @ b_a54Zl $d~~_a54Zm
                 of co_a557r
                 { __DEFAULT ->
                 GHC.Read.list3
                   @ (a_a54Zk :~~: a_a54Zk)
                   ((Data.Type.Equality.$fRead:~~:1 @ k1_a54Zj @ a_a54Zk)
                    `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <a_a54Zk
                                            :~~: a_a54Zk>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                         <a_a54Zk :~~: a_a54Zk>_R)
                            :: (Text.ParserCombinators.ReadPrec.Prec
                                -> forall b.
                                   ((a_a54Zk :~~: a_a54Zk) -> Text.ParserCombinators.ReadP.P b)
                                   -> Text.ParserCombinators.ReadP.P b :: *)
                               ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                                      (a_a54Zk :~~: a_a54Zk) :: *)))
                   eta_B2
                   @ b1_a3ngn
                   (eta1_B1
                    `cast` (((:~~:)
                               <k1_a54Zj>_N
                               (Sym (Kind co_a557r))
                               <a_a54Zk>_N
                               (Sym (Coh <b_a54Zl>_N (Sym (Kind co_a557r))) ; Coh (Sym co_a557r)
                                                                                  (Sym (Kind
                                                                                            co_a557r))))_R
                            ->_R <Text.ParserCombinators.ReadP.P b1_a3ngn>_R
                            :: ((a_a54Zk :~~: b_a54Zl)
                                -> Text.ParserCombinators.ReadP.P b1_a3ngn :: *)
                               ~R# ((a_a54Zk :~~: a_a54Zk)
                                    -> Text.ParserCombinators.ReadP.P b1_a3ngn :: *)))
                 }}]
Data.Type.Equality.$fRead:~~:4
  = \ (@ k2_a54Zi)
      (@ k1_a54Zj)
      (@ (a_a54Zk :: k1_a54Zj))
      (@ (b_a54Zl :: k2_a54Zi))
      ($d~~_a54Zm :: (a_a54Zk :: k1_a54Zj) ~~ (b_a54Zl :: k2_a54Zi))
      (eta_B2 :: Text.ParserCombinators.ReadPrec.Prec)
      (@ b1_a3ngn)
      (eta1_B1
         :: (a_a54Zk :~~: b_a54Zl)
            -> Text.ParserCombinators.ReadP.P b1_a3ngn) ->
      case GHC.Types.heq_sel
             @ k1_a54Zj @ k2_a54Zi @ a_a54Zk @ b_a54Zl $d~~_a54Zm
      of co_a557r
      { __DEFAULT ->
      GHC.Read.list3
        @ (a_a54Zk :~~: a_a54Zk)
        ((Data.Type.Equality.$fRead:~~:1 @ k1_a54Zj @ a_a54Zk)
         `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                  ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                <a_a54Zk
                                 :~~: a_a54Zk>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                              <a_a54Zk :~~: a_a54Zk>_R)
                 :: (Text.ParserCombinators.ReadPrec.Prec
                     -> forall b.
                        ((a_a54Zk :~~: a_a54Zk) -> Text.ParserCombinators.ReadP.P b)
                        -> Text.ParserCombinators.ReadP.P b :: *)
                    ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                           (a_a54Zk :~~: a_a54Zk) :: *)))
        eta_B2
        @ b1_a3ngn
        (eta1_B1
         `cast` (((:~~:)
                    <k1_a54Zj>_N
                    (Sym (Kind co_a557r))
                    <a_a54Zk>_N
                    (Sym (Coh <b_a54Zl>_N (Sym (Kind co_a557r))) ; Coh (Sym co_a557r)
                                                                       (Sym (Kind co_a557r))))_R
                 ->_R <Text.ParserCombinators.ReadP.P b1_a3ngn>_R
                 :: ((a_a54Zk :~~: b_a54Zl)
                     -> Text.ParserCombinators.ReadP.P b1_a3ngn :: *)
                    ~R# ((a_a54Zk :~~: a_a54Zk)
                         -> Text.ParserCombinators.ReadP.P b1_a3ngn :: *)))
      }

-- RHS size: {terms: 19, types: 52, coercions: 71, joins: 0/0}
Data.Type.Equality.$fRead:~~:_$creadsPrec
  :: forall k2 k1 (a :: k1) (b :: k2).
     ((a :: k1) ~~ (b :: k2)) =>
     Int -> ReadS (a :~~: b)
[GblId,
 Arity=2,
 Str=<S(S),U(U)><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [30 0] 120 60}]
Data.Type.Equality.$fRead:~~:_$creadsPrec
  = \ (@ k2_X553v)
      (@ k1_X553x)
      (@ (a_X553z :: k1_X553x))
      (@ (b_X553B :: k2_X553v))
      ($d~~_X553D :: (a_X553z :: k1_X553x) ~~ (b_X553B :: k2_X553v))
      (eta_B1 :: Int) ->
      case GHC.Types.heq_sel
             @ k1_X553x @ k2_X553v @ a_X553z @ b_X553B $d~~_X553D
      of co_a557r
      { __DEFAULT ->
      Text.ParserCombinators.ReadP.run
        @ (a_X553z :~~: b_X553B)
        (case GHC.Types.heq_sel
                @ k2_X553v
                @ k2_X553v
                @ b_X553B
                @ b_X553B
                ($d~~_X553D
                 `cast` (((~~)
                            (Kind co_a557r)
                            <k2_X553v>_N
                            (Sym (Coh (Sym co_a557r)
                                      (Sym (Kind co_a557r))) ; (Coh (Sym (Coh <b_X553B>_N
                                                                              (Sym (Kind
                                                                                        co_a557r))))
                                                                    (Sym (Kind
                                                                              co_a557r)) ; Coh <b_X553B>_N
                                                                                               (Sym (Kind
                                                                                                         co_a557r))))
                            <b_X553B>_N)_R
                         :: ((a_X553z :: k1_X553x) ~~ (b_X553B :: k2_X553v) :: Constraint)
                            ~R# ((b_X553B :: k2_X553v)
                                 ~~ (b_X553B :: k2_X553v) :: Constraint)))
         of co1_X55ca [Dmd=<L,A>]
         { __DEFAULT ->
         GHC.Read.list3
           @ (b_X553B :~~: b_X553B)
           ((Data.Type.Equality.$fRead:~~:1 @ k2_X553v @ b_X553B)
            `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                     ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                   <b_X553B
                                    :~~: b_X553B>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                 <b_X553B :~~: b_X553B>_R)
                    :: (Text.ParserCombinators.ReadPrec.Prec
                        -> forall b.
                           ((b_X553B :~~: b_X553B) -> Text.ParserCombinators.ReadP.P b)
                           -> Text.ParserCombinators.ReadP.P b :: *)
                       ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                              (b_X553B :~~: b_X553B) :: *)))
           eta_B1
           @ (a_X553z :~~: b_X553B)
           ((Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
               @ (a_X553z :~~: b_X553B))
            `cast` (((:~~:)
                       (Kind co_a557r)
                       <k2_X553v>_N
                       (Sym (Coh (Sym co_a557r) (Sym (Kind co_a557r))) ; Coh <b_X553B>_N
                                                                             (Sym (Kind co_a557r)))
                       <b_X553B>_N)_R
                    ->_R <Text.ParserCombinators.ReadP.P (a_X553z :~~: b_X553B)>_R
                    :: ((a_X553z :~~: b_X553B)
                        -> Text.ParserCombinators.ReadP.P (a_X553z :~~: b_X553B) :: *)
                       ~R# ((b_X553B :~~: b_X553B)
                            -> Text.ParserCombinators.ReadP.P (a_X553z :~~: b_X553B) :: *)))
         })
      }

-- RHS size: {terms: 21, types: 52, coercions: 76, joins: 0/0}
Data.Type.Equality.$fRead:~~:_$creadListPrec
  :: forall k2 k1 (a :: k1) (b :: k2).
     ((a :: k1) ~~ (b :: k2)) =>
     Text.ParserCombinators.ReadPrec.ReadPrec [a :~~: b]
[GblId,
 Arity=1,
 Str=<S(S),U(U)>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [30] 140 0}]
Data.Type.Equality.$fRead:~~:_$creadListPrec
  = \ (@ k2_X553w)
      (@ k1_X553y)
      (@ (a_X553A :: k1_X553y))
      (@ (b_X553C :: k2_X553w))
      ($d~~_X553E :: (a_X553A :: k1_X553y) ~~ (b_X553C :: k2_X553w)) ->
      case GHC.Types.heq_sel
             @ k1_X553y @ k2_X553w @ a_X553A @ b_X553C $d~~_X553E
      of co_a557r
      { __DEFAULT ->
      list
        @ (a_X553A :~~: b_X553C)
        ((\ (eta_B2 [OS=OneShot] :: Text.ParserCombinators.ReadPrec.Prec)
            (@ b1_a3ngn)
            (eta1_B1
               :: (b_X553C :~~: b_X553C)
                  -> Text.ParserCombinators.ReadP.P b1_a3ngn) ->
            case GHC.Types.heq_sel
                   @ k2_X553w
                   @ k2_X553w
                   @ b_X553C
                   @ b_X553C
                   ($d~~_X553E
                    `cast` (((~~)
                               (Kind co_a557r)
                               <k2_X553w>_N
                               (Sym (Coh (Sym co_a557r)
                                         (Sym (Kind co_a557r))) ; (Coh (Sym (Coh <b_X553C>_N
                                                                                 (Sym (Kind
                                                                                           co_a557r))))
                                                                       (Sym (Kind
                                                                                 co_a557r)) ; Coh <b_X553C>_N
                                                                                                  (Sym (Kind
                                                                                                            co_a557r))))
                               <b_X553C>_N)_R
                            :: ((a_X553A :: k1_X553y) ~~ (b_X553C :: k2_X553w) :: Constraint)
                               ~R# ((b_X553C :: k2_X553w)
                                    ~~ (b_X553C :: k2_X553w) :: Constraint)))
            of co1_X55ca [Dmd=<L,A>]
            { __DEFAULT ->
            GHC.Read.list3
              @ (b_X553C :~~: b_X553C)
              ((Data.Type.Equality.$fRead:~~:1 @ k2_X553w @ b_X553C)
               `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <b_X553C
                                       :~~: b_X553C>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                    <b_X553C :~~: b_X553C>_R)
                       :: (Text.ParserCombinators.ReadPrec.Prec
                           -> forall b.
                              ((b_X553C :~~: b_X553C) -> Text.ParserCombinators.ReadP.P b)
                              -> Text.ParserCombinators.ReadP.P b :: *)
                          ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                                 (b_X553C :~~: b_X553C) :: *)))
              eta_B2
              @ b1_a3ngn
              eta1_B1
            })
         `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                  ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                <b_X553C
                                 :~~: b_X553C>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                              ((:~~:)
                                                                 (Kind co_a557r)
                                                                 <k2_X553w>_N
                                                                 (Sym (Coh (Sym co_a557r)
                                                                           (Sym (Kind
                                                                                     co_a557r))) ; Coh <b_X553C>_N
                                                                                                       (Sym (Kind
                                                                                                                 co_a557r)))
                                                                 <b_X553C>_N)_R)
                 :: (Text.ParserCombinators.ReadPrec.Prec
                     -> forall b.
                        ((b_X553C :~~: b_X553C) -> Text.ParserCombinators.ReadP.P b)
                        -> Text.ParserCombinators.ReadP.P b :: *)
                    ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                           (a_X553A :~~: b_X553C) :: *)))
      }

-- RHS size: {terms: 24, types: 70, coercions: 91, joins: 0/0}
Data.Type.Equality.$fRead:~~:_$creadList
  :: forall k2 k1 (a :: k1) (b :: k2).
     ((a :: k1) ~~ (b :: k2)) =>
     ReadS [a :~~: b]
[GblId,
 Arity=1,
 Str=<S(S),U(U)>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [30] 180 60}]
Data.Type.Equality.$fRead:~~:_$creadList
  = \ (@ k2_X553x)
      (@ k1_X553z)
      (@ (a_X553B :: k1_X553z))
      (@ (b_X553D :: k2_X553x))
      ($d~~_X553F :: (a_X553B :: k1_X553z) ~~ (b_X553D :: k2_X553x)) ->
      case GHC.Types.heq_sel
             @ k1_X553z @ k2_X553x @ a_X553B @ b_X553D $d~~_X553F
      of co_a557r
      { __DEFAULT ->
      Text.ParserCombinators.ReadP.run
        @ [a_X553B :~~: b_X553D]
        (case GHC.Types.heq_sel
                @ k2_X553x
                @ k2_X553x
                @ b_X553D
                @ b_X553D
                ($d~~_X553F
                 `cast` (((~~)
                            (Kind co_a557r)
                            <k2_X553x>_N
                            (Sym (Coh (Sym co_a557r)
                                      (Sym (Kind co_a557r))) ; (Coh (Sym (Coh <b_X553D>_N
                                                                              (Sym (Kind
                                                                                        co_a557r))))
                                                                    (Sym (Kind
                                                                              co_a557r)) ; Coh <b_X553D>_N
                                                                                               (Sym (Kind
                                                                                                         co_a557r))))
                            <b_X553D>_N)_R
                         :: ((a_X553B :: k1_X553z) ~~ (b_X553D :: k2_X553x) :: Constraint)
                            ~R# ((b_X553D :: k2_X553x)
                                 ~~ (b_X553D :: k2_X553x) :: Constraint)))
         of co1_X55aO [Dmd=<L,A>]
         { __DEFAULT ->
         ((((list
               @ (b_X553D :~~: b_X553D)
               ((\ (eta_B2 [OS=OneShot] :: Text.ParserCombinators.ReadPrec.Prec)
                   (@ b1_a3ngn)
                   (eta1_B1
                      :: (b_X553D :~~: b_X553D)
                         -> Text.ParserCombinators.ReadP.P b1_a3ngn) ->
                   GHC.Read.list3
                     @ (b_X553D :~~: b_X553D)
                     ((Data.Type.Equality.$fRead:~~:1 @ k2_X553x @ b_X553D)
                      `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                               ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                             <b_X553D
                                              :~~: b_X553D>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                           <b_X553D :~~: b_X553D>_R)
                              :: (Text.ParserCombinators.ReadPrec.Prec
                                  -> forall b.
                                     ((b_X553D :~~: b_X553D) -> Text.ParserCombinators.ReadP.P b)
                                     -> Text.ParserCombinators.ReadP.P b :: *)
                                 ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                                        (b_X553D :~~: b_X553D) :: *)))
                     eta_B2
                     @ b1_a3ngn
                     eta1_B1)
                `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <b_X553D
                                        :~~: b_X553D>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                     <b_X553D :~~: b_X553D>_R)
                        :: (Text.ParserCombinators.ReadPrec.Prec
                            -> forall b.
                               ((b_X553D :~~: b_X553D) -> Text.ParserCombinators.ReadP.P b)
                               -> Text.ParserCombinators.ReadP.P b :: *)
                           ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                                  (b_X553D :~~: b_X553D) :: *))))
            `cast` (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                        ([((:~~:)
                             (Sym (Kind co_a557r))
                             <k2_X553x>_N
                             (Sym (Coh <b_X553D>_N (Sym (Kind co_a557r))) ; Coh (Sym co_a557r)
                                                                                (Sym (Kind
                                                                                          co_a557r)))
                             <b_X553D>_N)_R])_R
                    :: (Text.ParserCombinators.ReadPrec.ReadPrec
                          [b_X553D :~~: b_X553D] :: *)
                       ~R# (Text.ParserCombinators.ReadPrec.Prec
                            -> Text.ParserCombinators.ReadP.ReadP
                                 [a_X553B :~~: b_X553D] :: *)))
             GHC.Read.$fRead()7)
          `cast` (Text.ParserCombinators.ReadP.N:ReadP[0]
                      <[a_X553B :~~: b_X553D]>_R
                  :: (Text.ParserCombinators.ReadP.ReadP [a_X553B :~~: b_X553D] :: *)
                     ~R# (forall b.
                          ([a_X553B :~~: b_X553D] -> Text.ParserCombinators.ReadP.P b)
                          -> Text.ParserCombinators.ReadP.P b :: *)))
           @ [a_X553B :~~: b_X553D]
           (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
              @ [a_X553B :~~: b_X553D])
         })
      }

-- RHS size: {terms: 14, types: 32, coercions: 17, joins: 0/0}
Data.Type.Equality.$fRead:~~: [InlPrag=NOUSERINLINE CONLIKE]
  :: forall k2 k1 (a :: k1) (b :: k2).
     ((a :: k1) ~~ (b :: k2)) =>
     Read (a :~~: b)
[GblId[DFunId],
 Arity=1,
 Str=<L,U(U)>m,
 Unf=DFun: \ (@ k2_a54QZ)
             (@ k1_a54QY)
             (@ (a_a54Lp :: k1_a54QY))
             (@ (b_a54Lq :: k2_a54QZ))
             (v_B1 :: (a_a54Lp :: k1_a54QY) ~~ (b_a54Lq :: k2_a54QZ)) ->
       GHC.Read.C:Read TYPE: a_a54Lp :~~: b_a54Lq
                       Data.Type.Equality.$fRead:~~:_$creadsPrec
                         @ k2_a54QZ @ k1_a54QY @ a_a54Lp @ b_a54Lq v_B1
                       Data.Type.Equality.$fRead:~~:_$creadList
                         @ k2_a54QZ @ k1_a54QY @ a_a54Lp @ b_a54Lq v_B1
                       (Data.Type.Equality.$fRead:~~:4
                          @ k2_a54QZ @ k1_a54QY @ a_a54Lp @ b_a54Lq v_B1)
                       `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                                ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                              <a_a54Lp
                                               :~~: b_a54Lq>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                            <a_a54Lp
                                                                             :~~: b_a54Lq>_R)
                               :: (Text.ParserCombinators.ReadPrec.Prec
                                   -> forall b.
                                      ((a_a54Lp :~~: b_a54Lq) -> Text.ParserCombinators.ReadP.P b)
                                      -> Text.ParserCombinators.ReadP.P b :: *)
                                  ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                                         (a_a54Lp :~~: b_a54Lq) :: *))
                       Data.Type.Equality.$fRead:~~:_$creadListPrec
                         @ k2_a54QZ @ k1_a54QY @ a_a54Lp @ b_a54Lq v_B1]
Data.Type.Equality.$fRead:~~:
  = \ (@ k2_X553y)
      (@ k1_X553A)
      (@ (a_X553C :: k1_X553A))
      (@ (b_X553E :: k2_X553y))
      ($d~~_X553G :: (a_X553C :: k1_X553A) ~~ (b_X553E :: k2_X553y)) ->
      GHC.Read.C:Read
        @ (a_X553C :~~: b_X553E)
        (Data.Type.Equality.$fRead:~~:_$creadsPrec
           @ k2_X553y @ k1_X553A @ a_X553C @ b_X553E $d~~_X553G)
        (Data.Type.Equality.$fRead:~~:_$creadList
           @ k2_X553y @ k1_X553A @ a_X553C @ b_X553E $d~~_X553G)
        ((Data.Type.Equality.$fRead:~~:4
            @ k2_X553y @ k1_X553A @ a_X553C @ b_X553E $d~~_X553G)
         `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                  ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                <a_X553C
                                 :~~: b_X553E>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                              <a_X553C :~~: b_X553E>_R)
                 :: (Text.ParserCombinators.ReadPrec.Prec
                     -> forall b.
                        ((a_X553C :~~: b_X553E) -> Text.ParserCombinators.ReadP.P b)
                        -> Text.ParserCombinators.ReadP.P b :: *)
                    ~R# (Text.ParserCombinators.ReadPrec.ReadPrec
                           (a_X553C :~~: b_X553E) :: *)))
        (Data.Type.Equality.$fRead:~~:_$creadListPrec
           @ k2_X553y @ k1_X553A @ a_X553C @ b_X553E $d~~_X553G)

-- RHS size: {terms: 10, types: 22, coercions: 18, joins: 0/0}
Data.Type.Equality.$fBounded:~~:_$cmaxBound
  :: forall k2 k1 (a :: k1) (b :: k2).
     ((a :: k1) ~~ (b :: k2)) =>
     a :~~: b
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k2_a54YV)
                 (@ k1_a54YW)
                 (@ (a_a54YX :: k1_a54YW))
                 (@ (b_a54YY :: k2_a54YV))
                 ($d~~_a54YZ [Occ=Once]
                    :: (a_a54YX :: k1_a54YW) ~~ (b_a54YY :: k2_a54YV)) ->
                 case GHC.Types.heq_sel
                        @ k1_a54YW @ k2_a54YV @ a_a54YX @ b_a54YY $d~~_a54YZ
                 of co_a557i
                 { __DEFAULT ->
                 (Data.Type.Equality.$WHRefl @ k1_a54YW @ a_a54YX)
                 `cast` (((:~~:)
                            <k1_a54YW>_N
                            (Kind co_a557i)
                            <a_a54YX>_N
                            (Sym (Coh (Sym co_a557i) (Sym (Kind co_a557i))) ; Coh <b_a54YY>_N
                                                                                  (Sym (Kind
                                                                                            co_a557i))))_R
                         :: (a_a54YX :~~: a_a54YX :: *) ~R# (a_a54YX :~~: b_a54YY :: *))
                 }}]
Data.Type.Equality.$fBounded:~~:_$cmaxBound
  = \ (@ k2_a54YV)
      (@ k1_a54YW)
      (@ (a_a54YX :: k1_a54YW))
      (@ (b_a54YY :: k2_a54YV))
      ($d~~_a54YZ :: (a_a54YX :: k1_a54YW) ~~ (b_a54YY :: k2_a54YV)) ->
      case GHC.Types.heq_sel
             @ k1_a54YW @ k2_a54YV @ a_a54YX @ b_a54YY $d~~_a54YZ
      of co_a557i
      { __DEFAULT ->
      (Data.Type.Equality.$WHRefl @ k1_a54YW @ a_a54YX)
      `cast` (((:~~:)
                 <k1_a54YW>_N
                 (Kind co_a557i)
                 <a_a54YX>_N
                 (Sym (Coh (Sym co_a557i) (Sym (Kind co_a557i))) ; Coh <b_a54YY>_N
                                                                       (Sym (Kind co_a557i))))_R
              :: (a_a54YX :~~: a_a54YX :: *) ~R# (a_a54YX :~~: b_a54YY :: *))
      }

-- RHS size: {terms: 10, types: 24, coercions: 0, joins: 0/0}
Data.Type.Equality.$fBounded:~~: [InlPrag=NOUSERINLINE CONLIKE]
  :: forall k2 k1 (a :: k1) (b :: k2).
     ((a :: k1) ~~ (b :: k2)) =>
     Bounded (a :~~: b)
[GblId[DFunId],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U(U)>m,
 Unf=DFun: \ (@ k2_a54Qu)
             (@ k1_a54Qt)
             (@ (a_a54Ln :: k1_a54Qt))
             (@ (b_a54Lo :: k2_a54Qu))
             (v_B1 :: (a_a54Ln :: k1_a54Qt) ~~ (b_a54Lo :: k2_a54Qu)) ->
       GHC.Enum.C:Bounded TYPE: a_a54Ln :~~: b_a54Lo
                          Data.Type.Equality.$fBounded:~~:_$cmaxBound
                            @ k2_a54Qu @ k1_a54Qt @ a_a54Ln @ b_a54Lo v_B1
                          Data.Type.Equality.$fBounded:~~:_$cmaxBound
                            @ k2_a54Qu @ k1_a54Qt @ a_a54Ln @ b_a54Lo v_B1]
Data.Type.Equality.$fBounded:~~:
  = \ (@ k2_a54YV)
      (@ k1_a54YW)
      (@ (a_a54YX :: k1_a54YW))
      (@ (b_a54YY :: k2_a54YV))
      ($d~~_a54YZ :: (a_a54YX :: k1_a54YW) ~~ (b_a54YY :: k2_a54YV)) ->
      GHC.Enum.C:Bounded
        @ (a_a54YX :~~: b_a54YY)
        (Data.Type.Equality.$fBounded:~~:_$cmaxBound
           @ k2_a54YV @ k1_a54YW @ a_a54YX @ b_a54YY $d~~_a54YZ)
        (Data.Type.Equality.$fBounded:~~:_$cmaxBound
           @ k2_a54YV @ k1_a54YW @ a_a54YX @ b_a54YY $d~~_a54YZ)

-- RHS size: {terms: 8, types: 19, coercions: 4, joins: 0/0}
sym :: forall k (a :: k) (b :: k). (a :~: b) -> b :~: a
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a54YJ)
                 (@ (a_a54YK :: k_a54YJ))
                 (@ (b_a54YL :: k_a54YJ))
                 (ds_d559Q [Occ=Once!] :: a_a54YK :~: b_a54YL) ->
                 case ds_d559Q of { Refl co_a54YN ->
                 (Data.Type.Equality.$WRefl @ k_a54YJ @ b_a54YL)
                 `cast` (((:~:) <k_a54YJ>_N <b_a54YL>_N co_a54YN)_R
                         :: (b_a54YL :~: b_a54YL :: *) ~R# (b_a54YL :~: a_a54YK :: *))
                 }}]
sym
  = \ (@ k_a54YJ)
      (@ (a_a54YK :: k_a54YJ))
      (@ (b_a54YL :: k_a54YJ))
      (ds_d559Q :: a_a54YK :~: b_a54YL) ->
      case ds_d559Q of { Refl co_a54YN ->
      (Data.Type.Equality.$WRefl @ k_a54YJ @ b_a54YL)
      `cast` (((:~:) <k_a54YJ>_N <b_a54YL>_N co_a54YN)_R
              :: (b_a54YL :~: b_a54YL :: *) ~R# (b_a54YL :~: a_a54YK :: *))
      }

-- RHS size: {terms: 13, types: 33, coercions: 8, joins: 0/0}
trans
  :: forall k (a :: k) (b :: k) (c :: k).
     (a :~: b) -> (b :~: c) -> a :~: c
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U)><S,1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a54Yw)
                 (@ (a_a54Yx :: k_a54Yw))
                 (@ (b_a54Yy :: k_a54Yw))
                 (@ (c_a54Yz :: k_a54Yw))
                 (ds_d559E [Occ=Once!] :: a_a54Yx :~: b_a54Yy)
                 (ds1_d559F [Occ=Once!] :: b_a54Yy :~: c_a54Yz) ->
                 case ds_d559E of { Refl co_a54YB ->
                 case ds1_d559F of { Refl co1_a54YC ->
                 (Data.Type.Equality.$WRefl @ k_a54Yw @ a_a54Yx)
                 `cast` (((:~:)
                            <k_a54Yw>_N <a_a54Yx>_N (Sym co_a54YB ; Sym co1_a54YC))_R
                         :: (a_a54Yx :~: a_a54Yx :: *) ~R# (a_a54Yx :~: c_a54Yz :: *))
                 }
                 }}]
trans
  = \ (@ k_a54Yw)
      (@ (a_a54Yx :: k_a54Yw))
      (@ (b_a54Yy :: k_a54Yw))
      (@ (c_a54Yz :: k_a54Yw))
      (ds_d559E :: a_a54Yx :~: b_a54Yy)
      (ds1_d559F :: b_a54Yy :~: c_a54Yz) ->
      case ds_d559E of { Refl co_a54YB ->
      case ds1_d559F of { Refl co1_a54YC ->
      (Data.Type.Equality.$WRefl @ k_a54Yw @ a_a54Yx)
      `cast` (((:~:)
                 <k_a54Yw>_N <a_a54Yx>_N (Sym co_a54YB ; Sym co1_a54YC))_R
              :: (a_a54Yx :~: a_a54Yx :: *) ~R# (a_a54Yx :~: c_a54Yz :: *))
      }
      }

-- RHS size: {terms: 8, types: 22, coercions: 3, joins: 0/0}
castWith :: forall a b. (a :~: b) -> a -> b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U)><S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a54Yp)
                 (@ b_a54Yq)
                 (ds_d559y [Occ=Once!] :: a_a54Yp :~: b_a54Yq)
                 (x_a54Ll [Occ=Once] :: a_a54Yp) ->
                 case ds_d559y of { Refl co_a54Ys ->
                 x_a54Ll
                 `cast` (Sub (Sym co_a54Ys) :: (a_a54Yp :: *) ~R# (b_a54Yq :: *))
                 }}]
castWith
  = \ (@ a_a54Yp)
      (@ b_a54Yq)
      (ds_d559y :: a_a54Yp :~: b_a54Yq)
      (x_a54Ll :: a_a54Yp) ->
      case ds_d559y of { Refl co_a54Ys ->
      x_a54Ll
      `cast` (Sub (Sym co_a54Ys) :: (a_a54Yp :: *) ~R# (b_a54Yq :: *))
      }

-- RHS size: {terms: 11, types: 28, coercions: 7, joins: 0/0}
gcastWith
  :: forall k (a :: k) (b :: k) r.
     (a :~: b) -> (((a :: k) ~ (b :: k)) => r) -> r
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U)><C(S),1*C1(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a54Yg)
                 (@ (a_a54Yh :: k_a54Yg))
                 (@ (b_a54Yi :: k_a54Yg))
                 (@ r_a54Yj)
                 (ds_d559s [Occ=Once!] :: a_a54Yh :~: b_a54Yi)
                 (x_a54Lm [Occ=Once!]
                    :: ((a_a54Yh :: k_a54Yg) ~ (b_a54Yi :: k_a54Yg)) => r_a54Yj) ->
                 case ds_d559s of { Refl co_a54Yl ->
                 x_a54Lm
                   ((GHC.Types.Eq#
                       @ k_a54Yg
                       @ k_a54Yg
                       @ a_a54Yh
                       @ a_a54Yh
                       @~ (<a_a54Yh>_N :: (a_a54Yh :: k_a54Yg) ~# (a_a54Yh :: k_a54Yg)))
                    `cast` (Sym (Data.Type.Equality.N:~[0]
                                     <k_a54Yg>_N) <a_a54Yh>_N (Sym co_a54Yl)
                            :: ((a_a54Yh :: k_a54Yg) ~~ (a_a54Yh :: k_a54Yg) :: Constraint)
                               ~R# ((a_a54Yh :: k_a54Yg) ~ (b_a54Yi :: k_a54Yg) :: Constraint)))
                 }}]
gcastWith
  = \ (@ k_a54Yg)
      (@ (a_a54Yh :: k_a54Yg))
      (@ (b_a54Yi :: k_a54Yg))
      (@ r_a54Yj)
      (ds_d559s :: a_a54Yh :~: b_a54Yi)
      (x_a54Lm
         :: ((a_a54Yh :: k_a54Yg) ~ (b_a54Yi :: k_a54Yg)) => r_a54Yj) ->
      case ds_d559s of { Refl co_a54Yl ->
      x_a54Lm
        ((GHC.Types.Eq#
            @ k_a54Yg
            @ k_a54Yg
            @ a_a54Yh
            @ a_a54Yh
            @~ (<a_a54Yh>_N :: (a_a54Yh :: k_a54Yg) ~# (a_a54Yh :: k_a54Yg)))
         `cast` (Sym (Data.Type.Equality.N:~[0]
                          <k_a54Yg>_N) <a_a54Yh>_N (Sym co_a54Yl)
                 :: ((a_a54Yh :: k_a54Yg) ~~ (a_a54Yh :: k_a54Yg) :: Constraint)
                    ~R# ((a_a54Yh :: k_a54Yg) ~ (b_a54Yi :: k_a54Yg) :: Constraint)))
      }

-- RHS size: {terms: 15, types: 43, coercions: 8, joins: 0/0}
apply
  :: forall k1 k2 (f :: k1 -> k2) (g :: k1
                                        -> k2) (a :: k1) (b :: k1).
     (f :~: g) -> (a :~: b) -> f a :~: g b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U)><S,1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a54Y0)
                 (@ k1_a54Y1)
                 (@ (f_a54Y2 :: k_a54Y0 -> k1_a54Y1))
                 (@ (g_a54Y3 :: k_a54Y0 -> k1_a54Y1))
                 (@ (a_a54Y4 :: k_a54Y0))
                 (@ (b_a54Y5 :: k_a54Y0))
                 (ds_d559h [Occ=Once!] :: f_a54Y2 :~: g_a54Y3)
                 (ds1_d559i [Occ=Once!] :: a_a54Y4 :~: b_a54Y5) ->
                 case ds_d559h of { Refl co_a54Y7 ->
                 case ds1_d559i of { Refl co1_a54Y8 ->
                 (Data.Type.Equality.$WRefl @ k1_a54Y1 @ (f_a54Y2 a_a54Y4))
                 `cast` (((:~:)
                            <k1_a54Y1>_N <f_a54Y2 a_a54Y4>_N (Sym co_a54Y7 (Sym co1_a54Y8)))_R
                         :: (f_a54Y2 a_a54Y4 :~: f_a54Y2 a_a54Y4 :: *)
                            ~R# (f_a54Y2 a_a54Y4 :~: g_a54Y3 b_a54Y5 :: *))
                 }
                 }}]
apply
  = \ (@ k_a54Y0)
      (@ k1_a54Y1)
      (@ (f_a54Y2 :: k_a54Y0 -> k1_a54Y1))
      (@ (g_a54Y3 :: k_a54Y0 -> k1_a54Y1))
      (@ (a_a54Y4 :: k_a54Y0))
      (@ (b_a54Y5 :: k_a54Y0))
      (ds_d559h :: f_a54Y2 :~: g_a54Y3)
      (ds1_d559i :: a_a54Y4 :~: b_a54Y5) ->
      case ds_d559h of { Refl co_a54Y7 ->
      case ds1_d559i of { Refl co1_a54Y8 ->
      (Data.Type.Equality.$WRefl @ k1_a54Y1 @ (f_a54Y2 a_a54Y4))
      `cast` (((:~:)
                 <k1_a54Y1>_N <f_a54Y2 a_a54Y4>_N (Sym co_a54Y7 (Sym co1_a54Y8)))_R
              :: (f_a54Y2 a_a54Y4 :~: f_a54Y2 a_a54Y4 :: *)
                 ~R# (f_a54Y2 a_a54Y4 :~: g_a54Y3 b_a54Y5 :: *))
      }
      }

-- RHS size: {terms: 11, types: 31, coercions: 6, joins: 0/0}
inner
  :: forall k1 k2 (f :: k1 -> k2) (a :: k1) (g :: k1
                                                  -> k2) (b :: k1).
     (f a :~: g b) -> a :~: b
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a54XN)
                 (@ k1_a54XO)
                 (@ (f_a54XP :: k_a54XN -> k1_a54XO))
                 (@ (a_a54XQ :: k_a54XN))
                 (@ (g_a54XR :: k_a54XN -> k1_a54XO))
                 (@ (b_a54XS :: k_a54XN))
                 (ds_d5599 [Occ=Once!] :: f_a54XP a_a54XQ :~: g_a54XR b_a54XS) ->
                 case ds_d5599 of { Refl co_a54XU ->
                 (Data.Type.Equality.$WRefl @ k_a54XN @ a_a54XQ)
                 `cast` (((:~:) <k_a54XN>_N <a_a54XQ>_N (Right (Sym co_a54XU)))_R
                         :: (a_a54XQ :~: a_a54XQ :: *) ~R# (a_a54XQ :~: b_a54XS :: *))
                 }}]
inner
  = \ (@ k_a54XN)
      (@ k1_a54XO)
      (@ (f_a54XP :: k_a54XN -> k1_a54XO))
      (@ (a_a54XQ :: k_a54XN))
      (@ (g_a54XR :: k_a54XN -> k1_a54XO))
      (@ (b_a54XS :: k_a54XN))
      (ds_d5599 :: f_a54XP a_a54XQ :~: g_a54XR b_a54XS) ->
      case ds_d5599 of { Refl co_a54XU ->
      (Data.Type.Equality.$WRefl @ k_a54XN @ a_a54XQ)
      `cast` (((:~:) <k_a54XN>_N <a_a54XQ>_N (Right (Sym co_a54XU)))_R
              :: (a_a54XQ :~: a_a54XQ :: *) ~R# (a_a54XQ :~: b_a54XS :: *))
      }

-- RHS size: {terms: 11, types: 32, coercions: 7, joins: 0/0}
outer
  :: forall k1 k2 (f :: k1 -> k2) (a :: k1) (g :: k1
                                                  -> k2) (b :: k1).
     (f a :~: g b) -> f :~: g
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ k_a54XA)
                 (@ k1_a54XB)
                 (@ (f_a54XC :: k_a54XA -> k1_a54XB))
                 (@ (a_a54XD :: k_a54XA))
                 (@ (g_a54XE :: k_a54XA -> k1_a54XB))
                 (@ (b_a54XF :: k_a54XA))
                 (ds_d5591 [Occ=Once!] :: f_a54XC a_a54XD :~: g_a54XE b_a54XF) ->
                 case ds_d5591 of { Refl co_a54XH ->
                 (Data.Type.Equality.$WRefl @ (k_a54XA -> k1_a54XB) @ f_a54XC)
                 `cast` (((:~:)
                            <k_a54XA -> k1_a54XB>_N <f_a54XC>_N (Left (Sym co_a54XH)))_R
                         :: (f_a54XC :~: f_a54XC :: *) ~R# (f_a54XC :~: g_a54XE :: *))
                 }}]
outer
  = \ (@ k_a54XA)
      (@ k1_a54XB)
      (@ (f_a54XC :: k_a54XA -> k1_a54XB))
      (@ (a_a54XD :: k_a54XA))
      (@ (g_a54XE :: k_a54XA -> k1_a54XB))
      (@ (b_a54XF :: k_a54XA))
      (ds_d5591 :: f_a54XC a_a54XD :~: g_a54XE b_a54XF) ->
      case ds_d5591 of { Refl co_a54XH ->
      (Data.Type.Equality.$WRefl @ (k_a54XA -> k1_a54XB) @ f_a54XC)
      `cast` (((:~:)
                 <k_a54XA -> k1_a54XB>_N <f_a54XC>_N (Left (Sym co_a54XH)))_R
              :: (f_a54XC :~: f_a54XC :: *) ~R# (f_a54XC :~: g_a54XE :: *))
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$trModule4 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Data.Type.Equality.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$trModule3 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Data.Type.Equality.$trModule3
  = GHC.Types.TrNameS Data.Type.Equality.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$trModule2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 60 0}]
Data.Type.Equality.$trModule2 = "Data.Type.Equality"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$trModule1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Data.Type.Equality.$trModule1
  = GHC.Types.TrNameS Data.Type.Equality.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$trModule :: Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Data.Type.Equality.$trModule
  = GHC.Types.Module
      Data.Type.Equality.$trModule3 Data.Type.Equality.$trModule1

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_r568a :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep_r568a
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcConstraint (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$krep1_r568b :: KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep1_r568b = GHC.Types.KindRepVar 1#

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep2_r568c :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep2_r568c = GHC.Types.KindRepFun $krep1_r568b GHC.Types.krep$*

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$krep3_r568d :: KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep3_r568d = GHC.Types.KindRepVar 0#

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc:~~:1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
Data.Type.Equality.$tc:~~:1
  = GHC.Types.KindRepFun $krep3_r568d $krep2_r568c

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep4_r568e :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep4_r568e = GHC.Types.KindRepFun $krep3_r568d GHC.Types.krep$*

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc:~:1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
Data.Type.Equality.$tc:~:1
  = GHC.Types.KindRepFun $krep3_r568d $krep4_r568e

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tcTestEquality1 [InlPrag=NOUSERINLINE[~]]
  :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
Data.Type.Equality.$tcTestEquality1
  = GHC.Types.KindRepFun $krep4_r568e $krep_r568a

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep5_r568f :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep5_r568f = GHC.Types.KindRepFun $krep3_r568d $krep_r568a

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc~1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
Data.Type.Equality.$tc~1
  = GHC.Types.KindRepFun $krep3_r568d $krep5_r568f

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$krep6_r568g :: KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep6_r568g = GHC.Types.KindRepVar 2#

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep7_r568h :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep7_r568h
  = GHC.Types.: @ KindRep $krep6_r568g (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep8_r568i :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep8_r568i = GHC.Types.: @ KindRep $krep1_r568b $krep7_r568h

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep9_r568j :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep9_r568j = GHC.Types.: @ KindRep $krep3_r568d $krep8_r568i

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep10_r568k :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep10_r568k = GHC.Types.: @ KindRep $krep3_r568d $krep9_r568j

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep11_r568l :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep11_r568l
  = GHC.Types.KindRepTyConApp GHC.Types.$tc~~ $krep10_r568k

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc~3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Data.Type.Equality.$tc~3 = "~"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc~2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Data.Type.Equality.$tc~2
  = GHC.Types.TrNameS Data.Type.Equality.$tc~3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc~ :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Data.Type.Equality.$tc~
  = GHC.Types.TyCon
      11470827771536267938##
      3625512399163125290##
      Data.Type.Equality.$trModule
      Data.Type.Equality.$tc~2
      1#
      Data.Type.Equality.$tc~1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep12_r568m :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep12_r568m
  = GHC.Types.KindRepTyConApp Data.Type.Equality.$tc~ $krep9_r568j

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc'C:~1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
Data.Type.Equality.$tc'C:~1
  = GHC.Types.KindRepFun $krep11_r568l $krep12_r568m

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc'C:~3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Data.Type.Equality.$tc'C:~3 = "'C:~"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc'C:~2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Data.Type.Equality.$tc'C:~2
  = GHC.Types.TrNameS Data.Type.Equality.$tc'C:~3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc'C:~ :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Data.Type.Equality.$tc'C:~
  = GHC.Types.TyCon
      6023002849810837484##
      5427525916893308990##
      Data.Type.Equality.$trModule
      Data.Type.Equality.$tc'C:~2
      3#
      Data.Type.Equality.$tc'C:~1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc:~:3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Data.Type.Equality.$tc:~:3 = ":~:"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc:~:2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Data.Type.Equality.$tc:~:2
  = GHC.Types.TrNameS Data.Type.Equality.$tc:~:3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc:~: :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Data.Type.Equality.$tc:~:
  = GHC.Types.TyCon
      10597498348876412676##
      16281320961088145472##
      Data.Type.Equality.$trModule
      Data.Type.Equality.$tc:~:2
      1#
      Data.Type.Equality.$tc:~:1

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep13_r568n :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep13_r568n
  = GHC.Types.: @ KindRep $krep1_r568b (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep14_r568o :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep14_r568o = GHC.Types.: @ KindRep $krep1_r568b $krep13_r568n

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep15_r568p :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep15_r568p = GHC.Types.: @ KindRep $krep3_r568d $krep14_r568o

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc'Refl1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
Data.Type.Equality.$tc'Refl1
  = GHC.Types.KindRepTyConApp Data.Type.Equality.$tc:~: $krep15_r568p

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc'Refl3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
Data.Type.Equality.$tc'Refl3 = "'Refl"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc'Refl2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Data.Type.Equality.$tc'Refl2
  = GHC.Types.TrNameS Data.Type.Equality.$tc'Refl3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc'Refl :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Data.Type.Equality.$tc'Refl
  = GHC.Types.TyCon
      16680242040484769242##
      2864388906562808793##
      Data.Type.Equality.$trModule
      Data.Type.Equality.$tc'Refl2
      2#
      Data.Type.Equality.$tc'Refl1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc:~~:3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Data.Type.Equality.$tc:~~:3 = ":~~:"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc:~~:2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Data.Type.Equality.$tc:~~:2
  = GHC.Types.TrNameS Data.Type.Equality.$tc:~~:3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc:~~: :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Data.Type.Equality.$tc:~~:
  = GHC.Types.TyCon
      4361259188665111259##
      11706467685470543992##
      Data.Type.Equality.$trModule
      Data.Type.Equality.$tc:~~:2
      2#
      Data.Type.Equality.$tc:~~:1

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep16_r568q :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep16_r568q = GHC.Types.: @ KindRep $krep3_r568d $krep15_r568p

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc'HRefl1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
Data.Type.Equality.$tc'HRefl1
  = GHC.Types.KindRepTyConApp
      Data.Type.Equality.$tc:~~: $krep16_r568q

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc'HRefl3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
Data.Type.Equality.$tc'HRefl3 = "'HRefl"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc'HRefl2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Data.Type.Equality.$tc'HRefl2
  = GHC.Types.TrNameS Data.Type.Equality.$tc'HRefl3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tc'HRefl :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Data.Type.Equality.$tc'HRefl
  = GHC.Types.TyCon
      4486133906173668740##
      6341741464738386857##
      Data.Type.Equality.$trModule
      Data.Type.Equality.$tc'HRefl2
      2#
      Data.Type.Equality.$tc'HRefl1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tcTestEquality3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
Data.Type.Equality.$tcTestEquality3 = "TestEquality"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tcTestEquality2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Data.Type.Equality.$tcTestEquality2
  = GHC.Types.TrNameS Data.Type.Equality.$tcTestEquality3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Data.Type.Equality.$tcTestEquality :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Data.Type.Equality.$tcTestEquality
  = GHC.Types.TyCon
      2944680549948432194##
      17791533211054855448##
      Data.Type.Equality.$trModule
      Data.Type.Equality.$tcTestEquality2
      1#
      Data.Type.Equality.$tcTestEquality1


