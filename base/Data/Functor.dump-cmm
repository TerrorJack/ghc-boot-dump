
==================== Output Cmm ====================
2018-03-16 15:56:19.311617041 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:56:19.31243062 UTC

[section ""data" . Data.Functor.<$>_closure" {
     Data.Functor.<$>_closure:
         const Data.Functor.<$>_info;
 },
 Data.Functor.<$>_entry() //  [R2]
         { info_tbl: [(c1xAT,
                       label: Data.Functor.<$>_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xAT: // global
           R2 = R2;
           call GHC.Base.fmap_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.313381454 UTC

[section ""data" . Data.Functor.<&>_closure" {
     Data.Functor.<&>_closure:
         const Data.Functor.<&>_info;
 },
 Data.Functor.<&>_entry() //  [R2, R3, R4]
         { info_tbl: [(c1xB0,
                       label: Data.Functor.<&>_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xB0: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c1xB1; else goto c1xB2;
       c1xB1: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.<&>_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c1xB2: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call GHC.Base.fmap_entry(R2) args: 32, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.314341041 UTC

[section ""data" . Data.Functor.$>_closure" {
     Data.Functor.$>_closure:
         const Data.Functor.$>_info;
 },
 Data.Functor.$>_entry() //  [R2, R3, R4]
         { info_tbl: [(c1xB7,
                       label: Data.Functor.$>_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xB7: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c1xB8; else goto c1xB9;
       c1xB8: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.$>_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c1xB9: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call GHC.Base.<$_entry(R2) args: 32, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.315315236 UTC

[section ""data" . Data.Functor.void_closure" {
     Data.Functor.void_closure:
         const Data.Functor.void_info;
 },
 Data.Functor.void_entry() //  [R2, R3]
         { info_tbl: [(c1xBe,
                       label: Data.Functor.void_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xBe: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c1xBf; else goto c1xBg;
       c1xBf: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.void_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c1xBg: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = GHC.Tuple.()_closure+1;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call GHC.Base.<$_entry(R2) args: 32, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.316089723 UTC

[section ""cstring" . Data.Functor.$trModule4_bytes" {
     Data.Functor.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.316617009 UTC

[section ""data" . Data.Functor.$trModule3_closure" {
     Data.Functor.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.317181437 UTC

[section ""cstring" . Data.Functor.$trModule2_bytes" {
     Data.Functor.$trModule2_bytes:
         I8[] [68,97,116,97,46,70,117,110,99,116,111,114]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.317795603 UTC

[section ""data" . Data.Functor.$trModule1_closure" {
     Data.Functor.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.318352987 UTC

[section ""data" . Data.Functor.$trModule_closure" {
     Data.Functor.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Functor.$trModule3_closure+1;
         const Data.Functor.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.318917428 UTC

[section ""relreadonly" . S1xBh_srt" { S1xBh_srt:
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.319433348 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:56:19.320077941 UTC

[section ""data" . Data.Functor.<$>_closure" {
     Data.Functor.<$>_closure:
         const Data.Functor.<$>_info;
 },
 Data.Functor.<$>_entry() //  [R2]
         { info_tbl: [(c1xBm,
                       label: Data.Functor.<$>_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xBm: // global
           R2 = R2;
           call GHC.Base.fmap_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.320904892 UTC

[section ""data" . Data.Functor.<&>_closure" {
     Data.Functor.<&>_closure:
         const Data.Functor.<&>_info;
 },
 Data.Functor.<&>_entry() //  [R2, R3, R4]
         { info_tbl: [(c1xBt,
                       label: Data.Functor.<&>_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xBt: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c1xBu; else goto c1xBv;
       c1xBu: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.<&>_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c1xBv: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call GHC.Base.fmap_entry(R2) args: 32, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.322111523 UTC

[section ""data" . Data.Functor.$>_closure" {
     Data.Functor.$>_closure:
         const Data.Functor.$>_info;
 },
 Data.Functor.$>_entry() //  [R2, R3, R4]
         { info_tbl: [(c1xBA,
                       label: Data.Functor.$>_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xBA: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c1xBB; else goto c1xBC;
       c1xBB: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.$>_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c1xBC: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call GHC.Base.<$_entry(R2) args: 32, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.32312747 UTC

[section ""data" . Data.Functor.void_closure" {
     Data.Functor.void_closure:
         const Data.Functor.void_info;
 },
 Data.Functor.void_entry() //  [R2, R3]
         { info_tbl: [(c1xBH,
                       label: Data.Functor.void_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xBH: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c1xBI; else goto c1xBJ;
       c1xBI: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.void_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c1xBJ: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = GHC.Tuple.()_closure+1;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call GHC.Base.<$_entry(R2) args: 32, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.323931766 UTC

[section ""cstring" . Data.Functor.$trModule4_bytes" {
     Data.Functor.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.324477876 UTC

[section ""data" . Data.Functor.$trModule3_closure" {
     Data.Functor.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.325032474 UTC

[section ""cstring" . Data.Functor.$trModule2_bytes" {
     Data.Functor.$trModule2_bytes:
         I8[] [68,97,116,97,46,70,117,110,99,116,111,114]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.325613714 UTC

[section ""data" . Data.Functor.$trModule1_closure" {
     Data.Functor.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.326151995 UTC

[section ""data" . Data.Functor.$trModule_closure" {
     Data.Functor.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Functor.$trModule3_closure+1;
         const Data.Functor.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.326701249 UTC

[section ""relreadonly" . S1xBh_srt" { S1xBh_srt:
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.327447392 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:56:19.328711167 UTC

[section ""data" . Data.Functor.<$>_closure" {
     Data.Functor.<$>_closure:
         const Data.Functor.<$>_info;
 },
 Data.Functor.<$>_entry() //  [R2]
         { info_tbl: [(c1xBO,
                       label: Data.Functor.<$>_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xBO: // global
           R2 = R2;
           call GHC.Base.fmap_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.332410394 UTC

[section ""data" . Data.Functor.<&>_closure" {
     Data.Functor.<&>_closure:
         const Data.Functor.<&>_info;
 },
 Data.Functor.<&>_entry() //  [R2, R3, R4]
         { info_tbl: [(c1xBZ,
                       label: Data.Functor.<&>_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xBZ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c1xC0; else goto c1xC1;
       c1xC0: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.<&>_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c1xC1: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call GHC.Base.fmap_entry(R2) args: 32, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.336500311 UTC

[section ""data" . Data.Functor.$>_closure" {
     Data.Functor.$>_closure:
         const Data.Functor.$>_info;
 },
 Data.Functor.$>_entry() //  [R2, R3, R4]
         { info_tbl: [(c1xCb,
                       label: Data.Functor.$>_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xCb: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c1xCc; else goto c1xCd;
       c1xCc: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.$>_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c1xCd: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call GHC.Base.<$_entry(R2) args: 32, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.341162564 UTC

[section ""data" . Data.Functor.void_closure" {
     Data.Functor.void_closure:
         const Data.Functor.void_info;
 },
 Data.Functor.void_entry() //  [R2, R3]
         { info_tbl: [(c1xCn,
                       label: Data.Functor.void_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xCn: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c1xCo; else goto c1xCp;
       c1xCo: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.void_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c1xCp: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = GHC.Tuple.()_closure+1;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call GHC.Base.<$_entry(R2) args: 32, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.344732725 UTC

[section ""cstring" . Data.Functor.$trModule4_bytes" {
     Data.Functor.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.346693033 UTC

[section ""data" . Data.Functor.$trModule3_closure" {
     Data.Functor.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.348341738 UTC

[section ""cstring" . Data.Functor.$trModule2_bytes" {
     Data.Functor.$trModule2_bytes:
         I8[] [68,97,116,97,46,70,117,110,99,116,111,114]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.34999827 UTC

[section ""data" . Data.Functor.$trModule1_closure" {
     Data.Functor.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.351625782 UTC

[section ""data" . Data.Functor.$trModule_closure" {
     Data.Functor.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Functor.$trModule3_closure+1;
         const Data.Functor.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.353383577 UTC

[section ""relreadonly" . S1xBh_srt" { S1xBh_srt:
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.397354696 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:56:19.398603431 UTC

[section ""data" . Data.Functor.<$>_closure" {
     Data.Functor.<$>_closure:
         const Data.Functor.<$>_info;
 },
 Data.Functor.<$>_entry() //  [R2]
         { info_tbl: [(c1xCO,
                       label: Data.Functor.<$>_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xCO: // global
           R2 = R2;
           call GHC.Base.fmap_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.402034045 UTC

[section ""data" . Data.Functor.<&>_closure" {
     Data.Functor.<&>_closure:
         const Data.Functor.<&>_info;
 },
 Data.Functor.<&>_entry() //  [R2, R3, R4]
         { info_tbl: [(c1xCZ,
                       label: Data.Functor.<&>_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xCZ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c1xD0; else goto c1xD1;
       c1xD0: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.<&>_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c1xD1: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call GHC.Base.fmap_entry(R2) args: 32, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.405865087 UTC

[section ""data" . Data.Functor.$>_closure" {
     Data.Functor.$>_closure:
         const Data.Functor.$>_info;
 },
 Data.Functor.$>_entry() //  [R2, R3, R4]
         { info_tbl: [(c1xDc,
                       label: Data.Functor.$>_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xDc: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c1xDd; else goto c1xDe;
       c1xDd: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.$>_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c1xDe: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call GHC.Base.<$_entry(R2) args: 32, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.409604018 UTC

[section ""data" . Data.Functor.void_closure" {
     Data.Functor.void_closure:
         const Data.Functor.void_info;
 },
 Data.Functor.void_entry() //  [R2, R3]
         { info_tbl: [(c1xDp,
                       label: Data.Functor.void_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1xDp: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c1xDq; else goto c1xDr;
       c1xDq: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.void_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c1xDr: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = GHC.Tuple.()_closure+1;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call GHC.Base.<$_entry(R2) args: 32, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.413156521 UTC

[section ""cstring" . Data.Functor.$trModule4_bytes" {
     Data.Functor.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.414922409 UTC

[section ""data" . Data.Functor.$trModule3_closure" {
     Data.Functor.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.416632198 UTC

[section ""cstring" . Data.Functor.$trModule2_bytes" {
     Data.Functor.$trModule2_bytes:
         I8[] [68,97,116,97,46,70,117,110,99,116,111,114]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.418464329 UTC

[section ""data" . Data.Functor.$trModule1_closure" {
     Data.Functor.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.420854666 UTC

[section ""data" . Data.Functor.$trModule_closure" {
     Data.Functor.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Functor.$trModule3_closure+1;
         const Data.Functor.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:19.422878646 UTC

[section ""relreadonly" . S1xDF_srt" { S1xDF_srt:
 }]

