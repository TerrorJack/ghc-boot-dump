
==================== Asm code ====================
2018-03-16 16:07:30.85232399 UTC

.section .data
.align 8
.align 1
lvl_rcBZq_closure:
	.quad	lvl_rcBZq_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:30.853346358 UTC

.section .text
.align 8
lvl_rcBZq_entry:
_ccC9g:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccC9h
_ccC9i:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccC9f
_ccC9e:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Types.[]_closure+1,%esi
	movl $GHC.Types.True_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_ccC9h:
	jmp *-16(%r13)
_ccC9f:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl_rcBZq_entry, .-lvl_rcBZq_entry


==================== Asm code ====================
2018-03-16 16:07:30.854085066 UTC

.section .data.rel.ro
.align 8
.align 1
lvl_rcBZq_info:
	.quad	lvl_rcBZq_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:30.857223701 UTC

.section .data
.align 8
.align 1
sat_scBZu_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 16:07:30.858931337 UTC

.section .data
.align 8
.align 1
sat_scBZv_closure:
	.quad	:_con_info
	.quad	sat_scBZu_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:30.86509668 UTC

.section .data
.align 8
.align 1
lvl1_rcBZr_closure:
	.quad	lvl1_rcBZr_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:30.866084125 UTC

.section .text
.align 8
lvl1_rcBZr_entry:
_ccC9y:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccC9z
_ccC9A:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccC9x
_ccC9w:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $sat_scBZv_closure+2,%esi
	movl $GHC.Types.True_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_ccC9z:
	jmp *-16(%r13)
_ccC9x:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl1_rcBZr_entry, .-lvl1_rcBZr_entry


==================== Asm code ====================
2018-03-16 16:07:30.866776836 UTC

.section .data.rel.ro
.align 8
.align 1
lvl1_rcBZr_info:
	.quad	lvl1_rcBZr_entry
	.quad	0
	.quad	4294967317
	.quad	ScC0R_srt


==================== Asm code ====================
2018-03-16 16:07:30.875472063 UTC

.section .data
.align 8
.align 1
$wsimplest'_rcBZs_closure:
	.quad	$wsimplest'_rcBZs_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:30.876350145 UTC

.section .text
.align 8
$wsimplest'_rcBZs_entry:
_ccC9R:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ccC9S
_ccC9T:
	movq $block_ccC9M_info,-40(%rbp)
	movq %rsi,%rax
	movl $lvl_rcBZq_closure,%esi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_ccC9S:
	movl $$wsimplest'_rcBZs_closure,%ebx
	jmp *-8(%r13)
	.size $wsimplest'_rcBZs_entry, .-$wsimplest'_rcBZs_entry


==================== Asm code ====================
2018-03-16 16:07:30.877118149 UTC

.section .data.rel.ro
.align 8
.align 1
$wsimplest'_rcBZs_info:
	.quad	$wsimplest'_rcBZs_entry
	.quad	0
	.quad	270582939662
	.quad	17179869208
	.quad	ScC0R_srt+8


==================== Asm code ====================
2018-03-16 16:07:30.878240506 UTC

.section .text
.align 8
_ccC9M:
_ccC9M:
	cmpq $1,%rbx
	je _ucCb1
_ccC9P:
	movq 8(%rbp),%rax
	movq $block_ccC9W_info,8(%rbp)
	movq 16(%rbp),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.quotRemInteger_entry
_ucCb1:
	addq $40,%rbp
	jmp _ccC9Q
	.size _ccC9M, .-_ccC9M


==================== Asm code ====================
2018-03-16 16:07:30.878979144 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccC9M_info:
	.quad	_ccC9M
	.quad	4
	.quad	270582939678
	.quad	ScC0R_srt+8


==================== Asm code ====================
2018-03-16 16:07:30.879718661 UTC

.section .text
.align 8
_ccC9W:
_ccC9W:
	movq $block_ccC9Y_info,-16(%rbp)
	movl $lvl_rcBZq_closure,%esi
	movq %r14,%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _ccC9W, .-_ccC9W


==================== Asm code ====================
2018-03-16 16:07:30.88051489 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccC9W_info:
	.quad	_ccC9W
	.quad	3
	.quad	270582939678
	.quad	ScC0R_srt+8


==================== Asm code ====================
2018-03-16 16:07:30.881516988 UTC

.section .text
.align 8
_ccC9Y:
_ccC9Y:
	cmpq $1,%rbx
	je _ccCaS
_ccCa7:
	movq $block_ccCa4_info,(%rbp)
	movl $lvl_rcBZq_closure,%esi
	movq 40(%rbp),%r14
	jmp GHC.Integer.Type.eqInteger#_entry
_ccCaS:
	movq $block_ccCaQ_info,40(%rbp)
	movq 16(%rbp),%rbx
	addq $40,%rbp
	testb $7,%bl
	jne _ccCaQ
_ccCaT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccC9Y, .-_ccC9Y


==================== Asm code ====================
2018-03-16 16:07:30.882313372 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccC9Y_info:
	.quad	_ccC9Y
	.quad	5
	.quad	270582939678
	.quad	ScC0R_srt+8


==================== Asm code ====================
2018-03-16 16:07:30.883061944 UTC

.section .text
.align 8
_ccCaQ:
_ccCaQ:
	movl $lvl1_rcBZr_closure,%r14d
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccCaQ, .-_ccCaQ


==================== Asm code ====================
2018-03-16 16:07:30.883854802 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCaQ_info:
	.quad	_ccCaQ
	.quad	0
	.quad	4294967326
	.quad	ScC0R_srt+40


==================== Asm code ====================
2018-03-16 16:07:30.884779903 UTC

.section .text
.align 8
_ccCa4:
_ccCa4:
	cmpq $1,%rbx
	je _ucCb2
_ccCag:
	movq $block_ccCab_info,(%rbp)
	movq 40(%rbp),%rsi
	movq 32(%rbp),%r14
	jmp GHC.Integer.Type.quotRemInteger_entry
_ucCb2:
	addq $48,%rbp
	jmp _ccC9Q
	.size _ccCa4, .-_ccCa4


==================== Asm code ====================
2018-03-16 16:07:30.885643395 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCa4_info:
	.quad	_ccCa4
	.quad	5
	.quad	236223201310
	.quad	ScC0R_srt+8


==================== Asm code ====================
2018-03-16 16:07:30.886436994 UTC

.section .text
.align 8
_ccC9Q:
_ccC9Q:
	movl $GHC.Real.divZeroError_closure,%ebx
	jmp stg_ap_0_fast
	.size _ccC9Q, .-_ccC9Q


==================== Asm code ====================
2018-03-16 16:07:30.887215288 UTC

.section .text
.align 8
_ccCab:
_ccCab:
	movq $block_ccCad_info,(%rbp)
	movq %rbx,%rsi
	movq %r14,%rax
	movq 16(%rbp),%r14
	movq %rax,32(%rbp)
	jmp GHC.Integer.Type.neqInteger#_entry
	.size _ccCab, .-_ccCab


==================== Asm code ====================
2018-03-16 16:07:30.887924876 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCab_info:
	.quad	_ccCab
	.quad	517
	.quad	219043332126
	.quad	ScC0R_srt+8


==================== Asm code ====================
2018-03-16 16:07:30.888846516 UTC

.section .text
.align 8
_ccCad:
_ccCad:
	cmpq $1,%rbx
	je _ccCaF
_ccCau:
	movq 8(%rbp),%rax
	movq $block_ccCal_info,8(%rbp)
	movq %rax,%r8
	movq 24(%rbp),%rdi
	movq 32(%rbp),%rsi
	movq 40(%rbp),%r14
	addq $8,%rbp
	jmp $wsimplest'_rcBZs_entry
_ccCaF:
	movq $block_ccCaD_info,40(%rbp)
	movl $lvl1_rcBZr_closure,%esi
	movq 16(%rbp),%r14
	addq $40,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
	.size _ccCad, .-_ccCad


==================== Asm code ====================
2018-03-16 16:07:30.889912978 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCad_info:
	.quad	_ccCad
	.quad	5
	.quad	219043332126
	.quad	ScC0R_srt+8


==================== Asm code ====================
2018-03-16 16:07:30.890711831 UTC

.section .text
.align 8
_ccCaD:
_ccCaD:
	movl $lvl1_rcBZr_closure,%r14d
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccCaD, .-_ccCaD


==================== Asm code ====================
2018-03-16 16:07:30.891435973 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCaD_info:
	.quad	_ccCaD
	.quad	0
	.quad	4294967326
	.quad	ScC0R_srt+40


==================== Asm code ====================
2018-03-16 16:07:30.892271598 UTC

.section .text
.align 8
_ccCal:
_ccCal:
	movq $block_ccCan_info,16(%rbp)
	movq %rbx,%rsi
	movq %r14,%rax
	movq 8(%rbp),%r14
	movq %rax,24(%rbp)
	movq %rbx,32(%rbp)
	addq $16,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _ccCal, .-_ccCal


==================== Asm code ====================
2018-03-16 16:07:30.893045216 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCal_info:
	.quad	_ccCal
	.quad	900
	.quad	12884901918
	.quad	ScC0R_srt+8


==================== Asm code ====================
2018-03-16 16:07:30.893969943 UTC

.section .text
.align 8
_ccCan:
_ccCan:
	movq 8(%rbp),%rax
	movq $block_ccCar_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
	.size _ccCan, .-_ccCan


==================== Asm code ====================
2018-03-16 16:07:30.894834033 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCan_info:
	.quad	_ccCan
	.quad	2
	.quad	4294967326
	.quad	ScC0R_srt+8


==================== Asm code ====================
2018-03-16 16:07:30.895786823 UTC

.section .text
.align 8
_ccCar:
_ccCar:
	movq 8(%rbp),%r14
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccCar, .-_ccCar


==================== Asm code ====================
2018-03-16 16:07:30.896530147 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCar_info:
	.quad	_ccCar
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:30.908218207 UTC

.section .data
.align 8
.align 1
.globl Data.Ratio.$wsimplest_closure
.type Data.Ratio.$wsimplest_closure, @object
Data.Ratio.$wsimplest_closure:
	.quad	Data.Ratio.$wsimplest_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:30.909115424 UTC

.section .text
.align 8
sat_scC06_entry:
_ccCcu:
	movq 16(%rbx),%r14
	jmp GHC.Integer.Type.negateInteger_entry
	.size sat_scC06_entry, .-sat_scC06_entry


==================== Asm code ====================
2018-03-16 16:07:30.910055283 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scC06_info:
	.quad	sat_scC06_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:30.910936282 UTC

.section .text
.align 8
.globl Data.Ratio.$wsimplest_entry
.type Data.Ratio.$wsimplest_entry, @object
Data.Ratio.$wsimplest_entry:
_ccCcx:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ccCcy
_ucCdD:
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp _ccCbP
_ccCcy:
	movl $Data.Ratio.$wsimplest_closure,%ebx
	jmp *-8(%r13)
	.size Data.Ratio.$wsimplest_entry, .-Data.Ratio.$wsimplest_entry


==================== Asm code ====================
2018-03-16 16:07:30.91279266 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Ratio.$wsimplest_info
.type Data.Ratio.$wsimplest_info, @object
Data.Ratio.$wsimplest_info:
	.quad	Data.Ratio.$wsimplest_entry
	.quad	0
	.quad	1086626725902
	.quad	17179869208
	.quad	ScC0R_srt+16


==================== Asm code ====================
2018-03-16 16:07:30.913483418 UTC

.section .text
.align 8
_ccCbP:
_ccCbP:
	movq $block_ccCbS_info,-8(%rbp)
	movq 24(%rbp),%rsi
	movq (%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _ccCbP, .-_ccCbP


==================== Asm code ====================
2018-03-16 16:07:30.914247134 UTC

.section .text
.align 8
_ccCbS:
_ccCbS:
	movq $block_ccCbW_info,-8(%rbp)
	movq 16(%rbp),%rsi
	movq 24(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _ccCbS, .-_ccCbS


==================== Asm code ====================
2018-03-16 16:07:30.914879618 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCbS_info:
	.quad	_ccCbS
	.quad	4
	.quad	536870912030
	.quad	ScC0R_srt+16


==================== Asm code ====================
2018-03-16 16:07:30.915687241 UTC

.section .text
.align 8
_ccCbW:
_ccCbW:
	movq 8(%rbp),%rax
	movq $block_ccCc0_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.ltInteger#_entry
	.size _ccCbW, .-_ccCbW


==================== Asm code ====================
2018-03-16 16:07:30.916425763 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCbW_info:
	.quad	_ccCbW
	.quad	5
	.quad	536870912030
	.quad	ScC0R_srt+16


==================== Asm code ====================
2018-03-16 16:07:30.917211656 UTC

.section .text
.align 8
_ccCc0:
_ccCc0:
	movq 8(%rbp),%rax
	movq 24(%rbp),%rcx
	cmpq $1,%rbx
	je _ccCdz
_ccCda:
	movq $block_ccCcC_info,(%rbp)
	movq %rcx,%rsi
	movq %rax,%r14
	jmp GHC.Integer.Type.eqInteger#_entry
_ccCdz:
	movq %rcx,8(%rbp)
	movq 16(%rbp),%rbx
	movq 32(%rbp),%rcx
	movq %rcx,16(%rbp)
	movq %rax,24(%rbp)
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp _ccCbP
	.size _ccCc0, .-_ccCc0


==================== Asm code ====================
2018-03-16 16:07:30.917932137 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCc0_info:
	.quad	_ccCc0
	.quad	4
	.quad	536870912030
	.quad	ScC0R_srt+16


==================== Asm code ====================
2018-03-16 16:07:30.918609994 UTC

.section .text
.align 8
_ccCcC:
_ccCcC:
	cmpq $1,%rbx
	je _ccCdl
_ucCdE:
	addq $8,%rbp
	jmp _scC00
_ccCdl:
	movq $block_ccCdj_info,(%rbp)
	movq 32(%rbp),%rsi
	movq 16(%rbp),%r14
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _ccCcC, .-_ccCcC


==================== Asm code ====================
2018-03-16 16:07:30.919223233 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCcC_info:
	.quad	_ccCcC
	.quad	4
	.quad	536870912030
	.quad	ScC0R_srt+16


==================== Asm code ====================
2018-03-16 16:07:30.919925747 UTC

.section .text
.align 8
_ccCdj:
_ccCdj:
	cmpq $1,%rbx
	je _ccCdv
_ucCdF:
	addq $8,%rbp
	jmp _scC00
_ccCdv:
	movq 16(%rbp),%r14
	movq 8(%rbp),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccCdj, .-_ccCdj


==================== Asm code ====================
2018-03-16 16:07:30.920556843 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCdj_info:
	.quad	_ccCdj
	.quad	4
	.quad	536870912030
	.quad	ScC0R_srt+16


==================== Asm code ====================
2018-03-16 16:07:30.921268773 UTC

.section .text
.align 8
_scC00:
_scC00:
	movq $block_ccCc9_info,-8(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%r8d
	movl $lvl_rcBZq_closure,%edi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Real.$w$s$ccompare_entry
	.size _scC00, .-_scC00


==================== Asm code ====================
2018-03-16 16:07:30.92208054 UTC

.section .text
.align 8
_ccCc9:
_ccCc9:
	movq 32(%rbp),%rax
	andl $7,%ebx
	cmpq $3,%rbx
	je _ccCd8
_ccCcH:
	movq $block_ccCcd_info,(%rbp)
	movq %rax,%rsi
	movl $lvl_rcBZq_closure,%r14d
	jmp GHC.Integer.Type.timesInteger_entry
_ccCd8:
	movq %rax,%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $40,%rbp
	jmp $wsimplest'_rcBZs_entry
	.size _ccCc9, .-_ccCc9


==================== Asm code ====================
2018-03-16 16:07:30.922719036 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCc9_info:
	.quad	_ccCc9
	.quad	4
	.quad	399431958558
	.quad	ScC0R_srt+16


==================== Asm code ====================
2018-03-16 16:07:30.923359536 UTC

.section .text
.align 8
_ccCcd:
_ccCcd:
	movq $block_ccCch_info,-8(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%esi
	movq 24(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _ccCcd, .-_ccCcd


==================== Asm code ====================
2018-03-16 16:07:30.923912831 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCcd_info:
	.quad	_ccCcd
	.quad	4
	.quad	399431958558
	.quad	ScC0R_srt+16


==================== Asm code ====================
2018-03-16 16:07:30.924559658 UTC

.section .text
.align 8
_ccCch:
_ccCch:
	movq 8(%rbp),%rax
	movq $block_ccCcl_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.ltInteger#_entry
	.size _ccCch, .-_ccCch


==================== Asm code ====================
2018-03-16 16:07:30.925173583 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCch_info:
	.quad	_ccCch
	.quad	5
	.quad	30064771102
	.quad	ScC0R_srt+32


==================== Asm code ====================
2018-03-16 16:07:30.926269967 UTC

.section .text
.align 8
_ccCcl:
_ccCcl:
	cmpq $1,%rbx
	je _ccCcV
_ccCcN:
	movl $lvl1_rcBZr_closure,%r14d
	movl $lvl_rcBZq_closure,%ebx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccCcY:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
_ccCcV:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccCcY
_ccCcX:
	movq $sat_scC06_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_ccCcO_info,8(%rbp)
	movq 24(%rbp),%r14
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
	.size _ccCcl, .-_ccCcl


==================== Asm code ====================
2018-03-16 16:07:30.926992489 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCcl_info:
	.quad	_ccCcl
	.quad	4
	.quad	30064771102
	.quad	ScC0R_srt+32


==================== Asm code ====================
2018-03-16 16:07:30.927695806 UTC

.section .text
.align 8
_ccCcO:
_ccCcO:
	movq 24(%rbp),%rax
	movq $block_ccCcS_info,24(%rbp)
	movq 8(%rbp),%r8
	movq 16(%rbp),%rdi
	movq %rax,%rsi
	movq %rbx,%r14
	addq $24,%rbp
	jmp $wsimplest'_rcBZs_entry
	.size _ccCcO, .-_ccCcO


==================== Asm code ====================
2018-03-16 16:07:30.928337196 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCcO_info:
	.quad	_ccCcO
	.quad	3
	.quad	4294967326
	.quad	ScC0R_srt+48


==================== Asm code ====================
2018-03-16 16:07:30.92896731 UTC

.section .text
.align 8
_ccCcS:
_ccCcS:
	movq $block_ccCcU_info,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
	.size _ccCcS, .-_ccCcS


==================== Asm code ====================
2018-03-16 16:07:30.929575481 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCcS_info:
	.quad	_ccCcS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:30.930176348 UTC

.section .text
.align 8
_ccCcU:
_ccCcU:
	movq 8(%rbp),%r14
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccCcU, .-_ccCcU


==================== Asm code ====================
2018-03-16 16:07:30.930736723 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCcU_info:
	.quad	_ccCcU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:30.935589906 UTC

.section .data
.align 8
.align 1
.globl Data.Ratio.$wapproxRational_closure
.type Data.Ratio.$wapproxRational_closure, @object
Data.Ratio.$wapproxRational_closure:
	.quad	Data.Ratio.$wapproxRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:30.936368712 UTC

.section .text
.align 8
.globl Data.Ratio.$wapproxRational_entry
.type Data.Ratio.$wapproxRational_entry, @object
Data.Ratio.$wapproxRational_entry:
_ccCeL:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ccCeZ
_ccCf0:
	movq $block_ccCeJ_info,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.$p1RealFrac_entry
_ccCeZ:
	movl $Data.Ratio.$wapproxRational_closure,%ebx
	jmp *-8(%r13)
	.size Data.Ratio.$wapproxRational_entry, .-Data.Ratio.$wapproxRational_entry


==================== Asm code ====================
2018-03-16 16:07:30.937034603 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Ratio.$wapproxRational_info
.type Data.Ratio.$wapproxRational_info, @object
Data.Ratio.$wapproxRational_info:
	.quad	Data.Ratio.$wapproxRational_entry
	.quad	0
	.quad	64424509454
	.quad	12884901911
	.quad	ScC0R_srt+72


==================== Asm code ====================
2018-03-16 16:07:30.937746401 UTC

.section .text
.align 8
_ccCeJ:
_ccCeJ:
	movq $block_ccCeO_info,(%rbp)
	movq %rbx,%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.toRational_entry
	.size _ccCeJ, .-_ccCeJ


==================== Asm code ====================
2018-03-16 16:07:30.938341283 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCeJ_info:
	.quad	_ccCeJ
	.quad	2
	.quad	30064771102
	.quad	ScC0R_srt+72


==================== Asm code ====================
2018-03-16 16:07:30.939036437 UTC

.section .text
.align 8
_ccCeO:
_ccCeO:
	movq $block_ccCeS_info,(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq %rax,8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,16(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.toRational_entry
	.size _ccCeO, .-_ccCeO


==================== Asm code ====================
2018-03-16 16:07:30.939676127 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCeO_info:
	.quad	_ccCeO
	.quad	2
	.quad	30064771102
	.quad	ScC0R_srt+72


==================== Asm code ====================
2018-03-16 16:07:30.94036447 UTC

.section .text
.align 8
_ccCeS:
_ccCeS:
	movq $block_ccCeW_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	movq 7(%rbx),%rbx
	movq %rbx,%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$w$s$c-_entry
	.size _ccCeS, .-_ccCeS


==================== Asm code ====================
2018-03-16 16:07:30.940984188 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCeS_info:
	.quad	_ccCeS
	.quad	2
	.quad	30064771102
	.quad	ScC0R_srt+72


==================== Asm code ====================
2018-03-16 16:07:30.941696262 UTC

.section .text
.align 8
_ccCeW:
_ccCeW:
	movq 16(%rbp),%rax
	movq $block_ccCeY_info,16(%rbp)
	movq 8(%rbp),%r8
	movq %rax,%rdi
	movq 24(%rbp),%rsi
	movq %r14,%rax
	movq 32(%rbp),%r14
	movq %rax,24(%rbp)
	movq %rbx,32(%rbp)
	addq $16,%rbp
	jmp GHC.Real.$w$s$c+_entry
	.size _ccCeW, .-_ccCeW


==================== Asm code ====================
2018-03-16 16:07:30.942326418 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCeW_info:
	.quad	_ccCeW
	.quad	4
	.quad	12884901918
	.quad	ScC0R_srt+72


==================== Asm code ====================
2018-03-16 16:07:30.942984384 UTC

.section .text
.align 8
_ccCeY:
_ccCeY:
	movq %r14,%r8
	movq %rbx,%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp Data.Ratio.$wsimplest_entry
	.size _ccCeY, .-_ccCeY


==================== Asm code ====================
2018-03-16 16:07:30.943562288 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCeY_info:
	.quad	_ccCeY
	.quad	2
	.quad	4294967326
	.quad	ScC0R_srt+72


==================== Asm code ====================
2018-03-16 16:07:30.947206045 UTC

.section .data
.align 8
.align 1
.globl Data.Ratio.approxRational_closure
.type Data.Ratio.approxRational_closure, @object
Data.Ratio.approxRational_closure:
	.quad	Data.Ratio.approxRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:30.947933836 UTC

.section .text
.align 8
.globl Data.Ratio.approxRational_entry
.type Data.Ratio.approxRational_entry, @object
Data.Ratio.approxRational_entry:
_ccCfC:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccCfD
_ccCfE:
	movq $block_ccCfz_info,-8(%rbp)
	addq $-8,%rbp
	jmp Data.Ratio.$wapproxRational_entry
_ccCfD:
	movl $Data.Ratio.approxRational_closure,%ebx
	jmp *-8(%r13)
	.size Data.Ratio.approxRational_entry, .-Data.Ratio.approxRational_entry


==================== Asm code ====================
2018-03-16 16:07:30.948558372 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Ratio.approxRational_info
.type Data.Ratio.approxRational_info, @object
Data.Ratio.approxRational_info:
	.quad	Data.Ratio.approxRational_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	ScC0R_srt+96


==================== Asm code ====================
2018-03-16 16:07:30.949767012 UTC

.section .text
.align 8
_ccCfz:
_ccCfz:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccCfH
_ccCfG:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccCfH:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccCfz, .-_ccCfz


==================== Asm code ====================
2018-03-16 16:07:30.950408426 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCfz_info:
	.quad	_ccCfz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:30.95211536 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Ratio.$trModule4_bytes
.type Data.Ratio.$trModule4_bytes, @object
Data.Ratio.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:07:30.953800478 UTC

.section .data
.align 8
.align 1
.globl Data.Ratio.$trModule3_closure
.type Data.Ratio.$trModule3_closure, @object
Data.Ratio.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.Ratio.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:07:30.955463952 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Ratio.$trModule2_bytes
.type Data.Ratio.$trModule2_bytes, @object
Data.Ratio.$trModule2_bytes:
	.asciz "Data.Ratio"


==================== Asm code ====================
2018-03-16 16:07:30.957089712 UTC

.section .data
.align 8
.align 1
.globl Data.Ratio.$trModule1_closure
.type Data.Ratio.$trModule1_closure, @object
Data.Ratio.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.Ratio.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:07:30.958851322 UTC

.section .data
.align 8
.align 1
.globl Data.Ratio.$trModule_closure
.type Data.Ratio.$trModule_closure, @object
Data.Ratio.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	Data.Ratio.$trModule3_closure+1
	.quad	Data.Ratio.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:30.960711664 UTC

.section .data.rel.ro
.align 8
.align 1
ScC0R_srt:
	.quad	sat_scBZv_closure
	.quad	GHC.Integer.Type.plusInteger_closure
	.quad	GHC.Integer.Type.timesInteger_closure
	.quad	GHC.Real.divZeroError_closure
	.quad	lvl_rcBZq_closure
	.quad	lvl1_rcBZr_closure
	.quad	$wsimplest'_rcBZs_closure
	.quad	GHC.Real.$w$s$ccompare_closure
	.quad	GHC.Real.$fEnumRatio1_closure
	.quad	Data.Ratio.$wsimplest_closure
	.quad	GHC.Real.$w$s$c+_closure
	.quad	GHC.Real.$w$s$c-_closure
	.quad	Data.Ratio.$wapproxRational_closure
	.quad	Data.Ratio.approxRational_closure


==================== Asm code ====================
2018-03-16 16:07:31.133525759 UTC

.section .data
.align 8
.align 1
lvl_rcBZq_closure:
	.quad	lvl_rcBZq_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:31.13452763 UTC

.section .text
.align 8
lvl_rcBZq_entry:
_ccCh8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccCh9
_ccCha:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccCh7
_ccCh6:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_ccCh9:
	jmp *-16(%r13)
_ccCh7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl_rcBZq_entry, .-lvl_rcBZq_entry


==================== Asm code ====================
2018-03-16 16:07:31.135266433 UTC

.section .data.rel.ro
.align 8
.align 1
lvl_rcBZq_info:
	.quad	lvl_rcBZq_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:31.137032479 UTC

.section .data
.align 8
.align 1
sat_scCfX_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 16:07:31.138863254 UTC

.section .data
.align 8
.align 1
sat_scCfY_closure:
	.quad	:_con_info
	.quad	sat_scCfX_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:31.141830726 UTC

.section .data
.align 8
.align 1
lvl1_rcBZr_closure:
	.quad	lvl1_rcBZr_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:31.142841859 UTC

.section .text
.align 8
lvl1_rcBZr_entry:
_ccCht:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccChu
_ccChv:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccChs
_ccChr:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq sat_scCfY_closure+2(%rip),%rsi
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_ccChu:
	jmp *-16(%r13)
_ccChs:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl1_rcBZr_entry, .-lvl1_rcBZr_entry


==================== Asm code ====================
2018-03-16 16:07:31.143617739 UTC

.section .data.rel.ro
.align 8
.align 1
lvl1_rcBZr_info:
	.quad	lvl1_rcBZr_entry
	.quad	0
	.quad	4294967317
	.quad	ScChw_srt


==================== Asm code ====================
2018-03-16 16:07:31.152618695 UTC

.section .data
.align 8
.align 1
$wsimplest'_rcBZs_closure:
	.quad	$wsimplest'_rcBZs_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:31.153617536 UTC

.section .text
.align 8
$wsimplest'_rcBZs_entry:
_ccChP:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ccChQ
_ccChR:
	leaq block_ccChK_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rsi,%rax
	leaq lvl_rcBZq_closure(%rip),%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_ccChQ:
	leaq $wsimplest'_rcBZs_closure(%rip),%rbx
	jmp *-8(%r13)
	.size $wsimplest'_rcBZs_entry, .-$wsimplest'_rcBZs_entry


==================== Asm code ====================
2018-03-16 16:07:31.154276999 UTC

.section .data.rel.ro
.align 8
.align 1
$wsimplest'_rcBZs_info:
	.quad	$wsimplest'_rcBZs_entry
	.quad	0
	.quad	270582939662
	.quad	17179869208
	.quad	ScChw_srt+8


==================== Asm code ====================
2018-03-16 16:07:31.155000246 UTC

.section .text
.align 8
_ccChK:
_ccChK:
	cmpq $1,%rbx
	je _ucCiZ
_ccChN:
	movq 8(%rbp),%rax
	leaq block_ccChU_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq 16(%rbp),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.quotRemInteger_entry@gotpcrel(%rip)
_ucCiZ:
	addq $40,%rbp
	jmp _ccChO
	.size _ccChK, .-_ccChK


==================== Asm code ====================
2018-03-16 16:07:31.155628265 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccChK_info:
	.quad	_ccChK
	.quad	4
	.quad	270582939678
	.quad	ScChw_srt+8


==================== Asm code ====================
2018-03-16 16:07:31.156306234 UTC

.section .text
.align 8
_ccChU:
_ccChU:
	leaq block_ccChW_info(%rip),%rax
	movq %rax,-16(%rbp)
	leaq lvl_rcBZq_closure(%rip),%rsi
	movq %r14,%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _ccChU, .-_ccChU


==================== Asm code ====================
2018-03-16 16:07:31.157013456 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccChU_info:
	.quad	_ccChU
	.quad	3
	.quad	270582939678
	.quad	ScChw_srt+8


==================== Asm code ====================
2018-03-16 16:07:31.157808251 UTC

.section .text
.align 8
_ccChW:
_ccChW:
	cmpq $1,%rbx
	je _ccCiQ
_ccCi5:
	leaq block_ccCi2_info(%rip),%rax
	movq %rax,(%rbp)
	leaq lvl_rcBZq_closure(%rip),%rsi
	movq 40(%rbp),%r14
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_ccCiQ:
	leaq block_ccCiO_info(%rip),%rax
	movq %rax,40(%rbp)
	movq 16(%rbp),%rbx
	addq $40,%rbp
	testb $7,%bl
	jne _ccCiO
_ccCiR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccChW, .-_ccChW


==================== Asm code ====================
2018-03-16 16:07:31.158466533 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccChW_info:
	.quad	_ccChW
	.quad	5
	.quad	270582939678
	.quad	ScChw_srt+8


==================== Asm code ====================
2018-03-16 16:07:31.159118065 UTC

.section .text
.align 8
_ccCiO:
_ccCiO:
	leaq lvl1_rcBZr_closure(%rip),%r14
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccCiO, .-_ccCiO


==================== Asm code ====================
2018-03-16 16:07:31.159699023 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCiO_info:
	.quad	_ccCiO
	.quad	0
	.quad	4294967326
	.quad	ScChw_srt+40


==================== Asm code ====================
2018-03-16 16:07:31.160430041 UTC

.section .text
.align 8
_ccCi2:
_ccCi2:
	cmpq $1,%rbx
	je _ucCj0
_ccCie:
	leaq block_ccCi9_info(%rip),%rax
	movq %rax,(%rbp)
	movq 40(%rbp),%rsi
	movq 32(%rbp),%r14
	jmp *GHC.Integer.Type.quotRemInteger_entry@gotpcrel(%rip)
_ucCj0:
	addq $48,%rbp
	jmp _ccChO
	.size _ccCi2, .-_ccCi2


==================== Asm code ====================
2018-03-16 16:07:31.161068991 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCi2_info:
	.quad	_ccCi2
	.quad	5
	.quad	236223201310
	.quad	ScChw_srt+8


==================== Asm code ====================
2018-03-16 16:07:31.161811167 UTC

.section .text
.align 8
_ccChO:
_ccChO:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _ccChO, .-_ccChO


==================== Asm code ====================
2018-03-16 16:07:31.162529033 UTC

.section .text
.align 8
_ccCi9:
_ccCi9:
	leaq block_ccCib_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	movq %r14,%rax
	movq 16(%rbp),%r14
	movq %rax,32(%rbp)
	jmp *GHC.Integer.Type.neqInteger#_entry@gotpcrel(%rip)
	.size _ccCi9, .-_ccCi9


==================== Asm code ====================
2018-03-16 16:07:31.163179535 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCi9_info:
	.quad	_ccCi9
	.quad	517
	.quad	219043332126
	.quad	ScChw_srt+8


==================== Asm code ====================
2018-03-16 16:07:31.163987223 UTC

.section .text
.align 8
_ccCib:
_ccCib:
	cmpq $1,%rbx
	je _ccCiD
_ccCis:
	movq 8(%rbp),%rax
	leaq block_ccCij_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%r8
	movq 24(%rbp),%rdi
	movq 32(%rbp),%rsi
	movq 40(%rbp),%r14
	addq $8,%rbp
	jmp $wsimplest'_rcBZs_entry
_ccCiD:
	leaq block_ccCiB_info(%rip),%rax
	movq %rax,40(%rbp)
	leaq lvl1_rcBZr_closure(%rip),%rsi
	movq 16(%rbp),%r14
	addq $40,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
	.size _ccCib, .-_ccCib


==================== Asm code ====================
2018-03-16 16:07:31.164674747 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCib_info:
	.quad	_ccCib
	.quad	5
	.quad	219043332126
	.quad	ScChw_srt+8


==================== Asm code ====================
2018-03-16 16:07:31.165396104 UTC

.section .text
.align 8
_ccCiB:
_ccCiB:
	leaq lvl1_rcBZr_closure(%rip),%r14
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccCiB, .-_ccCiB


==================== Asm code ====================
2018-03-16 16:07:31.16600843 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCiB_info:
	.quad	_ccCiB
	.quad	0
	.quad	4294967326
	.quad	ScChw_srt+40


==================== Asm code ====================
2018-03-16 16:07:31.166686384 UTC

.section .text
.align 8
_ccCij:
_ccCij:
	leaq block_ccCil_info(%rip),%rax
	movq %rax,16(%rbp)
	movq %rbx,%rsi
	movq %r14,%rax
	movq 8(%rbp),%r14
	movq %rax,24(%rbp)
	movq %rbx,32(%rbp)
	addq $16,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _ccCij, .-_ccCij


==================== Asm code ====================
2018-03-16 16:07:31.167278158 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCij_info:
	.quad	_ccCij
	.quad	900
	.quad	12884901918
	.quad	ScChw_srt+8


==================== Asm code ====================
2018-03-16 16:07:31.167943316 UTC

.section .text
.align 8
_ccCil:
_ccCil:
	movq 8(%rbp),%rax
	leaq block_ccCip_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
	.size _ccCil, .-_ccCil


==================== Asm code ====================
2018-03-16 16:07:31.168552692 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCil_info:
	.quad	_ccCil
	.quad	2
	.quad	4294967326
	.quad	ScChw_srt+8


==================== Asm code ====================
2018-03-16 16:07:31.169207041 UTC

.section .text
.align 8
_ccCip:
_ccCip:
	movq 8(%rbp),%r14
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccCip, .-_ccCip


==================== Asm code ====================
2018-03-16 16:07:31.170073349 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCip_info:
	.quad	_ccCip
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:31.184819921 UTC

.section .data
.align 8
.align 1
.globl Data.Ratio.$wsimplest_closure
.type Data.Ratio.$wsimplest_closure, @object
Data.Ratio.$wsimplest_closure:
	.quad	Data.Ratio.$wsimplest_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:31.186041614 UTC

.section .text
.align 8
sat_scCgz_entry:
_ccCkD:
	movq 16(%rbx),%r14
	jmp *GHC.Integer.Type.negateInteger_entry@gotpcrel(%rip)
	.size sat_scCgz_entry, .-sat_scCgz_entry


==================== Asm code ====================
2018-03-16 16:07:31.186962538 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scCgz_info:
	.quad	sat_scCgz_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:31.188170104 UTC

.section .text
.align 8
.globl Data.Ratio.$wsimplest_entry
.type Data.Ratio.$wsimplest_entry, @object
Data.Ratio.$wsimplest_entry:
_ccCkG:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ccCkH
_ucClM:
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp _ccCjY
_ccCkH:
	leaq Data.Ratio.$wsimplest_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Ratio.$wsimplest_entry, .-Data.Ratio.$wsimplest_entry


==================== Asm code ====================
2018-03-16 16:07:31.189162343 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Ratio.$wsimplest_info
.type Data.Ratio.$wsimplest_info, @object
Data.Ratio.$wsimplest_info:
	.quad	Data.Ratio.$wsimplest_entry
	.quad	0
	.quad	1086626725902
	.quad	17179869208
	.quad	ScChw_srt+16


==================== Asm code ====================
2018-03-16 16:07:31.190232668 UTC

.section .text
.align 8
_ccCjY:
_ccCjY:
	leaq block_ccCk1_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 24(%rbp),%rsi
	movq (%rbp),%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _ccCjY, .-_ccCjY


==================== Asm code ====================
2018-03-16 16:07:31.191278731 UTC

.section .text
.align 8
_ccCk1:
_ccCk1:
	leaq block_ccCk5_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbp),%rsi
	movq 24(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _ccCk1, .-_ccCk1


==================== Asm code ====================
2018-03-16 16:07:31.192253131 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCk1_info:
	.quad	_ccCk1
	.quad	4
	.quad	536870912030
	.quad	ScChw_srt+16


==================== Asm code ====================
2018-03-16 16:07:31.19332743 UTC

.section .text
.align 8
_ccCk5:
_ccCk5:
	movq 8(%rbp),%rax
	leaq block_ccCk9_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
	.size _ccCk5, .-_ccCk5


==================== Asm code ====================
2018-03-16 16:07:31.194241952 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCk5_info:
	.quad	_ccCk5
	.quad	5
	.quad	536870912030
	.quad	ScChw_srt+16


==================== Asm code ====================
2018-03-16 16:07:31.195357517 UTC

.section .text
.align 8
_ccCk9:
_ccCk9:
	movq 8(%rbp),%rax
	movq 24(%rbp),%rcx
	cmpq $1,%rbx
	je _ccClI
_ccClj:
	leaq block_ccCkL_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rcx,%rsi
	movq %rax,%r14
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_ccClI:
	movq %rcx,8(%rbp)
	movq 16(%rbp),%rbx
	movq 32(%rbp),%rcx
	movq %rcx,16(%rbp)
	movq %rax,24(%rbp)
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp _ccCjY
	.size _ccCk9, .-_ccCk9


==================== Asm code ====================
2018-03-16 16:07:31.196363176 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCk9_info:
	.quad	_ccCk9
	.quad	4
	.quad	536870912030
	.quad	ScChw_srt+16


==================== Asm code ====================
2018-03-16 16:07:31.197397231 UTC

.section .text
.align 8
_ccCkL:
_ccCkL:
	cmpq $1,%rbx
	je _ccClu
_ucClN:
	addq $8,%rbp
	jmp _scCgt
_ccClu:
	leaq block_ccCls_info(%rip),%rax
	movq %rax,(%rbp)
	movq 32(%rbp),%rsi
	movq 16(%rbp),%r14
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _ccCkL, .-_ccCkL


==================== Asm code ====================
2018-03-16 16:07:31.199219454 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCkL_info:
	.quad	_ccCkL
	.quad	4
	.quad	536870912030
	.quad	ScChw_srt+16


==================== Asm code ====================
2018-03-16 16:07:31.200264638 UTC

.section .text
.align 8
_ccCls:
_ccCls:
	cmpq $1,%rbx
	je _ccClE
_ucClO:
	addq $8,%rbp
	jmp _scCgt
_ccClE:
	movq 16(%rbp),%r14
	movq 8(%rbp),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccCls, .-_ccCls


==================== Asm code ====================
2018-03-16 16:07:31.201110156 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCls_info:
	.quad	_ccCls
	.quad	4
	.quad	536870912030
	.quad	ScChw_srt+16


==================== Asm code ====================
2018-03-16 16:07:31.202101733 UTC

.section .text
.align 8
_scCgt:
_scCgt:
	leaq block_ccCki_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq GHC.Real.$fEnumRatio1_closure@gotpcrel(%rip),%r8
	leaq lvl_rcBZq_closure(%rip),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $-8,%rbp
	jmp *GHC.Real.$w$s$ccompare_entry@gotpcrel(%rip)
	.size _scCgt, .-_scCgt


==================== Asm code ====================
2018-03-16 16:07:31.203319197 UTC

.section .text
.align 8
_ccCki:
_ccCki:
	movq 32(%rbp),%rax
	andl $7,%ebx
	cmpq $3,%rbx
	je _ccClh
_ccCkQ:
	leaq block_ccCkm_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rsi
	leaq lvl_rcBZq_closure(%rip),%r14
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_ccClh:
	movq %rax,%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $40,%rbp
	jmp $wsimplest'_rcBZs_entry
	.size _ccCki, .-_ccCki


==================== Asm code ====================
2018-03-16 16:07:31.204304979 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCki_info:
	.quad	_ccCki
	.quad	4
	.quad	399431958558
	.quad	ScChw_srt+16


==================== Asm code ====================
2018-03-16 16:07:31.205425615 UTC

.section .text
.align 8
_ccCkm:
_ccCkm:
	leaq block_ccCkq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq GHC.Real.$fEnumRatio1_closure@gotpcrel(%rip),%rsi
	movq 24(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _ccCkm, .-_ccCkm


==================== Asm code ====================
2018-03-16 16:07:31.206296285 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCkm_info:
	.quad	_ccCkm
	.quad	4
	.quad	399431958558
	.quad	ScChw_srt+16


==================== Asm code ====================
2018-03-16 16:07:31.20734488 UTC

.section .text
.align 8
_ccCkq:
_ccCkq:
	movq 8(%rbp),%rax
	leaq block_ccCku_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
	.size _ccCkq, .-_ccCkq


==================== Asm code ====================
2018-03-16 16:07:31.208265096 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCkq_info:
	.quad	_ccCkq
	.quad	5
	.quad	30064771102
	.quad	ScChw_srt+32


==================== Asm code ====================
2018-03-16 16:07:31.209707517 UTC

.section .text
.align 8
_ccCku:
_ccCku:
	cmpq $1,%rbx
	je _ccCl4
_ccCkW:
	leaq lvl1_rcBZr_closure(%rip),%r14
	leaq lvl_rcBZq_closure(%rip),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccCl7:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_ccCl4:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccCl7
_ccCl6:
	leaq sat_scCgz_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_ccCkX_info(%rip),%rax
	movq %rax,8(%rbp)
	movq 24(%rbp),%r14
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp *GHC.Integer.Type.negateInteger_entry@gotpcrel(%rip)
	.size _ccCku, .-_ccCku


==================== Asm code ====================
2018-03-16 16:07:31.210751854 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCku_info:
	.quad	_ccCku
	.quad	4
	.quad	30064771102
	.quad	ScChw_srt+32


==================== Asm code ====================
2018-03-16 16:07:31.211801082 UTC

.section .text
.align 8
_ccCkX:
_ccCkX:
	movq 24(%rbp),%rax
	leaq block_ccCl1_info(%rip),%rcx
	movq %rcx,24(%rbp)
	movq 8(%rbp),%r8
	movq 16(%rbp),%rdi
	movq %rax,%rsi
	movq %rbx,%r14
	addq $24,%rbp
	jmp $wsimplest'_rcBZs_entry
	.size _ccCkX, .-_ccCkX


==================== Asm code ====================
2018-03-16 16:07:31.212730291 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCkX_info:
	.quad	_ccCkX
	.quad	3
	.quad	4294967326
	.quad	ScChw_srt+48


==================== Asm code ====================
2018-03-16 16:07:31.213766562 UTC

.section .text
.align 8
_ccCl1:
_ccCl1:
	leaq block_ccCl3_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.negateInteger_entry@gotpcrel(%rip)
	.size _ccCl1, .-_ccCl1


==================== Asm code ====================
2018-03-16 16:07:31.214660955 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCl1_info:
	.quad	_ccCl1
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:31.215602986 UTC

.section .text
.align 8
_ccCl3:
_ccCl3:
	movq 8(%rbp),%r14
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccCl3, .-_ccCl3


==================== Asm code ====================
2018-03-16 16:07:31.216480338 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCl3_info:
	.quad	_ccCl3
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:31.222028626 UTC

.section .data
.align 8
.align 1
.globl Data.Ratio.$wapproxRational_closure
.type Data.Ratio.$wapproxRational_closure, @object
Data.Ratio.$wapproxRational_closure:
	.quad	Data.Ratio.$wapproxRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:31.222890531 UTC

.section .text
.align 8
.globl Data.Ratio.$wapproxRational_entry
.type Data.Ratio.$wapproxRational_entry, @object
Data.Ratio.$wapproxRational_entry:
_ccCn7:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ccCnl
_ccCnm:
	leaq block_ccCn5_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Real.$p1RealFrac_entry@gotpcrel(%rip)
_ccCnl:
	leaq Data.Ratio.$wapproxRational_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Ratio.$wapproxRational_entry, .-Data.Ratio.$wapproxRational_entry


==================== Asm code ====================
2018-03-16 16:07:31.223546295 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Ratio.$wapproxRational_info
.type Data.Ratio.$wapproxRational_info, @object
Data.Ratio.$wapproxRational_info:
	.quad	Data.Ratio.$wapproxRational_entry
	.quad	0
	.quad	64424509454
	.quad	12884901911
	.quad	ScChw_srt+72


==================== Asm code ====================
2018-03-16 16:07:31.224239 UTC

.section .text
.align 8
_ccCn5:
_ccCn5:
	leaq block_ccCna_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Real.toRational_entry@gotpcrel(%rip)
	.size _ccCn5, .-_ccCn5


==================== Asm code ====================
2018-03-16 16:07:31.224833502 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCn5_info:
	.quad	_ccCn5
	.quad	2
	.quad	30064771102
	.quad	ScChw_srt+72


==================== Asm code ====================
2018-03-16 16:07:31.225542807 UTC

.section .text
.align 8
_ccCna:
_ccCna:
	leaq block_ccCne_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq %rax,8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,16(%rbp)
	addq $-16,%rbp
	jmp *GHC.Real.toRational_entry@gotpcrel(%rip)
	.size _ccCna, .-_ccCna


==================== Asm code ====================
2018-03-16 16:07:31.226216735 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCna_info:
	.quad	_ccCna
	.quad	2
	.quad	30064771102
	.quad	ScChw_srt+72


==================== Asm code ====================
2018-03-16 16:07:31.226998397 UTC

.section .text
.align 8
_ccCne:
_ccCne:
	leaq block_ccCni_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	movq 7(%rbx),%rbx
	movq %rbx,%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Real.$w$s$c-_entry@gotpcrel(%rip)
	.size _ccCne, .-_ccCne


==================== Asm code ====================
2018-03-16 16:07:31.227653323 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCne_info:
	.quad	_ccCne
	.quad	2
	.quad	30064771102
	.quad	ScChw_srt+72


==================== Asm code ====================
2018-03-16 16:07:31.228359813 UTC

.section .text
.align 8
_ccCni:
_ccCni:
	movq 16(%rbp),%rax
	leaq block_ccCnk_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 8(%rbp),%r8
	movq %rax,%rdi
	movq 24(%rbp),%rsi
	movq %r14,%rax
	movq 32(%rbp),%r14
	movq %rax,24(%rbp)
	movq %rbx,32(%rbp)
	addq $16,%rbp
	jmp *GHC.Real.$w$s$c+_entry@gotpcrel(%rip)
	.size _ccCni, .-_ccCni


==================== Asm code ====================
2018-03-16 16:07:31.229037012 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCni_info:
	.quad	_ccCni
	.quad	4
	.quad	12884901918
	.quad	ScChw_srt+72


==================== Asm code ====================
2018-03-16 16:07:31.229774046 UTC

.section .text
.align 8
_ccCnk:
_ccCnk:
	movq %r14,%r8
	movq %rbx,%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp Data.Ratio.$wsimplest_entry
	.size _ccCnk, .-_ccCnk


==================== Asm code ====================
2018-03-16 16:07:31.230371359 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCnk_info:
	.quad	_ccCnk
	.quad	2
	.quad	4294967326
	.quad	ScChw_srt+72


==================== Asm code ====================
2018-03-16 16:07:31.23366398 UTC

.section .data
.align 8
.align 1
.globl Data.Ratio.approxRational_closure
.type Data.Ratio.approxRational_closure, @object
Data.Ratio.approxRational_closure:
	.quad	Data.Ratio.approxRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:31.234462347 UTC

.section .text
.align 8
.globl Data.Ratio.approxRational_entry
.type Data.Ratio.approxRational_entry, @object
Data.Ratio.approxRational_entry:
_ccCo5:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccCo6
_ccCo7:
	leaq block_ccCo2_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp Data.Ratio.$wapproxRational_entry
_ccCo6:
	leaq Data.Ratio.approxRational_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.Ratio.approxRational_entry, .-Data.Ratio.approxRational_entry


==================== Asm code ====================
2018-03-16 16:07:31.235122263 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.Ratio.approxRational_info
.type Data.Ratio.approxRational_info, @object
Data.Ratio.approxRational_info:
	.quad	Data.Ratio.approxRational_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	ScChw_srt+96


==================== Asm code ====================
2018-03-16 16:07:31.235899881 UTC

.section .text
.align 8
_ccCo2:
_ccCo2:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccCoa
_ccCo9:
	movq GHC.Real.:%_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccCoa:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccCo2, .-_ccCo2


==================== Asm code ====================
2018-03-16 16:07:31.236557589 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccCo2_info:
	.quad	_ccCo2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:31.238293824 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Ratio.$trModule4_bytes
.type Data.Ratio.$trModule4_bytes, @object
Data.Ratio.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:07:31.240495901 UTC

.section .data
.align 8
.align 1
.globl Data.Ratio.$trModule3_closure
.type Data.Ratio.$trModule3_closure, @object
Data.Ratio.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.Ratio.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:07:31.242185719 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.Ratio.$trModule2_bytes
.type Data.Ratio.$trModule2_bytes, @object
Data.Ratio.$trModule2_bytes:
	.asciz "Data.Ratio"


==================== Asm code ====================
2018-03-16 16:07:31.243896838 UTC

.section .data
.align 8
.align 1
.globl Data.Ratio.$trModule1_closure
.type Data.Ratio.$trModule1_closure, @object
Data.Ratio.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.Ratio.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:07:31.245605099 UTC

.section .data
.align 8
.align 1
.globl Data.Ratio.$trModule_closure
.type Data.Ratio.$trModule_closure, @object
Data.Ratio.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	Data.Ratio.$trModule3_closure+1
	.quad	Data.Ratio.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:31.247463835 UTC

.section .data.rel.ro
.align 8
.align 1
ScChw_srt:
	.quad	sat_scCfY_closure
	.quad	GHC.Integer.Type.plusInteger_closure
	.quad	GHC.Integer.Type.timesInteger_closure
	.quad	GHC.Real.divZeroError_closure
	.quad	lvl_rcBZq_closure
	.quad	lvl1_rcBZr_closure
	.quad	$wsimplest'_rcBZs_closure
	.quad	GHC.Real.$w$s$ccompare_closure
	.quad	GHC.Real.$fEnumRatio1_closure
	.quad	Data.Ratio.$wsimplest_closure
	.quad	GHC.Real.$w$s$c+_closure
	.quad	GHC.Real.$w$s$c-_closure
	.quad	Data.Ratio.$wapproxRational_closure
	.quad	Data.Ratio.approxRational_closure

