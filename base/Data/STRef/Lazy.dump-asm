
==================== Asm code ====================
2018-03-16 16:07:34.165732608 UTC

.section .data
.align 8
.align 1
.globl Data.STRef.Lazy.newSTRef1_closure
.type Data.STRef.Lazy.newSTRef1_closure, @object
Data.STRef.Lazy.newSTRef1_closure:
	.quad	Data.STRef.Lazy.newSTRef1_info


==================== Asm code ====================
2018-03-16 16:07:34.16664263 UTC

.section .text
.align 8
.globl Data.STRef.Lazy.newSTRef1_entry
.type Data.STRef.Lazy.newSTRef1_entry, @object
Data.STRef.Lazy.newSTRef1_entry:
_ccELm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccELu
_ccELv:
	movq $block_ccELj_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccELj
_ccELk:
	movq (%rbx),%rax
	jmp *(%rax)
_ccELu:
	movl $Data.STRef.Lazy.newSTRef1_closure,%ebx
	jmp *-8(%r13)
	.size Data.STRef.Lazy.newSTRef1_entry, .-Data.STRef.Lazy.newSTRef1_entry


==================== Asm code ====================
2018-03-16 16:07:34.167317574 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.STRef.Lazy.newSTRef1_info
.type Data.STRef.Lazy.newSTRef1_info, @object
Data.STRef.Lazy.newSTRef1_info:
	.quad	Data.STRef.Lazy.newSTRef1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:34.167972985 UTC

.section .text
.align 8
_ccELj:
_ccELj:
	movq 8(%rbp),%rax
	movq $block_ccELp_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	jmp stg_newMutVar#
	.size _ccELj, .-_ccELj


==================== Asm code ====================
2018-03-16 16:07:34.16861157 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccELj_info:
	.quad	_ccELj
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:34.170571397 UTC

.section .text
.align 8
_ccELp:
_ccELp:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccELz
_ccELy:
	movq $Control.Monad.ST.Lazy.Imp.S#_con_info,-48(%r12)
	movq $GHC.STRef.STRef_con_info,-32(%r12)
	movq %rbx,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccELz:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccELp, .-_ccELp


==================== Asm code ====================
2018-03-16 16:07:34.171286217 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccELp_info:
	.quad	_ccELp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:34.173540462 UTC

.section .data
.align 8
.align 1
.globl Data.STRef.Lazy.newSTRef_closure
.type Data.STRef.Lazy.newSTRef_closure, @object
Data.STRef.Lazy.newSTRef_closure:
	.quad	Data.STRef.Lazy.newSTRef_info


==================== Asm code ====================
2018-03-16 16:07:34.17419878 UTC

.section .text
.align 8
.globl Data.STRef.Lazy.newSTRef_entry
.type Data.STRef.Lazy.newSTRef_entry, @object
Data.STRef.Lazy.newSTRef_entry:
_ccELU:
	jmp Data.STRef.Lazy.newSTRef1_entry
	.size Data.STRef.Lazy.newSTRef_entry, .-Data.STRef.Lazy.newSTRef_entry


==================== Asm code ====================
2018-03-16 16:07:34.174804608 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.STRef.Lazy.newSTRef_info
.type Data.STRef.Lazy.newSTRef_info, @object
Data.STRef.Lazy.newSTRef_info:
	.quad	Data.STRef.Lazy.newSTRef_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:34.178302857 UTC

.section .data
.align 8
.align 1
.globl Data.STRef.Lazy.readSTRef1_closure
.type Data.STRef.Lazy.readSTRef1_closure, @object
Data.STRef.Lazy.readSTRef1_closure:
	.quad	Data.STRef.Lazy.readSTRef1_info


==================== Asm code ====================
2018-03-16 16:07:34.179053436 UTC

.section .text
.align 8
.globl Data.STRef.Lazy.readSTRef1_entry
.type Data.STRef.Lazy.readSTRef1_entry, @object
Data.STRef.Lazy.readSTRef1_entry:
_ccEM8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEMi
_ccEMj:
	movq $block_ccEM5_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccEM5
_ccEM6:
	movq (%rbx),%rax
	jmp *(%rax)
_ccEMi:
	movl $Data.STRef.Lazy.readSTRef1_closure,%ebx
	jmp *-8(%r13)
	.size Data.STRef.Lazy.readSTRef1_entry, .-Data.STRef.Lazy.readSTRef1_entry


==================== Asm code ====================
2018-03-16 16:07:34.179739989 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.STRef.Lazy.readSTRef1_info
.type Data.STRef.Lazy.readSTRef1_info, @object
Data.STRef.Lazy.readSTRef1_info:
	.quad	Data.STRef.Lazy.readSTRef1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:34.180471672 UTC

.section .text
.align 8
_ccEM5:
_ccEM5:
	movq 8(%rbp),%rax
	movq $block_ccEMb_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _ccEMb
_ccEMc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccEM5, .-_ccEM5


==================== Asm code ====================
2018-03-16 16:07:34.181066915 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEM5_info:
	.quad	_ccEM5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:34.182138219 UTC

.section .text
.align 8
_ccEMb:
_ccEMb:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccEMn
_ccEMm:
	movq 7(%rbx),%rax
	movq 8(%rax),%rax
	movq $Control.Monad.ST.Lazy.Imp.S#_con_info,-32(%r12)
	movq $(,)_con_info,-16(%r12)
	movq %rax,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccEMn:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccEMb, .-_ccEMb


==================== Asm code ====================
2018-03-16 16:07:34.182822914 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEMb_info:
	.quad	_ccEMb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:34.185020536 UTC

.section .data
.align 8
.align 1
.globl Data.STRef.Lazy.readSTRef_closure
.type Data.STRef.Lazy.readSTRef_closure, @object
Data.STRef.Lazy.readSTRef_closure:
	.quad	Data.STRef.Lazy.readSTRef_info


==================== Asm code ====================
2018-03-16 16:07:34.185692931 UTC

.section .text
.align 8
.globl Data.STRef.Lazy.readSTRef_entry
.type Data.STRef.Lazy.readSTRef_entry, @object
Data.STRef.Lazy.readSTRef_entry:
_ccEMK:
	jmp Data.STRef.Lazy.readSTRef1_entry
	.size Data.STRef.Lazy.readSTRef_entry, .-Data.STRef.Lazy.readSTRef_entry


==================== Asm code ====================
2018-03-16 16:07:34.186297572 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.STRef.Lazy.readSTRef_info
.type Data.STRef.Lazy.readSTRef_info, @object
Data.STRef.Lazy.readSTRef_info:
	.quad	Data.STRef.Lazy.readSTRef_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:34.190125539 UTC

.section .data
.align 8
.align 1
.globl Data.STRef.Lazy.writeSTRef1_closure
.type Data.STRef.Lazy.writeSTRef1_closure, @object
Data.STRef.Lazy.writeSTRef1_closure:
	.quad	Data.STRef.Lazy.writeSTRef1_info


==================== Asm code ====================
2018-03-16 16:07:34.190947091 UTC

.section .text
.align 8
.globl Data.STRef.Lazy.writeSTRef1_entry
.type Data.STRef.Lazy.writeSTRef1_entry, @object
Data.STRef.Lazy.writeSTRef1_entry:
_ccEMY:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccENb
_ccENc:
	movq $block_ccEMV_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ccEMV
_ccEMW:
	movq (%rbx),%rax
	jmp *(%rax)
_ccENb:
	movl $Data.STRef.Lazy.writeSTRef1_closure,%ebx
	jmp *-8(%r13)
	.size Data.STRef.Lazy.writeSTRef1_entry, .-Data.STRef.Lazy.writeSTRef1_entry


==================== Asm code ====================
2018-03-16 16:07:34.191663771 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.STRef.Lazy.writeSTRef1_info
.type Data.STRef.Lazy.writeSTRef1_info, @object
Data.STRef.Lazy.writeSTRef1_info:
	.quad	Data.STRef.Lazy.writeSTRef1_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:34.192392447 UTC

.section .text
.align 8
_ccEMV:
_ccEMV:
	movq 8(%rbp),%rax
	movq $block_ccEN1_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _ccEN1
_ccEN2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccEMV, .-_ccEMV


==================== Asm code ====================
2018-03-16 16:07:34.193000709 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEMV_info:
	.quad	_ccEMV
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:34.194143188 UTC

.section .text
.align 8
_ccEN1:
_ccEN1:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccENg
_ccENf:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movq %rax,8(%rbx)
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $Control.Monad.ST.Lazy.Imp.S#_con_info,-32(%r12)
	movq $(,)_con_info,-16(%r12)
	movq $GHC.Tuple.()_closure+1,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccENg:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccEN1, .-_ccEN1


==================== Asm code ====================
2018-03-16 16:07:34.194872644 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEN1_info:
	.quad	_ccEN1
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:34.197082402 UTC

.section .data
.align 8
.align 1
.globl Data.STRef.Lazy.writeSTRef_closure
.type Data.STRef.Lazy.writeSTRef_closure, @object
Data.STRef.Lazy.writeSTRef_closure:
	.quad	Data.STRef.Lazy.writeSTRef_info


==================== Asm code ====================
2018-03-16 16:07:34.197734643 UTC

.section .text
.align 8
.globl Data.STRef.Lazy.writeSTRef_entry
.type Data.STRef.Lazy.writeSTRef_entry, @object
Data.STRef.Lazy.writeSTRef_entry:
_ccEND:
	jmp Data.STRef.Lazy.writeSTRef1_entry
	.size Data.STRef.Lazy.writeSTRef_entry, .-Data.STRef.Lazy.writeSTRef_entry


==================== Asm code ====================
2018-03-16 16:07:34.19836486 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.STRef.Lazy.writeSTRef_info
.type Data.STRef.Lazy.writeSTRef_info, @object
Data.STRef.Lazy.writeSTRef_info:
	.quad	Data.STRef.Lazy.writeSTRef_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:34.202254293 UTC

.section .data
.align 8
.align 1
.globl Data.STRef.Lazy.modifySTRef1_closure
.type Data.STRef.Lazy.modifySTRef1_closure, @object
Data.STRef.Lazy.modifySTRef1_closure:
	.quad	Data.STRef.Lazy.modifySTRef1_info


==================== Asm code ====================
2018-03-16 16:07:34.203068129 UTC

.section .text
.align 8
.globl Data.STRef.Lazy.modifySTRef1_entry
.type Data.STRef.Lazy.modifySTRef1_entry, @object
Data.STRef.Lazy.modifySTRef1_entry:
_ccENR:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEO5
_ccEO6:
	movq $block_ccENO_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ccENO
_ccENP:
	movq (%rbx),%rax
	jmp *(%rax)
_ccEO5:
	movl $Data.STRef.Lazy.modifySTRef1_closure,%ebx
	jmp *-8(%r13)
	.size Data.STRef.Lazy.modifySTRef1_entry, .-Data.STRef.Lazy.modifySTRef1_entry


==================== Asm code ====================
2018-03-16 16:07:34.2037882 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.STRef.Lazy.modifySTRef1_info
.type Data.STRef.Lazy.modifySTRef1_info, @object
Data.STRef.Lazy.modifySTRef1_info:
	.quad	Data.STRef.Lazy.modifySTRef1_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:34.204481348 UTC

.section .text
.align 8
_ccENO:
_ccENO:
	movq 8(%rbp),%rax
	movq $block_ccENU_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _ccENU
_ccENV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccENO, .-_ccENO


==================== Asm code ====================
2018-03-16 16:07:34.205111033 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccENO_info:
	.quad	_ccENO
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:34.206267976 UTC

.section .text
.align 8
_ccENU:
_ccENU:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccEOa
_ccEO9:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq $stg_ap_2_upd_info,-64(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-48(%r12)
	movq %rbx,-40(%r12)
	leaq -64(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $Control.Monad.ST.Lazy.Imp.S#_con_info,-32(%r12)
	movq $(,)_con_info,-16(%r12)
	movq $GHC.Tuple.()_closure+1,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccEOa:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccENU, .-_ccENU


==================== Asm code ====================
2018-03-16 16:07:34.207784975 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccENU_info:
	.quad	_ccENU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:34.210093683 UTC

.section .data
.align 8
.align 1
.globl Data.STRef.Lazy.modifySTRef_closure
.type Data.STRef.Lazy.modifySTRef_closure, @object
Data.STRef.Lazy.modifySTRef_closure:
	.quad	Data.STRef.Lazy.modifySTRef_info


==================== Asm code ====================
2018-03-16 16:07:34.210722287 UTC

.section .text
.align 8
.globl Data.STRef.Lazy.modifySTRef_entry
.type Data.STRef.Lazy.modifySTRef_entry, @object
Data.STRef.Lazy.modifySTRef_entry:
_ccEOz:
	jmp Data.STRef.Lazy.modifySTRef1_entry
	.size Data.STRef.Lazy.modifySTRef_entry, .-Data.STRef.Lazy.modifySTRef_entry


==================== Asm code ====================
2018-03-16 16:07:34.211294257 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.STRef.Lazy.modifySTRef_info
.type Data.STRef.Lazy.modifySTRef_info, @object
Data.STRef.Lazy.modifySTRef_info:
	.quad	Data.STRef.Lazy.modifySTRef_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:34.213010547 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.STRef.Lazy.$trModule4_bytes
.type Data.STRef.Lazy.$trModule4_bytes, @object
Data.STRef.Lazy.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:07:34.214808766 UTC

.section .data
.align 8
.align 1
.globl Data.STRef.Lazy.$trModule3_closure
.type Data.STRef.Lazy.$trModule3_closure, @object
Data.STRef.Lazy.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.STRef.Lazy.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:07:34.216584073 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.STRef.Lazy.$trModule2_bytes
.type Data.STRef.Lazy.$trModule2_bytes, @object
Data.STRef.Lazy.$trModule2_bytes:
	.asciz "Data.STRef.Lazy"


==================== Asm code ====================
2018-03-16 16:07:34.218655392 UTC

.section .data
.align 8
.align 1
.globl Data.STRef.Lazy.$trModule1_closure
.type Data.STRef.Lazy.$trModule1_closure, @object
Data.STRef.Lazy.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.STRef.Lazy.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:07:34.220409516 UTC

.section .data
.align 8
.align 1
.globl Data.STRef.Lazy.$trModule_closure
.type Data.STRef.Lazy.$trModule_closure, @object
Data.STRef.Lazy.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	Data.STRef.Lazy.$trModule3_closure+1
	.quad	Data.STRef.Lazy.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:34.222145168 UTC

.section .data.rel.ro
.align 8
.align 1
ScEJ6_srt:


==================== Asm code ====================
2018-03-16 16:07:34.311442984 UTC

.section .data
.align 8
.align 1
.globl Data.STRef.Lazy.newSTRef1_closure
.type Data.STRef.Lazy.newSTRef1_closure, @object
Data.STRef.Lazy.newSTRef1_closure:
	.quad	Data.STRef.Lazy.newSTRef1_info


==================== Asm code ====================
2018-03-16 16:07:34.312354137 UTC

.section .text
.align 8
.globl Data.STRef.Lazy.newSTRef1_entry
.type Data.STRef.Lazy.newSTRef1_entry, @object
Data.STRef.Lazy.newSTRef1_entry:
_ccEPy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEPG
_ccEPH:
	leaq block_ccEPv_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccEPv
_ccEPw:
	movq (%rbx),%rax
	jmp *(%rax)
_ccEPG:
	leaq Data.STRef.Lazy.newSTRef1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.STRef.Lazy.newSTRef1_entry, .-Data.STRef.Lazy.newSTRef1_entry


==================== Asm code ====================
2018-03-16 16:07:34.313045762 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.STRef.Lazy.newSTRef1_info
.type Data.STRef.Lazy.newSTRef1_info, @object
Data.STRef.Lazy.newSTRef1_info:
	.quad	Data.STRef.Lazy.newSTRef1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:34.31377669 UTC

.section .text
.align 8
_ccEPv:
_ccEPv:
	movq 8(%rbp),%rax
	leaq block_ccEPB_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _ccEPv, .-_ccEPv


==================== Asm code ====================
2018-03-16 16:07:34.31443543 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEPv_info:
	.quad	_ccEPv
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:34.315203346 UTC

.section .text
.align 8
_ccEPB:
_ccEPB:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccEPL
_ccEPK:
	movq Control.Monad.ST.Lazy.Imp.S#_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq GHC.STRef.STRef_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccEPL:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccEPB, .-_ccEPB


==================== Asm code ====================
2018-03-16 16:07:34.315936303 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEPB_info:
	.quad	_ccEPB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:34.318277152 UTC

.section .data
.align 8
.align 1
.globl Data.STRef.Lazy.newSTRef_closure
.type Data.STRef.Lazy.newSTRef_closure, @object
Data.STRef.Lazy.newSTRef_closure:
	.quad	Data.STRef.Lazy.newSTRef_info


==================== Asm code ====================
2018-03-16 16:07:34.318926218 UTC

.section .text
.align 8
.globl Data.STRef.Lazy.newSTRef_entry
.type Data.STRef.Lazy.newSTRef_entry, @object
Data.STRef.Lazy.newSTRef_entry:
_ccEQb:
	jmp Data.STRef.Lazy.newSTRef1_entry
	.size Data.STRef.Lazy.newSTRef_entry, .-Data.STRef.Lazy.newSTRef_entry


==================== Asm code ====================
2018-03-16 16:07:34.319585932 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.STRef.Lazy.newSTRef_info
.type Data.STRef.Lazy.newSTRef_info, @object
Data.STRef.Lazy.newSTRef_info:
	.quad	Data.STRef.Lazy.newSTRef_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:34.323982509 UTC

.section .data
.align 8
.align 1
.globl Data.STRef.Lazy.readSTRef1_closure
.type Data.STRef.Lazy.readSTRef1_closure, @object
Data.STRef.Lazy.readSTRef1_closure:
	.quad	Data.STRef.Lazy.readSTRef1_info


==================== Asm code ====================
2018-03-16 16:07:34.324782874 UTC

.section .text
.align 8
.globl Data.STRef.Lazy.readSTRef1_entry
.type Data.STRef.Lazy.readSTRef1_entry, @object
Data.STRef.Lazy.readSTRef1_entry:
_ccEQp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEQz
_ccEQA:
	leaq block_ccEQm_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccEQm
_ccEQn:
	movq (%rbx),%rax
	jmp *(%rax)
_ccEQz:
	leaq Data.STRef.Lazy.readSTRef1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.STRef.Lazy.readSTRef1_entry, .-Data.STRef.Lazy.readSTRef1_entry


==================== Asm code ====================
2018-03-16 16:07:34.32552407 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.STRef.Lazy.readSTRef1_info
.type Data.STRef.Lazy.readSTRef1_info, @object
Data.STRef.Lazy.readSTRef1_info:
	.quad	Data.STRef.Lazy.readSTRef1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:34.326246714 UTC

.section .text
.align 8
_ccEQm:
_ccEQm:
	movq 8(%rbp),%rax
	leaq block_ccEQs_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _ccEQs
_ccEQt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccEQm, .-_ccEQm


==================== Asm code ====================
2018-03-16 16:07:34.326852554 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEQm_info:
	.quad	_ccEQm
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:34.327623555 UTC

.section .text
.align 8
_ccEQs:
_ccEQs:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccEQE
_ccEQD:
	movq 7(%rbx),%rax
	movq 8(%rax),%rax
	movq Control.Monad.ST.Lazy.Imp.S#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccEQE:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccEQs, .-_ccEQs


==================== Asm code ====================
2018-03-16 16:07:34.328291808 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEQs_info:
	.quad	_ccEQs
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:34.33067764 UTC

.section .data
.align 8
.align 1
.globl Data.STRef.Lazy.readSTRef_closure
.type Data.STRef.Lazy.readSTRef_closure, @object
Data.STRef.Lazy.readSTRef_closure:
	.quad	Data.STRef.Lazy.readSTRef_info


==================== Asm code ====================
2018-03-16 16:07:34.331266534 UTC

.section .text
.align 8
.globl Data.STRef.Lazy.readSTRef_entry
.type Data.STRef.Lazy.readSTRef_entry, @object
Data.STRef.Lazy.readSTRef_entry:
_ccER5:
	jmp Data.STRef.Lazy.readSTRef1_entry
	.size Data.STRef.Lazy.readSTRef_entry, .-Data.STRef.Lazy.readSTRef_entry


==================== Asm code ====================
2018-03-16 16:07:34.331836457 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.STRef.Lazy.readSTRef_info
.type Data.STRef.Lazy.readSTRef_info, @object
Data.STRef.Lazy.readSTRef_info:
	.quad	Data.STRef.Lazy.readSTRef_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:34.335655242 UTC

.section .data
.align 8
.align 1
.globl Data.STRef.Lazy.writeSTRef1_closure
.type Data.STRef.Lazy.writeSTRef1_closure, @object
Data.STRef.Lazy.writeSTRef1_closure:
	.quad	Data.STRef.Lazy.writeSTRef1_info


==================== Asm code ====================
2018-03-16 16:07:34.336443925 UTC

.section .text
.align 8
.globl Data.STRef.Lazy.writeSTRef1_entry
.type Data.STRef.Lazy.writeSTRef1_entry, @object
Data.STRef.Lazy.writeSTRef1_entry:
_ccERj:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccERw
_ccERx:
	leaq block_ccERg_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ccERg
_ccERh:
	movq (%rbx),%rax
	jmp *(%rax)
_ccERw:
	leaq Data.STRef.Lazy.writeSTRef1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.STRef.Lazy.writeSTRef1_entry, .-Data.STRef.Lazy.writeSTRef1_entry


==================== Asm code ====================
2018-03-16 16:07:34.337108657 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.STRef.Lazy.writeSTRef1_info
.type Data.STRef.Lazy.writeSTRef1_info, @object
Data.STRef.Lazy.writeSTRef1_info:
	.quad	Data.STRef.Lazy.writeSTRef1_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:34.337835423 UTC

.section .text
.align 8
_ccERg:
_ccERg:
	movq 8(%rbp),%rax
	leaq block_ccERm_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _ccERm
_ccERn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccERg, .-_ccERg


==================== Asm code ====================
2018-03-16 16:07:34.338478008 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccERg_info:
	.quad	_ccERg
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:34.339293926 UTC

.section .text
.align 8
_ccERm:
_ccERm:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccERB
_ccERA:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movq %rax,8(%rbx)
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq Control.Monad.ST.Lazy.Imp.S#_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccERB:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccERm, .-_ccERm


==================== Asm code ====================
2018-03-16 16:07:34.340075777 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccERm_info:
	.quad	_ccERm
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:34.34276698 UTC

.section .data
.align 8
.align 1
.globl Data.STRef.Lazy.writeSTRef_closure
.type Data.STRef.Lazy.writeSTRef_closure, @object
Data.STRef.Lazy.writeSTRef_closure:
	.quad	Data.STRef.Lazy.writeSTRef_info


==================== Asm code ====================
2018-03-16 16:07:34.343384623 UTC

.section .text
.align 8
.globl Data.STRef.Lazy.writeSTRef_entry
.type Data.STRef.Lazy.writeSTRef_entry, @object
Data.STRef.Lazy.writeSTRef_entry:
_ccES4:
	jmp Data.STRef.Lazy.writeSTRef1_entry
	.size Data.STRef.Lazy.writeSTRef_entry, .-Data.STRef.Lazy.writeSTRef_entry


==================== Asm code ====================
2018-03-16 16:07:34.343994402 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.STRef.Lazy.writeSTRef_info
.type Data.STRef.Lazy.writeSTRef_info, @object
Data.STRef.Lazy.writeSTRef_info:
	.quad	Data.STRef.Lazy.writeSTRef_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:34.347947913 UTC

.section .data
.align 8
.align 1
.globl Data.STRef.Lazy.modifySTRef1_closure
.type Data.STRef.Lazy.modifySTRef1_closure, @object
Data.STRef.Lazy.modifySTRef1_closure:
	.quad	Data.STRef.Lazy.modifySTRef1_info


==================== Asm code ====================
2018-03-16 16:07:34.348764484 UTC

.section .text
.align 8
.globl Data.STRef.Lazy.modifySTRef1_entry
.type Data.STRef.Lazy.modifySTRef1_entry, @object
Data.STRef.Lazy.modifySTRef1_entry:
_ccESi:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccESw
_ccESx:
	leaq block_ccESf_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ccESf
_ccESg:
	movq (%rbx),%rax
	jmp *(%rax)
_ccESw:
	leaq Data.STRef.Lazy.modifySTRef1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Data.STRef.Lazy.modifySTRef1_entry, .-Data.STRef.Lazy.modifySTRef1_entry


==================== Asm code ====================
2018-03-16 16:07:34.349488397 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.STRef.Lazy.modifySTRef1_info
.type Data.STRef.Lazy.modifySTRef1_info, @object
Data.STRef.Lazy.modifySTRef1_info:
	.quad	Data.STRef.Lazy.modifySTRef1_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:34.350255559 UTC

.section .text
.align 8
_ccESf:
_ccESf:
	movq 8(%rbp),%rax
	leaq block_ccESl_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _ccESl
_ccESm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccESf, .-_ccESf


==================== Asm code ====================
2018-03-16 16:07:34.350890677 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccESf_info:
	.quad	_ccESf
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:34.351784429 UTC

.section .text
.align 8
_ccESl:
_ccESl:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccESB
_ccESA:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-64(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-48(%r12)
	movq %rbx,-40(%r12)
	leaq -64(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq Control.Monad.ST.Lazy.Imp.S#_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccESB:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccESl, .-_ccESl


==================== Asm code ====================
2018-03-16 16:07:34.352583329 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccESl_info:
	.quad	_ccESl
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:34.354869933 UTC

.section .data
.align 8
.align 1
.globl Data.STRef.Lazy.modifySTRef_closure
.type Data.STRef.Lazy.modifySTRef_closure, @object
Data.STRef.Lazy.modifySTRef_closure:
	.quad	Data.STRef.Lazy.modifySTRef_info


==================== Asm code ====================
2018-03-16 16:07:34.355474184 UTC

.section .text
.align 8
.globl Data.STRef.Lazy.modifySTRef_entry
.type Data.STRef.Lazy.modifySTRef_entry, @object
Data.STRef.Lazy.modifySTRef_entry:
_ccET7:
	jmp Data.STRef.Lazy.modifySTRef1_entry
	.size Data.STRef.Lazy.modifySTRef_entry, .-Data.STRef.Lazy.modifySTRef_entry


==================== Asm code ====================
2018-03-16 16:07:34.35609261 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Data.STRef.Lazy.modifySTRef_info
.type Data.STRef.Lazy.modifySTRef_info, @object
Data.STRef.Lazy.modifySTRef_info:
	.quad	Data.STRef.Lazy.modifySTRef_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:34.358362056 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.STRef.Lazy.$trModule4_bytes
.type Data.STRef.Lazy.$trModule4_bytes, @object
Data.STRef.Lazy.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:07:34.36011272 UTC

.section .data
.align 8
.align 1
.globl Data.STRef.Lazy.$trModule3_closure
.type Data.STRef.Lazy.$trModule3_closure, @object
Data.STRef.Lazy.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.STRef.Lazy.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:07:34.361836884 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Data.STRef.Lazy.$trModule2_bytes
.type Data.STRef.Lazy.$trModule2_bytes, @object
Data.STRef.Lazy.$trModule2_bytes:
	.asciz "Data.STRef.Lazy"


==================== Asm code ====================
2018-03-16 16:07:34.363548003 UTC

.section .data
.align 8
.align 1
.globl Data.STRef.Lazy.$trModule1_closure
.type Data.STRef.Lazy.$trModule1_closure, @object
Data.STRef.Lazy.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Data.STRef.Lazy.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:07:34.365317644 UTC

.section .data
.align 8
.align 1
.globl Data.STRef.Lazy.$trModule_closure
.type Data.STRef.Lazy.$trModule_closure, @object
Data.STRef.Lazy.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	Data.STRef.Lazy.$trModule3_closure+1
	.quad	Data.STRef.Lazy.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:34.366959966 UTC

.section .data.rel.ro
.align 8
.align 1
ScETj_srt:

