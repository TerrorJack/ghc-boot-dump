
==================== Raw Cmm ====================
2018-03-16 16:07:30.561052876 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:07:30.563265747 UTC

[section ""data" . Data.STRef.modifySTRef1_closure" {
     Data.STRef.modifySTRef1_closure:
         const Data.STRef.modifySTRef1_info;
 },
 Data.STRef.modifySTRef1_entry() //  [R2, R3]
         { []
         }
     {offset
       ccByK: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccByL; else goto ccByM;
       ccByL: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.STRef.modifySTRef1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccByM: // global
           I64[Sp - 16] = block_ccByH_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto ucByW; else goto ccByI;
       ucByW: // global
           call _ccByH(R1) args: 0, res: 0, upd: 0;
       ccByI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.STRef.modifySTRef1_info" {
     Data.STRef.modifySTRef1_info:
         const Data.STRef.modifySTRef1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _ccByH() //  [R1]
         { []
         }
     {offset
       ccByH: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto ccByR; else goto ccByQ;
       ccByR: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccByQ: // global
           _scBwC::P64 = P64[R1 + 7];
           _scBwF::P64 = P64[_scBwC::P64 + 8];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = _scBwF::P64;
           call MO_WriteBarrier();
           P64[_scBwC::P64 + 8] = Hp - 24;
           call "ccall" arg hints:  [PtrHint,
                                     PtrHint]  result hints:  [] dirty_MUT_VAR(BaseReg, _scBwC::P64);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccByH_info" {
     block_ccByH_info:
         const _ccByH;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:30.569378185 UTC

[section ""data" . Data.STRef.modifySTRef_closure" {
     Data.STRef.modifySTRef_closure:
         const Data.STRef.modifySTRef_info;
 },
 Data.STRef.modifySTRef_entry() //  [R2, R3]
         { []
         }
     {offset
       ccBze: // global
           R3 = R3;
           R2 = R2;
           call Data.STRef.modifySTRef1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.STRef.modifySTRef_info" {
     Data.STRef.modifySTRef_info:
         const Data.STRef.modifySTRef_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:30.573525438 UTC

[section ""data" . Data.STRef.modifySTRef'1_closure" {
     Data.STRef.modifySTRef'1_closure:
         const Data.STRef.modifySTRef'1_info;
 },
 Data.STRef.modifySTRef'1_entry() //  [R2, R3]
         { []
         }
     {offset
       ccBzs: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccBzt; else goto ccBzu;
       ccBzt: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.STRef.modifySTRef'1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccBzu: // global
           I64[Sp - 16] = block_ccBzp_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto ucBzE; else goto ccBzq;
       ucBzE: // global
           call _ccBzp(R1) args: 0, res: 0, upd: 0;
       ccBzq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.STRef.modifySTRef'1_info" {
     Data.STRef.modifySTRef'1_info:
         const Data.STRef.modifySTRef'1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _ccBzp() //  [R1]
         { []
         }
     {offset
       ccBzp: // global
           I64[Sp] = block_ccBzx_info;
           _scBwM::P64 = P64[R1 + 7];
           R2 = P64[_scBwM::P64 + 8];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _scBwM::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_ccBzp_info" {
     block_ccBzp_info:
         const _ccBzp;
         const 1;
         const 30;
 },
 _ccBzx() //  [R1]
         { []
         }
     {offset
       ccBzx: // global
           _scBwM::P64 = P64[Sp + 8];
           call MO_WriteBarrier();
           P64[_scBwM::P64 + 8] = R1;
           call "ccall" arg hints:  [PtrHint,
                                     PtrHint]  result hints:  [] dirty_MUT_VAR(BaseReg, _scBwM::P64);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccBzx_info" {
     block_ccBzx_info:
         const _ccBzx;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:30.581170132 UTC

[section ""data" . Data.STRef.modifySTRef'_closure" {
     Data.STRef.modifySTRef'_closure:
         const Data.STRef.modifySTRef'_info;
 },
 Data.STRef.modifySTRef'_entry() //  [R2, R3]
         { []
         }
     {offset
       ccBzX: // global
           R3 = R3;
           R2 = R2;
           call Data.STRef.modifySTRef'1_entry(R3,
                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.STRef.modifySTRef'_info" {
     Data.STRef.modifySTRef'_info:
         const Data.STRef.modifySTRef'_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:30.584188785 UTC

[section ""cstring" . Data.STRef.$trModule4_bytes" {
     Data.STRef.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:30.586330301 UTC

[section ""data" . Data.STRef.$trModule3_closure" {
     Data.STRef.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.STRef.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:30.588032255 UTC

[section ""cstring" . Data.STRef.$trModule2_bytes" {
     Data.STRef.$trModule2_bytes:
         I8[] [68,97,116,97,46,83,84,82,101,102]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:30.589738164 UTC

[section ""data" . Data.STRef.$trModule1_closure" {
     Data.STRef.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.STRef.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:30.591455851 UTC

[section ""data" . Data.STRef.$trModule_closure" {
     Data.STRef.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.STRef.$trModule3_closure+1;
         const Data.STRef.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:30.59313914 UTC

[section ""relreadonly" . ScBxK_srt" { ScBxK_srt:
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:30.637461791 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:07:30.640389166 UTC

[section ""data" . Data.STRef.modifySTRef1_closure" {
     Data.STRef.modifySTRef1_closure:
         const Data.STRef.modifySTRef1_info;
 },
 Data.STRef.modifySTRef1_entry() //  [R2, R3]
         { []
         }
     {offset
       ccBAB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccBAC; else goto ccBAD;
       ccBAC: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.STRef.modifySTRef1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccBAD: // global
           I64[Sp - 16] = block_ccBAy_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto ucBAN; else goto ccBAz;
       ucBAN: // global
           call _ccBAy(R1) args: 0, res: 0, upd: 0;
       ccBAz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.STRef.modifySTRef1_info" {
     Data.STRef.modifySTRef1_info:
         const Data.STRef.modifySTRef1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _ccBAy() //  [R1]
         { []
         }
     {offset
       ccBAy: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto ccBAI; else goto ccBAH;
       ccBAI: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       ccBAH: // global
           _scBAe::P64 = P64[R1 + 7];
           _scBAh::P64 = P64[_scBAe::P64 + 8];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = _scBAh::P64;
           call MO_WriteBarrier();
           P64[_scBAe::P64 + 8] = Hp - 24;
           call "ccall" arg hints:  [PtrHint,
                                     PtrHint]  result hints:  [] dirty_MUT_VAR(BaseReg, _scBAe::P64);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccBAy_info" {
     block_ccBAy_info:
         const _ccBAy;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:30.646221774 UTC

[section ""data" . Data.STRef.modifySTRef_closure" {
     Data.STRef.modifySTRef_closure:
         const Data.STRef.modifySTRef_info;
 },
 Data.STRef.modifySTRef_entry() //  [R2, R3]
         { []
         }
     {offset
       ccBB8: // global
           R3 = R3;
           R2 = R2;
           call Data.STRef.modifySTRef1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.STRef.modifySTRef_info" {
     Data.STRef.modifySTRef_info:
         const Data.STRef.modifySTRef_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:30.650475458 UTC

[section ""data" . Data.STRef.modifySTRef'1_closure" {
     Data.STRef.modifySTRef'1_closure:
         const Data.STRef.modifySTRef'1_info;
 },
 Data.STRef.modifySTRef'1_entry() //  [R2, R3]
         { []
         }
     {offset
       ccBBm: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccBBn; else goto ccBBo;
       ccBBn: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.STRef.modifySTRef'1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccBBo: // global
           I64[Sp - 16] = block_ccBBj_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto ucBBy; else goto ccBBk;
       ucBBy: // global
           call _ccBBj(R1) args: 0, res: 0, upd: 0;
       ccBBk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Data.STRef.modifySTRef'1_info" {
     Data.STRef.modifySTRef'1_info:
         const Data.STRef.modifySTRef'1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _ccBBj() //  [R1]
         { []
         }
     {offset
       ccBBj: // global
           I64[Sp] = block_ccBBr_info;
           _scBAo::P64 = P64[R1 + 7];
           R2 = P64[_scBAo::P64 + 8];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _scBAo::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_ccBBj_info" {
     block_ccBBj_info:
         const _ccBBj;
         const 1;
         const 30;
 },
 _ccBBr() //  [R1]
         { []
         }
     {offset
       ccBBr: // global
           _scBAo::P64 = P64[Sp + 8];
           call MO_WriteBarrier();
           P64[_scBAo::P64 + 8] = R1;
           call "ccall" arg hints:  [PtrHint,
                                     PtrHint]  result hints:  [] dirty_MUT_VAR(BaseReg, _scBAo::P64);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccBBr_info" {
     block_ccBBr_info:
         const _ccBBr;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:30.657288734 UTC

[section ""data" . Data.STRef.modifySTRef'_closure" {
     Data.STRef.modifySTRef'_closure:
         const Data.STRef.modifySTRef'_info;
 },
 Data.STRef.modifySTRef'_entry() //  [R2, R3]
         { []
         }
     {offset
       ccBBU: // global
           R3 = R3;
           R2 = R2;
           call Data.STRef.modifySTRef'1_entry(R3,
                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.STRef.modifySTRef'_info" {
     Data.STRef.modifySTRef'_info:
         const Data.STRef.modifySTRef'_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:30.66042708 UTC

[section ""cstring" . Data.STRef.$trModule4_bytes" {
     Data.STRef.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:30.662104645 UTC

[section ""data" . Data.STRef.$trModule3_closure" {
     Data.STRef.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.STRef.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:30.663822879 UTC

[section ""cstring" . Data.STRef.$trModule2_bytes" {
     Data.STRef.$trModule2_bytes:
         I8[] [68,97,116,97,46,83,84,82,101,102]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:30.665519784 UTC

[section ""data" . Data.STRef.$trModule1_closure" {
     Data.STRef.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.STRef.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:30.667134463 UTC

[section ""data" . Data.STRef.$trModule_closure" {
     Data.STRef.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.STRef.$trModule3_closure+1;
         const Data.STRef.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:30.668817569 UTC

[section ""relreadonly" . ScBC6_srt" { ScBC6_srt:
 }]

