
==================== Raw Cmm ====================
2018-03-16 15:56:19.327968648 UTC

[]


==================== Raw Cmm ====================
2018-03-16 15:56:19.329499734 UTC

[section ""data" . Data.Functor.<$>_closure" {
     Data.Functor.<$>_closure:
         const Data.Functor.<$>_info;
 },
 Data.Functor.<$>_entry() //  [R2]
         { []
         }
     {offset
       c1xBO: // global
           R2 = R2;
           call GHC.Base.fmap_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.<$>_info" {
     Data.Functor.<$>_info:
         const Data.Functor.<$>_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:19.333438638 UTC

[section ""data" . Data.Functor.<&>_closure" {
     Data.Functor.<&>_closure:
         const Data.Functor.<&>_info;
 },
 Data.Functor.<&>_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c1xBZ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c1xC0; else goto c1xC1;
       c1xC0: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.<&>_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c1xC1: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call GHC.Base.fmap_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.<&>_info" {
     Data.Functor.<&>_info:
         const Data.Functor.<&>_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:19.337389911 UTC

[section ""data" . Data.Functor.$>_closure" {
     Data.Functor.$>_closure:
         const Data.Functor.$>_info;
 },
 Data.Functor.$>_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c1xCb: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c1xCc; else goto c1xCd;
       c1xCc: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.$>_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c1xCd: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call GHC.Base.<$_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.$>_info" {
     Data.Functor.$>_info:
         const Data.Functor.$>_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:19.341999271 UTC

[section ""data" . Data.Functor.void_closure" {
     Data.Functor.void_closure:
         const Data.Functor.void_info;
 },
 Data.Functor.void_entry() //  [R2, R3]
         { []
         }
     {offset
       c1xCn: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c1xCo; else goto c1xCp;
       c1xCo: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.void_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c1xCp: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = GHC.Tuple.()_closure+1;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call GHC.Base.<$_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.void_info" {
     Data.Functor.void_info:
         const Data.Functor.void_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:19.345223793 UTC

[section ""cstring" . Data.Functor.$trModule4_bytes" {
     Data.Functor.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:19.347251261 UTC

[section ""data" . Data.Functor.$trModule3_closure" {
     Data.Functor.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:19.34886053 UTC

[section ""cstring" . Data.Functor.$trModule2_bytes" {
     Data.Functor.$trModule2_bytes:
         I8[] [68,97,116,97,46,70,117,110,99,116,111,114]
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:19.350489041 UTC

[section ""data" . Data.Functor.$trModule1_closure" {
     Data.Functor.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:19.352187194 UTC

[section ""data" . Data.Functor.$trModule_closure" {
     Data.Functor.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Functor.$trModule3_closure+1;
         const Data.Functor.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:19.353871137 UTC

[section ""relreadonly" . S1xBh_srt" { S1xBh_srt:
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:19.397854914 UTC

[]


==================== Raw Cmm ====================
2018-03-16 15:56:19.399304153 UTC

[section ""data" . Data.Functor.<$>_closure" {
     Data.Functor.<$>_closure:
         const Data.Functor.<$>_info;
 },
 Data.Functor.<$>_entry() //  [R2]
         { []
         }
     {offset
       c1xCO: // global
           R2 = R2;
           call GHC.Base.fmap_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.<$>_info" {
     Data.Functor.<$>_info:
         const Data.Functor.<$>_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:19.402844113 UTC

[section ""data" . Data.Functor.<&>_closure" {
     Data.Functor.<&>_closure:
         const Data.Functor.<&>_info;
 },
 Data.Functor.<&>_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c1xCZ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c1xD0; else goto c1xD1;
       c1xD0: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.<&>_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c1xD1: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call GHC.Base.fmap_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.<&>_info" {
     Data.Functor.<&>_info:
         const Data.Functor.<&>_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:19.406690565 UTC

[section ""data" . Data.Functor.$>_closure" {
     Data.Functor.$>_closure:
         const Data.Functor.$>_info;
 },
 Data.Functor.$>_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c1xDc: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c1xDd; else goto c1xDe;
       c1xDd: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.$>_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c1xDe: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call GHC.Base.<$_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.$>_info" {
     Data.Functor.$>_info:
         const Data.Functor.$>_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:19.410392139 UTC

[section ""data" . Data.Functor.void_closure" {
     Data.Functor.void_closure:
         const Data.Functor.void_info;
 },
 Data.Functor.void_entry() //  [R2, R3]
         { []
         }
     {offset
       c1xDp: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c1xDq; else goto c1xDr;
       c1xDq: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Functor.void_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c1xDr: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = GHC.Tuple.()_closure+1;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call GHC.Base.<$_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Data.Functor.void_info" {
     Data.Functor.void_info:
         const Data.Functor.void_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:19.413755084 UTC

[section ""cstring" . Data.Functor.$trModule4_bytes" {
     Data.Functor.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:19.41548316 UTC

[section ""data" . Data.Functor.$trModule3_closure" {
     Data.Functor.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:19.417205834 UTC

[section ""cstring" . Data.Functor.$trModule2_bytes" {
     Data.Functor.$trModule2_bytes:
         I8[] [68,97,116,97,46,70,117,110,99,116,111,114]
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:19.419615921 UTC

[section ""data" . Data.Functor.$trModule1_closure" {
     Data.Functor.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Functor.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:19.421742923 UTC

[section ""data" . Data.Functor.$trModule_closure" {
     Data.Functor.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Functor.$trModule3_closure+1;
         const Data.Functor.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:19.42342245 UTC

[section ""relreadonly" . S1xDF_srt" { S1xDF_srt:
 }]

