
==================== Output Cmm ====================
2018-03-16 16:08:56.402058914 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:08:56.403073101 UTC

[section ""data" . Data.Bifunctor.bimap_closure" {
     Data.Bifunctor.bimap_closure:
         const Data.Bifunctor.bimap_info;
 },
 Data.Bifunctor.bimap_entry() //  [R2]
         { info_tbl: [(cdIDf,
                       label: Data.Bifunctor.bimap_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIDf: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cdIDg; else goto cdIDh;
       cdIDg: // global
           R2 = R2;
           R1 = Data.Bifunctor.bimap_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdIDh: // global
           I64[Sp - 8] = block_cdIDc_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto udIDl; else goto cdIDd;
       udIDl: // global
           call _cdIDc(R1) args: 0, res: 0, upd: 0;
       cdIDd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdIDc() //  [R1]
         { info_tbl: [(cdIDc,
                       label: block_cdIDc_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIDc: // global
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.40431493 UTC

[section ""data" . Data.Bifunctor.first_closure" {
     Data.Bifunctor.first_closure:
         const Data.Bifunctor.first_info;
 },
 Data.Bifunctor.first_entry() //  [R2]
         { info_tbl: [(cdIDt,
                       label: Data.Bifunctor.first_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIDt: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cdIDu; else goto cdIDv;
       cdIDu: // global
           R2 = R2;
           R1 = Data.Bifunctor.first_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdIDv: // global
           I64[Sp - 8] = block_cdIDq_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto udIDz; else goto cdIDr;
       udIDz: // global
           call _cdIDq(R1) args: 0, res: 0, upd: 0;
       cdIDr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdIDq() //  [R1]
         { info_tbl: [(cdIDq,
                       label: block_cdIDq_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIDq: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.405572801 UTC

[section ""data" . Data.Bifunctor.second_closure" {
     Data.Bifunctor.second_closure:
         const Data.Bifunctor.second_info;
 },
 Data.Bifunctor.second_entry() //  [R2]
         { info_tbl: [(cdIDH,
                       label: Data.Bifunctor.second_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIDH: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cdIDI; else goto cdIDJ;
       cdIDI: // global
           R2 = R2;
           R1 = Data.Bifunctor.second_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdIDJ: // global
           I64[Sp - 8] = block_cdIDE_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto udIDN; else goto cdIDF;
       udIDN: // global
           call _cdIDE(R1) args: 0, res: 0, upd: 0;
       cdIDF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdIDE() //  [R1]
         { info_tbl: [(cdIDE,
                       label: block_cdIDE_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIDE: // global
           R1 = P64[R1 + 23];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.407255607 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,)_$cbimap_info;
 },
 sat_sdIsc_entry() //  [R1]
         { info_tbl: [(cdIDX,
                       label: sat_sdIsc_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIDX: // global
           _sdIsc::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIDY; else goto cdIDZ;
       cdIDZ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIE1; else goto cdIE0;
       cdIE1: // global
           HpAlloc = 24;
           goto cdIDY;
       cdIDY: // global
           R1 = _sdIsc::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIE0: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIsc::P64;
           _sdIs1::P64 = P64[_sdIsc::P64 + 16];
           _sdIs2::P64 = P64[_sdIsc::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdIs2::P64;
           R2 = Hp - 16;
           R1 = _sdIs1::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdIs7_entry() //  [R1]
         { info_tbl: [(cdIE7,
                       label: sat_sdIs7_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIE7: // global
           _sdIs7::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIE8; else goto cdIE9;
       cdIE9: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIEb; else goto cdIEa;
       cdIEb: // global
           HpAlloc = 24;
           goto cdIE8;
       cdIE8: // global
           R1 = _sdIs7::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIEa: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIs7::P64;
           _sdIs0::P64 = P64[_sdIs7::P64 + 16];
           _sdIs2::P64 = P64[_sdIs7::P64 + 24];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _sdIs2::P64;
           R2 = Hp - 16;
           R1 = _sdIs0::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdIEd,
                       label: Data.Bifunctor.$fBifunctor(,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIEd: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cdIEh; else goto cdIEg;
       cdIEh: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIEg: // global
           I64[Hp - 80] = sat_sdIsc_info;
           P64[Hp - 64] = R3;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = sat_sdIs7_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 80;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.409696953 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,)_$cbimap_info;
 },
 sat_sdIsw_entry() //  [R1]
         { info_tbl: [(cdIEr,
                       label: sat_sdIsw_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIEr: // global
           _sdIsw::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIEs; else goto cdIEt;
       cdIEt: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIEv; else goto cdIEu;
       cdIEv: // global
           HpAlloc = 24;
           goto cdIEs;
       cdIEs: // global
           R1 = _sdIsw::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIEu: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIsw::P64;
           _sdIse::P64 = P64[_sdIsw::P64 + 16];
           _sdIsf::P64 = P64[_sdIsw::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdIsf::P64;
           R2 = Hp - 16;
           R1 = _sdIse::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdIsq_entry() //  [R1]
         { info_tbl: [(cdIEB,
                       label: sat_sdIsq_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIEB: // global
           _sdIsq::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIEC; else goto cdIED;
       cdIED: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIEF; else goto cdIEE;
       cdIEF: // global
           HpAlloc = 24;
           goto cdIEC;
       cdIEC: // global
           R1 = _sdIsq::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIEE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIsq::P64;
           _sdIsd::P64 = P64[_sdIsq::P64 + 16];
           _sdIsf::P64 = P64[_sdIsq::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdIsf::P64;
           R2 = Hp - 16;
           R1 = _sdIsd::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdIEI,
                       label: Data.Bifunctor.$fBifunctor(,,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIEI: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto cdIEM; else goto cdIEL;
       cdIEM: // global
           HpAlloc = 120;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIEL: // global
           I64[Hp - 112] = sat_sdIsw_info;
           P64[Hp - 96] = R3;
           P64[Hp - 88] = R4;
           I64[Hp - 80] = sat_sdIsq_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = stg_sel_0_upd_info;
           P64[Hp - 32] = R4;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = Hp - 48;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 112;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.412103875 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,)_$cbimap_info;
 },
 sat_sdIsZ_entry() //  [R1]
         { info_tbl: [(cdIEW,
                       label: sat_sdIsZ_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIEW: // global
           _sdIsZ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIEX; else goto cdIEY;
       cdIEY: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIF0; else goto cdIEZ;
       cdIF0: // global
           HpAlloc = 24;
           goto cdIEX;
       cdIEX: // global
           R1 = _sdIsZ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIEZ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIsZ::P64;
           _sdIsy::P64 = P64[_sdIsZ::P64 + 16];
           _sdIsz::P64 = P64[_sdIsZ::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdIsz::P64;
           R2 = Hp - 16;
           R1 = _sdIsy::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdIsS_entry() //  [R1]
         { info_tbl: [(cdIF6,
                       label: sat_sdIsS_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIF6: // global
           _sdIsS::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIF7; else goto cdIF8;
       cdIF8: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIFa; else goto cdIF9;
       cdIFa: // global
           HpAlloc = 24;
           goto cdIF7;
       cdIF7: // global
           R1 = _sdIsS::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIF9: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIsS::P64;
           _sdIsx::P64 = P64[_sdIsS::P64 + 16];
           _sdIsz::P64 = P64[_sdIsS::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdIsz::P64;
           R2 = Hp - 16;
           R1 = _sdIsx::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdIFe,
                       label: Data.Bifunctor.$fBifunctor(,,,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIFe: // global
           Hp = Hp + 152;
           if (Hp > HpLim) (likely: False) goto cdIFi; else goto cdIFh;
       cdIFi: // global
           HpAlloc = 152;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIFh: // global
           I64[Hp - 144] = sat_sdIsZ_info;
           P64[Hp - 128] = R3;
           P64[Hp - 120] = R4;
           I64[Hp - 112] = sat_sdIsS_info;
           P64[Hp - 96] = R2;
           P64[Hp - 88] = R4;
           I64[Hp - 80] = stg_sel_1_upd_info;
           P64[Hp - 64] = R4;
           I64[Hp - 56] = stg_sel_0_upd_info;
           P64[Hp - 40] = R4;
           I64[Hp - 32] = (,,,)_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 80;
           P64[Hp - 8] = Hp - 112;
           P64[Hp] = Hp - 144;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.41455913 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_info;
 },
 sat_sdItD_entry() //  [R1]
         { info_tbl: [(cdIFs,
                       label: sat_sdItD_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIFs: // global
           _sdItD::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIFt; else goto cdIFu;
       cdIFu: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIFw; else goto cdIFv;
       cdIFw: // global
           HpAlloc = 24;
           goto cdIFt;
       cdIFt: // global
           R1 = _sdItD::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIFv: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdItD::P64;
           _sdIt1::P64 = P64[_sdItD::P64 + 16];
           _sdIt2::P64 = P64[_sdItD::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdIt2::P64;
           R2 = Hp - 16;
           R1 = _sdIt1::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdItv_entry() //  [R1]
         { info_tbl: [(cdIFC,
                       label: sat_sdItv_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIFC: // global
           _sdItv::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIFD; else goto cdIFE;
       cdIFE: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIFG; else goto cdIFF;
       cdIFG: // global
           HpAlloc = 24;
           goto cdIFD;
       cdIFD: // global
           R1 = _sdItv::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIFF: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdItv::P64;
           _sdIt0::P64 = P64[_sdItv::P64 + 16];
           _sdIt2::P64 = P64[_sdItv::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdIt2::P64;
           R2 = Hp - 16;
           R1 = _sdIt0::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdIFL,
                       label: Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIFL: // global
           Hp = Hp + 184;
           if (Hp > HpLim) (likely: False) goto cdIFP; else goto cdIFO;
       cdIFP: // global
           HpAlloc = 184;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIFO: // global
           I64[Hp - 176] = sat_sdItD_info;
           P64[Hp - 160] = R3;
           P64[Hp - 152] = R4;
           I64[Hp - 144] = sat_sdItv_info;
           P64[Hp - 128] = R2;
           P64[Hp - 120] = R4;
           I64[Hp - 112] = stg_sel_2_upd_info;
           P64[Hp - 96] = R4;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = R4;
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = R4;
           I64[Hp - 40] = (,,,,)_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           P64[Hp - 16] = Hp - 112;
           P64[Hp - 8] = Hp - 144;
           P64[Hp] = Hp - 176;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.418698285 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_info;
 },
 sat_sdIuu_entry() //  [R1]
         { info_tbl: [(cdIFZ,
                       label: sat_sdIuu_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIFZ: // global
           _sdIuu::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIG0; else goto cdIG1;
       cdIG1: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIG3; else goto cdIG2;
       cdIG3: // global
           HpAlloc = 24;
           goto cdIG0;
       cdIG0: // global
           R1 = _sdIuu::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIG2: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIuu::P64;
           _sdItF::P64 = P64[_sdIuu::P64 + 16];
           _sdItG::P64 = P64[_sdIuu::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdItG::P64;
           R2 = Hp - 16;
           R1 = _sdItF::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdIul_entry() //  [R1]
         { info_tbl: [(cdIG9,
                       label: sat_sdIul_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIG9: // global
           _sdIul::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIGa; else goto cdIGb;
       cdIGb: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIGd; else goto cdIGc;
       cdIGd: // global
           HpAlloc = 24;
           goto cdIGa;
       cdIGa: // global
           R1 = _sdIul::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIGc: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIul::P64;
           _sdItE::P64 = P64[_sdIul::P64 + 16];
           _sdItG::P64 = P64[_sdIul::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdItG::P64;
           R2 = Hp - 16;
           R1 = _sdItE::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdIGj,
                       label: Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIGj: // global
           Hp = Hp + 216;
           if (Hp > HpLim) (likely: False) goto cdIGn; else goto cdIGm;
       cdIGn: // global
           HpAlloc = 216;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIGm: // global
           I64[Hp - 208] = sat_sdIuu_info;
           P64[Hp - 192] = R3;
           P64[Hp - 184] = R4;
           I64[Hp - 176] = sat_sdIul_info;
           P64[Hp - 160] = R2;
           P64[Hp - 152] = R4;
           I64[Hp - 144] = stg_sel_3_upd_info;
           P64[Hp - 128] = R4;
           I64[Hp - 120] = stg_sel_2_upd_info;
           P64[Hp - 104] = R4;
           I64[Hp - 96] = stg_sel_1_upd_info;
           P64[Hp - 80] = R4;
           I64[Hp - 72] = stg_sel_0_upd_info;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = (,,,,,)_con_info;
           P64[Hp - 40] = Hp - 72;
           P64[Hp - 32] = Hp - 96;
           P64[Hp - 24] = Hp - 120;
           P64[Hp - 16] = Hp - 144;
           P64[Hp - 8] = Hp - 176;
           P64[Hp] = Hp - 208;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.422977288 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_info;
 },
 sat_sdIvA_entry() //  [R1]
         { info_tbl: [(cdIGx,
                       label: sat_sdIvA_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIGx: // global
           _sdIvA::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIGy; else goto cdIGz;
       cdIGz: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIGB; else goto cdIGA;
       cdIGB: // global
           HpAlloc = 24;
           goto cdIGy;
       cdIGy: // global
           R1 = _sdIvA::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIGA: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIvA::P64;
           _sdIuw::P64 = P64[_sdIvA::P64 + 16];
           _sdIux::P64 = P64[_sdIvA::P64 + 24];
           I64[Hp - 16] = stg_sel_6_upd_info;
           P64[Hp] = _sdIux::P64;
           R2 = Hp - 16;
           R1 = _sdIuw::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdIvq_entry() //  [R1]
         { info_tbl: [(cdIGH,
                       label: sat_sdIvq_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIGH: // global
           _sdIvq::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIGI; else goto cdIGJ;
       cdIGJ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIGL; else goto cdIGK;
       cdIGL: // global
           HpAlloc = 24;
           goto cdIGI;
       cdIGI: // global
           R1 = _sdIvq::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIGK: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIvq::P64;
           _sdIuv::P64 = P64[_sdIvq::P64 + 16];
           _sdIux::P64 = P64[_sdIvq::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdIux::P64;
           R2 = Hp - 16;
           R1 = _sdIuv::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdIGS,
                       label: Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIGS: // global
           Hp = Hp + 248;
           if (Hp > HpLim) (likely: False) goto cdIGW; else goto cdIGV;
       cdIGW: // global
           HpAlloc = 248;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIGV: // global
           I64[Hp - 240] = sat_sdIvA_info;
           P64[Hp - 224] = R3;
           P64[Hp - 216] = R4;
           I64[Hp - 208] = sat_sdIvq_info;
           P64[Hp - 192] = R2;
           P64[Hp - 184] = R4;
           I64[Hp - 176] = stg_sel_4_upd_info;
           P64[Hp - 160] = R4;
           I64[Hp - 152] = stg_sel_3_upd_info;
           P64[Hp - 136] = R4;
           I64[Hp - 128] = stg_sel_2_upd_info;
           P64[Hp - 112] = R4;
           I64[Hp - 104] = stg_sel_1_upd_info;
           P64[Hp - 88] = R4;
           I64[Hp - 80] = stg_sel_0_upd_info;
           P64[Hp - 64] = R4;
           I64[Hp - 56] = (,,,,,,)_con_info;
           P64[Hp - 48] = Hp - 80;
           P64[Hp - 40] = Hp - 104;
           P64[Hp - 32] = Hp - 128;
           P64[Hp - 24] = Hp - 152;
           P64[Hp - 16] = Hp - 176;
           P64[Hp - 8] = Hp - 208;
           P64[Hp] = Hp - 240;
           R1 = Hp - 55;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.427034675 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_$cbimap_closure" {
     Data.Bifunctor.$fBifunctorEither_$cbimap_closure:
         const Data.Bifunctor.$fBifunctorEither_$cbimap_info;
 },
 Data.Bifunctor.$fBifunctorEither_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdIH8,
                       label: Data.Bifunctor.$fBifunctorEither_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIH8: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cdIH9; else goto cdIHa;
       cdIH9: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctorEither_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIHa: // global
           I64[Sp - 24] = block_cdIH1_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto udIHp; else goto cdIH2;
       udIHp: // global
           call _cdIH1(R1) args: 0, res: 0, upd: 0;
       cdIH2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdIH1() //  [R1]
         { info_tbl: [(cdIH1,
                       label: block_cdIH1_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIH1: // global
           if (R1 & 7 == 1) goto cdIH5; else goto cdIH6;
       cdIH5: // global
           Hp = Hp + 48;
           _sdIvE::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cdIHo; else goto cdIHg;
       cdIHg: // global
           _sdIvF::P64 = P64[_sdIvE::P64 + 7];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sdIvF::P64;
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cdIH6: // global
           Hp = Hp + 48;
           _sdIvE::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cdIHo; else goto cdIHn;
       cdIHo: // global
           HpAlloc = 48;
           R1 = _sdIvE::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cdIHn: // global
           _sdIvH::P64 = P64[_sdIvE::P64 + 6];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 16];
           P64[Hp - 16] = _sdIvH::P64;
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 6;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.432157163 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst3_closure" {
     Data.Bifunctor.$fBifunctorConst3_closure:
         const Data.Bifunctor.$fBifunctorConst3_info;
 },
 Data.Bifunctor.$fBifunctorConst3_entry() //  [R2, R4]
         { info_tbl: [(cdIHu,
                       label: Data.Bifunctor.$fBifunctorConst3_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIHu: // global
           _sdIvJ::P64 = R2;
           R2 = R4;
           R1 = _sdIvJ::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.433527694 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK4_closure" {
     Data.Bifunctor.$fBifunctorK4_closure:
         const Data.Bifunctor.$fBifunctorK4_info;
 },
 Data.Bifunctor.$fBifunctorK4_entry() //  [R2, R4]
         { info_tbl: [(cdIHB,
                       label: Data.Bifunctor.$fBifunctorK4_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIHB: // global
           _sdIvM::P64 = R2;
           R2 = R4;
           R1 = _sdIvM::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.434770028 UTC

[section ""data" . Data.Bifunctor.$dmsecond_closure" {
     Data.Bifunctor.$dmsecond_closure:
         const Data.Bifunctor.$dmsecond_info;
 },
 Data.Bifunctor.$dmsecond_entry() //  [R2]
         { info_tbl: [(cdIHI,
                       label: Data.Bifunctor.$dmsecond_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIHI: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cdIHJ; else goto cdIHK;
       cdIHJ: // global
           R2 = R2;
           R1 = Data.Bifunctor.$dmsecond_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdIHK: // global
           R2 = R2;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = GHC.Base.id_closure+1;
           Sp = Sp - 16;
           call Data.Bifunctor.bimap_entry(R2) args: 24, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.436131589 UTC

[section ""data" . Data.Bifunctor.$dmfirst_closure" {
     Data.Bifunctor.$dmfirst_closure:
         const Data.Bifunctor.$dmfirst_info;
 },
 Data.Bifunctor.$dmfirst_entry() //  [R2, R3]
         { info_tbl: [(cdIHP,
                       label: Data.Bifunctor.$dmfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIHP: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cdIHQ; else goto cdIHR;
       cdIHQ: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$dmfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIHR: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = GHC.Base.id_closure+1;
           Sp = Sp - 24;
           call Data.Bifunctor.bimap_entry(R2) args: 32, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.437385394 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK3_closure" {
     Data.Bifunctor.$fBifunctorK3_closure:
         const Data.Bifunctor.$fBifunctorK3_info;
 },
 Data.Bifunctor.$fBifunctorK3_entry() //  [R2, R3]
         { info_tbl: [(cdIHW,
                       label: Data.Bifunctor.$fBifunctorK3_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIHW: // global
           _sdIvS::P64 = R2;
           R2 = R3;
           R1 = _sdIvS::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.438191859 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK2_closure" {
     Data.Bifunctor.$fBifunctorK2_closure:
         const Data.Bifunctor.$fBifunctorK2_info;
 },
 Data.Bifunctor.$fBifunctorK2_entry() //  [R3]
         { info_tbl: [(cdII3,
                       label: Data.Bifunctor.$fBifunctorK2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdII3: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.43907711 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK1_closure" {
     Data.Bifunctor.$fBifunctorK1_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctorK4_closure+3;
         const Data.Bifunctor.$fBifunctorK3_closure+2;
         const Data.Bifunctor.$fBifunctorK2_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.440066052 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst2_closure" {
     Data.Bifunctor.$fBifunctorConst2_closure:
         const Data.Bifunctor.$fBifunctorConst2_info;
 },
 Data.Bifunctor.$fBifunctorConst2_entry() //  [R2, R3]
         { info_tbl: [(cdIIa,
                       label: Data.Bifunctor.$fBifunctorConst2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIIa: // global
           _sdIvW::P64 = R2;
           R2 = R3;
           R1 = _sdIvW::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.441080089 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst1_closure" {
     Data.Bifunctor.$fBifunctorConst1_closure:
         const Data.Bifunctor.$fBifunctorConst1_info;
 },
 Data.Bifunctor.$fBifunctorConst1_entry() //  [R3]
         { info_tbl: [(cdIIh,
                       label: Data.Bifunctor.$fBifunctorConst1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIIh: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.442214554 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst_closure" {
     Data.Bifunctor.$fBifunctorConst_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctorConst3_closure+3;
         const Data.Bifunctor.$fBifunctorConst2_closure+2;
         const Data.Bifunctor.$fBifunctorConst1_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.443872235 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_$cfirst_closure" {
     Data.Bifunctor.$fBifunctorEither_$cfirst_closure:
         const Data.Bifunctor.$fBifunctorEither_$cfirst_info;
 },
 Data.Bifunctor.$fBifunctorEither_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdIIv,
                       label: Data.Bifunctor.$fBifunctorEither_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIIv: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cdIIw; else goto cdIIx;
       cdIIw: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctorEither_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIIx: // global
           I64[Sp - 16] = block_cdIIo_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto udIII; else goto cdIIp;
       udIII: // global
           call _cdIIo(R1) args: 0, res: 0, upd: 0;
       cdIIp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdIIo() //  [R1]
         { info_tbl: [(cdIIo,
                       label: block_cdIIo_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIIo: // global
           if (R1 & 7 == 1) goto cdIIs; else goto cdIIt;
       cdIIs: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cdIIE; else goto cdIID;
       cdIIE: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cdIID: // global
           _sdIw3::P64 = P64[R1 + 7];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sdIw3::P64;
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cdIIt: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.446648401 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_$csecond_closure" {
     Data.Bifunctor.$fBifunctorEither_$csecond_closure:
         const Data.Bifunctor.$fBifunctorEither_$csecond_info;
 },
 Data.Bifunctor.$fBifunctorEither_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdIIU,
                       label: Data.Bifunctor.$fBifunctorEither_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIIU: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cdIIV; else goto cdIIW;
       cdIIV: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctorEither_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIIW: // global
           I64[Sp - 16] = block_cdIIN_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto udIJ7; else goto cdIIO;
       udIJ7: // global
           call _cdIIN(R1) args: 0, res: 0, upd: 0;
       cdIIO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdIIN() //  [R1]
         { info_tbl: [(cdIIN,
                       label: block_cdIIN_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIIN: // global
           if (R1 & 7 == 1) goto cdIIR; else goto cdIIS;
       cdIIR: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       cdIIS: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cdIJ6; else goto cdIJ5;
       cdIJ6: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cdIJ5: // global
           _sdIwa::P64 = P64[R1 + 6];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sdIwa::P64;
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.44878819 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_closure" {
     Data.Bifunctor.$fBifunctorEither_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctorEither_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctorEither_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctorEither_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.450631467 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_info;
 },
 sat_sdIx6_entry() //  [R1]
         { info_tbl: [(cdIJi,
                       label: sat_sdIx6_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIJi: // global
           _sdIx6::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIJj; else goto cdIJk;
       cdIJk: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIJm; else goto cdIJl;
       cdIJm: // global
           HpAlloc = 24;
           goto cdIJj;
       cdIJj: // global
           R1 = _sdIx6::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIJl: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIx6::P64;
           _sdIwc::P64 = P64[_sdIx6::P64 + 16];
           _sdIwd::P64 = P64[_sdIx6::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdIwd::P64;
           R2 = Hp - 16;
           R1 = _sdIwc::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdIJt,
                       label: Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIJt: // global
           Hp = Hp + 240;
           if (Hp > HpLim) (likely: False) goto cdIJx; else goto cdIJw;
       cdIJx: // global
           HpAlloc = 240;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIJw: // global
           I64[Hp - 232] = stg_sel_6_upd_info;
           P64[Hp - 216] = R3;
           I64[Hp - 208] = sat_sdIx6_info;
           P64[Hp - 192] = R2;
           P64[Hp - 184] = R3;
           I64[Hp - 176] = stg_sel_4_upd_info;
           P64[Hp - 160] = R3;
           I64[Hp - 152] = stg_sel_3_upd_info;
           P64[Hp - 136] = R3;
           I64[Hp - 128] = stg_sel_2_upd_info;
           P64[Hp - 112] = R3;
           I64[Hp - 104] = stg_sel_1_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_0_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = (,,,,,,)_con_info;
           P64[Hp - 48] = Hp - 80;
           P64[Hp - 40] = Hp - 104;
           P64[Hp - 32] = Hp - 128;
           P64[Hp - 24] = Hp - 152;
           P64[Hp - 16] = Hp - 176;
           P64[Hp - 8] = Hp - 208;
           P64[Hp] = Hp - 232;
           R1 = Hp - 55;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.454355267 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_info;
 },
 sat_sdIyj_entry() //  [R1]
         { info_tbl: [(cdIJH,
                       label: sat_sdIyj_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIJH: // global
           _sdIyj::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIJI; else goto cdIJJ;
       cdIJJ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIJL; else goto cdIJK;
       cdIJL: // global
           HpAlloc = 24;
           goto cdIJI;
       cdIJI: // global
           R1 = _sdIyj::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIJK: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIyj::P64;
           _sdIxg::P64 = P64[_sdIyj::P64 + 16];
           _sdIxh::P64 = P64[_sdIyj::P64 + 24];
           I64[Hp - 16] = stg_sel_6_upd_info;
           P64[Hp] = _sdIxh::P64;
           R2 = Hp - 16;
           R1 = _sdIxg::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdIJT,
                       label: Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIJT: // global
           Hp = Hp + 240;
           if (Hp > HpLim) (likely: False) goto cdIJX; else goto cdIJW;
       cdIJX: // global
           HpAlloc = 240;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIJW: // global
           I64[Hp - 232] = sat_sdIyj_info;
           P64[Hp - 216] = R2;
           P64[Hp - 208] = R3;
           I64[Hp - 200] = stg_sel_5_upd_info;
           P64[Hp - 184] = R3;
           I64[Hp - 176] = stg_sel_4_upd_info;
           P64[Hp - 160] = R3;
           I64[Hp - 152] = stg_sel_3_upd_info;
           P64[Hp - 136] = R3;
           I64[Hp - 128] = stg_sel_2_upd_info;
           P64[Hp - 112] = R3;
           I64[Hp - 104] = stg_sel_1_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_0_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = (,,,,,,)_con_info;
           P64[Hp - 48] = Hp - 80;
           P64[Hp - 40] = Hp - 104;
           P64[Hp - 32] = Hp - 128;
           P64[Hp - 24] = Hp - 152;
           P64[Hp - 16] = Hp - 176;
           P64[Hp - 8] = Hp - 200;
           P64[Hp] = Hp - 232;
           R1 = Hp - 55;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.456732916 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.458399146 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_info;
 },
 sat_sdIz0_entry() //  [R1]
         { info_tbl: [(cdIK8,
                       label: sat_sdIz0_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIK8: // global
           _sdIz0::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIK9; else goto cdIKa;
       cdIKa: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIKc; else goto cdIKb;
       cdIKc: // global
           HpAlloc = 24;
           goto cdIK9;
       cdIK9: // global
           R1 = _sdIz0::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIKb: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIz0::P64;
           _sdIyk::P64 = P64[_sdIz0::P64 + 16];
           _sdIyl::P64 = P64[_sdIz0::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdIyl::P64;
           R2 = Hp - 16;
           R1 = _sdIyk::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdIKi,
                       label: Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIKi: // global
           Hp = Hp + 208;
           if (Hp > HpLim) (likely: False) goto cdIKm; else goto cdIKl;
       cdIKm: // global
           HpAlloc = 208;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIKl: // global
           I64[Hp - 200] = stg_sel_5_upd_info;
           P64[Hp - 184] = R3;
           I64[Hp - 176] = sat_sdIz0_info;
           P64[Hp - 160] = R2;
           P64[Hp - 152] = R3;
           I64[Hp - 144] = stg_sel_3_upd_info;
           P64[Hp - 128] = R3;
           I64[Hp - 120] = stg_sel_2_upd_info;
           P64[Hp - 104] = R3;
           I64[Hp - 96] = stg_sel_1_upd_info;
           P64[Hp - 80] = R3;
           I64[Hp - 72] = stg_sel_0_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = (,,,,,)_con_info;
           P64[Hp - 40] = Hp - 72;
           P64[Hp - 32] = Hp - 96;
           P64[Hp - 24] = Hp - 120;
           P64[Hp - 16] = Hp - 144;
           P64[Hp - 8] = Hp - 176;
           P64[Hp] = Hp - 200;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.461430474 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_info;
 },
 sat_sdIzX_entry() //  [R1]
         { info_tbl: [(cdIKw,
                       label: sat_sdIzX_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIKw: // global
           _sdIzX::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIKx; else goto cdIKy;
       cdIKy: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIKA; else goto cdIKz;
       cdIKA: // global
           HpAlloc = 24;
           goto cdIKx;
       cdIKx: // global
           R1 = _sdIzX::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIKz: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIzX::P64;
           _sdIz9::P64 = P64[_sdIzX::P64 + 16];
           _sdIza::P64 = P64[_sdIzX::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdIza::P64;
           R2 = Hp - 16;
           R1 = _sdIz9::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdIKH,
                       label: Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIKH: // global
           Hp = Hp + 208;
           if (Hp > HpLim) (likely: False) goto cdIKL; else goto cdIKK;
       cdIKL: // global
           HpAlloc = 208;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIKK: // global
           I64[Hp - 200] = sat_sdIzX_info;
           P64[Hp - 184] = R2;
           P64[Hp - 176] = R3;
           I64[Hp - 168] = stg_sel_4_upd_info;
           P64[Hp - 152] = R3;
           I64[Hp - 144] = stg_sel_3_upd_info;
           P64[Hp - 128] = R3;
           I64[Hp - 120] = stg_sel_2_upd_info;
           P64[Hp - 104] = R3;
           I64[Hp - 96] = stg_sel_1_upd_info;
           P64[Hp - 80] = R3;
           I64[Hp - 72] = stg_sel_0_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = (,,,,,)_con_info;
           P64[Hp - 40] = Hp - 72;
           P64[Hp - 32] = Hp - 96;
           P64[Hp - 24] = Hp - 120;
           P64[Hp - 16] = Hp - 144;
           P64[Hp - 8] = Hp - 168;
           P64[Hp] = Hp - 200;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.463776366 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.465550373 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_info;
 },
 sat_sdIAs_entry() //  [R1]
         { info_tbl: [(cdIKW,
                       label: sat_sdIAs_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIKW: // global
           _sdIAs::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIKX; else goto cdIKY;
       cdIKY: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIL0; else goto cdIKZ;
       cdIL0: // global
           HpAlloc = 24;
           goto cdIKX;
       cdIKX: // global
           R1 = _sdIAs::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIKZ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIAs::P64;
           _sdIzY::P64 = P64[_sdIAs::P64 + 16];
           _sdIzZ::P64 = P64[_sdIAs::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdIzZ::P64;
           R2 = Hp - 16;
           R1 = _sdIzY::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdIL5,
                       label: Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIL5: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto cdIL9; else goto cdIL8;
       cdIL9: // global
           HpAlloc = 176;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIL8: // global
           I64[Hp - 168] = stg_sel_4_upd_info;
           P64[Hp - 152] = R3;
           I64[Hp - 144] = sat_sdIAs_info;
           P64[Hp - 128] = R2;
           P64[Hp - 120] = R3;
           I64[Hp - 112] = stg_sel_2_upd_info;
           P64[Hp - 96] = R3;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = R3;
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = (,,,,)_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           P64[Hp - 16] = Hp - 112;
           P64[Hp - 8] = Hp - 144;
           P64[Hp] = Hp - 168;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.468497558 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,,)_$csecond_info;
 },
 sat_sdIBb_entry() //  [R1]
         { info_tbl: [(cdILj,
                       label: sat_sdIBb_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdILj: // global
           _sdIBb::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdILk; else goto cdILl;
       cdILl: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdILn; else goto cdILm;
       cdILn: // global
           HpAlloc = 24;
           goto cdILk;
       cdILk: // global
           R1 = _sdIBb::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdILm: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIBb::P64;
           _sdIAA::P64 = P64[_sdIBb::P64 + 16];
           _sdIAB::P64 = P64[_sdIBb::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdIAB::P64;
           R2 = Hp - 16;
           R1 = _sdIAA::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdILt,
                       label: Data.Bifunctor.$fBifunctor(,,,,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdILt: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto cdILx; else goto cdILw;
       cdILx: // global
           HpAlloc = 176;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdILw: // global
           I64[Hp - 168] = sat_sdIBb_info;
           P64[Hp - 152] = R2;
           P64[Hp - 144] = R3;
           I64[Hp - 136] = stg_sel_3_upd_info;
           P64[Hp - 120] = R3;
           I64[Hp - 112] = stg_sel_2_upd_info;
           P64[Hp - 96] = R3;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = R3;
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = (,,,,)_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           P64[Hp - 16] = Hp - 112;
           P64[Hp - 8] = Hp - 136;
           P64[Hp] = Hp - 168;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.471112662 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.4728022 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,)_$cfirst_info;
 },
 sat_sdIBw_entry() //  [R1]
         { info_tbl: [(cdILI,
                       label: sat_sdIBw_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdILI: // global
           _sdIBw::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdILJ; else goto cdILK;
       cdILK: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdILM; else goto cdILL;
       cdILM: // global
           HpAlloc = 24;
           goto cdILJ;
       cdILJ: // global
           R1 = _sdIBw::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdILL: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIBw::P64;
           _sdIBc::P64 = P64[_sdIBw::P64 + 16];
           _sdIBd::P64 = P64[_sdIBw::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdIBd::P64;
           R2 = Hp - 16;
           R1 = _sdIBc::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdILQ,
                       label: Data.Bifunctor.$fBifunctor(,,,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdILQ: // global
           Hp = Hp + 144;
           if (Hp > HpLim) (likely: False) goto cdILU; else goto cdILT;
       cdILU: // global
           HpAlloc = 144;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdILT: // global
           I64[Hp - 136] = stg_sel_3_upd_info;
           P64[Hp - 120] = R3;
           I64[Hp - 112] = sat_sdIBw_info;
           P64[Hp - 96] = R2;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_1_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = stg_sel_0_upd_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = (,,,)_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 80;
           P64[Hp - 8] = Hp - 112;
           P64[Hp] = Hp - 136;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.475804215 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,)_$csecond_info;
 },
 sat_sdIC3_entry() //  [R1]
         { info_tbl: [(cdIM4,
                       label: sat_sdIC3_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIM4: // global
           _sdIC3::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIM5; else goto cdIM6;
       cdIM6: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIM8; else goto cdIM7;
       cdIM8: // global
           HpAlloc = 24;
           goto cdIM5;
       cdIM5: // global
           R1 = _sdIC3::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIM7: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIC3::P64;
           _sdIBD::P64 = P64[_sdIC3::P64 + 16];
           _sdIBE::P64 = P64[_sdIC3::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdIBE::P64;
           R2 = Hp - 16;
           R1 = _sdIBD::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdIMd,
                       label: Data.Bifunctor.$fBifunctor(,,,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIMd: // global
           Hp = Hp + 144;
           if (Hp > HpLim) (likely: False) goto cdIMh; else goto cdIMg;
       cdIMh: // global
           HpAlloc = 144;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIMg: // global
           I64[Hp - 136] = sat_sdIC3_info;
           P64[Hp - 120] = R2;
           P64[Hp - 112] = R3;
           I64[Hp - 104] = stg_sel_2_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_1_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = stg_sel_0_upd_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = (,,,)_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 80;
           P64[Hp - 8] = Hp - 104;
           P64[Hp] = Hp - 136;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.477792075 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.478824367 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,)_$cfirst_info;
 },
 sat_sdICg_entry() //  [R1]
         { info_tbl: [(cdIMs,
                       label: sat_sdICg_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIMs: // global
           _sdICg::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIMt; else goto cdIMu;
       cdIMu: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIMw; else goto cdIMv;
       cdIMw: // global
           HpAlloc = 24;
           goto cdIMt;
       cdIMt: // global
           R1 = _sdICg::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIMv: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdICg::P64;
           _sdIC4::P64 = P64[_sdICg::P64 + 16];
           _sdIC5::P64 = P64[_sdICg::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdIC5::P64;
           R2 = Hp - 16;
           R1 = _sdIC4::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdIMz,
                       label: Data.Bifunctor.$fBifunctor(,,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIMz: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto cdIMD; else goto cdIMC;
       cdIMD: // global
           HpAlloc = 112;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIMC: // global
           I64[Hp - 104] = stg_sel_2_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = sat_sdICg_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = stg_sel_0_upd_info;
           P64[Hp - 32] = R3;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = Hp - 48;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 104;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.480615696 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,)_$csecond_info;
 },
 sat_sdICD_entry() //  [R1]
         { info_tbl: [(cdIMN,
                       label: sat_sdICD_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIMN: // global
           _sdICD::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIMO; else goto cdIMP;
       cdIMP: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIMR; else goto cdIMQ;
       cdIMR: // global
           HpAlloc = 24;
           goto cdIMO;
       cdIMO: // global
           R1 = _sdICD::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIMQ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdICD::P64;
           _sdICm::P64 = P64[_sdICD::P64 + 16];
           _sdICn::P64 = P64[_sdICD::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdICn::P64;
           R2 = Hp - 16;
           R1 = _sdICm::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdIMV,
                       label: Data.Bifunctor.$fBifunctor(,,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIMV: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto cdIMZ; else goto cdIMY;
       cdIMZ: // global
           HpAlloc = 112;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIMY: // global
           I64[Hp - 104] = sat_sdICD_info;
           P64[Hp - 88] = R2;
           P64[Hp - 80] = R3;
           I64[Hp - 72] = stg_sel_1_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = stg_sel_0_upd_info;
           P64[Hp - 32] = R3;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = Hp - 48;
           P64[Hp - 8] = Hp - 72;
           P64[Hp] = Hp - 104;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.481975451 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.483044585 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,)_$cfirst_info;
 },
 sat_sdICK_entry() //  [R1]
         { info_tbl: [(cdINa,
                       label: sat_sdICK_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdINa: // global
           _sdICK::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdINb; else goto cdINc;
       cdINc: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdINe; else goto cdINd;
       cdINe: // global
           HpAlloc = 24;
           goto cdINb;
       cdINb: // global
           R1 = _sdICK::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdINd: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdICK::P64;
           _sdICE::P64 = P64[_sdICK::P64 + 16];
           _sdICF::P64 = P64[_sdICK::P64 + 24];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _sdICF::P64;
           R2 = Hp - 16;
           R1 = _sdICE::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdINg,
                       label: Data.Bifunctor.$fBifunctor(,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdINg: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cdINk; else goto cdINj;
       cdINk: // global
           HpAlloc = 80;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdINj: // global
           I64[Hp - 72] = stg_sel_1_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = sat_sdICK_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 72;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.484703729 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,)_$csecond_info;
 },
 sat_sdICZ_entry() //  [R1]
         { info_tbl: [(cdINu,
                       label: sat_sdICZ_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdINu: // global
           _sdICZ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdINv; else goto cdINw;
       cdINw: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdINy; else goto cdINx;
       cdINy: // global
           HpAlloc = 24;
           goto cdINv;
       cdINv: // global
           R1 = _sdICZ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdINx: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdICZ::P64;
           _sdICP::P64 = P64[_sdICZ::P64 + 16];
           _sdICQ::P64 = P64[_sdICZ::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdICQ::P64;
           R2 = Hp - 16;
           R1 = _sdICP::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdINB,
                       label: Data.Bifunctor.$fBifunctor(,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdINB: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cdINF; else goto cdINE;
       cdINF: // global
           HpAlloc = 80;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdINE: // global
           I64[Hp - 72] = sat_sdICZ_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 72;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.486259704 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_closure" {
     Data.Bifunctor.$fBifunctor(,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.487608543 UTC

[section ""data" . Data.Bifunctor.$dmbimap_closure" {
     Data.Bifunctor.$dmbimap_closure:
         const Data.Bifunctor.$dmbimap_info;
 },
 f1_sdID3_entry() //  [R1]
         { info_tbl: [(cdINO,
                       label: f1_sdID3_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdINO: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cdINP; else goto cdINQ;
       cdINP: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdINQ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Data.Bifunctor.first_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 g1_sdID4_entry() //  [R1]
         { info_tbl: [(cdINV,
                       label: g1_sdID4_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdINV: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cdINW; else goto cdINX;
       cdINW: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdINX: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Data.Bifunctor.second_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_sdID7_entry() //  [R1, R2]
         { info_tbl: [(cdIO4,
                       label: sat_sdID7_info
                       rep:HeapRep 2 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIO4: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cdIO8; else goto cdIO7;
       cdIO8: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdIO7: // global
           _sdID3::P64 = P64[R1 + 7];
           _sdID4::P64 = P64[R1 + 15];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sdID4::P64;
           P64[Hp] = R2;
           R2 = Hp - 24;
           R1 = _sdID3::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 Data.Bifunctor.$dmbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdIO9,
                       label: Data.Bifunctor.$dmbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIO9: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cdIOd; else goto cdIOc;
       cdIOd: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$dmbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIOc: // global
           I64[Hp - 80] = f1_sdID3_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = g1_sdID4_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = sat_sdID7_info;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 48;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.489429504 UTC

[section ""cstring" . Data.Bifunctor.$trModule4_bytes" {
     Data.Bifunctor.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.489962806 UTC

[section ""data" . Data.Bifunctor.$trModule3_closure" {
     Data.Bifunctor.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bifunctor.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.490532336 UTC

[section ""cstring" . Data.Bifunctor.$trModule2_bytes" {
     Data.Bifunctor.$trModule2_bytes:
         I8[] [68,97,116,97,46,66,105,102,117,110,99,116,111,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.491107979 UTC

[section ""data" . Data.Bifunctor.$trModule1_closure" {
     Data.Bifunctor.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bifunctor.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.491674412 UTC

[section ""data" . Data.Bifunctor.$trModule_closure" {
     Data.Bifunctor.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Bifunctor.$trModule3_closure+1;
         const Data.Bifunctor.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.492269627 UTC

[section ""data" . $krep_rdIrJ_closure" {
     $krep_rdIrJ_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.492869252 UTC

[section ""data" . Data.Bifunctor.$tcBifunctor1_closure" {
     Data.Bifunctor.$tcBifunctor1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*->*->*_closure;
         const $krep_rdIrJ_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.493504013 UTC

[section ""cstring" . Data.Bifunctor.$tcBifunctor3_bytes" {
     Data.Bifunctor.$tcBifunctor3_bytes:
         I8[] [66,105,102,117,110,99,116,111,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.494033363 UTC

[section ""data" . Data.Bifunctor.$tcBifunctor2_closure" {
     Data.Bifunctor.$tcBifunctor2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bifunctor.$tcBifunctor3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.494664883 UTC

[section ""data" . Data.Bifunctor.$tcBifunctor_closure" {
     Data.Bifunctor.$tcBifunctor_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Bifunctor.$trModule_closure+1;
         const Data.Bifunctor.$tcBifunctor2_closure+1;
         const Data.Bifunctor.$tcBifunctor1_closure+4;
         const 15833243383698227199;
         const 9927729778853233711;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.497226912 UTC

[section ""data" . Data.Bifunctor.C:Bifunctor_closure" {
     Data.Bifunctor.C:Bifunctor_closure:
         const Data.Bifunctor.C:Bifunctor_info;
 },
 Data.Bifunctor.C:Bifunctor_entry() //  [R2, R3, R4]
         { info_tbl: [(cdIOj,
                       label: Data.Bifunctor.C:Bifunctor_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIOj: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cdIOn; else goto cdIOm;
       cdIOn: // global
           HpAlloc = 32;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.C:Bifunctor_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIOm: // global
           I64[Hp - 24] = Data.Bifunctor.C:Bifunctor_con_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.49834838 UTC

[Data.Bifunctor.C:Bifunctor_con_entry() //  [R1]
         { info_tbl: [(cdIOo,
                       label: Data.Bifunctor.C:Bifunctor_con_info
                       rep:HeapRep 3 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,68,97,116,97,46,66,105,102,117,110,99,116,111,114,46,67,58,66,105,102,117,110,99,116,111,114]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIOo: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.499089068 UTC

[section ""relreadonly" . SdIOp_srt" { SdIOp_srt:
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.499625633 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:08:56.500392521 UTC

[section ""data" . Data.Bifunctor.bimap_closure" {
     Data.Bifunctor.bimap_closure:
         const Data.Bifunctor.bimap_info;
 },
 Data.Bifunctor.bimap_entry() //  [R2]
         { info_tbl: [(cdIOx,
                       label: Data.Bifunctor.bimap_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIOx: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cdIOy; else goto cdIOz;
       cdIOy: // global
           R2 = R2;
           R1 = Data.Bifunctor.bimap_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdIOz: // global
           I64[Sp - 8] = block_cdIOu_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto udIOD; else goto cdIOv;
       udIOD: // global
           call _cdIOu(R1) args: 0, res: 0, upd: 0;
       cdIOv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdIOu() //  [R1]
         { info_tbl: [(cdIOu,
                       label: block_cdIOu_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIOu: // global
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.501593468 UTC

[section ""data" . Data.Bifunctor.first_closure" {
     Data.Bifunctor.first_closure:
         const Data.Bifunctor.first_info;
 },
 Data.Bifunctor.first_entry() //  [R2]
         { info_tbl: [(cdIOL,
                       label: Data.Bifunctor.first_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIOL: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cdIOM; else goto cdION;
       cdIOM: // global
           R2 = R2;
           R1 = Data.Bifunctor.first_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdION: // global
           I64[Sp - 8] = block_cdIOI_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto udIOR; else goto cdIOJ;
       udIOR: // global
           call _cdIOI(R1) args: 0, res: 0, upd: 0;
       cdIOJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdIOI() //  [R1]
         { info_tbl: [(cdIOI,
                       label: block_cdIOI_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIOI: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.502754564 UTC

[section ""data" . Data.Bifunctor.second_closure" {
     Data.Bifunctor.second_closure:
         const Data.Bifunctor.second_info;
 },
 Data.Bifunctor.second_entry() //  [R2]
         { info_tbl: [(cdIOZ,
                       label: Data.Bifunctor.second_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIOZ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cdIP0; else goto cdIP1;
       cdIP0: // global
           R2 = R2;
           R1 = Data.Bifunctor.second_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdIP1: // global
           I64[Sp - 8] = block_cdIOW_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto udIP5; else goto cdIOX;
       udIP5: // global
           call _cdIOW(R1) args: 0, res: 0, upd: 0;
       cdIOX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdIOW() //  [R1]
         { info_tbl: [(cdIOW,
                       label: block_cdIOW_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIOW: // global
           R1 = P64[R1 + 23];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.504274461 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,)_$cbimap_info;
 },
 sat_sdIsc_entry() //  [R1]
         { info_tbl: [(cdIPf,
                       label: sat_sdIsc_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIPf: // global
           _sdIsc::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIPg; else goto cdIPh;
       cdIPh: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIPj; else goto cdIPi;
       cdIPj: // global
           HpAlloc = 24;
           goto cdIPg;
       cdIPg: // global
           R1 = _sdIsc::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIPi: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIsc::P64;
           _sdIs1::P64 = P64[_sdIsc::P64 + 16];
           _sdIs2::P64 = P64[_sdIsc::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdIs2::P64;
           R2 = Hp - 16;
           R1 = _sdIs1::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdIs7_entry() //  [R1]
         { info_tbl: [(cdIPp,
                       label: sat_sdIs7_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIPp: // global
           _sdIs7::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIPq; else goto cdIPr;
       cdIPr: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIPt; else goto cdIPs;
       cdIPt: // global
           HpAlloc = 24;
           goto cdIPq;
       cdIPq: // global
           R1 = _sdIs7::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIPs: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIs7::P64;
           _sdIs0::P64 = P64[_sdIs7::P64 + 16];
           _sdIs2::P64 = P64[_sdIs7::P64 + 24];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _sdIs2::P64;
           R2 = Hp - 16;
           R1 = _sdIs0::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdIPv,
                       label: Data.Bifunctor.$fBifunctor(,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIPv: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cdIPz; else goto cdIPy;
       cdIPz: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIPy: // global
           I64[Hp - 80] = sat_sdIsc_info;
           P64[Hp - 64] = R3;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = sat_sdIs7_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 80;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.506679749 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,)_$cbimap_info;
 },
 sat_sdIsw_entry() //  [R1]
         { info_tbl: [(cdIPJ,
                       label: sat_sdIsw_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIPJ: // global
           _sdIsw::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIPK; else goto cdIPL;
       cdIPL: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIPN; else goto cdIPM;
       cdIPN: // global
           HpAlloc = 24;
           goto cdIPK;
       cdIPK: // global
           R1 = _sdIsw::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIPM: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIsw::P64;
           _sdIse::P64 = P64[_sdIsw::P64 + 16];
           _sdIsf::P64 = P64[_sdIsw::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdIsf::P64;
           R2 = Hp - 16;
           R1 = _sdIse::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdIsq_entry() //  [R1]
         { info_tbl: [(cdIPT,
                       label: sat_sdIsq_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIPT: // global
           _sdIsq::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIPU; else goto cdIPV;
       cdIPV: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIPX; else goto cdIPW;
       cdIPX: // global
           HpAlloc = 24;
           goto cdIPU;
       cdIPU: // global
           R1 = _sdIsq::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIPW: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIsq::P64;
           _sdIsd::P64 = P64[_sdIsq::P64 + 16];
           _sdIsf::P64 = P64[_sdIsq::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdIsf::P64;
           R2 = Hp - 16;
           R1 = _sdIsd::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdIQ0,
                       label: Data.Bifunctor.$fBifunctor(,,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIQ0: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto cdIQ4; else goto cdIQ3;
       cdIQ4: // global
           HpAlloc = 120;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIQ3: // global
           I64[Hp - 112] = sat_sdIsw_info;
           P64[Hp - 96] = R3;
           P64[Hp - 88] = R4;
           I64[Hp - 80] = sat_sdIsq_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = stg_sel_0_upd_info;
           P64[Hp - 32] = R4;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = Hp - 48;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 112;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.508934576 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,)_$cbimap_info;
 },
 sat_sdIsZ_entry() //  [R1]
         { info_tbl: [(cdIQe,
                       label: sat_sdIsZ_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIQe: // global
           _sdIsZ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIQf; else goto cdIQg;
       cdIQg: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIQi; else goto cdIQh;
       cdIQi: // global
           HpAlloc = 24;
           goto cdIQf;
       cdIQf: // global
           R1 = _sdIsZ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIQh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIsZ::P64;
           _sdIsy::P64 = P64[_sdIsZ::P64 + 16];
           _sdIsz::P64 = P64[_sdIsZ::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdIsz::P64;
           R2 = Hp - 16;
           R1 = _sdIsy::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdIsS_entry() //  [R1]
         { info_tbl: [(cdIQo,
                       label: sat_sdIsS_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIQo: // global
           _sdIsS::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIQp; else goto cdIQq;
       cdIQq: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIQs; else goto cdIQr;
       cdIQs: // global
           HpAlloc = 24;
           goto cdIQp;
       cdIQp: // global
           R1 = _sdIsS::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIQr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIsS::P64;
           _sdIsx::P64 = P64[_sdIsS::P64 + 16];
           _sdIsz::P64 = P64[_sdIsS::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdIsz::P64;
           R2 = Hp - 16;
           R1 = _sdIsx::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdIQw,
                       label: Data.Bifunctor.$fBifunctor(,,,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIQw: // global
           Hp = Hp + 152;
           if (Hp > HpLim) (likely: False) goto cdIQA; else goto cdIQz;
       cdIQA: // global
           HpAlloc = 152;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIQz: // global
           I64[Hp - 144] = sat_sdIsZ_info;
           P64[Hp - 128] = R3;
           P64[Hp - 120] = R4;
           I64[Hp - 112] = sat_sdIsS_info;
           P64[Hp - 96] = R2;
           P64[Hp - 88] = R4;
           I64[Hp - 80] = stg_sel_1_upd_info;
           P64[Hp - 64] = R4;
           I64[Hp - 56] = stg_sel_0_upd_info;
           P64[Hp - 40] = R4;
           I64[Hp - 32] = (,,,)_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 80;
           P64[Hp - 8] = Hp - 112;
           P64[Hp] = Hp - 144;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.511230164 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_info;
 },
 sat_sdItD_entry() //  [R1]
         { info_tbl: [(cdIQK,
                       label: sat_sdItD_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIQK: // global
           _sdItD::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIQL; else goto cdIQM;
       cdIQM: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIQO; else goto cdIQN;
       cdIQO: // global
           HpAlloc = 24;
           goto cdIQL;
       cdIQL: // global
           R1 = _sdItD::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIQN: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdItD::P64;
           _sdIt1::P64 = P64[_sdItD::P64 + 16];
           _sdIt2::P64 = P64[_sdItD::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdIt2::P64;
           R2 = Hp - 16;
           R1 = _sdIt1::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdItv_entry() //  [R1]
         { info_tbl: [(cdIQU,
                       label: sat_sdItv_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIQU: // global
           _sdItv::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIQV; else goto cdIQW;
       cdIQW: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIQY; else goto cdIQX;
       cdIQY: // global
           HpAlloc = 24;
           goto cdIQV;
       cdIQV: // global
           R1 = _sdItv::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIQX: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdItv::P64;
           _sdIt0::P64 = P64[_sdItv::P64 + 16];
           _sdIt2::P64 = P64[_sdItv::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdIt2::P64;
           R2 = Hp - 16;
           R1 = _sdIt0::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdIR3,
                       label: Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIR3: // global
           Hp = Hp + 184;
           if (Hp > HpLim) (likely: False) goto cdIR7; else goto cdIR6;
       cdIR7: // global
           HpAlloc = 184;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIR6: // global
           I64[Hp - 176] = sat_sdItD_info;
           P64[Hp - 160] = R3;
           P64[Hp - 152] = R4;
           I64[Hp - 144] = sat_sdItv_info;
           P64[Hp - 128] = R2;
           P64[Hp - 120] = R4;
           I64[Hp - 112] = stg_sel_2_upd_info;
           P64[Hp - 96] = R4;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = R4;
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = R4;
           I64[Hp - 40] = (,,,,)_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           P64[Hp - 16] = Hp - 112;
           P64[Hp - 8] = Hp - 144;
           P64[Hp] = Hp - 176;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.513563208 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_info;
 },
 sat_sdIuu_entry() //  [R1]
         { info_tbl: [(cdIRh,
                       label: sat_sdIuu_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIRh: // global
           _sdIuu::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIRi; else goto cdIRj;
       cdIRj: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIRl; else goto cdIRk;
       cdIRl: // global
           HpAlloc = 24;
           goto cdIRi;
       cdIRi: // global
           R1 = _sdIuu::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIRk: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIuu::P64;
           _sdItF::P64 = P64[_sdIuu::P64 + 16];
           _sdItG::P64 = P64[_sdIuu::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdItG::P64;
           R2 = Hp - 16;
           R1 = _sdItF::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdIul_entry() //  [R1]
         { info_tbl: [(cdIRr,
                       label: sat_sdIul_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIRr: // global
           _sdIul::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIRs; else goto cdIRt;
       cdIRt: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIRv; else goto cdIRu;
       cdIRv: // global
           HpAlloc = 24;
           goto cdIRs;
       cdIRs: // global
           R1 = _sdIul::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIRu: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIul::P64;
           _sdItE::P64 = P64[_sdIul::P64 + 16];
           _sdItG::P64 = P64[_sdIul::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdItG::P64;
           R2 = Hp - 16;
           R1 = _sdItE::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdIRB,
                       label: Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIRB: // global
           Hp = Hp + 216;
           if (Hp > HpLim) (likely: False) goto cdIRF; else goto cdIRE;
       cdIRF: // global
           HpAlloc = 216;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIRE: // global
           I64[Hp - 208] = sat_sdIuu_info;
           P64[Hp - 192] = R3;
           P64[Hp - 184] = R4;
           I64[Hp - 176] = sat_sdIul_info;
           P64[Hp - 160] = R2;
           P64[Hp - 152] = R4;
           I64[Hp - 144] = stg_sel_3_upd_info;
           P64[Hp - 128] = R4;
           I64[Hp - 120] = stg_sel_2_upd_info;
           P64[Hp - 104] = R4;
           I64[Hp - 96] = stg_sel_1_upd_info;
           P64[Hp - 80] = R4;
           I64[Hp - 72] = stg_sel_0_upd_info;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = (,,,,,)_con_info;
           P64[Hp - 40] = Hp - 72;
           P64[Hp - 32] = Hp - 96;
           P64[Hp - 24] = Hp - 120;
           P64[Hp - 16] = Hp - 144;
           P64[Hp - 8] = Hp - 176;
           P64[Hp] = Hp - 208;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.515863394 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_info;
 },
 sat_sdIvA_entry() //  [R1]
         { info_tbl: [(cdIRP,
                       label: sat_sdIvA_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIRP: // global
           _sdIvA::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIRQ; else goto cdIRR;
       cdIRR: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIRT; else goto cdIRS;
       cdIRT: // global
           HpAlloc = 24;
           goto cdIRQ;
       cdIRQ: // global
           R1 = _sdIvA::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIRS: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIvA::P64;
           _sdIuw::P64 = P64[_sdIvA::P64 + 16];
           _sdIux::P64 = P64[_sdIvA::P64 + 24];
           I64[Hp - 16] = stg_sel_6_upd_info;
           P64[Hp] = _sdIux::P64;
           R2 = Hp - 16;
           R1 = _sdIuw::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdIvq_entry() //  [R1]
         { info_tbl: [(cdIRZ,
                       label: sat_sdIvq_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIRZ: // global
           _sdIvq::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIS0; else goto cdIS1;
       cdIS1: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIS3; else goto cdIS2;
       cdIS3: // global
           HpAlloc = 24;
           goto cdIS0;
       cdIS0: // global
           R1 = _sdIvq::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIS2: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIvq::P64;
           _sdIuv::P64 = P64[_sdIvq::P64 + 16];
           _sdIux::P64 = P64[_sdIvq::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdIux::P64;
           R2 = Hp - 16;
           R1 = _sdIuv::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdISa,
                       label: Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdISa: // global
           Hp = Hp + 248;
           if (Hp > HpLim) (likely: False) goto cdISe; else goto cdISd;
       cdISe: // global
           HpAlloc = 248;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdISd: // global
           I64[Hp - 240] = sat_sdIvA_info;
           P64[Hp - 224] = R3;
           P64[Hp - 216] = R4;
           I64[Hp - 208] = sat_sdIvq_info;
           P64[Hp - 192] = R2;
           P64[Hp - 184] = R4;
           I64[Hp - 176] = stg_sel_4_upd_info;
           P64[Hp - 160] = R4;
           I64[Hp - 152] = stg_sel_3_upd_info;
           P64[Hp - 136] = R4;
           I64[Hp - 128] = stg_sel_2_upd_info;
           P64[Hp - 112] = R4;
           I64[Hp - 104] = stg_sel_1_upd_info;
           P64[Hp - 88] = R4;
           I64[Hp - 80] = stg_sel_0_upd_info;
           P64[Hp - 64] = R4;
           I64[Hp - 56] = (,,,,,,)_con_info;
           P64[Hp - 48] = Hp - 80;
           P64[Hp - 40] = Hp - 104;
           P64[Hp - 32] = Hp - 128;
           P64[Hp - 24] = Hp - 152;
           P64[Hp - 16] = Hp - 176;
           P64[Hp - 8] = Hp - 208;
           P64[Hp] = Hp - 240;
           R1 = Hp - 55;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.518211662 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_$cbimap_closure" {
     Data.Bifunctor.$fBifunctorEither_$cbimap_closure:
         const Data.Bifunctor.$fBifunctorEither_$cbimap_info;
 },
 Data.Bifunctor.$fBifunctorEither_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdISq,
                       label: Data.Bifunctor.$fBifunctorEither_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdISq: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cdISr; else goto cdISs;
       cdISr: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctorEither_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdISs: // global
           I64[Sp - 24] = block_cdISj_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto udISH; else goto cdISk;
       udISH: // global
           call _cdISj(R1) args: 0, res: 0, upd: 0;
       cdISk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdISj() //  [R1]
         { info_tbl: [(cdISj,
                       label: block_cdISj_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdISj: // global
           if (R1 & 7 == 1) goto cdISn; else goto cdISo;
       cdISn: // global
           Hp = Hp + 48;
           _sdIvE::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cdISG; else goto cdISy;
       cdISy: // global
           _sdIvF::P64 = P64[_sdIvE::P64 + 7];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sdIvF::P64;
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cdISo: // global
           Hp = Hp + 48;
           _sdIvE::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cdISG; else goto cdISF;
       cdISG: // global
           HpAlloc = 48;
           R1 = _sdIvE::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cdISF: // global
           _sdIvH::P64 = P64[_sdIvE::P64 + 6];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 16];
           P64[Hp - 16] = _sdIvH::P64;
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 6;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.519713014 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst3_closure" {
     Data.Bifunctor.$fBifunctorConst3_closure:
         const Data.Bifunctor.$fBifunctorConst3_info;
 },
 Data.Bifunctor.$fBifunctorConst3_entry() //  [R2, R4]
         { info_tbl: [(cdISM,
                       label: Data.Bifunctor.$fBifunctorConst3_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdISM: // global
           _sdIvJ::P64 = R2;
           R2 = R4;
           R1 = _sdIvJ::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.52053443 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK4_closure" {
     Data.Bifunctor.$fBifunctorK4_closure:
         const Data.Bifunctor.$fBifunctorK4_info;
 },
 Data.Bifunctor.$fBifunctorK4_entry() //  [R2, R4]
         { info_tbl: [(cdIST,
                       label: Data.Bifunctor.$fBifunctorK4_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIST: // global
           _sdIvM::P64 = R2;
           R2 = R4;
           R1 = _sdIvM::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.521862088 UTC

[section ""data" . Data.Bifunctor.$dmsecond_closure" {
     Data.Bifunctor.$dmsecond_closure:
         const Data.Bifunctor.$dmsecond_info;
 },
 Data.Bifunctor.$dmsecond_entry() //  [R2]
         { info_tbl: [(cdIT0,
                       label: Data.Bifunctor.$dmsecond_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIT0: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cdIT1; else goto cdIT2;
       cdIT1: // global
           R2 = R2;
           R1 = Data.Bifunctor.$dmsecond_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdIT2: // global
           R2 = R2;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = GHC.Base.id_closure+1;
           Sp = Sp - 16;
           call Data.Bifunctor.bimap_entry(R2) args: 24, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.522825911 UTC

[section ""data" . Data.Bifunctor.$dmfirst_closure" {
     Data.Bifunctor.$dmfirst_closure:
         const Data.Bifunctor.$dmfirst_info;
 },
 Data.Bifunctor.$dmfirst_entry() //  [R2, R3]
         { info_tbl: [(cdIT7,
                       label: Data.Bifunctor.$dmfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIT7: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cdIT8; else goto cdIT9;
       cdIT8: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$dmfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIT9: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = GHC.Base.id_closure+1;
           Sp = Sp - 24;
           call Data.Bifunctor.bimap_entry(R2) args: 32, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.523786625 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK3_closure" {
     Data.Bifunctor.$fBifunctorK3_closure:
         const Data.Bifunctor.$fBifunctorK3_info;
 },
 Data.Bifunctor.$fBifunctorK3_entry() //  [R2, R3]
         { info_tbl: [(cdITe,
                       label: Data.Bifunctor.$fBifunctorK3_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdITe: // global
           _sdIvS::P64 = R2;
           R2 = R3;
           R1 = _sdIvS::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.52457307 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK2_closure" {
     Data.Bifunctor.$fBifunctorK2_closure:
         const Data.Bifunctor.$fBifunctorK2_info;
 },
 Data.Bifunctor.$fBifunctorK2_entry() //  [R3]
         { info_tbl: [(cdITl,
                       label: Data.Bifunctor.$fBifunctorK2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdITl: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.525307377 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK1_closure" {
     Data.Bifunctor.$fBifunctorK1_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctorK4_closure+3;
         const Data.Bifunctor.$fBifunctorK3_closure+2;
         const Data.Bifunctor.$fBifunctorK2_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.526044292 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst2_closure" {
     Data.Bifunctor.$fBifunctorConst2_closure:
         const Data.Bifunctor.$fBifunctorConst2_info;
 },
 Data.Bifunctor.$fBifunctorConst2_entry() //  [R2, R3]
         { info_tbl: [(cdITs,
                       label: Data.Bifunctor.$fBifunctorConst2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdITs: // global
           _sdIvW::P64 = R2;
           R2 = R3;
           R1 = _sdIvW::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.526872978 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst1_closure" {
     Data.Bifunctor.$fBifunctorConst1_closure:
         const Data.Bifunctor.$fBifunctorConst1_info;
 },
 Data.Bifunctor.$fBifunctorConst1_entry() //  [R3]
         { info_tbl: [(cdITz,
                       label: Data.Bifunctor.$fBifunctorConst1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdITz: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.527560821 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst_closure" {
     Data.Bifunctor.$fBifunctorConst_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctorConst3_closure+3;
         const Data.Bifunctor.$fBifunctorConst2_closure+2;
         const Data.Bifunctor.$fBifunctorConst1_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.528631617 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_$cfirst_closure" {
     Data.Bifunctor.$fBifunctorEither_$cfirst_closure:
         const Data.Bifunctor.$fBifunctorEither_$cfirst_info;
 },
 Data.Bifunctor.$fBifunctorEither_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdITN,
                       label: Data.Bifunctor.$fBifunctorEither_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdITN: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cdITO; else goto cdITP;
       cdITO: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctorEither_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdITP: // global
           I64[Sp - 16] = block_cdITG_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto udIU0; else goto cdITH;
       udIU0: // global
           call _cdITG(R1) args: 0, res: 0, upd: 0;
       cdITH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdITG() //  [R1]
         { info_tbl: [(cdITG,
                       label: block_cdITG_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdITG: // global
           if (R1 & 7 == 1) goto cdITK; else goto cdITL;
       cdITK: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cdITW; else goto cdITV;
       cdITW: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cdITV: // global
           _sdIw3::P64 = P64[R1 + 7];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sdIw3::P64;
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cdITL: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.530312498 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_$csecond_closure" {
     Data.Bifunctor.$fBifunctorEither_$csecond_closure:
         const Data.Bifunctor.$fBifunctorEither_$csecond_info;
 },
 Data.Bifunctor.$fBifunctorEither_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdIUc,
                       label: Data.Bifunctor.$fBifunctorEither_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIUc: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cdIUd; else goto cdIUe;
       cdIUd: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctorEither_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIUe: // global
           I64[Sp - 16] = block_cdIU5_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto udIUp; else goto cdIU6;
       udIUp: // global
           call _cdIU5(R1) args: 0, res: 0, upd: 0;
       cdIU6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdIU5() //  [R1]
         { info_tbl: [(cdIU5,
                       label: block_cdIU5_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIU5: // global
           if (R1 & 7 == 1) goto cdIU9; else goto cdIUa;
       cdIU9: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       cdIUa: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cdIUo; else goto cdIUn;
       cdIUo: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cdIUn: // global
           _sdIwa::P64 = P64[R1 + 6];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sdIwa::P64;
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.531549543 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_closure" {
     Data.Bifunctor.$fBifunctorEither_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctorEither_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctorEither_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctorEither_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.532691583 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_info;
 },
 sat_sdIx6_entry() //  [R1]
         { info_tbl: [(cdIUA,
                       label: sat_sdIx6_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIUA: // global
           _sdIx6::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIUB; else goto cdIUC;
       cdIUC: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIUE; else goto cdIUD;
       cdIUE: // global
           HpAlloc = 24;
           goto cdIUB;
       cdIUB: // global
           R1 = _sdIx6::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIUD: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIx6::P64;
           _sdIwc::P64 = P64[_sdIx6::P64 + 16];
           _sdIwd::P64 = P64[_sdIx6::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdIwd::P64;
           R2 = Hp - 16;
           R1 = _sdIwc::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdIUL,
                       label: Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIUL: // global
           Hp = Hp + 240;
           if (Hp > HpLim) (likely: False) goto cdIUP; else goto cdIUO;
       cdIUP: // global
           HpAlloc = 240;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIUO: // global
           I64[Hp - 232] = stg_sel_6_upd_info;
           P64[Hp - 216] = R3;
           I64[Hp - 208] = sat_sdIx6_info;
           P64[Hp - 192] = R2;
           P64[Hp - 184] = R3;
           I64[Hp - 176] = stg_sel_4_upd_info;
           P64[Hp - 160] = R3;
           I64[Hp - 152] = stg_sel_3_upd_info;
           P64[Hp - 136] = R3;
           I64[Hp - 128] = stg_sel_2_upd_info;
           P64[Hp - 112] = R3;
           I64[Hp - 104] = stg_sel_1_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_0_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = (,,,,,,)_con_info;
           P64[Hp - 48] = Hp - 80;
           P64[Hp - 40] = Hp - 104;
           P64[Hp - 32] = Hp - 128;
           P64[Hp - 24] = Hp - 152;
           P64[Hp - 16] = Hp - 176;
           P64[Hp - 8] = Hp - 208;
           P64[Hp] = Hp - 232;
           R1 = Hp - 55;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.53461165 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_info;
 },
 sat_sdIyj_entry() //  [R1]
         { info_tbl: [(cdIUZ,
                       label: sat_sdIyj_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIUZ: // global
           _sdIyj::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIV0; else goto cdIV1;
       cdIV1: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIV3; else goto cdIV2;
       cdIV3: // global
           HpAlloc = 24;
           goto cdIV0;
       cdIV0: // global
           R1 = _sdIyj::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIV2: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIyj::P64;
           _sdIxg::P64 = P64[_sdIyj::P64 + 16];
           _sdIxh::P64 = P64[_sdIyj::P64 + 24];
           I64[Hp - 16] = stg_sel_6_upd_info;
           P64[Hp] = _sdIxh::P64;
           R2 = Hp - 16;
           R1 = _sdIxg::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdIVb,
                       label: Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIVb: // global
           Hp = Hp + 240;
           if (Hp > HpLim) (likely: False) goto cdIVf; else goto cdIVe;
       cdIVf: // global
           HpAlloc = 240;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIVe: // global
           I64[Hp - 232] = sat_sdIyj_info;
           P64[Hp - 216] = R2;
           P64[Hp - 208] = R3;
           I64[Hp - 200] = stg_sel_5_upd_info;
           P64[Hp - 184] = R3;
           I64[Hp - 176] = stg_sel_4_upd_info;
           P64[Hp - 160] = R3;
           I64[Hp - 152] = stg_sel_3_upd_info;
           P64[Hp - 136] = R3;
           I64[Hp - 128] = stg_sel_2_upd_info;
           P64[Hp - 112] = R3;
           I64[Hp - 104] = stg_sel_1_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_0_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = (,,,,,,)_con_info;
           P64[Hp - 48] = Hp - 80;
           P64[Hp - 40] = Hp - 104;
           P64[Hp - 32] = Hp - 128;
           P64[Hp - 24] = Hp - 152;
           P64[Hp - 16] = Hp - 176;
           P64[Hp - 8] = Hp - 200;
           P64[Hp] = Hp - 232;
           R1 = Hp - 55;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.536036068 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.53710477 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_info;
 },
 sat_sdIz0_entry() //  [R1]
         { info_tbl: [(cdIVq,
                       label: sat_sdIz0_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIVq: // global
           _sdIz0::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIVr; else goto cdIVs;
       cdIVs: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIVu; else goto cdIVt;
       cdIVu: // global
           HpAlloc = 24;
           goto cdIVr;
       cdIVr: // global
           R1 = _sdIz0::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIVt: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIz0::P64;
           _sdIyk::P64 = P64[_sdIz0::P64 + 16];
           _sdIyl::P64 = P64[_sdIz0::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdIyl::P64;
           R2 = Hp - 16;
           R1 = _sdIyk::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdIVA,
                       label: Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIVA: // global
           Hp = Hp + 208;
           if (Hp > HpLim) (likely: False) goto cdIVE; else goto cdIVD;
       cdIVE: // global
           HpAlloc = 208;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIVD: // global
           I64[Hp - 200] = stg_sel_5_upd_info;
           P64[Hp - 184] = R3;
           I64[Hp - 176] = sat_sdIz0_info;
           P64[Hp - 160] = R2;
           P64[Hp - 152] = R3;
           I64[Hp - 144] = stg_sel_3_upd_info;
           P64[Hp - 128] = R3;
           I64[Hp - 120] = stg_sel_2_upd_info;
           P64[Hp - 104] = R3;
           I64[Hp - 96] = stg_sel_1_upd_info;
           P64[Hp - 80] = R3;
           I64[Hp - 72] = stg_sel_0_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = (,,,,,)_con_info;
           P64[Hp - 40] = Hp - 72;
           P64[Hp - 32] = Hp - 96;
           P64[Hp - 24] = Hp - 120;
           P64[Hp - 16] = Hp - 144;
           P64[Hp - 8] = Hp - 176;
           P64[Hp] = Hp - 200;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.539206703 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_info;
 },
 sat_sdIzX_entry() //  [R1]
         { info_tbl: [(cdIVO,
                       label: sat_sdIzX_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIVO: // global
           _sdIzX::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIVP; else goto cdIVQ;
       cdIVQ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIVS; else goto cdIVR;
       cdIVS: // global
           HpAlloc = 24;
           goto cdIVP;
       cdIVP: // global
           R1 = _sdIzX::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIVR: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIzX::P64;
           _sdIz9::P64 = P64[_sdIzX::P64 + 16];
           _sdIza::P64 = P64[_sdIzX::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdIza::P64;
           R2 = Hp - 16;
           R1 = _sdIz9::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdIVZ,
                       label: Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIVZ: // global
           Hp = Hp + 208;
           if (Hp > HpLim) (likely: False) goto cdIW3; else goto cdIW2;
       cdIW3: // global
           HpAlloc = 208;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIW2: // global
           I64[Hp - 200] = sat_sdIzX_info;
           P64[Hp - 184] = R2;
           P64[Hp - 176] = R3;
           I64[Hp - 168] = stg_sel_4_upd_info;
           P64[Hp - 152] = R3;
           I64[Hp - 144] = stg_sel_3_upd_info;
           P64[Hp - 128] = R3;
           I64[Hp - 120] = stg_sel_2_upd_info;
           P64[Hp - 104] = R3;
           I64[Hp - 96] = stg_sel_1_upd_info;
           P64[Hp - 80] = R3;
           I64[Hp - 72] = stg_sel_0_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = (,,,,,)_con_info;
           P64[Hp - 40] = Hp - 72;
           P64[Hp - 32] = Hp - 96;
           P64[Hp - 24] = Hp - 120;
           P64[Hp - 16] = Hp - 144;
           P64[Hp - 8] = Hp - 168;
           P64[Hp] = Hp - 200;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.540594631 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.541669135 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_info;
 },
 sat_sdIAs_entry() //  [R1]
         { info_tbl: [(cdIWe,
                       label: sat_sdIAs_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIWe: // global
           _sdIAs::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIWf; else goto cdIWg;
       cdIWg: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIWi; else goto cdIWh;
       cdIWi: // global
           HpAlloc = 24;
           goto cdIWf;
       cdIWf: // global
           R1 = _sdIAs::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIWh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIAs::P64;
           _sdIzY::P64 = P64[_sdIAs::P64 + 16];
           _sdIzZ::P64 = P64[_sdIAs::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdIzZ::P64;
           R2 = Hp - 16;
           R1 = _sdIzY::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdIWn,
                       label: Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIWn: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto cdIWr; else goto cdIWq;
       cdIWr: // global
           HpAlloc = 176;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIWq: // global
           I64[Hp - 168] = stg_sel_4_upd_info;
           P64[Hp - 152] = R3;
           I64[Hp - 144] = sat_sdIAs_info;
           P64[Hp - 128] = R2;
           P64[Hp - 120] = R3;
           I64[Hp - 112] = stg_sel_2_upd_info;
           P64[Hp - 96] = R3;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = R3;
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = (,,,,)_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           P64[Hp - 16] = Hp - 112;
           P64[Hp - 8] = Hp - 144;
           P64[Hp] = Hp - 168;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.543431419 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,,)_$csecond_info;
 },
 sat_sdIBb_entry() //  [R1]
         { info_tbl: [(cdIWB,
                       label: sat_sdIBb_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIWB: // global
           _sdIBb::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIWC; else goto cdIWD;
       cdIWD: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIWF; else goto cdIWE;
       cdIWF: // global
           HpAlloc = 24;
           goto cdIWC;
       cdIWC: // global
           R1 = _sdIBb::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIWE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIBb::P64;
           _sdIAA::P64 = P64[_sdIBb::P64 + 16];
           _sdIAB::P64 = P64[_sdIBb::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdIAB::P64;
           R2 = Hp - 16;
           R1 = _sdIAA::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdIWL,
                       label: Data.Bifunctor.$fBifunctor(,,,,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIWL: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto cdIWP; else goto cdIWO;
       cdIWP: // global
           HpAlloc = 176;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIWO: // global
           I64[Hp - 168] = sat_sdIBb_info;
           P64[Hp - 152] = R2;
           P64[Hp - 144] = R3;
           I64[Hp - 136] = stg_sel_3_upd_info;
           P64[Hp - 120] = R3;
           I64[Hp - 112] = stg_sel_2_upd_info;
           P64[Hp - 96] = R3;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = R3;
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = (,,,,)_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           P64[Hp - 16] = Hp - 112;
           P64[Hp - 8] = Hp - 136;
           P64[Hp] = Hp - 168;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.544799575 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.545866579 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,)_$cfirst_info;
 },
 sat_sdIBw_entry() //  [R1]
         { info_tbl: [(cdIX0,
                       label: sat_sdIBw_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIX0: // global
           _sdIBw::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIX1; else goto cdIX2;
       cdIX2: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIX4; else goto cdIX3;
       cdIX4: // global
           HpAlloc = 24;
           goto cdIX1;
       cdIX1: // global
           R1 = _sdIBw::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIX3: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIBw::P64;
           _sdIBc::P64 = P64[_sdIBw::P64 + 16];
           _sdIBd::P64 = P64[_sdIBw::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdIBd::P64;
           R2 = Hp - 16;
           R1 = _sdIBc::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdIX8,
                       label: Data.Bifunctor.$fBifunctor(,,,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIX8: // global
           Hp = Hp + 144;
           if (Hp > HpLim) (likely: False) goto cdIXc; else goto cdIXb;
       cdIXc: // global
           HpAlloc = 144;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIXb: // global
           I64[Hp - 136] = stg_sel_3_upd_info;
           P64[Hp - 120] = R3;
           I64[Hp - 112] = sat_sdIBw_info;
           P64[Hp - 96] = R2;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_1_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = stg_sel_0_upd_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = (,,,)_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 80;
           P64[Hp - 8] = Hp - 112;
           P64[Hp] = Hp - 136;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.547642637 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,)_$csecond_info;
 },
 sat_sdIC3_entry() //  [R1]
         { info_tbl: [(cdIXm,
                       label: sat_sdIC3_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIXm: // global
           _sdIC3::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIXn; else goto cdIXo;
       cdIXo: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIXq; else goto cdIXp;
       cdIXq: // global
           HpAlloc = 24;
           goto cdIXn;
       cdIXn: // global
           R1 = _sdIC3::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIXp: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIC3::P64;
           _sdIBD::P64 = P64[_sdIC3::P64 + 16];
           _sdIBE::P64 = P64[_sdIC3::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdIBE::P64;
           R2 = Hp - 16;
           R1 = _sdIBD::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdIXv,
                       label: Data.Bifunctor.$fBifunctor(,,,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIXv: // global
           Hp = Hp + 144;
           if (Hp > HpLim) (likely: False) goto cdIXz; else goto cdIXy;
       cdIXz: // global
           HpAlloc = 144;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIXy: // global
           I64[Hp - 136] = sat_sdIC3_info;
           P64[Hp - 120] = R2;
           P64[Hp - 112] = R3;
           I64[Hp - 104] = stg_sel_2_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_1_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = stg_sel_0_upd_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = (,,,)_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 80;
           P64[Hp - 8] = Hp - 104;
           P64[Hp] = Hp - 136;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.549031741 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.550131125 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,)_$cfirst_info;
 },
 sat_sdICg_entry() //  [R1]
         { info_tbl: [(cdIXK,
                       label: sat_sdICg_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIXK: // global
           _sdICg::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIXL; else goto cdIXM;
       cdIXM: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIXO; else goto cdIXN;
       cdIXO: // global
           HpAlloc = 24;
           goto cdIXL;
       cdIXL: // global
           R1 = _sdICg::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIXN: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdICg::P64;
           _sdIC4::P64 = P64[_sdICg::P64 + 16];
           _sdIC5::P64 = P64[_sdICg::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdIC5::P64;
           R2 = Hp - 16;
           R1 = _sdIC4::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdIXR,
                       label: Data.Bifunctor.$fBifunctor(,,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIXR: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto cdIXV; else goto cdIXU;
       cdIXV: // global
           HpAlloc = 112;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIXU: // global
           I64[Hp - 104] = stg_sel_2_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = sat_sdICg_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = stg_sel_0_upd_info;
           P64[Hp - 32] = R3;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = Hp - 48;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 104;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.551817821 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,)_$csecond_info;
 },
 sat_sdICD_entry() //  [R1]
         { info_tbl: [(cdIY5,
                       label: sat_sdICD_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIY5: // global
           _sdICD::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIY6; else goto cdIY7;
       cdIY7: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIY9; else goto cdIY8;
       cdIY9: // global
           HpAlloc = 24;
           goto cdIY6;
       cdIY6: // global
           R1 = _sdICD::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIY8: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdICD::P64;
           _sdICm::P64 = P64[_sdICD::P64 + 16];
           _sdICn::P64 = P64[_sdICD::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdICn::P64;
           R2 = Hp - 16;
           R1 = _sdICm::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdIYd,
                       label: Data.Bifunctor.$fBifunctor(,,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIYd: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto cdIYh; else goto cdIYg;
       cdIYh: // global
           HpAlloc = 112;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIYg: // global
           I64[Hp - 104] = sat_sdICD_info;
           P64[Hp - 88] = R2;
           P64[Hp - 80] = R3;
           I64[Hp - 72] = stg_sel_1_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = stg_sel_0_upd_info;
           P64[Hp - 32] = R3;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = Hp - 48;
           P64[Hp - 8] = Hp - 72;
           P64[Hp] = Hp - 104;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.55314927 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.554220953 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,)_$cfirst_info;
 },
 sat_sdICK_entry() //  [R1]
         { info_tbl: [(cdIYs,
                       label: sat_sdICK_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIYs: // global
           _sdICK::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIYt; else goto cdIYu;
       cdIYu: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIYw; else goto cdIYv;
       cdIYw: // global
           HpAlloc = 24;
           goto cdIYt;
       cdIYt: // global
           R1 = _sdICK::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIYv: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdICK::P64;
           _sdICE::P64 = P64[_sdICK::P64 + 16];
           _sdICF::P64 = P64[_sdICK::P64 + 24];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _sdICF::P64;
           R2 = Hp - 16;
           R1 = _sdICE::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdIYy,
                       label: Data.Bifunctor.$fBifunctor(,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIYy: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cdIYC; else goto cdIYB;
       cdIYC: // global
           HpAlloc = 80;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIYB: // global
           I64[Hp - 72] = stg_sel_1_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = sat_sdICK_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 72;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.557717929 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,)_$csecond_info;
 },
 sat_sdICZ_entry() //  [R1]
         { info_tbl: [(cdIYM,
                       label: sat_sdICZ_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIYM: // global
           _sdICZ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdIYN; else goto cdIYO;
       cdIYO: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdIYQ; else goto cdIYP;
       cdIYQ: // global
           HpAlloc = 24;
           goto cdIYN;
       cdIYN: // global
           R1 = _sdICZ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIYP: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdICZ::P64;
           _sdICP::P64 = P64[_sdICZ::P64 + 16];
           _sdICQ::P64 = P64[_sdICZ::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdICQ::P64;
           R2 = Hp - 16;
           R1 = _sdICP::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdIYT,
                       label: Data.Bifunctor.$fBifunctor(,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIYT: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cdIYX; else goto cdIYW;
       cdIYX: // global
           HpAlloc = 80;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIYW: // global
           I64[Hp - 72] = sat_sdICZ_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 72;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.559141755 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_closure" {
     Data.Bifunctor.$fBifunctor(,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.560411625 UTC

[section ""data" . Data.Bifunctor.$dmbimap_closure" {
     Data.Bifunctor.$dmbimap_closure:
         const Data.Bifunctor.$dmbimap_info;
 },
 f1_sdID3_entry() //  [R1]
         { info_tbl: [(cdIZ6,
                       label: f1_sdID3_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIZ6: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cdIZ7; else goto cdIZ8;
       cdIZ7: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIZ8: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Data.Bifunctor.first_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 g1_sdID4_entry() //  [R1]
         { info_tbl: [(cdIZd,
                       label: g1_sdID4_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIZd: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cdIZe; else goto cdIZf;
       cdIZe: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdIZf: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Data.Bifunctor.second_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_sdID7_entry() //  [R1, R2]
         { info_tbl: [(cdIZm,
                       label: sat_sdID7_info
                       rep:HeapRep 2 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIZm: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cdIZq; else goto cdIZp;
       cdIZq: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdIZp: // global
           _sdID3::P64 = P64[R1 + 7];
           _sdID4::P64 = P64[R1 + 15];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sdID4::P64;
           P64[Hp] = R2;
           R2 = Hp - 24;
           R1 = _sdID3::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 Data.Bifunctor.$dmbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdIZr,
                       label: Data.Bifunctor.$dmbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIZr: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cdIZv; else goto cdIZu;
       cdIZv: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$dmbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIZu: // global
           I64[Hp - 80] = f1_sdID3_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = g1_sdID4_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = sat_sdID7_info;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 48;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.562060057 UTC

[section ""cstring" . Data.Bifunctor.$trModule4_bytes" {
     Data.Bifunctor.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.562633856 UTC

[section ""data" . Data.Bifunctor.$trModule3_closure" {
     Data.Bifunctor.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bifunctor.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.563181487 UTC

[section ""cstring" . Data.Bifunctor.$trModule2_bytes" {
     Data.Bifunctor.$trModule2_bytes:
         I8[] [68,97,116,97,46,66,105,102,117,110,99,116,111,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.563770422 UTC

[section ""data" . Data.Bifunctor.$trModule1_closure" {
     Data.Bifunctor.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bifunctor.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.564322916 UTC

[section ""data" . Data.Bifunctor.$trModule_closure" {
     Data.Bifunctor.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Bifunctor.$trModule3_closure+1;
         const Data.Bifunctor.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.564932288 UTC

[section ""data" . $krep_rdIrJ_closure" {
     $krep_rdIrJ_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.565840206 UTC

[section ""data" . Data.Bifunctor.$tcBifunctor1_closure" {
     Data.Bifunctor.$tcBifunctor1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*->*->*_closure;
         const $krep_rdIrJ_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.566530077 UTC

[section ""cstring" . Data.Bifunctor.$tcBifunctor3_bytes" {
     Data.Bifunctor.$tcBifunctor3_bytes:
         I8[] [66,105,102,117,110,99,116,111,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.567211179 UTC

[section ""data" . Data.Bifunctor.$tcBifunctor2_closure" {
     Data.Bifunctor.$tcBifunctor2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bifunctor.$tcBifunctor3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.567934513 UTC

[section ""data" . Data.Bifunctor.$tcBifunctor_closure" {
     Data.Bifunctor.$tcBifunctor_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Bifunctor.$trModule_closure+1;
         const Data.Bifunctor.$tcBifunctor2_closure+1;
         const Data.Bifunctor.$tcBifunctor1_closure+4;
         const 15833243383698227199;
         const 9927729778853233711;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.569202428 UTC

[section ""data" . Data.Bifunctor.C:Bifunctor_closure" {
     Data.Bifunctor.C:Bifunctor_closure:
         const Data.Bifunctor.C:Bifunctor_info;
 },
 Data.Bifunctor.C:Bifunctor_entry() //  [R2, R3, R4]
         { info_tbl: [(cdIZB,
                       label: Data.Bifunctor.C:Bifunctor_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIZB: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cdIZF; else goto cdIZE;
       cdIZF: // global
           HpAlloc = 32;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.C:Bifunctor_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdIZE: // global
           I64[Hp - 24] = Data.Bifunctor.C:Bifunctor_con_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.570312432 UTC

[Data.Bifunctor.C:Bifunctor_con_entry() //  [R1]
         { info_tbl: [(cdIZG,
                       label: Data.Bifunctor.C:Bifunctor_con_info
                       rep:HeapRep 3 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,68,97,116,97,46,66,105,102,117,110,99,116,111,114,46,67,58,66,105,102,117,110,99,116,111,114]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIZG: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.571066058 UTC

[section ""relreadonly" . SdIOp_srt" { SdIOp_srt:
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.572175915 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:08:56.574696287 UTC

[section ""data" . Data.Bifunctor.bimap_closure" {
     Data.Bifunctor.bimap_closure:
         const Data.Bifunctor.bimap_info;
 },
 Data.Bifunctor.bimap_entry() //  [R2]
         { info_tbl: [(cdIZP,
                       label: Data.Bifunctor.bimap_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIZP: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cdIZQ; else goto cdIZR;
       cdIZQ: // global
           R2 = R2;
           R1 = Data.Bifunctor.bimap_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdIZR: // global
           I64[Sp - 8] = block_cdIZM_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto udIZV; else goto cdIZN;
       udIZV: // global
           call _cdIZM(R1) args: 0, res: 0, upd: 0;
       cdIZN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdIZM() //  [R1]
         { info_tbl: [(cdIZM,
                       label: block_cdIZM_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdIZM: // global
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.585113701 UTC

[section ""data" . Data.Bifunctor.first_closure" {
     Data.Bifunctor.first_closure:
         const Data.Bifunctor.first_info;
 },
 Data.Bifunctor.first_entry() //  [R2]
         { info_tbl: [(cdJ0c,
                       label: Data.Bifunctor.first_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ0c: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cdJ0d; else goto cdJ0e;
       cdJ0d: // global
           R2 = R2;
           R1 = Data.Bifunctor.first_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdJ0e: // global
           I64[Sp - 8] = block_cdJ09_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto udJ0i; else goto cdJ0a;
       udJ0i: // global
           call _cdJ09(R1) args: 0, res: 0, upd: 0;
       cdJ0a: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdJ09() //  [R1]
         { info_tbl: [(cdJ09,
                       label: block_cdJ09_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ09: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.595224353 UTC

[section ""data" . Data.Bifunctor.second_closure" {
     Data.Bifunctor.second_closure:
         const Data.Bifunctor.second_info;
 },
 Data.Bifunctor.second_entry() //  [R2]
         { info_tbl: [(cdJ0z,
                       label: Data.Bifunctor.second_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ0z: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cdJ0A; else goto cdJ0B;
       cdJ0A: // global
           R2 = R2;
           R1 = Data.Bifunctor.second_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdJ0B: // global
           I64[Sp - 8] = block_cdJ0w_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto udJ0F; else goto cdJ0x;
       udJ0F: // global
           call _cdJ0w(R1) args: 0, res: 0, upd: 0;
       cdJ0x: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdJ0w() //  [R1]
         { info_tbl: [(cdJ0w,
                       label: block_cdJ0w_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ0w: // global
           R1 = P64[R1 + 23];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.606082728 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,)_$cbimap_info;
 },
 sat_sdIsc_entry() //  [R1]
         { info_tbl: [(cdJ0Y,
                       label: sat_sdIsc_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ0Y: // global
           _sdIsc::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ0Z; else goto cdJ10;
       cdJ10: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ12; else goto cdJ11;
       cdJ12: // global
           HpAlloc = 24;
           goto cdJ0Z;
       cdJ0Z: // global
           R1 = _sdIsc::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ11: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIsc::P64;
           _sdIs1::P64 = P64[_sdIsc::P64 + 16];
           _sdIs2::P64 = P64[_sdIsc::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdIs2::P64;
           R2 = Hp - 16;
           R1 = _sdIs1::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdIs7_entry() //  [R1]
         { info_tbl: [(cdJ18,
                       label: sat_sdIs7_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ18: // global
           _sdIs7::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ19; else goto cdJ1a;
       cdJ1a: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ1c; else goto cdJ1b;
       cdJ1c: // global
           HpAlloc = 24;
           goto cdJ19;
       cdJ19: // global
           R1 = _sdIs7::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ1b: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIs7::P64;
           _sdIs0::P64 = P64[_sdIs7::P64 + 16];
           _sdIs2::P64 = P64[_sdIs7::P64 + 24];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _sdIs2::P64;
           R2 = Hp - 16;
           R1 = _sdIs0::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdJ1e,
                       label: Data.Bifunctor.$fBifunctor(,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ1e: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cdJ1i; else goto cdJ1h;
       cdJ1i: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJ1h: // global
           I64[Hp - 80] = sat_sdIsc_info;
           P64[Hp - 64] = R3;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = sat_sdIs7_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 80;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.622155529 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,)_$cbimap_info;
 },
 sat_sdIsw_entry() //  [R1]
         { info_tbl: [(cdJ1H,
                       label: sat_sdIsw_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ1H: // global
           _sdIsw::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ1I; else goto cdJ1J;
       cdJ1J: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ1L; else goto cdJ1K;
       cdJ1L: // global
           HpAlloc = 24;
           goto cdJ1I;
       cdJ1I: // global
           R1 = _sdIsw::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ1K: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIsw::P64;
           _sdIse::P64 = P64[_sdIsw::P64 + 16];
           _sdIsf::P64 = P64[_sdIsw::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdIsf::P64;
           R2 = Hp - 16;
           R1 = _sdIse::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdIsq_entry() //  [R1]
         { info_tbl: [(cdJ1R,
                       label: sat_sdIsq_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ1R: // global
           _sdIsq::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ1S; else goto cdJ1T;
       cdJ1T: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ1V; else goto cdJ1U;
       cdJ1V: // global
           HpAlloc = 24;
           goto cdJ1S;
       cdJ1S: // global
           R1 = _sdIsq::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ1U: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIsq::P64;
           _sdIsd::P64 = P64[_sdIsq::P64 + 16];
           _sdIsf::P64 = P64[_sdIsq::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdIsf::P64;
           R2 = Hp - 16;
           R1 = _sdIsd::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdJ1Y,
                       label: Data.Bifunctor.$fBifunctor(,,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ1Y: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto cdJ22; else goto cdJ21;
       cdJ22: // global
           HpAlloc = 120;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJ21: // global
           I64[Hp - 112] = sat_sdIsw_info;
           P64[Hp - 96] = R3;
           P64[Hp - 88] = R4;
           I64[Hp - 80] = sat_sdIsq_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = stg_sel_0_upd_info;
           P64[Hp - 32] = R4;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = Hp - 48;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 112;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.635332657 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,)_$cbimap_info;
 },
 sat_sdIsZ_entry() //  [R1]
         { info_tbl: [(cdJ2s,
                       label: sat_sdIsZ_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ2s: // global
           _sdIsZ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ2t; else goto cdJ2u;
       cdJ2u: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ2w; else goto cdJ2v;
       cdJ2w: // global
           HpAlloc = 24;
           goto cdJ2t;
       cdJ2t: // global
           R1 = _sdIsZ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ2v: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIsZ::P64;
           _sdIsy::P64 = P64[_sdIsZ::P64 + 16];
           _sdIsz::P64 = P64[_sdIsZ::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdIsz::P64;
           R2 = Hp - 16;
           R1 = _sdIsy::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdIsS_entry() //  [R1]
         { info_tbl: [(cdJ2C,
                       label: sat_sdIsS_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ2C: // global
           _sdIsS::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ2D; else goto cdJ2E;
       cdJ2E: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ2G; else goto cdJ2F;
       cdJ2G: // global
           HpAlloc = 24;
           goto cdJ2D;
       cdJ2D: // global
           R1 = _sdIsS::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ2F: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIsS::P64;
           _sdIsx::P64 = P64[_sdIsS::P64 + 16];
           _sdIsz::P64 = P64[_sdIsS::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdIsz::P64;
           R2 = Hp - 16;
           R1 = _sdIsx::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdJ2K,
                       label: Data.Bifunctor.$fBifunctor(,,,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ2K: // global
           Hp = Hp + 152;
           if (Hp > HpLim) (likely: False) goto cdJ2O; else goto cdJ2N;
       cdJ2O: // global
           HpAlloc = 152;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJ2N: // global
           I64[Hp - 144] = sat_sdIsZ_info;
           P64[Hp - 128] = R3;
           P64[Hp - 120] = R4;
           I64[Hp - 112] = sat_sdIsS_info;
           P64[Hp - 96] = R2;
           P64[Hp - 88] = R4;
           I64[Hp - 80] = stg_sel_1_upd_info;
           P64[Hp - 64] = R4;
           I64[Hp - 56] = stg_sel_0_upd_info;
           P64[Hp - 40] = R4;
           I64[Hp - 32] = (,,,)_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 80;
           P64[Hp - 8] = Hp - 112;
           P64[Hp] = Hp - 144;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.650206693 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_info;
 },
 sat_sdItD_entry() //  [R1]
         { info_tbl: [(cdJ3f,
                       label: sat_sdItD_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ3f: // global
           _sdItD::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ3g; else goto cdJ3h;
       cdJ3h: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ3j; else goto cdJ3i;
       cdJ3j: // global
           HpAlloc = 24;
           goto cdJ3g;
       cdJ3g: // global
           R1 = _sdItD::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ3i: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdItD::P64;
           _sdIt1::P64 = P64[_sdItD::P64 + 16];
           _sdIt2::P64 = P64[_sdItD::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdIt2::P64;
           R2 = Hp - 16;
           R1 = _sdIt1::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdItv_entry() //  [R1]
         { info_tbl: [(cdJ3p,
                       label: sat_sdItv_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ3p: // global
           _sdItv::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ3q; else goto cdJ3r;
       cdJ3r: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ3t; else goto cdJ3s;
       cdJ3t: // global
           HpAlloc = 24;
           goto cdJ3q;
       cdJ3q: // global
           R1 = _sdItv::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ3s: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdItv::P64;
           _sdIt0::P64 = P64[_sdItv::P64 + 16];
           _sdIt2::P64 = P64[_sdItv::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdIt2::P64;
           R2 = Hp - 16;
           R1 = _sdIt0::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdJ3y,
                       label: Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ3y: // global
           Hp = Hp + 184;
           if (Hp > HpLim) (likely: False) goto cdJ3C; else goto cdJ3B;
       cdJ3C: // global
           HpAlloc = 184;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJ3B: // global
           I64[Hp - 176] = sat_sdItD_info;
           P64[Hp - 160] = R3;
           P64[Hp - 152] = R4;
           I64[Hp - 144] = sat_sdItv_info;
           P64[Hp - 128] = R2;
           P64[Hp - 120] = R4;
           I64[Hp - 112] = stg_sel_2_upd_info;
           P64[Hp - 96] = R4;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = R4;
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = R4;
           I64[Hp - 40] = (,,,,)_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           P64[Hp - 16] = Hp - 112;
           P64[Hp - 8] = Hp - 144;
           P64[Hp] = Hp - 176;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.660766994 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_info;
 },
 sat_sdIuu_entry() //  [R1]
         { info_tbl: [(cdJ44,
                       label: sat_sdIuu_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ44: // global
           _sdIuu::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ45; else goto cdJ46;
       cdJ46: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ48; else goto cdJ47;
       cdJ48: // global
           HpAlloc = 24;
           goto cdJ45;
       cdJ45: // global
           R1 = _sdIuu::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ47: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIuu::P64;
           _sdItF::P64 = P64[_sdIuu::P64 + 16];
           _sdItG::P64 = P64[_sdIuu::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdItG::P64;
           R2 = Hp - 16;
           R1 = _sdItF::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdIul_entry() //  [R1]
         { info_tbl: [(cdJ4e,
                       label: sat_sdIul_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ4e: // global
           _sdIul::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ4f; else goto cdJ4g;
       cdJ4g: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ4i; else goto cdJ4h;
       cdJ4i: // global
           HpAlloc = 24;
           goto cdJ4f;
       cdJ4f: // global
           R1 = _sdIul::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ4h: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIul::P64;
           _sdItE::P64 = P64[_sdIul::P64 + 16];
           _sdItG::P64 = P64[_sdIul::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdItG::P64;
           R2 = Hp - 16;
           R1 = _sdItE::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdJ4o,
                       label: Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ4o: // global
           Hp = Hp + 216;
           if (Hp > HpLim) (likely: False) goto cdJ4s; else goto cdJ4r;
       cdJ4s: // global
           HpAlloc = 216;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJ4r: // global
           I64[Hp - 208] = sat_sdIuu_info;
           P64[Hp - 192] = R3;
           P64[Hp - 184] = R4;
           I64[Hp - 176] = sat_sdIul_info;
           P64[Hp - 160] = R2;
           P64[Hp - 152] = R4;
           I64[Hp - 144] = stg_sel_3_upd_info;
           P64[Hp - 128] = R4;
           I64[Hp - 120] = stg_sel_2_upd_info;
           P64[Hp - 104] = R4;
           I64[Hp - 96] = stg_sel_1_upd_info;
           P64[Hp - 80] = R4;
           I64[Hp - 72] = stg_sel_0_upd_info;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = (,,,,,)_con_info;
           P64[Hp - 40] = Hp - 72;
           P64[Hp - 32] = Hp - 96;
           P64[Hp - 24] = Hp - 120;
           P64[Hp - 16] = Hp - 144;
           P64[Hp - 8] = Hp - 176;
           P64[Hp] = Hp - 208;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.671778104 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_info;
 },
 sat_sdIvA_entry() //  [R1]
         { info_tbl: [(cdJ4V,
                       label: sat_sdIvA_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ4V: // global
           _sdIvA::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ4W; else goto cdJ4X;
       cdJ4X: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ4Z; else goto cdJ4Y;
       cdJ4Z: // global
           HpAlloc = 24;
           goto cdJ4W;
       cdJ4W: // global
           R1 = _sdIvA::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ4Y: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIvA::P64;
           _sdIuw::P64 = P64[_sdIvA::P64 + 16];
           _sdIux::P64 = P64[_sdIvA::P64 + 24];
           I64[Hp - 16] = stg_sel_6_upd_info;
           P64[Hp] = _sdIux::P64;
           R2 = Hp - 16;
           R1 = _sdIuw::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdIvq_entry() //  [R1]
         { info_tbl: [(cdJ55,
                       label: sat_sdIvq_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ55: // global
           _sdIvq::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ56; else goto cdJ57;
       cdJ57: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ59; else goto cdJ58;
       cdJ59: // global
           HpAlloc = 24;
           goto cdJ56;
       cdJ56: // global
           R1 = _sdIvq::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ58: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIvq::P64;
           _sdIuv::P64 = P64[_sdIvq::P64 + 16];
           _sdIux::P64 = P64[_sdIvq::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdIux::P64;
           R2 = Hp - 16;
           R1 = _sdIuv::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdJ5g,
                       label: Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ5g: // global
           Hp = Hp + 248;
           if (Hp > HpLim) (likely: False) goto cdJ5k; else goto cdJ5j;
       cdJ5k: // global
           HpAlloc = 248;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJ5j: // global
           I64[Hp - 240] = sat_sdIvA_info;
           P64[Hp - 224] = R3;
           P64[Hp - 216] = R4;
           I64[Hp - 208] = sat_sdIvq_info;
           P64[Hp - 192] = R2;
           P64[Hp - 184] = R4;
           I64[Hp - 176] = stg_sel_4_upd_info;
           P64[Hp - 160] = R4;
           I64[Hp - 152] = stg_sel_3_upd_info;
           P64[Hp - 136] = R4;
           I64[Hp - 128] = stg_sel_2_upd_info;
           P64[Hp - 112] = R4;
           I64[Hp - 104] = stg_sel_1_upd_info;
           P64[Hp - 88] = R4;
           I64[Hp - 80] = stg_sel_0_upd_info;
           P64[Hp - 64] = R4;
           I64[Hp - 56] = (,,,,,,)_con_info;
           P64[Hp - 48] = Hp - 80;
           P64[Hp - 40] = Hp - 104;
           P64[Hp - 32] = Hp - 128;
           P64[Hp - 24] = Hp - 152;
           P64[Hp - 16] = Hp - 176;
           P64[Hp - 8] = Hp - 208;
           P64[Hp] = Hp - 240;
           R1 = Hp - 55;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.683725243 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_$cbimap_closure" {
     Data.Bifunctor.$fBifunctorEither_$cbimap_closure:
         const Data.Bifunctor.$fBifunctorEither_$cbimap_info;
 },
 Data.Bifunctor.$fBifunctorEither_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdJ5Q,
                       label: Data.Bifunctor.$fBifunctorEither_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ5Q: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cdJ5R; else goto cdJ5S;
       cdJ5R: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctorEither_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJ5S: // global
           I64[Sp - 24] = block_cdJ5J_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto udJ67; else goto cdJ5K;
       udJ67: // global
           call _cdJ5J(R1) args: 0, res: 0, upd: 0;
       cdJ5K: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdJ5J() //  [R1]
         { info_tbl: [(cdJ5J,
                       label: block_cdJ5J_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ5J: // global
           if (R1 & 7 == 1) goto cdJ5N; else goto cdJ5O;
       cdJ5N: // global
           Hp = Hp + 48;
           _sdIvE::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cdJ66; else goto cdJ5Y;
       cdJ5Y: // global
           _sdIvF::P64 = P64[_sdIvE::P64 + 7];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sdIvF::P64;
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cdJ5O: // global
           Hp = Hp + 48;
           _sdIvE::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cdJ66; else goto cdJ65;
       cdJ66: // global
           HpAlloc = 48;
           R1 = _sdIvE::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cdJ65: // global
           _sdIvH::P64 = P64[_sdIvE::P64 + 6];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 16];
           P64[Hp - 16] = _sdIvH::P64;
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 6;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.691584654 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst3_closure" {
     Data.Bifunctor.$fBifunctorConst3_closure:
         const Data.Bifunctor.$fBifunctorConst3_info;
 },
 Data.Bifunctor.$fBifunctorConst3_entry() //  [R2, R4]
         { info_tbl: [(cdJ6t,
                       label: Data.Bifunctor.$fBifunctorConst3_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ6t: // global
           _sdIvJ::P64 = R2;
           R2 = R4;
           R1 = _sdIvJ::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.695903149 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK4_closure" {
     Data.Bifunctor.$fBifunctorK4_closure:
         const Data.Bifunctor.$fBifunctorK4_info;
 },
 Data.Bifunctor.$fBifunctorK4_entry() //  [R2, R4]
         { info_tbl: [(cdJ6E,
                       label: Data.Bifunctor.$fBifunctorK4_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ6E: // global
           _sdIvM::P64 = R2;
           R2 = R4;
           R1 = _sdIvM::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.699952059 UTC

[section ""data" . Data.Bifunctor.$dmsecond_closure" {
     Data.Bifunctor.$dmsecond_closure:
         const Data.Bifunctor.$dmsecond_info;
 },
 Data.Bifunctor.$dmsecond_entry() //  [R2]
         { info_tbl: [(cdJ6P,
                       label: Data.Bifunctor.$dmsecond_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ6P: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ6Q; else goto cdJ6R;
       cdJ6Q: // global
           R2 = R2;
           R1 = Data.Bifunctor.$dmsecond_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdJ6R: // global
           R2 = R2;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = GHC.Base.id_closure+1;
           Sp = Sp - 16;
           call Data.Bifunctor.bimap_entry(R2) args: 24, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.704698614 UTC

[section ""data" . Data.Bifunctor.$dmfirst_closure" {
     Data.Bifunctor.$dmfirst_closure:
         const Data.Bifunctor.$dmfirst_info;
 },
 Data.Bifunctor.$dmfirst_entry() //  [R2, R3]
         { info_tbl: [(cdJ71,
                       label: Data.Bifunctor.$dmfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ71: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cdJ72; else goto cdJ73;
       cdJ72: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$dmfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJ73: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = GHC.Base.id_closure+1;
           Sp = Sp - 24;
           call Data.Bifunctor.bimap_entry(R2) args: 32, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.70953539 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK3_closure" {
     Data.Bifunctor.$fBifunctorK3_closure:
         const Data.Bifunctor.$fBifunctorK3_info;
 },
 Data.Bifunctor.$fBifunctorK3_entry() //  [R2, R3]
         { info_tbl: [(cdJ7d,
                       label: Data.Bifunctor.$fBifunctorK3_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ7d: // global
           _sdIvS::P64 = R2;
           R2 = R3;
           R1 = _sdIvS::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.71358172 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK2_closure" {
     Data.Bifunctor.$fBifunctorK2_closure:
         const Data.Bifunctor.$fBifunctorK2_info;
 },
 Data.Bifunctor.$fBifunctorK2_entry() //  [R3]
         { info_tbl: [(cdJ7o,
                       label: Data.Bifunctor.$fBifunctorK2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ7o: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.71830108 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK1_closure" {
     Data.Bifunctor.$fBifunctorK1_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctorK4_closure+3;
         const Data.Bifunctor.$fBifunctorK3_closure+2;
         const Data.Bifunctor.$fBifunctorK2_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.72049659 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst2_closure" {
     Data.Bifunctor.$fBifunctorConst2_closure:
         const Data.Bifunctor.$fBifunctorConst2_info;
 },
 Data.Bifunctor.$fBifunctorConst2_entry() //  [R2, R3]
         { info_tbl: [(cdJ7A,
                       label: Data.Bifunctor.$fBifunctorConst2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ7A: // global
           _sdIvW::P64 = R2;
           R2 = R3;
           R1 = _sdIvW::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.724643479 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst1_closure" {
     Data.Bifunctor.$fBifunctorConst1_closure:
         const Data.Bifunctor.$fBifunctorConst1_info;
 },
 Data.Bifunctor.$fBifunctorConst1_entry() //  [R3]
         { info_tbl: [(cdJ7L,
                       label: Data.Bifunctor.$fBifunctorConst1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ7L: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.729048606 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst_closure" {
     Data.Bifunctor.$fBifunctorConst_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctorConst3_closure+3;
         const Data.Bifunctor.$fBifunctorConst2_closure+2;
         const Data.Bifunctor.$fBifunctorConst1_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.731869114 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_$cfirst_closure" {
     Data.Bifunctor.$fBifunctorEither_$cfirst_closure:
         const Data.Bifunctor.$fBifunctorEither_$cfirst_info;
 },
 Data.Bifunctor.$fBifunctorEither_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdJ84,
                       label: Data.Bifunctor.$fBifunctorEither_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ84: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ85; else goto cdJ86;
       cdJ85: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctorEither_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJ86: // global
           I64[Sp - 16] = block_cdJ7X_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto udJ8h; else goto cdJ7Y;
       udJ8h: // global
           call _cdJ7X(R1) args: 0, res: 0, upd: 0;
       cdJ7Y: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdJ7X() //  [R1]
         { info_tbl: [(cdJ7X,
                       label: block_cdJ7X_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ7X: // global
           if (R1 & 7 == 1) goto cdJ81; else goto cdJ82;
       cdJ81: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cdJ8d; else goto cdJ8c;
       cdJ8d: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cdJ8c: // global
           _sdIw3::P64 = P64[R1 + 7];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sdIw3::P64;
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cdJ82: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.740028731 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_$csecond_closure" {
     Data.Bifunctor.$fBifunctorEither_$csecond_closure:
         const Data.Bifunctor.$fBifunctorEither_$csecond_info;
 },
 Data.Bifunctor.$fBifunctorEither_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdJ8J,
                       label: Data.Bifunctor.$fBifunctorEither_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ8J: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ8K; else goto cdJ8L;
       cdJ8K: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctorEither_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJ8L: // global
           I64[Sp - 16] = block_cdJ8C_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto udJ8W; else goto cdJ8D;
       udJ8W: // global
           call _cdJ8C(R1) args: 0, res: 0, upd: 0;
       cdJ8D: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdJ8C() //  [R1]
         { info_tbl: [(cdJ8C,
                       label: block_cdJ8C_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ8C: // global
           if (R1 & 7 == 1) goto cdJ8G; else goto cdJ8H;
       cdJ8G: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       cdJ8H: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cdJ8V; else goto cdJ8U;
       cdJ8V: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cdJ8U: // global
           _sdIwa::P64 = P64[R1 + 6];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sdIwa::P64;
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.747256347 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_closure" {
     Data.Bifunctor.$fBifunctorEither_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctorEither_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctorEither_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctorEither_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.750061805 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_info;
 },
 sat_sdIx6_entry() //  [R1]
         { info_tbl: [(cdJ9o,
                       label: sat_sdIx6_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ9o: // global
           _sdIx6::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJ9p; else goto cdJ9q;
       cdJ9q: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJ9s; else goto cdJ9r;
       cdJ9s: // global
           HpAlloc = 24;
           goto cdJ9p;
       cdJ9p: // global
           R1 = _sdIx6::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJ9r: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIx6::P64;
           _sdIwc::P64 = P64[_sdIx6::P64 + 16];
           _sdIwd::P64 = P64[_sdIx6::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdIwd::P64;
           R2 = Hp - 16;
           R1 = _sdIwc::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdJ9z,
                       label: Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJ9z: // global
           Hp = Hp + 240;
           if (Hp > HpLim) (likely: False) goto cdJ9D; else goto cdJ9C;
       cdJ9D: // global
           HpAlloc = 240;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJ9C: // global
           I64[Hp - 232] = stg_sel_6_upd_info;
           P64[Hp - 216] = R3;
           I64[Hp - 208] = sat_sdIx6_info;
           P64[Hp - 192] = R2;
           P64[Hp - 184] = R3;
           I64[Hp - 176] = stg_sel_4_upd_info;
           P64[Hp - 160] = R3;
           I64[Hp - 152] = stg_sel_3_upd_info;
           P64[Hp - 136] = R3;
           I64[Hp - 128] = stg_sel_2_upd_info;
           P64[Hp - 112] = R3;
           I64[Hp - 104] = stg_sel_1_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_0_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = (,,,,,,)_con_info;
           P64[Hp - 48] = Hp - 80;
           P64[Hp - 40] = Hp - 104;
           P64[Hp - 32] = Hp - 128;
           P64[Hp - 24] = Hp - 152;
           P64[Hp - 16] = Hp - 176;
           P64[Hp - 8] = Hp - 208;
           P64[Hp] = Hp - 232;
           R1 = Hp - 55;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.759749294 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_info;
 },
 sat_sdIyj_entry() //  [R1]
         { info_tbl: [(cdJa3,
                       label: sat_sdIyj_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJa3: // global
           _sdIyj::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJa4; else goto cdJa5;
       cdJa5: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJa7; else goto cdJa6;
       cdJa7: // global
           HpAlloc = 24;
           goto cdJa4;
       cdJa4: // global
           R1 = _sdIyj::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJa6: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIyj::P64;
           _sdIxg::P64 = P64[_sdIyj::P64 + 16];
           _sdIxh::P64 = P64[_sdIyj::P64 + 24];
           I64[Hp - 16] = stg_sel_6_upd_info;
           P64[Hp] = _sdIxh::P64;
           R2 = Hp - 16;
           R1 = _sdIxg::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdJaf,
                       label: Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJaf: // global
           Hp = Hp + 240;
           if (Hp > HpLim) (likely: False) goto cdJaj; else goto cdJai;
       cdJaj: // global
           HpAlloc = 240;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJai: // global
           I64[Hp - 232] = sat_sdIyj_info;
           P64[Hp - 216] = R2;
           P64[Hp - 208] = R3;
           I64[Hp - 200] = stg_sel_5_upd_info;
           P64[Hp - 184] = R3;
           I64[Hp - 176] = stg_sel_4_upd_info;
           P64[Hp - 160] = R3;
           I64[Hp - 152] = stg_sel_3_upd_info;
           P64[Hp - 136] = R3;
           I64[Hp - 128] = stg_sel_2_upd_info;
           P64[Hp - 112] = R3;
           I64[Hp - 104] = stg_sel_1_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_0_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = (,,,,,,)_con_info;
           P64[Hp - 48] = Hp - 80;
           P64[Hp - 40] = Hp - 104;
           P64[Hp - 32] = Hp - 128;
           P64[Hp - 24] = Hp - 152;
           P64[Hp - 16] = Hp - 176;
           P64[Hp - 8] = Hp - 200;
           P64[Hp] = Hp - 232;
           R1 = Hp - 55;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.767775706 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.770609987 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_info;
 },
 sat_sdIz0_entry() //  [R1]
         { info_tbl: [(cdJaL,
                       label: sat_sdIz0_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJaL: // global
           _sdIz0::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJaM; else goto cdJaN;
       cdJaN: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJaP; else goto cdJaO;
       cdJaP: // global
           HpAlloc = 24;
           goto cdJaM;
       cdJaM: // global
           R1 = _sdIz0::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJaO: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIz0::P64;
           _sdIyk::P64 = P64[_sdIz0::P64 + 16];
           _sdIyl::P64 = P64[_sdIz0::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdIyl::P64;
           R2 = Hp - 16;
           R1 = _sdIyk::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdJaV,
                       label: Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJaV: // global
           Hp = Hp + 208;
           if (Hp > HpLim) (likely: False) goto cdJaZ; else goto cdJaY;
       cdJaZ: // global
           HpAlloc = 208;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJaY: // global
           I64[Hp - 200] = stg_sel_5_upd_info;
           P64[Hp - 184] = R3;
           I64[Hp - 176] = sat_sdIz0_info;
           P64[Hp - 160] = R2;
           P64[Hp - 152] = R3;
           I64[Hp - 144] = stg_sel_3_upd_info;
           P64[Hp - 128] = R3;
           I64[Hp - 120] = stg_sel_2_upd_info;
           P64[Hp - 104] = R3;
           I64[Hp - 96] = stg_sel_1_upd_info;
           P64[Hp - 80] = R3;
           I64[Hp - 72] = stg_sel_0_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = (,,,,,)_con_info;
           P64[Hp - 40] = Hp - 72;
           P64[Hp - 32] = Hp - 96;
           P64[Hp - 24] = Hp - 120;
           P64[Hp - 16] = Hp - 144;
           P64[Hp - 8] = Hp - 176;
           P64[Hp] = Hp - 200;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.779310799 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_info;
 },
 sat_sdIzX_entry() //  [R1]
         { info_tbl: [(cdJbo,
                       label: sat_sdIzX_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJbo: // global
           _sdIzX::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJbp; else goto cdJbq;
       cdJbq: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJbs; else goto cdJbr;
       cdJbs: // global
           HpAlloc = 24;
           goto cdJbp;
       cdJbp: // global
           R1 = _sdIzX::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJbr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIzX::P64;
           _sdIz9::P64 = P64[_sdIzX::P64 + 16];
           _sdIza::P64 = P64[_sdIzX::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdIza::P64;
           R2 = Hp - 16;
           R1 = _sdIz9::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdJbz,
                       label: Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJbz: // global
           Hp = Hp + 208;
           if (Hp > HpLim) (likely: False) goto cdJbD; else goto cdJbC;
       cdJbD: // global
           HpAlloc = 208;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJbC: // global
           I64[Hp - 200] = sat_sdIzX_info;
           P64[Hp - 184] = R2;
           P64[Hp - 176] = R3;
           I64[Hp - 168] = stg_sel_4_upd_info;
           P64[Hp - 152] = R3;
           I64[Hp - 144] = stg_sel_3_upd_info;
           P64[Hp - 128] = R3;
           I64[Hp - 120] = stg_sel_2_upd_info;
           P64[Hp - 104] = R3;
           I64[Hp - 96] = stg_sel_1_upd_info;
           P64[Hp - 80] = R3;
           I64[Hp - 72] = stg_sel_0_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = (,,,,,)_con_info;
           P64[Hp - 40] = Hp - 72;
           P64[Hp - 32] = Hp - 96;
           P64[Hp - 24] = Hp - 120;
           P64[Hp - 16] = Hp - 144;
           P64[Hp - 8] = Hp - 168;
           P64[Hp] = Hp - 200;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.786946959 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.789748809 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_info;
 },
 sat_sdIAs_entry() //  [R1]
         { info_tbl: [(cdJc4,
                       label: sat_sdIAs_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJc4: // global
           _sdIAs::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJc5; else goto cdJc6;
       cdJc6: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJc8; else goto cdJc7;
       cdJc8: // global
           HpAlloc = 24;
           goto cdJc5;
       cdJc5: // global
           R1 = _sdIAs::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJc7: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIAs::P64;
           _sdIzY::P64 = P64[_sdIAs::P64 + 16];
           _sdIzZ::P64 = P64[_sdIAs::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdIzZ::P64;
           R2 = Hp - 16;
           R1 = _sdIzY::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdJcd,
                       label: Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJcd: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto cdJch; else goto cdJcg;
       cdJch: // global
           HpAlloc = 176;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJcg: // global
           I64[Hp - 168] = stg_sel_4_upd_info;
           P64[Hp - 152] = R3;
           I64[Hp - 144] = sat_sdIAs_info;
           P64[Hp - 128] = R2;
           P64[Hp - 120] = R3;
           I64[Hp - 112] = stg_sel_2_upd_info;
           P64[Hp - 96] = R3;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = R3;
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = (,,,,)_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           P64[Hp - 16] = Hp - 112;
           P64[Hp - 8] = Hp - 144;
           P64[Hp] = Hp - 168;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.798610956 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,,)_$csecond_info;
 },
 sat_sdIBb_entry() //  [R1]
         { info_tbl: [(cdJcF,
                       label: sat_sdIBb_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJcF: // global
           _sdIBb::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJcG; else goto cdJcH;
       cdJcH: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJcJ; else goto cdJcI;
       cdJcJ: // global
           HpAlloc = 24;
           goto cdJcG;
       cdJcG: // global
           R1 = _sdIBb::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJcI: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIBb::P64;
           _sdIAA::P64 = P64[_sdIBb::P64 + 16];
           _sdIAB::P64 = P64[_sdIBb::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdIAB::P64;
           R2 = Hp - 16;
           R1 = _sdIAA::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdJcP,
                       label: Data.Bifunctor.$fBifunctor(,,,,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJcP: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto cdJcT; else goto cdJcS;
       cdJcT: // global
           HpAlloc = 176;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJcS: // global
           I64[Hp - 168] = sat_sdIBb_info;
           P64[Hp - 152] = R2;
           P64[Hp - 144] = R3;
           I64[Hp - 136] = stg_sel_3_upd_info;
           P64[Hp - 120] = R3;
           I64[Hp - 112] = stg_sel_2_upd_info;
           P64[Hp - 96] = R3;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = R3;
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = (,,,,)_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           P64[Hp - 16] = Hp - 112;
           P64[Hp - 8] = Hp - 136;
           P64[Hp] = Hp - 168;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.80678426 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.810346389 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,)_$cfirst_info;
 },
 sat_sdIBw_entry() //  [R1]
         { info_tbl: [(cdJdj,
                       label: sat_sdIBw_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJdj: // global
           _sdIBw::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJdk; else goto cdJdl;
       cdJdl: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJdn; else goto cdJdm;
       cdJdn: // global
           HpAlloc = 24;
           goto cdJdk;
       cdJdk: // global
           R1 = _sdIBw::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJdm: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIBw::P64;
           _sdIBc::P64 = P64[_sdIBw::P64 + 16];
           _sdIBd::P64 = P64[_sdIBw::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdIBd::P64;
           R2 = Hp - 16;
           R1 = _sdIBc::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdJdr,
                       label: Data.Bifunctor.$fBifunctor(,,,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJdr: // global
           Hp = Hp + 144;
           if (Hp > HpLim) (likely: False) goto cdJdv; else goto cdJdu;
       cdJdv: // global
           HpAlloc = 144;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJdu: // global
           I64[Hp - 136] = stg_sel_3_upd_info;
           P64[Hp - 120] = R3;
           I64[Hp - 112] = sat_sdIBw_info;
           P64[Hp - 96] = R2;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_1_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = stg_sel_0_upd_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = (,,,)_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 80;
           P64[Hp - 8] = Hp - 112;
           P64[Hp] = Hp - 136;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.818502354 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,)_$csecond_info;
 },
 sat_sdIC3_entry() //  [R1]
         { info_tbl: [(cdJdS,
                       label: sat_sdIC3_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJdS: // global
           _sdIC3::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJdT; else goto cdJdU;
       cdJdU: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJdW; else goto cdJdV;
       cdJdW: // global
           HpAlloc = 24;
           goto cdJdT;
       cdJdT: // global
           R1 = _sdIC3::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJdV: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdIC3::P64;
           _sdIBD::P64 = P64[_sdIC3::P64 + 16];
           _sdIBE::P64 = P64[_sdIC3::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdIBE::P64;
           R2 = Hp - 16;
           R1 = _sdIBD::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdJe1,
                       label: Data.Bifunctor.$fBifunctor(,,,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJe1: // global
           Hp = Hp + 144;
           if (Hp > HpLim) (likely: False) goto cdJe5; else goto cdJe4;
       cdJe5: // global
           HpAlloc = 144;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJe4: // global
           I64[Hp - 136] = sat_sdIC3_info;
           P64[Hp - 120] = R2;
           P64[Hp - 112] = R3;
           I64[Hp - 104] = stg_sel_2_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_1_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = stg_sel_0_upd_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = (,,,)_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 80;
           P64[Hp - 8] = Hp - 104;
           P64[Hp] = Hp - 136;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.825999842 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.828703712 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,)_$cfirst_info;
 },
 sat_sdICg_entry() //  [R1]
         { info_tbl: [(cdJeu,
                       label: sat_sdICg_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJeu: // global
           _sdICg::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJev; else goto cdJew;
       cdJew: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJey; else goto cdJex;
       cdJey: // global
           HpAlloc = 24;
           goto cdJev;
       cdJev: // global
           R1 = _sdICg::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJex: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdICg::P64;
           _sdIC4::P64 = P64[_sdICg::P64 + 16];
           _sdIC5::P64 = P64[_sdICg::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdIC5::P64;
           R2 = Hp - 16;
           R1 = _sdIC4::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdJeB,
                       label: Data.Bifunctor.$fBifunctor(,,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJeB: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto cdJeF; else goto cdJeE;
       cdJeF: // global
           HpAlloc = 112;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJeE: // global
           I64[Hp - 104] = stg_sel_2_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = sat_sdICg_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = stg_sel_0_upd_info;
           P64[Hp - 32] = R3;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = Hp - 48;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 104;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.836994049 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,)_$csecond_info;
 },
 sat_sdICD_entry() //  [R1]
         { info_tbl: [(cdJf1,
                       label: sat_sdICD_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJf1: // global
           _sdICD::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJf2; else goto cdJf3;
       cdJf3: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJf5; else goto cdJf4;
       cdJf5: // global
           HpAlloc = 24;
           goto cdJf2;
       cdJf2: // global
           R1 = _sdICD::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJf4: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdICD::P64;
           _sdICm::P64 = P64[_sdICD::P64 + 16];
           _sdICn::P64 = P64[_sdICD::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdICn::P64;
           R2 = Hp - 16;
           R1 = _sdICm::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdJf9,
                       label: Data.Bifunctor.$fBifunctor(,,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJf9: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto cdJfd; else goto cdJfc;
       cdJfd: // global
           HpAlloc = 112;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJfc: // global
           I64[Hp - 104] = sat_sdICD_info;
           P64[Hp - 88] = R2;
           P64[Hp - 80] = R3;
           I64[Hp - 72] = stg_sel_1_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = stg_sel_0_upd_info;
           P64[Hp - 32] = R3;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = Hp - 48;
           P64[Hp - 8] = Hp - 72;
           P64[Hp] = Hp - 104;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.844094611 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.846804747 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,)_$cfirst_info;
 },
 sat_sdICK_entry() //  [R1]
         { info_tbl: [(cdJfB,
                       label: sat_sdICK_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJfB: // global
           _sdICK::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJfC; else goto cdJfD;
       cdJfD: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJfF; else goto cdJfE;
       cdJfF: // global
           HpAlloc = 24;
           goto cdJfC;
       cdJfC: // global
           R1 = _sdICK::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJfE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdICK::P64;
           _sdICE::P64 = P64[_sdICK::P64 + 16];
           _sdICF::P64 = P64[_sdICK::P64 + 24];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _sdICF::P64;
           R2 = Hp - 16;
           R1 = _sdICE::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdJfH,
                       label: Data.Bifunctor.$fBifunctor(,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJfH: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cdJfL; else goto cdJfK;
       cdJfL: // global
           HpAlloc = 80;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJfK: // global
           I64[Hp - 72] = stg_sel_1_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = sat_sdICK_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 72;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.85576834 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,)_$csecond_info;
 },
 sat_sdICZ_entry() //  [R1]
         { info_tbl: [(cdJg6,
                       label: sat_sdICZ_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJg6: // global
           _sdICZ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJg7; else goto cdJg8;
       cdJg8: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJga; else goto cdJg9;
       cdJga: // global
           HpAlloc = 24;
           goto cdJg7;
       cdJg7: // global
           R1 = _sdICZ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJg9: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdICZ::P64;
           _sdICP::P64 = P64[_sdICZ::P64 + 16];
           _sdICQ::P64 = P64[_sdICZ::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdICQ::P64;
           R2 = Hp - 16;
           R1 = _sdICP::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdJgd,
                       label: Data.Bifunctor.$fBifunctor(,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJgd: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cdJgh; else goto cdJgg;
       cdJgh: // global
           HpAlloc = 80;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJgg: // global
           I64[Hp - 72] = sat_sdICZ_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 72;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.863006737 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_closure" {
     Data.Bifunctor.$fBifunctor(,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.866373126 UTC

[section ""data" . Data.Bifunctor.$dmbimap_closure" {
     Data.Bifunctor.$dmbimap_closure:
         const Data.Bifunctor.$dmbimap_info;
 },
 f1_sdID3_entry() //  [R1]
         { info_tbl: [(cdJgC,
                       label: f1_sdID3_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJgC: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cdJgD; else goto cdJgE;
       cdJgD: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJgE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Data.Bifunctor.first_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 g1_sdID4_entry() //  [R1]
         { info_tbl: [(cdJgJ,
                       label: g1_sdID4_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJgJ: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cdJgK; else goto cdJgL;
       cdJgK: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJgL: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Data.Bifunctor.second_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_sdID7_entry() //  [R1, R2]
         { info_tbl: [(cdJgS,
                       label: sat_sdID7_info
                       rep:HeapRep 2 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJgS: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cdJgW; else goto cdJgV;
       cdJgW: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdJgV: // global
           _sdID3::P64 = P64[R1 + 7];
           _sdID4::P64 = P64[R1 + 15];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sdID4::P64;
           P64[Hp] = R2;
           R2 = Hp - 24;
           R1 = _sdID3::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 Data.Bifunctor.$dmbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdJgX,
                       label: Data.Bifunctor.$dmbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJgX: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cdJh1; else goto cdJh0;
       cdJh1: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$dmbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJh0: // global
           I64[Hp - 80] = f1_sdID3_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = g1_sdID4_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = sat_sdID7_info;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 48;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.877005216 UTC

[section ""cstring" . Data.Bifunctor.$trModule4_bytes" {
     Data.Bifunctor.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.878906398 UTC

[section ""data" . Data.Bifunctor.$trModule3_closure" {
     Data.Bifunctor.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bifunctor.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.880833839 UTC

[section ""cstring" . Data.Bifunctor.$trModule2_bytes" {
     Data.Bifunctor.$trModule2_bytes:
         I8[] [68,97,116,97,46,66,105,102,117,110,99,116,111,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.882744324 UTC

[section ""data" . Data.Bifunctor.$trModule1_closure" {
     Data.Bifunctor.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bifunctor.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.884658479 UTC

[section ""data" . Data.Bifunctor.$trModule_closure" {
     Data.Bifunctor.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Bifunctor.$trModule3_closure+1;
         const Data.Bifunctor.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.886894787 UTC

[section ""data" . $krep_rdIrJ_closure" {
     $krep_rdIrJ_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.888787803 UTC

[section ""data" . Data.Bifunctor.$tcBifunctor1_closure" {
     Data.Bifunctor.$tcBifunctor1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*->*->*_closure;
         const $krep_rdIrJ_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.89067725 UTC

[section ""cstring" . Data.Bifunctor.$tcBifunctor3_bytes" {
     Data.Bifunctor.$tcBifunctor3_bytes:
         I8[] [66,105,102,117,110,99,116,111,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.893468173 UTC

[section ""data" . Data.Bifunctor.$tcBifunctor2_closure" {
     Data.Bifunctor.$tcBifunctor2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bifunctor.$tcBifunctor3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.895298972 UTC

[section ""data" . Data.Bifunctor.$tcBifunctor_closure" {
     Data.Bifunctor.$tcBifunctor_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Bifunctor.$trModule_closure+1;
         const Data.Bifunctor.$tcBifunctor2_closure+1;
         const Data.Bifunctor.$tcBifunctor1_closure+4;
         const 15833243383698227199;
         const 9927729778853233711;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.897768723 UTC

[section ""data" . Data.Bifunctor.C:Bifunctor_closure" {
     Data.Bifunctor.C:Bifunctor_closure:
         const Data.Bifunctor.C:Bifunctor_info;
 },
 Data.Bifunctor.C:Bifunctor_entry() //  [R2, R3, R4]
         { info_tbl: [(cdJhB,
                       label: Data.Bifunctor.C:Bifunctor_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJhB: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cdJhF; else goto cdJhE;
       cdJhF: // global
           HpAlloc = 32;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.C:Bifunctor_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJhE: // global
           I64[Hp - 24] = Data.Bifunctor.C:Bifunctor_con_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.902582382 UTC

[Data.Bifunctor.C:Bifunctor_con_entry() //  [R1]
         { info_tbl: [(cdJhL,
                       label: Data.Bifunctor.C:Bifunctor_con_info
                       rep:HeapRep 3 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,68,97,116,97,46,66,105,102,117,110,99,116,111,114,46,67,58,66,105,102,117,110,99,116,111,114]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJhL: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:56.90635335 UTC

[section ""relreadonly" . SdIOp_srt" { SdIOp_srt:
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.757559917 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:08:57.759287464 UTC

[section ""data" . Data.Bifunctor.bimap_closure" {
     Data.Bifunctor.bimap_closure:
         const Data.Bifunctor.bimap_info;
 },
 Data.Bifunctor.bimap_entry() //  [R2]
         { info_tbl: [(cdJtm,
                       label: Data.Bifunctor.bimap_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJtm: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cdJtn; else goto cdJto;
       cdJtn: // global
           R2 = R2;
           R1 = Data.Bifunctor.bimap_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdJto: // global
           I64[Sp - 8] = block_cdJtj_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto udJts; else goto cdJtk;
       udJts: // global
           call _cdJtj(R1) args: 0, res: 0, upd: 0;
       cdJtk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdJtj() //  [R1]
         { info_tbl: [(cdJtj,
                       label: block_cdJtj_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJtj: // global
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.766875581 UTC

[section ""data" . Data.Bifunctor.first_closure" {
     Data.Bifunctor.first_closure:
         const Data.Bifunctor.first_info;
 },
 Data.Bifunctor.first_entry() //  [R2]
         { info_tbl: [(cdJtK,
                       label: Data.Bifunctor.first_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJtK: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cdJtL; else goto cdJtM;
       cdJtL: // global
           R2 = R2;
           R1 = Data.Bifunctor.first_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdJtM: // global
           I64[Sp - 8] = block_cdJtH_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto udJtQ; else goto cdJtI;
       udJtQ: // global
           call _cdJtH(R1) args: 0, res: 0, upd: 0;
       cdJtI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdJtH() //  [R1]
         { info_tbl: [(cdJtH,
                       label: block_cdJtH_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJtH: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.773048664 UTC

[section ""data" . Data.Bifunctor.second_closure" {
     Data.Bifunctor.second_closure:
         const Data.Bifunctor.second_info;
 },
 Data.Bifunctor.second_entry() //  [R2]
         { info_tbl: [(cdJu8,
                       label: Data.Bifunctor.second_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJu8: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cdJu9; else goto cdJua;
       cdJu9: // global
           R2 = R2;
           R1 = Data.Bifunctor.second_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdJua: // global
           I64[Sp - 8] = block_cdJu5_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto udJue; else goto cdJu6;
       udJue: // global
           call _cdJu5(R1) args: 0, res: 0, upd: 0;
       cdJu6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdJu5() //  [R1]
         { info_tbl: [(cdJu5,
                       label: block_cdJu5_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJu5: // global
           R1 = P64[R1 + 23];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.77932945 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,)_$cbimap_info;
 },
 sat_sdJij_entry() //  [R1]
         { info_tbl: [(cdJuy,
                       label: sat_sdJij_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJuy: // global
           _sdJij::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJuz; else goto cdJuA;
       cdJuA: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJuC; else goto cdJuB;
       cdJuC: // global
           HpAlloc = 24;
           goto cdJuz;
       cdJuz: // global
           R1 = _sdJij::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJuB: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJij::P64;
           _sdJi8::P64 = P64[_sdJij::P64 + 16];
           _sdJi9::P64 = P64[_sdJij::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdJi9::P64;
           R2 = Hp - 16;
           R1 = _sdJi8::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdJie_entry() //  [R1]
         { info_tbl: [(cdJuI,
                       label: sat_sdJie_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJuI: // global
           _sdJie::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJuJ; else goto cdJuK;
       cdJuK: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJuM; else goto cdJuL;
       cdJuM: // global
           HpAlloc = 24;
           goto cdJuJ;
       cdJuJ: // global
           R1 = _sdJie::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJuL: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJie::P64;
           _sdJi7::P64 = P64[_sdJie::P64 + 16];
           _sdJi9::P64 = P64[_sdJie::P64 + 24];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _sdJi9::P64;
           R2 = Hp - 16;
           R1 = _sdJi7::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdJuO,
                       label: Data.Bifunctor.$fBifunctor(,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJuO: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cdJuS; else goto cdJuR;
       cdJuS: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJuR: // global
           I64[Hp - 80] = sat_sdJij_info;
           P64[Hp - 64] = R3;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = sat_sdJie_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 80;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.789506803 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,)_$cbimap_info;
 },
 sat_sdJiD_entry() //  [R1]
         { info_tbl: [(cdJvo,
                       label: sat_sdJiD_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJvo: // global
           _sdJiD::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJvp; else goto cdJvq;
       cdJvq: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJvs; else goto cdJvr;
       cdJvs: // global
           HpAlloc = 24;
           goto cdJvp;
       cdJvp: // global
           R1 = _sdJiD::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJvr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJiD::P64;
           _sdJil::P64 = P64[_sdJiD::P64 + 16];
           _sdJim::P64 = P64[_sdJiD::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdJim::P64;
           R2 = Hp - 16;
           R1 = _sdJil::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdJix_entry() //  [R1]
         { info_tbl: [(cdJvy,
                       label: sat_sdJix_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJvy: // global
           _sdJix::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJvz; else goto cdJvA;
       cdJvA: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJvC; else goto cdJvB;
       cdJvC: // global
           HpAlloc = 24;
           goto cdJvz;
       cdJvz: // global
           R1 = _sdJix::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJvB: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJix::P64;
           _sdJik::P64 = P64[_sdJix::P64 + 16];
           _sdJim::P64 = P64[_sdJix::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdJim::P64;
           R2 = Hp - 16;
           R1 = _sdJik::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdJvF,
                       label: Data.Bifunctor.$fBifunctor(,,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJvF: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto cdJvJ; else goto cdJvI;
       cdJvJ: // global
           HpAlloc = 120;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJvI: // global
           I64[Hp - 112] = sat_sdJiD_info;
           P64[Hp - 96] = R3;
           P64[Hp - 88] = R4;
           I64[Hp - 80] = sat_sdJix_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = stg_sel_0_upd_info;
           P64[Hp - 32] = R4;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = Hp - 48;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 112;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.800013258 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,)_$cbimap_info;
 },
 sat_sdJj6_entry() //  [R1]
         { info_tbl: [(cdJwh,
                       label: sat_sdJj6_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJwh: // global
           _sdJj6::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJwi; else goto cdJwj;
       cdJwj: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJwl; else goto cdJwk;
       cdJwl: // global
           HpAlloc = 24;
           goto cdJwi;
       cdJwi: // global
           R1 = _sdJj6::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJwk: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJj6::P64;
           _sdJiF::P64 = P64[_sdJj6::P64 + 16];
           _sdJiG::P64 = P64[_sdJj6::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdJiG::P64;
           R2 = Hp - 16;
           R1 = _sdJiF::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdJiZ_entry() //  [R1]
         { info_tbl: [(cdJwr,
                       label: sat_sdJiZ_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJwr: // global
           _sdJiZ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJws; else goto cdJwt;
       cdJwt: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJwv; else goto cdJwu;
       cdJwv: // global
           HpAlloc = 24;
           goto cdJws;
       cdJws: // global
           R1 = _sdJiZ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJwu: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJiZ::P64;
           _sdJiE::P64 = P64[_sdJiZ::P64 + 16];
           _sdJiG::P64 = P64[_sdJiZ::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdJiG::P64;
           R2 = Hp - 16;
           R1 = _sdJiE::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdJwz,
                       label: Data.Bifunctor.$fBifunctor(,,,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJwz: // global
           Hp = Hp + 152;
           if (Hp > HpLim) (likely: False) goto cdJwD; else goto cdJwC;
       cdJwD: // global
           HpAlloc = 152;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJwC: // global
           I64[Hp - 144] = sat_sdJj6_info;
           P64[Hp - 128] = R3;
           P64[Hp - 120] = R4;
           I64[Hp - 112] = sat_sdJiZ_info;
           P64[Hp - 96] = R2;
           P64[Hp - 88] = R4;
           I64[Hp - 80] = stg_sel_1_upd_info;
           P64[Hp - 64] = R4;
           I64[Hp - 56] = stg_sel_0_upd_info;
           P64[Hp - 40] = R4;
           I64[Hp - 32] = (,,,)_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 80;
           P64[Hp - 8] = Hp - 112;
           P64[Hp] = Hp - 144;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.812282982 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_info;
 },
 sat_sdJjK_entry() //  [R1]
         { info_tbl: [(cdJxd,
                       label: sat_sdJjK_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJxd: // global
           _sdJjK::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJxe; else goto cdJxf;
       cdJxf: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJxh; else goto cdJxg;
       cdJxh: // global
           HpAlloc = 24;
           goto cdJxe;
       cdJxe: // global
           R1 = _sdJjK::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJxg: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJjK::P64;
           _sdJj8::P64 = P64[_sdJjK::P64 + 16];
           _sdJj9::P64 = P64[_sdJjK::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdJj9::P64;
           R2 = Hp - 16;
           R1 = _sdJj8::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdJjC_entry() //  [R1]
         { info_tbl: [(cdJxn,
                       label: sat_sdJjC_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJxn: // global
           _sdJjC::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJxo; else goto cdJxp;
       cdJxp: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJxr; else goto cdJxq;
       cdJxr: // global
           HpAlloc = 24;
           goto cdJxo;
       cdJxo: // global
           R1 = _sdJjC::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJxq: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJjC::P64;
           _sdJj7::P64 = P64[_sdJjC::P64 + 16];
           _sdJj9::P64 = P64[_sdJjC::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdJj9::P64;
           R2 = Hp - 16;
           R1 = _sdJj7::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdJxw,
                       label: Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJxw: // global
           Hp = Hp + 184;
           if (Hp > HpLim) (likely: False) goto cdJxA; else goto cdJxz;
       cdJxA: // global
           HpAlloc = 184;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJxz: // global
           I64[Hp - 176] = sat_sdJjK_info;
           P64[Hp - 160] = R3;
           P64[Hp - 152] = R4;
           I64[Hp - 144] = sat_sdJjC_info;
           P64[Hp - 128] = R2;
           P64[Hp - 120] = R4;
           I64[Hp - 112] = stg_sel_2_upd_info;
           P64[Hp - 96] = R4;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = R4;
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = R4;
           I64[Hp - 40] = (,,,,)_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           P64[Hp - 16] = Hp - 112;
           P64[Hp - 8] = Hp - 144;
           P64[Hp] = Hp - 176;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.82322066 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_info;
 },
 sat_sdJkB_entry() //  [R1]
         { info_tbl: [(cdJyc,
                       label: sat_sdJkB_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJyc: // global
           _sdJkB::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJyd; else goto cdJye;
       cdJye: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJyg; else goto cdJyf;
       cdJyg: // global
           HpAlloc = 24;
           goto cdJyd;
       cdJyd: // global
           R1 = _sdJkB::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJyf: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJkB::P64;
           _sdJjM::P64 = P64[_sdJkB::P64 + 16];
           _sdJjN::P64 = P64[_sdJkB::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdJjN::P64;
           R2 = Hp - 16;
           R1 = _sdJjM::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdJks_entry() //  [R1]
         { info_tbl: [(cdJym,
                       label: sat_sdJks_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJym: // global
           _sdJks::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJyn; else goto cdJyo;
       cdJyo: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJyq; else goto cdJyp;
       cdJyq: // global
           HpAlloc = 24;
           goto cdJyn;
       cdJyn: // global
           R1 = _sdJks::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJyp: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJks::P64;
           _sdJjL::P64 = P64[_sdJks::P64 + 16];
           _sdJjN::P64 = P64[_sdJks::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdJjN::P64;
           R2 = Hp - 16;
           R1 = _sdJjL::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdJyw,
                       label: Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJyw: // global
           Hp = Hp + 216;
           if (Hp > HpLim) (likely: False) goto cdJyA; else goto cdJyz;
       cdJyA: // global
           HpAlloc = 216;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJyz: // global
           I64[Hp - 208] = sat_sdJkB_info;
           P64[Hp - 192] = R3;
           P64[Hp - 184] = R4;
           I64[Hp - 176] = sat_sdJks_info;
           P64[Hp - 160] = R2;
           P64[Hp - 152] = R4;
           I64[Hp - 144] = stg_sel_3_upd_info;
           P64[Hp - 128] = R4;
           I64[Hp - 120] = stg_sel_2_upd_info;
           P64[Hp - 104] = R4;
           I64[Hp - 96] = stg_sel_1_upd_info;
           P64[Hp - 80] = R4;
           I64[Hp - 72] = stg_sel_0_upd_info;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = (,,,,,)_con_info;
           P64[Hp - 40] = Hp - 72;
           P64[Hp - 32] = Hp - 96;
           P64[Hp - 24] = Hp - 120;
           P64[Hp - 16] = Hp - 144;
           P64[Hp - 8] = Hp - 176;
           P64[Hp] = Hp - 208;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.834761184 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_info;
 },
 sat_sdJlH_entry() //  [R1]
         { info_tbl: [(cdJze,
                       label: sat_sdJlH_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJze: // global
           _sdJlH::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJzf; else goto cdJzg;
       cdJzg: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJzi; else goto cdJzh;
       cdJzi: // global
           HpAlloc = 24;
           goto cdJzf;
       cdJzf: // global
           R1 = _sdJlH::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJzh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJlH::P64;
           _sdJkD::P64 = P64[_sdJlH::P64 + 16];
           _sdJkE::P64 = P64[_sdJlH::P64 + 24];
           I64[Hp - 16] = stg_sel_6_upd_info;
           P64[Hp] = _sdJkE::P64;
           R2 = Hp - 16;
           R1 = _sdJkD::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_sdJlx_entry() //  [R1]
         { info_tbl: [(cdJzo,
                       label: sat_sdJlx_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJzo: // global
           _sdJlx::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJzp; else goto cdJzq;
       cdJzq: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJzs; else goto cdJzr;
       cdJzs: // global
           HpAlloc = 24;
           goto cdJzp;
       cdJzp: // global
           R1 = _sdJlx::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJzr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJlx::P64;
           _sdJkC::P64 = P64[_sdJlx::P64 + 16];
           _sdJkE::P64 = P64[_sdJlx::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdJkE::P64;
           R2 = Hp - 16;
           R1 = _sdJkC::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdJzz,
                       label: Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJzz: // global
           Hp = Hp + 248;
           if (Hp > HpLim) (likely: False) goto cdJzD; else goto cdJzC;
       cdJzD: // global
           HpAlloc = 248;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJzC: // global
           I64[Hp - 240] = sat_sdJlH_info;
           P64[Hp - 224] = R3;
           P64[Hp - 216] = R4;
           I64[Hp - 208] = sat_sdJlx_info;
           P64[Hp - 192] = R2;
           P64[Hp - 184] = R4;
           I64[Hp - 176] = stg_sel_4_upd_info;
           P64[Hp - 160] = R4;
           I64[Hp - 152] = stg_sel_3_upd_info;
           P64[Hp - 136] = R4;
           I64[Hp - 128] = stg_sel_2_upd_info;
           P64[Hp - 112] = R4;
           I64[Hp - 104] = stg_sel_1_upd_info;
           P64[Hp - 88] = R4;
           I64[Hp - 80] = stg_sel_0_upd_info;
           P64[Hp - 64] = R4;
           I64[Hp - 56] = (,,,,,,)_con_info;
           P64[Hp - 48] = Hp - 80;
           P64[Hp - 40] = Hp - 104;
           P64[Hp - 32] = Hp - 128;
           P64[Hp - 24] = Hp - 152;
           P64[Hp - 16] = Hp - 176;
           P64[Hp - 8] = Hp - 208;
           P64[Hp] = Hp - 240;
           R1 = Hp - 55;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.845869307 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_$cbimap_closure" {
     Data.Bifunctor.$fBifunctorEither_$cbimap_closure:
         const Data.Bifunctor.$fBifunctorEither_$cbimap_info;
 },
 Data.Bifunctor.$fBifunctorEither_$cbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdJAl,
                       label: Data.Bifunctor.$fBifunctorEither_$cbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJAl: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cdJAm; else goto cdJAn;
       cdJAm: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctorEither_$cbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJAn: // global
           I64[Sp - 24] = block_cdJAe_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto udJAC; else goto cdJAf;
       udJAC: // global
           call _cdJAe(R1) args: 0, res: 0, upd: 0;
       cdJAf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdJAe() //  [R1]
         { info_tbl: [(cdJAe,
                       label: block_cdJAe_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJAe: // global
           if (R1 & 7 == 1) goto cdJAi; else goto cdJAj;
       cdJAi: // global
           Hp = Hp + 48;
           _sdJlL::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cdJAB; else goto cdJAt;
       cdJAt: // global
           _sdJlM::P64 = P64[_sdJlL::P64 + 7];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sdJlM::P64;
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cdJAj: // global
           Hp = Hp + 48;
           _sdJlL::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cdJAB; else goto cdJAA;
       cdJAB: // global
           HpAlloc = 48;
           R1 = _sdJlL::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cdJAA: // global
           _sdJlO::P64 = P64[_sdJlL::P64 + 6];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 16];
           P64[Hp - 16] = _sdJlO::P64;
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 6;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.854550936 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst3_closure" {
     Data.Bifunctor.$fBifunctorConst3_closure:
         const Data.Bifunctor.$fBifunctorConst3_info;
 },
 Data.Bifunctor.$fBifunctorConst3_entry() //  [R2, R4]
         { info_tbl: [(cdJB3,
                       label: Data.Bifunctor.$fBifunctorConst3_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJB3: // global
           _sdJlQ::P64 = R2;
           R2 = R4;
           R1 = _sdJlQ::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.859514774 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK4_closure" {
     Data.Bifunctor.$fBifunctorK4_closure:
         const Data.Bifunctor.$fBifunctorK4_info;
 },
 Data.Bifunctor.$fBifunctorK4_entry() //  [R2, R4]
         { info_tbl: [(cdJBe,
                       label: Data.Bifunctor.$fBifunctorK4_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJBe: // global
           _sdJlT::P64 = R2;
           R2 = R4;
           R1 = _sdJlT::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.863423387 UTC

[section ""data" . Data.Bifunctor.$dmsecond_closure" {
     Data.Bifunctor.$dmsecond_closure:
         const Data.Bifunctor.$dmsecond_info;
 },
 Data.Bifunctor.$dmsecond_entry() //  [R2]
         { info_tbl: [(cdJBp,
                       label: Data.Bifunctor.$dmsecond_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJBp: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cdJBq; else goto cdJBr;
       cdJBq: // global
           R2 = R2;
           R1 = Data.Bifunctor.$dmsecond_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdJBr: // global
           R2 = R2;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = GHC.Base.id_closure+1;
           Sp = Sp - 16;
           call Data.Bifunctor.bimap_entry(R2) args: 24, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.867737555 UTC

[section ""data" . Data.Bifunctor.$dmfirst_closure" {
     Data.Bifunctor.$dmfirst_closure:
         const Data.Bifunctor.$dmfirst_info;
 },
 Data.Bifunctor.$dmfirst_entry() //  [R2, R3]
         { info_tbl: [(cdJBE,
                       label: Data.Bifunctor.$dmfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJBE: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cdJBF; else goto cdJBG;
       cdJBF: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$dmfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJBG: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = GHC.Base.id_closure+1;
           Sp = Sp - 24;
           call Data.Bifunctor.bimap_entry(R2) args: 32, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.872315231 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK3_closure" {
     Data.Bifunctor.$fBifunctorK3_closure:
         const Data.Bifunctor.$fBifunctorK3_info;
 },
 Data.Bifunctor.$fBifunctorK3_entry() //  [R2, R3]
         { info_tbl: [(cdJBT,
                       label: Data.Bifunctor.$fBifunctorK3_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJBT: // global
           _sdJlZ::P64 = R2;
           R2 = R3;
           R1 = _sdJlZ::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.876230781 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK2_closure" {
     Data.Bifunctor.$fBifunctorK2_closure:
         const Data.Bifunctor.$fBifunctorK2_info;
 },
 Data.Bifunctor.$fBifunctorK2_entry() //  [R3]
         { info_tbl: [(cdJC4,
                       label: Data.Bifunctor.$fBifunctorK2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJC4: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.879971743 UTC

[section ""data" . Data.Bifunctor.$fBifunctorK1_closure" {
     Data.Bifunctor.$fBifunctorK1_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctorK4_closure+3;
         const Data.Bifunctor.$fBifunctorK3_closure+2;
         const Data.Bifunctor.$fBifunctorK2_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.882304441 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst2_closure" {
     Data.Bifunctor.$fBifunctorConst2_closure:
         const Data.Bifunctor.$fBifunctorConst2_info;
 },
 Data.Bifunctor.$fBifunctorConst2_entry() //  [R2, R3]
         { info_tbl: [(cdJCg,
                       label: Data.Bifunctor.$fBifunctorConst2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJCg: // global
           _sdJm3::P64 = R2;
           R2 = R3;
           R1 = _sdJm3::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.88675833 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst1_closure" {
     Data.Bifunctor.$fBifunctorConst1_closure:
         const Data.Bifunctor.$fBifunctorConst1_info;
 },
 Data.Bifunctor.$fBifunctorConst1_entry() //  [R3]
         { info_tbl: [(cdJCr,
                       label: Data.Bifunctor.$fBifunctorConst1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJCr: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.890432869 UTC

[section ""data" . Data.Bifunctor.$fBifunctorConst_closure" {
     Data.Bifunctor.$fBifunctorConst_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctorConst3_closure+3;
         const Data.Bifunctor.$fBifunctorConst2_closure+2;
         const Data.Bifunctor.$fBifunctorConst1_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.893793605 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_$cfirst_closure" {
     Data.Bifunctor.$fBifunctorEither_$cfirst_closure:
         const Data.Bifunctor.$fBifunctorEither_$cfirst_info;
 },
 Data.Bifunctor.$fBifunctorEither_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdJCK,
                       label: Data.Bifunctor.$fBifunctorEither_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJCK: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cdJCL; else goto cdJCM;
       cdJCL: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctorEither_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJCM: // global
           I64[Sp - 16] = block_cdJCD_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto udJCX; else goto cdJCE;
       udJCX: // global
           call _cdJCD(R1) args: 0, res: 0, upd: 0;
       cdJCE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdJCD() //  [R1]
         { info_tbl: [(cdJCD,
                       label: block_cdJCD_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJCD: // global
           if (R1 & 7 == 1) goto cdJCH; else goto cdJCI;
       cdJCH: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cdJCT; else goto cdJCS;
       cdJCT: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cdJCS: // global
           _sdJma::P64 = P64[R1 + 7];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sdJma::P64;
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cdJCI: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.901600277 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_$csecond_closure" {
     Data.Bifunctor.$fBifunctorEither_$csecond_closure:
         const Data.Bifunctor.$fBifunctorEither_$csecond_info;
 },
 Data.Bifunctor.$fBifunctorEither_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdJDs,
                       label: Data.Bifunctor.$fBifunctorEither_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJDs: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cdJDt; else goto cdJDu;
       cdJDt: // global
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctorEither_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJDu: // global
           I64[Sp - 16] = block_cdJDl_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto udJDF; else goto cdJDm;
       udJDF: // global
           call _cdJDl(R1) args: 0, res: 0, upd: 0;
       cdJDm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cdJDl() //  [R1]
         { info_tbl: [(cdJDl,
                       label: block_cdJDl_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJDl: // global
           if (R1 & 7 == 1) goto cdJDp; else goto cdJDq;
       cdJDp: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       cdJDq: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cdJDE; else goto cdJDD;
       cdJDE: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cdJDD: // global
           _sdJmh::P64 = P64[R1 + 6];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sdJmh::P64;
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.908483104 UTC

[section ""data" . Data.Bifunctor.$fBifunctorEither_closure" {
     Data.Bifunctor.$fBifunctorEither_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctorEither_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctorEither_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctorEither_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.911394215 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_info;
 },
 sat_sdJnd_entry() //  [R1]
         { info_tbl: [(cdJEa,
                       label: sat_sdJnd_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJEa: // global
           _sdJnd::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJEb; else goto cdJEc;
       cdJEc: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJEe; else goto cdJEd;
       cdJEe: // global
           HpAlloc = 24;
           goto cdJEb;
       cdJEb: // global
           R1 = _sdJnd::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJEd: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJnd::P64;
           _sdJmj::P64 = P64[_sdJnd::P64 + 16];
           _sdJmk::P64 = P64[_sdJnd::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdJmk::P64;
           R2 = Hp - 16;
           R1 = _sdJmj::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdJEl,
                       label: Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJEl: // global
           Hp = Hp + 240;
           if (Hp > HpLim) (likely: False) goto cdJEp; else goto cdJEo;
       cdJEp: // global
           HpAlloc = 240;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJEo: // global
           I64[Hp - 232] = stg_sel_6_upd_info;
           P64[Hp - 216] = R3;
           I64[Hp - 208] = sat_sdJnd_info;
           P64[Hp - 192] = R2;
           P64[Hp - 184] = R3;
           I64[Hp - 176] = stg_sel_4_upd_info;
           P64[Hp - 160] = R3;
           I64[Hp - 152] = stg_sel_3_upd_info;
           P64[Hp - 136] = R3;
           I64[Hp - 128] = stg_sel_2_upd_info;
           P64[Hp - 112] = R3;
           I64[Hp - 104] = stg_sel_1_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_0_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = (,,,,,,)_con_info;
           P64[Hp - 48] = Hp - 80;
           P64[Hp - 40] = Hp - 104;
           P64[Hp - 32] = Hp - 128;
           P64[Hp - 24] = Hp - 152;
           P64[Hp - 16] = Hp - 176;
           P64[Hp - 8] = Hp - 208;
           P64[Hp] = Hp - 232;
           R1 = Hp - 55;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.91951522 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_info;
 },
 sat_sdJoq_entry() //  [R1]
         { info_tbl: [(cdJEZ,
                       label: sat_sdJoq_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJEZ: // global
           _sdJoq::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJF0; else goto cdJF1;
       cdJF1: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJF3; else goto cdJF2;
       cdJF3: // global
           HpAlloc = 24;
           goto cdJF0;
       cdJF0: // global
           R1 = _sdJoq::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJF2: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJoq::P64;
           _sdJnn::P64 = P64[_sdJoq::P64 + 16];
           _sdJno::P64 = P64[_sdJoq::P64 + 24];
           I64[Hp - 16] = stg_sel_6_upd_info;
           P64[Hp] = _sdJno::P64;
           R2 = Hp - 16;
           R1 = _sdJnn::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdJFb,
                       label: Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJFb: // global
           Hp = Hp + 240;
           if (Hp > HpLim) (likely: False) goto cdJFf; else goto cdJFe;
       cdJFf: // global
           HpAlloc = 240;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJFe: // global
           I64[Hp - 232] = sat_sdJoq_info;
           P64[Hp - 216] = R2;
           P64[Hp - 208] = R3;
           I64[Hp - 200] = stg_sel_5_upd_info;
           P64[Hp - 184] = R3;
           I64[Hp - 176] = stg_sel_4_upd_info;
           P64[Hp - 160] = R3;
           I64[Hp - 152] = stg_sel_3_upd_info;
           P64[Hp - 136] = R3;
           I64[Hp - 128] = stg_sel_2_upd_info;
           P64[Hp - 112] = R3;
           I64[Hp - 104] = stg_sel_1_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_0_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = (,,,,,,)_con_info;
           P64[Hp - 48] = Hp - 80;
           P64[Hp - 40] = Hp - 104;
           P64[Hp - 32] = Hp - 128;
           P64[Hp - 24] = Hp - 152;
           P64[Hp - 16] = Hp - 176;
           P64[Hp - 8] = Hp - 200;
           P64[Hp] = Hp - 232;
           R1 = Hp - 55;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.926762102 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.929405313 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_info;
 },
 sat_sdJp7_entry() //  [R1]
         { info_tbl: [(cdJFR,
                       label: sat_sdJp7_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJFR: // global
           _sdJp7::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJFS; else goto cdJFT;
       cdJFT: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJFV; else goto cdJFU;
       cdJFV: // global
           HpAlloc = 24;
           goto cdJFS;
       cdJFS: // global
           R1 = _sdJp7::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJFU: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJp7::P64;
           _sdJor::P64 = P64[_sdJp7::P64 + 16];
           _sdJos::P64 = P64[_sdJp7::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdJos::P64;
           R2 = Hp - 16;
           R1 = _sdJor::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdJG1,
                       label: Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJG1: // global
           Hp = Hp + 208;
           if (Hp > HpLim) (likely: False) goto cdJG5; else goto cdJG4;
       cdJG5: // global
           HpAlloc = 208;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJG4: // global
           I64[Hp - 200] = stg_sel_5_upd_info;
           P64[Hp - 184] = R3;
           I64[Hp - 176] = sat_sdJp7_info;
           P64[Hp - 160] = R2;
           P64[Hp - 152] = R3;
           I64[Hp - 144] = stg_sel_3_upd_info;
           P64[Hp - 128] = R3;
           I64[Hp - 120] = stg_sel_2_upd_info;
           P64[Hp - 104] = R3;
           I64[Hp - 96] = stg_sel_1_upd_info;
           P64[Hp - 80] = R3;
           I64[Hp - 72] = stg_sel_0_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = (,,,,,)_con_info;
           P64[Hp - 40] = Hp - 72;
           P64[Hp - 32] = Hp - 96;
           P64[Hp - 24] = Hp - 120;
           P64[Hp - 16] = Hp - 144;
           P64[Hp - 8] = Hp - 176;
           P64[Hp] = Hp - 200;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.938099668 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_info;
 },
 sat_sdJq4_entry() //  [R1]
         { info_tbl: [(cdJGD,
                       label: sat_sdJq4_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJGD: // global
           _sdJq4::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJGE; else goto cdJGF;
       cdJGF: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJGH; else goto cdJGG;
       cdJGH: // global
           HpAlloc = 24;
           goto cdJGE;
       cdJGE: // global
           R1 = _sdJq4::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJGG: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJq4::P64;
           _sdJpg::P64 = P64[_sdJq4::P64 + 16];
           _sdJph::P64 = P64[_sdJq4::P64 + 24];
           I64[Hp - 16] = stg_sel_5_upd_info;
           P64[Hp] = _sdJph::P64;
           R2 = Hp - 16;
           R1 = _sdJpg::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdJGO,
                       label: Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJGO: // global
           Hp = Hp + 208;
           if (Hp > HpLim) (likely: False) goto cdJGS; else goto cdJGR;
       cdJGS: // global
           HpAlloc = 208;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJGR: // global
           I64[Hp - 200] = sat_sdJq4_info;
           P64[Hp - 184] = R2;
           P64[Hp - 176] = R3;
           I64[Hp - 168] = stg_sel_4_upd_info;
           P64[Hp - 152] = R3;
           I64[Hp - 144] = stg_sel_3_upd_info;
           P64[Hp - 128] = R3;
           I64[Hp - 120] = stg_sel_2_upd_info;
           P64[Hp - 104] = R3;
           I64[Hp - 96] = stg_sel_1_upd_info;
           P64[Hp - 80] = R3;
           I64[Hp - 72] = stg_sel_0_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = (,,,,,)_con_info;
           P64[Hp - 40] = Hp - 72;
           P64[Hp - 32] = Hp - 96;
           P64[Hp - 24] = Hp - 120;
           P64[Hp - 16] = Hp - 144;
           P64[Hp - 8] = Hp - 168;
           P64[Hp] = Hp - 200;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.944872607 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.947915388 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_info;
 },
 sat_sdJqz_entry() //  [R1]
         { info_tbl: [(cdJHs,
                       label: sat_sdJqz_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJHs: // global
           _sdJqz::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJHt; else goto cdJHu;
       cdJHu: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJHw; else goto cdJHv;
       cdJHw: // global
           HpAlloc = 24;
           goto cdJHt;
       cdJHt: // global
           R1 = _sdJqz::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJHv: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJqz::P64;
           _sdJq5::P64 = P64[_sdJqz::P64 + 16];
           _sdJq6::P64 = P64[_sdJqz::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdJq6::P64;
           R2 = Hp - 16;
           R1 = _sdJq5::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdJHB,
                       label: Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJHB: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto cdJHF; else goto cdJHE;
       cdJHF: // global
           HpAlloc = 176;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJHE: // global
           I64[Hp - 168] = stg_sel_4_upd_info;
           P64[Hp - 152] = R3;
           I64[Hp - 144] = sat_sdJqz_info;
           P64[Hp - 128] = R2;
           P64[Hp - 120] = R3;
           I64[Hp - 112] = stg_sel_2_upd_info;
           P64[Hp - 96] = R3;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = R3;
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = (,,,,)_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           P64[Hp - 16] = Hp - 112;
           P64[Hp - 8] = Hp - 144;
           P64[Hp] = Hp - 168;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.95525183 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,,)_$csecond_info;
 },
 sat_sdJri_entry() //  [R1]
         { info_tbl: [(cdJIb,
                       label: sat_sdJri_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJIb: // global
           _sdJri::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJIc; else goto cdJId;
       cdJId: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJIf; else goto cdJIe;
       cdJIf: // global
           HpAlloc = 24;
           goto cdJIc;
       cdJIc: // global
           R1 = _sdJri::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJIe: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJri::P64;
           _sdJqH::P64 = P64[_sdJri::P64 + 16];
           _sdJqI::P64 = P64[_sdJri::P64 + 24];
           I64[Hp - 16] = stg_sel_4_upd_info;
           P64[Hp] = _sdJqI::P64;
           R2 = Hp - 16;
           R1 = _sdJqH::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdJIl,
                       label: Data.Bifunctor.$fBifunctor(,,,,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJIl: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto cdJIp; else goto cdJIo;
       cdJIp: // global
           HpAlloc = 176;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJIo: // global
           I64[Hp - 168] = sat_sdJri_info;
           P64[Hp - 152] = R2;
           P64[Hp - 144] = R3;
           I64[Hp - 136] = stg_sel_3_upd_info;
           P64[Hp - 120] = R3;
           I64[Hp - 112] = stg_sel_2_upd_info;
           P64[Hp - 96] = R3;
           I64[Hp - 88] = stg_sel_1_upd_info;
           P64[Hp - 72] = R3;
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = (,,,,)_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           P64[Hp - 16] = Hp - 112;
           P64[Hp - 8] = Hp - 136;
           P64[Hp] = Hp - 168;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.962054787 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.964512383 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,,)_$cfirst_info;
 },
 sat_sdJrD_entry() //  [R1]
         { info_tbl: [(cdJIX,
                       label: sat_sdJrD_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJIX: // global
           _sdJrD::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJIY; else goto cdJIZ;
       cdJIZ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJJ1; else goto cdJJ0;
       cdJJ1: // global
           HpAlloc = 24;
           goto cdJIY;
       cdJIY: // global
           R1 = _sdJrD::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJJ0: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJrD::P64;
           _sdJrj::P64 = P64[_sdJrD::P64 + 16];
           _sdJrk::P64 = P64[_sdJrD::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdJrk::P64;
           R2 = Hp - 16;
           R1 = _sdJrj::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdJJ5,
                       label: Data.Bifunctor.$fBifunctor(,,,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJJ5: // global
           Hp = Hp + 144;
           if (Hp > HpLim) (likely: False) goto cdJJ9; else goto cdJJ8;
       cdJJ9: // global
           HpAlloc = 144;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJJ8: // global
           I64[Hp - 136] = stg_sel_3_upd_info;
           P64[Hp - 120] = R3;
           I64[Hp - 112] = sat_sdJrD_info;
           P64[Hp - 96] = R2;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_1_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = stg_sel_0_upd_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = (,,,)_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 80;
           P64[Hp - 8] = Hp - 112;
           P64[Hp] = Hp - 136;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.972220722 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,,)_$csecond_info;
 },
 sat_sdJsa_entry() //  [R1]
         { info_tbl: [(cdJJD,
                       label: sat_sdJsa_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJJD: // global
           _sdJsa::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJJE; else goto cdJJF;
       cdJJF: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJJH; else goto cdJJG;
       cdJJH: // global
           HpAlloc = 24;
           goto cdJJE;
       cdJJE: // global
           R1 = _sdJsa::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJJG: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJsa::P64;
           _sdJrK::P64 = P64[_sdJsa::P64 + 16];
           _sdJrL::P64 = P64[_sdJsa::P64 + 24];
           I64[Hp - 16] = stg_sel_3_upd_info;
           P64[Hp] = _sdJrL::P64;
           R2 = Hp - 16;
           R1 = _sdJrK::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdJJM,
                       label: Data.Bifunctor.$fBifunctor(,,,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJJM: // global
           Hp = Hp + 144;
           if (Hp > HpLim) (likely: False) goto cdJJQ; else goto cdJJP;
       cdJJQ: // global
           HpAlloc = 144;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJJP: // global
           I64[Hp - 136] = sat_sdJsa_info;
           P64[Hp - 120] = R2;
           P64[Hp - 112] = R3;
           I64[Hp - 104] = stg_sel_2_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = stg_sel_1_upd_info;
           P64[Hp - 64] = R3;
           I64[Hp - 56] = stg_sel_0_upd_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = (,,,)_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 80;
           P64[Hp - 8] = Hp - 104;
           P64[Hp] = Hp - 136;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.979334008 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.982890002 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,,)_$cfirst_info;
 },
 sat_sdJsn_entry() //  [R1]
         { info_tbl: [(cdJKm,
                       label: sat_sdJsn_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJKm: // global
           _sdJsn::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJKn; else goto cdJKo;
       cdJKo: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJKq; else goto cdJKp;
       cdJKq: // global
           HpAlloc = 24;
           goto cdJKn;
       cdJKn: // global
           R1 = _sdJsn::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJKp: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJsn::P64;
           _sdJsb::P64 = P64[_sdJsn::P64 + 16];
           _sdJsc::P64 = P64[_sdJsn::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdJsc::P64;
           R2 = Hp - 16;
           R1 = _sdJsb::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdJKt,
                       label: Data.Bifunctor.$fBifunctor(,,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJKt: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto cdJKx; else goto cdJKw;
       cdJKx: // global
           HpAlloc = 112;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJKw: // global
           I64[Hp - 104] = stg_sel_2_upd_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = sat_sdJsn_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = stg_sel_0_upd_info;
           P64[Hp - 32] = R3;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = Hp - 48;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 104;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.990176294 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,,)_$csecond_info;
 },
 sat_sdJsK_entry() //  [R1]
         { info_tbl: [(cdJKZ,
                       label: sat_sdJsK_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJKZ: // global
           _sdJsK::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJL0; else goto cdJL1;
       cdJL1: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJL3; else goto cdJL2;
       cdJL3: // global
           HpAlloc = 24;
           goto cdJL0;
       cdJL0: // global
           R1 = _sdJsK::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJL2: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJsK::P64;
           _sdJst::P64 = P64[_sdJsK::P64 + 16];
           _sdJsu::P64 = P64[_sdJsK::P64 + 24];
           I64[Hp - 16] = stg_sel_2_upd_info;
           P64[Hp] = _sdJsu::P64;
           R2 = Hp - 16;
           R1 = _sdJst::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdJL7,
                       label: Data.Bifunctor.$fBifunctor(,,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJL7: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto cdJLb; else goto cdJLa;
       cdJLb: // global
           HpAlloc = 112;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJLa: // global
           I64[Hp - 104] = sat_sdJsK_info;
           P64[Hp - 88] = R2;
           P64[Hp - 80] = R3;
           I64[Hp - 72] = stg_sel_1_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = stg_sel_0_upd_info;
           P64[Hp - 32] = R3;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = Hp - 48;
           P64[Hp - 8] = Hp - 72;
           P64[Hp] = Hp - 104;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.996535719 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,,)_closure" {
     Data.Bifunctor.$fBifunctor(,,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:57.999085419 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_$cfirst_closure" {
     Data.Bifunctor.$fBifunctor(,)_$cfirst_closure:
         const Data.Bifunctor.$fBifunctor(,)_$cfirst_info;
 },
 sat_sdJsR_entry() //  [R1]
         { info_tbl: [(cdJLF,
                       label: sat_sdJsR_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJLF: // global
           _sdJsR::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJLG; else goto cdJLH;
       cdJLH: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJLJ; else goto cdJLI;
       cdJLJ: // global
           HpAlloc = 24;
           goto cdJLG;
       cdJLG: // global
           R1 = _sdJsR::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJLI: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJsR::P64;
           _sdJsL::P64 = P64[_sdJsR::P64 + 16];
           _sdJsM::P64 = P64[_sdJsR::P64 + 24];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _sdJsM::P64;
           R2 = Hp - 16;
           R1 = _sdJsL::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,)_$cfirst_entry() //  [R2, R3]
         { info_tbl: [(cdJLL,
                       label: Data.Bifunctor.$fBifunctor(,)_$cfirst_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJLL: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cdJLP; else goto cdJLO;
       cdJLP: // global
           HpAlloc = 80;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,)_$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJLO: // global
           I64[Hp - 72] = stg_sel_1_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = sat_sdJsR_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 72;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:58.00558724 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_$csecond_closure" {
     Data.Bifunctor.$fBifunctor(,)_$csecond_closure:
         const Data.Bifunctor.$fBifunctor(,)_$csecond_info;
 },
 sat_sdJt6_entry() //  [R1]
         { info_tbl: [(cdJMf,
                       label: sat_sdJt6_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJMf: // global
           _sdJt6::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cdJMg; else goto cdJMh;
       cdJMh: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cdJMj; else goto cdJMi;
       cdJMj: // global
           HpAlloc = 24;
           goto cdJMg;
       cdJMg: // global
           R1 = _sdJt6::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJMi: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sdJt6::P64;
           _sdJsW::P64 = P64[_sdJt6::P64 + 16];
           _sdJsX::P64 = P64[_sdJt6::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sdJsX::P64;
           R2 = Hp - 16;
           R1 = _sdJsW::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 Data.Bifunctor.$fBifunctor(,)_$csecond_entry() //  [R2, R3]
         { info_tbl: [(cdJMm,
                       label: Data.Bifunctor.$fBifunctor(,)_$csecond_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJMm: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cdJMq; else goto cdJMp;
       cdJMq: // global
           HpAlloc = 80;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$fBifunctor(,)_$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJMp: // global
           I64[Hp - 72] = sat_sdJt6_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 72;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:58.012900511 UTC

[section ""data" . Data.Bifunctor.$fBifunctor(,)_closure" {
     Data.Bifunctor.$fBifunctor(,)_closure:
         const Data.Bifunctor.C:Bifunctor_con_info;
         const Data.Bifunctor.$fBifunctor(,)_$cbimap_closure+3;
         const Data.Bifunctor.$fBifunctor(,)_$cfirst_closure+2;
         const Data.Bifunctor.$fBifunctor(,)_$csecond_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:58.016199057 UTC

[section ""data" . Data.Bifunctor.$dmbimap_closure" {
     Data.Bifunctor.$dmbimap_closure:
         const Data.Bifunctor.$dmbimap_info;
 },
 f1_sdJta_entry() //  [R1]
         { info_tbl: [(cdJMQ,
                       label: f1_sdJta_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJMQ: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cdJMR; else goto cdJMS;
       cdJMR: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJMS: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Data.Bifunctor.first_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 g1_sdJtb_entry() //  [R1]
         { info_tbl: [(cdJMX,
                       label: g1_sdJtb_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJMX: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cdJMY; else goto cdJMZ;
       cdJMY: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cdJMZ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Data.Bifunctor.second_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_sdJte_entry() //  [R1, R2]
         { info_tbl: [(cdJN6,
                       label: sat_sdJte_info
                       rep:HeapRep 2 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJN6: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cdJNa; else goto cdJN9;
       cdJNa: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cdJN9: // global
           _sdJta::P64 = P64[R1 + 7];
           _sdJtb::P64 = P64[R1 + 15];
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sdJtb::P64;
           P64[Hp] = R2;
           R2 = Hp - 24;
           R1 = _sdJta::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 Data.Bifunctor.$dmbimap_entry() //  [R2, R3, R4]
         { info_tbl: [(cdJNb,
                       label: Data.Bifunctor.$dmbimap_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJNb: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cdJNf; else goto cdJNe;
       cdJNf: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.$dmbimap_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJNe: // global
           I64[Hp - 80] = f1_sdJta_info;
           P64[Hp - 64] = R2;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = g1_sdJtb_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = sat_sdJte_info;
           P64[Hp - 8] = Hp - 80;
           P64[Hp] = Hp - 48;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:58.026708442 UTC

[section ""cstring" . Data.Bifunctor.$trModule4_bytes" {
     Data.Bifunctor.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:08:58.028550067 UTC

[section ""data" . Data.Bifunctor.$trModule3_closure" {
     Data.Bifunctor.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bifunctor.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:58.030247588 UTC

[section ""cstring" . Data.Bifunctor.$trModule2_bytes" {
     Data.Bifunctor.$trModule2_bytes:
         I8[] [68,97,116,97,46,66,105,102,117,110,99,116,111,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:08:58.031856472 UTC

[section ""data" . Data.Bifunctor.$trModule1_closure" {
     Data.Bifunctor.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bifunctor.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:58.033538999 UTC

[section ""data" . Data.Bifunctor.$trModule_closure" {
     Data.Bifunctor.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Data.Bifunctor.$trModule3_closure+1;
         const Data.Bifunctor.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:58.035291525 UTC

[section ""data" . $krep_rdIrJ_closure" {
     $krep_rdIrJ_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:58.037213757 UTC

[section ""data" . Data.Bifunctor.$tcBifunctor1_closure" {
     Data.Bifunctor.$tcBifunctor1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*->*->*_closure;
         const $krep_rdIrJ_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:58.039258621 UTC

[section ""cstring" . Data.Bifunctor.$tcBifunctor3_bytes" {
     Data.Bifunctor.$tcBifunctor3_bytes:
         I8[] [66,105,102,117,110,99,116,111,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:08:58.040948388 UTC

[section ""data" . Data.Bifunctor.$tcBifunctor2_closure" {
     Data.Bifunctor.$tcBifunctor2_closure:
         const GHC.Types.TrNameS_con_info;
         const Data.Bifunctor.$tcBifunctor3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:58.042690269 UTC

[section ""data" . Data.Bifunctor.$tcBifunctor_closure" {
     Data.Bifunctor.$tcBifunctor_closure:
         const GHC.Types.TyCon_con_info;
         const Data.Bifunctor.$trModule_closure+1;
         const Data.Bifunctor.$tcBifunctor2_closure+1;
         const Data.Bifunctor.$tcBifunctor1_closure+4;
         const 15833243383698227199;
         const 9927729778853233711;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:08:58.044879642 UTC

[section ""data" . Data.Bifunctor.C:Bifunctor_closure" {
     Data.Bifunctor.C:Bifunctor_closure:
         const Data.Bifunctor.C:Bifunctor_info;
 },
 Data.Bifunctor.C:Bifunctor_entry() //  [R2, R3, R4]
         { info_tbl: [(cdJNX,
                       label: Data.Bifunctor.C:Bifunctor_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJNX: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cdJO1; else goto cdJO0;
       cdJO1: // global
           HpAlloc = 32;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Data.Bifunctor.C:Bifunctor_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cdJO0: // global
           I64[Hp - 24] = Data.Bifunctor.C:Bifunctor_con_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:58.048996423 UTC

[Data.Bifunctor.C:Bifunctor_con_entry() //  [R1]
         { info_tbl: [(cdJO8,
                       label: Data.Bifunctor.C:Bifunctor_con_info
                       rep:HeapRep 3 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,68,97,116,97,46,66,105,102,117,110,99,116,111,114,46,67,58,66,105,102,117,110,99,116,111,114]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cdJO8: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:08:58.053025434 UTC

[section ""relreadonly" . SdJOf_srt" { SdJOf_srt:
 }]

