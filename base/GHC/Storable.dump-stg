
==================== Pre unarise: ====================
2018-03-16 15:59:27.426532252 UTC

GHC.Storable.readWideCharOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Char
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Brp ds1_s4Brq eta_s4Brr]
        case ds_s4Brp of {
          GHC.Ptr.Ptr a_s4Brt [Occ=Once] ->
              case ds1_s4Brq of {
                GHC.Types.I# i_s4Brv [Occ=Once] ->
                    case readWideCharOffAddr# [a_s4Brt i_s4Brv eta_s4Brr] of {
                      (#,#) ipv_s4Brx [Occ=Once] ipv1_s4Bry [Occ=Once] ->
                          let {
                            sat_s4Brz [Occ=Once] :: GHC.Types.Char
                            [LclId] =
                                CCCS GHC.Types.C#! [ipv1_s4Bry];
                          } in  (#,#) [ipv_s4Brx sat_s4Brz];
                    };
              };
        };

GHC.Storable.readWideCharOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Char
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Char
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readWideCharOffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readIntOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BrA ds1_s4BrB eta_s4BrC]
        case ds_s4BrA of {
          GHC.Ptr.Ptr a_s4BrE [Occ=Once] ->
              case ds1_s4BrB of {
                GHC.Types.I# i_s4BrG [Occ=Once] ->
                    case readIntOffAddr# [a_s4BrE i_s4BrG eta_s4BrC] of {
                      (#,#) ipv_s4BrI [Occ=Once] ipv1_s4BrJ [Occ=Once] ->
                          let {
                            sat_s4BrK [Occ=Once] :: GHC.Types.Int
                            [LclId] =
                                CCCS GHC.Types.I#! [ipv1_s4BrJ];
                          } in  (#,#) [ipv_s4BrI sat_s4BrK];
                    };
              };
        };

GHC.Storable.readIntOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Int
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readIntOffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readWordOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Word
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Word #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BrL ds1_s4BrM eta_s4BrN]
        case ds_s4BrL of {
          GHC.Ptr.Ptr a_s4BrP [Occ=Once] ->
              case ds1_s4BrM of {
                GHC.Types.I# i_s4BrR [Occ=Once] ->
                    case readWordOffAddr# [a_s4BrP i_s4BrR eta_s4BrN] of {
                      (#,#) ipv_s4BrT [Occ=Once] ipv1_s4BrU [Occ=Once] ->
                          let {
                            sat_s4BrV [Occ=Once] :: GHC.Types.Word
                            [LclId] =
                                CCCS GHC.Types.W#! [ipv1_s4BrU];
                          } in  (#,#) [ipv_s4BrT sat_s4BrV];
                    };
              };
        };

GHC.Storable.readWordOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Word
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Word
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readWordOffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readPtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.Ptr a)
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BrW ds1_s4BrX eta_s4BrY]
        case ds_s4BrW of {
          GHC.Ptr.Ptr a1_s4Bs0 [Occ=Once] ->
              case ds1_s4BrX of {
                GHC.Types.I# i_s4Bs2 [Occ=Once] ->
                    case readAddrOffAddr# [a1_s4Bs0 i_s4Bs2 eta_s4BrY] of {
                      (#,#) ipv_s4Bs4 [Occ=Once] ipv1_s4Bs5 [Occ=Once] ->
                          let {
                            sat_s4Bs6 [Occ=Once] :: GHC.Ptr.Ptr a_a4AYh
                            [LclId] =
                                CCCS GHC.Ptr.Ptr! [ipv1_s4Bs5];
                          } in  (#,#) [ipv_s4Bs4 sat_s4Bs6];
                    };
              };
        };

GHC.Storable.readPtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.Ptr a)
     -> GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readPtrOffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readFunPtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.FunPtr a)
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.FunPtr a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bs7 ds1_s4Bs8 eta_s4Bs9]
        case ds_s4Bs7 of {
          GHC.Ptr.Ptr a1_s4Bsb [Occ=Once] ->
              case ds1_s4Bs8 of {
                GHC.Types.I# i_s4Bsd [Occ=Once] ->
                    case readAddrOffAddr# [a1_s4Bsb i_s4Bsd eta_s4Bs9] of {
                      (#,#) ipv_s4Bsf [Occ=Once] ipv1_s4Bsg [Occ=Once] ->
                          let {
                            sat_s4Bsh [Occ=Once] :: GHC.Ptr.FunPtr a_a4AY8
                            [LclId] =
                                CCCS GHC.Ptr.FunPtr! [ipv1_s4Bsg];
                          } in  (#,#) [ipv_s4Bsf sat_s4Bsh];
                    };
              };
        };

GHC.Storable.readFunPtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.FunPtr a)
     -> GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.FunPtr a)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readFunPtrOffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readFloatOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Float
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Float #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bsi ds1_s4Bsj eta_s4Bsk]
        case ds_s4Bsi of {
          GHC.Ptr.Ptr a_s4Bsm [Occ=Once] ->
              case ds1_s4Bsj of {
                GHC.Types.I# i_s4Bso [Occ=Once] ->
                    case readFloatOffAddr# [a_s4Bsm i_s4Bso eta_s4Bsk] of {
                      (#,#) ipv_s4Bsq [Occ=Once] ipv1_s4Bsr [Occ=Once] ->
                          let {
                            sat_s4Bss [Occ=Once] :: GHC.Types.Float
                            [LclId] =
                                CCCS GHC.Types.F#! [ipv1_s4Bsr];
                          } in  (#,#) [ipv_s4Bsq sat_s4Bss];
                    };
              };
        };

GHC.Storable.readFloatOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Float
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Float
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readFloatOffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readDoubleOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Double
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Double #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bst ds1_s4Bsu eta_s4Bsv]
        case ds_s4Bst of {
          GHC.Ptr.Ptr a_s4Bsx [Occ=Once] ->
              case ds1_s4Bsu of {
                GHC.Types.I# i_s4Bsz [Occ=Once] ->
                    case readDoubleOffAddr# [a_s4Bsx i_s4Bsz eta_s4Bsv] of {
                      (#,#) ipv_s4BsB [Occ=Once] ipv1_s4BsC [Occ=Once] ->
                          let {
                            sat_s4BsD [Occ=Once] :: GHC.Types.Double
                            [LclId] =
                                CCCS GHC.Types.D#! [ipv1_s4BsC];
                          } in  (#,#) [ipv_s4BsB sat_s4BsD];
                    };
              };
        };

GHC.Storable.readDoubleOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Double
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Double
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readDoubleOffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readStablePtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Stable.StablePtr a)
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Stable.StablePtr a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BsE ds1_s4BsF eta_s4BsG]
        case ds_s4BsE of {
          GHC.Ptr.Ptr a1_s4BsI [Occ=Once] ->
              case ds1_s4BsF of {
                GHC.Types.I# i_s4BsK [Occ=Once] ->
                    case readStablePtrOffAddr# [a1_s4BsI i_s4BsK eta_s4BsG] of {
                      (#,#) ipv_s4BsM [Occ=Once] ipv1_s4BsN [Occ=Once] ->
                          let {
                            sat_s4BsO [Occ=Once] :: GHC.Stable.StablePtr a_a4AXK
                            [LclId] =
                                CCCS GHC.Stable.StablePtr! [ipv1_s4BsN];
                          } in  (#,#) [ipv_s4BsM sat_s4BsO];
                    };
              };
        };

GHC.Storable.readStablePtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Stable.StablePtr a)
     -> GHC.Types.Int -> GHC.Types.IO (GHC.Stable.StablePtr a)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readStablePtrOffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readInt8OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Int.Int8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BsP ds1_s4BsQ eta_s4BsR]
        case ds_s4BsP of {
          GHC.Ptr.Ptr a_s4BsT [Occ=Once] ->
              case ds1_s4BsQ of {
                GHC.Types.I# i_s4BsV [Occ=Once] ->
                    case readInt8OffAddr# [a_s4BsT i_s4BsV eta_s4BsR] of {
                      (#,#) ipv_s4BsX [Occ=Once] ipv1_s4BsY [Occ=Once] ->
                          let {
                            sat_s4BsZ [Occ=Once] :: GHC.Int.Int8
                            [LclId] =
                                CCCS GHC.Int.I8#! [ipv1_s4BsY];
                          } in  (#,#) [ipv_s4BsX sat_s4BsZ];
                    };
              };
        };

GHC.Storable.readInt8OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int8
     -> GHC.Types.Int -> GHC.Types.IO GHC.Int.Int8
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readInt8OffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readWord8OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Word.Word8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bt0 ds1_s4Bt1 eta_s4Bt2]
        case ds_s4Bt0 of {
          GHC.Ptr.Ptr a_s4Bt4 [Occ=Once] ->
              case ds1_s4Bt1 of {
                GHC.Types.I# i_s4Bt6 [Occ=Once] ->
                    case readWord8OffAddr# [a_s4Bt4 i_s4Bt6 eta_s4Bt2] of {
                      (#,#) ipv_s4Bt8 [Occ=Once] ipv1_s4Bt9 [Occ=Once] ->
                          let {
                            sat_s4Bta [Occ=Once] :: GHC.Word.Word8
                            [LclId] =
                                CCCS GHC.Word.W8#! [ipv1_s4Bt9];
                          } in  (#,#) [ipv_s4Bt8 sat_s4Bta];
                    };
              };
        };

GHC.Storable.readWord8OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int -> GHC.Types.IO GHC.Word.Word8
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readWord8OffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readInt16OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int16
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Int.Int16 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Btb ds1_s4Btc eta_s4Btd]
        case ds_s4Btb of {
          GHC.Ptr.Ptr a_s4Btf [Occ=Once] ->
              case ds1_s4Btc of {
                GHC.Types.I# i_s4Bth [Occ=Once] ->
                    case readInt16OffAddr# [a_s4Btf i_s4Bth eta_s4Btd] of {
                      (#,#) ipv_s4Btj [Occ=Once] ipv1_s4Btk [Occ=Once] ->
                          let {
                            sat_s4Btl [Occ=Once] :: GHC.Int.Int16
                            [LclId] =
                                CCCS GHC.Int.I16#! [ipv1_s4Btk];
                          } in  (#,#) [ipv_s4Btj sat_s4Btl];
                    };
              };
        };

GHC.Storable.readInt16OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int16
     -> GHC.Types.Int -> GHC.Types.IO GHC.Int.Int16
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readInt16OffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readWord16OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word16
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Word.Word16 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Btm ds1_s4Btn eta_s4Bto]
        case ds_s4Btm of {
          GHC.Ptr.Ptr a_s4Btq [Occ=Once] ->
              case ds1_s4Btn of {
                GHC.Types.I# i_s4Bts [Occ=Once] ->
                    case readWord16OffAddr# [a_s4Btq i_s4Bts eta_s4Bto] of {
                      (#,#) ipv_s4Btu [Occ=Once] ipv1_s4Btv [Occ=Once] ->
                          let {
                            sat_s4Btw [Occ=Once] :: GHC.Word.Word16
                            [LclId] =
                                CCCS GHC.Word.W16#! [ipv1_s4Btv];
                          } in  (#,#) [ipv_s4Btu sat_s4Btw];
                    };
              };
        };

GHC.Storable.readWord16OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word16
     -> GHC.Types.Int -> GHC.Types.IO GHC.Word.Word16
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readWord16OffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readInt32OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int32
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Int.Int32 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Btx ds1_s4Bty eta_s4Btz]
        case ds_s4Btx of {
          GHC.Ptr.Ptr a_s4BtB [Occ=Once] ->
              case ds1_s4Bty of {
                GHC.Types.I# i_s4BtD [Occ=Once] ->
                    case readInt32OffAddr# [a_s4BtB i_s4BtD eta_s4Btz] of {
                      (#,#) ipv_s4BtF [Occ=Once] ipv1_s4BtG [Occ=Once] ->
                          let {
                            sat_s4BtH [Occ=Once] :: GHC.Int.Int32
                            [LclId] =
                                CCCS GHC.Int.I32#! [ipv1_s4BtG];
                          } in  (#,#) [ipv_s4BtF sat_s4BtH];
                    };
              };
        };

GHC.Storable.readInt32OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int32
     -> GHC.Types.Int -> GHC.Types.IO GHC.Int.Int32
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readInt32OffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readWord32OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word32
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Word.Word32 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BtI ds1_s4BtJ eta_s4BtK]
        case ds_s4BtI of {
          GHC.Ptr.Ptr a_s4BtM [Occ=Once] ->
              case ds1_s4BtJ of {
                GHC.Types.I# i_s4BtO [Occ=Once] ->
                    case readWord32OffAddr# [a_s4BtM i_s4BtO eta_s4BtK] of {
                      (#,#) ipv_s4BtQ [Occ=Once] ipv1_s4BtR [Occ=Once] ->
                          let {
                            sat_s4BtS [Occ=Once] :: GHC.Word.Word32
                            [LclId] =
                                CCCS GHC.Word.W32#! [ipv1_s4BtR];
                          } in  (#,#) [ipv_s4BtQ sat_s4BtS];
                    };
              };
        };

GHC.Storable.readWord32OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word32
     -> GHC.Types.Int -> GHC.Types.IO GHC.Word.Word32
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readWord32OffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readInt64OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int64
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Int.Int64 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BtT ds1_s4BtU eta_s4BtV]
        case ds_s4BtT of {
          GHC.Ptr.Ptr a_s4BtX [Occ=Once] ->
              case ds1_s4BtU of {
                GHC.Types.I# i_s4BtZ [Occ=Once] ->
                    case readInt64OffAddr# [a_s4BtX i_s4BtZ eta_s4BtV] of {
                      (#,#) ipv_s4Bu1 [Occ=Once] ipv1_s4Bu2 [Occ=Once] ->
                          let {
                            sat_s4Bu3 [Occ=Once] :: GHC.Int.Int64
                            [LclId] =
                                CCCS GHC.Int.I64#! [ipv1_s4Bu2];
                          } in  (#,#) [ipv_s4Bu1 sat_s4Bu3];
                    };
              };
        };

GHC.Storable.readInt64OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int64
     -> GHC.Types.Int -> GHC.Types.IO GHC.Int.Int64
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readInt64OffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readWord64OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word64
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Word.Word64 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bu4 ds1_s4Bu5 eta_s4Bu6]
        case ds_s4Bu4 of {
          GHC.Ptr.Ptr a_s4Bu8 [Occ=Once] ->
              case ds1_s4Bu5 of {
                GHC.Types.I# i_s4Bua [Occ=Once] ->
                    case readWord64OffAddr# [a_s4Bu8 i_s4Bua eta_s4Bu6] of {
                      (#,#) ipv_s4Buc [Occ=Once] ipv1_s4Bud [Occ=Once] ->
                          let {
                            sat_s4Bue [Occ=Once] :: GHC.Word.Word64
                            [LclId] =
                                CCCS GHC.Word.W64#! [ipv1_s4Bud];
                          } in  (#,#) [ipv_s4Buc sat_s4Bue];
                    };
              };
        };

GHC.Storable.readWord64OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word64
     -> GHC.Types.Int -> GHC.Types.IO GHC.Word.Word64
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readWord64OffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeWideCharOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Char
     -> GHC.Types.Int
     -> GHC.Types.Char
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Buf ds1_s4Bug ds2_s4Buh eta_s4Bui]
        case ds_s4Buf of {
          GHC.Ptr.Ptr a_s4Buk [Occ=Once] ->
              case ds1_s4Bug of {
                GHC.Types.I# i_s4Bum [Occ=Once] ->
                    case ds2_s4Buh of {
                      GHC.Types.C# x_s4Buo [Occ=Once] ->
                          case
                              writeWideCharOffAddr# [a_s4Buk i_s4Bum x_s4Buo eta_s4Bui]
                          of
                          s2_s4Bup
                          { __DEFAULT -> (#,#) [s2_s4Bup GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWideCharOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Char
     -> GHC.Types.Int -> GHC.Types.Char -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeWideCharOffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeIntOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Buq ds1_s4Bur ds2_s4Bus eta_s4But]
        case ds_s4Buq of {
          GHC.Ptr.Ptr a_s4Buv [Occ=Once] ->
              case ds1_s4Bur of {
                GHC.Types.I# i_s4Bux [Occ=Once] ->
                    case ds2_s4Bus of {
                      GHC.Types.I# x_s4Buz [Occ=Once] ->
                          case
                              writeIntOffAddr# [a_s4Buv i_s4Bux x_s4Buz eta_s4But]
                          of
                          s2_s4BuA
                          { __DEFAULT -> (#,#) [s2_s4BuA GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeIntOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Int
     -> GHC.Types.Int -> GHC.Types.Int -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeIntOffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeWordOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Word
     -> GHC.Types.Int
     -> GHC.Types.Word
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BuB ds1_s4BuC ds2_s4BuD eta_s4BuE]
        case ds_s4BuB of {
          GHC.Ptr.Ptr a_s4BuG [Occ=Once] ->
              case ds1_s4BuC of {
                GHC.Types.I# i_s4BuI [Occ=Once] ->
                    case ds2_s4BuD of {
                      GHC.Types.W# x_s4BuK [Occ=Once] ->
                          case
                              writeWordOffAddr# [a_s4BuG i_s4BuI x_s4BuK eta_s4BuE]
                          of
                          s2_s4BuL
                          { __DEFAULT -> (#,#) [s2_s4BuL GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWordOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Word
     -> GHC.Types.Int -> GHC.Types.Word -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeWordOffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writePtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.Ptr a)
     -> GHC.Types.Int
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BuM ds1_s4BuN ds2_s4BuO eta_s4BuP]
        case ds_s4BuM of {
          GHC.Ptr.Ptr a1_s4BuR [Occ=Once] ->
              case ds1_s4BuN of {
                GHC.Types.I# i_s4BuT [Occ=Once] ->
                    case ds2_s4BuO of {
                      GHC.Ptr.Ptr x_s4BuV [Occ=Once] ->
                          case
                              writeAddrOffAddr# [a1_s4BuR i_s4BuT x_s4BuV eta_s4BuP]
                          of
                          s2_s4BuW
                          { __DEFAULT -> (#,#) [s2_s4BuW GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writePtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.Ptr a)
     -> GHC.Types.Int -> GHC.Ptr.Ptr a -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writePtrOffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeFunPtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.FunPtr a)
     -> GHC.Types.Int
     -> GHC.Ptr.FunPtr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BuX ds1_s4BuY ds2_s4BuZ eta_s4Bv0]
        case ds_s4BuX of {
          GHC.Ptr.Ptr a1_s4Bv2 [Occ=Once] ->
              case ds1_s4BuY of {
                GHC.Types.I# i_s4Bv4 [Occ=Once] ->
                    case ds2_s4BuZ of {
                      GHC.Ptr.FunPtr x_s4Bv6 [Occ=Once] ->
                          case
                              writeAddrOffAddr# [a1_s4Bv2 i_s4Bv4 x_s4Bv6 eta_s4Bv0]
                          of
                          s2_s4Bv7
                          { __DEFAULT -> (#,#) [s2_s4Bv7 GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeFunPtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.FunPtr a)
     -> GHC.Types.Int -> GHC.Ptr.FunPtr a -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeFunPtrOffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeFloatOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Float
     -> GHC.Types.Int
     -> GHC.Types.Float
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bv8 ds1_s4Bv9 ds2_s4Bva eta_s4Bvb]
        case ds_s4Bv8 of {
          GHC.Ptr.Ptr a_s4Bvd [Occ=Once] ->
              case ds1_s4Bv9 of {
                GHC.Types.I# i_s4Bvf [Occ=Once] ->
                    case ds2_s4Bva of {
                      GHC.Types.F# x_s4Bvh [Occ=Once] ->
                          case
                              writeFloatOffAddr# [a_s4Bvd i_s4Bvf x_s4Bvh eta_s4Bvb]
                          of
                          s2_s4Bvi
                          { __DEFAULT -> (#,#) [s2_s4Bvi GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeFloatOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Float
     -> GHC.Types.Int -> GHC.Types.Float -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeFloatOffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeDoubleOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Double
     -> GHC.Types.Int
     -> GHC.Types.Double
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bvj ds1_s4Bvk ds2_s4Bvl eta_s4Bvm]
        case ds_s4Bvj of {
          GHC.Ptr.Ptr a_s4Bvo [Occ=Once] ->
              case ds1_s4Bvk of {
                GHC.Types.I# i_s4Bvq [Occ=Once] ->
                    case ds2_s4Bvl of {
                      GHC.Types.D# x_s4Bvs [Occ=Once] ->
                          case
                              writeDoubleOffAddr# [a_s4Bvo i_s4Bvq x_s4Bvs eta_s4Bvm]
                          of
                          s2_s4Bvt
                          { __DEFAULT -> (#,#) [s2_s4Bvt GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeDoubleOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Double
     -> GHC.Types.Int -> GHC.Types.Double -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeDoubleOffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeStablePtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Stable.StablePtr a)
     -> GHC.Types.Int
     -> GHC.Stable.StablePtr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bvu ds1_s4Bvv ds2_s4Bvw eta_s4Bvx]
        case ds_s4Bvu of {
          GHC.Ptr.Ptr a1_s4Bvz [Occ=Once] ->
              case ds1_s4Bvv of {
                GHC.Types.I# i_s4BvB [Occ=Once] ->
                    case ds2_s4Bvw of {
                      GHC.Stable.StablePtr x_s4BvD [Occ=Once] ->
                          case
                              writeStablePtrOffAddr# [a1_s4Bvz i_s4BvB x_s4BvD eta_s4Bvx]
                          of
                          s2_s4BvE
                          { __DEFAULT -> (#,#) [s2_s4BvE GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeStablePtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Stable.StablePtr a)
     -> GHC.Types.Int -> GHC.Stable.StablePtr a -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeStablePtrOffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeInt8OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int8
     -> GHC.Types.Int
     -> GHC.Int.Int8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BvF ds1_s4BvG ds2_s4BvH eta_s4BvI]
        case ds_s4BvF of {
          GHC.Ptr.Ptr a_s4BvK [Occ=Once] ->
              case ds1_s4BvG of {
                GHC.Types.I# i_s4BvM [Occ=Once] ->
                    case ds2_s4BvH of {
                      GHC.Int.I8# x_s4BvO [Occ=Once] ->
                          case
                              writeInt8OffAddr# [a_s4BvK i_s4BvM x_s4BvO eta_s4BvI]
                          of
                          s2_s4BvP
                          { __DEFAULT -> (#,#) [s2_s4BvP GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeInt8OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int8
     -> GHC.Types.Int -> GHC.Int.Int8 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeInt8OffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeWord8OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BvQ ds1_s4BvR ds2_s4BvS eta_s4BvT]
        case ds_s4BvQ of {
          GHC.Ptr.Ptr a_s4BvV [Occ=Once] ->
              case ds1_s4BvR of {
                GHC.Types.I# i_s4BvX [Occ=Once] ->
                    case ds2_s4BvS of {
                      GHC.Word.W8# x_s4BvZ [Occ=Once] ->
                          case
                              writeWord8OffAddr# [a_s4BvV i_s4BvX x_s4BvZ eta_s4BvT]
                          of
                          s2_s4Bw0
                          { __DEFAULT -> (#,#) [s2_s4Bw0 GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWord8OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int -> GHC.Word.Word8 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeWord8OffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeInt16OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int16
     -> GHC.Types.Int
     -> GHC.Int.Int16
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bw1 ds1_s4Bw2 ds2_s4Bw3 eta_s4Bw4]
        case ds_s4Bw1 of {
          GHC.Ptr.Ptr a_s4Bw6 [Occ=Once] ->
              case ds1_s4Bw2 of {
                GHC.Types.I# i_s4Bw8 [Occ=Once] ->
                    case ds2_s4Bw3 of {
                      GHC.Int.I16# x_s4Bwa [Occ=Once] ->
                          case
                              writeInt16OffAddr# [a_s4Bw6 i_s4Bw8 x_s4Bwa eta_s4Bw4]
                          of
                          s2_s4Bwb
                          { __DEFAULT -> (#,#) [s2_s4Bwb GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeInt16OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int16
     -> GHC.Types.Int -> GHC.Int.Int16 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeInt16OffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeWord16OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word16
     -> GHC.Types.Int
     -> GHC.Word.Word16
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bwc ds1_s4Bwd ds2_s4Bwe eta_s4Bwf]
        case ds_s4Bwc of {
          GHC.Ptr.Ptr a_s4Bwh [Occ=Once] ->
              case ds1_s4Bwd of {
                GHC.Types.I# i_s4Bwj [Occ=Once] ->
                    case ds2_s4Bwe of {
                      GHC.Word.W16# x_s4Bwl [Occ=Once] ->
                          case
                              writeWord16OffAddr# [a_s4Bwh i_s4Bwj x_s4Bwl eta_s4Bwf]
                          of
                          s2_s4Bwm
                          { __DEFAULT -> (#,#) [s2_s4Bwm GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWord16OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word16
     -> GHC.Types.Int -> GHC.Word.Word16 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeWord16OffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeInt32OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int32
     -> GHC.Types.Int
     -> GHC.Int.Int32
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bwn ds1_s4Bwo ds2_s4Bwp eta_s4Bwq]
        case ds_s4Bwn of {
          GHC.Ptr.Ptr a_s4Bws [Occ=Once] ->
              case ds1_s4Bwo of {
                GHC.Types.I# i_s4Bwu [Occ=Once] ->
                    case ds2_s4Bwp of {
                      GHC.Int.I32# x_s4Bww [Occ=Once] ->
                          case
                              writeInt32OffAddr# [a_s4Bws i_s4Bwu x_s4Bww eta_s4Bwq]
                          of
                          s2_s4Bwx
                          { __DEFAULT -> (#,#) [s2_s4Bwx GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeInt32OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int32
     -> GHC.Types.Int -> GHC.Int.Int32 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeInt32OffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeWord32OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word32
     -> GHC.Types.Int
     -> GHC.Word.Word32
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bwy ds1_s4Bwz ds2_s4BwA eta_s4BwB]
        case ds_s4Bwy of {
          GHC.Ptr.Ptr a_s4BwD [Occ=Once] ->
              case ds1_s4Bwz of {
                GHC.Types.I# i_s4BwF [Occ=Once] ->
                    case ds2_s4BwA of {
                      GHC.Word.W32# x_s4BwH [Occ=Once] ->
                          case
                              writeWord32OffAddr# [a_s4BwD i_s4BwF x_s4BwH eta_s4BwB]
                          of
                          s2_s4BwI
                          { __DEFAULT -> (#,#) [s2_s4BwI GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWord32OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word32
     -> GHC.Types.Int -> GHC.Word.Word32 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeWord32OffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeInt64OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int64
     -> GHC.Types.Int
     -> GHC.Int.Int64
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BwJ ds1_s4BwK ds2_s4BwL eta_s4BwM]
        case ds_s4BwJ of {
          GHC.Ptr.Ptr a_s4BwO [Occ=Once] ->
              case ds1_s4BwK of {
                GHC.Types.I# i_s4BwQ [Occ=Once] ->
                    case ds2_s4BwL of {
                      GHC.Int.I64# x_s4BwS [Occ=Once] ->
                          case
                              writeInt64OffAddr# [a_s4BwO i_s4BwQ x_s4BwS eta_s4BwM]
                          of
                          s2_s4BwT
                          { __DEFAULT -> (#,#) [s2_s4BwT GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeInt64OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int64
     -> GHC.Types.Int -> GHC.Int.Int64 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeInt64OffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeWord64OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word64
     -> GHC.Types.Int
     -> GHC.Word.Word64
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BwU ds1_s4BwV ds2_s4BwW eta_s4BwX]
        case ds_s4BwU of {
          GHC.Ptr.Ptr a_s4BwZ [Occ=Once] ->
              case ds1_s4BwV of {
                GHC.Types.I# i_s4Bx1 [Occ=Once] ->
                    case ds2_s4BwW of {
                      GHC.Word.W64# x_s4Bx3 [Occ=Once] ->
                          case
                              writeWord64OffAddr# [a_s4BwZ i_s4Bx1 x_s4Bx3 eta_s4BwX]
                          of
                          s2_s4Bx4
                          { __DEFAULT -> (#,#) [s2_s4Bx4 GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWord64OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word64
     -> GHC.Types.Int -> GHC.Word.Word64 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeWord64OffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Storable.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Storable.$trModule4];

GHC.Storable.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Storable"#;

GHC.Storable.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Storable.$trModule2];

GHC.Storable.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Storable.$trModule3
                                     GHC.Storable.$trModule1];


==================== STG syntax: ====================
2018-03-16 15:59:27.45211769 UTC

GHC.Storable.readWideCharOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Char
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Brp ds1_s4Brq void_0E]
        case ds_s4Brp of {
          GHC.Ptr.Ptr a_s4Brt [Occ=Once] ->
              case ds1_s4Brq of {
                GHC.Types.I# i_s4Brv [Occ=Once] ->
                    case readWideCharOffAddr# [a_s4Brt i_s4Brv GHC.Prim.void#] of {
                      Unit# ipv1_s4Bry [Occ=Once] ->
                          let {
                            sat_s4Brz [Occ=Once] :: GHC.Types.Char
                            [LclId] =
                                CCCS GHC.Types.C#! [ipv1_s4Bry];
                          } in  Unit# [sat_s4Brz];
                    };
              };
        };

GHC.Storable.readWideCharOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Char
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Char
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readWideCharOffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readIntOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BrA ds1_s4BrB void_0E]
        case ds_s4BrA of {
          GHC.Ptr.Ptr a_s4BrE [Occ=Once] ->
              case ds1_s4BrB of {
                GHC.Types.I# i_s4BrG [Occ=Once] ->
                    case readIntOffAddr# [a_s4BrE i_s4BrG GHC.Prim.void#] of {
                      Unit# ipv1_s4BrJ [Occ=Once] ->
                          let {
                            sat_s4BrK [Occ=Once] :: GHC.Types.Int
                            [LclId] =
                                CCCS GHC.Types.I#! [ipv1_s4BrJ];
                          } in  Unit# [sat_s4BrK];
                    };
              };
        };

GHC.Storable.readIntOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Int
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readIntOffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readWordOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Word
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Word #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BrL ds1_s4BrM void_0E]
        case ds_s4BrL of {
          GHC.Ptr.Ptr a_s4BrP [Occ=Once] ->
              case ds1_s4BrM of {
                GHC.Types.I# i_s4BrR [Occ=Once] ->
                    case readWordOffAddr# [a_s4BrP i_s4BrR GHC.Prim.void#] of {
                      Unit# ipv1_s4BrU [Occ=Once] ->
                          let {
                            sat_s4BrV [Occ=Once] :: GHC.Types.Word
                            [LclId] =
                                CCCS GHC.Types.W#! [ipv1_s4BrU];
                          } in  Unit# [sat_s4BrV];
                    };
              };
        };

GHC.Storable.readWordOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Word
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Word
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readWordOffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readPtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.Ptr a)
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BrW ds1_s4BrX void_0E]
        case ds_s4BrW of {
          GHC.Ptr.Ptr a1_s4Bs0 [Occ=Once] ->
              case ds1_s4BrX of {
                GHC.Types.I# i_s4Bs2 [Occ=Once] ->
                    case readAddrOffAddr# [a1_s4Bs0 i_s4Bs2 GHC.Prim.void#] of {
                      Unit# ipv1_s4Bs5 [Occ=Once] ->
                          let {
                            sat_s4Bs6 [Occ=Once] :: GHC.Ptr.Ptr a_a4AYh
                            [LclId] =
                                CCCS GHC.Ptr.Ptr! [ipv1_s4Bs5];
                          } in  Unit# [sat_s4Bs6];
                    };
              };
        };

GHC.Storable.readPtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.Ptr a)
     -> GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readPtrOffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readFunPtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.FunPtr a)
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.FunPtr a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bs7 ds1_s4Bs8 void_0E]
        case ds_s4Bs7 of {
          GHC.Ptr.Ptr a1_s4Bsb [Occ=Once] ->
              case ds1_s4Bs8 of {
                GHC.Types.I# i_s4Bsd [Occ=Once] ->
                    case readAddrOffAddr# [a1_s4Bsb i_s4Bsd GHC.Prim.void#] of {
                      Unit# ipv1_s4Bsg [Occ=Once] ->
                          let {
                            sat_s4Bsh [Occ=Once] :: GHC.Ptr.FunPtr a_a4AY8
                            [LclId] =
                                CCCS GHC.Ptr.FunPtr! [ipv1_s4Bsg];
                          } in  Unit# [sat_s4Bsh];
                    };
              };
        };

GHC.Storable.readFunPtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.FunPtr a)
     -> GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.FunPtr a)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readFunPtrOffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readFloatOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Float
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Float #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bsi ds1_s4Bsj void_0E]
        case ds_s4Bsi of {
          GHC.Ptr.Ptr a_s4Bsm [Occ=Once] ->
              case ds1_s4Bsj of {
                GHC.Types.I# i_s4Bso [Occ=Once] ->
                    case readFloatOffAddr# [a_s4Bsm i_s4Bso GHC.Prim.void#] of {
                      Unit# ipv1_s4Bsr [Occ=Once] ->
                          let {
                            sat_s4Bss [Occ=Once] :: GHC.Types.Float
                            [LclId] =
                                CCCS GHC.Types.F#! [ipv1_s4Bsr];
                          } in  Unit# [sat_s4Bss];
                    };
              };
        };

GHC.Storable.readFloatOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Float
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Float
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readFloatOffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readDoubleOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Double
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Double #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bst ds1_s4Bsu void_0E]
        case ds_s4Bst of {
          GHC.Ptr.Ptr a_s4Bsx [Occ=Once] ->
              case ds1_s4Bsu of {
                GHC.Types.I# i_s4Bsz [Occ=Once] ->
                    case readDoubleOffAddr# [a_s4Bsx i_s4Bsz GHC.Prim.void#] of {
                      Unit# ipv1_s4BsC [Occ=Once] ->
                          let {
                            sat_s4BsD [Occ=Once] :: GHC.Types.Double
                            [LclId] =
                                CCCS GHC.Types.D#! [ipv1_s4BsC];
                          } in  Unit# [sat_s4BsD];
                    };
              };
        };

GHC.Storable.readDoubleOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Double
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Double
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readDoubleOffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readStablePtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Stable.StablePtr a)
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Stable.StablePtr a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BsE ds1_s4BsF void_0E]
        case ds_s4BsE of {
          GHC.Ptr.Ptr a1_s4BsI [Occ=Once] ->
              case ds1_s4BsF of {
                GHC.Types.I# i_s4BsK [Occ=Once] ->
                    case readStablePtrOffAddr# [a1_s4BsI i_s4BsK GHC.Prim.void#] of {
                      Unit# ipv1_s4BsN [Occ=Once] ->
                          let {
                            sat_s4BsO [Occ=Once] :: GHC.Stable.StablePtr a_a4AXK
                            [LclId] =
                                CCCS GHC.Stable.StablePtr! [ipv1_s4BsN];
                          } in  Unit# [sat_s4BsO];
                    };
              };
        };

GHC.Storable.readStablePtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Stable.StablePtr a)
     -> GHC.Types.Int -> GHC.Types.IO (GHC.Stable.StablePtr a)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readStablePtrOffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readInt8OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Int.Int8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BsP ds1_s4BsQ void_0E]
        case ds_s4BsP of {
          GHC.Ptr.Ptr a_s4BsT [Occ=Once] ->
              case ds1_s4BsQ of {
                GHC.Types.I# i_s4BsV [Occ=Once] ->
                    case readInt8OffAddr# [a_s4BsT i_s4BsV GHC.Prim.void#] of {
                      Unit# ipv1_s4BsY [Occ=Once] ->
                          let {
                            sat_s4BsZ [Occ=Once] :: GHC.Int.Int8
                            [LclId] =
                                CCCS GHC.Int.I8#! [ipv1_s4BsY];
                          } in  Unit# [sat_s4BsZ];
                    };
              };
        };

GHC.Storable.readInt8OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int8
     -> GHC.Types.Int -> GHC.Types.IO GHC.Int.Int8
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readInt8OffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readWord8OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Word.Word8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bt0 ds1_s4Bt1 void_0E]
        case ds_s4Bt0 of {
          GHC.Ptr.Ptr a_s4Bt4 [Occ=Once] ->
              case ds1_s4Bt1 of {
                GHC.Types.I# i_s4Bt6 [Occ=Once] ->
                    case readWord8OffAddr# [a_s4Bt4 i_s4Bt6 GHC.Prim.void#] of {
                      Unit# ipv1_s4Bt9 [Occ=Once] ->
                          let {
                            sat_s4Bta [Occ=Once] :: GHC.Word.Word8
                            [LclId] =
                                CCCS GHC.Word.W8#! [ipv1_s4Bt9];
                          } in  Unit# [sat_s4Bta];
                    };
              };
        };

GHC.Storable.readWord8OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int -> GHC.Types.IO GHC.Word.Word8
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readWord8OffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readInt16OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int16
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Int.Int16 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Btb ds1_s4Btc void_0E]
        case ds_s4Btb of {
          GHC.Ptr.Ptr a_s4Btf [Occ=Once] ->
              case ds1_s4Btc of {
                GHC.Types.I# i_s4Bth [Occ=Once] ->
                    case readInt16OffAddr# [a_s4Btf i_s4Bth GHC.Prim.void#] of {
                      Unit# ipv1_s4Btk [Occ=Once] ->
                          let {
                            sat_s4Btl [Occ=Once] :: GHC.Int.Int16
                            [LclId] =
                                CCCS GHC.Int.I16#! [ipv1_s4Btk];
                          } in  Unit# [sat_s4Btl];
                    };
              };
        };

GHC.Storable.readInt16OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int16
     -> GHC.Types.Int -> GHC.Types.IO GHC.Int.Int16
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readInt16OffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readWord16OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word16
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Word.Word16 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Btm ds1_s4Btn void_0E]
        case ds_s4Btm of {
          GHC.Ptr.Ptr a_s4Btq [Occ=Once] ->
              case ds1_s4Btn of {
                GHC.Types.I# i_s4Bts [Occ=Once] ->
                    case readWord16OffAddr# [a_s4Btq i_s4Bts GHC.Prim.void#] of {
                      Unit# ipv1_s4Btv [Occ=Once] ->
                          let {
                            sat_s4Btw [Occ=Once] :: GHC.Word.Word16
                            [LclId] =
                                CCCS GHC.Word.W16#! [ipv1_s4Btv];
                          } in  Unit# [sat_s4Btw];
                    };
              };
        };

GHC.Storable.readWord16OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word16
     -> GHC.Types.Int -> GHC.Types.IO GHC.Word.Word16
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readWord16OffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readInt32OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int32
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Int.Int32 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Btx ds1_s4Bty void_0E]
        case ds_s4Btx of {
          GHC.Ptr.Ptr a_s4BtB [Occ=Once] ->
              case ds1_s4Bty of {
                GHC.Types.I# i_s4BtD [Occ=Once] ->
                    case readInt32OffAddr# [a_s4BtB i_s4BtD GHC.Prim.void#] of {
                      Unit# ipv1_s4BtG [Occ=Once] ->
                          let {
                            sat_s4BtH [Occ=Once] :: GHC.Int.Int32
                            [LclId] =
                                CCCS GHC.Int.I32#! [ipv1_s4BtG];
                          } in  Unit# [sat_s4BtH];
                    };
              };
        };

GHC.Storable.readInt32OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int32
     -> GHC.Types.Int -> GHC.Types.IO GHC.Int.Int32
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readInt32OffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readWord32OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word32
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Word.Word32 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BtI ds1_s4BtJ void_0E]
        case ds_s4BtI of {
          GHC.Ptr.Ptr a_s4BtM [Occ=Once] ->
              case ds1_s4BtJ of {
                GHC.Types.I# i_s4BtO [Occ=Once] ->
                    case readWord32OffAddr# [a_s4BtM i_s4BtO GHC.Prim.void#] of {
                      Unit# ipv1_s4BtR [Occ=Once] ->
                          let {
                            sat_s4BtS [Occ=Once] :: GHC.Word.Word32
                            [LclId] =
                                CCCS GHC.Word.W32#! [ipv1_s4BtR];
                          } in  Unit# [sat_s4BtS];
                    };
              };
        };

GHC.Storable.readWord32OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word32
     -> GHC.Types.Int -> GHC.Types.IO GHC.Word.Word32
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readWord32OffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readInt64OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int64
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Int.Int64 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BtT ds1_s4BtU void_0E]
        case ds_s4BtT of {
          GHC.Ptr.Ptr a_s4BtX [Occ=Once] ->
              case ds1_s4BtU of {
                GHC.Types.I# i_s4BtZ [Occ=Once] ->
                    case readInt64OffAddr# [a_s4BtX i_s4BtZ GHC.Prim.void#] of {
                      Unit# ipv1_s4Bu2 [Occ=Once] ->
                          let {
                            sat_s4Bu3 [Occ=Once] :: GHC.Int.Int64
                            [LclId] =
                                CCCS GHC.Int.I64#! [ipv1_s4Bu2];
                          } in  Unit# [sat_s4Bu3];
                    };
              };
        };

GHC.Storable.readInt64OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int64
     -> GHC.Types.Int -> GHC.Types.IO GHC.Int.Int64
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readInt64OffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readWord64OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word64
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Word.Word64 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bu4 ds1_s4Bu5 void_0E]
        case ds_s4Bu4 of {
          GHC.Ptr.Ptr a_s4Bu8 [Occ=Once] ->
              case ds1_s4Bu5 of {
                GHC.Types.I# i_s4Bua [Occ=Once] ->
                    case readWord64OffAddr# [a_s4Bu8 i_s4Bua GHC.Prim.void#] of {
                      Unit# ipv1_s4Bud [Occ=Once] ->
                          let {
                            sat_s4Bue [Occ=Once] :: GHC.Word.Word64
                            [LclId] =
                                CCCS GHC.Word.W64#! [ipv1_s4Bud];
                          } in  Unit# [sat_s4Bue];
                    };
              };
        };

GHC.Storable.readWord64OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word64
     -> GHC.Types.Int -> GHC.Types.IO GHC.Word.Word64
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readWord64OffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeWideCharOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Char
     -> GHC.Types.Int
     -> GHC.Types.Char
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Buf ds1_s4Bug ds2_s4Buh void_0E]
        case ds_s4Buf of {
          GHC.Ptr.Ptr a_s4Buk [Occ=Once] ->
              case ds1_s4Bug of {
                GHC.Types.I# i_s4Bum [Occ=Once] ->
                    case ds2_s4Buh of {
                      GHC.Types.C# x_s4Buo [Occ=Once] ->
                          case
                              writeWideCharOffAddr# [a_s4Buk i_s4Bum x_s4Buo GHC.Prim.void#]
                          of
                          s2_s4Bup
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWideCharOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Char
     -> GHC.Types.Int -> GHC.Types.Char -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeWideCharOffPtr1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeIntOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Buq ds1_s4Bur ds2_s4Bus void_0E]
        case ds_s4Buq of {
          GHC.Ptr.Ptr a_s4Buv [Occ=Once] ->
              case ds1_s4Bur of {
                GHC.Types.I# i_s4Bux [Occ=Once] ->
                    case ds2_s4Bus of {
                      GHC.Types.I# x_s4Buz [Occ=Once] ->
                          case
                              writeIntOffAddr# [a_s4Buv i_s4Bux x_s4Buz GHC.Prim.void#]
                          of
                          s2_s4BuA
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeIntOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Int
     -> GHC.Types.Int -> GHC.Types.Int -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeIntOffPtr1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeWordOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Word
     -> GHC.Types.Int
     -> GHC.Types.Word
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BuB ds1_s4BuC ds2_s4BuD void_0E]
        case ds_s4BuB of {
          GHC.Ptr.Ptr a_s4BuG [Occ=Once] ->
              case ds1_s4BuC of {
                GHC.Types.I# i_s4BuI [Occ=Once] ->
                    case ds2_s4BuD of {
                      GHC.Types.W# x_s4BuK [Occ=Once] ->
                          case
                              writeWordOffAddr# [a_s4BuG i_s4BuI x_s4BuK GHC.Prim.void#]
                          of
                          s2_s4BuL
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWordOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Word
     -> GHC.Types.Int -> GHC.Types.Word -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeWordOffPtr1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writePtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.Ptr a)
     -> GHC.Types.Int
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BuM ds1_s4BuN ds2_s4BuO void_0E]
        case ds_s4BuM of {
          GHC.Ptr.Ptr a1_s4BuR [Occ=Once] ->
              case ds1_s4BuN of {
                GHC.Types.I# i_s4BuT [Occ=Once] ->
                    case ds2_s4BuO of {
                      GHC.Ptr.Ptr x_s4BuV [Occ=Once] ->
                          case
                              writeAddrOffAddr# [a1_s4BuR i_s4BuT x_s4BuV GHC.Prim.void#]
                          of
                          s2_s4BuW
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writePtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.Ptr a)
     -> GHC.Types.Int -> GHC.Ptr.Ptr a -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writePtrOffPtr1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeFunPtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.FunPtr a)
     -> GHC.Types.Int
     -> GHC.Ptr.FunPtr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BuX ds1_s4BuY ds2_s4BuZ void_0E]
        case ds_s4BuX of {
          GHC.Ptr.Ptr a1_s4Bv2 [Occ=Once] ->
              case ds1_s4BuY of {
                GHC.Types.I# i_s4Bv4 [Occ=Once] ->
                    case ds2_s4BuZ of {
                      GHC.Ptr.FunPtr x_s4Bv6 [Occ=Once] ->
                          case
                              writeAddrOffAddr# [a1_s4Bv2 i_s4Bv4 x_s4Bv6 GHC.Prim.void#]
                          of
                          s2_s4Bv7
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeFunPtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.FunPtr a)
     -> GHC.Types.Int -> GHC.Ptr.FunPtr a -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeFunPtrOffPtr1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeFloatOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Float
     -> GHC.Types.Int
     -> GHC.Types.Float
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bv8 ds1_s4Bv9 ds2_s4Bva void_0E]
        case ds_s4Bv8 of {
          GHC.Ptr.Ptr a_s4Bvd [Occ=Once] ->
              case ds1_s4Bv9 of {
                GHC.Types.I# i_s4Bvf [Occ=Once] ->
                    case ds2_s4Bva of {
                      GHC.Types.F# x_s4Bvh [Occ=Once] ->
                          case
                              writeFloatOffAddr# [a_s4Bvd i_s4Bvf x_s4Bvh GHC.Prim.void#]
                          of
                          s2_s4Bvi
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeFloatOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Float
     -> GHC.Types.Int -> GHC.Types.Float -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeFloatOffPtr1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeDoubleOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Double
     -> GHC.Types.Int
     -> GHC.Types.Double
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bvj ds1_s4Bvk ds2_s4Bvl void_0E]
        case ds_s4Bvj of {
          GHC.Ptr.Ptr a_s4Bvo [Occ=Once] ->
              case ds1_s4Bvk of {
                GHC.Types.I# i_s4Bvq [Occ=Once] ->
                    case ds2_s4Bvl of {
                      GHC.Types.D# x_s4Bvs [Occ=Once] ->
                          case
                              writeDoubleOffAddr# [a_s4Bvo i_s4Bvq x_s4Bvs GHC.Prim.void#]
                          of
                          s2_s4Bvt
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeDoubleOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Double
     -> GHC.Types.Int -> GHC.Types.Double -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeDoubleOffPtr1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeStablePtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Stable.StablePtr a)
     -> GHC.Types.Int
     -> GHC.Stable.StablePtr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bvu ds1_s4Bvv ds2_s4Bvw void_0E]
        case ds_s4Bvu of {
          GHC.Ptr.Ptr a1_s4Bvz [Occ=Once] ->
              case ds1_s4Bvv of {
                GHC.Types.I# i_s4BvB [Occ=Once] ->
                    case ds2_s4Bvw of {
                      GHC.Stable.StablePtr x_s4BvD [Occ=Once] ->
                          case
                              writeStablePtrOffAddr# [a1_s4Bvz i_s4BvB x_s4BvD GHC.Prim.void#]
                          of
                          s2_s4BvE
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeStablePtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Stable.StablePtr a)
     -> GHC.Types.Int -> GHC.Stable.StablePtr a -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeStablePtrOffPtr1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeInt8OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int8
     -> GHC.Types.Int
     -> GHC.Int.Int8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BvF ds1_s4BvG ds2_s4BvH void_0E]
        case ds_s4BvF of {
          GHC.Ptr.Ptr a_s4BvK [Occ=Once] ->
              case ds1_s4BvG of {
                GHC.Types.I# i_s4BvM [Occ=Once] ->
                    case ds2_s4BvH of {
                      GHC.Int.I8# x_s4BvO [Occ=Once] ->
                          case
                              writeInt8OffAddr# [a_s4BvK i_s4BvM x_s4BvO GHC.Prim.void#]
                          of
                          s2_s4BvP
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeInt8OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int8
     -> GHC.Types.Int -> GHC.Int.Int8 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeInt8OffPtr1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeWord8OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BvQ ds1_s4BvR ds2_s4BvS void_0E]
        case ds_s4BvQ of {
          GHC.Ptr.Ptr a_s4BvV [Occ=Once] ->
              case ds1_s4BvR of {
                GHC.Types.I# i_s4BvX [Occ=Once] ->
                    case ds2_s4BvS of {
                      GHC.Word.W8# x_s4BvZ [Occ=Once] ->
                          case
                              writeWord8OffAddr# [a_s4BvV i_s4BvX x_s4BvZ GHC.Prim.void#]
                          of
                          s2_s4Bw0
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWord8OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int -> GHC.Word.Word8 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeWord8OffPtr1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeInt16OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int16
     -> GHC.Types.Int
     -> GHC.Int.Int16
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bw1 ds1_s4Bw2 ds2_s4Bw3 void_0E]
        case ds_s4Bw1 of {
          GHC.Ptr.Ptr a_s4Bw6 [Occ=Once] ->
              case ds1_s4Bw2 of {
                GHC.Types.I# i_s4Bw8 [Occ=Once] ->
                    case ds2_s4Bw3 of {
                      GHC.Int.I16# x_s4Bwa [Occ=Once] ->
                          case
                              writeInt16OffAddr# [a_s4Bw6 i_s4Bw8 x_s4Bwa GHC.Prim.void#]
                          of
                          s2_s4Bwb
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeInt16OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int16
     -> GHC.Types.Int -> GHC.Int.Int16 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeInt16OffPtr1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeWord16OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word16
     -> GHC.Types.Int
     -> GHC.Word.Word16
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bwc ds1_s4Bwd ds2_s4Bwe void_0E]
        case ds_s4Bwc of {
          GHC.Ptr.Ptr a_s4Bwh [Occ=Once] ->
              case ds1_s4Bwd of {
                GHC.Types.I# i_s4Bwj [Occ=Once] ->
                    case ds2_s4Bwe of {
                      GHC.Word.W16# x_s4Bwl [Occ=Once] ->
                          case
                              writeWord16OffAddr# [a_s4Bwh i_s4Bwj x_s4Bwl GHC.Prim.void#]
                          of
                          s2_s4Bwm
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWord16OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word16
     -> GHC.Types.Int -> GHC.Word.Word16 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeWord16OffPtr1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeInt32OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int32
     -> GHC.Types.Int
     -> GHC.Int.Int32
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bwn ds1_s4Bwo ds2_s4Bwp void_0E]
        case ds_s4Bwn of {
          GHC.Ptr.Ptr a_s4Bws [Occ=Once] ->
              case ds1_s4Bwo of {
                GHC.Types.I# i_s4Bwu [Occ=Once] ->
                    case ds2_s4Bwp of {
                      GHC.Int.I32# x_s4Bww [Occ=Once] ->
                          case
                              writeInt32OffAddr# [a_s4Bws i_s4Bwu x_s4Bww GHC.Prim.void#]
                          of
                          s2_s4Bwx
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeInt32OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int32
     -> GHC.Types.Int -> GHC.Int.Int32 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeInt32OffPtr1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeWord32OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word32
     -> GHC.Types.Int
     -> GHC.Word.Word32
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Bwy ds1_s4Bwz ds2_s4BwA void_0E]
        case ds_s4Bwy of {
          GHC.Ptr.Ptr a_s4BwD [Occ=Once] ->
              case ds1_s4Bwz of {
                GHC.Types.I# i_s4BwF [Occ=Once] ->
                    case ds2_s4BwA of {
                      GHC.Word.W32# x_s4BwH [Occ=Once] ->
                          case
                              writeWord32OffAddr# [a_s4BwD i_s4BwF x_s4BwH GHC.Prim.void#]
                          of
                          s2_s4BwI
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWord32OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word32
     -> GHC.Types.Int -> GHC.Word.Word32 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeWord32OffPtr1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeInt64OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int64
     -> GHC.Types.Int
     -> GHC.Int.Int64
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BwJ ds1_s4BwK ds2_s4BwL void_0E]
        case ds_s4BwJ of {
          GHC.Ptr.Ptr a_s4BwO [Occ=Once] ->
              case ds1_s4BwK of {
                GHC.Types.I# i_s4BwQ [Occ=Once] ->
                    case ds2_s4BwL of {
                      GHC.Int.I64# x_s4BwS [Occ=Once] ->
                          case
                              writeInt64OffAddr# [a_s4BwO i_s4BwQ x_s4BwS GHC.Prim.void#]
                          of
                          s2_s4BwT
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeInt64OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int64
     -> GHC.Types.Int -> GHC.Int.Int64 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeInt64OffPtr1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeWord64OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word64
     -> GHC.Types.Int
     -> GHC.Word.Word64
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4BwU ds1_s4BwV ds2_s4BwW void_0E]
        case ds_s4BwU of {
          GHC.Ptr.Ptr a_s4BwZ [Occ=Once] ->
              case ds1_s4BwV of {
                GHC.Types.I# i_s4Bx1 [Occ=Once] ->
                    case ds2_s4BwW of {
                      GHC.Word.W64# x_s4Bx3 [Occ=Once] ->
                          case
                              writeWord64OffAddr# [a_s4BwZ i_s4Bx1 x_s4Bx3 GHC.Prim.void#]
                          of
                          s2_s4Bx4
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWord64OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word64
     -> GHC.Types.Int -> GHC.Word.Word64 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeWord64OffPtr1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Storable.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Storable.$trModule4];

GHC.Storable.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Storable"#;

GHC.Storable.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Storable.$trModule2];

GHC.Storable.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Storable.$trModule3
                                     GHC.Storable.$trModule1];


==================== Pre unarise: ====================
2018-03-16 15:59:29.279001602 UTC

GHC.Storable.readWideCharOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Char
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CxU ds1_s4CxV eta_s4CxW]
        case ds_s4CxU of {
          GHC.Ptr.Ptr a_s4CxY [Occ=Once] ->
              case ds1_s4CxV of {
                GHC.Types.I# i_s4Cy0 [Occ=Once] ->
                    case readWideCharOffAddr# [a_s4CxY i_s4Cy0 eta_s4CxW] of {
                      (#,#) ipv_s4Cy2 [Occ=Once] ipv1_s4Cy3 [Occ=Once] ->
                          let {
                            sat_s4Cy4 [Occ=Once] :: GHC.Types.Char
                            [LclId] =
                                CCCS GHC.Types.C#! [ipv1_s4Cy3];
                          } in  (#,#) [ipv_s4Cy2 sat_s4Cy4];
                    };
              };
        };

GHC.Storable.readWideCharOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Char
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Char
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readWideCharOffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readIntOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Cy5 ds1_s4Cy6 eta_s4Cy7]
        case ds_s4Cy5 of {
          GHC.Ptr.Ptr a_s4Cy9 [Occ=Once] ->
              case ds1_s4Cy6 of {
                GHC.Types.I# i_s4Cyb [Occ=Once] ->
                    case readIntOffAddr# [a_s4Cy9 i_s4Cyb eta_s4Cy7] of {
                      (#,#) ipv_s4Cyd [Occ=Once] ipv1_s4Cye [Occ=Once] ->
                          let {
                            sat_s4Cyf [Occ=Once] :: GHC.Types.Int
                            [LclId] =
                                CCCS GHC.Types.I#! [ipv1_s4Cye];
                          } in  (#,#) [ipv_s4Cyd sat_s4Cyf];
                    };
              };
        };

GHC.Storable.readIntOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Int
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readIntOffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readWordOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Word
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Word #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Cyg ds1_s4Cyh eta_s4Cyi]
        case ds_s4Cyg of {
          GHC.Ptr.Ptr a_s4Cyk [Occ=Once] ->
              case ds1_s4Cyh of {
                GHC.Types.I# i_s4Cym [Occ=Once] ->
                    case readWordOffAddr# [a_s4Cyk i_s4Cym eta_s4Cyi] of {
                      (#,#) ipv_s4Cyo [Occ=Once] ipv1_s4Cyp [Occ=Once] ->
                          let {
                            sat_s4Cyq [Occ=Once] :: GHC.Types.Word
                            [LclId] =
                                CCCS GHC.Types.W#! [ipv1_s4Cyp];
                          } in  (#,#) [ipv_s4Cyo sat_s4Cyq];
                    };
              };
        };

GHC.Storable.readWordOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Word
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Word
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readWordOffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readPtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.Ptr a)
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Cyr ds1_s4Cys eta_s4Cyt]
        case ds_s4Cyr of {
          GHC.Ptr.Ptr a1_s4Cyv [Occ=Once] ->
              case ds1_s4Cys of {
                GHC.Types.I# i_s4Cyx [Occ=Once] ->
                    case readAddrOffAddr# [a1_s4Cyv i_s4Cyx eta_s4Cyt] of {
                      (#,#) ipv_s4Cyz [Occ=Once] ipv1_s4CyA [Occ=Once] ->
                          let {
                            sat_s4CyB [Occ=Once] :: GHC.Ptr.Ptr a_a4AYh
                            [LclId] =
                                CCCS GHC.Ptr.Ptr! [ipv1_s4CyA];
                          } in  (#,#) [ipv_s4Cyz sat_s4CyB];
                    };
              };
        };

GHC.Storable.readPtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.Ptr a)
     -> GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readPtrOffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readFunPtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.FunPtr a)
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.FunPtr a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CyC ds1_s4CyD eta_s4CyE]
        case ds_s4CyC of {
          GHC.Ptr.Ptr a1_s4CyG [Occ=Once] ->
              case ds1_s4CyD of {
                GHC.Types.I# i_s4CyI [Occ=Once] ->
                    case readAddrOffAddr# [a1_s4CyG i_s4CyI eta_s4CyE] of {
                      (#,#) ipv_s4CyK [Occ=Once] ipv1_s4CyL [Occ=Once] ->
                          let {
                            sat_s4CyM [Occ=Once] :: GHC.Ptr.FunPtr a_a4AY8
                            [LclId] =
                                CCCS GHC.Ptr.FunPtr! [ipv1_s4CyL];
                          } in  (#,#) [ipv_s4CyK sat_s4CyM];
                    };
              };
        };

GHC.Storable.readFunPtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.FunPtr a)
     -> GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.FunPtr a)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readFunPtrOffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readFloatOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Float
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Float #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CyN ds1_s4CyO eta_s4CyP]
        case ds_s4CyN of {
          GHC.Ptr.Ptr a_s4CyR [Occ=Once] ->
              case ds1_s4CyO of {
                GHC.Types.I# i_s4CyT [Occ=Once] ->
                    case readFloatOffAddr# [a_s4CyR i_s4CyT eta_s4CyP] of {
                      (#,#) ipv_s4CyV [Occ=Once] ipv1_s4CyW [Occ=Once] ->
                          let {
                            sat_s4CyX [Occ=Once] :: GHC.Types.Float
                            [LclId] =
                                CCCS GHC.Types.F#! [ipv1_s4CyW];
                          } in  (#,#) [ipv_s4CyV sat_s4CyX];
                    };
              };
        };

GHC.Storable.readFloatOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Float
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Float
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readFloatOffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readDoubleOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Double
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Double #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CyY ds1_s4CyZ eta_s4Cz0]
        case ds_s4CyY of {
          GHC.Ptr.Ptr a_s4Cz2 [Occ=Once] ->
              case ds1_s4CyZ of {
                GHC.Types.I# i_s4Cz4 [Occ=Once] ->
                    case readDoubleOffAddr# [a_s4Cz2 i_s4Cz4 eta_s4Cz0] of {
                      (#,#) ipv_s4Cz6 [Occ=Once] ipv1_s4Cz7 [Occ=Once] ->
                          let {
                            sat_s4Cz8 [Occ=Once] :: GHC.Types.Double
                            [LclId] =
                                CCCS GHC.Types.D#! [ipv1_s4Cz7];
                          } in  (#,#) [ipv_s4Cz6 sat_s4Cz8];
                    };
              };
        };

GHC.Storable.readDoubleOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Double
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Double
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readDoubleOffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readStablePtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Stable.StablePtr a)
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Stable.StablePtr a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Cz9 ds1_s4Cza eta_s4Czb]
        case ds_s4Cz9 of {
          GHC.Ptr.Ptr a1_s4Czd [Occ=Once] ->
              case ds1_s4Cza of {
                GHC.Types.I# i_s4Czf [Occ=Once] ->
                    case readStablePtrOffAddr# [a1_s4Czd i_s4Czf eta_s4Czb] of {
                      (#,#) ipv_s4Czh [Occ=Once] ipv1_s4Czi [Occ=Once] ->
                          let {
                            sat_s4Czj [Occ=Once] :: GHC.Stable.StablePtr a_a4AXK
                            [LclId] =
                                CCCS GHC.Stable.StablePtr! [ipv1_s4Czi];
                          } in  (#,#) [ipv_s4Czh sat_s4Czj];
                    };
              };
        };

GHC.Storable.readStablePtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Stable.StablePtr a)
     -> GHC.Types.Int -> GHC.Types.IO (GHC.Stable.StablePtr a)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readStablePtrOffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readInt8OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Int.Int8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Czk ds1_s4Czl eta_s4Czm]
        case ds_s4Czk of {
          GHC.Ptr.Ptr a_s4Czo [Occ=Once] ->
              case ds1_s4Czl of {
                GHC.Types.I# i_s4Czq [Occ=Once] ->
                    case readInt8OffAddr# [a_s4Czo i_s4Czq eta_s4Czm] of {
                      (#,#) ipv_s4Czs [Occ=Once] ipv1_s4Czt [Occ=Once] ->
                          let {
                            sat_s4Czu [Occ=Once] :: GHC.Int.Int8
                            [LclId] =
                                CCCS GHC.Int.I8#! [ipv1_s4Czt];
                          } in  (#,#) [ipv_s4Czs sat_s4Czu];
                    };
              };
        };

GHC.Storable.readInt8OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int8
     -> GHC.Types.Int -> GHC.Types.IO GHC.Int.Int8
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readInt8OffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readWord8OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Word.Word8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Czv ds1_s4Czw eta_s4Czx]
        case ds_s4Czv of {
          GHC.Ptr.Ptr a_s4Czz [Occ=Once] ->
              case ds1_s4Czw of {
                GHC.Types.I# i_s4CzB [Occ=Once] ->
                    case readWord8OffAddr# [a_s4Czz i_s4CzB eta_s4Czx] of {
                      (#,#) ipv_s4CzD [Occ=Once] ipv1_s4CzE [Occ=Once] ->
                          let {
                            sat_s4CzF [Occ=Once] :: GHC.Word.Word8
                            [LclId] =
                                CCCS GHC.Word.W8#! [ipv1_s4CzE];
                          } in  (#,#) [ipv_s4CzD sat_s4CzF];
                    };
              };
        };

GHC.Storable.readWord8OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int -> GHC.Types.IO GHC.Word.Word8
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readWord8OffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readInt16OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int16
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Int.Int16 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CzG ds1_s4CzH eta_s4CzI]
        case ds_s4CzG of {
          GHC.Ptr.Ptr a_s4CzK [Occ=Once] ->
              case ds1_s4CzH of {
                GHC.Types.I# i_s4CzM [Occ=Once] ->
                    case readInt16OffAddr# [a_s4CzK i_s4CzM eta_s4CzI] of {
                      (#,#) ipv_s4CzO [Occ=Once] ipv1_s4CzP [Occ=Once] ->
                          let {
                            sat_s4CzQ [Occ=Once] :: GHC.Int.Int16
                            [LclId] =
                                CCCS GHC.Int.I16#! [ipv1_s4CzP];
                          } in  (#,#) [ipv_s4CzO sat_s4CzQ];
                    };
              };
        };

GHC.Storable.readInt16OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int16
     -> GHC.Types.Int -> GHC.Types.IO GHC.Int.Int16
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readInt16OffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readWord16OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word16
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Word.Word16 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CzR ds1_s4CzS eta_s4CzT]
        case ds_s4CzR of {
          GHC.Ptr.Ptr a_s4CzV [Occ=Once] ->
              case ds1_s4CzS of {
                GHC.Types.I# i_s4CzX [Occ=Once] ->
                    case readWord16OffAddr# [a_s4CzV i_s4CzX eta_s4CzT] of {
                      (#,#) ipv_s4CzZ [Occ=Once] ipv1_s4CA0 [Occ=Once] ->
                          let {
                            sat_s4CA1 [Occ=Once] :: GHC.Word.Word16
                            [LclId] =
                                CCCS GHC.Word.W16#! [ipv1_s4CA0];
                          } in  (#,#) [ipv_s4CzZ sat_s4CA1];
                    };
              };
        };

GHC.Storable.readWord16OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word16
     -> GHC.Types.Int -> GHC.Types.IO GHC.Word.Word16
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readWord16OffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readInt32OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int32
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Int.Int32 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CA2 ds1_s4CA3 eta_s4CA4]
        case ds_s4CA2 of {
          GHC.Ptr.Ptr a_s4CA6 [Occ=Once] ->
              case ds1_s4CA3 of {
                GHC.Types.I# i_s4CA8 [Occ=Once] ->
                    case readInt32OffAddr# [a_s4CA6 i_s4CA8 eta_s4CA4] of {
                      (#,#) ipv_s4CAa [Occ=Once] ipv1_s4CAb [Occ=Once] ->
                          let {
                            sat_s4CAc [Occ=Once] :: GHC.Int.Int32
                            [LclId] =
                                CCCS GHC.Int.I32#! [ipv1_s4CAb];
                          } in  (#,#) [ipv_s4CAa sat_s4CAc];
                    };
              };
        };

GHC.Storable.readInt32OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int32
     -> GHC.Types.Int -> GHC.Types.IO GHC.Int.Int32
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readInt32OffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readWord32OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word32
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Word.Word32 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CAd ds1_s4CAe eta_s4CAf]
        case ds_s4CAd of {
          GHC.Ptr.Ptr a_s4CAh [Occ=Once] ->
              case ds1_s4CAe of {
                GHC.Types.I# i_s4CAj [Occ=Once] ->
                    case readWord32OffAddr# [a_s4CAh i_s4CAj eta_s4CAf] of {
                      (#,#) ipv_s4CAl [Occ=Once] ipv1_s4CAm [Occ=Once] ->
                          let {
                            sat_s4CAn [Occ=Once] :: GHC.Word.Word32
                            [LclId] =
                                CCCS GHC.Word.W32#! [ipv1_s4CAm];
                          } in  (#,#) [ipv_s4CAl sat_s4CAn];
                    };
              };
        };

GHC.Storable.readWord32OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word32
     -> GHC.Types.Int -> GHC.Types.IO GHC.Word.Word32
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readWord32OffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readInt64OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int64
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Int.Int64 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CAo ds1_s4CAp eta_s4CAq]
        case ds_s4CAo of {
          GHC.Ptr.Ptr a_s4CAs [Occ=Once] ->
              case ds1_s4CAp of {
                GHC.Types.I# i_s4CAu [Occ=Once] ->
                    case readInt64OffAddr# [a_s4CAs i_s4CAu eta_s4CAq] of {
                      (#,#) ipv_s4CAw [Occ=Once] ipv1_s4CAx [Occ=Once] ->
                          let {
                            sat_s4CAy [Occ=Once] :: GHC.Int.Int64
                            [LclId] =
                                CCCS GHC.Int.I64#! [ipv1_s4CAx];
                          } in  (#,#) [ipv_s4CAw sat_s4CAy];
                    };
              };
        };

GHC.Storable.readInt64OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int64
     -> GHC.Types.Int -> GHC.Types.IO GHC.Int.Int64
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readInt64OffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.readWord64OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word64
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Word.Word64 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CAz ds1_s4CAA eta_s4CAB]
        case ds_s4CAz of {
          GHC.Ptr.Ptr a_s4CAD [Occ=Once] ->
              case ds1_s4CAA of {
                GHC.Types.I# i_s4CAF [Occ=Once] ->
                    case readWord64OffAddr# [a_s4CAD i_s4CAF eta_s4CAB] of {
                      (#,#) ipv_s4CAH [Occ=Once] ipv1_s4CAI [Occ=Once] ->
                          let {
                            sat_s4CAJ [Occ=Once] :: GHC.Word.Word64
                            [LclId] =
                                CCCS GHC.Word.W64#! [ipv1_s4CAI];
                          } in  (#,#) [ipv_s4CAH sat_s4CAJ];
                    };
              };
        };

GHC.Storable.readWord64OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word64
     -> GHC.Types.Int -> GHC.Types.IO GHC.Word.Word64
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Storable.readWord64OffPtr1 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeWideCharOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Char
     -> GHC.Types.Int
     -> GHC.Types.Char
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CAK ds1_s4CAL ds2_s4CAM eta_s4CAN]
        case ds_s4CAK of {
          GHC.Ptr.Ptr a_s4CAP [Occ=Once] ->
              case ds1_s4CAL of {
                GHC.Types.I# i_s4CAR [Occ=Once] ->
                    case ds2_s4CAM of {
                      GHC.Types.C# x_s4CAT [Occ=Once] ->
                          case
                              writeWideCharOffAddr# [a_s4CAP i_s4CAR x_s4CAT eta_s4CAN]
                          of
                          s2_s4CAU
                          { __DEFAULT -> (#,#) [s2_s4CAU GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWideCharOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Char
     -> GHC.Types.Int -> GHC.Types.Char -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeWideCharOffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeIntOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CAV ds1_s4CAW ds2_s4CAX eta_s4CAY]
        case ds_s4CAV of {
          GHC.Ptr.Ptr a_s4CB0 [Occ=Once] ->
              case ds1_s4CAW of {
                GHC.Types.I# i_s4CB2 [Occ=Once] ->
                    case ds2_s4CAX of {
                      GHC.Types.I# x_s4CB4 [Occ=Once] ->
                          case
                              writeIntOffAddr# [a_s4CB0 i_s4CB2 x_s4CB4 eta_s4CAY]
                          of
                          s2_s4CB5
                          { __DEFAULT -> (#,#) [s2_s4CB5 GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeIntOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Int
     -> GHC.Types.Int -> GHC.Types.Int -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeIntOffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeWordOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Word
     -> GHC.Types.Int
     -> GHC.Types.Word
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CB6 ds1_s4CB7 ds2_s4CB8 eta_s4CB9]
        case ds_s4CB6 of {
          GHC.Ptr.Ptr a_s4CBb [Occ=Once] ->
              case ds1_s4CB7 of {
                GHC.Types.I# i_s4CBd [Occ=Once] ->
                    case ds2_s4CB8 of {
                      GHC.Types.W# x_s4CBf [Occ=Once] ->
                          case
                              writeWordOffAddr# [a_s4CBb i_s4CBd x_s4CBf eta_s4CB9]
                          of
                          s2_s4CBg
                          { __DEFAULT -> (#,#) [s2_s4CBg GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWordOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Word
     -> GHC.Types.Int -> GHC.Types.Word -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeWordOffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writePtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.Ptr a)
     -> GHC.Types.Int
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CBh ds1_s4CBi ds2_s4CBj eta_s4CBk]
        case ds_s4CBh of {
          GHC.Ptr.Ptr a1_s4CBm [Occ=Once] ->
              case ds1_s4CBi of {
                GHC.Types.I# i_s4CBo [Occ=Once] ->
                    case ds2_s4CBj of {
                      GHC.Ptr.Ptr x_s4CBq [Occ=Once] ->
                          case
                              writeAddrOffAddr# [a1_s4CBm i_s4CBo x_s4CBq eta_s4CBk]
                          of
                          s2_s4CBr
                          { __DEFAULT -> (#,#) [s2_s4CBr GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writePtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.Ptr a)
     -> GHC.Types.Int -> GHC.Ptr.Ptr a -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writePtrOffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeFunPtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.FunPtr a)
     -> GHC.Types.Int
     -> GHC.Ptr.FunPtr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CBs ds1_s4CBt ds2_s4CBu eta_s4CBv]
        case ds_s4CBs of {
          GHC.Ptr.Ptr a1_s4CBx [Occ=Once] ->
              case ds1_s4CBt of {
                GHC.Types.I# i_s4CBz [Occ=Once] ->
                    case ds2_s4CBu of {
                      GHC.Ptr.FunPtr x_s4CBB [Occ=Once] ->
                          case
                              writeAddrOffAddr# [a1_s4CBx i_s4CBz x_s4CBB eta_s4CBv]
                          of
                          s2_s4CBC
                          { __DEFAULT -> (#,#) [s2_s4CBC GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeFunPtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.FunPtr a)
     -> GHC.Types.Int -> GHC.Ptr.FunPtr a -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeFunPtrOffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeFloatOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Float
     -> GHC.Types.Int
     -> GHC.Types.Float
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CBD ds1_s4CBE ds2_s4CBF eta_s4CBG]
        case ds_s4CBD of {
          GHC.Ptr.Ptr a_s4CBI [Occ=Once] ->
              case ds1_s4CBE of {
                GHC.Types.I# i_s4CBK [Occ=Once] ->
                    case ds2_s4CBF of {
                      GHC.Types.F# x_s4CBM [Occ=Once] ->
                          case
                              writeFloatOffAddr# [a_s4CBI i_s4CBK x_s4CBM eta_s4CBG]
                          of
                          s2_s4CBN
                          { __DEFAULT -> (#,#) [s2_s4CBN GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeFloatOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Float
     -> GHC.Types.Int -> GHC.Types.Float -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeFloatOffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeDoubleOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Double
     -> GHC.Types.Int
     -> GHC.Types.Double
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CBO ds1_s4CBP ds2_s4CBQ eta_s4CBR]
        case ds_s4CBO of {
          GHC.Ptr.Ptr a_s4CBT [Occ=Once] ->
              case ds1_s4CBP of {
                GHC.Types.I# i_s4CBV [Occ=Once] ->
                    case ds2_s4CBQ of {
                      GHC.Types.D# x_s4CBX [Occ=Once] ->
                          case
                              writeDoubleOffAddr# [a_s4CBT i_s4CBV x_s4CBX eta_s4CBR]
                          of
                          s2_s4CBY
                          { __DEFAULT -> (#,#) [s2_s4CBY GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeDoubleOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Double
     -> GHC.Types.Int -> GHC.Types.Double -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeDoubleOffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeStablePtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Stable.StablePtr a)
     -> GHC.Types.Int
     -> GHC.Stable.StablePtr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CBZ ds1_s4CC0 ds2_s4CC1 eta_s4CC2]
        case ds_s4CBZ of {
          GHC.Ptr.Ptr a1_s4CC4 [Occ=Once] ->
              case ds1_s4CC0 of {
                GHC.Types.I# i_s4CC6 [Occ=Once] ->
                    case ds2_s4CC1 of {
                      GHC.Stable.StablePtr x_s4CC8 [Occ=Once] ->
                          case
                              writeStablePtrOffAddr# [a1_s4CC4 i_s4CC6 x_s4CC8 eta_s4CC2]
                          of
                          s2_s4CC9
                          { __DEFAULT -> (#,#) [s2_s4CC9 GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeStablePtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Stable.StablePtr a)
     -> GHC.Types.Int -> GHC.Stable.StablePtr a -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeStablePtrOffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeInt8OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int8
     -> GHC.Types.Int
     -> GHC.Int.Int8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CCa ds1_s4CCb ds2_s4CCc eta_s4CCd]
        case ds_s4CCa of {
          GHC.Ptr.Ptr a_s4CCf [Occ=Once] ->
              case ds1_s4CCb of {
                GHC.Types.I# i_s4CCh [Occ=Once] ->
                    case ds2_s4CCc of {
                      GHC.Int.I8# x_s4CCj [Occ=Once] ->
                          case
                              writeInt8OffAddr# [a_s4CCf i_s4CCh x_s4CCj eta_s4CCd]
                          of
                          s2_s4CCk
                          { __DEFAULT -> (#,#) [s2_s4CCk GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeInt8OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int8
     -> GHC.Types.Int -> GHC.Int.Int8 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeInt8OffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeWord8OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CCl ds1_s4CCm ds2_s4CCn eta_s4CCo]
        case ds_s4CCl of {
          GHC.Ptr.Ptr a_s4CCq [Occ=Once] ->
              case ds1_s4CCm of {
                GHC.Types.I# i_s4CCs [Occ=Once] ->
                    case ds2_s4CCn of {
                      GHC.Word.W8# x_s4CCu [Occ=Once] ->
                          case
                              writeWord8OffAddr# [a_s4CCq i_s4CCs x_s4CCu eta_s4CCo]
                          of
                          s2_s4CCv
                          { __DEFAULT -> (#,#) [s2_s4CCv GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWord8OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int -> GHC.Word.Word8 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeWord8OffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeInt16OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int16
     -> GHC.Types.Int
     -> GHC.Int.Int16
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CCw ds1_s4CCx ds2_s4CCy eta_s4CCz]
        case ds_s4CCw of {
          GHC.Ptr.Ptr a_s4CCB [Occ=Once] ->
              case ds1_s4CCx of {
                GHC.Types.I# i_s4CCD [Occ=Once] ->
                    case ds2_s4CCy of {
                      GHC.Int.I16# x_s4CCF [Occ=Once] ->
                          case
                              writeInt16OffAddr# [a_s4CCB i_s4CCD x_s4CCF eta_s4CCz]
                          of
                          s2_s4CCG
                          { __DEFAULT -> (#,#) [s2_s4CCG GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeInt16OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int16
     -> GHC.Types.Int -> GHC.Int.Int16 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeInt16OffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeWord16OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word16
     -> GHC.Types.Int
     -> GHC.Word.Word16
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CCH ds1_s4CCI ds2_s4CCJ eta_s4CCK]
        case ds_s4CCH of {
          GHC.Ptr.Ptr a_s4CCM [Occ=Once] ->
              case ds1_s4CCI of {
                GHC.Types.I# i_s4CCO [Occ=Once] ->
                    case ds2_s4CCJ of {
                      GHC.Word.W16# x_s4CCQ [Occ=Once] ->
                          case
                              writeWord16OffAddr# [a_s4CCM i_s4CCO x_s4CCQ eta_s4CCK]
                          of
                          s2_s4CCR
                          { __DEFAULT -> (#,#) [s2_s4CCR GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWord16OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word16
     -> GHC.Types.Int -> GHC.Word.Word16 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeWord16OffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeInt32OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int32
     -> GHC.Types.Int
     -> GHC.Int.Int32
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CCS ds1_s4CCT ds2_s4CCU eta_s4CCV]
        case ds_s4CCS of {
          GHC.Ptr.Ptr a_s4CCX [Occ=Once] ->
              case ds1_s4CCT of {
                GHC.Types.I# i_s4CCZ [Occ=Once] ->
                    case ds2_s4CCU of {
                      GHC.Int.I32# x_s4CD1 [Occ=Once] ->
                          case
                              writeInt32OffAddr# [a_s4CCX i_s4CCZ x_s4CD1 eta_s4CCV]
                          of
                          s2_s4CD2
                          { __DEFAULT -> (#,#) [s2_s4CD2 GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeInt32OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int32
     -> GHC.Types.Int -> GHC.Int.Int32 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeInt32OffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeWord32OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word32
     -> GHC.Types.Int
     -> GHC.Word.Word32
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CD3 ds1_s4CD4 ds2_s4CD5 eta_s4CD6]
        case ds_s4CD3 of {
          GHC.Ptr.Ptr a_s4CD8 [Occ=Once] ->
              case ds1_s4CD4 of {
                GHC.Types.I# i_s4CDa [Occ=Once] ->
                    case ds2_s4CD5 of {
                      GHC.Word.W32# x_s4CDc [Occ=Once] ->
                          case
                              writeWord32OffAddr# [a_s4CD8 i_s4CDa x_s4CDc eta_s4CD6]
                          of
                          s2_s4CDd
                          { __DEFAULT -> (#,#) [s2_s4CDd GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWord32OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word32
     -> GHC.Types.Int -> GHC.Word.Word32 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeWord32OffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeInt64OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int64
     -> GHC.Types.Int
     -> GHC.Int.Int64
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CDe ds1_s4CDf ds2_s4CDg eta_s4CDh]
        case ds_s4CDe of {
          GHC.Ptr.Ptr a_s4CDj [Occ=Once] ->
              case ds1_s4CDf of {
                GHC.Types.I# i_s4CDl [Occ=Once] ->
                    case ds2_s4CDg of {
                      GHC.Int.I64# x_s4CDn [Occ=Once] ->
                          case
                              writeInt64OffAddr# [a_s4CDj i_s4CDl x_s4CDn eta_s4CDh]
                          of
                          s2_s4CDo
                          { __DEFAULT -> (#,#) [s2_s4CDo GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeInt64OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int64
     -> GHC.Types.Int -> GHC.Int.Int64 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeInt64OffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.writeWord64OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word64
     -> GHC.Types.Int
     -> GHC.Word.Word64
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CDp ds1_s4CDq ds2_s4CDr eta_s4CDs]
        case ds_s4CDp of {
          GHC.Ptr.Ptr a_s4CDu [Occ=Once] ->
              case ds1_s4CDq of {
                GHC.Types.I# i_s4CDw [Occ=Once] ->
                    case ds2_s4CDr of {
                      GHC.Word.W64# x_s4CDy [Occ=Once] ->
                          case
                              writeWord64OffAddr# [a_s4CDu i_s4CDw x_s4CDy eta_s4CDs]
                          of
                          s2_s4CDz
                          { __DEFAULT -> (#,#) [s2_s4CDz GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWord64OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word64
     -> GHC.Types.Int -> GHC.Word.Word64 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Storable.writeWord64OffPtr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Storable.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Storable.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Storable.$trModule4];

GHC.Storable.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Storable"#;

GHC.Storable.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Storable.$trModule2];

GHC.Storable.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Storable.$trModule3
                                     GHC.Storable.$trModule1];


==================== STG syntax: ====================
2018-03-16 15:59:29.304462471 UTC

GHC.Storable.readWideCharOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Char
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CxU ds1_s4CxV void_0E]
        case ds_s4CxU of {
          GHC.Ptr.Ptr a_s4CxY [Occ=Once] ->
              case ds1_s4CxV of {
                GHC.Types.I# i_s4Cy0 [Occ=Once] ->
                    case readWideCharOffAddr# [a_s4CxY i_s4Cy0 GHC.Prim.void#] of {
                      Unit# ipv1_s4Cy3 [Occ=Once] ->
                          let {
                            sat_s4Cy4 [Occ=Once] :: GHC.Types.Char
                            [LclId] =
                                CCCS GHC.Types.C#! [ipv1_s4Cy3];
                          } in  Unit# [sat_s4Cy4];
                    };
              };
        };

GHC.Storable.readWideCharOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Char
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Char
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readWideCharOffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readIntOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Cy5 ds1_s4Cy6 void_0E]
        case ds_s4Cy5 of {
          GHC.Ptr.Ptr a_s4Cy9 [Occ=Once] ->
              case ds1_s4Cy6 of {
                GHC.Types.I# i_s4Cyb [Occ=Once] ->
                    case readIntOffAddr# [a_s4Cy9 i_s4Cyb GHC.Prim.void#] of {
                      Unit# ipv1_s4Cye [Occ=Once] ->
                          let {
                            sat_s4Cyf [Occ=Once] :: GHC.Types.Int
                            [LclId] =
                                CCCS GHC.Types.I#! [ipv1_s4Cye];
                          } in  Unit# [sat_s4Cyf];
                    };
              };
        };

GHC.Storable.readIntOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Int
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readIntOffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readWordOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Word
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Word #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Cyg ds1_s4Cyh void_0E]
        case ds_s4Cyg of {
          GHC.Ptr.Ptr a_s4Cyk [Occ=Once] ->
              case ds1_s4Cyh of {
                GHC.Types.I# i_s4Cym [Occ=Once] ->
                    case readWordOffAddr# [a_s4Cyk i_s4Cym GHC.Prim.void#] of {
                      Unit# ipv1_s4Cyp [Occ=Once] ->
                          let {
                            sat_s4Cyq [Occ=Once] :: GHC.Types.Word
                            [LclId] =
                                CCCS GHC.Types.W#! [ipv1_s4Cyp];
                          } in  Unit# [sat_s4Cyq];
                    };
              };
        };

GHC.Storable.readWordOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Word
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Word
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readWordOffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readPtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.Ptr a)
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Cyr ds1_s4Cys void_0E]
        case ds_s4Cyr of {
          GHC.Ptr.Ptr a1_s4Cyv [Occ=Once] ->
              case ds1_s4Cys of {
                GHC.Types.I# i_s4Cyx [Occ=Once] ->
                    case readAddrOffAddr# [a1_s4Cyv i_s4Cyx GHC.Prim.void#] of {
                      Unit# ipv1_s4CyA [Occ=Once] ->
                          let {
                            sat_s4CyB [Occ=Once] :: GHC.Ptr.Ptr a_a4AYh
                            [LclId] =
                                CCCS GHC.Ptr.Ptr! [ipv1_s4CyA];
                          } in  Unit# [sat_s4CyB];
                    };
              };
        };

GHC.Storable.readPtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.Ptr a)
     -> GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readPtrOffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readFunPtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.FunPtr a)
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.FunPtr a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CyC ds1_s4CyD void_0E]
        case ds_s4CyC of {
          GHC.Ptr.Ptr a1_s4CyG [Occ=Once] ->
              case ds1_s4CyD of {
                GHC.Types.I# i_s4CyI [Occ=Once] ->
                    case readAddrOffAddr# [a1_s4CyG i_s4CyI GHC.Prim.void#] of {
                      Unit# ipv1_s4CyL [Occ=Once] ->
                          let {
                            sat_s4CyM [Occ=Once] :: GHC.Ptr.FunPtr a_a4AY8
                            [LclId] =
                                CCCS GHC.Ptr.FunPtr! [ipv1_s4CyL];
                          } in  Unit# [sat_s4CyM];
                    };
              };
        };

GHC.Storable.readFunPtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.FunPtr a)
     -> GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.FunPtr a)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readFunPtrOffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readFloatOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Float
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Float #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CyN ds1_s4CyO void_0E]
        case ds_s4CyN of {
          GHC.Ptr.Ptr a_s4CyR [Occ=Once] ->
              case ds1_s4CyO of {
                GHC.Types.I# i_s4CyT [Occ=Once] ->
                    case readFloatOffAddr# [a_s4CyR i_s4CyT GHC.Prim.void#] of {
                      Unit# ipv1_s4CyW [Occ=Once] ->
                          let {
                            sat_s4CyX [Occ=Once] :: GHC.Types.Float
                            [LclId] =
                                CCCS GHC.Types.F#! [ipv1_s4CyW];
                          } in  Unit# [sat_s4CyX];
                    };
              };
        };

GHC.Storable.readFloatOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Float
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Float
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readFloatOffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readDoubleOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Double
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Double #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CyY ds1_s4CyZ void_0E]
        case ds_s4CyY of {
          GHC.Ptr.Ptr a_s4Cz2 [Occ=Once] ->
              case ds1_s4CyZ of {
                GHC.Types.I# i_s4Cz4 [Occ=Once] ->
                    case readDoubleOffAddr# [a_s4Cz2 i_s4Cz4 GHC.Prim.void#] of {
                      Unit# ipv1_s4Cz7 [Occ=Once] ->
                          let {
                            sat_s4Cz8 [Occ=Once] :: GHC.Types.Double
                            [LclId] =
                                CCCS GHC.Types.D#! [ipv1_s4Cz7];
                          } in  Unit# [sat_s4Cz8];
                    };
              };
        };

GHC.Storable.readDoubleOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Double
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Double
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readDoubleOffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readStablePtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Stable.StablePtr a)
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Stable.StablePtr a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Cz9 ds1_s4Cza void_0E]
        case ds_s4Cz9 of {
          GHC.Ptr.Ptr a1_s4Czd [Occ=Once] ->
              case ds1_s4Cza of {
                GHC.Types.I# i_s4Czf [Occ=Once] ->
                    case readStablePtrOffAddr# [a1_s4Czd i_s4Czf GHC.Prim.void#] of {
                      Unit# ipv1_s4Czi [Occ=Once] ->
                          let {
                            sat_s4Czj [Occ=Once] :: GHC.Stable.StablePtr a_a4AXK
                            [LclId] =
                                CCCS GHC.Stable.StablePtr! [ipv1_s4Czi];
                          } in  Unit# [sat_s4Czj];
                    };
              };
        };

GHC.Storable.readStablePtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Stable.StablePtr a)
     -> GHC.Types.Int -> GHC.Types.IO (GHC.Stable.StablePtr a)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readStablePtrOffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readInt8OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Int.Int8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Czk ds1_s4Czl void_0E]
        case ds_s4Czk of {
          GHC.Ptr.Ptr a_s4Czo [Occ=Once] ->
              case ds1_s4Czl of {
                GHC.Types.I# i_s4Czq [Occ=Once] ->
                    case readInt8OffAddr# [a_s4Czo i_s4Czq GHC.Prim.void#] of {
                      Unit# ipv1_s4Czt [Occ=Once] ->
                          let {
                            sat_s4Czu [Occ=Once] :: GHC.Int.Int8
                            [LclId] =
                                CCCS GHC.Int.I8#! [ipv1_s4Czt];
                          } in  Unit# [sat_s4Czu];
                    };
              };
        };

GHC.Storable.readInt8OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int8
     -> GHC.Types.Int -> GHC.Types.IO GHC.Int.Int8
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readInt8OffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readWord8OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Word.Word8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4Czv ds1_s4Czw void_0E]
        case ds_s4Czv of {
          GHC.Ptr.Ptr a_s4Czz [Occ=Once] ->
              case ds1_s4Czw of {
                GHC.Types.I# i_s4CzB [Occ=Once] ->
                    case readWord8OffAddr# [a_s4Czz i_s4CzB GHC.Prim.void#] of {
                      Unit# ipv1_s4CzE [Occ=Once] ->
                          let {
                            sat_s4CzF [Occ=Once] :: GHC.Word.Word8
                            [LclId] =
                                CCCS GHC.Word.W8#! [ipv1_s4CzE];
                          } in  Unit# [sat_s4CzF];
                    };
              };
        };

GHC.Storable.readWord8OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int -> GHC.Types.IO GHC.Word.Word8
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readWord8OffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readInt16OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int16
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Int.Int16 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CzG ds1_s4CzH void_0E]
        case ds_s4CzG of {
          GHC.Ptr.Ptr a_s4CzK [Occ=Once] ->
              case ds1_s4CzH of {
                GHC.Types.I# i_s4CzM [Occ=Once] ->
                    case readInt16OffAddr# [a_s4CzK i_s4CzM GHC.Prim.void#] of {
                      Unit# ipv1_s4CzP [Occ=Once] ->
                          let {
                            sat_s4CzQ [Occ=Once] :: GHC.Int.Int16
                            [LclId] =
                                CCCS GHC.Int.I16#! [ipv1_s4CzP];
                          } in  Unit# [sat_s4CzQ];
                    };
              };
        };

GHC.Storable.readInt16OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int16
     -> GHC.Types.Int -> GHC.Types.IO GHC.Int.Int16
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readInt16OffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readWord16OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word16
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Word.Word16 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CzR ds1_s4CzS void_0E]
        case ds_s4CzR of {
          GHC.Ptr.Ptr a_s4CzV [Occ=Once] ->
              case ds1_s4CzS of {
                GHC.Types.I# i_s4CzX [Occ=Once] ->
                    case readWord16OffAddr# [a_s4CzV i_s4CzX GHC.Prim.void#] of {
                      Unit# ipv1_s4CA0 [Occ=Once] ->
                          let {
                            sat_s4CA1 [Occ=Once] :: GHC.Word.Word16
                            [LclId] =
                                CCCS GHC.Word.W16#! [ipv1_s4CA0];
                          } in  Unit# [sat_s4CA1];
                    };
              };
        };

GHC.Storable.readWord16OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word16
     -> GHC.Types.Int -> GHC.Types.IO GHC.Word.Word16
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readWord16OffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readInt32OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int32
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Int.Int32 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CA2 ds1_s4CA3 void_0E]
        case ds_s4CA2 of {
          GHC.Ptr.Ptr a_s4CA6 [Occ=Once] ->
              case ds1_s4CA3 of {
                GHC.Types.I# i_s4CA8 [Occ=Once] ->
                    case readInt32OffAddr# [a_s4CA6 i_s4CA8 GHC.Prim.void#] of {
                      Unit# ipv1_s4CAb [Occ=Once] ->
                          let {
                            sat_s4CAc [Occ=Once] :: GHC.Int.Int32
                            [LclId] =
                                CCCS GHC.Int.I32#! [ipv1_s4CAb];
                          } in  Unit# [sat_s4CAc];
                    };
              };
        };

GHC.Storable.readInt32OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int32
     -> GHC.Types.Int -> GHC.Types.IO GHC.Int.Int32
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readInt32OffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readWord32OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word32
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Word.Word32 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CAd ds1_s4CAe void_0E]
        case ds_s4CAd of {
          GHC.Ptr.Ptr a_s4CAh [Occ=Once] ->
              case ds1_s4CAe of {
                GHC.Types.I# i_s4CAj [Occ=Once] ->
                    case readWord32OffAddr# [a_s4CAh i_s4CAj GHC.Prim.void#] of {
                      Unit# ipv1_s4CAm [Occ=Once] ->
                          let {
                            sat_s4CAn [Occ=Once] :: GHC.Word.Word32
                            [LclId] =
                                CCCS GHC.Word.W32#! [ipv1_s4CAm];
                          } in  Unit# [sat_s4CAn];
                    };
              };
        };

GHC.Storable.readWord32OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word32
     -> GHC.Types.Int -> GHC.Types.IO GHC.Word.Word32
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readWord32OffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readInt64OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int64
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Int.Int64 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CAo ds1_s4CAp void_0E]
        case ds_s4CAo of {
          GHC.Ptr.Ptr a_s4CAs [Occ=Once] ->
              case ds1_s4CAp of {
                GHC.Types.I# i_s4CAu [Occ=Once] ->
                    case readInt64OffAddr# [a_s4CAs i_s4CAu GHC.Prim.void#] of {
                      Unit# ipv1_s4CAx [Occ=Once] ->
                          let {
                            sat_s4CAy [Occ=Once] :: GHC.Int.Int64
                            [LclId] =
                                CCCS GHC.Int.I64#! [ipv1_s4CAx];
                          } in  Unit# [sat_s4CAy];
                    };
              };
        };

GHC.Storable.readInt64OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int64
     -> GHC.Types.Int -> GHC.Types.IO GHC.Int.Int64
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readInt64OffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.readWord64OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word64
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Word.Word64 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CAz ds1_s4CAA void_0E]
        case ds_s4CAz of {
          GHC.Ptr.Ptr a_s4CAD [Occ=Once] ->
              case ds1_s4CAA of {
                GHC.Types.I# i_s4CAF [Occ=Once] ->
                    case readWord64OffAddr# [a_s4CAD i_s4CAF GHC.Prim.void#] of {
                      Unit# ipv1_s4CAI [Occ=Once] ->
                          let {
                            sat_s4CAJ [Occ=Once] :: GHC.Word.Word64
                            [LclId] =
                                CCCS GHC.Word.W64#! [ipv1_s4CAI];
                          } in  Unit# [sat_s4CAJ];
                    };
              };
        };

GHC.Storable.readWord64OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word64
     -> GHC.Types.Int -> GHC.Types.IO GHC.Word.Word64
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Storable.readWord64OffPtr1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeWideCharOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Char
     -> GHC.Types.Int
     -> GHC.Types.Char
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CAK ds1_s4CAL ds2_s4CAM void_0E]
        case ds_s4CAK of {
          GHC.Ptr.Ptr a_s4CAP [Occ=Once] ->
              case ds1_s4CAL of {
                GHC.Types.I# i_s4CAR [Occ=Once] ->
                    case ds2_s4CAM of {
                      GHC.Types.C# x_s4CAT [Occ=Once] ->
                          case
                              writeWideCharOffAddr# [a_s4CAP i_s4CAR x_s4CAT GHC.Prim.void#]
                          of
                          s2_s4CAU
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWideCharOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Char
     -> GHC.Types.Int -> GHC.Types.Char -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeWideCharOffPtr1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeIntOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CAV ds1_s4CAW ds2_s4CAX void_0E]
        case ds_s4CAV of {
          GHC.Ptr.Ptr a_s4CB0 [Occ=Once] ->
              case ds1_s4CAW of {
                GHC.Types.I# i_s4CB2 [Occ=Once] ->
                    case ds2_s4CAX of {
                      GHC.Types.I# x_s4CB4 [Occ=Once] ->
                          case
                              writeIntOffAddr# [a_s4CB0 i_s4CB2 x_s4CB4 GHC.Prim.void#]
                          of
                          s2_s4CB5
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeIntOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Int
     -> GHC.Types.Int -> GHC.Types.Int -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeIntOffPtr1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeWordOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Word
     -> GHC.Types.Int
     -> GHC.Types.Word
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CB6 ds1_s4CB7 ds2_s4CB8 void_0E]
        case ds_s4CB6 of {
          GHC.Ptr.Ptr a_s4CBb [Occ=Once] ->
              case ds1_s4CB7 of {
                GHC.Types.I# i_s4CBd [Occ=Once] ->
                    case ds2_s4CB8 of {
                      GHC.Types.W# x_s4CBf [Occ=Once] ->
                          case
                              writeWordOffAddr# [a_s4CBb i_s4CBd x_s4CBf GHC.Prim.void#]
                          of
                          s2_s4CBg
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWordOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Word
     -> GHC.Types.Int -> GHC.Types.Word -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeWordOffPtr1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writePtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.Ptr a)
     -> GHC.Types.Int
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CBh ds1_s4CBi ds2_s4CBj void_0E]
        case ds_s4CBh of {
          GHC.Ptr.Ptr a1_s4CBm [Occ=Once] ->
              case ds1_s4CBi of {
                GHC.Types.I# i_s4CBo [Occ=Once] ->
                    case ds2_s4CBj of {
                      GHC.Ptr.Ptr x_s4CBq [Occ=Once] ->
                          case
                              writeAddrOffAddr# [a1_s4CBm i_s4CBo x_s4CBq GHC.Prim.void#]
                          of
                          s2_s4CBr
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writePtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.Ptr a)
     -> GHC.Types.Int -> GHC.Ptr.Ptr a -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writePtrOffPtr1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeFunPtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.FunPtr a)
     -> GHC.Types.Int
     -> GHC.Ptr.FunPtr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CBs ds1_s4CBt ds2_s4CBu void_0E]
        case ds_s4CBs of {
          GHC.Ptr.Ptr a1_s4CBx [Occ=Once] ->
              case ds1_s4CBt of {
                GHC.Types.I# i_s4CBz [Occ=Once] ->
                    case ds2_s4CBu of {
                      GHC.Ptr.FunPtr x_s4CBB [Occ=Once] ->
                          case
                              writeAddrOffAddr# [a1_s4CBx i_s4CBz x_s4CBB GHC.Prim.void#]
                          of
                          s2_s4CBC
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeFunPtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Ptr.FunPtr a)
     -> GHC.Types.Int -> GHC.Ptr.FunPtr a -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeFunPtrOffPtr1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeFloatOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Float
     -> GHC.Types.Int
     -> GHC.Types.Float
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CBD ds1_s4CBE ds2_s4CBF void_0E]
        case ds_s4CBD of {
          GHC.Ptr.Ptr a_s4CBI [Occ=Once] ->
              case ds1_s4CBE of {
                GHC.Types.I# i_s4CBK [Occ=Once] ->
                    case ds2_s4CBF of {
                      GHC.Types.F# x_s4CBM [Occ=Once] ->
                          case
                              writeFloatOffAddr# [a_s4CBI i_s4CBK x_s4CBM GHC.Prim.void#]
                          of
                          s2_s4CBN
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeFloatOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Float
     -> GHC.Types.Int -> GHC.Types.Float -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeFloatOffPtr1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeDoubleOffPtr1
  :: GHC.Ptr.Ptr GHC.Types.Double
     -> GHC.Types.Int
     -> GHC.Types.Double
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CBO ds1_s4CBP ds2_s4CBQ void_0E]
        case ds_s4CBO of {
          GHC.Ptr.Ptr a_s4CBT [Occ=Once] ->
              case ds1_s4CBP of {
                GHC.Types.I# i_s4CBV [Occ=Once] ->
                    case ds2_s4CBQ of {
                      GHC.Types.D# x_s4CBX [Occ=Once] ->
                          case
                              writeDoubleOffAddr# [a_s4CBT i_s4CBV x_s4CBX GHC.Prim.void#]
                          of
                          s2_s4CBY
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeDoubleOffPtr
  :: GHC.Ptr.Ptr GHC.Types.Double
     -> GHC.Types.Int -> GHC.Types.Double -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeDoubleOffPtr1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeStablePtrOffPtr1
  :: forall a.
     GHC.Ptr.Ptr (GHC.Stable.StablePtr a)
     -> GHC.Types.Int
     -> GHC.Stable.StablePtr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CBZ ds1_s4CC0 ds2_s4CC1 void_0E]
        case ds_s4CBZ of {
          GHC.Ptr.Ptr a1_s4CC4 [Occ=Once] ->
              case ds1_s4CC0 of {
                GHC.Types.I# i_s4CC6 [Occ=Once] ->
                    case ds2_s4CC1 of {
                      GHC.Stable.StablePtr x_s4CC8 [Occ=Once] ->
                          case
                              writeStablePtrOffAddr# [a1_s4CC4 i_s4CC6 x_s4CC8 GHC.Prim.void#]
                          of
                          s2_s4CC9
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeStablePtrOffPtr
  :: forall a.
     GHC.Ptr.Ptr (GHC.Stable.StablePtr a)
     -> GHC.Types.Int -> GHC.Stable.StablePtr a -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeStablePtrOffPtr1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeInt8OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int8
     -> GHC.Types.Int
     -> GHC.Int.Int8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CCa ds1_s4CCb ds2_s4CCc void_0E]
        case ds_s4CCa of {
          GHC.Ptr.Ptr a_s4CCf [Occ=Once] ->
              case ds1_s4CCb of {
                GHC.Types.I# i_s4CCh [Occ=Once] ->
                    case ds2_s4CCc of {
                      GHC.Int.I8# x_s4CCj [Occ=Once] ->
                          case
                              writeInt8OffAddr# [a_s4CCf i_s4CCh x_s4CCj GHC.Prim.void#]
                          of
                          s2_s4CCk
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeInt8OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int8
     -> GHC.Types.Int -> GHC.Int.Int8 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeInt8OffPtr1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeWord8OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CCl ds1_s4CCm ds2_s4CCn void_0E]
        case ds_s4CCl of {
          GHC.Ptr.Ptr a_s4CCq [Occ=Once] ->
              case ds1_s4CCm of {
                GHC.Types.I# i_s4CCs [Occ=Once] ->
                    case ds2_s4CCn of {
                      GHC.Word.W8# x_s4CCu [Occ=Once] ->
                          case
                              writeWord8OffAddr# [a_s4CCq i_s4CCs x_s4CCu GHC.Prim.void#]
                          of
                          s2_s4CCv
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWord8OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int -> GHC.Word.Word8 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeWord8OffPtr1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeInt16OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int16
     -> GHC.Types.Int
     -> GHC.Int.Int16
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CCw ds1_s4CCx ds2_s4CCy void_0E]
        case ds_s4CCw of {
          GHC.Ptr.Ptr a_s4CCB [Occ=Once] ->
              case ds1_s4CCx of {
                GHC.Types.I# i_s4CCD [Occ=Once] ->
                    case ds2_s4CCy of {
                      GHC.Int.I16# x_s4CCF [Occ=Once] ->
                          case
                              writeInt16OffAddr# [a_s4CCB i_s4CCD x_s4CCF GHC.Prim.void#]
                          of
                          s2_s4CCG
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeInt16OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int16
     -> GHC.Types.Int -> GHC.Int.Int16 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeInt16OffPtr1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeWord16OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word16
     -> GHC.Types.Int
     -> GHC.Word.Word16
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CCH ds1_s4CCI ds2_s4CCJ void_0E]
        case ds_s4CCH of {
          GHC.Ptr.Ptr a_s4CCM [Occ=Once] ->
              case ds1_s4CCI of {
                GHC.Types.I# i_s4CCO [Occ=Once] ->
                    case ds2_s4CCJ of {
                      GHC.Word.W16# x_s4CCQ [Occ=Once] ->
                          case
                              writeWord16OffAddr# [a_s4CCM i_s4CCO x_s4CCQ GHC.Prim.void#]
                          of
                          s2_s4CCR
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWord16OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word16
     -> GHC.Types.Int -> GHC.Word.Word16 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeWord16OffPtr1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeInt32OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int32
     -> GHC.Types.Int
     -> GHC.Int.Int32
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CCS ds1_s4CCT ds2_s4CCU void_0E]
        case ds_s4CCS of {
          GHC.Ptr.Ptr a_s4CCX [Occ=Once] ->
              case ds1_s4CCT of {
                GHC.Types.I# i_s4CCZ [Occ=Once] ->
                    case ds2_s4CCU of {
                      GHC.Int.I32# x_s4CD1 [Occ=Once] ->
                          case
                              writeInt32OffAddr# [a_s4CCX i_s4CCZ x_s4CD1 GHC.Prim.void#]
                          of
                          s2_s4CD2
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeInt32OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int32
     -> GHC.Types.Int -> GHC.Int.Int32 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeInt32OffPtr1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeWord32OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word32
     -> GHC.Types.Int
     -> GHC.Word.Word32
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CD3 ds1_s4CD4 ds2_s4CD5 void_0E]
        case ds_s4CD3 of {
          GHC.Ptr.Ptr a_s4CD8 [Occ=Once] ->
              case ds1_s4CD4 of {
                GHC.Types.I# i_s4CDa [Occ=Once] ->
                    case ds2_s4CD5 of {
                      GHC.Word.W32# x_s4CDc [Occ=Once] ->
                          case
                              writeWord32OffAddr# [a_s4CD8 i_s4CDa x_s4CDc GHC.Prim.void#]
                          of
                          s2_s4CDd
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWord32OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word32
     -> GHC.Types.Int -> GHC.Word.Word32 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeWord32OffPtr1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeInt64OffPtr1
  :: GHC.Ptr.Ptr GHC.Int.Int64
     -> GHC.Types.Int
     -> GHC.Int.Int64
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CDe ds1_s4CDf ds2_s4CDg void_0E]
        case ds_s4CDe of {
          GHC.Ptr.Ptr a_s4CDj [Occ=Once] ->
              case ds1_s4CDf of {
                GHC.Types.I# i_s4CDl [Occ=Once] ->
                    case ds2_s4CDg of {
                      GHC.Int.I64# x_s4CDn [Occ=Once] ->
                          case
                              writeInt64OffAddr# [a_s4CDj i_s4CDl x_s4CDn GHC.Prim.void#]
                          of
                          s2_s4CDo
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeInt64OffPtr
  :: GHC.Ptr.Ptr GHC.Int.Int64
     -> GHC.Types.Int -> GHC.Int.Int64 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeInt64OffPtr1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.writeWord64OffPtr1
  :: GHC.Ptr.Ptr GHC.Word.Word64
     -> GHC.Types.Int
     -> GHC.Word.Word64
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s4CDp ds1_s4CDq ds2_s4CDr void_0E]
        case ds_s4CDp of {
          GHC.Ptr.Ptr a_s4CDu [Occ=Once] ->
              case ds1_s4CDq of {
                GHC.Types.I# i_s4CDw [Occ=Once] ->
                    case ds2_s4CDr of {
                      GHC.Word.W64# x_s4CDy [Occ=Once] ->
                          case
                              writeWord64OffAddr# [a_s4CDu i_s4CDw x_s4CDy GHC.Prim.void#]
                          of
                          s2_s4CDz
                          { (##) -> Unit# [GHC.Tuple.()];
                          };
                    };
              };
        };

GHC.Storable.writeWord64OffPtr
  :: GHC.Ptr.Ptr GHC.Word.Word64
     -> GHC.Types.Int -> GHC.Word.Word64 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Storable.writeWord64OffPtr1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Storable.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Storable.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Storable.$trModule4];

GHC.Storable.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Storable"#;

GHC.Storable.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Storable.$trModule2];

GHC.Storable.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Storable.$trModule3
                                     GHC.Storable.$trModule1];

