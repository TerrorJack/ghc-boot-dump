
==================== Pre unarise: ====================
2018-03-16 15:57:01.467190258 UTC

GHC.Unicode.$fBoundedGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded GHC.Unicode.GeneralCategory
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Unicode.UppercaseLetter
                                       GHC.Unicode.NotAssigned];

lvl_r2j62 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "UppercaseLetter"#;

lvl1_r2j63 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_r2j62;

lvl2_r2j64 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "LowercaseLetter"#;

lvl3_r2j65 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl2_r2j64;

lvl4_r2j66 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "TitlecaseLetter"#;

lvl5_r2j67 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl4_r2j66;

lvl6_r2j68 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ModifierLetter"#;

lvl7_r2j69 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl6_r2j68;

lvl8_r2j6a :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OtherLetter"#;

lvl9_r2j6b :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl8_r2j6a;

lvl10_r2j6c :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "NonSpacingMark"#;

lvl11_r2j6d :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl10_r2j6c;

lvl12_r2j6e :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "SpacingCombiningMark"#;

lvl13_r2j6f :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl12_r2j6e;

lvl14_r2j6g :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EnclosingMark"#;

lvl15_r2j6h :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl14_r2j6g;

lvl16_r2j6i :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "DecimalNumber"#;

lvl17_r2j6j :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl16_r2j6i;

lvl18_r2j6k :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "LetterNumber"#;

lvl19_r2j6l :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl18_r2j6k;

lvl20_r2j6m :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OtherNumber"#;

lvl21_r2j6n :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl20_r2j6m;

lvl22_r2j6o :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ConnectorPunctuation"#;

lvl23_r2j6p :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl22_r2j6o;

lvl24_r2j6q :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "DashPunctuation"#;

lvl25_r2j6r :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl24_r2j6q;

lvl26_r2j6s :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OpenPunctuation"#;

lvl27_r2j6t :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl26_r2j6s;

lvl28_r2j6u :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ClosePunctuation"#;

lvl29_r2j6v :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl28_r2j6u;

lvl30_r2j6w :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "InitialQuote"#;

lvl31_r2j6x :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl30_r2j6w;

lvl32_r2j6y :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "FinalQuote"#;

lvl33_r2j6z :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl32_r2j6y;

lvl34_r2j6A :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OtherPunctuation"#;

lvl35_r2j6B :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl34_r2j6A;

lvl36_r2j6C :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "MathSymbol"#;

lvl37_r2j6D :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl36_r2j6C;

lvl38_r2j6E :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CurrencySymbol"#;

lvl39_r2j6F :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl38_r2j6E;

lvl40_r2j6G :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ModifierSymbol"#;

lvl41_r2j6H :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl40_r2j6G;

lvl42_r2j6I :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OtherSymbol"#;

lvl43_r2j6J :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl42_r2j6I;

lvl44_r2j6K :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Space"#;

lvl45_r2j6L :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl44_r2j6K;

lvl46_r2j6M :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "LineSeparator"#;

lvl47_r2j6N :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl46_r2j6M;

lvl48_r2j6O :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ParagraphSeparator"#;

lvl49_r2j6P :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl48_r2j6O;

lvl50_r2j6Q :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Control"#;

lvl51_r2j6R :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl50_r2j6Q;

lvl52_r2j6S :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Format"#;

lvl53_r2j6T :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl52_r2j6S;

lvl54_r2j6U :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Surrogate"#;

lvl55_r2j6V :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl54_r2j6U;

lvl56_r2j6W :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "PrivateUse"#;

lvl57_r2j6X :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl56_r2j6W;

lvl58_r2j6Y :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "NotAssigned"#;

lvl59_r2j6Z :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl58_r2j6Y;

GHC.Unicode.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Unicode.GeneralCategory
     -> GHC.Base.String -> GHC.Base.String
[GblId, Arity=2, Str=<S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [w_s2j7k w1_s2j7l]
        case w_s2j7k of {
          GHC.Unicode.UppercaseLetter -> GHC.Base.++ lvl1_r2j63 w1_s2j7l;
          GHC.Unicode.LowercaseLetter -> GHC.Base.++ lvl3_r2j65 w1_s2j7l;
          GHC.Unicode.TitlecaseLetter -> GHC.Base.++ lvl5_r2j67 w1_s2j7l;
          GHC.Unicode.ModifierLetter -> GHC.Base.++ lvl7_r2j69 w1_s2j7l;
          GHC.Unicode.OtherLetter -> GHC.Base.++ lvl9_r2j6b w1_s2j7l;
          GHC.Unicode.NonSpacingMark -> GHC.Base.++ lvl11_r2j6d w1_s2j7l;
          GHC.Unicode.SpacingCombiningMark ->
              GHC.Base.++ lvl13_r2j6f w1_s2j7l;
          GHC.Unicode.EnclosingMark -> GHC.Base.++ lvl15_r2j6h w1_s2j7l;
          GHC.Unicode.DecimalNumber -> GHC.Base.++ lvl17_r2j6j w1_s2j7l;
          GHC.Unicode.LetterNumber -> GHC.Base.++ lvl19_r2j6l w1_s2j7l;
          GHC.Unicode.OtherNumber -> GHC.Base.++ lvl21_r2j6n w1_s2j7l;
          GHC.Unicode.ConnectorPunctuation ->
              GHC.Base.++ lvl23_r2j6p w1_s2j7l;
          GHC.Unicode.DashPunctuation -> GHC.Base.++ lvl25_r2j6r w1_s2j7l;
          GHC.Unicode.OpenPunctuation -> GHC.Base.++ lvl27_r2j6t w1_s2j7l;
          GHC.Unicode.ClosePunctuation -> GHC.Base.++ lvl29_r2j6v w1_s2j7l;
          GHC.Unicode.InitialQuote -> GHC.Base.++ lvl31_r2j6x w1_s2j7l;
          GHC.Unicode.FinalQuote -> GHC.Base.++ lvl33_r2j6z w1_s2j7l;
          GHC.Unicode.OtherPunctuation -> GHC.Base.++ lvl35_r2j6B w1_s2j7l;
          GHC.Unicode.MathSymbol -> GHC.Base.++ lvl37_r2j6D w1_s2j7l;
          GHC.Unicode.CurrencySymbol -> GHC.Base.++ lvl39_r2j6F w1_s2j7l;
          GHC.Unicode.ModifierSymbol -> GHC.Base.++ lvl41_r2j6H w1_s2j7l;
          GHC.Unicode.OtherSymbol -> GHC.Base.++ lvl43_r2j6J w1_s2j7l;
          GHC.Unicode.Space -> GHC.Base.++ lvl45_r2j6L w1_s2j7l;
          GHC.Unicode.LineSeparator -> GHC.Base.++ lvl47_r2j6N w1_s2j7l;
          GHC.Unicode.ParagraphSeparator -> GHC.Base.++ lvl49_r2j6P w1_s2j7l;
          GHC.Unicode.Control -> GHC.Base.++ lvl51_r2j6R w1_s2j7l;
          GHC.Unicode.Format -> GHC.Base.++ lvl53_r2j6T w1_s2j7l;
          GHC.Unicode.Surrogate -> GHC.Base.++ lvl55_r2j6V w1_s2j7l;
          GHC.Unicode.PrivateUse -> GHC.Base.++ lvl57_r2j6X w1_s2j7l;
          GHC.Unicode.NotAssigned -> GHC.Base.++ lvl59_r2j6Z w1_s2j7l;
        };

GHC.Unicode.$fShowGeneralCategory_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Unicode.GeneralCategory -> GHC.Show.ShowS
[GblId, Arity=3, Str=<L,A><S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [w_s2j7n w1_s2j7o w2_s2j7p]
        GHC.Unicode.$w$cshowsPrec w1_s2j7o w2_s2j7p;

GHC.Unicode.$fShowGeneralCategory1 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

GHC.Unicode.$fShowGeneralCategory_$cshow
  :: GHC.Unicode.GeneralCategory -> GHC.Base.String
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [x_s2j7q] GHC.Unicode.$w$cshowsPrec x_s2j7q GHC.Types.[];

GHC.Unicode.$fShowGeneralCategory_$cshowList
  :: [GHC.Unicode.GeneralCategory] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_s2j7r s_s2j7s]
        GHC.Show.showList__ GHC.Unicode.$w$cshowsPrec ls_s2j7r s_s2j7s;

GHC.Unicode.$fShowGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Unicode.GeneralCategory
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Unicode.$fShowGeneralCategory_$cshowsPrec
                                    GHC.Unicode.$fShowGeneralCategory_$cshow
                                    GHC.Unicode.$fShowGeneralCategory_$cshowList];

GHC.Unicode.$fEqGeneralCategory_$c==
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2j7t b_s2j7u]
        case
            case a_s2j7t of sat_s2j7v { __DEFAULT -> dataToTag# [sat_s2j7v]; }
        of
        a#_s2j7w
        { __DEFAULT ->
              case
                  case b_s2j7u of sat_s2j7x { __DEFAULT -> dataToTag# [sat_s2j7x]; }
              of
              b#_s2j7y
              { __DEFAULT ->
                    case ==# [a#_s2j7w b#_s2j7y] of sat_s2j7z {
                      __DEFAULT -> tagToEnum# [sat_s2j7z];
                    };
              };
        };

GHC.Unicode.$fEqGeneralCategory_$c/= [InlPrag=INLINE (sat-args=2)]
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_s2j7A eta1_s2j7B]
        case
            case eta_s2j7A of sat_s2j7C {
              __DEFAULT -> dataToTag# [sat_s2j7C];
            }
        of
        a#_s2j7D
        { __DEFAULT ->
              case
                  case eta1_s2j7B of sat_s2j7E {
                    __DEFAULT -> dataToTag# [sat_s2j7E];
                  }
              of
              b#_s2j7F
              { __DEFAULT ->
                    case ==# [a#_s2j7D b#_s2j7F] of {
                      __DEFAULT -> GHC.Types.True [];
                      1# -> GHC.Types.False [];
                    };
              };
        };

GHC.Unicode.$fEqGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Unicode.GeneralCategory
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Unicode.$fEqGeneralCategory_$c==
                                     GHC.Unicode.$fEqGeneralCategory_$c/=];

GHC.Unicode.$fOrdGeneralCategory_$ccompare
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Ordering
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2j7H b_s2j7I]
        case
            case a_s2j7H of sat_s2j7J { __DEFAULT -> dataToTag# [sat_s2j7J]; }
        of
        a#_s2j7K
        { __DEFAULT ->
              case
                  case b_s2j7I of sat_s2j7L { __DEFAULT -> dataToTag# [sat_s2j7L]; }
              of
              b#_s2j7M
              { __DEFAULT ->
                    case <# [a#_s2j7K b#_s2j7M] of {
                      __DEFAULT ->
                          case ==# [a#_s2j7K b#_s2j7M] of {
                            __DEFAULT -> GHC.Types.GT [];
                            1# -> GHC.Types.EQ [];
                          };
                      1# -> GHC.Types.LT [];
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$c<
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2j7P b_s2j7Q]
        case
            case a_s2j7P of sat_s2j7R { __DEFAULT -> dataToTag# [sat_s2j7R]; }
        of
        a#_s2j7S
        { __DEFAULT ->
              case
                  case b_s2j7Q of sat_s2j7T { __DEFAULT -> dataToTag# [sat_s2j7T]; }
              of
              b#_s2j7U
              { __DEFAULT ->
                    case <# [a#_s2j7S b#_s2j7U] of sat_s2j7V {
                      __DEFAULT -> tagToEnum# [sat_s2j7V];
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$c<=
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2j7W b_s2j7X]
        case
            case b_s2j7X of sat_s2j7Y { __DEFAULT -> dataToTag# [sat_s2j7Y]; }
        of
        a#_s2j7Z
        { __DEFAULT ->
              case
                  case a_s2j7W of sat_s2j80 { __DEFAULT -> dataToTag# [sat_s2j80]; }
              of
              b#_s2j81
              { __DEFAULT ->
                    case <# [a#_s2j7Z b#_s2j81] of {
                      __DEFAULT -> GHC.Types.True [];
                      1# -> GHC.Types.False [];
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$cmax
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Unicode.GeneralCategory
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [x_s2j83 y_s2j84]
        case
            case y_s2j84 of sat_s2j85 { __DEFAULT -> dataToTag# [sat_s2j85]; }
        of
        a#_s2j86
        { __DEFAULT ->
              case
                  case x_s2j83 of sat_s2j87 { __DEFAULT -> dataToTag# [sat_s2j87]; }
              of
              b#_s2j88
              { __DEFAULT ->
                    case <# [a#_s2j86 b#_s2j88] of {
                      __DEFAULT -> y_s2j84;
                      1# -> x_s2j83;
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$c>=
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2j8a b_s2j8b]
        case
            case a_s2j8a of sat_s2j8c { __DEFAULT -> dataToTag# [sat_s2j8c]; }
        of
        a#_s2j8d
        { __DEFAULT ->
              case
                  case b_s2j8b of sat_s2j8e { __DEFAULT -> dataToTag# [sat_s2j8e]; }
              of
              b#_s2j8f
              { __DEFAULT ->
                    case <# [a#_s2j8d b#_s2j8f] of {
                      __DEFAULT -> GHC.Types.True [];
                      1# -> GHC.Types.False [];
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$c>
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2j8h b_s2j8i]
        case
            case b_s2j8i of sat_s2j8j { __DEFAULT -> dataToTag# [sat_s2j8j]; }
        of
        a#_s2j8k
        { __DEFAULT ->
              case
                  case a_s2j8h of sat_s2j8l { __DEFAULT -> dataToTag# [sat_s2j8l]; }
              of
              b#_s2j8m
              { __DEFAULT ->
                    case <# [a#_s2j8k b#_s2j8m] of sat_s2j8n {
                      __DEFAULT -> tagToEnum# [sat_s2j8n];
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$cmin
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Unicode.GeneralCategory
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [x_s2j8o y_s2j8p]
        case
            case y_s2j8p of sat_s2j8q { __DEFAULT -> dataToTag# [sat_s2j8q]; }
        of
        a#_s2j8r
        { __DEFAULT ->
              case
                  case x_s2j8o of sat_s2j8s { __DEFAULT -> dataToTag# [sat_s2j8s]; }
              of
              b#_s2j8t
              { __DEFAULT ->
                    case <# [a#_s2j8r b#_s2j8t] of {
                      __DEFAULT -> x_s2j8o;
                      1# -> y_s2j8p;
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord GHC.Unicode.GeneralCategory
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [GHC.Unicode.$fEqGeneralCategory
                                      GHC.Unicode.$fOrdGeneralCategory_$ccompare
                                      GHC.Unicode.$fOrdGeneralCategory_$c<
                                      GHC.Unicode.$fOrdGeneralCategory_$c<=
                                      GHC.Unicode.$fOrdGeneralCategory_$c>
                                      GHC.Unicode.$fOrdGeneralCategory_$c>=
                                      GHC.Unicode.$fOrdGeneralCategory_$cmax
                                      GHC.Unicode.$fOrdGeneralCategory_$cmin];

GHC.Unicode.$fEnumGeneralCategory_$cfromEnum
  :: GHC.Unicode.GeneralCategory -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>m, Unf=OtherCon []] =
    [] \r [a_s2j8v]
        case
            case a_s2j8v of sat_s2j8w { __DEFAULT -> dataToTag# [sat_s2j8w]; }
        of
        a#_s2j8x
        { __DEFAULT -> GHC.Types.I# [a#_s2j8x];
        };

GHC.Unicode.$fIxGeneralCategory_$cunsafeIndex
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>m,
 Unf=OtherCon []] =
    [] \r [c_s2j8y d_s2j8z]
        case c_s2j8y of {
          (,) a_s2j8B [Occ=Once] _ [Occ=Dead] ->
              case
                  case a_s2j8B of sat_s2j8D { __DEFAULT -> dataToTag# [sat_s2j8D]; }
              of
              a#_s2j8E
              { __DEFAULT ->
                    case
                        case d_s2j8z of sat_s2j8F { __DEFAULT -> dataToTag# [sat_s2j8F]; }
                    of
                    d#_s2j8G
                    { __DEFAULT ->
                          case -# [d#_s2j8G a#_s2j8E] of sat_s2j8H {
                            __DEFAULT -> GHC.Types.I# [sat_s2j8H];
                          };
                    };
              };
        };

GHC.Unicode.$fIxGeneralCategory_$cinRange
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s2j8I c_s2j8J]
        case ds_s2j8I of {
          (,) a_s2j8L [Occ=Once] b_s2j8M [Occ=Once] ->
              case
                  case a_s2j8L of sat_s2j8N { __DEFAULT -> dataToTag# [sat_s2j8N]; }
              of
              a#_s2j8O
              { __DEFAULT ->
                    case
                        case b_s2j8M of sat_s2j8P { __DEFAULT -> dataToTag# [sat_s2j8P]; }
                    of
                    b#_s2j8Q
                    { __DEFAULT ->
                          case
                              case c_s2j8J of sat_s2j8R { __DEFAULT -> dataToTag# [sat_s2j8R]; }
                          of
                          c#_s2j8S
                          { __DEFAULT ->
                                case >=# [c#_s2j8S a#_s2j8O] of {
                                  __DEFAULT -> GHC.Types.False [];
                                  1# ->
                                      case <=# [c#_s2j8S b#_s2j8Q] of sat_s2j8U {
                                        __DEFAULT -> tagToEnum# [sat_s2j8U];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.$w$crange [InlPrag=NOUSERINLINE[0]]
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_s2j8V ww1_s2j8W]
        case
            case ww_s2j8V of sat_s2j8X { __DEFAULT -> dataToTag# [sat_s2j8X]; }
        of
        a#_s2j8Y
        { __DEFAULT ->
              case
                  case ww1_s2j8W of sat_s2j8Z {
                    __DEFAULT -> dataToTag# [sat_s2j8Z];
                  }
              of
              b#_s2j90
              { __DEFAULT ->
                    case ># [a#_s2j8Y b#_s2j90] of {
                      __DEFAULT ->
                          let {
                            go_s2j92 [Occ=LoopBreaker]
                              :: GHC.Prim.Int# -> [GHC.Unicode.GeneralCategory]
                            [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
                                sat-only [b#_s2j90 go_s2j92] \r [x_s2j93]
                                    let {
                                      sat_s2j97 [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                      [LclId] =
                                          [b#_s2j90 go_s2j92 x_s2j93] \u []
                                              case ==# [x_s2j93 b#_s2j90] of {
                                                __DEFAULT ->
                                                    case +# [x_s2j93 1#] of sat_s2j96 {
                                                      __DEFAULT -> go_s2j92 sat_s2j96;
                                                    };
                                                1# -> [] [];
                                              }; } in
                                    let {
                                      sat_s2j94 [Occ=Once] :: GHC.Unicode.GeneralCategory
                                      [LclId] =
                                          [x_s2j93] \u [] tagToEnum# [x_s2j93];
                                    } in  : [sat_s2j94 sat_s2j97];
                          } in  go_s2j92 a#_s2j8Y;
                      1# -> [] [];
                    };
              };
        };

GHC.Unicode.$fIxGeneralCategory_$crange [InlPrag=NOUSERINLINE[0]]
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> [GHC.Unicode.GeneralCategory]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(U,U)>,
 Unf=OtherCon []] =
    [] \r [w_s2j98]
        case w_s2j98 of {
          (,) ww1_s2j9a [Occ=Once] ww2_s2j9b [Occ=Once] ->
              GHC.Unicode.$w$crange ww1_s2j9a ww2_s2j9b;
        };

GHC.Unicode.$fIxGeneralCategory_$crangeSize [InlPrag=NOUSERINLINE[0]]
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(U,U)>m,
 Unf=OtherCon []] =
    [] \r [w_s2j9c]
        case w_s2j9c of {
          (,) ww1_s2j9e [Occ=Once] ww2_s2j9f [Occ=Once] ->
              case
                  case ww1_s2j9e of sat_s2j9g {
                    __DEFAULT -> dataToTag# [sat_s2j9g];
                  }
              of
              a#_s2j9h
              { __DEFAULT ->
                    case
                        case ww2_s2j9f of sat_s2j9i {
                          __DEFAULT -> dataToTag# [sat_s2j9i];
                        }
                    of
                    b#_s2j9j
                    { __DEFAULT ->
                          case >=# [b#_s2j9j a#_s2j9h] of {
                            __DEFAULT -> GHC.Unicode.$fShowGeneralCategory1;
                            1# ->
                                case -# [b#_s2j9j a#_s2j9h] of sat_s2j9l {
                                  __DEFAULT ->
                                      case +# [sat_s2j9l 1#] of sat_s2j9m {
                                        __DEFAULT -> GHC.Types.I# [sat_s2j9m];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.$fIxGeneralCategory_$cunsafeRangeSize
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(U,U)>m,
 Unf=OtherCon []] =
    [] \r [b_s2j9n]
        case b_s2j9n of {
          (,) _l_s2j9p [Occ=Once] h_s2j9q [Occ=Once] ->
              case
                  case _l_s2j9p of sat_s2j9r { __DEFAULT -> dataToTag# [sat_s2j9r]; }
              of
              a#_s2j9s
              { __DEFAULT ->
                    case
                        case h_s2j9q of sat_s2j9t { __DEFAULT -> dataToTag# [sat_s2j9t]; }
                    of
                    d#_s2j9u
                    { __DEFAULT ->
                          case -# [d#_s2j9u a#_s2j9s] of sat_s2j9v {
                            __DEFAULT ->
                                case +# [sat_s2j9v 1#] of sat_s2j9w {
                                  __DEFAULT -> GHC.Types.I# [sat_s2j9w];
                                };
                          };
                    };
              };
        };

GHC.Unicode.$fIxGeneralCategory_$cindex [InlPrag=INLINE (sat-args=2)]
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Int
[GblId, Arity=2, Str=<S(SS),1*U(U,U)><S,U>m, Unf=OtherCon []] =
    [] \r [eta_s2j9x eta1_s2j9y]
        case eta_s2j9x of {
          (,) a_s2j9A [Occ=Once] b_s2j9B [Occ=Once] ->
              case
                  case a_s2j9A of sat_s2j9C { __DEFAULT -> dataToTag# [sat_s2j9C]; }
              of
              a#_s2j9D
              { __DEFAULT ->
                    case
                        case b_s2j9B of sat_s2j9E { __DEFAULT -> dataToTag# [sat_s2j9E]; }
                    of
                    b#_s2j9F
                    { __DEFAULT ->
                          case
                              case eta1_s2j9y of sat_s2j9G {
                                __DEFAULT -> dataToTag# [sat_s2j9G];
                              }
                          of
                          c#_s2j9H
                          { __DEFAULT ->
                                case >=# [c#_s2j9H a#_s2j9D] of {
                                  __DEFAULT -> GHC.Arr.hopelessIndexError;
                                  1# ->
                                      case <=# [c#_s2j9H b#_s2j9F] of {
                                        __DEFAULT -> GHC.Arr.hopelessIndexError;
                                        1# ->
                                            case -# [c#_s2j9H a#_s2j9D] of sat_s2j9K {
                                              __DEFAULT -> GHC.Types.I# [sat_s2j9K];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.$fIxGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Arr.Ix GHC.Unicode.GeneralCategory
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Arr.C:Ix! [GHC.Unicode.$fOrdGeneralCategory
                                 GHC.Unicode.$fIxGeneralCategory_$crange
                                 GHC.Unicode.$fIxGeneralCategory_$cindex
                                 GHC.Unicode.$fIxGeneralCategory_$cunsafeIndex
                                 GHC.Unicode.$fIxGeneralCategory_$cinRange
                                 GHC.Unicode.$fIxGeneralCategory_$crangeSize
                                 GHC.Unicode.$fIxGeneralCategory_$cunsafeRangeSize];

GHC.Unicode.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

loc_r2j70 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Unicode.$trModule4;

GHC.Unicode.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Unicode"#;

loc1_r2j71 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Unicode.$trModule2;

loc2_r2j72 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "./GHC/Unicode.hs"#;

loc3_r2j73 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# loc2_r2j72;

loc4_r2j74 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [135#];

loc5_r2j75 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [20#];

loc6_r2j76 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [24#];

$dIP_r2j77 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "error"#;

$dIP1_r2j78 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# $dIP_r2j77;

$dIP2_r2j79 :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [loc_r2j70
                                           loc1_r2j71
                                           loc3_r2j73
                                           loc4_r2j74
                                           loc5_r2j75
                                           loc4_r2j74
                                           loc6_r2j76];

$dIP3_r2j7a :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [$dIP1_r2j78
                                                  $dIP2_r2j79
                                                  GHC.Stack.Types.EmptyCallStack];

lvl60_r2j7b :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    ") is outside of enumeration's range (0,"#;

lvl61_r2j7c :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    ")"#;

lvl62_r2j7d :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl61_r2j7c;

lvl63_r2j7e :: [GHC.Types.Char]
[GblId] =
    [] \u []
        case GHC.Show.$wshowSignedInt 0# 29# lvl62_r2j7d of {
          (#,#) ww5_s2j9M [Occ=Once] ww6_s2j9N [Occ=Once] ->
              : [ww5_s2j9M ww6_s2j9N];
        };

lvl64_r2j7f :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackAppendCString# lvl60_r2j7b lvl63_r2j7e;

lvl65_r2j7g :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "toEnum{GeneralCategory}: tag ("#;

GHC.Unicode.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int# -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<B,U>x, Unf=OtherCon []] =
    [] \r [ww_s2j9O]
        let {
          sat_s2j9S [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [ww_s2j9O] \u []
                  case GHC.Show.$wshowSignedInt 0# ww_s2j9O lvl64_r2j7f of {
                    (#,#) ww5_s2j9Q [Occ=Once] ww6_s2j9R [Occ=Once] ->
                        : [ww5_s2j9Q ww6_s2j9R];
                  };
        } in 
          case
              GHC.CString.unpackAppendCString# lvl65_r2j7g sat_s2j9S
          of
          sat_s2j9T
          { __DEFAULT -> GHC.Err.error $dIP3_r2j7a sat_s2j9T;
          };

GHC.Unicode.$w$ctoEnum [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int# -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s2j9U]
        case >=# [ww_s2j9U 0#] of {
          __DEFAULT -> GHC.Unicode.$wlvl ww_s2j9U;
          1# ->
              case <=# [ww_s2j9U 29#] of {
                __DEFAULT -> GHC.Unicode.$wlvl ww_s2j9U;
                1# -> tagToEnum# [ww_s2j9U];
              };
        };

GHC.Unicode.$fEnumGeneralCategory_$ctoEnum [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s2j9X]
        case w_s2j9X of {
          GHC.Types.I# ww1_s2j9Z [Occ=Once] ->
              GHC.Unicode.$w$ctoEnum ww1_s2j9Z;
        };

GHC.Unicode.$fEnumGeneralCategory_go [Occ=LoopBreaker]
  :: GHC.Prim.Int# -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>m2, Unf=OtherCon []] =
    [] \r [x_s2ja0]
        let {
          sat_s2ja4 [Occ=Once] :: [GHC.Unicode.GeneralCategory]
          [LclId] =
              [x_s2ja0] \u []
                  case x_s2ja0 of wild_s2ja2 {
                    __DEFAULT ->
                        case +# [wild_s2ja2 1#] of sat_s2ja3 {
                          __DEFAULT -> GHC.Unicode.$fEnumGeneralCategory_go sat_s2ja3;
                        };
                    29# -> [] [];
                  }; } in
        let {
          sat_s2ja1 [Occ=Once] :: GHC.Unicode.GeneralCategory
          [LclId] =
              [x_s2ja0] \u [] tagToEnum# [x_s2ja0];
        } in  : [sat_s2ja1 sat_s2ja4];

GHC.Unicode.$fEnumGeneralCategory_$cenumFrom
  :: GHC.Unicode.GeneralCategory -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [a_s2ja5]
        case
            case a_s2ja5 of sat_s2ja6 { __DEFAULT -> dataToTag# [sat_s2ja6]; }
        of
        a#_s2ja7
        { __DEFAULT ->
              case ># [a#_s2ja7 29#] of {
                __DEFAULT -> GHC.Unicode.$fEnumGeneralCategory_go a#_s2ja7;
                1# -> [] [];
              };
        };

GHC.Unicode.$fEnumGeneralCategory_$cenumFromThen
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2ja9 b_s2jaa]
        case
            case a_s2ja9 of sat_s2jab { __DEFAULT -> dataToTag# [sat_s2jab]; }
        of
        a#_s2jac
        { __DEFAULT ->
              case
                  case b_s2jaa of sat_s2jad { __DEFAULT -> dataToTag# [sat_s2jad]; }
              of
              b#_s2jae
              { __DEFAULT ->
                    case ># [a#_s2jac b#_s2jae] of {
                      __DEFAULT ->
                          case >=# [b#_s2jae a#_s2jac] of {
                            __DEFAULT ->
                                case ># [29# b#_s2jae] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2jas [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2jac b#_s2jae] \u []
                                                case
                                                    -# [b#_s2jae a#_s2jac]
                                                of
                                                delta_s2jaj [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [29# delta_s2jaj]
                                                      of
                                                      y'_s2jak [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_dn_s2jal [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2jaj
                                                                            y'_s2jak
                                                                            go_dn_s2jal] \r [x_s2jam]
                                                                      case
                                                                          <# [x_s2jam y'_s2jak]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2jaq [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2jaj
                                                                                   go_dn_s2jal
                                                                                   x_s2jam] \u []
                                                                                      case
                                                                                          +# [x_s2jam
                                                                                              delta_s2jaj]
                                                                                      of
                                                                                      sat_s2jap
                                                                                      { __DEFAULT ->
                                                                                            go_dn_s2jal
                                                                                                sat_s2jap;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2jao [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jam] \u []
                                                                                      tagToEnum# [x_s2jam];
                                                                            } in 
                                                                              : [sat_s2jao
                                                                                 sat_s2jaq];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2jar [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jam] \u []
                                                                                      tagToEnum# [x_s2jam];
                                                                            } in 
                                                                              : [sat_s2jar
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_dn_s2jal b#_s2jae;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2jai [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2jac] \u [] tagToEnum# [a#_s2jac];
                                      } in  : [sat_s2jai sat_s2jas];
                                  1# ->
                                      case ># [29# a#_s2jac] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2jau [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2jac] \u [] tagToEnum# [a#_s2jac];
                                            } in  : [sat_s2jau GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                            1# ->
                                case <# [29# b#_s2jae] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2jaG [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2jac b#_s2jae] \u []
                                                case
                                                    -# [b#_s2jae a#_s2jac]
                                                of
                                                delta_s2jax [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [29# delta_s2jax]
                                                      of
                                                      y'_s2jay [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_up_s2jaz [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2jax
                                                                            y'_s2jay
                                                                            go_up_s2jaz] \r [x_s2jaA]
                                                                      case
                                                                          ># [x_s2jaA y'_s2jay]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2jaE [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2jax
                                                                                   go_up_s2jaz
                                                                                   x_s2jaA] \u []
                                                                                      case
                                                                                          +# [x_s2jaA
                                                                                              delta_s2jax]
                                                                                      of
                                                                                      sat_s2jaD
                                                                                      { __DEFAULT ->
                                                                                            go_up_s2jaz
                                                                                                sat_s2jaD;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2jaC [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jaA] \u []
                                                                                      tagToEnum# [x_s2jaA];
                                                                            } in 
                                                                              : [sat_s2jaC
                                                                                 sat_s2jaE];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2jaF [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jaA] \u []
                                                                                      tagToEnum# [x_s2jaA];
                                                                            } in 
                                                                              : [sat_s2jaF
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_up_s2jaz b#_s2jae;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2jaw [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2jac] \u [] tagToEnum# [a#_s2jac];
                                      } in  : [sat_s2jaw sat_s2jaG];
                                  1# ->
                                      case <# [29# a#_s2jac] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2jaI [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2jac] \u [] tagToEnum# [a#_s2jac];
                                            } in  : [sat_s2jaI GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                          };
                      1# ->
                          case >=# [b#_s2jae a#_s2jac] of {
                            __DEFAULT ->
                                case ># [0# b#_s2jae] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2jaV [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2jac b#_s2jae] \u []
                                                case
                                                    -# [b#_s2jae a#_s2jac]
                                                of
                                                delta_s2jaM [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [0# delta_s2jaM]
                                                      of
                                                      y'_s2jaN [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_dn_s2jaO [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2jaM
                                                                            y'_s2jaN
                                                                            go_dn_s2jaO] \r [x_s2jaP]
                                                                      case
                                                                          <# [x_s2jaP y'_s2jaN]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2jaT [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2jaM
                                                                                   go_dn_s2jaO
                                                                                   x_s2jaP] \u []
                                                                                      case
                                                                                          +# [x_s2jaP
                                                                                              delta_s2jaM]
                                                                                      of
                                                                                      sat_s2jaS
                                                                                      { __DEFAULT ->
                                                                                            go_dn_s2jaO
                                                                                                sat_s2jaS;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2jaR [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jaP] \u []
                                                                                      tagToEnum# [x_s2jaP];
                                                                            } in 
                                                                              : [sat_s2jaR
                                                                                 sat_s2jaT];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2jaU [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jaP] \u []
                                                                                      tagToEnum# [x_s2jaP];
                                                                            } in 
                                                                              : [sat_s2jaU
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_dn_s2jaO b#_s2jae;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2jaL [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2jac] \u [] tagToEnum# [a#_s2jac];
                                      } in  : [sat_s2jaL sat_s2jaV];
                                  1# ->
                                      case ># [0# a#_s2jac] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2jaX [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2jac] \u [] tagToEnum# [a#_s2jac];
                                            } in  : [sat_s2jaX GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                            1# ->
                                case <# [0# b#_s2jae] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2jb9 [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2jac b#_s2jae] \u []
                                                case
                                                    -# [b#_s2jae a#_s2jac]
                                                of
                                                delta_s2jb0 [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [0# delta_s2jb0]
                                                      of
                                                      y'_s2jb1 [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_up_s2jb2 [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2jb0
                                                                            y'_s2jb1
                                                                            go_up_s2jb2] \r [x_s2jb3]
                                                                      case
                                                                          ># [x_s2jb3 y'_s2jb1]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2jb7 [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2jb0
                                                                                   go_up_s2jb2
                                                                                   x_s2jb3] \u []
                                                                                      case
                                                                                          +# [x_s2jb3
                                                                                              delta_s2jb0]
                                                                                      of
                                                                                      sat_s2jb6
                                                                                      { __DEFAULT ->
                                                                                            go_up_s2jb2
                                                                                                sat_s2jb6;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2jb5 [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jb3] \u []
                                                                                      tagToEnum# [x_s2jb3];
                                                                            } in 
                                                                              : [sat_s2jb5
                                                                                 sat_s2jb7];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2jb8 [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jb3] \u []
                                                                                      tagToEnum# [x_s2jb3];
                                                                            } in 
                                                                              : [sat_s2jb8
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_up_s2jb2 b#_s2jae;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2jaZ [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2jac] \u [] tagToEnum# [a#_s2jac];
                                      } in  : [sat_s2jaZ sat_s2jb9];
                                  1# ->
                                      case <# [0# a#_s2jac] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2jbb [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2jac] \u [] tagToEnum# [a#_s2jac];
                                            } in  : [sat_s2jbb GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$trModule4];

GHC.Unicode.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$trModule2];

GHC.Unicode.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Unicode.$trModule3
                                     GHC.Unicode.$trModule1];

GHC.Unicode.$tcGeneralCategory2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GeneralCategory"#;

GHC.Unicode.$tcGeneralCategory1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tcGeneralCategory2];

GHC.Unicode.$tcGeneralCategory :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10145990250269206894##
                                    14660269375011335890##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tcGeneralCategory1
                                    0#
                                    GHC.Types.krep$*];

GHC.Unicode.$tc'ClosePunctuation1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Unicode.$tcGeneralCategory
                                              GHC.Types.[]];

GHC.Unicode.$tc'UppercaseLetter2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'UppercaseLetter"#;

GHC.Unicode.$tc'UppercaseLetter1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'UppercaseLetter2];

GHC.Unicode.$tc'UppercaseLetter :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14647285109492872061##
                                    14425225614845259385##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'UppercaseLetter1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'LowercaseLetter2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'LowercaseLetter"#;

GHC.Unicode.$tc'LowercaseLetter1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'LowercaseLetter2];

GHC.Unicode.$tc'LowercaseLetter :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6843638521722139917##
                                    11845029203120951590##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'LowercaseLetter1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'TitlecaseLetter2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'TitlecaseLetter"#;

GHC.Unicode.$tc'TitlecaseLetter1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'TitlecaseLetter2];

GHC.Unicode.$tc'TitlecaseLetter :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11035134207864173010##
                                    10162510539839760824##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'TitlecaseLetter1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'ModifierLetter2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ModifierLetter"#;

GHC.Unicode.$tc'ModifierLetter1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'ModifierLetter2];

GHC.Unicode.$tc'ModifierLetter :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9531845544999081993##
                                    15142721146394159202##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'ModifierLetter1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'OtherLetter2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OtherLetter"#;

GHC.Unicode.$tc'OtherLetter1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'OtherLetter2];

GHC.Unicode.$tc'OtherLetter :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4852466454551376074##
                                    478150797319163725##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'OtherLetter1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'NonSpacingMark2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'NonSpacingMark"#;

GHC.Unicode.$tc'NonSpacingMark1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'NonSpacingMark2];

GHC.Unicode.$tc'NonSpacingMark :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11798799283128539890##
                                    8595267121230037978##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'NonSpacingMark1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'SpacingCombiningMark2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'SpacingCombiningMark"#;

GHC.Unicode.$tc'SpacingCombiningMark1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'SpacingCombiningMark2];

GHC.Unicode.$tc'SpacingCombiningMark :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [161806050746895686##
                                    6274417789988196957##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'SpacingCombiningMark1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'EnclosingMark2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EnclosingMark"#;

GHC.Unicode.$tc'EnclosingMark1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'EnclosingMark2];

GHC.Unicode.$tc'EnclosingMark :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [18110486507519489617##
                                    1830565827398073667##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'EnclosingMark1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'DecimalNumber2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'DecimalNumber"#;

GHC.Unicode.$tc'DecimalNumber1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'DecimalNumber2];

GHC.Unicode.$tc'DecimalNumber :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7339032513903136575##
                                    4295356444207098462##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'DecimalNumber1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'LetterNumber2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'LetterNumber"#;

GHC.Unicode.$tc'LetterNumber1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'LetterNumber2];

GHC.Unicode.$tc'LetterNumber :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10629256336866531923##
                                    16896950428492761972##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'LetterNumber1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'OtherNumber2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OtherNumber"#;

GHC.Unicode.$tc'OtherNumber1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'OtherNumber2];

GHC.Unicode.$tc'OtherNumber :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10187389108931559810##
                                    2377339607923931442##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'OtherNumber1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'ConnectorPunctuation2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ConnectorPunctuation"#;

GHC.Unicode.$tc'ConnectorPunctuation1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'ConnectorPunctuation2];

GHC.Unicode.$tc'ConnectorPunctuation :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4917643529853318260##
                                    11665519332165151523##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'ConnectorPunctuation1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'DashPunctuation2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'DashPunctuation"#;

GHC.Unicode.$tc'DashPunctuation1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'DashPunctuation2];

GHC.Unicode.$tc'DashPunctuation :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10309144240368445329##
                                    13155144127162508040##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'DashPunctuation1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'OpenPunctuation2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OpenPunctuation"#;

GHC.Unicode.$tc'OpenPunctuation1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'OpenPunctuation2];

GHC.Unicode.$tc'OpenPunctuation :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11156540492509602203##
                                    14579738194966332373##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'OpenPunctuation1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'ClosePunctuation3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ClosePunctuation"#;

GHC.Unicode.$tc'ClosePunctuation2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'ClosePunctuation3];

GHC.Unicode.$tc'ClosePunctuation :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2732552725164352280##
                                    2123618155201944931##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'ClosePunctuation2
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'InitialQuote2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'InitialQuote"#;

GHC.Unicode.$tc'InitialQuote1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'InitialQuote2];

GHC.Unicode.$tc'InitialQuote :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15372309041196331722##
                                    15030215702152843543##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'InitialQuote1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'FinalQuote2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'FinalQuote"#;

GHC.Unicode.$tc'FinalQuote1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'FinalQuote2];

GHC.Unicode.$tc'FinalQuote :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7492133048483711520##
                                    4486297505861009288##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'FinalQuote1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'OtherPunctuation2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OtherPunctuation"#;

GHC.Unicode.$tc'OtherPunctuation1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'OtherPunctuation2];

GHC.Unicode.$tc'OtherPunctuation :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17526727746027692027##
                                    9970963912577062569##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'OtherPunctuation1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'MathSymbol2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'MathSymbol"#;

GHC.Unicode.$tc'MathSymbol1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'MathSymbol2];

GHC.Unicode.$tc'MathSymbol :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4306295684901311676##
                                    14195098983421669147##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'MathSymbol1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'CurrencySymbol2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CurrencySymbol"#;

GHC.Unicode.$tc'CurrencySymbol1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'CurrencySymbol2];

GHC.Unicode.$tc'CurrencySymbol :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [150101909358894799##
                                    4247883766619991310##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'CurrencySymbol1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'ModifierSymbol2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ModifierSymbol"#;

GHC.Unicode.$tc'ModifierSymbol1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'ModifierSymbol2];

GHC.Unicode.$tc'ModifierSymbol :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17930136738185325280##
                                    9680003641195432205##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'ModifierSymbol1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'OtherSymbol2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OtherSymbol"#;

GHC.Unicode.$tc'OtherSymbol1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'OtherSymbol2];

GHC.Unicode.$tc'OtherSymbol :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11720563220218392367##
                                    765393478666748433##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'OtherSymbol1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'Space2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Space"#;

GHC.Unicode.$tc'Space1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'Space2];

GHC.Unicode.$tc'Space :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13451262004661357021##
                                    7623263649021992415##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'Space1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'LineSeparator2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'LineSeparator"#;

GHC.Unicode.$tc'LineSeparator1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'LineSeparator2];

GHC.Unicode.$tc'LineSeparator :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3777504190602031786##
                                    16534792546094157357##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'LineSeparator1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'ParagraphSeparator2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ParagraphSeparator"#;

GHC.Unicode.$tc'ParagraphSeparator1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'ParagraphSeparator2];

GHC.Unicode.$tc'ParagraphSeparator :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [1259977240315406014##
                                    6836752952671088565##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'ParagraphSeparator1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'Control2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Control"#;

GHC.Unicode.$tc'Control1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'Control2];

GHC.Unicode.$tc'Control :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3769799789009110362##
                                    7129109849289868145##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'Control1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'Format2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Format"#;

GHC.Unicode.$tc'Format1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'Format2];

GHC.Unicode.$tc'Format :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15516392160505082493##
                                    8582194312248021938##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'Format1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'Surrogate2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Surrogate"#;

GHC.Unicode.$tc'Surrogate1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'Surrogate2];

GHC.Unicode.$tc'Surrogate :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8891432866311764671##
                                    15154926068870472193##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'Surrogate1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'PrivateUse2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'PrivateUse"#;

GHC.Unicode.$tc'PrivateUse1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'PrivateUse2];

GHC.Unicode.$tc'PrivateUse :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9277443220957795657##
                                    16819524490051355354##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'PrivateUse1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'NotAssigned2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'NotAssigned"#;

GHC.Unicode.$tc'NotAssigned1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'NotAssigned2];

GHC.Unicode.$tc'NotAssigned :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6894305772705953782##
                                    14217837899895516928##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'NotAssigned1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.toLower [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Char
[GblId, Arity=1, Str=<S(S),1*U(U)>m, Unf=OtherCon []] =
    [] \r [w_s2jbc]
        case w_s2jbc of {
          GHC.Types.C# ww1_s2jbe [Occ=Once] ->
              case ord# [ww1_s2jbe] of sat_s2jbg {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2jbg GHC.Prim.realWorld#] of {
                      (#,#) _ [Occ=Dead] ds1_s2jbj ->
                          case int2Word# [ds1_s2jbj] of sat_s2jbk {
                            __DEFAULT ->
                                case leWord# [sat_s2jbk 1114111##] of {
                                  __DEFAULT -> GHC.Char.$wlvl ds1_s2jbj;
                                  1# ->
                                      case chr# [ds1_s2jbj] of sat_s2jbm {
                                        __DEFAULT -> GHC.Types.C# [sat_s2jbm];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.toUpper [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Char
[GblId, Arity=1, Str=<S(S),1*U(U)>m, Unf=OtherCon []] =
    [] \r [w_s2jbn]
        case w_s2jbn of {
          GHC.Types.C# ww1_s2jbp [Occ=Once] ->
              case ord# [ww1_s2jbp] of sat_s2jbr {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2jbr GHC.Prim.realWorld#] of {
                      (#,#) _ [Occ=Dead] ds1_s2jbu ->
                          case int2Word# [ds1_s2jbu] of sat_s2jbv {
                            __DEFAULT ->
                                case leWord# [sat_s2jbv 1114111##] of {
                                  __DEFAULT -> GHC.Char.$wlvl ds1_s2jbu;
                                  1# ->
                                      case chr# [ds1_s2jbu] of sat_s2jbx {
                                        __DEFAULT -> GHC.Types.C# [sat_s2jbx];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.toTitle [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Char
[GblId, Arity=1, Str=<S(S),1*U(U)>m, Unf=OtherCon []] =
    [] \r [w_s2jby]
        case w_s2jby of {
          GHC.Types.C# ww1_s2jbA [Occ=Once] ->
              case ord# [ww1_s2jbA] of sat_s2jbC {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2jbC GHC.Prim.realWorld#] of {
                      (#,#) _ [Occ=Dead] ds1_s2jbF ->
                          case int2Word# [ds1_s2jbF] of sat_s2jbG {
                            __DEFAULT ->
                                case leWord# [sat_s2jbG 1114111##] of {
                                  __DEFAULT -> GHC.Char.$wlvl ds1_s2jbF;
                                  1# ->
                                      case chr# [ds1_s2jbF] of sat_s2jbI {
                                        __DEFAULT -> GHC.Types.C# [sat_s2jbI];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.wgencat :: GHC.Types.Int -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s2jbJ]
        case ds_s2jbJ of {
          GHC.Types.I# ds2_s2jbL [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [ds2_s2jbL GHC.Prim.realWorld#] of {
                (#,#) _ [Occ=Dead] ds4_s2jbP [Occ=Once] ->
                    GHC.Types.I# [ds4_s2jbP];
              };
        };

GHC.Unicode.isAsciiUpper :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jbQ]
        case c_s2jbQ of {
          GHC.Types.C# c1_s2jbS ->
              case geChar# [c1_s2jbS 'A'#] of {
                __DEFAULT -> GHC.Types.False [];
                1# ->
                    case leChar# [c1_s2jbS 'Z'#] of sat_s2jbU {
                      __DEFAULT -> tagToEnum# [sat_s2jbU];
                    };
              };
        };

GHC.Unicode.isAsciiLower :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jbV]
        case c_s2jbV of {
          GHC.Types.C# c1_s2jbX ->
              case geChar# [c1_s2jbX 'a'#] of {
                __DEFAULT -> GHC.Types.False [];
                1# ->
                    case leChar# [c1_s2jbX 'z'#] of sat_s2jbZ {
                      __DEFAULT -> tagToEnum# [sat_s2jbZ];
                    };
              };
        };

GHC.Unicode.isLatin1 :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jc0]
        case c_s2jc0 of {
          GHC.Types.C# c1_s2jc2 [Occ=Once] ->
              case leChar# [c1_s2jc2 '\255'#] of sat_s2jc3 {
                __DEFAULT -> tagToEnum# [sat_s2jc3];
              };
        };

GHC.Unicode.isAscii :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jc4]
        case c_s2jc4 of {
          GHC.Types.C# c1_s2jc6 [Occ=Once] ->
              case ltChar# [c1_s2jc6 '\128'#] of sat_s2jc7 {
                __DEFAULT -> tagToEnum# [sat_s2jc7];
              };
        };

GHC.Unicode.isOctDigit :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jc8]
        case c_s2jc8 of {
          GHC.Types.C# c#_s2jca [Occ=Once] ->
              case ord# [c#_s2jca] of sat_s2jcb {
                __DEFAULT ->
                    case -# [sat_s2jcb 48#] of sat_s2jcc {
                      __DEFAULT ->
                          case int2Word# [sat_s2jcc] of sat_s2jcd {
                            __DEFAULT ->
                                case leWord# [sat_s2jcd 7##] of sat_s2jce {
                                  __DEFAULT -> tagToEnum# [sat_s2jce];
                                };
                          };
                    };
              };
        };

GHC.Unicode.isDigit :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jcf]
        case c_s2jcf of {
          GHC.Types.C# c#_s2jch [Occ=Once] ->
              case ord# [c#_s2jch] of sat_s2jci {
                __DEFAULT ->
                    case -# [sat_s2jci 48#] of sat_s2jcj {
                      __DEFAULT ->
                          case int2Word# [sat_s2jcj] of sat_s2jck {
                            __DEFAULT ->
                                case leWord# [sat_s2jck 9##] of sat_s2jcl {
                                  __DEFAULT -> tagToEnum# [sat_s2jcl];
                                };
                          };
                    };
              };
        };

GHC.Unicode.isHexDigit :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jcm]
        case c_s2jcm of {
          GHC.Types.C# c#_s2jco ->
              case ord# [c#_s2jco] of sat_s2jcp {
                __DEFAULT ->
                    case -# [sat_s2jcp 48#] of sat_s2jcq {
                      __DEFAULT ->
                          case int2Word# [sat_s2jcq] of sat_s2jcr {
                            __DEFAULT ->
                                case leWord# [sat_s2jcr 9##] of {
                                  __DEFAULT ->
                                      case ord# [c#_s2jco] of sat_s2jct {
                                        __DEFAULT ->
                                            case -# [sat_s2jct 65#] of sat_s2jcu {
                                              __DEFAULT ->
                                                  case int2Word# [sat_s2jcu] of sat_s2jcv {
                                                    __DEFAULT ->
                                                        case leWord# [sat_s2jcv 5##] of {
                                                          __DEFAULT ->
                                                              case ord# [c#_s2jco] of sat_s2jcx {
                                                                __DEFAULT ->
                                                                    case
                                                                        -# [sat_s2jcx 97#]
                                                                    of
                                                                    sat_s2jcy
                                                                    { __DEFAULT ->
                                                                          case
                                                                              int2Word# [sat_s2jcy]
                                                                          of
                                                                          sat_s2jcz
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    leWord# [sat_s2jcz
                                                                                             5##]
                                                                                of
                                                                                sat_s2jcA
                                                                                { __DEFAULT ->
                                                                                      tagToEnum# [sat_s2jcA];
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                          1# -> GHC.Types.True [];
                                                        };
                                                  };
                                            };
                                      };
                                  1# -> GHC.Types.True [];
                                };
                          };
                    };
              };
        };

GHC.Unicode.isLower :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jcB]
        case c_s2jcB of {
          GHC.Types.C# c#_s2jcD [Occ=Once] ->
              case ord# [c#_s2jcD] of sat_s2jcF {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2jcF GHC.Prim.realWorld#] of {
                      (#,#) _ [Occ=Dead] ds1_s2jcI [Occ=Once!] ->
                          case ds1_s2jcI of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

lvl66_r2j7h :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "succ{GeneralCategory}: tried to take `succ' of last tag in enumeration"#;

GHC.Unicode.$fEnumGeneralCategory2 :: GHC.Unicode.GeneralCategory
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl66_r2j7h of sat_s2jcK {
          __DEFAULT -> GHC.Err.error $dIP3_r2j7a sat_s2jcK;
        };

GHC.Unicode.$fEnumGeneralCategory_$csucc
  :: GHC.Unicode.GeneralCategory -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [a_s2jcL]
        case a_s2jcL of x1_s2jcM {
          __DEFAULT ->
              case dataToTag# [x1_s2jcM] of a#_s2jcN {
                __DEFAULT ->
                    case +# [a#_s2jcN 1#] of sat_s2jcO {
                      __DEFAULT -> tagToEnum# [sat_s2jcO];
                    };
              };
          GHC.Unicode.NotAssigned -> GHC.Unicode.$fEnumGeneralCategory2;
        };

lvl67_r2j7i :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "pred{GeneralCategory}: tried to take `pred' of first tag in enumeration"#;

GHC.Unicode.$fEnumGeneralCategory1 :: GHC.Unicode.GeneralCategory
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl67_r2j7i of sat_s2jcP {
          __DEFAULT -> GHC.Err.error $dIP3_r2j7a sat_s2jcP;
        };

GHC.Unicode.$fEnumGeneralCategory_$cpred
  :: GHC.Unicode.GeneralCategory -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [a_s2jcQ]
        case a_s2jcQ of x1_s2jcR {
          __DEFAULT ->
              case dataToTag# [x1_s2jcR] of a#_s2jcS {
                __DEFAULT ->
                    case +# [a#_s2jcS -1#] of sat_s2jcT {
                      __DEFAULT -> tagToEnum# [sat_s2jcT];
                    };
              };
          GHC.Unicode.UppercaseLetter -> GHC.Unicode.$fEnumGeneralCategory1;
        };

GHC.Unicode.$fEnumGeneralCategory_$cenumFromTo
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [x_s2jcU y_s2jcV]
        case
            case x_s2jcU of sat_s2jcW { __DEFAULT -> dataToTag# [sat_s2jcW]; }
        of
        a#_s2jcX
        { __DEFAULT ->
              case
                  case y_s2jcV of sat_s2jcY { __DEFAULT -> dataToTag# [sat_s2jcY]; }
              of
              a#1_s2jcZ
              { __DEFAULT ->
                    case ># [a#_s2jcX a#1_s2jcZ] of {
                      __DEFAULT ->
                          let {
                            go_s2jd1 [Occ=LoopBreaker]
                              :: GHC.Prim.Int# -> [GHC.Unicode.GeneralCategory]
                            [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
                                sat-only [a#1_s2jcZ go_s2jd1] \r [x1_s2jd2]
                                    let {
                                      sat_s2jd8 [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                      [LclId] =
                                          [a#1_s2jcZ go_s2jd1 x1_s2jd2] \u []
                                              case ==# [x1_s2jd2 a#1_s2jcZ] of {
                                                __DEFAULT ->
                                                    case +# [x1_s2jd2 1#] of sat_s2jd7 {
                                                      __DEFAULT -> go_s2jd1 sat_s2jd7;
                                                    };
                                                1# -> [] [];
                                              }; } in
                                    let {
                                      sat_s2jd5 [Occ=Once] :: GHC.Unicode.GeneralCategory
                                      [LclId] =
                                          [x1_s2jd2] \u []
                                              case >=# [x1_s2jd2 0#] of {
                                                __DEFAULT -> GHC.Unicode.$wlvl x1_s2jd2;
                                                1# ->
                                                    case <=# [x1_s2jd2 29#] of {
                                                      __DEFAULT -> GHC.Unicode.$wlvl x1_s2jd2;
                                                      1# -> tagToEnum# [x1_s2jd2];
                                                    };
                                              };
                                    } in  : [sat_s2jd5 sat_s2jd8];
                          } in  go_s2jd1 a#_s2jcX;
                      1# -> [] [];
                    };
              };
        };

GHC.Unicode.$fEnumGeneralCategory_$cenumFromThenTo
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory
     -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=3, Str=<S,U><S,U><S,U>, Unf=OtherCon []] =
    [] \r [x1_s2jd9 x2_s2jda y_s2jdb]
        case
            case x1_s2jd9 of sat_s2jdc { __DEFAULT -> dataToTag# [sat_s2jdc]; }
        of
        a#_s2jdd
        { __DEFAULT ->
              case
                  case x2_s2jda of sat_s2jde { __DEFAULT -> dataToTag# [sat_s2jde]; }
              of
              a#1_s2jdf
              { __DEFAULT ->
                    case
                        case y_s2jdb of sat_s2jdg { __DEFAULT -> dataToTag# [sat_s2jdg]; }
                    of
                    a#2_s2jdh
                    { __DEFAULT ->
                          case >=# [a#1_s2jdf a#_s2jdd] of {
                            __DEFAULT ->
                                case ># [a#2_s2jdh a#1_s2jdf] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2jdA [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2jdd a#1_s2jdf a#2_s2jdh] \u []
                                                case
                                                    -# [a#1_s2jdf a#_s2jdd]
                                                of
                                                delta_s2jdn [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [a#2_s2jdh delta_s2jdn]
                                                      of
                                                      y'_s2jdo [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_dn_s2jdp [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2jdn
                                                                            y'_s2jdo
                                                                            go_dn_s2jdp] \r [x_s2jdq]
                                                                      case
                                                                          <# [x_s2jdq y'_s2jdo]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2jdw [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2jdn
                                                                                   go_dn_s2jdp
                                                                                   x_s2jdq] \u []
                                                                                      case
                                                                                          +# [x_s2jdq
                                                                                              delta_s2jdn]
                                                                                      of
                                                                                      sat_s2jdv
                                                                                      { __DEFAULT ->
                                                                                            go_dn_s2jdp
                                                                                                sat_s2jdv;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2jdu [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jdq] \u []
                                                                                      case
                                                                                          >=# [x_s2jdq
                                                                                               0#]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            GHC.Unicode.$wlvl
                                                                                                x_s2jdq;
                                                                                        1# ->
                                                                                            case
                                                                                                <=# [x_s2jdq
                                                                                                     29#]
                                                                                            of
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Unicode.$wlvl
                                                                                                      x_s2jdq;
                                                                                              1# ->
                                                                                                  tagToEnum# [x_s2jdq];
                                                                                            };
                                                                                      };
                                                                            } in 
                                                                              : [sat_s2jdu
                                                                                 sat_s2jdw];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2jdz [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jdq] \u []
                                                                                      case
                                                                                          >=# [x_s2jdq
                                                                                               0#]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            GHC.Unicode.$wlvl
                                                                                                x_s2jdq;
                                                                                        1# ->
                                                                                            case
                                                                                                <=# [x_s2jdq
                                                                                                     29#]
                                                                                            of
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Unicode.$wlvl
                                                                                                      x_s2jdq;
                                                                                              1# ->
                                                                                                  tagToEnum# [x_s2jdq];
                                                                                            };
                                                                                      };
                                                                            } in 
                                                                              : [sat_s2jdz
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_dn_s2jdp a#1_s2jdf;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2jdm [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2jdd] \u []
                                                case >=# [a#_s2jdd 0#] of {
                                                  __DEFAULT -> GHC.Unicode.$wlvl a#_s2jdd;
                                                  1# ->
                                                      case <=# [a#_s2jdd 29#] of {
                                                        __DEFAULT -> GHC.Unicode.$wlvl a#_s2jdd;
                                                        1# -> tagToEnum# [a#_s2jdd];
                                                      };
                                                };
                                      } in  : [sat_s2jdm sat_s2jdA];
                                  1# ->
                                      case ># [a#2_s2jdh a#_s2jdd] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2jdE [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2jdd] \u []
                                                      case >=# [a#_s2jdd 0#] of {
                                                        __DEFAULT -> GHC.Unicode.$wlvl a#_s2jdd;
                                                        1# ->
                                                            case <=# [a#_s2jdd 29#] of {
                                                              __DEFAULT ->
                                                                  GHC.Unicode.$wlvl a#_s2jdd;
                                                              1# -> tagToEnum# [a#_s2jdd];
                                                            };
                                                      };
                                            } in  : [sat_s2jdE GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                            1# ->
                                case <# [a#2_s2jdh a#1_s2jdf] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2jdW [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2jdd a#1_s2jdf a#2_s2jdh] \u []
                                                case
                                                    -# [a#1_s2jdf a#_s2jdd]
                                                of
                                                delta_s2jdJ [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [a#2_s2jdh delta_s2jdJ]
                                                      of
                                                      y'_s2jdK [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_up_s2jdL [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2jdJ
                                                                            y'_s2jdK
                                                                            go_up_s2jdL] \r [x_s2jdM]
                                                                      case
                                                                          ># [x_s2jdM y'_s2jdK]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2jdS [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2jdJ
                                                                                   go_up_s2jdL
                                                                                   x_s2jdM] \u []
                                                                                      case
                                                                                          +# [x_s2jdM
                                                                                              delta_s2jdJ]
                                                                                      of
                                                                                      sat_s2jdR
                                                                                      { __DEFAULT ->
                                                                                            go_up_s2jdL
                                                                                                sat_s2jdR;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2jdQ [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jdM] \u []
                                                                                      case
                                                                                          >=# [x_s2jdM
                                                                                               0#]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            GHC.Unicode.$wlvl
                                                                                                x_s2jdM;
                                                                                        1# ->
                                                                                            case
                                                                                                <=# [x_s2jdM
                                                                                                     29#]
                                                                                            of
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Unicode.$wlvl
                                                                                                      x_s2jdM;
                                                                                              1# ->
                                                                                                  tagToEnum# [x_s2jdM];
                                                                                            };
                                                                                      };
                                                                            } in 
                                                                              : [sat_s2jdQ
                                                                                 sat_s2jdS];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2jdV [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jdM] \u []
                                                                                      case
                                                                                          >=# [x_s2jdM
                                                                                               0#]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            GHC.Unicode.$wlvl
                                                                                                x_s2jdM;
                                                                                        1# ->
                                                                                            case
                                                                                                <=# [x_s2jdM
                                                                                                     29#]
                                                                                            of
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Unicode.$wlvl
                                                                                                      x_s2jdM;
                                                                                              1# ->
                                                                                                  tagToEnum# [x_s2jdM];
                                                                                            };
                                                                                      };
                                                                            } in 
                                                                              : [sat_s2jdV
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_up_s2jdL a#1_s2jdf;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2jdI [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2jdd] \u []
                                                case >=# [a#_s2jdd 0#] of {
                                                  __DEFAULT -> GHC.Unicode.$wlvl a#_s2jdd;
                                                  1# ->
                                                      case <=# [a#_s2jdd 29#] of {
                                                        __DEFAULT -> GHC.Unicode.$wlvl a#_s2jdd;
                                                        1# -> tagToEnum# [a#_s2jdd];
                                                      };
                                                };
                                      } in  : [sat_s2jdI sat_s2jdW];
                                  1# ->
                                      case <# [a#2_s2jdh a#_s2jdd] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2je0 [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2jdd] \u []
                                                      case >=# [a#_s2jdd 0#] of {
                                                        __DEFAULT -> GHC.Unicode.$wlvl a#_s2jdd;
                                                        1# ->
                                                            case <=# [a#_s2jdd 29#] of {
                                                              __DEFAULT ->
                                                                  GHC.Unicode.$wlvl a#_s2jdd;
                                                              1# -> tagToEnum# [a#_s2jdd];
                                                            };
                                                      };
                                            } in  : [sat_s2je0 GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.$fEnumGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum GHC.Unicode.GeneralCategory
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Unicode.$fEnumGeneralCategory_$csucc
                                    GHC.Unicode.$fEnumGeneralCategory_$cpred
                                    GHC.Unicode.$fEnumGeneralCategory_$ctoEnum
                                    GHC.Unicode.$fEnumGeneralCategory_$cfromEnum
                                    GHC.Unicode.$fEnumGeneralCategory_$cenumFrom
                                    GHC.Unicode.$fEnumGeneralCategory_$cenumFromThen
                                    GHC.Unicode.$fEnumGeneralCategory_$cenumFromTo
                                    GHC.Unicode.$fEnumGeneralCategory_$cenumFromThenTo];

GHC.Unicode.$wgeneralCategory [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s2je1]
        case ord# [ww_s2je1] of sat_s2je3 {
          __DEFAULT ->
              case __pkg_ccall base-4.11.0.0 [sat_s2je3 GHC.Prim.realWorld#] of {
                (#,#) _ [Occ=Dead] ds1_s2je6 ->
                    case >=# [ds1_s2je6 0#] of {
                      __DEFAULT -> GHC.Unicode.$wlvl ds1_s2je6;
                      1# ->
                          case <=# [ds1_s2je6 29#] of {
                            __DEFAULT -> GHC.Unicode.$wlvl ds1_s2je6;
                            1# -> tagToEnum# [ds1_s2je6];
                          };
                    };
              };
        };

GHC.Unicode.generalCategory [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s2je9]
        case w_s2je9 of {
          GHC.Types.C# ww1_s2jeb [Occ=Once] ->
              GHC.Unicode.$wgeneralCategory ww1_s2jeb;
        };

GHC.Unicode.$wisPunctuation [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Types.Bool
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s2jec]
        case ord# [ww_s2jec] of sat_s2jee {
          __DEFAULT ->
              case __pkg_ccall base-4.11.0.0 [sat_s2jee GHC.Prim.realWorld#] of {
                (#,#) _ [Occ=Dead] ds1_s2jeh ->
                    case >=# [ds1_s2jeh 0#] of {
                      __DEFAULT -> GHC.Unicode.$wlvl ds1_s2jeh;
                      1# ->
                          case <=# [ds1_s2jeh 29#] of {
                            __DEFAULT -> GHC.Unicode.$wlvl ds1_s2jeh;
                            1# ->
                                case ds1_s2jeh of {
                                  __DEFAULT -> GHC.Types.False [];
                                  11# -> GHC.Types.True [];
                                  12# -> GHC.Types.True [];
                                  13# -> GHC.Types.True [];
                                  14# -> GHC.Types.True [];
                                  15# -> GHC.Types.True [];
                                  16# -> GHC.Types.True [];
                                  17# -> GHC.Types.True [];
                                };
                          };
                    };
              };
        };

GHC.Unicode.isPunctuation [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s2jen]
        case w_s2jen of {
          GHC.Types.C# ww1_s2jep [Occ=Once] ->
              GHC.Unicode.$wisPunctuation ww1_s2jep;
        };

GHC.Unicode.$wisSymbol [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Types.Bool
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s2jeq]
        case ord# [ww_s2jeq] of sat_s2jes {
          __DEFAULT ->
              case __pkg_ccall base-4.11.0.0 [sat_s2jes GHC.Prim.realWorld#] of {
                (#,#) _ [Occ=Dead] ds1_s2jev ->
                    case >=# [ds1_s2jev 0#] of {
                      __DEFAULT -> GHC.Unicode.$wlvl ds1_s2jev;
                      1# ->
                          case <=# [ds1_s2jev 29#] of {
                            __DEFAULT -> GHC.Unicode.$wlvl ds1_s2jev;
                            1# ->
                                case ds1_s2jev of {
                                  __DEFAULT -> GHC.Types.False [];
                                  18# -> GHC.Types.True [];
                                  19# -> GHC.Types.True [];
                                  20# -> GHC.Types.True [];
                                  21# -> GHC.Types.True [];
                                };
                          };
                    };
              };
        };

GHC.Unicode.isSymbol [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s2jeB]
        case w_s2jeB of {
          GHC.Types.C# ww1_s2jeD [Occ=Once] ->
              GHC.Unicode.$wisSymbol ww1_s2jeD;
        };

GHC.Unicode.isUpper :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jeE]
        case c_s2jeE of {
          GHC.Types.C# c#_s2jeG [Occ=Once] ->
              case ord# [c#_s2jeG] of sat_s2jeI {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2jeI GHC.Prim.realWorld#] of {
                      (#,#) _ [Occ=Dead] ds1_s2jeL [Occ=Once!] ->
                          case ds1_s2jeL of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

GHC.Unicode.isPrint :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jeN]
        case c_s2jeN of {
          GHC.Types.C# c#_s2jeP [Occ=Once] ->
              case ord# [c#_s2jeP] of sat_s2jeR {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2jeR GHC.Prim.realWorld#] of {
                      (#,#) _ [Occ=Dead] ds1_s2jeU [Occ=Once!] ->
                          case ds1_s2jeU of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

GHC.Unicode.isControl :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jeW]
        case c_s2jeW of {
          GHC.Types.C# c#_s2jeY [Occ=Once] ->
              case ord# [c#_s2jeY] of sat_s2jf0 {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2jf0 GHC.Prim.realWorld#] of {
                      (#,#) _ [Occ=Dead] ds1_s2jf3 [Occ=Once!] ->
                          case ds1_s2jf3 of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

GHC.Unicode.isAlphaNum :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jf5]
        case c_s2jf5 of {
          GHC.Types.C# c#_s2jf7 [Occ=Once] ->
              case ord# [c#_s2jf7] of sat_s2jf9 {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2jf9 GHC.Prim.realWorld#] of {
                      (#,#) _ [Occ=Dead] ds1_s2jfc [Occ=Once!] ->
                          case ds1_s2jfc of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

GHC.Unicode.isAlpha :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jfe]
        case c_s2jfe of {
          GHC.Types.C# c#_s2jfg [Occ=Once] ->
              case ord# [c#_s2jfg] of sat_s2jfi {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2jfi GHC.Prim.realWorld#] of {
                      (#,#) _ [Occ=Dead] ds1_s2jfl [Occ=Once!] ->
                          case ds1_s2jfl of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

GHC.Unicode.$wisSpace [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Types.Bool
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s2jfn]
        case ord# [ww_s2jfn] of sat_s2jfp {
          __DEFAULT ->
              case int2Word# [sat_s2jfp] of x_s2jfo [Dmd=<S,U>] {
                __DEFAULT ->
                    case leWord# [x_s2jfo 887##] of {
                      __DEFAULT ->
                          case ord# [ww_s2jfn] of sat_s2jfs {
                            __DEFAULT ->
                                case __pkg_ccall base-4.11.0.0 [sat_s2jfs GHC.Prim.realWorld#] of {
                                  (#,#) _ [Occ=Dead] ds1_s2jfv [Occ=Once!] ->
                                      case ds1_s2jfv of {
                                        __DEFAULT -> GHC.Types.True [];
                                        0# -> GHC.Types.False [];
                                      };
                                };
                          };
                      1# ->
                          case x_s2jfo of wild_s2jfx {
                            __DEFAULT ->
                                case minusWord# [wild_s2jfx 9##] of sat_s2jfy {
                                  __DEFAULT ->
                                      case leWord# [sat_s2jfy 4##] of {
                                        __DEFAULT ->
                                            case wild_s2jfx of {
                                              __DEFAULT -> GHC.Types.False [];
                                              160## -> GHC.Types.True [];
                                            };
                                        1# -> GHC.Types.True [];
                                      };
                                };
                            32## -> GHC.Types.True [];
                          };
                    };
              };
        };

GHC.Unicode.isSpace [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [w_s2jfB]
        case w_s2jfB of {
          GHC.Types.C# ww1_s2jfD [Occ=Once] ->
              GHC.Unicode.$wisSpace ww1_s2jfD;
        };

GHC.Unicode.UppercaseLetter :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.UppercaseLetter! [];

GHC.Unicode.LowercaseLetter :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.LowercaseLetter! [];

GHC.Unicode.TitlecaseLetter :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.TitlecaseLetter! [];

GHC.Unicode.ModifierLetter :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.ModifierLetter! [];

GHC.Unicode.OtherLetter :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.OtherLetter! [];

GHC.Unicode.NonSpacingMark :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.NonSpacingMark! [];

GHC.Unicode.SpacingCombiningMark :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.SpacingCombiningMark! [];

GHC.Unicode.EnclosingMark :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.EnclosingMark! [];

GHC.Unicode.DecimalNumber :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.DecimalNumber! [];

GHC.Unicode.LetterNumber :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.LetterNumber! [];

GHC.Unicode.OtherNumber :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.OtherNumber! [];

GHC.Unicode.ConnectorPunctuation :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.ConnectorPunctuation! [];

GHC.Unicode.DashPunctuation :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.DashPunctuation! [];

GHC.Unicode.OpenPunctuation :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.OpenPunctuation! [];

GHC.Unicode.ClosePunctuation :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.ClosePunctuation! [];

GHC.Unicode.InitialQuote :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.InitialQuote! [];

GHC.Unicode.FinalQuote :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.FinalQuote! [];

GHC.Unicode.OtherPunctuation :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.OtherPunctuation! [];

GHC.Unicode.MathSymbol :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.MathSymbol! [];

GHC.Unicode.CurrencySymbol :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.CurrencySymbol! [];

GHC.Unicode.ModifierSymbol :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.ModifierSymbol! [];

GHC.Unicode.OtherSymbol :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.OtherSymbol! [];

GHC.Unicode.Space :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.Space! [];

GHC.Unicode.LineSeparator :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.LineSeparator! [];

GHC.Unicode.ParagraphSeparator :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.ParagraphSeparator! [];

GHC.Unicode.Control :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.Control! [];

GHC.Unicode.Format :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.Format! [];

GHC.Unicode.Surrogate :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.Surrogate! [];

GHC.Unicode.PrivateUse :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.PrivateUse! [];

GHC.Unicode.NotAssigned :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.NotAssigned! [];


==================== STG syntax: ====================
2018-03-16 15:57:01.542677892 UTC

GHC.Unicode.$fBoundedGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded GHC.Unicode.GeneralCategory
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Unicode.UppercaseLetter
                                       GHC.Unicode.NotAssigned];

lvl_r2j62 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "UppercaseLetter"#;

lvl1_r2j63 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_r2j62;

lvl2_r2j64 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "LowercaseLetter"#;

lvl3_r2j65 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl2_r2j64;

lvl4_r2j66 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "TitlecaseLetter"#;

lvl5_r2j67 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl4_r2j66;

lvl6_r2j68 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ModifierLetter"#;

lvl7_r2j69 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl6_r2j68;

lvl8_r2j6a :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OtherLetter"#;

lvl9_r2j6b :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl8_r2j6a;

lvl10_r2j6c :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "NonSpacingMark"#;

lvl11_r2j6d :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl10_r2j6c;

lvl12_r2j6e :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "SpacingCombiningMark"#;

lvl13_r2j6f :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl12_r2j6e;

lvl14_r2j6g :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EnclosingMark"#;

lvl15_r2j6h :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl14_r2j6g;

lvl16_r2j6i :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "DecimalNumber"#;

lvl17_r2j6j :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl16_r2j6i;

lvl18_r2j6k :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "LetterNumber"#;

lvl19_r2j6l :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl18_r2j6k;

lvl20_r2j6m :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OtherNumber"#;

lvl21_r2j6n :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl20_r2j6m;

lvl22_r2j6o :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ConnectorPunctuation"#;

lvl23_r2j6p :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl22_r2j6o;

lvl24_r2j6q :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "DashPunctuation"#;

lvl25_r2j6r :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl24_r2j6q;

lvl26_r2j6s :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OpenPunctuation"#;

lvl27_r2j6t :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl26_r2j6s;

lvl28_r2j6u :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ClosePunctuation"#;

lvl29_r2j6v :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl28_r2j6u;

lvl30_r2j6w :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "InitialQuote"#;

lvl31_r2j6x :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl30_r2j6w;

lvl32_r2j6y :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "FinalQuote"#;

lvl33_r2j6z :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl32_r2j6y;

lvl34_r2j6A :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OtherPunctuation"#;

lvl35_r2j6B :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl34_r2j6A;

lvl36_r2j6C :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "MathSymbol"#;

lvl37_r2j6D :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl36_r2j6C;

lvl38_r2j6E :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CurrencySymbol"#;

lvl39_r2j6F :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl38_r2j6E;

lvl40_r2j6G :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ModifierSymbol"#;

lvl41_r2j6H :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl40_r2j6G;

lvl42_r2j6I :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OtherSymbol"#;

lvl43_r2j6J :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl42_r2j6I;

lvl44_r2j6K :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Space"#;

lvl45_r2j6L :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl44_r2j6K;

lvl46_r2j6M :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "LineSeparator"#;

lvl47_r2j6N :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl46_r2j6M;

lvl48_r2j6O :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ParagraphSeparator"#;

lvl49_r2j6P :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl48_r2j6O;

lvl50_r2j6Q :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Control"#;

lvl51_r2j6R :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl50_r2j6Q;

lvl52_r2j6S :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Format"#;

lvl53_r2j6T :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl52_r2j6S;

lvl54_r2j6U :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Surrogate"#;

lvl55_r2j6V :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl54_r2j6U;

lvl56_r2j6W :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "PrivateUse"#;

lvl57_r2j6X :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl56_r2j6W;

lvl58_r2j6Y :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "NotAssigned"#;

lvl59_r2j6Z :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl58_r2j6Y;

GHC.Unicode.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Unicode.GeneralCategory
     -> GHC.Base.String -> GHC.Base.String
[GblId, Arity=2, Str=<S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [w_s2j7k w1_s2j7l]
        case w_s2j7k of {
          GHC.Unicode.UppercaseLetter -> GHC.Base.++ lvl1_r2j63 w1_s2j7l;
          GHC.Unicode.LowercaseLetter -> GHC.Base.++ lvl3_r2j65 w1_s2j7l;
          GHC.Unicode.TitlecaseLetter -> GHC.Base.++ lvl5_r2j67 w1_s2j7l;
          GHC.Unicode.ModifierLetter -> GHC.Base.++ lvl7_r2j69 w1_s2j7l;
          GHC.Unicode.OtherLetter -> GHC.Base.++ lvl9_r2j6b w1_s2j7l;
          GHC.Unicode.NonSpacingMark -> GHC.Base.++ lvl11_r2j6d w1_s2j7l;
          GHC.Unicode.SpacingCombiningMark ->
              GHC.Base.++ lvl13_r2j6f w1_s2j7l;
          GHC.Unicode.EnclosingMark -> GHC.Base.++ lvl15_r2j6h w1_s2j7l;
          GHC.Unicode.DecimalNumber -> GHC.Base.++ lvl17_r2j6j w1_s2j7l;
          GHC.Unicode.LetterNumber -> GHC.Base.++ lvl19_r2j6l w1_s2j7l;
          GHC.Unicode.OtherNumber -> GHC.Base.++ lvl21_r2j6n w1_s2j7l;
          GHC.Unicode.ConnectorPunctuation ->
              GHC.Base.++ lvl23_r2j6p w1_s2j7l;
          GHC.Unicode.DashPunctuation -> GHC.Base.++ lvl25_r2j6r w1_s2j7l;
          GHC.Unicode.OpenPunctuation -> GHC.Base.++ lvl27_r2j6t w1_s2j7l;
          GHC.Unicode.ClosePunctuation -> GHC.Base.++ lvl29_r2j6v w1_s2j7l;
          GHC.Unicode.InitialQuote -> GHC.Base.++ lvl31_r2j6x w1_s2j7l;
          GHC.Unicode.FinalQuote -> GHC.Base.++ lvl33_r2j6z w1_s2j7l;
          GHC.Unicode.OtherPunctuation -> GHC.Base.++ lvl35_r2j6B w1_s2j7l;
          GHC.Unicode.MathSymbol -> GHC.Base.++ lvl37_r2j6D w1_s2j7l;
          GHC.Unicode.CurrencySymbol -> GHC.Base.++ lvl39_r2j6F w1_s2j7l;
          GHC.Unicode.ModifierSymbol -> GHC.Base.++ lvl41_r2j6H w1_s2j7l;
          GHC.Unicode.OtherSymbol -> GHC.Base.++ lvl43_r2j6J w1_s2j7l;
          GHC.Unicode.Space -> GHC.Base.++ lvl45_r2j6L w1_s2j7l;
          GHC.Unicode.LineSeparator -> GHC.Base.++ lvl47_r2j6N w1_s2j7l;
          GHC.Unicode.ParagraphSeparator -> GHC.Base.++ lvl49_r2j6P w1_s2j7l;
          GHC.Unicode.Control -> GHC.Base.++ lvl51_r2j6R w1_s2j7l;
          GHC.Unicode.Format -> GHC.Base.++ lvl53_r2j6T w1_s2j7l;
          GHC.Unicode.Surrogate -> GHC.Base.++ lvl55_r2j6V w1_s2j7l;
          GHC.Unicode.PrivateUse -> GHC.Base.++ lvl57_r2j6X w1_s2j7l;
          GHC.Unicode.NotAssigned -> GHC.Base.++ lvl59_r2j6Z w1_s2j7l;
        };

GHC.Unicode.$fShowGeneralCategory_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Unicode.GeneralCategory -> GHC.Show.ShowS
[GblId, Arity=3, Str=<L,A><S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [w_s2j7n w1_s2j7o w2_s2j7p]
        GHC.Unicode.$w$cshowsPrec w1_s2j7o w2_s2j7p;

GHC.Unicode.$fShowGeneralCategory1 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

GHC.Unicode.$fShowGeneralCategory_$cshow
  :: GHC.Unicode.GeneralCategory -> GHC.Base.String
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [x_s2j7q] GHC.Unicode.$w$cshowsPrec x_s2j7q GHC.Types.[];

GHC.Unicode.$fShowGeneralCategory_$cshowList
  :: [GHC.Unicode.GeneralCategory] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_s2j7r s_s2j7s]
        GHC.Show.showList__ GHC.Unicode.$w$cshowsPrec ls_s2j7r s_s2j7s;

GHC.Unicode.$fShowGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Unicode.GeneralCategory
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Unicode.$fShowGeneralCategory_$cshowsPrec
                                    GHC.Unicode.$fShowGeneralCategory_$cshow
                                    GHC.Unicode.$fShowGeneralCategory_$cshowList];

GHC.Unicode.$fEqGeneralCategory_$c==
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2j7t b_s2j7u]
        case
            case a_s2j7t of sat_s2j7v { __DEFAULT -> dataToTag# [sat_s2j7v]; }
        of
        a#_s2j7w
        { __DEFAULT ->
              case
                  case b_s2j7u of sat_s2j7x { __DEFAULT -> dataToTag# [sat_s2j7x]; }
              of
              b#_s2j7y
              { __DEFAULT ->
                    case ==# [a#_s2j7w b#_s2j7y] of sat_s2j7z {
                      __DEFAULT -> tagToEnum# [sat_s2j7z];
                    };
              };
        };

GHC.Unicode.$fEqGeneralCategory_$c/= [InlPrag=INLINE (sat-args=2)]
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_s2j7A eta1_s2j7B]
        case
            case eta_s2j7A of sat_s2j7C {
              __DEFAULT -> dataToTag# [sat_s2j7C];
            }
        of
        a#_s2j7D
        { __DEFAULT ->
              case
                  case eta1_s2j7B of sat_s2j7E {
                    __DEFAULT -> dataToTag# [sat_s2j7E];
                  }
              of
              b#_s2j7F
              { __DEFAULT ->
                    case ==# [a#_s2j7D b#_s2j7F] of {
                      __DEFAULT -> GHC.Types.True [];
                      1# -> GHC.Types.False [];
                    };
              };
        };

GHC.Unicode.$fEqGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Unicode.GeneralCategory
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Unicode.$fEqGeneralCategory_$c==
                                     GHC.Unicode.$fEqGeneralCategory_$c/=];

GHC.Unicode.$fOrdGeneralCategory_$ccompare
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Ordering
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2j7H b_s2j7I]
        case
            case a_s2j7H of sat_s2j7J { __DEFAULT -> dataToTag# [sat_s2j7J]; }
        of
        a#_s2j7K
        { __DEFAULT ->
              case
                  case b_s2j7I of sat_s2j7L { __DEFAULT -> dataToTag# [sat_s2j7L]; }
              of
              b#_s2j7M
              { __DEFAULT ->
                    case <# [a#_s2j7K b#_s2j7M] of {
                      __DEFAULT ->
                          case ==# [a#_s2j7K b#_s2j7M] of {
                            __DEFAULT -> GHC.Types.GT [];
                            1# -> GHC.Types.EQ [];
                          };
                      1# -> GHC.Types.LT [];
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$c<
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2j7P b_s2j7Q]
        case
            case a_s2j7P of sat_s2j7R { __DEFAULT -> dataToTag# [sat_s2j7R]; }
        of
        a#_s2j7S
        { __DEFAULT ->
              case
                  case b_s2j7Q of sat_s2j7T { __DEFAULT -> dataToTag# [sat_s2j7T]; }
              of
              b#_s2j7U
              { __DEFAULT ->
                    case <# [a#_s2j7S b#_s2j7U] of sat_s2j7V {
                      __DEFAULT -> tagToEnum# [sat_s2j7V];
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$c<=
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2j7W b_s2j7X]
        case
            case b_s2j7X of sat_s2j7Y { __DEFAULT -> dataToTag# [sat_s2j7Y]; }
        of
        a#_s2j7Z
        { __DEFAULT ->
              case
                  case a_s2j7W of sat_s2j80 { __DEFAULT -> dataToTag# [sat_s2j80]; }
              of
              b#_s2j81
              { __DEFAULT ->
                    case <# [a#_s2j7Z b#_s2j81] of {
                      __DEFAULT -> GHC.Types.True [];
                      1# -> GHC.Types.False [];
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$cmax
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Unicode.GeneralCategory
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [x_s2j83 y_s2j84]
        case
            case y_s2j84 of sat_s2j85 { __DEFAULT -> dataToTag# [sat_s2j85]; }
        of
        a#_s2j86
        { __DEFAULT ->
              case
                  case x_s2j83 of sat_s2j87 { __DEFAULT -> dataToTag# [sat_s2j87]; }
              of
              b#_s2j88
              { __DEFAULT ->
                    case <# [a#_s2j86 b#_s2j88] of {
                      __DEFAULT -> y_s2j84;
                      1# -> x_s2j83;
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$c>=
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2j8a b_s2j8b]
        case
            case a_s2j8a of sat_s2j8c { __DEFAULT -> dataToTag# [sat_s2j8c]; }
        of
        a#_s2j8d
        { __DEFAULT ->
              case
                  case b_s2j8b of sat_s2j8e { __DEFAULT -> dataToTag# [sat_s2j8e]; }
              of
              b#_s2j8f
              { __DEFAULT ->
                    case <# [a#_s2j8d b#_s2j8f] of {
                      __DEFAULT -> GHC.Types.True [];
                      1# -> GHC.Types.False [];
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$c>
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2j8h b_s2j8i]
        case
            case b_s2j8i of sat_s2j8j { __DEFAULT -> dataToTag# [sat_s2j8j]; }
        of
        a#_s2j8k
        { __DEFAULT ->
              case
                  case a_s2j8h of sat_s2j8l { __DEFAULT -> dataToTag# [sat_s2j8l]; }
              of
              b#_s2j8m
              { __DEFAULT ->
                    case <# [a#_s2j8k b#_s2j8m] of sat_s2j8n {
                      __DEFAULT -> tagToEnum# [sat_s2j8n];
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$cmin
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Unicode.GeneralCategory
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [x_s2j8o y_s2j8p]
        case
            case y_s2j8p of sat_s2j8q { __DEFAULT -> dataToTag# [sat_s2j8q]; }
        of
        a#_s2j8r
        { __DEFAULT ->
              case
                  case x_s2j8o of sat_s2j8s { __DEFAULT -> dataToTag# [sat_s2j8s]; }
              of
              b#_s2j8t
              { __DEFAULT ->
                    case <# [a#_s2j8r b#_s2j8t] of {
                      __DEFAULT -> x_s2j8o;
                      1# -> y_s2j8p;
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord GHC.Unicode.GeneralCategory
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [GHC.Unicode.$fEqGeneralCategory
                                      GHC.Unicode.$fOrdGeneralCategory_$ccompare
                                      GHC.Unicode.$fOrdGeneralCategory_$c<
                                      GHC.Unicode.$fOrdGeneralCategory_$c<=
                                      GHC.Unicode.$fOrdGeneralCategory_$c>
                                      GHC.Unicode.$fOrdGeneralCategory_$c>=
                                      GHC.Unicode.$fOrdGeneralCategory_$cmax
                                      GHC.Unicode.$fOrdGeneralCategory_$cmin];

GHC.Unicode.$fEnumGeneralCategory_$cfromEnum
  :: GHC.Unicode.GeneralCategory -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>m, Unf=OtherCon []] =
    [] \r [a_s2j8v]
        case
            case a_s2j8v of sat_s2j8w { __DEFAULT -> dataToTag# [sat_s2j8w]; }
        of
        a#_s2j8x
        { __DEFAULT -> GHC.Types.I# [a#_s2j8x];
        };

GHC.Unicode.$fIxGeneralCategory_$cunsafeIndex
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>m,
 Unf=OtherCon []] =
    [] \r [c_s2j8y d_s2j8z]
        case c_s2j8y of {
          (,) a_s2j8B [Occ=Once] _ [Occ=Dead] ->
              case
                  case a_s2j8B of sat_s2j8D { __DEFAULT -> dataToTag# [sat_s2j8D]; }
              of
              a#_s2j8E
              { __DEFAULT ->
                    case
                        case d_s2j8z of sat_s2j8F { __DEFAULT -> dataToTag# [sat_s2j8F]; }
                    of
                    d#_s2j8G
                    { __DEFAULT ->
                          case -# [d#_s2j8G a#_s2j8E] of sat_s2j8H {
                            __DEFAULT -> GHC.Types.I# [sat_s2j8H];
                          };
                    };
              };
        };

GHC.Unicode.$fIxGeneralCategory_$cinRange
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s2j8I c_s2j8J]
        case ds_s2j8I of {
          (,) a_s2j8L [Occ=Once] b_s2j8M [Occ=Once] ->
              case
                  case a_s2j8L of sat_s2j8N { __DEFAULT -> dataToTag# [sat_s2j8N]; }
              of
              a#_s2j8O
              { __DEFAULT ->
                    case
                        case b_s2j8M of sat_s2j8P { __DEFAULT -> dataToTag# [sat_s2j8P]; }
                    of
                    b#_s2j8Q
                    { __DEFAULT ->
                          case
                              case c_s2j8J of sat_s2j8R { __DEFAULT -> dataToTag# [sat_s2j8R]; }
                          of
                          c#_s2j8S
                          { __DEFAULT ->
                                case >=# [c#_s2j8S a#_s2j8O] of {
                                  __DEFAULT -> GHC.Types.False [];
                                  1# ->
                                      case <=# [c#_s2j8S b#_s2j8Q] of sat_s2j8U {
                                        __DEFAULT -> tagToEnum# [sat_s2j8U];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.$w$crange [InlPrag=NOUSERINLINE[0]]
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_s2j8V ww1_s2j8W]
        case
            case ww_s2j8V of sat_s2j8X { __DEFAULT -> dataToTag# [sat_s2j8X]; }
        of
        a#_s2j8Y
        { __DEFAULT ->
              case
                  case ww1_s2j8W of sat_s2j8Z {
                    __DEFAULT -> dataToTag# [sat_s2j8Z];
                  }
              of
              b#_s2j90
              { __DEFAULT ->
                    case ># [a#_s2j8Y b#_s2j90] of {
                      __DEFAULT ->
                          let {
                            go_s2j92 [Occ=LoopBreaker]
                              :: GHC.Prim.Int# -> [GHC.Unicode.GeneralCategory]
                            [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
                                sat-only [b#_s2j90 go_s2j92] \r [x_s2j93]
                                    let {
                                      sat_s2j97 [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                      [LclId] =
                                          [b#_s2j90 go_s2j92 x_s2j93] \u []
                                              case ==# [x_s2j93 b#_s2j90] of {
                                                __DEFAULT ->
                                                    case +# [x_s2j93 1#] of sat_s2j96 {
                                                      __DEFAULT -> go_s2j92 sat_s2j96;
                                                    };
                                                1# -> [] [];
                                              }; } in
                                    let {
                                      sat_s2j94 [Occ=Once] :: GHC.Unicode.GeneralCategory
                                      [LclId] =
                                          [x_s2j93] \u [] tagToEnum# [x_s2j93];
                                    } in  : [sat_s2j94 sat_s2j97];
                          } in  go_s2j92 a#_s2j8Y;
                      1# -> [] [];
                    };
              };
        };

GHC.Unicode.$fIxGeneralCategory_$crange [InlPrag=NOUSERINLINE[0]]
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> [GHC.Unicode.GeneralCategory]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(U,U)>,
 Unf=OtherCon []] =
    [] \r [w_s2j98]
        case w_s2j98 of {
          (,) ww1_s2j9a [Occ=Once] ww2_s2j9b [Occ=Once] ->
              GHC.Unicode.$w$crange ww1_s2j9a ww2_s2j9b;
        };

GHC.Unicode.$fIxGeneralCategory_$crangeSize [InlPrag=NOUSERINLINE[0]]
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(U,U)>m,
 Unf=OtherCon []] =
    [] \r [w_s2j9c]
        case w_s2j9c of {
          (,) ww1_s2j9e [Occ=Once] ww2_s2j9f [Occ=Once] ->
              case
                  case ww1_s2j9e of sat_s2j9g {
                    __DEFAULT -> dataToTag# [sat_s2j9g];
                  }
              of
              a#_s2j9h
              { __DEFAULT ->
                    case
                        case ww2_s2j9f of sat_s2j9i {
                          __DEFAULT -> dataToTag# [sat_s2j9i];
                        }
                    of
                    b#_s2j9j
                    { __DEFAULT ->
                          case >=# [b#_s2j9j a#_s2j9h] of {
                            __DEFAULT -> GHC.Unicode.$fShowGeneralCategory1;
                            1# ->
                                case -# [b#_s2j9j a#_s2j9h] of sat_s2j9l {
                                  __DEFAULT ->
                                      case +# [sat_s2j9l 1#] of sat_s2j9m {
                                        __DEFAULT -> GHC.Types.I# [sat_s2j9m];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.$fIxGeneralCategory_$cunsafeRangeSize
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(U,U)>m,
 Unf=OtherCon []] =
    [] \r [b_s2j9n]
        case b_s2j9n of {
          (,) _l_s2j9p [Occ=Once] h_s2j9q [Occ=Once] ->
              case
                  case _l_s2j9p of sat_s2j9r { __DEFAULT -> dataToTag# [sat_s2j9r]; }
              of
              a#_s2j9s
              { __DEFAULT ->
                    case
                        case h_s2j9q of sat_s2j9t { __DEFAULT -> dataToTag# [sat_s2j9t]; }
                    of
                    d#_s2j9u
                    { __DEFAULT ->
                          case -# [d#_s2j9u a#_s2j9s] of sat_s2j9v {
                            __DEFAULT ->
                                case +# [sat_s2j9v 1#] of sat_s2j9w {
                                  __DEFAULT -> GHC.Types.I# [sat_s2j9w];
                                };
                          };
                    };
              };
        };

GHC.Unicode.$fIxGeneralCategory_$cindex [InlPrag=INLINE (sat-args=2)]
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Int
[GblId, Arity=2, Str=<S(SS),1*U(U,U)><S,U>m, Unf=OtherCon []] =
    [] \r [eta_s2j9x eta1_s2j9y]
        case eta_s2j9x of {
          (,) a_s2j9A [Occ=Once] b_s2j9B [Occ=Once] ->
              case
                  case a_s2j9A of sat_s2j9C { __DEFAULT -> dataToTag# [sat_s2j9C]; }
              of
              a#_s2j9D
              { __DEFAULT ->
                    case
                        case b_s2j9B of sat_s2j9E { __DEFAULT -> dataToTag# [sat_s2j9E]; }
                    of
                    b#_s2j9F
                    { __DEFAULT ->
                          case
                              case eta1_s2j9y of sat_s2j9G {
                                __DEFAULT -> dataToTag# [sat_s2j9G];
                              }
                          of
                          c#_s2j9H
                          { __DEFAULT ->
                                case >=# [c#_s2j9H a#_s2j9D] of {
                                  __DEFAULT -> GHC.Arr.hopelessIndexError;
                                  1# ->
                                      case <=# [c#_s2j9H b#_s2j9F] of {
                                        __DEFAULT -> GHC.Arr.hopelessIndexError;
                                        1# ->
                                            case -# [c#_s2j9H a#_s2j9D] of sat_s2j9K {
                                              __DEFAULT -> GHC.Types.I# [sat_s2j9K];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.$fIxGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Arr.Ix GHC.Unicode.GeneralCategory
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Arr.C:Ix! [GHC.Unicode.$fOrdGeneralCategory
                                 GHC.Unicode.$fIxGeneralCategory_$crange
                                 GHC.Unicode.$fIxGeneralCategory_$cindex
                                 GHC.Unicode.$fIxGeneralCategory_$cunsafeIndex
                                 GHC.Unicode.$fIxGeneralCategory_$cinRange
                                 GHC.Unicode.$fIxGeneralCategory_$crangeSize
                                 GHC.Unicode.$fIxGeneralCategory_$cunsafeRangeSize];

GHC.Unicode.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

loc_r2j70 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Unicode.$trModule4;

GHC.Unicode.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Unicode"#;

loc1_r2j71 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Unicode.$trModule2;

loc2_r2j72 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "./GHC/Unicode.hs"#;

loc3_r2j73 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# loc2_r2j72;

loc4_r2j74 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [135#];

loc5_r2j75 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [20#];

loc6_r2j76 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [24#];

$dIP_r2j77 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "error"#;

$dIP1_r2j78 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# $dIP_r2j77;

$dIP2_r2j79 :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [loc_r2j70
                                           loc1_r2j71
                                           loc3_r2j73
                                           loc4_r2j74
                                           loc5_r2j75
                                           loc4_r2j74
                                           loc6_r2j76];

$dIP3_r2j7a :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [$dIP1_r2j78
                                                  $dIP2_r2j79
                                                  GHC.Stack.Types.EmptyCallStack];

lvl60_r2j7b :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    ") is outside of enumeration's range (0,"#;

lvl61_r2j7c :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    ")"#;

lvl62_r2j7d :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl61_r2j7c;

lvl63_r2j7e :: [GHC.Types.Char]
[GblId] =
    [] \u []
        case GHC.Show.$wshowSignedInt 0# 29# lvl62_r2j7d of {
          (#,#) ww5_s2j9M [Occ=Once] ww6_s2j9N [Occ=Once] ->
              : [ww5_s2j9M ww6_s2j9N];
        };

lvl64_r2j7f :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackAppendCString# lvl60_r2j7b lvl63_r2j7e;

lvl65_r2j7g :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "toEnum{GeneralCategory}: tag ("#;

GHC.Unicode.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int# -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<B,U>x, Unf=OtherCon []] =
    [] \r [ww_s2j9O]
        let {
          sat_s2j9S [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [ww_s2j9O] \u []
                  case GHC.Show.$wshowSignedInt 0# ww_s2j9O lvl64_r2j7f of {
                    (#,#) ww5_s2j9Q [Occ=Once] ww6_s2j9R [Occ=Once] ->
                        : [ww5_s2j9Q ww6_s2j9R];
                  };
        } in 
          case
              GHC.CString.unpackAppendCString# lvl65_r2j7g sat_s2j9S
          of
          sat_s2j9T
          { __DEFAULT -> GHC.Err.error $dIP3_r2j7a sat_s2j9T;
          };

GHC.Unicode.$w$ctoEnum [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int# -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s2j9U]
        case >=# [ww_s2j9U 0#] of {
          __DEFAULT -> GHC.Unicode.$wlvl ww_s2j9U;
          1# ->
              case <=# [ww_s2j9U 29#] of {
                __DEFAULT -> GHC.Unicode.$wlvl ww_s2j9U;
                1# -> tagToEnum# [ww_s2j9U];
              };
        };

GHC.Unicode.$fEnumGeneralCategory_$ctoEnum [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s2j9X]
        case w_s2j9X of {
          GHC.Types.I# ww1_s2j9Z [Occ=Once] ->
              GHC.Unicode.$w$ctoEnum ww1_s2j9Z;
        };

GHC.Unicode.$fEnumGeneralCategory_go [Occ=LoopBreaker]
  :: GHC.Prim.Int# -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>m2, Unf=OtherCon []] =
    [] \r [x_s2ja0]
        let {
          sat_s2ja4 [Occ=Once] :: [GHC.Unicode.GeneralCategory]
          [LclId] =
              [x_s2ja0] \u []
                  case x_s2ja0 of wild_s2ja2 {
                    __DEFAULT ->
                        case +# [wild_s2ja2 1#] of sat_s2ja3 {
                          __DEFAULT -> GHC.Unicode.$fEnumGeneralCategory_go sat_s2ja3;
                        };
                    29# -> [] [];
                  }; } in
        let {
          sat_s2ja1 [Occ=Once] :: GHC.Unicode.GeneralCategory
          [LclId] =
              [x_s2ja0] \u [] tagToEnum# [x_s2ja0];
        } in  : [sat_s2ja1 sat_s2ja4];

GHC.Unicode.$fEnumGeneralCategory_$cenumFrom
  :: GHC.Unicode.GeneralCategory -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [a_s2ja5]
        case
            case a_s2ja5 of sat_s2ja6 { __DEFAULT -> dataToTag# [sat_s2ja6]; }
        of
        a#_s2ja7
        { __DEFAULT ->
              case ># [a#_s2ja7 29#] of {
                __DEFAULT -> GHC.Unicode.$fEnumGeneralCategory_go a#_s2ja7;
                1# -> [] [];
              };
        };

GHC.Unicode.$fEnumGeneralCategory_$cenumFromThen
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2ja9 b_s2jaa]
        case
            case a_s2ja9 of sat_s2jab { __DEFAULT -> dataToTag# [sat_s2jab]; }
        of
        a#_s2jac
        { __DEFAULT ->
              case
                  case b_s2jaa of sat_s2jad { __DEFAULT -> dataToTag# [sat_s2jad]; }
              of
              b#_s2jae
              { __DEFAULT ->
                    case ># [a#_s2jac b#_s2jae] of {
                      __DEFAULT ->
                          case >=# [b#_s2jae a#_s2jac] of {
                            __DEFAULT ->
                                case ># [29# b#_s2jae] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2jas [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2jac b#_s2jae] \u []
                                                case
                                                    -# [b#_s2jae a#_s2jac]
                                                of
                                                delta_s2jaj [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [29# delta_s2jaj]
                                                      of
                                                      y'_s2jak [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_dn_s2jal [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2jaj
                                                                            y'_s2jak
                                                                            go_dn_s2jal] \r [x_s2jam]
                                                                      case
                                                                          <# [x_s2jam y'_s2jak]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2jaq [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2jaj
                                                                                   go_dn_s2jal
                                                                                   x_s2jam] \u []
                                                                                      case
                                                                                          +# [x_s2jam
                                                                                              delta_s2jaj]
                                                                                      of
                                                                                      sat_s2jap
                                                                                      { __DEFAULT ->
                                                                                            go_dn_s2jal
                                                                                                sat_s2jap;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2jao [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jam] \u []
                                                                                      tagToEnum# [x_s2jam];
                                                                            } in 
                                                                              : [sat_s2jao
                                                                                 sat_s2jaq];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2jar [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jam] \u []
                                                                                      tagToEnum# [x_s2jam];
                                                                            } in 
                                                                              : [sat_s2jar
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_dn_s2jal b#_s2jae;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2jai [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2jac] \u [] tagToEnum# [a#_s2jac];
                                      } in  : [sat_s2jai sat_s2jas];
                                  1# ->
                                      case ># [29# a#_s2jac] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2jau [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2jac] \u [] tagToEnum# [a#_s2jac];
                                            } in  : [sat_s2jau GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                            1# ->
                                case <# [29# b#_s2jae] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2jaG [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2jac b#_s2jae] \u []
                                                case
                                                    -# [b#_s2jae a#_s2jac]
                                                of
                                                delta_s2jax [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [29# delta_s2jax]
                                                      of
                                                      y'_s2jay [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_up_s2jaz [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2jax
                                                                            y'_s2jay
                                                                            go_up_s2jaz] \r [x_s2jaA]
                                                                      case
                                                                          ># [x_s2jaA y'_s2jay]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2jaE [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2jax
                                                                                   go_up_s2jaz
                                                                                   x_s2jaA] \u []
                                                                                      case
                                                                                          +# [x_s2jaA
                                                                                              delta_s2jax]
                                                                                      of
                                                                                      sat_s2jaD
                                                                                      { __DEFAULT ->
                                                                                            go_up_s2jaz
                                                                                                sat_s2jaD;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2jaC [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jaA] \u []
                                                                                      tagToEnum# [x_s2jaA];
                                                                            } in 
                                                                              : [sat_s2jaC
                                                                                 sat_s2jaE];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2jaF [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jaA] \u []
                                                                                      tagToEnum# [x_s2jaA];
                                                                            } in 
                                                                              : [sat_s2jaF
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_up_s2jaz b#_s2jae;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2jaw [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2jac] \u [] tagToEnum# [a#_s2jac];
                                      } in  : [sat_s2jaw sat_s2jaG];
                                  1# ->
                                      case <# [29# a#_s2jac] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2jaI [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2jac] \u [] tagToEnum# [a#_s2jac];
                                            } in  : [sat_s2jaI GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                          };
                      1# ->
                          case >=# [b#_s2jae a#_s2jac] of {
                            __DEFAULT ->
                                case ># [0# b#_s2jae] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2jaV [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2jac b#_s2jae] \u []
                                                case
                                                    -# [b#_s2jae a#_s2jac]
                                                of
                                                delta_s2jaM [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [0# delta_s2jaM]
                                                      of
                                                      y'_s2jaN [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_dn_s2jaO [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2jaM
                                                                            y'_s2jaN
                                                                            go_dn_s2jaO] \r [x_s2jaP]
                                                                      case
                                                                          <# [x_s2jaP y'_s2jaN]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2jaT [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2jaM
                                                                                   go_dn_s2jaO
                                                                                   x_s2jaP] \u []
                                                                                      case
                                                                                          +# [x_s2jaP
                                                                                              delta_s2jaM]
                                                                                      of
                                                                                      sat_s2jaS
                                                                                      { __DEFAULT ->
                                                                                            go_dn_s2jaO
                                                                                                sat_s2jaS;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2jaR [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jaP] \u []
                                                                                      tagToEnum# [x_s2jaP];
                                                                            } in 
                                                                              : [sat_s2jaR
                                                                                 sat_s2jaT];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2jaU [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jaP] \u []
                                                                                      tagToEnum# [x_s2jaP];
                                                                            } in 
                                                                              : [sat_s2jaU
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_dn_s2jaO b#_s2jae;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2jaL [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2jac] \u [] tagToEnum# [a#_s2jac];
                                      } in  : [sat_s2jaL sat_s2jaV];
                                  1# ->
                                      case ># [0# a#_s2jac] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2jaX [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2jac] \u [] tagToEnum# [a#_s2jac];
                                            } in  : [sat_s2jaX GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                            1# ->
                                case <# [0# b#_s2jae] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2jb9 [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2jac b#_s2jae] \u []
                                                case
                                                    -# [b#_s2jae a#_s2jac]
                                                of
                                                delta_s2jb0 [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [0# delta_s2jb0]
                                                      of
                                                      y'_s2jb1 [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_up_s2jb2 [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2jb0
                                                                            y'_s2jb1
                                                                            go_up_s2jb2] \r [x_s2jb3]
                                                                      case
                                                                          ># [x_s2jb3 y'_s2jb1]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2jb7 [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2jb0
                                                                                   go_up_s2jb2
                                                                                   x_s2jb3] \u []
                                                                                      case
                                                                                          +# [x_s2jb3
                                                                                              delta_s2jb0]
                                                                                      of
                                                                                      sat_s2jb6
                                                                                      { __DEFAULT ->
                                                                                            go_up_s2jb2
                                                                                                sat_s2jb6;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2jb5 [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jb3] \u []
                                                                                      tagToEnum# [x_s2jb3];
                                                                            } in 
                                                                              : [sat_s2jb5
                                                                                 sat_s2jb7];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2jb8 [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jb3] \u []
                                                                                      tagToEnum# [x_s2jb3];
                                                                            } in 
                                                                              : [sat_s2jb8
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_up_s2jb2 b#_s2jae;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2jaZ [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2jac] \u [] tagToEnum# [a#_s2jac];
                                      } in  : [sat_s2jaZ sat_s2jb9];
                                  1# ->
                                      case <# [0# a#_s2jac] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2jbb [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2jac] \u [] tagToEnum# [a#_s2jac];
                                            } in  : [sat_s2jbb GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$trModule4];

GHC.Unicode.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$trModule2];

GHC.Unicode.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Unicode.$trModule3
                                     GHC.Unicode.$trModule1];

GHC.Unicode.$tcGeneralCategory2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GeneralCategory"#;

GHC.Unicode.$tcGeneralCategory1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tcGeneralCategory2];

GHC.Unicode.$tcGeneralCategory :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10145990250269206894##
                                    14660269375011335890##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tcGeneralCategory1
                                    0#
                                    GHC.Types.krep$*];

GHC.Unicode.$tc'ClosePunctuation1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Unicode.$tcGeneralCategory
                                              GHC.Types.[]];

GHC.Unicode.$tc'UppercaseLetter2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'UppercaseLetter"#;

GHC.Unicode.$tc'UppercaseLetter1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'UppercaseLetter2];

GHC.Unicode.$tc'UppercaseLetter :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14647285109492872061##
                                    14425225614845259385##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'UppercaseLetter1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'LowercaseLetter2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'LowercaseLetter"#;

GHC.Unicode.$tc'LowercaseLetter1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'LowercaseLetter2];

GHC.Unicode.$tc'LowercaseLetter :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6843638521722139917##
                                    11845029203120951590##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'LowercaseLetter1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'TitlecaseLetter2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'TitlecaseLetter"#;

GHC.Unicode.$tc'TitlecaseLetter1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'TitlecaseLetter2];

GHC.Unicode.$tc'TitlecaseLetter :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11035134207864173010##
                                    10162510539839760824##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'TitlecaseLetter1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'ModifierLetter2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ModifierLetter"#;

GHC.Unicode.$tc'ModifierLetter1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'ModifierLetter2];

GHC.Unicode.$tc'ModifierLetter :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9531845544999081993##
                                    15142721146394159202##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'ModifierLetter1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'OtherLetter2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OtherLetter"#;

GHC.Unicode.$tc'OtherLetter1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'OtherLetter2];

GHC.Unicode.$tc'OtherLetter :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4852466454551376074##
                                    478150797319163725##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'OtherLetter1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'NonSpacingMark2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'NonSpacingMark"#;

GHC.Unicode.$tc'NonSpacingMark1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'NonSpacingMark2];

GHC.Unicode.$tc'NonSpacingMark :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11798799283128539890##
                                    8595267121230037978##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'NonSpacingMark1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'SpacingCombiningMark2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'SpacingCombiningMark"#;

GHC.Unicode.$tc'SpacingCombiningMark1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'SpacingCombiningMark2];

GHC.Unicode.$tc'SpacingCombiningMark :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [161806050746895686##
                                    6274417789988196957##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'SpacingCombiningMark1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'EnclosingMark2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EnclosingMark"#;

GHC.Unicode.$tc'EnclosingMark1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'EnclosingMark2];

GHC.Unicode.$tc'EnclosingMark :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [18110486507519489617##
                                    1830565827398073667##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'EnclosingMark1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'DecimalNumber2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'DecimalNumber"#;

GHC.Unicode.$tc'DecimalNumber1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'DecimalNumber2];

GHC.Unicode.$tc'DecimalNumber :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7339032513903136575##
                                    4295356444207098462##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'DecimalNumber1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'LetterNumber2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'LetterNumber"#;

GHC.Unicode.$tc'LetterNumber1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'LetterNumber2];

GHC.Unicode.$tc'LetterNumber :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10629256336866531923##
                                    16896950428492761972##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'LetterNumber1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'OtherNumber2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OtherNumber"#;

GHC.Unicode.$tc'OtherNumber1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'OtherNumber2];

GHC.Unicode.$tc'OtherNumber :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10187389108931559810##
                                    2377339607923931442##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'OtherNumber1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'ConnectorPunctuation2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ConnectorPunctuation"#;

GHC.Unicode.$tc'ConnectorPunctuation1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'ConnectorPunctuation2];

GHC.Unicode.$tc'ConnectorPunctuation :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4917643529853318260##
                                    11665519332165151523##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'ConnectorPunctuation1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'DashPunctuation2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'DashPunctuation"#;

GHC.Unicode.$tc'DashPunctuation1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'DashPunctuation2];

GHC.Unicode.$tc'DashPunctuation :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10309144240368445329##
                                    13155144127162508040##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'DashPunctuation1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'OpenPunctuation2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OpenPunctuation"#;

GHC.Unicode.$tc'OpenPunctuation1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'OpenPunctuation2];

GHC.Unicode.$tc'OpenPunctuation :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11156540492509602203##
                                    14579738194966332373##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'OpenPunctuation1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'ClosePunctuation3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ClosePunctuation"#;

GHC.Unicode.$tc'ClosePunctuation2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'ClosePunctuation3];

GHC.Unicode.$tc'ClosePunctuation :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2732552725164352280##
                                    2123618155201944931##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'ClosePunctuation2
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'InitialQuote2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'InitialQuote"#;

GHC.Unicode.$tc'InitialQuote1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'InitialQuote2];

GHC.Unicode.$tc'InitialQuote :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15372309041196331722##
                                    15030215702152843543##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'InitialQuote1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'FinalQuote2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'FinalQuote"#;

GHC.Unicode.$tc'FinalQuote1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'FinalQuote2];

GHC.Unicode.$tc'FinalQuote :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7492133048483711520##
                                    4486297505861009288##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'FinalQuote1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'OtherPunctuation2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OtherPunctuation"#;

GHC.Unicode.$tc'OtherPunctuation1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'OtherPunctuation2];

GHC.Unicode.$tc'OtherPunctuation :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17526727746027692027##
                                    9970963912577062569##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'OtherPunctuation1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'MathSymbol2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'MathSymbol"#;

GHC.Unicode.$tc'MathSymbol1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'MathSymbol2];

GHC.Unicode.$tc'MathSymbol :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4306295684901311676##
                                    14195098983421669147##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'MathSymbol1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'CurrencySymbol2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CurrencySymbol"#;

GHC.Unicode.$tc'CurrencySymbol1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'CurrencySymbol2];

GHC.Unicode.$tc'CurrencySymbol :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [150101909358894799##
                                    4247883766619991310##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'CurrencySymbol1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'ModifierSymbol2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ModifierSymbol"#;

GHC.Unicode.$tc'ModifierSymbol1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'ModifierSymbol2];

GHC.Unicode.$tc'ModifierSymbol :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17930136738185325280##
                                    9680003641195432205##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'ModifierSymbol1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'OtherSymbol2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OtherSymbol"#;

GHC.Unicode.$tc'OtherSymbol1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'OtherSymbol2];

GHC.Unicode.$tc'OtherSymbol :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11720563220218392367##
                                    765393478666748433##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'OtherSymbol1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'Space2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Space"#;

GHC.Unicode.$tc'Space1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'Space2];

GHC.Unicode.$tc'Space :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13451262004661357021##
                                    7623263649021992415##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'Space1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'LineSeparator2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'LineSeparator"#;

GHC.Unicode.$tc'LineSeparator1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'LineSeparator2];

GHC.Unicode.$tc'LineSeparator :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3777504190602031786##
                                    16534792546094157357##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'LineSeparator1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'ParagraphSeparator2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ParagraphSeparator"#;

GHC.Unicode.$tc'ParagraphSeparator1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'ParagraphSeparator2];

GHC.Unicode.$tc'ParagraphSeparator :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [1259977240315406014##
                                    6836752952671088565##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'ParagraphSeparator1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'Control2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Control"#;

GHC.Unicode.$tc'Control1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'Control2];

GHC.Unicode.$tc'Control :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3769799789009110362##
                                    7129109849289868145##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'Control1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'Format2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Format"#;

GHC.Unicode.$tc'Format1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'Format2];

GHC.Unicode.$tc'Format :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15516392160505082493##
                                    8582194312248021938##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'Format1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'Surrogate2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Surrogate"#;

GHC.Unicode.$tc'Surrogate1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'Surrogate2];

GHC.Unicode.$tc'Surrogate :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8891432866311764671##
                                    15154926068870472193##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'Surrogate1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'PrivateUse2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'PrivateUse"#;

GHC.Unicode.$tc'PrivateUse1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'PrivateUse2];

GHC.Unicode.$tc'PrivateUse :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9277443220957795657##
                                    16819524490051355354##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'PrivateUse1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'NotAssigned2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'NotAssigned"#;

GHC.Unicode.$tc'NotAssigned1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'NotAssigned2];

GHC.Unicode.$tc'NotAssigned :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6894305772705953782##
                                    14217837899895516928##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'NotAssigned1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.toLower [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Char
[GblId, Arity=1, Str=<S(S),1*U(U)>m, Unf=OtherCon []] =
    [] \r [w_s2jbc]
        case w_s2jbc of {
          GHC.Types.C# ww1_s2jbe [Occ=Once] ->
              case ord# [ww1_s2jbe] of sat_s2jbg {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2jbg GHC.Prim.realWorld#] of {
                      Unit# ds1_s2jbj ->
                          case int2Word# [ds1_s2jbj] of sat_s2jbk {
                            __DEFAULT ->
                                case leWord# [sat_s2jbk 1114111##] of {
                                  __DEFAULT -> GHC.Char.$wlvl ds1_s2jbj;
                                  1# ->
                                      case chr# [ds1_s2jbj] of sat_s2jbm {
                                        __DEFAULT -> GHC.Types.C# [sat_s2jbm];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.toUpper [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Char
[GblId, Arity=1, Str=<S(S),1*U(U)>m, Unf=OtherCon []] =
    [] \r [w_s2jbn]
        case w_s2jbn of {
          GHC.Types.C# ww1_s2jbp [Occ=Once] ->
              case ord# [ww1_s2jbp] of sat_s2jbr {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2jbr GHC.Prim.realWorld#] of {
                      Unit# ds1_s2jbu ->
                          case int2Word# [ds1_s2jbu] of sat_s2jbv {
                            __DEFAULT ->
                                case leWord# [sat_s2jbv 1114111##] of {
                                  __DEFAULT -> GHC.Char.$wlvl ds1_s2jbu;
                                  1# ->
                                      case chr# [ds1_s2jbu] of sat_s2jbx {
                                        __DEFAULT -> GHC.Types.C# [sat_s2jbx];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.toTitle [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Char
[GblId, Arity=1, Str=<S(S),1*U(U)>m, Unf=OtherCon []] =
    [] \r [w_s2jby]
        case w_s2jby of {
          GHC.Types.C# ww1_s2jbA [Occ=Once] ->
              case ord# [ww1_s2jbA] of sat_s2jbC {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2jbC GHC.Prim.realWorld#] of {
                      Unit# ds1_s2jbF ->
                          case int2Word# [ds1_s2jbF] of sat_s2jbG {
                            __DEFAULT ->
                                case leWord# [sat_s2jbG 1114111##] of {
                                  __DEFAULT -> GHC.Char.$wlvl ds1_s2jbF;
                                  1# ->
                                      case chr# [ds1_s2jbF] of sat_s2jbI {
                                        __DEFAULT -> GHC.Types.C# [sat_s2jbI];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.wgencat :: GHC.Types.Int -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s2jbJ]
        case ds_s2jbJ of {
          GHC.Types.I# ds2_s2jbL [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [ds2_s2jbL GHC.Prim.realWorld#] of {
                Unit# ds4_s2jbP [Occ=Once] -> GHC.Types.I# [ds4_s2jbP];
              };
        };

GHC.Unicode.isAsciiUpper :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jbQ]
        case c_s2jbQ of {
          GHC.Types.C# c1_s2jbS ->
              case geChar# [c1_s2jbS 'A'#] of {
                __DEFAULT -> GHC.Types.False [];
                1# ->
                    case leChar# [c1_s2jbS 'Z'#] of sat_s2jbU {
                      __DEFAULT -> tagToEnum# [sat_s2jbU];
                    };
              };
        };

GHC.Unicode.isAsciiLower :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jbV]
        case c_s2jbV of {
          GHC.Types.C# c1_s2jbX ->
              case geChar# [c1_s2jbX 'a'#] of {
                __DEFAULT -> GHC.Types.False [];
                1# ->
                    case leChar# [c1_s2jbX 'z'#] of sat_s2jbZ {
                      __DEFAULT -> tagToEnum# [sat_s2jbZ];
                    };
              };
        };

GHC.Unicode.isLatin1 :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jc0]
        case c_s2jc0 of {
          GHC.Types.C# c1_s2jc2 [Occ=Once] ->
              case leChar# [c1_s2jc2 '\255'#] of sat_s2jc3 {
                __DEFAULT -> tagToEnum# [sat_s2jc3];
              };
        };

GHC.Unicode.isAscii :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jc4]
        case c_s2jc4 of {
          GHC.Types.C# c1_s2jc6 [Occ=Once] ->
              case ltChar# [c1_s2jc6 '\128'#] of sat_s2jc7 {
                __DEFAULT -> tagToEnum# [sat_s2jc7];
              };
        };

GHC.Unicode.isOctDigit :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jc8]
        case c_s2jc8 of {
          GHC.Types.C# c#_s2jca [Occ=Once] ->
              case ord# [c#_s2jca] of sat_s2jcb {
                __DEFAULT ->
                    case -# [sat_s2jcb 48#] of sat_s2jcc {
                      __DEFAULT ->
                          case int2Word# [sat_s2jcc] of sat_s2jcd {
                            __DEFAULT ->
                                case leWord# [sat_s2jcd 7##] of sat_s2jce {
                                  __DEFAULT -> tagToEnum# [sat_s2jce];
                                };
                          };
                    };
              };
        };

GHC.Unicode.isDigit :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jcf]
        case c_s2jcf of {
          GHC.Types.C# c#_s2jch [Occ=Once] ->
              case ord# [c#_s2jch] of sat_s2jci {
                __DEFAULT ->
                    case -# [sat_s2jci 48#] of sat_s2jcj {
                      __DEFAULT ->
                          case int2Word# [sat_s2jcj] of sat_s2jck {
                            __DEFAULT ->
                                case leWord# [sat_s2jck 9##] of sat_s2jcl {
                                  __DEFAULT -> tagToEnum# [sat_s2jcl];
                                };
                          };
                    };
              };
        };

GHC.Unicode.isHexDigit :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jcm]
        case c_s2jcm of {
          GHC.Types.C# c#_s2jco ->
              case ord# [c#_s2jco] of sat_s2jcp {
                __DEFAULT ->
                    case -# [sat_s2jcp 48#] of sat_s2jcq {
                      __DEFAULT ->
                          case int2Word# [sat_s2jcq] of sat_s2jcr {
                            __DEFAULT ->
                                case leWord# [sat_s2jcr 9##] of {
                                  __DEFAULT ->
                                      case ord# [c#_s2jco] of sat_s2jct {
                                        __DEFAULT ->
                                            case -# [sat_s2jct 65#] of sat_s2jcu {
                                              __DEFAULT ->
                                                  case int2Word# [sat_s2jcu] of sat_s2jcv {
                                                    __DEFAULT ->
                                                        case leWord# [sat_s2jcv 5##] of {
                                                          __DEFAULT ->
                                                              case ord# [c#_s2jco] of sat_s2jcx {
                                                                __DEFAULT ->
                                                                    case
                                                                        -# [sat_s2jcx 97#]
                                                                    of
                                                                    sat_s2jcy
                                                                    { __DEFAULT ->
                                                                          case
                                                                              int2Word# [sat_s2jcy]
                                                                          of
                                                                          sat_s2jcz
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    leWord# [sat_s2jcz
                                                                                             5##]
                                                                                of
                                                                                sat_s2jcA
                                                                                { __DEFAULT ->
                                                                                      tagToEnum# [sat_s2jcA];
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                          1# -> GHC.Types.True [];
                                                        };
                                                  };
                                            };
                                      };
                                  1# -> GHC.Types.True [];
                                };
                          };
                    };
              };
        };

GHC.Unicode.isLower :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jcB]
        case c_s2jcB of {
          GHC.Types.C# c#_s2jcD [Occ=Once] ->
              case ord# [c#_s2jcD] of sat_s2jcF {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2jcF GHC.Prim.realWorld#] of {
                      Unit# ds1_s2jcI [Occ=Once!] ->
                          case ds1_s2jcI of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

lvl66_r2j7h :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "succ{GeneralCategory}: tried to take `succ' of last tag in enumeration"#;

GHC.Unicode.$fEnumGeneralCategory2 :: GHC.Unicode.GeneralCategory
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl66_r2j7h of sat_s2jcK {
          __DEFAULT -> GHC.Err.error $dIP3_r2j7a sat_s2jcK;
        };

GHC.Unicode.$fEnumGeneralCategory_$csucc
  :: GHC.Unicode.GeneralCategory -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [a_s2jcL]
        case a_s2jcL of x1_s2jcM {
          __DEFAULT ->
              case dataToTag# [x1_s2jcM] of a#_s2jcN {
                __DEFAULT ->
                    case +# [a#_s2jcN 1#] of sat_s2jcO {
                      __DEFAULT -> tagToEnum# [sat_s2jcO];
                    };
              };
          GHC.Unicode.NotAssigned -> GHC.Unicode.$fEnumGeneralCategory2;
        };

lvl67_r2j7i :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "pred{GeneralCategory}: tried to take `pred' of first tag in enumeration"#;

GHC.Unicode.$fEnumGeneralCategory1 :: GHC.Unicode.GeneralCategory
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl67_r2j7i of sat_s2jcP {
          __DEFAULT -> GHC.Err.error $dIP3_r2j7a sat_s2jcP;
        };

GHC.Unicode.$fEnumGeneralCategory_$cpred
  :: GHC.Unicode.GeneralCategory -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [a_s2jcQ]
        case a_s2jcQ of x1_s2jcR {
          __DEFAULT ->
              case dataToTag# [x1_s2jcR] of a#_s2jcS {
                __DEFAULT ->
                    case +# [a#_s2jcS -1#] of sat_s2jcT {
                      __DEFAULT -> tagToEnum# [sat_s2jcT];
                    };
              };
          GHC.Unicode.UppercaseLetter -> GHC.Unicode.$fEnumGeneralCategory1;
        };

GHC.Unicode.$fEnumGeneralCategory_$cenumFromTo
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [x_s2jcU y_s2jcV]
        case
            case x_s2jcU of sat_s2jcW { __DEFAULT -> dataToTag# [sat_s2jcW]; }
        of
        a#_s2jcX
        { __DEFAULT ->
              case
                  case y_s2jcV of sat_s2jcY { __DEFAULT -> dataToTag# [sat_s2jcY]; }
              of
              a#1_s2jcZ
              { __DEFAULT ->
                    case ># [a#_s2jcX a#1_s2jcZ] of {
                      __DEFAULT ->
                          let {
                            go_s2jd1 [Occ=LoopBreaker]
                              :: GHC.Prim.Int# -> [GHC.Unicode.GeneralCategory]
                            [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
                                sat-only [a#1_s2jcZ go_s2jd1] \r [x1_s2jd2]
                                    let {
                                      sat_s2jd8 [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                      [LclId] =
                                          [a#1_s2jcZ go_s2jd1 x1_s2jd2] \u []
                                              case ==# [x1_s2jd2 a#1_s2jcZ] of {
                                                __DEFAULT ->
                                                    case +# [x1_s2jd2 1#] of sat_s2jd7 {
                                                      __DEFAULT -> go_s2jd1 sat_s2jd7;
                                                    };
                                                1# -> [] [];
                                              }; } in
                                    let {
                                      sat_s2jd5 [Occ=Once] :: GHC.Unicode.GeneralCategory
                                      [LclId] =
                                          [x1_s2jd2] \u []
                                              case >=# [x1_s2jd2 0#] of {
                                                __DEFAULT -> GHC.Unicode.$wlvl x1_s2jd2;
                                                1# ->
                                                    case <=# [x1_s2jd2 29#] of {
                                                      __DEFAULT -> GHC.Unicode.$wlvl x1_s2jd2;
                                                      1# -> tagToEnum# [x1_s2jd2];
                                                    };
                                              };
                                    } in  : [sat_s2jd5 sat_s2jd8];
                          } in  go_s2jd1 a#_s2jcX;
                      1# -> [] [];
                    };
              };
        };

GHC.Unicode.$fEnumGeneralCategory_$cenumFromThenTo
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory
     -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=3, Str=<S,U><S,U><S,U>, Unf=OtherCon []] =
    [] \r [x1_s2jd9 x2_s2jda y_s2jdb]
        case
            case x1_s2jd9 of sat_s2jdc { __DEFAULT -> dataToTag# [sat_s2jdc]; }
        of
        a#_s2jdd
        { __DEFAULT ->
              case
                  case x2_s2jda of sat_s2jde { __DEFAULT -> dataToTag# [sat_s2jde]; }
              of
              a#1_s2jdf
              { __DEFAULT ->
                    case
                        case y_s2jdb of sat_s2jdg { __DEFAULT -> dataToTag# [sat_s2jdg]; }
                    of
                    a#2_s2jdh
                    { __DEFAULT ->
                          case >=# [a#1_s2jdf a#_s2jdd] of {
                            __DEFAULT ->
                                case ># [a#2_s2jdh a#1_s2jdf] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2jdA [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2jdd a#1_s2jdf a#2_s2jdh] \u []
                                                case
                                                    -# [a#1_s2jdf a#_s2jdd]
                                                of
                                                delta_s2jdn [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [a#2_s2jdh delta_s2jdn]
                                                      of
                                                      y'_s2jdo [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_dn_s2jdp [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2jdn
                                                                            y'_s2jdo
                                                                            go_dn_s2jdp] \r [x_s2jdq]
                                                                      case
                                                                          <# [x_s2jdq y'_s2jdo]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2jdw [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2jdn
                                                                                   go_dn_s2jdp
                                                                                   x_s2jdq] \u []
                                                                                      case
                                                                                          +# [x_s2jdq
                                                                                              delta_s2jdn]
                                                                                      of
                                                                                      sat_s2jdv
                                                                                      { __DEFAULT ->
                                                                                            go_dn_s2jdp
                                                                                                sat_s2jdv;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2jdu [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jdq] \u []
                                                                                      case
                                                                                          >=# [x_s2jdq
                                                                                               0#]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            GHC.Unicode.$wlvl
                                                                                                x_s2jdq;
                                                                                        1# ->
                                                                                            case
                                                                                                <=# [x_s2jdq
                                                                                                     29#]
                                                                                            of
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Unicode.$wlvl
                                                                                                      x_s2jdq;
                                                                                              1# ->
                                                                                                  tagToEnum# [x_s2jdq];
                                                                                            };
                                                                                      };
                                                                            } in 
                                                                              : [sat_s2jdu
                                                                                 sat_s2jdw];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2jdz [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jdq] \u []
                                                                                      case
                                                                                          >=# [x_s2jdq
                                                                                               0#]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            GHC.Unicode.$wlvl
                                                                                                x_s2jdq;
                                                                                        1# ->
                                                                                            case
                                                                                                <=# [x_s2jdq
                                                                                                     29#]
                                                                                            of
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Unicode.$wlvl
                                                                                                      x_s2jdq;
                                                                                              1# ->
                                                                                                  tagToEnum# [x_s2jdq];
                                                                                            };
                                                                                      };
                                                                            } in 
                                                                              : [sat_s2jdz
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_dn_s2jdp a#1_s2jdf;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2jdm [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2jdd] \u []
                                                case >=# [a#_s2jdd 0#] of {
                                                  __DEFAULT -> GHC.Unicode.$wlvl a#_s2jdd;
                                                  1# ->
                                                      case <=# [a#_s2jdd 29#] of {
                                                        __DEFAULT -> GHC.Unicode.$wlvl a#_s2jdd;
                                                        1# -> tagToEnum# [a#_s2jdd];
                                                      };
                                                };
                                      } in  : [sat_s2jdm sat_s2jdA];
                                  1# ->
                                      case ># [a#2_s2jdh a#_s2jdd] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2jdE [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2jdd] \u []
                                                      case >=# [a#_s2jdd 0#] of {
                                                        __DEFAULT -> GHC.Unicode.$wlvl a#_s2jdd;
                                                        1# ->
                                                            case <=# [a#_s2jdd 29#] of {
                                                              __DEFAULT ->
                                                                  GHC.Unicode.$wlvl a#_s2jdd;
                                                              1# -> tagToEnum# [a#_s2jdd];
                                                            };
                                                      };
                                            } in  : [sat_s2jdE GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                            1# ->
                                case <# [a#2_s2jdh a#1_s2jdf] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2jdW [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2jdd a#1_s2jdf a#2_s2jdh] \u []
                                                case
                                                    -# [a#1_s2jdf a#_s2jdd]
                                                of
                                                delta_s2jdJ [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [a#2_s2jdh delta_s2jdJ]
                                                      of
                                                      y'_s2jdK [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_up_s2jdL [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2jdJ
                                                                            y'_s2jdK
                                                                            go_up_s2jdL] \r [x_s2jdM]
                                                                      case
                                                                          ># [x_s2jdM y'_s2jdK]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2jdS [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2jdJ
                                                                                   go_up_s2jdL
                                                                                   x_s2jdM] \u []
                                                                                      case
                                                                                          +# [x_s2jdM
                                                                                              delta_s2jdJ]
                                                                                      of
                                                                                      sat_s2jdR
                                                                                      { __DEFAULT ->
                                                                                            go_up_s2jdL
                                                                                                sat_s2jdR;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2jdQ [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jdM] \u []
                                                                                      case
                                                                                          >=# [x_s2jdM
                                                                                               0#]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            GHC.Unicode.$wlvl
                                                                                                x_s2jdM;
                                                                                        1# ->
                                                                                            case
                                                                                                <=# [x_s2jdM
                                                                                                     29#]
                                                                                            of
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Unicode.$wlvl
                                                                                                      x_s2jdM;
                                                                                              1# ->
                                                                                                  tagToEnum# [x_s2jdM];
                                                                                            };
                                                                                      };
                                                                            } in 
                                                                              : [sat_s2jdQ
                                                                                 sat_s2jdS];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2jdV [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2jdM] \u []
                                                                                      case
                                                                                          >=# [x_s2jdM
                                                                                               0#]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            GHC.Unicode.$wlvl
                                                                                                x_s2jdM;
                                                                                        1# ->
                                                                                            case
                                                                                                <=# [x_s2jdM
                                                                                                     29#]
                                                                                            of
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Unicode.$wlvl
                                                                                                      x_s2jdM;
                                                                                              1# ->
                                                                                                  tagToEnum# [x_s2jdM];
                                                                                            };
                                                                                      };
                                                                            } in 
                                                                              : [sat_s2jdV
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_up_s2jdL a#1_s2jdf;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2jdI [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2jdd] \u []
                                                case >=# [a#_s2jdd 0#] of {
                                                  __DEFAULT -> GHC.Unicode.$wlvl a#_s2jdd;
                                                  1# ->
                                                      case <=# [a#_s2jdd 29#] of {
                                                        __DEFAULT -> GHC.Unicode.$wlvl a#_s2jdd;
                                                        1# -> tagToEnum# [a#_s2jdd];
                                                      };
                                                };
                                      } in  : [sat_s2jdI sat_s2jdW];
                                  1# ->
                                      case <# [a#2_s2jdh a#_s2jdd] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2je0 [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2jdd] \u []
                                                      case >=# [a#_s2jdd 0#] of {
                                                        __DEFAULT -> GHC.Unicode.$wlvl a#_s2jdd;
                                                        1# ->
                                                            case <=# [a#_s2jdd 29#] of {
                                                              __DEFAULT ->
                                                                  GHC.Unicode.$wlvl a#_s2jdd;
                                                              1# -> tagToEnum# [a#_s2jdd];
                                                            };
                                                      };
                                            } in  : [sat_s2je0 GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.$fEnumGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum GHC.Unicode.GeneralCategory
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Unicode.$fEnumGeneralCategory_$csucc
                                    GHC.Unicode.$fEnumGeneralCategory_$cpred
                                    GHC.Unicode.$fEnumGeneralCategory_$ctoEnum
                                    GHC.Unicode.$fEnumGeneralCategory_$cfromEnum
                                    GHC.Unicode.$fEnumGeneralCategory_$cenumFrom
                                    GHC.Unicode.$fEnumGeneralCategory_$cenumFromThen
                                    GHC.Unicode.$fEnumGeneralCategory_$cenumFromTo
                                    GHC.Unicode.$fEnumGeneralCategory_$cenumFromThenTo];

GHC.Unicode.$wgeneralCategory [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s2je1]
        case ord# [ww_s2je1] of sat_s2je3 {
          __DEFAULT ->
              case __pkg_ccall base-4.11.0.0 [sat_s2je3 GHC.Prim.realWorld#] of {
                Unit# ds1_s2je6 ->
                    case >=# [ds1_s2je6 0#] of {
                      __DEFAULT -> GHC.Unicode.$wlvl ds1_s2je6;
                      1# ->
                          case <=# [ds1_s2je6 29#] of {
                            __DEFAULT -> GHC.Unicode.$wlvl ds1_s2je6;
                            1# -> tagToEnum# [ds1_s2je6];
                          };
                    };
              };
        };

GHC.Unicode.generalCategory [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s2je9]
        case w_s2je9 of {
          GHC.Types.C# ww1_s2jeb [Occ=Once] ->
              GHC.Unicode.$wgeneralCategory ww1_s2jeb;
        };

GHC.Unicode.$wisPunctuation [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Types.Bool
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s2jec]
        case ord# [ww_s2jec] of sat_s2jee {
          __DEFAULT ->
              case __pkg_ccall base-4.11.0.0 [sat_s2jee GHC.Prim.realWorld#] of {
                Unit# ds1_s2jeh ->
                    case >=# [ds1_s2jeh 0#] of {
                      __DEFAULT -> GHC.Unicode.$wlvl ds1_s2jeh;
                      1# ->
                          case <=# [ds1_s2jeh 29#] of {
                            __DEFAULT -> GHC.Unicode.$wlvl ds1_s2jeh;
                            1# ->
                                case ds1_s2jeh of {
                                  __DEFAULT -> GHC.Types.False [];
                                  11# -> GHC.Types.True [];
                                  12# -> GHC.Types.True [];
                                  13# -> GHC.Types.True [];
                                  14# -> GHC.Types.True [];
                                  15# -> GHC.Types.True [];
                                  16# -> GHC.Types.True [];
                                  17# -> GHC.Types.True [];
                                };
                          };
                    };
              };
        };

GHC.Unicode.isPunctuation [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s2jen]
        case w_s2jen of {
          GHC.Types.C# ww1_s2jep [Occ=Once] ->
              GHC.Unicode.$wisPunctuation ww1_s2jep;
        };

GHC.Unicode.$wisSymbol [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Types.Bool
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s2jeq]
        case ord# [ww_s2jeq] of sat_s2jes {
          __DEFAULT ->
              case __pkg_ccall base-4.11.0.0 [sat_s2jes GHC.Prim.realWorld#] of {
                Unit# ds1_s2jev ->
                    case >=# [ds1_s2jev 0#] of {
                      __DEFAULT -> GHC.Unicode.$wlvl ds1_s2jev;
                      1# ->
                          case <=# [ds1_s2jev 29#] of {
                            __DEFAULT -> GHC.Unicode.$wlvl ds1_s2jev;
                            1# ->
                                case ds1_s2jev of {
                                  __DEFAULT -> GHC.Types.False [];
                                  18# -> GHC.Types.True [];
                                  19# -> GHC.Types.True [];
                                  20# -> GHC.Types.True [];
                                  21# -> GHC.Types.True [];
                                };
                          };
                    };
              };
        };

GHC.Unicode.isSymbol [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s2jeB]
        case w_s2jeB of {
          GHC.Types.C# ww1_s2jeD [Occ=Once] ->
              GHC.Unicode.$wisSymbol ww1_s2jeD;
        };

GHC.Unicode.isUpper :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jeE]
        case c_s2jeE of {
          GHC.Types.C# c#_s2jeG [Occ=Once] ->
              case ord# [c#_s2jeG] of sat_s2jeI {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2jeI GHC.Prim.realWorld#] of {
                      Unit# ds1_s2jeL [Occ=Once!] ->
                          case ds1_s2jeL of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

GHC.Unicode.isPrint :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jeN]
        case c_s2jeN of {
          GHC.Types.C# c#_s2jeP [Occ=Once] ->
              case ord# [c#_s2jeP] of sat_s2jeR {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2jeR GHC.Prim.realWorld#] of {
                      Unit# ds1_s2jeU [Occ=Once!] ->
                          case ds1_s2jeU of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

GHC.Unicode.isControl :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jeW]
        case c_s2jeW of {
          GHC.Types.C# c#_s2jeY [Occ=Once] ->
              case ord# [c#_s2jeY] of sat_s2jf0 {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2jf0 GHC.Prim.realWorld#] of {
                      Unit# ds1_s2jf3 [Occ=Once!] ->
                          case ds1_s2jf3 of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

GHC.Unicode.isAlphaNum :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jf5]
        case c_s2jf5 of {
          GHC.Types.C# c#_s2jf7 [Occ=Once] ->
              case ord# [c#_s2jf7] of sat_s2jf9 {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2jf9 GHC.Prim.realWorld#] of {
                      Unit# ds1_s2jfc [Occ=Once!] ->
                          case ds1_s2jfc of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

GHC.Unicode.isAlpha :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2jfe]
        case c_s2jfe of {
          GHC.Types.C# c#_s2jfg [Occ=Once] ->
              case ord# [c#_s2jfg] of sat_s2jfi {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2jfi GHC.Prim.realWorld#] of {
                      Unit# ds1_s2jfl [Occ=Once!] ->
                          case ds1_s2jfl of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

GHC.Unicode.$wisSpace [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Types.Bool
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s2jfn]
        case ord# [ww_s2jfn] of sat_s2jfp {
          __DEFAULT ->
              case int2Word# [sat_s2jfp] of x_s2jfo [Dmd=<S,U>] {
                __DEFAULT ->
                    case leWord# [x_s2jfo 887##] of {
                      __DEFAULT ->
                          case ord# [ww_s2jfn] of sat_s2jfs {
                            __DEFAULT ->
                                case __pkg_ccall base-4.11.0.0 [sat_s2jfs GHC.Prim.realWorld#] of {
                                  Unit# ds1_s2jfv [Occ=Once!] ->
                                      case ds1_s2jfv of {
                                        __DEFAULT -> GHC.Types.True [];
                                        0# -> GHC.Types.False [];
                                      };
                                };
                          };
                      1# ->
                          case x_s2jfo of wild_s2jfx {
                            __DEFAULT ->
                                case minusWord# [wild_s2jfx 9##] of sat_s2jfy {
                                  __DEFAULT ->
                                      case leWord# [sat_s2jfy 4##] of {
                                        __DEFAULT ->
                                            case wild_s2jfx of {
                                              __DEFAULT -> GHC.Types.False [];
                                              160## -> GHC.Types.True [];
                                            };
                                        1# -> GHC.Types.True [];
                                      };
                                };
                            32## -> GHC.Types.True [];
                          };
                    };
              };
        };

GHC.Unicode.isSpace [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [w_s2jfB]
        case w_s2jfB of {
          GHC.Types.C# ww1_s2jfD [Occ=Once] ->
              GHC.Unicode.$wisSpace ww1_s2jfD;
        };

GHC.Unicode.UppercaseLetter :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.UppercaseLetter! [];

GHC.Unicode.LowercaseLetter :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.LowercaseLetter! [];

GHC.Unicode.TitlecaseLetter :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.TitlecaseLetter! [];

GHC.Unicode.ModifierLetter :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.ModifierLetter! [];

GHC.Unicode.OtherLetter :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.OtherLetter! [];

GHC.Unicode.NonSpacingMark :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.NonSpacingMark! [];

GHC.Unicode.SpacingCombiningMark :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.SpacingCombiningMark! [];

GHC.Unicode.EnclosingMark :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.EnclosingMark! [];

GHC.Unicode.DecimalNumber :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.DecimalNumber! [];

GHC.Unicode.LetterNumber :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.LetterNumber! [];

GHC.Unicode.OtherNumber :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.OtherNumber! [];

GHC.Unicode.ConnectorPunctuation :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.ConnectorPunctuation! [];

GHC.Unicode.DashPunctuation :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.DashPunctuation! [];

GHC.Unicode.OpenPunctuation :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.OpenPunctuation! [];

GHC.Unicode.ClosePunctuation :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.ClosePunctuation! [];

GHC.Unicode.InitialQuote :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.InitialQuote! [];

GHC.Unicode.FinalQuote :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.FinalQuote! [];

GHC.Unicode.OtherPunctuation :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.OtherPunctuation! [];

GHC.Unicode.MathSymbol :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.MathSymbol! [];

GHC.Unicode.CurrencySymbol :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.CurrencySymbol! [];

GHC.Unicode.ModifierSymbol :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.ModifierSymbol! [];

GHC.Unicode.OtherSymbol :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.OtherSymbol! [];

GHC.Unicode.Space :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.Space! [];

GHC.Unicode.LineSeparator :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.LineSeparator! [];

GHC.Unicode.ParagraphSeparator :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.ParagraphSeparator! [];

GHC.Unicode.Control :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.Control! [];

GHC.Unicode.Format :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.Format! [];

GHC.Unicode.Surrogate :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.Surrogate! [];

GHC.Unicode.PrivateUse :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.PrivateUse! [];

GHC.Unicode.NotAssigned :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.NotAssigned! [];


==================== Pre unarise: ====================
2018-03-16 15:57:06.284313584 UTC

GHC.Unicode.$fBoundedGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded GHC.Unicode.GeneralCategory
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Unicode.UppercaseLetter
                                       GHC.Unicode.NotAssigned];

lvl_r2j62 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "UppercaseLetter"#;

lvl1_r2j63 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_r2j62;

lvl2_r2j64 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "LowercaseLetter"#;

lvl3_r2j65 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl2_r2j64;

lvl4_r2j66 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "TitlecaseLetter"#;

lvl5_r2j67 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl4_r2j66;

lvl6_r2j68 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ModifierLetter"#;

lvl7_r2j69 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl6_r2j68;

lvl8_r2j6a :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OtherLetter"#;

lvl9_r2j6b :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl8_r2j6a;

lvl10_r2j6c :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "NonSpacingMark"#;

lvl11_r2j6d :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl10_r2j6c;

lvl12_r2j6e :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "SpacingCombiningMark"#;

lvl13_r2j6f :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl12_r2j6e;

lvl14_r2j6g :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EnclosingMark"#;

lvl15_r2j6h :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl14_r2j6g;

lvl16_r2j6i :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "DecimalNumber"#;

lvl17_r2j6j :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl16_r2j6i;

lvl18_r2j6k :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "LetterNumber"#;

lvl19_r2j6l :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl18_r2j6k;

lvl20_r2j6m :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OtherNumber"#;

lvl21_r2j6n :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl20_r2j6m;

lvl22_r2j6o :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ConnectorPunctuation"#;

lvl23_r2j6p :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl22_r2j6o;

lvl24_r2j6q :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "DashPunctuation"#;

lvl25_r2j6r :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl24_r2j6q;

lvl26_r2j6s :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OpenPunctuation"#;

lvl27_r2j6t :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl26_r2j6s;

lvl28_r2j6u :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ClosePunctuation"#;

lvl29_r2j6v :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl28_r2j6u;

lvl30_r2j6w :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "InitialQuote"#;

lvl31_r2j6x :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl30_r2j6w;

lvl32_r2j6y :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "FinalQuote"#;

lvl33_r2j6z :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl32_r2j6y;

lvl34_r2j6A :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OtherPunctuation"#;

lvl35_r2j6B :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl34_r2j6A;

lvl36_r2j6C :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "MathSymbol"#;

lvl37_r2j6D :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl36_r2j6C;

lvl38_r2j6E :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CurrencySymbol"#;

lvl39_r2j6F :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl38_r2j6E;

lvl40_r2j6G :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ModifierSymbol"#;

lvl41_r2j6H :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl40_r2j6G;

lvl42_r2j6I :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OtherSymbol"#;

lvl43_r2j6J :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl42_r2j6I;

lvl44_r2j6K :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Space"#;

lvl45_r2j6L :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl44_r2j6K;

lvl46_r2j6M :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "LineSeparator"#;

lvl47_r2j6N :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl46_r2j6M;

lvl48_r2j6O :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ParagraphSeparator"#;

lvl49_r2j6P :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl48_r2j6O;

lvl50_r2j6Q :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Control"#;

lvl51_r2j6R :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl50_r2j6Q;

lvl52_r2j6S :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Format"#;

lvl53_r2j6T :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl52_r2j6S;

lvl54_r2j6U :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Surrogate"#;

lvl55_r2j6V :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl54_r2j6U;

lvl56_r2j6W :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "PrivateUse"#;

lvl57_r2j6X :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl56_r2j6W;

lvl58_r2j6Y :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "NotAssigned"#;

lvl59_r2j6Z :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl58_r2j6Y;

GHC.Unicode.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Unicode.GeneralCategory
     -> GHC.Base.String -> GHC.Base.String
[GblId, Arity=2, Str=<S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [w_s2m3F w1_s2m3G]
        case w_s2m3F of {
          GHC.Unicode.UppercaseLetter -> GHC.Base.++ lvl1_r2j63 w1_s2m3G;
          GHC.Unicode.LowercaseLetter -> GHC.Base.++ lvl3_r2j65 w1_s2m3G;
          GHC.Unicode.TitlecaseLetter -> GHC.Base.++ lvl5_r2j67 w1_s2m3G;
          GHC.Unicode.ModifierLetter -> GHC.Base.++ lvl7_r2j69 w1_s2m3G;
          GHC.Unicode.OtherLetter -> GHC.Base.++ lvl9_r2j6b w1_s2m3G;
          GHC.Unicode.NonSpacingMark -> GHC.Base.++ lvl11_r2j6d w1_s2m3G;
          GHC.Unicode.SpacingCombiningMark ->
              GHC.Base.++ lvl13_r2j6f w1_s2m3G;
          GHC.Unicode.EnclosingMark -> GHC.Base.++ lvl15_r2j6h w1_s2m3G;
          GHC.Unicode.DecimalNumber -> GHC.Base.++ lvl17_r2j6j w1_s2m3G;
          GHC.Unicode.LetterNumber -> GHC.Base.++ lvl19_r2j6l w1_s2m3G;
          GHC.Unicode.OtherNumber -> GHC.Base.++ lvl21_r2j6n w1_s2m3G;
          GHC.Unicode.ConnectorPunctuation ->
              GHC.Base.++ lvl23_r2j6p w1_s2m3G;
          GHC.Unicode.DashPunctuation -> GHC.Base.++ lvl25_r2j6r w1_s2m3G;
          GHC.Unicode.OpenPunctuation -> GHC.Base.++ lvl27_r2j6t w1_s2m3G;
          GHC.Unicode.ClosePunctuation -> GHC.Base.++ lvl29_r2j6v w1_s2m3G;
          GHC.Unicode.InitialQuote -> GHC.Base.++ lvl31_r2j6x w1_s2m3G;
          GHC.Unicode.FinalQuote -> GHC.Base.++ lvl33_r2j6z w1_s2m3G;
          GHC.Unicode.OtherPunctuation -> GHC.Base.++ lvl35_r2j6B w1_s2m3G;
          GHC.Unicode.MathSymbol -> GHC.Base.++ lvl37_r2j6D w1_s2m3G;
          GHC.Unicode.CurrencySymbol -> GHC.Base.++ lvl39_r2j6F w1_s2m3G;
          GHC.Unicode.ModifierSymbol -> GHC.Base.++ lvl41_r2j6H w1_s2m3G;
          GHC.Unicode.OtherSymbol -> GHC.Base.++ lvl43_r2j6J w1_s2m3G;
          GHC.Unicode.Space -> GHC.Base.++ lvl45_r2j6L w1_s2m3G;
          GHC.Unicode.LineSeparator -> GHC.Base.++ lvl47_r2j6N w1_s2m3G;
          GHC.Unicode.ParagraphSeparator -> GHC.Base.++ lvl49_r2j6P w1_s2m3G;
          GHC.Unicode.Control -> GHC.Base.++ lvl51_r2j6R w1_s2m3G;
          GHC.Unicode.Format -> GHC.Base.++ lvl53_r2j6T w1_s2m3G;
          GHC.Unicode.Surrogate -> GHC.Base.++ lvl55_r2j6V w1_s2m3G;
          GHC.Unicode.PrivateUse -> GHC.Base.++ lvl57_r2j6X w1_s2m3G;
          GHC.Unicode.NotAssigned -> GHC.Base.++ lvl59_r2j6Z w1_s2m3G;
        };

GHC.Unicode.$fShowGeneralCategory_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Unicode.GeneralCategory -> GHC.Show.ShowS
[GblId, Arity=3, Str=<L,A><S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [w_s2m3I w1_s2m3J w2_s2m3K]
        GHC.Unicode.$w$cshowsPrec w1_s2m3J w2_s2m3K;

GHC.Unicode.$fShowGeneralCategory1 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

GHC.Unicode.$fShowGeneralCategory_$cshow
  :: GHC.Unicode.GeneralCategory -> GHC.Base.String
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [x_s2m3L] GHC.Unicode.$w$cshowsPrec x_s2m3L GHC.Types.[];

GHC.Unicode.$fShowGeneralCategory_$cshowList
  :: [GHC.Unicode.GeneralCategory] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_s2m3M s_s2m3N]
        GHC.Show.showList__ GHC.Unicode.$w$cshowsPrec ls_s2m3M s_s2m3N;

GHC.Unicode.$fShowGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Unicode.GeneralCategory
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Unicode.$fShowGeneralCategory_$cshowsPrec
                                    GHC.Unicode.$fShowGeneralCategory_$cshow
                                    GHC.Unicode.$fShowGeneralCategory_$cshowList];

GHC.Unicode.$fEqGeneralCategory_$c==
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2m3O b_s2m3P]
        case
            case a_s2m3O of sat_s2m3Q { __DEFAULT -> dataToTag# [sat_s2m3Q]; }
        of
        a#_s2m3R
        { __DEFAULT ->
              case
                  case b_s2m3P of sat_s2m3S { __DEFAULT -> dataToTag# [sat_s2m3S]; }
              of
              b#_s2m3T
              { __DEFAULT ->
                    case ==# [a#_s2m3R b#_s2m3T] of sat_s2m3U {
                      __DEFAULT -> tagToEnum# [sat_s2m3U];
                    };
              };
        };

GHC.Unicode.$fEqGeneralCategory_$c/= [InlPrag=INLINE (sat-args=2)]
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_s2m3V eta1_s2m3W]
        case
            case eta_s2m3V of sat_s2m3X {
              __DEFAULT -> dataToTag# [sat_s2m3X];
            }
        of
        a#_s2m3Y
        { __DEFAULT ->
              case
                  case eta1_s2m3W of sat_s2m3Z {
                    __DEFAULT -> dataToTag# [sat_s2m3Z];
                  }
              of
              b#_s2m40
              { __DEFAULT ->
                    case ==# [a#_s2m3Y b#_s2m40] of {
                      __DEFAULT -> GHC.Types.True [];
                      1# -> GHC.Types.False [];
                    };
              };
        };

GHC.Unicode.$fEqGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Unicode.GeneralCategory
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Unicode.$fEqGeneralCategory_$c==
                                     GHC.Unicode.$fEqGeneralCategory_$c/=];

GHC.Unicode.$fOrdGeneralCategory_$ccompare
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Ordering
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2m42 b_s2m43]
        case
            case a_s2m42 of sat_s2m44 { __DEFAULT -> dataToTag# [sat_s2m44]; }
        of
        a#_s2m45
        { __DEFAULT ->
              case
                  case b_s2m43 of sat_s2m46 { __DEFAULT -> dataToTag# [sat_s2m46]; }
              of
              b#_s2m47
              { __DEFAULT ->
                    case <# [a#_s2m45 b#_s2m47] of {
                      __DEFAULT ->
                          case ==# [a#_s2m45 b#_s2m47] of {
                            __DEFAULT -> GHC.Types.GT [];
                            1# -> GHC.Types.EQ [];
                          };
                      1# -> GHC.Types.LT [];
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$c<
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2m4a b_s2m4b]
        case
            case a_s2m4a of sat_s2m4c { __DEFAULT -> dataToTag# [sat_s2m4c]; }
        of
        a#_s2m4d
        { __DEFAULT ->
              case
                  case b_s2m4b of sat_s2m4e { __DEFAULT -> dataToTag# [sat_s2m4e]; }
              of
              b#_s2m4f
              { __DEFAULT ->
                    case <# [a#_s2m4d b#_s2m4f] of sat_s2m4g {
                      __DEFAULT -> tagToEnum# [sat_s2m4g];
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$c<=
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2m4h b_s2m4i]
        case
            case b_s2m4i of sat_s2m4j { __DEFAULT -> dataToTag# [sat_s2m4j]; }
        of
        a#_s2m4k
        { __DEFAULT ->
              case
                  case a_s2m4h of sat_s2m4l { __DEFAULT -> dataToTag# [sat_s2m4l]; }
              of
              b#_s2m4m
              { __DEFAULT ->
                    case <# [a#_s2m4k b#_s2m4m] of {
                      __DEFAULT -> GHC.Types.True [];
                      1# -> GHC.Types.False [];
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$cmax
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Unicode.GeneralCategory
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [x_s2m4o y_s2m4p]
        case
            case y_s2m4p of sat_s2m4q { __DEFAULT -> dataToTag# [sat_s2m4q]; }
        of
        a#_s2m4r
        { __DEFAULT ->
              case
                  case x_s2m4o of sat_s2m4s { __DEFAULT -> dataToTag# [sat_s2m4s]; }
              of
              b#_s2m4t
              { __DEFAULT ->
                    case <# [a#_s2m4r b#_s2m4t] of {
                      __DEFAULT -> y_s2m4p;
                      1# -> x_s2m4o;
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$c>=
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2m4v b_s2m4w]
        case
            case a_s2m4v of sat_s2m4x { __DEFAULT -> dataToTag# [sat_s2m4x]; }
        of
        a#_s2m4y
        { __DEFAULT ->
              case
                  case b_s2m4w of sat_s2m4z { __DEFAULT -> dataToTag# [sat_s2m4z]; }
              of
              b#_s2m4A
              { __DEFAULT ->
                    case <# [a#_s2m4y b#_s2m4A] of {
                      __DEFAULT -> GHC.Types.True [];
                      1# -> GHC.Types.False [];
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$c>
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2m4C b_s2m4D]
        case
            case b_s2m4D of sat_s2m4E { __DEFAULT -> dataToTag# [sat_s2m4E]; }
        of
        a#_s2m4F
        { __DEFAULT ->
              case
                  case a_s2m4C of sat_s2m4G { __DEFAULT -> dataToTag# [sat_s2m4G]; }
              of
              b#_s2m4H
              { __DEFAULT ->
                    case <# [a#_s2m4F b#_s2m4H] of sat_s2m4I {
                      __DEFAULT -> tagToEnum# [sat_s2m4I];
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$cmin
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Unicode.GeneralCategory
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [x_s2m4J y_s2m4K]
        case
            case y_s2m4K of sat_s2m4L { __DEFAULT -> dataToTag# [sat_s2m4L]; }
        of
        a#_s2m4M
        { __DEFAULT ->
              case
                  case x_s2m4J of sat_s2m4N { __DEFAULT -> dataToTag# [sat_s2m4N]; }
              of
              b#_s2m4O
              { __DEFAULT ->
                    case <# [a#_s2m4M b#_s2m4O] of {
                      __DEFAULT -> x_s2m4J;
                      1# -> y_s2m4K;
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord GHC.Unicode.GeneralCategory
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [GHC.Unicode.$fEqGeneralCategory
                                      GHC.Unicode.$fOrdGeneralCategory_$ccompare
                                      GHC.Unicode.$fOrdGeneralCategory_$c<
                                      GHC.Unicode.$fOrdGeneralCategory_$c<=
                                      GHC.Unicode.$fOrdGeneralCategory_$c>
                                      GHC.Unicode.$fOrdGeneralCategory_$c>=
                                      GHC.Unicode.$fOrdGeneralCategory_$cmax
                                      GHC.Unicode.$fOrdGeneralCategory_$cmin];

GHC.Unicode.$fEnumGeneralCategory_$cfromEnum
  :: GHC.Unicode.GeneralCategory -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>m, Unf=OtherCon []] =
    [] \r [a_s2m4Q]
        case
            case a_s2m4Q of sat_s2m4R { __DEFAULT -> dataToTag# [sat_s2m4R]; }
        of
        a#_s2m4S
        { __DEFAULT -> GHC.Types.I# [a#_s2m4S];
        };

GHC.Unicode.$fIxGeneralCategory_$cunsafeIndex
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>m,
 Unf=OtherCon []] =
    [] \r [c_s2m4T d_s2m4U]
        case c_s2m4T of {
          (,) a_s2m4W [Occ=Once] _ [Occ=Dead] ->
              case
                  case a_s2m4W of sat_s2m4Y { __DEFAULT -> dataToTag# [sat_s2m4Y]; }
              of
              a#_s2m4Z
              { __DEFAULT ->
                    case
                        case d_s2m4U of sat_s2m50 { __DEFAULT -> dataToTag# [sat_s2m50]; }
                    of
                    d#_s2m51
                    { __DEFAULT ->
                          case -# [d#_s2m51 a#_s2m4Z] of sat_s2m52 {
                            __DEFAULT -> GHC.Types.I# [sat_s2m52];
                          };
                    };
              };
        };

GHC.Unicode.$fIxGeneralCategory_$cinRange
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s2m53 c_s2m54]
        case ds_s2m53 of {
          (,) a_s2m56 [Occ=Once] b_s2m57 [Occ=Once] ->
              case
                  case a_s2m56 of sat_s2m58 { __DEFAULT -> dataToTag# [sat_s2m58]; }
              of
              a#_s2m59
              { __DEFAULT ->
                    case
                        case b_s2m57 of sat_s2m5a { __DEFAULT -> dataToTag# [sat_s2m5a]; }
                    of
                    b#_s2m5b
                    { __DEFAULT ->
                          case
                              case c_s2m54 of sat_s2m5c { __DEFAULT -> dataToTag# [sat_s2m5c]; }
                          of
                          c#_s2m5d
                          { __DEFAULT ->
                                case >=# [c#_s2m5d a#_s2m59] of {
                                  __DEFAULT -> GHC.Types.False [];
                                  1# ->
                                      case <=# [c#_s2m5d b#_s2m5b] of sat_s2m5f {
                                        __DEFAULT -> tagToEnum# [sat_s2m5f];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.$w$crange [InlPrag=NOUSERINLINE[0]]
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_s2m5g ww1_s2m5h]
        case
            case ww_s2m5g of sat_s2m5i { __DEFAULT -> dataToTag# [sat_s2m5i]; }
        of
        a#_s2m5j
        { __DEFAULT ->
              case
                  case ww1_s2m5h of sat_s2m5k {
                    __DEFAULT -> dataToTag# [sat_s2m5k];
                  }
              of
              b#_s2m5l
              { __DEFAULT ->
                    case ># [a#_s2m5j b#_s2m5l] of {
                      __DEFAULT ->
                          let {
                            go_s2m5n [Occ=LoopBreaker]
                              :: GHC.Prim.Int# -> [GHC.Unicode.GeneralCategory]
                            [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
                                sat-only [b#_s2m5l go_s2m5n] \r [x_s2m5o]
                                    let {
                                      sat_s2m5s [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                      [LclId] =
                                          [b#_s2m5l go_s2m5n x_s2m5o] \u []
                                              case ==# [x_s2m5o b#_s2m5l] of {
                                                __DEFAULT ->
                                                    case +# [x_s2m5o 1#] of sat_s2m5r {
                                                      __DEFAULT -> go_s2m5n sat_s2m5r;
                                                    };
                                                1# -> [] [];
                                              }; } in
                                    let {
                                      sat_s2m5p [Occ=Once] :: GHC.Unicode.GeneralCategory
                                      [LclId] =
                                          [x_s2m5o] \u [] tagToEnum# [x_s2m5o];
                                    } in  : [sat_s2m5p sat_s2m5s];
                          } in  go_s2m5n a#_s2m5j;
                      1# -> [] [];
                    };
              };
        };

GHC.Unicode.$fIxGeneralCategory_$crange [InlPrag=NOUSERINLINE[0]]
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> [GHC.Unicode.GeneralCategory]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(U,U)>,
 Unf=OtherCon []] =
    [] \r [w_s2m5t]
        case w_s2m5t of {
          (,) ww1_s2m5v [Occ=Once] ww2_s2m5w [Occ=Once] ->
              GHC.Unicode.$w$crange ww1_s2m5v ww2_s2m5w;
        };

GHC.Unicode.$fIxGeneralCategory_$crangeSize [InlPrag=NOUSERINLINE[0]]
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(U,U)>m,
 Unf=OtherCon []] =
    [] \r [w_s2m5x]
        case w_s2m5x of {
          (,) ww1_s2m5z [Occ=Once] ww2_s2m5A [Occ=Once] ->
              case
                  case ww1_s2m5z of sat_s2m5B {
                    __DEFAULT -> dataToTag# [sat_s2m5B];
                  }
              of
              a#_s2m5C
              { __DEFAULT ->
                    case
                        case ww2_s2m5A of sat_s2m5D {
                          __DEFAULT -> dataToTag# [sat_s2m5D];
                        }
                    of
                    b#_s2m5E
                    { __DEFAULT ->
                          case >=# [b#_s2m5E a#_s2m5C] of {
                            __DEFAULT -> GHC.Unicode.$fShowGeneralCategory1;
                            1# ->
                                case -# [b#_s2m5E a#_s2m5C] of sat_s2m5G {
                                  __DEFAULT ->
                                      case +# [sat_s2m5G 1#] of sat_s2m5H {
                                        __DEFAULT -> GHC.Types.I# [sat_s2m5H];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.$fIxGeneralCategory_$cunsafeRangeSize
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(U,U)>m,
 Unf=OtherCon []] =
    [] \r [b_s2m5I]
        case b_s2m5I of {
          (,) _l_s2m5K [Occ=Once] h_s2m5L [Occ=Once] ->
              case
                  case _l_s2m5K of sat_s2m5M { __DEFAULT -> dataToTag# [sat_s2m5M]; }
              of
              a#_s2m5N
              { __DEFAULT ->
                    case
                        case h_s2m5L of sat_s2m5O { __DEFAULT -> dataToTag# [sat_s2m5O]; }
                    of
                    d#_s2m5P
                    { __DEFAULT ->
                          case -# [d#_s2m5P a#_s2m5N] of sat_s2m5Q {
                            __DEFAULT ->
                                case +# [sat_s2m5Q 1#] of sat_s2m5R {
                                  __DEFAULT -> GHC.Types.I# [sat_s2m5R];
                                };
                          };
                    };
              };
        };

GHC.Unicode.$fIxGeneralCategory_$cindex [InlPrag=INLINE (sat-args=2)]
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Int
[GblId, Arity=2, Str=<S(SS),1*U(U,U)><S,U>m, Unf=OtherCon []] =
    [] \r [eta_s2m5S eta1_s2m5T]
        case eta_s2m5S of {
          (,) a_s2m5V [Occ=Once] b_s2m5W [Occ=Once] ->
              case
                  case a_s2m5V of sat_s2m5X { __DEFAULT -> dataToTag# [sat_s2m5X]; }
              of
              a#_s2m5Y
              { __DEFAULT ->
                    case
                        case b_s2m5W of sat_s2m5Z { __DEFAULT -> dataToTag# [sat_s2m5Z]; }
                    of
                    b#_s2m60
                    { __DEFAULT ->
                          case
                              case eta1_s2m5T of sat_s2m61 {
                                __DEFAULT -> dataToTag# [sat_s2m61];
                              }
                          of
                          c#_s2m62
                          { __DEFAULT ->
                                case >=# [c#_s2m62 a#_s2m5Y] of {
                                  __DEFAULT -> GHC.Arr.hopelessIndexError;
                                  1# ->
                                      case <=# [c#_s2m62 b#_s2m60] of {
                                        __DEFAULT -> GHC.Arr.hopelessIndexError;
                                        1# ->
                                            case -# [c#_s2m62 a#_s2m5Y] of sat_s2m65 {
                                              __DEFAULT -> GHC.Types.I# [sat_s2m65];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.$fIxGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Arr.Ix GHC.Unicode.GeneralCategory
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Arr.C:Ix! [GHC.Unicode.$fOrdGeneralCategory
                                 GHC.Unicode.$fIxGeneralCategory_$crange
                                 GHC.Unicode.$fIxGeneralCategory_$cindex
                                 GHC.Unicode.$fIxGeneralCategory_$cunsafeIndex
                                 GHC.Unicode.$fIxGeneralCategory_$cinRange
                                 GHC.Unicode.$fIxGeneralCategory_$crangeSize
                                 GHC.Unicode.$fIxGeneralCategory_$cunsafeRangeSize];

GHC.Unicode.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

loc_r2j70 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Unicode.$trModule4;

GHC.Unicode.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Unicode"#;

loc1_r2j71 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Unicode.$trModule2;

loc2_r2j72 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "./GHC/Unicode.hs"#;

loc3_r2j73 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# loc2_r2j72;

loc4_r2j74 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [135#];

loc5_r2j75 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [20#];

loc6_r2j76 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [24#];

$dIP_r2j77 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "error"#;

$dIP1_r2j78 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# $dIP_r2j77;

$dIP2_r2j79 :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [loc_r2j70
                                           loc1_r2j71
                                           loc3_r2j73
                                           loc4_r2j74
                                           loc5_r2j75
                                           loc4_r2j74
                                           loc6_r2j76];

$dIP3_r2j7a :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [$dIP1_r2j78
                                                  $dIP2_r2j79
                                                  GHC.Stack.Types.EmptyCallStack];

lvl60_r2j7b :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    ") is outside of enumeration's range (0,"#;

lvl61_r2j7c :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    ")"#;

lvl62_r2j7d :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl61_r2j7c;

lvl63_r2j7e :: [GHC.Types.Char]
[GblId] =
    [] \u []
        case GHC.Show.$wshowSignedInt 0# 29# lvl62_r2j7d of {
          (#,#) ww5_s2m67 [Occ=Once] ww6_s2m68 [Occ=Once] ->
              : [ww5_s2m67 ww6_s2m68];
        };

lvl64_r2j7f :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackAppendCString# lvl60_r2j7b lvl63_r2j7e;

lvl65_r2j7g :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "toEnum{GeneralCategory}: tag ("#;

GHC.Unicode.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int# -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<B,U>x, Unf=OtherCon []] =
    [] \r [ww_s2m69]
        let {
          sat_s2m6d [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [ww_s2m69] \u []
                  case GHC.Show.$wshowSignedInt 0# ww_s2m69 lvl64_r2j7f of {
                    (#,#) ww5_s2m6b [Occ=Once] ww6_s2m6c [Occ=Once] ->
                        : [ww5_s2m6b ww6_s2m6c];
                  };
        } in 
          case
              GHC.CString.unpackAppendCString# lvl65_r2j7g sat_s2m6d
          of
          sat_s2m6e
          { __DEFAULT -> GHC.Err.error $dIP3_r2j7a sat_s2m6e;
          };

GHC.Unicode.$w$ctoEnum [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int# -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s2m6f]
        case >=# [ww_s2m6f 0#] of {
          __DEFAULT -> GHC.Unicode.$wlvl ww_s2m6f;
          1# ->
              case <=# [ww_s2m6f 29#] of {
                __DEFAULT -> GHC.Unicode.$wlvl ww_s2m6f;
                1# -> tagToEnum# [ww_s2m6f];
              };
        };

GHC.Unicode.$fEnumGeneralCategory_$ctoEnum [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s2m6i]
        case w_s2m6i of {
          GHC.Types.I# ww1_s2m6k [Occ=Once] ->
              GHC.Unicode.$w$ctoEnum ww1_s2m6k;
        };

GHC.Unicode.$fEnumGeneralCategory_go [Occ=LoopBreaker]
  :: GHC.Prim.Int# -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>m2, Unf=OtherCon []] =
    [] \r [x_s2m6l]
        let {
          sat_s2m6p [Occ=Once] :: [GHC.Unicode.GeneralCategory]
          [LclId] =
              [x_s2m6l] \u []
                  case x_s2m6l of wild_s2m6n {
                    __DEFAULT ->
                        case +# [wild_s2m6n 1#] of sat_s2m6o {
                          __DEFAULT -> GHC.Unicode.$fEnumGeneralCategory_go sat_s2m6o;
                        };
                    29# -> [] [];
                  }; } in
        let {
          sat_s2m6m [Occ=Once] :: GHC.Unicode.GeneralCategory
          [LclId] =
              [x_s2m6l] \u [] tagToEnum# [x_s2m6l];
        } in  : [sat_s2m6m sat_s2m6p];

GHC.Unicode.$fEnumGeneralCategory_$cenumFrom
  :: GHC.Unicode.GeneralCategory -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [a_s2m6q]
        case
            case a_s2m6q of sat_s2m6r { __DEFAULT -> dataToTag# [sat_s2m6r]; }
        of
        a#_s2m6s
        { __DEFAULT ->
              case ># [a#_s2m6s 29#] of {
                __DEFAULT -> GHC.Unicode.$fEnumGeneralCategory_go a#_s2m6s;
                1# -> [] [];
              };
        };

GHC.Unicode.$fEnumGeneralCategory_$cenumFromThen
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2m6u b_s2m6v]
        case
            case a_s2m6u of sat_s2m6w { __DEFAULT -> dataToTag# [sat_s2m6w]; }
        of
        a#_s2m6x
        { __DEFAULT ->
              case
                  case b_s2m6v of sat_s2m6y { __DEFAULT -> dataToTag# [sat_s2m6y]; }
              of
              b#_s2m6z
              { __DEFAULT ->
                    case ># [a#_s2m6x b#_s2m6z] of {
                      __DEFAULT ->
                          case >=# [b#_s2m6z a#_s2m6x] of {
                            __DEFAULT ->
                                case ># [29# b#_s2m6z] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2m6N [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2m6x b#_s2m6z] \u []
                                                case
                                                    -# [b#_s2m6z a#_s2m6x]
                                                of
                                                delta_s2m6E [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [29# delta_s2m6E]
                                                      of
                                                      y'_s2m6F [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_dn_s2m6G [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2m6E
                                                                            y'_s2m6F
                                                                            go_dn_s2m6G] \r [x_s2m6H]
                                                                      case
                                                                          <# [x_s2m6H y'_s2m6F]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2m6L [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2m6E
                                                                                   go_dn_s2m6G
                                                                                   x_s2m6H] \u []
                                                                                      case
                                                                                          +# [x_s2m6H
                                                                                              delta_s2m6E]
                                                                                      of
                                                                                      sat_s2m6K
                                                                                      { __DEFAULT ->
                                                                                            go_dn_s2m6G
                                                                                                sat_s2m6K;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2m6J [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2m6H] \u []
                                                                                      tagToEnum# [x_s2m6H];
                                                                            } in 
                                                                              : [sat_s2m6J
                                                                                 sat_s2m6L];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2m6M [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2m6H] \u []
                                                                                      tagToEnum# [x_s2m6H];
                                                                            } in 
                                                                              : [sat_s2m6M
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_dn_s2m6G b#_s2m6z;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2m6D [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2m6x] \u [] tagToEnum# [a#_s2m6x];
                                      } in  : [sat_s2m6D sat_s2m6N];
                                  1# ->
                                      case ># [29# a#_s2m6x] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2m6P [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2m6x] \u [] tagToEnum# [a#_s2m6x];
                                            } in  : [sat_s2m6P GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                            1# ->
                                case <# [29# b#_s2m6z] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2m71 [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2m6x b#_s2m6z] \u []
                                                case
                                                    -# [b#_s2m6z a#_s2m6x]
                                                of
                                                delta_s2m6S [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [29# delta_s2m6S]
                                                      of
                                                      y'_s2m6T [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_up_s2m6U [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2m6S
                                                                            y'_s2m6T
                                                                            go_up_s2m6U] \r [x_s2m6V]
                                                                      case
                                                                          ># [x_s2m6V y'_s2m6T]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2m6Z [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2m6S
                                                                                   go_up_s2m6U
                                                                                   x_s2m6V] \u []
                                                                                      case
                                                                                          +# [x_s2m6V
                                                                                              delta_s2m6S]
                                                                                      of
                                                                                      sat_s2m6Y
                                                                                      { __DEFAULT ->
                                                                                            go_up_s2m6U
                                                                                                sat_s2m6Y;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2m6X [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2m6V] \u []
                                                                                      tagToEnum# [x_s2m6V];
                                                                            } in 
                                                                              : [sat_s2m6X
                                                                                 sat_s2m6Z];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2m70 [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2m6V] \u []
                                                                                      tagToEnum# [x_s2m6V];
                                                                            } in 
                                                                              : [sat_s2m70
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_up_s2m6U b#_s2m6z;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2m6R [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2m6x] \u [] tagToEnum# [a#_s2m6x];
                                      } in  : [sat_s2m6R sat_s2m71];
                                  1# ->
                                      case <# [29# a#_s2m6x] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2m73 [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2m6x] \u [] tagToEnum# [a#_s2m6x];
                                            } in  : [sat_s2m73 GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                          };
                      1# ->
                          case >=# [b#_s2m6z a#_s2m6x] of {
                            __DEFAULT ->
                                case ># [0# b#_s2m6z] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2m7g [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2m6x b#_s2m6z] \u []
                                                case
                                                    -# [b#_s2m6z a#_s2m6x]
                                                of
                                                delta_s2m77 [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [0# delta_s2m77]
                                                      of
                                                      y'_s2m78 [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_dn_s2m79 [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2m77
                                                                            y'_s2m78
                                                                            go_dn_s2m79] \r [x_s2m7a]
                                                                      case
                                                                          <# [x_s2m7a y'_s2m78]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2m7e [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2m77
                                                                                   go_dn_s2m79
                                                                                   x_s2m7a] \u []
                                                                                      case
                                                                                          +# [x_s2m7a
                                                                                              delta_s2m77]
                                                                                      of
                                                                                      sat_s2m7d
                                                                                      { __DEFAULT ->
                                                                                            go_dn_s2m79
                                                                                                sat_s2m7d;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2m7c [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2m7a] \u []
                                                                                      tagToEnum# [x_s2m7a];
                                                                            } in 
                                                                              : [sat_s2m7c
                                                                                 sat_s2m7e];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2m7f [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2m7a] \u []
                                                                                      tagToEnum# [x_s2m7a];
                                                                            } in 
                                                                              : [sat_s2m7f
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_dn_s2m79 b#_s2m6z;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2m76 [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2m6x] \u [] tagToEnum# [a#_s2m6x];
                                      } in  : [sat_s2m76 sat_s2m7g];
                                  1# ->
                                      case ># [0# a#_s2m6x] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2m7i [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2m6x] \u [] tagToEnum# [a#_s2m6x];
                                            } in  : [sat_s2m7i GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                            1# ->
                                case <# [0# b#_s2m6z] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2m7u [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2m6x b#_s2m6z] \u []
                                                case
                                                    -# [b#_s2m6z a#_s2m6x]
                                                of
                                                delta_s2m7l [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [0# delta_s2m7l]
                                                      of
                                                      y'_s2m7m [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_up_s2m7n [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2m7l
                                                                            y'_s2m7m
                                                                            go_up_s2m7n] \r [x_s2m7o]
                                                                      case
                                                                          ># [x_s2m7o y'_s2m7m]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2m7s [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2m7l
                                                                                   go_up_s2m7n
                                                                                   x_s2m7o] \u []
                                                                                      case
                                                                                          +# [x_s2m7o
                                                                                              delta_s2m7l]
                                                                                      of
                                                                                      sat_s2m7r
                                                                                      { __DEFAULT ->
                                                                                            go_up_s2m7n
                                                                                                sat_s2m7r;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2m7q [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2m7o] \u []
                                                                                      tagToEnum# [x_s2m7o];
                                                                            } in 
                                                                              : [sat_s2m7q
                                                                                 sat_s2m7s];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2m7t [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2m7o] \u []
                                                                                      tagToEnum# [x_s2m7o];
                                                                            } in 
                                                                              : [sat_s2m7t
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_up_s2m7n b#_s2m6z;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2m7k [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2m6x] \u [] tagToEnum# [a#_s2m6x];
                                      } in  : [sat_s2m7k sat_s2m7u];
                                  1# ->
                                      case <# [0# a#_s2m6x] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2m7w [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2m6x] \u [] tagToEnum# [a#_s2m6x];
                                            } in  : [sat_s2m7w GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$trModule4];

GHC.Unicode.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$trModule2];

GHC.Unicode.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Unicode.$trModule3
                                     GHC.Unicode.$trModule1];

GHC.Unicode.$tcGeneralCategory2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GeneralCategory"#;

GHC.Unicode.$tcGeneralCategory1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tcGeneralCategory2];

GHC.Unicode.$tcGeneralCategory :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10145990250269206894##
                                    14660269375011335890##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tcGeneralCategory1
                                    0#
                                    GHC.Types.krep$*];

GHC.Unicode.$tc'ClosePunctuation1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Unicode.$tcGeneralCategory
                                              GHC.Types.[]];

GHC.Unicode.$tc'UppercaseLetter2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'UppercaseLetter"#;

GHC.Unicode.$tc'UppercaseLetter1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'UppercaseLetter2];

GHC.Unicode.$tc'UppercaseLetter :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14647285109492872061##
                                    14425225614845259385##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'UppercaseLetter1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'LowercaseLetter2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'LowercaseLetter"#;

GHC.Unicode.$tc'LowercaseLetter1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'LowercaseLetter2];

GHC.Unicode.$tc'LowercaseLetter :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6843638521722139917##
                                    11845029203120951590##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'LowercaseLetter1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'TitlecaseLetter2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'TitlecaseLetter"#;

GHC.Unicode.$tc'TitlecaseLetter1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'TitlecaseLetter2];

GHC.Unicode.$tc'TitlecaseLetter :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11035134207864173010##
                                    10162510539839760824##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'TitlecaseLetter1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'ModifierLetter2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ModifierLetter"#;

GHC.Unicode.$tc'ModifierLetter1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'ModifierLetter2];

GHC.Unicode.$tc'ModifierLetter :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9531845544999081993##
                                    15142721146394159202##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'ModifierLetter1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'OtherLetter2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OtherLetter"#;

GHC.Unicode.$tc'OtherLetter1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'OtherLetter2];

GHC.Unicode.$tc'OtherLetter :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4852466454551376074##
                                    478150797319163725##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'OtherLetter1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'NonSpacingMark2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'NonSpacingMark"#;

GHC.Unicode.$tc'NonSpacingMark1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'NonSpacingMark2];

GHC.Unicode.$tc'NonSpacingMark :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11798799283128539890##
                                    8595267121230037978##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'NonSpacingMark1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'SpacingCombiningMark2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'SpacingCombiningMark"#;

GHC.Unicode.$tc'SpacingCombiningMark1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'SpacingCombiningMark2];

GHC.Unicode.$tc'SpacingCombiningMark :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [161806050746895686##
                                    6274417789988196957##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'SpacingCombiningMark1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'EnclosingMark2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EnclosingMark"#;

GHC.Unicode.$tc'EnclosingMark1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'EnclosingMark2];

GHC.Unicode.$tc'EnclosingMark :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [18110486507519489617##
                                    1830565827398073667##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'EnclosingMark1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'DecimalNumber2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'DecimalNumber"#;

GHC.Unicode.$tc'DecimalNumber1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'DecimalNumber2];

GHC.Unicode.$tc'DecimalNumber :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7339032513903136575##
                                    4295356444207098462##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'DecimalNumber1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'LetterNumber2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'LetterNumber"#;

GHC.Unicode.$tc'LetterNumber1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'LetterNumber2];

GHC.Unicode.$tc'LetterNumber :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10629256336866531923##
                                    16896950428492761972##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'LetterNumber1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'OtherNumber2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OtherNumber"#;

GHC.Unicode.$tc'OtherNumber1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'OtherNumber2];

GHC.Unicode.$tc'OtherNumber :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10187389108931559810##
                                    2377339607923931442##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'OtherNumber1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'ConnectorPunctuation2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ConnectorPunctuation"#;

GHC.Unicode.$tc'ConnectorPunctuation1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'ConnectorPunctuation2];

GHC.Unicode.$tc'ConnectorPunctuation :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4917643529853318260##
                                    11665519332165151523##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'ConnectorPunctuation1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'DashPunctuation2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'DashPunctuation"#;

GHC.Unicode.$tc'DashPunctuation1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'DashPunctuation2];

GHC.Unicode.$tc'DashPunctuation :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10309144240368445329##
                                    13155144127162508040##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'DashPunctuation1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'OpenPunctuation2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OpenPunctuation"#;

GHC.Unicode.$tc'OpenPunctuation1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'OpenPunctuation2];

GHC.Unicode.$tc'OpenPunctuation :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11156540492509602203##
                                    14579738194966332373##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'OpenPunctuation1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'ClosePunctuation3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ClosePunctuation"#;

GHC.Unicode.$tc'ClosePunctuation2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'ClosePunctuation3];

GHC.Unicode.$tc'ClosePunctuation :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2732552725164352280##
                                    2123618155201944931##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'ClosePunctuation2
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'InitialQuote2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'InitialQuote"#;

GHC.Unicode.$tc'InitialQuote1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'InitialQuote2];

GHC.Unicode.$tc'InitialQuote :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15372309041196331722##
                                    15030215702152843543##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'InitialQuote1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'FinalQuote2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'FinalQuote"#;

GHC.Unicode.$tc'FinalQuote1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'FinalQuote2];

GHC.Unicode.$tc'FinalQuote :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7492133048483711520##
                                    4486297505861009288##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'FinalQuote1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'OtherPunctuation2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OtherPunctuation"#;

GHC.Unicode.$tc'OtherPunctuation1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'OtherPunctuation2];

GHC.Unicode.$tc'OtherPunctuation :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17526727746027692027##
                                    9970963912577062569##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'OtherPunctuation1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'MathSymbol2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'MathSymbol"#;

GHC.Unicode.$tc'MathSymbol1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'MathSymbol2];

GHC.Unicode.$tc'MathSymbol :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4306295684901311676##
                                    14195098983421669147##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'MathSymbol1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'CurrencySymbol2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CurrencySymbol"#;

GHC.Unicode.$tc'CurrencySymbol1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'CurrencySymbol2];

GHC.Unicode.$tc'CurrencySymbol :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [150101909358894799##
                                    4247883766619991310##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'CurrencySymbol1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'ModifierSymbol2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ModifierSymbol"#;

GHC.Unicode.$tc'ModifierSymbol1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'ModifierSymbol2];

GHC.Unicode.$tc'ModifierSymbol :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17930136738185325280##
                                    9680003641195432205##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'ModifierSymbol1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'OtherSymbol2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OtherSymbol"#;

GHC.Unicode.$tc'OtherSymbol1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'OtherSymbol2];

GHC.Unicode.$tc'OtherSymbol :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11720563220218392367##
                                    765393478666748433##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'OtherSymbol1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'Space2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Space"#;

GHC.Unicode.$tc'Space1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'Space2];

GHC.Unicode.$tc'Space :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13451262004661357021##
                                    7623263649021992415##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'Space1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'LineSeparator2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'LineSeparator"#;

GHC.Unicode.$tc'LineSeparator1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'LineSeparator2];

GHC.Unicode.$tc'LineSeparator :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3777504190602031786##
                                    16534792546094157357##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'LineSeparator1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'ParagraphSeparator2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ParagraphSeparator"#;

GHC.Unicode.$tc'ParagraphSeparator1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'ParagraphSeparator2];

GHC.Unicode.$tc'ParagraphSeparator :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [1259977240315406014##
                                    6836752952671088565##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'ParagraphSeparator1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'Control2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Control"#;

GHC.Unicode.$tc'Control1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'Control2];

GHC.Unicode.$tc'Control :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3769799789009110362##
                                    7129109849289868145##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'Control1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'Format2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Format"#;

GHC.Unicode.$tc'Format1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'Format2];

GHC.Unicode.$tc'Format :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15516392160505082493##
                                    8582194312248021938##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'Format1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'Surrogate2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Surrogate"#;

GHC.Unicode.$tc'Surrogate1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'Surrogate2];

GHC.Unicode.$tc'Surrogate :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8891432866311764671##
                                    15154926068870472193##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'Surrogate1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'PrivateUse2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'PrivateUse"#;

GHC.Unicode.$tc'PrivateUse1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'PrivateUse2];

GHC.Unicode.$tc'PrivateUse :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9277443220957795657##
                                    16819524490051355354##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'PrivateUse1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'NotAssigned2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'NotAssigned"#;

GHC.Unicode.$tc'NotAssigned1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'NotAssigned2];

GHC.Unicode.$tc'NotAssigned :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6894305772705953782##
                                    14217837899895516928##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'NotAssigned1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.toLower [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Char
[GblId, Arity=1, Str=<S(S),1*U(U)>m, Unf=OtherCon []] =
    [] \r [w_s2m7x]
        case w_s2m7x of {
          GHC.Types.C# ww1_s2m7z [Occ=Once] ->
              case ord# [ww1_s2m7z] of sat_s2m7B {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2m7B GHC.Prim.realWorld#] of {
                      (#,#) _ [Occ=Dead] ds1_s2m7E ->
                          case int2Word# [ds1_s2m7E] of sat_s2m7F {
                            __DEFAULT ->
                                case leWord# [sat_s2m7F 1114111##] of {
                                  __DEFAULT -> GHC.Char.$wlvl ds1_s2m7E;
                                  1# ->
                                      case chr# [ds1_s2m7E] of sat_s2m7H {
                                        __DEFAULT -> GHC.Types.C# [sat_s2m7H];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.toUpper [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Char
[GblId, Arity=1, Str=<S(S),1*U(U)>m, Unf=OtherCon []] =
    [] \r [w_s2m7I]
        case w_s2m7I of {
          GHC.Types.C# ww1_s2m7K [Occ=Once] ->
              case ord# [ww1_s2m7K] of sat_s2m7M {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2m7M GHC.Prim.realWorld#] of {
                      (#,#) _ [Occ=Dead] ds1_s2m7P ->
                          case int2Word# [ds1_s2m7P] of sat_s2m7Q {
                            __DEFAULT ->
                                case leWord# [sat_s2m7Q 1114111##] of {
                                  __DEFAULT -> GHC.Char.$wlvl ds1_s2m7P;
                                  1# ->
                                      case chr# [ds1_s2m7P] of sat_s2m7S {
                                        __DEFAULT -> GHC.Types.C# [sat_s2m7S];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.toTitle [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Char
[GblId, Arity=1, Str=<S(S),1*U(U)>m, Unf=OtherCon []] =
    [] \r [w_s2m7T]
        case w_s2m7T of {
          GHC.Types.C# ww1_s2m7V [Occ=Once] ->
              case ord# [ww1_s2m7V] of sat_s2m7X {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2m7X GHC.Prim.realWorld#] of {
                      (#,#) _ [Occ=Dead] ds1_s2m80 ->
                          case int2Word# [ds1_s2m80] of sat_s2m81 {
                            __DEFAULT ->
                                case leWord# [sat_s2m81 1114111##] of {
                                  __DEFAULT -> GHC.Char.$wlvl ds1_s2m80;
                                  1# ->
                                      case chr# [ds1_s2m80] of sat_s2m83 {
                                        __DEFAULT -> GHC.Types.C# [sat_s2m83];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.wgencat :: GHC.Types.Int -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s2m84]
        case ds_s2m84 of {
          GHC.Types.I# ds2_s2m86 [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [ds2_s2m86 GHC.Prim.realWorld#] of {
                (#,#) _ [Occ=Dead] ds4_s2m8a [Occ=Once] ->
                    GHC.Types.I# [ds4_s2m8a];
              };
        };

GHC.Unicode.isAsciiUpper :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2m8b]
        case c_s2m8b of {
          GHC.Types.C# c1_s2m8d ->
              case geChar# [c1_s2m8d 'A'#] of {
                __DEFAULT -> GHC.Types.False [];
                1# ->
                    case leChar# [c1_s2m8d 'Z'#] of sat_s2m8f {
                      __DEFAULT -> tagToEnum# [sat_s2m8f];
                    };
              };
        };

GHC.Unicode.isAsciiLower :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2m8g]
        case c_s2m8g of {
          GHC.Types.C# c1_s2m8i ->
              case geChar# [c1_s2m8i 'a'#] of {
                __DEFAULT -> GHC.Types.False [];
                1# ->
                    case leChar# [c1_s2m8i 'z'#] of sat_s2m8k {
                      __DEFAULT -> tagToEnum# [sat_s2m8k];
                    };
              };
        };

GHC.Unicode.isLatin1 :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2m8l]
        case c_s2m8l of {
          GHC.Types.C# c1_s2m8n [Occ=Once] ->
              case leChar# [c1_s2m8n '\255'#] of sat_s2m8o {
                __DEFAULT -> tagToEnum# [sat_s2m8o];
              };
        };

GHC.Unicode.isAscii :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2m8p]
        case c_s2m8p of {
          GHC.Types.C# c1_s2m8r [Occ=Once] ->
              case ltChar# [c1_s2m8r '\128'#] of sat_s2m8s {
                __DEFAULT -> tagToEnum# [sat_s2m8s];
              };
        };

GHC.Unicode.isOctDigit :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2m8t]
        case c_s2m8t of {
          GHC.Types.C# c#_s2m8v [Occ=Once] ->
              case ord# [c#_s2m8v] of sat_s2m8w {
                __DEFAULT ->
                    case -# [sat_s2m8w 48#] of sat_s2m8x {
                      __DEFAULT ->
                          case int2Word# [sat_s2m8x] of sat_s2m8y {
                            __DEFAULT ->
                                case leWord# [sat_s2m8y 7##] of sat_s2m8z {
                                  __DEFAULT -> tagToEnum# [sat_s2m8z];
                                };
                          };
                    };
              };
        };

GHC.Unicode.isDigit :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2m8A]
        case c_s2m8A of {
          GHC.Types.C# c#_s2m8C [Occ=Once] ->
              case ord# [c#_s2m8C] of sat_s2m8D {
                __DEFAULT ->
                    case -# [sat_s2m8D 48#] of sat_s2m8E {
                      __DEFAULT ->
                          case int2Word# [sat_s2m8E] of sat_s2m8F {
                            __DEFAULT ->
                                case leWord# [sat_s2m8F 9##] of sat_s2m8G {
                                  __DEFAULT -> tagToEnum# [sat_s2m8G];
                                };
                          };
                    };
              };
        };

GHC.Unicode.isHexDigit :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2m8H]
        case c_s2m8H of {
          GHC.Types.C# c#_s2m8J ->
              case ord# [c#_s2m8J] of sat_s2m8K {
                __DEFAULT ->
                    case -# [sat_s2m8K 48#] of sat_s2m8L {
                      __DEFAULT ->
                          case int2Word# [sat_s2m8L] of sat_s2m8M {
                            __DEFAULT ->
                                case leWord# [sat_s2m8M 9##] of {
                                  __DEFAULT ->
                                      case ord# [c#_s2m8J] of sat_s2m8O {
                                        __DEFAULT ->
                                            case -# [sat_s2m8O 65#] of sat_s2m8P {
                                              __DEFAULT ->
                                                  case int2Word# [sat_s2m8P] of sat_s2m8Q {
                                                    __DEFAULT ->
                                                        case leWord# [sat_s2m8Q 5##] of {
                                                          __DEFAULT ->
                                                              case ord# [c#_s2m8J] of sat_s2m8S {
                                                                __DEFAULT ->
                                                                    case
                                                                        -# [sat_s2m8S 97#]
                                                                    of
                                                                    sat_s2m8T
                                                                    { __DEFAULT ->
                                                                          case
                                                                              int2Word# [sat_s2m8T]
                                                                          of
                                                                          sat_s2m8U
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    leWord# [sat_s2m8U
                                                                                             5##]
                                                                                of
                                                                                sat_s2m8V
                                                                                { __DEFAULT ->
                                                                                      tagToEnum# [sat_s2m8V];
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                          1# -> GHC.Types.True [];
                                                        };
                                                  };
                                            };
                                      };
                                  1# -> GHC.Types.True [];
                                };
                          };
                    };
              };
        };

GHC.Unicode.isLower :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2m8W]
        case c_s2m8W of {
          GHC.Types.C# c#_s2m8Y [Occ=Once] ->
              case ord# [c#_s2m8Y] of sat_s2m90 {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2m90 GHC.Prim.realWorld#] of {
                      (#,#) _ [Occ=Dead] ds1_s2m93 [Occ=Once!] ->
                          case ds1_s2m93 of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

lvl66_r2j7h :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "succ{GeneralCategory}: tried to take `succ' of last tag in enumeration"#;

GHC.Unicode.$fEnumGeneralCategory2 :: GHC.Unicode.GeneralCategory
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl66_r2j7h of sat_s2m95 {
          __DEFAULT -> GHC.Err.error $dIP3_r2j7a sat_s2m95;
        };

GHC.Unicode.$fEnumGeneralCategory_$csucc
  :: GHC.Unicode.GeneralCategory -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [a_s2m96]
        case a_s2m96 of x1_s2m97 {
          __DEFAULT ->
              case dataToTag# [x1_s2m97] of a#_s2m98 {
                __DEFAULT ->
                    case +# [a#_s2m98 1#] of sat_s2m99 {
                      __DEFAULT -> tagToEnum# [sat_s2m99];
                    };
              };
          GHC.Unicode.NotAssigned -> GHC.Unicode.$fEnumGeneralCategory2;
        };

lvl67_r2j7i :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "pred{GeneralCategory}: tried to take `pred' of first tag in enumeration"#;

GHC.Unicode.$fEnumGeneralCategory1 :: GHC.Unicode.GeneralCategory
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl67_r2j7i of sat_s2m9a {
          __DEFAULT -> GHC.Err.error $dIP3_r2j7a sat_s2m9a;
        };

GHC.Unicode.$fEnumGeneralCategory_$cpred
  :: GHC.Unicode.GeneralCategory -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [a_s2m9b]
        case a_s2m9b of x1_s2m9c {
          __DEFAULT ->
              case dataToTag# [x1_s2m9c] of a#_s2m9d {
                __DEFAULT ->
                    case +# [a#_s2m9d -1#] of sat_s2m9e {
                      __DEFAULT -> tagToEnum# [sat_s2m9e];
                    };
              };
          GHC.Unicode.UppercaseLetter -> GHC.Unicode.$fEnumGeneralCategory1;
        };

GHC.Unicode.$fEnumGeneralCategory_$cenumFromTo
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [x_s2m9f y_s2m9g]
        case
            case x_s2m9f of sat_s2m9h { __DEFAULT -> dataToTag# [sat_s2m9h]; }
        of
        a#_s2m9i
        { __DEFAULT ->
              case
                  case y_s2m9g of sat_s2m9j { __DEFAULT -> dataToTag# [sat_s2m9j]; }
              of
              a#1_s2m9k
              { __DEFAULT ->
                    case ># [a#_s2m9i a#1_s2m9k] of {
                      __DEFAULT ->
                          let {
                            go_s2m9m [Occ=LoopBreaker]
                              :: GHC.Prim.Int# -> [GHC.Unicode.GeneralCategory]
                            [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
                                sat-only [a#1_s2m9k go_s2m9m] \r [x1_s2m9n]
                                    let {
                                      sat_s2m9t [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                      [LclId] =
                                          [a#1_s2m9k go_s2m9m x1_s2m9n] \u []
                                              case ==# [x1_s2m9n a#1_s2m9k] of {
                                                __DEFAULT ->
                                                    case +# [x1_s2m9n 1#] of sat_s2m9s {
                                                      __DEFAULT -> go_s2m9m sat_s2m9s;
                                                    };
                                                1# -> [] [];
                                              }; } in
                                    let {
                                      sat_s2m9q [Occ=Once] :: GHC.Unicode.GeneralCategory
                                      [LclId] =
                                          [x1_s2m9n] \u []
                                              case >=# [x1_s2m9n 0#] of {
                                                __DEFAULT -> GHC.Unicode.$wlvl x1_s2m9n;
                                                1# ->
                                                    case <=# [x1_s2m9n 29#] of {
                                                      __DEFAULT -> GHC.Unicode.$wlvl x1_s2m9n;
                                                      1# -> tagToEnum# [x1_s2m9n];
                                                    };
                                              };
                                    } in  : [sat_s2m9q sat_s2m9t];
                          } in  go_s2m9m a#_s2m9i;
                      1# -> [] [];
                    };
              };
        };

GHC.Unicode.$fEnumGeneralCategory_$cenumFromThenTo
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory
     -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=3, Str=<S,U><S,U><S,U>, Unf=OtherCon []] =
    [] \r [x1_s2m9u x2_s2m9v y_s2m9w]
        case
            case x1_s2m9u of sat_s2m9x { __DEFAULT -> dataToTag# [sat_s2m9x]; }
        of
        a#_s2m9y
        { __DEFAULT ->
              case
                  case x2_s2m9v of sat_s2m9z { __DEFAULT -> dataToTag# [sat_s2m9z]; }
              of
              a#1_s2m9A
              { __DEFAULT ->
                    case
                        case y_s2m9w of sat_s2m9B { __DEFAULT -> dataToTag# [sat_s2m9B]; }
                    of
                    a#2_s2m9C
                    { __DEFAULT ->
                          case >=# [a#1_s2m9A a#_s2m9y] of {
                            __DEFAULT ->
                                case ># [a#2_s2m9C a#1_s2m9A] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2m9V [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2m9y a#1_s2m9A a#2_s2m9C] \u []
                                                case
                                                    -# [a#1_s2m9A a#_s2m9y]
                                                of
                                                delta_s2m9I [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [a#2_s2m9C delta_s2m9I]
                                                      of
                                                      y'_s2m9J [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_dn_s2m9K [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2m9I
                                                                            y'_s2m9J
                                                                            go_dn_s2m9K] \r [x_s2m9L]
                                                                      case
                                                                          <# [x_s2m9L y'_s2m9J]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2m9R [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2m9I
                                                                                   go_dn_s2m9K
                                                                                   x_s2m9L] \u []
                                                                                      case
                                                                                          +# [x_s2m9L
                                                                                              delta_s2m9I]
                                                                                      of
                                                                                      sat_s2m9Q
                                                                                      { __DEFAULT ->
                                                                                            go_dn_s2m9K
                                                                                                sat_s2m9Q;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2m9P [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2m9L] \u []
                                                                                      case
                                                                                          >=# [x_s2m9L
                                                                                               0#]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            GHC.Unicode.$wlvl
                                                                                                x_s2m9L;
                                                                                        1# ->
                                                                                            case
                                                                                                <=# [x_s2m9L
                                                                                                     29#]
                                                                                            of
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Unicode.$wlvl
                                                                                                      x_s2m9L;
                                                                                              1# ->
                                                                                                  tagToEnum# [x_s2m9L];
                                                                                            };
                                                                                      };
                                                                            } in 
                                                                              : [sat_s2m9P
                                                                                 sat_s2m9R];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2m9U [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2m9L] \u []
                                                                                      case
                                                                                          >=# [x_s2m9L
                                                                                               0#]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            GHC.Unicode.$wlvl
                                                                                                x_s2m9L;
                                                                                        1# ->
                                                                                            case
                                                                                                <=# [x_s2m9L
                                                                                                     29#]
                                                                                            of
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Unicode.$wlvl
                                                                                                      x_s2m9L;
                                                                                              1# ->
                                                                                                  tagToEnum# [x_s2m9L];
                                                                                            };
                                                                                      };
                                                                            } in 
                                                                              : [sat_s2m9U
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_dn_s2m9K a#1_s2m9A;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2m9H [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2m9y] \u []
                                                case >=# [a#_s2m9y 0#] of {
                                                  __DEFAULT -> GHC.Unicode.$wlvl a#_s2m9y;
                                                  1# ->
                                                      case <=# [a#_s2m9y 29#] of {
                                                        __DEFAULT -> GHC.Unicode.$wlvl a#_s2m9y;
                                                        1# -> tagToEnum# [a#_s2m9y];
                                                      };
                                                };
                                      } in  : [sat_s2m9H sat_s2m9V];
                                  1# ->
                                      case ># [a#2_s2m9C a#_s2m9y] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2m9Z [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2m9y] \u []
                                                      case >=# [a#_s2m9y 0#] of {
                                                        __DEFAULT -> GHC.Unicode.$wlvl a#_s2m9y;
                                                        1# ->
                                                            case <=# [a#_s2m9y 29#] of {
                                                              __DEFAULT ->
                                                                  GHC.Unicode.$wlvl a#_s2m9y;
                                                              1# -> tagToEnum# [a#_s2m9y];
                                                            };
                                                      };
                                            } in  : [sat_s2m9Z GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                            1# ->
                                case <# [a#2_s2m9C a#1_s2m9A] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2mah [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2m9y a#1_s2m9A a#2_s2m9C] \u []
                                                case
                                                    -# [a#1_s2m9A a#_s2m9y]
                                                of
                                                delta_s2ma4 [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [a#2_s2m9C delta_s2ma4]
                                                      of
                                                      y'_s2ma5 [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_up_s2ma6 [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2ma4
                                                                            y'_s2ma5
                                                                            go_up_s2ma6] \r [x_s2ma7]
                                                                      case
                                                                          ># [x_s2ma7 y'_s2ma5]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2mad [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2ma4
                                                                                   go_up_s2ma6
                                                                                   x_s2ma7] \u []
                                                                                      case
                                                                                          +# [x_s2ma7
                                                                                              delta_s2ma4]
                                                                                      of
                                                                                      sat_s2mac
                                                                                      { __DEFAULT ->
                                                                                            go_up_s2ma6
                                                                                                sat_s2mac;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2mab [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2ma7] \u []
                                                                                      case
                                                                                          >=# [x_s2ma7
                                                                                               0#]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            GHC.Unicode.$wlvl
                                                                                                x_s2ma7;
                                                                                        1# ->
                                                                                            case
                                                                                                <=# [x_s2ma7
                                                                                                     29#]
                                                                                            of
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Unicode.$wlvl
                                                                                                      x_s2ma7;
                                                                                              1# ->
                                                                                                  tagToEnum# [x_s2ma7];
                                                                                            };
                                                                                      };
                                                                            } in 
                                                                              : [sat_s2mab
                                                                                 sat_s2mad];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2mag [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2ma7] \u []
                                                                                      case
                                                                                          >=# [x_s2ma7
                                                                                               0#]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            GHC.Unicode.$wlvl
                                                                                                x_s2ma7;
                                                                                        1# ->
                                                                                            case
                                                                                                <=# [x_s2ma7
                                                                                                     29#]
                                                                                            of
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Unicode.$wlvl
                                                                                                      x_s2ma7;
                                                                                              1# ->
                                                                                                  tagToEnum# [x_s2ma7];
                                                                                            };
                                                                                      };
                                                                            } in 
                                                                              : [sat_s2mag
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_up_s2ma6 a#1_s2m9A;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2ma3 [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2m9y] \u []
                                                case >=# [a#_s2m9y 0#] of {
                                                  __DEFAULT -> GHC.Unicode.$wlvl a#_s2m9y;
                                                  1# ->
                                                      case <=# [a#_s2m9y 29#] of {
                                                        __DEFAULT -> GHC.Unicode.$wlvl a#_s2m9y;
                                                        1# -> tagToEnum# [a#_s2m9y];
                                                      };
                                                };
                                      } in  : [sat_s2ma3 sat_s2mah];
                                  1# ->
                                      case <# [a#2_s2m9C a#_s2m9y] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2mal [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2m9y] \u []
                                                      case >=# [a#_s2m9y 0#] of {
                                                        __DEFAULT -> GHC.Unicode.$wlvl a#_s2m9y;
                                                        1# ->
                                                            case <=# [a#_s2m9y 29#] of {
                                                              __DEFAULT ->
                                                                  GHC.Unicode.$wlvl a#_s2m9y;
                                                              1# -> tagToEnum# [a#_s2m9y];
                                                            };
                                                      };
                                            } in  : [sat_s2mal GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.$fEnumGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum GHC.Unicode.GeneralCategory
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Unicode.$fEnumGeneralCategory_$csucc
                                    GHC.Unicode.$fEnumGeneralCategory_$cpred
                                    GHC.Unicode.$fEnumGeneralCategory_$ctoEnum
                                    GHC.Unicode.$fEnumGeneralCategory_$cfromEnum
                                    GHC.Unicode.$fEnumGeneralCategory_$cenumFrom
                                    GHC.Unicode.$fEnumGeneralCategory_$cenumFromThen
                                    GHC.Unicode.$fEnumGeneralCategory_$cenumFromTo
                                    GHC.Unicode.$fEnumGeneralCategory_$cenumFromThenTo];

GHC.Unicode.$wgeneralCategory [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s2mam]
        case ord# [ww_s2mam] of sat_s2mao {
          __DEFAULT ->
              case __pkg_ccall base-4.11.0.0 [sat_s2mao GHC.Prim.realWorld#] of {
                (#,#) _ [Occ=Dead] ds1_s2mar ->
                    case >=# [ds1_s2mar 0#] of {
                      __DEFAULT -> GHC.Unicode.$wlvl ds1_s2mar;
                      1# ->
                          case <=# [ds1_s2mar 29#] of {
                            __DEFAULT -> GHC.Unicode.$wlvl ds1_s2mar;
                            1# -> tagToEnum# [ds1_s2mar];
                          };
                    };
              };
        };

GHC.Unicode.generalCategory [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s2mau]
        case w_s2mau of {
          GHC.Types.C# ww1_s2maw [Occ=Once] ->
              GHC.Unicode.$wgeneralCategory ww1_s2maw;
        };

GHC.Unicode.$wisPunctuation [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Types.Bool
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s2max]
        case ord# [ww_s2max] of sat_s2maz {
          __DEFAULT ->
              case __pkg_ccall base-4.11.0.0 [sat_s2maz GHC.Prim.realWorld#] of {
                (#,#) _ [Occ=Dead] ds1_s2maC ->
                    case >=# [ds1_s2maC 0#] of {
                      __DEFAULT -> GHC.Unicode.$wlvl ds1_s2maC;
                      1# ->
                          case <=# [ds1_s2maC 29#] of {
                            __DEFAULT -> GHC.Unicode.$wlvl ds1_s2maC;
                            1# ->
                                case ds1_s2maC of {
                                  __DEFAULT -> GHC.Types.False [];
                                  11# -> GHC.Types.True [];
                                  12# -> GHC.Types.True [];
                                  13# -> GHC.Types.True [];
                                  14# -> GHC.Types.True [];
                                  15# -> GHC.Types.True [];
                                  16# -> GHC.Types.True [];
                                  17# -> GHC.Types.True [];
                                };
                          };
                    };
              };
        };

GHC.Unicode.isPunctuation [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s2maI]
        case w_s2maI of {
          GHC.Types.C# ww1_s2maK [Occ=Once] ->
              GHC.Unicode.$wisPunctuation ww1_s2maK;
        };

GHC.Unicode.$wisSymbol [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Types.Bool
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s2maL]
        case ord# [ww_s2maL] of sat_s2maN {
          __DEFAULT ->
              case __pkg_ccall base-4.11.0.0 [sat_s2maN GHC.Prim.realWorld#] of {
                (#,#) _ [Occ=Dead] ds1_s2maQ ->
                    case >=# [ds1_s2maQ 0#] of {
                      __DEFAULT -> GHC.Unicode.$wlvl ds1_s2maQ;
                      1# ->
                          case <=# [ds1_s2maQ 29#] of {
                            __DEFAULT -> GHC.Unicode.$wlvl ds1_s2maQ;
                            1# ->
                                case ds1_s2maQ of {
                                  __DEFAULT -> GHC.Types.False [];
                                  18# -> GHC.Types.True [];
                                  19# -> GHC.Types.True [];
                                  20# -> GHC.Types.True [];
                                  21# -> GHC.Types.True [];
                                };
                          };
                    };
              };
        };

GHC.Unicode.isSymbol [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s2maW]
        case w_s2maW of {
          GHC.Types.C# ww1_s2maY [Occ=Once] ->
              GHC.Unicode.$wisSymbol ww1_s2maY;
        };

GHC.Unicode.isUpper :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2maZ]
        case c_s2maZ of {
          GHC.Types.C# c#_s2mb1 [Occ=Once] ->
              case ord# [c#_s2mb1] of sat_s2mb3 {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2mb3 GHC.Prim.realWorld#] of {
                      (#,#) _ [Occ=Dead] ds1_s2mb6 [Occ=Once!] ->
                          case ds1_s2mb6 of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

GHC.Unicode.isPrint :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2mb8]
        case c_s2mb8 of {
          GHC.Types.C# c#_s2mba [Occ=Once] ->
              case ord# [c#_s2mba] of sat_s2mbc {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2mbc GHC.Prim.realWorld#] of {
                      (#,#) _ [Occ=Dead] ds1_s2mbf [Occ=Once!] ->
                          case ds1_s2mbf of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

GHC.Unicode.isControl :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2mbh]
        case c_s2mbh of {
          GHC.Types.C# c#_s2mbj [Occ=Once] ->
              case ord# [c#_s2mbj] of sat_s2mbl {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2mbl GHC.Prim.realWorld#] of {
                      (#,#) _ [Occ=Dead] ds1_s2mbo [Occ=Once!] ->
                          case ds1_s2mbo of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

GHC.Unicode.isAlphaNum :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2mbq]
        case c_s2mbq of {
          GHC.Types.C# c#_s2mbs [Occ=Once] ->
              case ord# [c#_s2mbs] of sat_s2mbu {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2mbu GHC.Prim.realWorld#] of {
                      (#,#) _ [Occ=Dead] ds1_s2mbx [Occ=Once!] ->
                          case ds1_s2mbx of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

GHC.Unicode.isAlpha :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2mbz]
        case c_s2mbz of {
          GHC.Types.C# c#_s2mbB [Occ=Once] ->
              case ord# [c#_s2mbB] of sat_s2mbD {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2mbD GHC.Prim.realWorld#] of {
                      (#,#) _ [Occ=Dead] ds1_s2mbG [Occ=Once!] ->
                          case ds1_s2mbG of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

GHC.Unicode.$wisSpace [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Types.Bool
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s2mbI]
        case ord# [ww_s2mbI] of sat_s2mbK {
          __DEFAULT ->
              case int2Word# [sat_s2mbK] of x_s2mbJ [Dmd=<S,U>] {
                __DEFAULT ->
                    case leWord# [x_s2mbJ 887##] of {
                      __DEFAULT ->
                          case ord# [ww_s2mbI] of sat_s2mbN {
                            __DEFAULT ->
                                case __pkg_ccall base-4.11.0.0 [sat_s2mbN GHC.Prim.realWorld#] of {
                                  (#,#) _ [Occ=Dead] ds1_s2mbQ [Occ=Once!] ->
                                      case ds1_s2mbQ of {
                                        __DEFAULT -> GHC.Types.True [];
                                        0# -> GHC.Types.False [];
                                      };
                                };
                          };
                      1# ->
                          case x_s2mbJ of wild_s2mbS {
                            __DEFAULT ->
                                case minusWord# [wild_s2mbS 9##] of sat_s2mbT {
                                  __DEFAULT ->
                                      case leWord# [sat_s2mbT 4##] of {
                                        __DEFAULT ->
                                            case wild_s2mbS of {
                                              __DEFAULT -> GHC.Types.False [];
                                              160## -> GHC.Types.True [];
                                            };
                                        1# -> GHC.Types.True [];
                                      };
                                };
                            32## -> GHC.Types.True [];
                          };
                    };
              };
        };

GHC.Unicode.isSpace [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [w_s2mbW]
        case w_s2mbW of {
          GHC.Types.C# ww1_s2mbY [Occ=Once] ->
              GHC.Unicode.$wisSpace ww1_s2mbY;
        };

GHC.Unicode.UppercaseLetter :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.UppercaseLetter! [];

GHC.Unicode.LowercaseLetter :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.LowercaseLetter! [];

GHC.Unicode.TitlecaseLetter :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.TitlecaseLetter! [];

GHC.Unicode.ModifierLetter :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.ModifierLetter! [];

GHC.Unicode.OtherLetter :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.OtherLetter! [];

GHC.Unicode.NonSpacingMark :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.NonSpacingMark! [];

GHC.Unicode.SpacingCombiningMark :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.SpacingCombiningMark! [];

GHC.Unicode.EnclosingMark :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.EnclosingMark! [];

GHC.Unicode.DecimalNumber :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.DecimalNumber! [];

GHC.Unicode.LetterNumber :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.LetterNumber! [];

GHC.Unicode.OtherNumber :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.OtherNumber! [];

GHC.Unicode.ConnectorPunctuation :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.ConnectorPunctuation! [];

GHC.Unicode.DashPunctuation :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.DashPunctuation! [];

GHC.Unicode.OpenPunctuation :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.OpenPunctuation! [];

GHC.Unicode.ClosePunctuation :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.ClosePunctuation! [];

GHC.Unicode.InitialQuote :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.InitialQuote! [];

GHC.Unicode.FinalQuote :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.FinalQuote! [];

GHC.Unicode.OtherPunctuation :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.OtherPunctuation! [];

GHC.Unicode.MathSymbol :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.MathSymbol! [];

GHC.Unicode.CurrencySymbol :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.CurrencySymbol! [];

GHC.Unicode.ModifierSymbol :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.ModifierSymbol! [];

GHC.Unicode.OtherSymbol :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.OtherSymbol! [];

GHC.Unicode.Space :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.Space! [];

GHC.Unicode.LineSeparator :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.LineSeparator! [];

GHC.Unicode.ParagraphSeparator :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.ParagraphSeparator! [];

GHC.Unicode.Control :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.Control! [];

GHC.Unicode.Format :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.Format! [];

GHC.Unicode.Surrogate :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.Surrogate! [];

GHC.Unicode.PrivateUse :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.PrivateUse! [];

GHC.Unicode.NotAssigned :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.NotAssigned! [];


==================== STG syntax: ====================
2018-03-16 15:57:06.355947624 UTC

GHC.Unicode.$fBoundedGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded GHC.Unicode.GeneralCategory
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Unicode.UppercaseLetter
                                       GHC.Unicode.NotAssigned];

lvl_r2j62 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "UppercaseLetter"#;

lvl1_r2j63 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_r2j62;

lvl2_r2j64 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "LowercaseLetter"#;

lvl3_r2j65 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl2_r2j64;

lvl4_r2j66 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "TitlecaseLetter"#;

lvl5_r2j67 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl4_r2j66;

lvl6_r2j68 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ModifierLetter"#;

lvl7_r2j69 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl6_r2j68;

lvl8_r2j6a :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OtherLetter"#;

lvl9_r2j6b :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl8_r2j6a;

lvl10_r2j6c :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "NonSpacingMark"#;

lvl11_r2j6d :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl10_r2j6c;

lvl12_r2j6e :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "SpacingCombiningMark"#;

lvl13_r2j6f :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl12_r2j6e;

lvl14_r2j6g :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EnclosingMark"#;

lvl15_r2j6h :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl14_r2j6g;

lvl16_r2j6i :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "DecimalNumber"#;

lvl17_r2j6j :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl16_r2j6i;

lvl18_r2j6k :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "LetterNumber"#;

lvl19_r2j6l :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl18_r2j6k;

lvl20_r2j6m :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OtherNumber"#;

lvl21_r2j6n :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl20_r2j6m;

lvl22_r2j6o :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ConnectorPunctuation"#;

lvl23_r2j6p :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl22_r2j6o;

lvl24_r2j6q :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "DashPunctuation"#;

lvl25_r2j6r :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl24_r2j6q;

lvl26_r2j6s :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OpenPunctuation"#;

lvl27_r2j6t :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl26_r2j6s;

lvl28_r2j6u :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ClosePunctuation"#;

lvl29_r2j6v :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl28_r2j6u;

lvl30_r2j6w :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "InitialQuote"#;

lvl31_r2j6x :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl30_r2j6w;

lvl32_r2j6y :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "FinalQuote"#;

lvl33_r2j6z :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl32_r2j6y;

lvl34_r2j6A :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OtherPunctuation"#;

lvl35_r2j6B :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl34_r2j6A;

lvl36_r2j6C :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "MathSymbol"#;

lvl37_r2j6D :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl36_r2j6C;

lvl38_r2j6E :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CurrencySymbol"#;

lvl39_r2j6F :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl38_r2j6E;

lvl40_r2j6G :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ModifierSymbol"#;

lvl41_r2j6H :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl40_r2j6G;

lvl42_r2j6I :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OtherSymbol"#;

lvl43_r2j6J :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl42_r2j6I;

lvl44_r2j6K :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Space"#;

lvl45_r2j6L :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl44_r2j6K;

lvl46_r2j6M :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "LineSeparator"#;

lvl47_r2j6N :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl46_r2j6M;

lvl48_r2j6O :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ParagraphSeparator"#;

lvl49_r2j6P :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl48_r2j6O;

lvl50_r2j6Q :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Control"#;

lvl51_r2j6R :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl50_r2j6Q;

lvl52_r2j6S :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Format"#;

lvl53_r2j6T :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl52_r2j6S;

lvl54_r2j6U :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Surrogate"#;

lvl55_r2j6V :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl54_r2j6U;

lvl56_r2j6W :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "PrivateUse"#;

lvl57_r2j6X :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl56_r2j6W;

lvl58_r2j6Y :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "NotAssigned"#;

lvl59_r2j6Z :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl58_r2j6Y;

GHC.Unicode.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Unicode.GeneralCategory
     -> GHC.Base.String -> GHC.Base.String
[GblId, Arity=2, Str=<S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [w_s2m3F w1_s2m3G]
        case w_s2m3F of {
          GHC.Unicode.UppercaseLetter -> GHC.Base.++ lvl1_r2j63 w1_s2m3G;
          GHC.Unicode.LowercaseLetter -> GHC.Base.++ lvl3_r2j65 w1_s2m3G;
          GHC.Unicode.TitlecaseLetter -> GHC.Base.++ lvl5_r2j67 w1_s2m3G;
          GHC.Unicode.ModifierLetter -> GHC.Base.++ lvl7_r2j69 w1_s2m3G;
          GHC.Unicode.OtherLetter -> GHC.Base.++ lvl9_r2j6b w1_s2m3G;
          GHC.Unicode.NonSpacingMark -> GHC.Base.++ lvl11_r2j6d w1_s2m3G;
          GHC.Unicode.SpacingCombiningMark ->
              GHC.Base.++ lvl13_r2j6f w1_s2m3G;
          GHC.Unicode.EnclosingMark -> GHC.Base.++ lvl15_r2j6h w1_s2m3G;
          GHC.Unicode.DecimalNumber -> GHC.Base.++ lvl17_r2j6j w1_s2m3G;
          GHC.Unicode.LetterNumber -> GHC.Base.++ lvl19_r2j6l w1_s2m3G;
          GHC.Unicode.OtherNumber -> GHC.Base.++ lvl21_r2j6n w1_s2m3G;
          GHC.Unicode.ConnectorPunctuation ->
              GHC.Base.++ lvl23_r2j6p w1_s2m3G;
          GHC.Unicode.DashPunctuation -> GHC.Base.++ lvl25_r2j6r w1_s2m3G;
          GHC.Unicode.OpenPunctuation -> GHC.Base.++ lvl27_r2j6t w1_s2m3G;
          GHC.Unicode.ClosePunctuation -> GHC.Base.++ lvl29_r2j6v w1_s2m3G;
          GHC.Unicode.InitialQuote -> GHC.Base.++ lvl31_r2j6x w1_s2m3G;
          GHC.Unicode.FinalQuote -> GHC.Base.++ lvl33_r2j6z w1_s2m3G;
          GHC.Unicode.OtherPunctuation -> GHC.Base.++ lvl35_r2j6B w1_s2m3G;
          GHC.Unicode.MathSymbol -> GHC.Base.++ lvl37_r2j6D w1_s2m3G;
          GHC.Unicode.CurrencySymbol -> GHC.Base.++ lvl39_r2j6F w1_s2m3G;
          GHC.Unicode.ModifierSymbol -> GHC.Base.++ lvl41_r2j6H w1_s2m3G;
          GHC.Unicode.OtherSymbol -> GHC.Base.++ lvl43_r2j6J w1_s2m3G;
          GHC.Unicode.Space -> GHC.Base.++ lvl45_r2j6L w1_s2m3G;
          GHC.Unicode.LineSeparator -> GHC.Base.++ lvl47_r2j6N w1_s2m3G;
          GHC.Unicode.ParagraphSeparator -> GHC.Base.++ lvl49_r2j6P w1_s2m3G;
          GHC.Unicode.Control -> GHC.Base.++ lvl51_r2j6R w1_s2m3G;
          GHC.Unicode.Format -> GHC.Base.++ lvl53_r2j6T w1_s2m3G;
          GHC.Unicode.Surrogate -> GHC.Base.++ lvl55_r2j6V w1_s2m3G;
          GHC.Unicode.PrivateUse -> GHC.Base.++ lvl57_r2j6X w1_s2m3G;
          GHC.Unicode.NotAssigned -> GHC.Base.++ lvl59_r2j6Z w1_s2m3G;
        };

GHC.Unicode.$fShowGeneralCategory_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Unicode.GeneralCategory -> GHC.Show.ShowS
[GblId, Arity=3, Str=<L,A><S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [w_s2m3I w1_s2m3J w2_s2m3K]
        GHC.Unicode.$w$cshowsPrec w1_s2m3J w2_s2m3K;

GHC.Unicode.$fShowGeneralCategory1 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

GHC.Unicode.$fShowGeneralCategory_$cshow
  :: GHC.Unicode.GeneralCategory -> GHC.Base.String
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [x_s2m3L] GHC.Unicode.$w$cshowsPrec x_s2m3L GHC.Types.[];

GHC.Unicode.$fShowGeneralCategory_$cshowList
  :: [GHC.Unicode.GeneralCategory] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_s2m3M s_s2m3N]
        GHC.Show.showList__ GHC.Unicode.$w$cshowsPrec ls_s2m3M s_s2m3N;

GHC.Unicode.$fShowGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Unicode.GeneralCategory
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Unicode.$fShowGeneralCategory_$cshowsPrec
                                    GHC.Unicode.$fShowGeneralCategory_$cshow
                                    GHC.Unicode.$fShowGeneralCategory_$cshowList];

GHC.Unicode.$fEqGeneralCategory_$c==
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2m3O b_s2m3P]
        case
            case a_s2m3O of sat_s2m3Q { __DEFAULT -> dataToTag# [sat_s2m3Q]; }
        of
        a#_s2m3R
        { __DEFAULT ->
              case
                  case b_s2m3P of sat_s2m3S { __DEFAULT -> dataToTag# [sat_s2m3S]; }
              of
              b#_s2m3T
              { __DEFAULT ->
                    case ==# [a#_s2m3R b#_s2m3T] of sat_s2m3U {
                      __DEFAULT -> tagToEnum# [sat_s2m3U];
                    };
              };
        };

GHC.Unicode.$fEqGeneralCategory_$c/= [InlPrag=INLINE (sat-args=2)]
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_s2m3V eta1_s2m3W]
        case
            case eta_s2m3V of sat_s2m3X {
              __DEFAULT -> dataToTag# [sat_s2m3X];
            }
        of
        a#_s2m3Y
        { __DEFAULT ->
              case
                  case eta1_s2m3W of sat_s2m3Z {
                    __DEFAULT -> dataToTag# [sat_s2m3Z];
                  }
              of
              b#_s2m40
              { __DEFAULT ->
                    case ==# [a#_s2m3Y b#_s2m40] of {
                      __DEFAULT -> GHC.Types.True [];
                      1# -> GHC.Types.False [];
                    };
              };
        };

GHC.Unicode.$fEqGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Unicode.GeneralCategory
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Unicode.$fEqGeneralCategory_$c==
                                     GHC.Unicode.$fEqGeneralCategory_$c/=];

GHC.Unicode.$fOrdGeneralCategory_$ccompare
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Ordering
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2m42 b_s2m43]
        case
            case a_s2m42 of sat_s2m44 { __DEFAULT -> dataToTag# [sat_s2m44]; }
        of
        a#_s2m45
        { __DEFAULT ->
              case
                  case b_s2m43 of sat_s2m46 { __DEFAULT -> dataToTag# [sat_s2m46]; }
              of
              b#_s2m47
              { __DEFAULT ->
                    case <# [a#_s2m45 b#_s2m47] of {
                      __DEFAULT ->
                          case ==# [a#_s2m45 b#_s2m47] of {
                            __DEFAULT -> GHC.Types.GT [];
                            1# -> GHC.Types.EQ [];
                          };
                      1# -> GHC.Types.LT [];
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$c<
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2m4a b_s2m4b]
        case
            case a_s2m4a of sat_s2m4c { __DEFAULT -> dataToTag# [sat_s2m4c]; }
        of
        a#_s2m4d
        { __DEFAULT ->
              case
                  case b_s2m4b of sat_s2m4e { __DEFAULT -> dataToTag# [sat_s2m4e]; }
              of
              b#_s2m4f
              { __DEFAULT ->
                    case <# [a#_s2m4d b#_s2m4f] of sat_s2m4g {
                      __DEFAULT -> tagToEnum# [sat_s2m4g];
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$c<=
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2m4h b_s2m4i]
        case
            case b_s2m4i of sat_s2m4j { __DEFAULT -> dataToTag# [sat_s2m4j]; }
        of
        a#_s2m4k
        { __DEFAULT ->
              case
                  case a_s2m4h of sat_s2m4l { __DEFAULT -> dataToTag# [sat_s2m4l]; }
              of
              b#_s2m4m
              { __DEFAULT ->
                    case <# [a#_s2m4k b#_s2m4m] of {
                      __DEFAULT -> GHC.Types.True [];
                      1# -> GHC.Types.False [];
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$cmax
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Unicode.GeneralCategory
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [x_s2m4o y_s2m4p]
        case
            case y_s2m4p of sat_s2m4q { __DEFAULT -> dataToTag# [sat_s2m4q]; }
        of
        a#_s2m4r
        { __DEFAULT ->
              case
                  case x_s2m4o of sat_s2m4s { __DEFAULT -> dataToTag# [sat_s2m4s]; }
              of
              b#_s2m4t
              { __DEFAULT ->
                    case <# [a#_s2m4r b#_s2m4t] of {
                      __DEFAULT -> y_s2m4p;
                      1# -> x_s2m4o;
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$c>=
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2m4v b_s2m4w]
        case
            case a_s2m4v of sat_s2m4x { __DEFAULT -> dataToTag# [sat_s2m4x]; }
        of
        a#_s2m4y
        { __DEFAULT ->
              case
                  case b_s2m4w of sat_s2m4z { __DEFAULT -> dataToTag# [sat_s2m4z]; }
              of
              b#_s2m4A
              { __DEFAULT ->
                    case <# [a#_s2m4y b#_s2m4A] of {
                      __DEFAULT -> GHC.Types.True [];
                      1# -> GHC.Types.False [];
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$c>
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2m4C b_s2m4D]
        case
            case b_s2m4D of sat_s2m4E { __DEFAULT -> dataToTag# [sat_s2m4E]; }
        of
        a#_s2m4F
        { __DEFAULT ->
              case
                  case a_s2m4C of sat_s2m4G { __DEFAULT -> dataToTag# [sat_s2m4G]; }
              of
              b#_s2m4H
              { __DEFAULT ->
                    case <# [a#_s2m4F b#_s2m4H] of sat_s2m4I {
                      __DEFAULT -> tagToEnum# [sat_s2m4I];
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory_$cmin
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> GHC.Unicode.GeneralCategory
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [x_s2m4J y_s2m4K]
        case
            case y_s2m4K of sat_s2m4L { __DEFAULT -> dataToTag# [sat_s2m4L]; }
        of
        a#_s2m4M
        { __DEFAULT ->
              case
                  case x_s2m4J of sat_s2m4N { __DEFAULT -> dataToTag# [sat_s2m4N]; }
              of
              b#_s2m4O
              { __DEFAULT ->
                    case <# [a#_s2m4M b#_s2m4O] of {
                      __DEFAULT -> x_s2m4J;
                      1# -> y_s2m4K;
                    };
              };
        };

GHC.Unicode.$fOrdGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord GHC.Unicode.GeneralCategory
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [GHC.Unicode.$fEqGeneralCategory
                                      GHC.Unicode.$fOrdGeneralCategory_$ccompare
                                      GHC.Unicode.$fOrdGeneralCategory_$c<
                                      GHC.Unicode.$fOrdGeneralCategory_$c<=
                                      GHC.Unicode.$fOrdGeneralCategory_$c>
                                      GHC.Unicode.$fOrdGeneralCategory_$c>=
                                      GHC.Unicode.$fOrdGeneralCategory_$cmax
                                      GHC.Unicode.$fOrdGeneralCategory_$cmin];

GHC.Unicode.$fEnumGeneralCategory_$cfromEnum
  :: GHC.Unicode.GeneralCategory -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>m, Unf=OtherCon []] =
    [] \r [a_s2m4Q]
        case
            case a_s2m4Q of sat_s2m4R { __DEFAULT -> dataToTag# [sat_s2m4R]; }
        of
        a#_s2m4S
        { __DEFAULT -> GHC.Types.I# [a#_s2m4S];
        };

GHC.Unicode.$fIxGeneralCategory_$cunsafeIndex
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>m,
 Unf=OtherCon []] =
    [] \r [c_s2m4T d_s2m4U]
        case c_s2m4T of {
          (,) a_s2m4W [Occ=Once] _ [Occ=Dead] ->
              case
                  case a_s2m4W of sat_s2m4Y { __DEFAULT -> dataToTag# [sat_s2m4Y]; }
              of
              a#_s2m4Z
              { __DEFAULT ->
                    case
                        case d_s2m4U of sat_s2m50 { __DEFAULT -> dataToTag# [sat_s2m50]; }
                    of
                    d#_s2m51
                    { __DEFAULT ->
                          case -# [d#_s2m51 a#_s2m4Z] of sat_s2m52 {
                            __DEFAULT -> GHC.Types.I# [sat_s2m52];
                          };
                    };
              };
        };

GHC.Unicode.$fIxGeneralCategory_$cinRange
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s2m53 c_s2m54]
        case ds_s2m53 of {
          (,) a_s2m56 [Occ=Once] b_s2m57 [Occ=Once] ->
              case
                  case a_s2m56 of sat_s2m58 { __DEFAULT -> dataToTag# [sat_s2m58]; }
              of
              a#_s2m59
              { __DEFAULT ->
                    case
                        case b_s2m57 of sat_s2m5a { __DEFAULT -> dataToTag# [sat_s2m5a]; }
                    of
                    b#_s2m5b
                    { __DEFAULT ->
                          case
                              case c_s2m54 of sat_s2m5c { __DEFAULT -> dataToTag# [sat_s2m5c]; }
                          of
                          c#_s2m5d
                          { __DEFAULT ->
                                case >=# [c#_s2m5d a#_s2m59] of {
                                  __DEFAULT -> GHC.Types.False [];
                                  1# ->
                                      case <=# [c#_s2m5d b#_s2m5b] of sat_s2m5f {
                                        __DEFAULT -> tagToEnum# [sat_s2m5f];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.$w$crange [InlPrag=NOUSERINLINE[0]]
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_s2m5g ww1_s2m5h]
        case
            case ww_s2m5g of sat_s2m5i { __DEFAULT -> dataToTag# [sat_s2m5i]; }
        of
        a#_s2m5j
        { __DEFAULT ->
              case
                  case ww1_s2m5h of sat_s2m5k {
                    __DEFAULT -> dataToTag# [sat_s2m5k];
                  }
              of
              b#_s2m5l
              { __DEFAULT ->
                    case ># [a#_s2m5j b#_s2m5l] of {
                      __DEFAULT ->
                          let {
                            go_s2m5n [Occ=LoopBreaker]
                              :: GHC.Prim.Int# -> [GHC.Unicode.GeneralCategory]
                            [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
                                sat-only [b#_s2m5l go_s2m5n] \r [x_s2m5o]
                                    let {
                                      sat_s2m5s [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                      [LclId] =
                                          [b#_s2m5l go_s2m5n x_s2m5o] \u []
                                              case ==# [x_s2m5o b#_s2m5l] of {
                                                __DEFAULT ->
                                                    case +# [x_s2m5o 1#] of sat_s2m5r {
                                                      __DEFAULT -> go_s2m5n sat_s2m5r;
                                                    };
                                                1# -> [] [];
                                              }; } in
                                    let {
                                      sat_s2m5p [Occ=Once] :: GHC.Unicode.GeneralCategory
                                      [LclId] =
                                          [x_s2m5o] \u [] tagToEnum# [x_s2m5o];
                                    } in  : [sat_s2m5p sat_s2m5s];
                          } in  go_s2m5n a#_s2m5j;
                      1# -> [] [];
                    };
              };
        };

GHC.Unicode.$fIxGeneralCategory_$crange [InlPrag=NOUSERINLINE[0]]
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> [GHC.Unicode.GeneralCategory]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(U,U)>,
 Unf=OtherCon []] =
    [] \r [w_s2m5t]
        case w_s2m5t of {
          (,) ww1_s2m5v [Occ=Once] ww2_s2m5w [Occ=Once] ->
              GHC.Unicode.$w$crange ww1_s2m5v ww2_s2m5w;
        };

GHC.Unicode.$fIxGeneralCategory_$crangeSize [InlPrag=NOUSERINLINE[0]]
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(U,U)>m,
 Unf=OtherCon []] =
    [] \r [w_s2m5x]
        case w_s2m5x of {
          (,) ww1_s2m5z [Occ=Once] ww2_s2m5A [Occ=Once] ->
              case
                  case ww1_s2m5z of sat_s2m5B {
                    __DEFAULT -> dataToTag# [sat_s2m5B];
                  }
              of
              a#_s2m5C
              { __DEFAULT ->
                    case
                        case ww2_s2m5A of sat_s2m5D {
                          __DEFAULT -> dataToTag# [sat_s2m5D];
                        }
                    of
                    b#_s2m5E
                    { __DEFAULT ->
                          case >=# [b#_s2m5E a#_s2m5C] of {
                            __DEFAULT -> GHC.Unicode.$fShowGeneralCategory1;
                            1# ->
                                case -# [b#_s2m5E a#_s2m5C] of sat_s2m5G {
                                  __DEFAULT ->
                                      case +# [sat_s2m5G 1#] of sat_s2m5H {
                                        __DEFAULT -> GHC.Types.I# [sat_s2m5H];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.$fIxGeneralCategory_$cunsafeRangeSize
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(U,U)>m,
 Unf=OtherCon []] =
    [] \r [b_s2m5I]
        case b_s2m5I of {
          (,) _l_s2m5K [Occ=Once] h_s2m5L [Occ=Once] ->
              case
                  case _l_s2m5K of sat_s2m5M { __DEFAULT -> dataToTag# [sat_s2m5M]; }
              of
              a#_s2m5N
              { __DEFAULT ->
                    case
                        case h_s2m5L of sat_s2m5O { __DEFAULT -> dataToTag# [sat_s2m5O]; }
                    of
                    d#_s2m5P
                    { __DEFAULT ->
                          case -# [d#_s2m5P a#_s2m5N] of sat_s2m5Q {
                            __DEFAULT ->
                                case +# [sat_s2m5Q 1#] of sat_s2m5R {
                                  __DEFAULT -> GHC.Types.I# [sat_s2m5R];
                                };
                          };
                    };
              };
        };

GHC.Unicode.$fIxGeneralCategory_$cindex [InlPrag=INLINE (sat-args=2)]
  :: (GHC.Unicode.GeneralCategory, GHC.Unicode.GeneralCategory)
     -> GHC.Unicode.GeneralCategory -> GHC.Types.Int
[GblId, Arity=2, Str=<S(SS),1*U(U,U)><S,U>m, Unf=OtherCon []] =
    [] \r [eta_s2m5S eta1_s2m5T]
        case eta_s2m5S of {
          (,) a_s2m5V [Occ=Once] b_s2m5W [Occ=Once] ->
              case
                  case a_s2m5V of sat_s2m5X { __DEFAULT -> dataToTag# [sat_s2m5X]; }
              of
              a#_s2m5Y
              { __DEFAULT ->
                    case
                        case b_s2m5W of sat_s2m5Z { __DEFAULT -> dataToTag# [sat_s2m5Z]; }
                    of
                    b#_s2m60
                    { __DEFAULT ->
                          case
                              case eta1_s2m5T of sat_s2m61 {
                                __DEFAULT -> dataToTag# [sat_s2m61];
                              }
                          of
                          c#_s2m62
                          { __DEFAULT ->
                                case >=# [c#_s2m62 a#_s2m5Y] of {
                                  __DEFAULT -> GHC.Arr.hopelessIndexError;
                                  1# ->
                                      case <=# [c#_s2m62 b#_s2m60] of {
                                        __DEFAULT -> GHC.Arr.hopelessIndexError;
                                        1# ->
                                            case -# [c#_s2m62 a#_s2m5Y] of sat_s2m65 {
                                              __DEFAULT -> GHC.Types.I# [sat_s2m65];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.$fIxGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Arr.Ix GHC.Unicode.GeneralCategory
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Arr.C:Ix! [GHC.Unicode.$fOrdGeneralCategory
                                 GHC.Unicode.$fIxGeneralCategory_$crange
                                 GHC.Unicode.$fIxGeneralCategory_$cindex
                                 GHC.Unicode.$fIxGeneralCategory_$cunsafeIndex
                                 GHC.Unicode.$fIxGeneralCategory_$cinRange
                                 GHC.Unicode.$fIxGeneralCategory_$crangeSize
                                 GHC.Unicode.$fIxGeneralCategory_$cunsafeRangeSize];

GHC.Unicode.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

loc_r2j70 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Unicode.$trModule4;

GHC.Unicode.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Unicode"#;

loc1_r2j71 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Unicode.$trModule2;

loc2_r2j72 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "./GHC/Unicode.hs"#;

loc3_r2j73 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# loc2_r2j72;

loc4_r2j74 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [135#];

loc5_r2j75 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [20#];

loc6_r2j76 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [24#];

$dIP_r2j77 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "error"#;

$dIP1_r2j78 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# $dIP_r2j77;

$dIP2_r2j79 :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [loc_r2j70
                                           loc1_r2j71
                                           loc3_r2j73
                                           loc4_r2j74
                                           loc5_r2j75
                                           loc4_r2j74
                                           loc6_r2j76];

$dIP3_r2j7a :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [$dIP1_r2j78
                                                  $dIP2_r2j79
                                                  GHC.Stack.Types.EmptyCallStack];

lvl60_r2j7b :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    ") is outside of enumeration's range (0,"#;

lvl61_r2j7c :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    ")"#;

lvl62_r2j7d :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl61_r2j7c;

lvl63_r2j7e :: [GHC.Types.Char]
[GblId] =
    [] \u []
        case GHC.Show.$wshowSignedInt 0# 29# lvl62_r2j7d of {
          (#,#) ww5_s2m67 [Occ=Once] ww6_s2m68 [Occ=Once] ->
              : [ww5_s2m67 ww6_s2m68];
        };

lvl64_r2j7f :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackAppendCString# lvl60_r2j7b lvl63_r2j7e;

lvl65_r2j7g :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "toEnum{GeneralCategory}: tag ("#;

GHC.Unicode.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int# -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<B,U>x, Unf=OtherCon []] =
    [] \r [ww_s2m69]
        let {
          sat_s2m6d [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [ww_s2m69] \u []
                  case GHC.Show.$wshowSignedInt 0# ww_s2m69 lvl64_r2j7f of {
                    (#,#) ww5_s2m6b [Occ=Once] ww6_s2m6c [Occ=Once] ->
                        : [ww5_s2m6b ww6_s2m6c];
                  };
        } in 
          case
              GHC.CString.unpackAppendCString# lvl65_r2j7g sat_s2m6d
          of
          sat_s2m6e
          { __DEFAULT -> GHC.Err.error $dIP3_r2j7a sat_s2m6e;
          };

GHC.Unicode.$w$ctoEnum [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int# -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s2m6f]
        case >=# [ww_s2m6f 0#] of {
          __DEFAULT -> GHC.Unicode.$wlvl ww_s2m6f;
          1# ->
              case <=# [ww_s2m6f 29#] of {
                __DEFAULT -> GHC.Unicode.$wlvl ww_s2m6f;
                1# -> tagToEnum# [ww_s2m6f];
              };
        };

GHC.Unicode.$fEnumGeneralCategory_$ctoEnum [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s2m6i]
        case w_s2m6i of {
          GHC.Types.I# ww1_s2m6k [Occ=Once] ->
              GHC.Unicode.$w$ctoEnum ww1_s2m6k;
        };

GHC.Unicode.$fEnumGeneralCategory_go [Occ=LoopBreaker]
  :: GHC.Prim.Int# -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>m2, Unf=OtherCon []] =
    [] \r [x_s2m6l]
        let {
          sat_s2m6p [Occ=Once] :: [GHC.Unicode.GeneralCategory]
          [LclId] =
              [x_s2m6l] \u []
                  case x_s2m6l of wild_s2m6n {
                    __DEFAULT ->
                        case +# [wild_s2m6n 1#] of sat_s2m6o {
                          __DEFAULT -> GHC.Unicode.$fEnumGeneralCategory_go sat_s2m6o;
                        };
                    29# -> [] [];
                  }; } in
        let {
          sat_s2m6m [Occ=Once] :: GHC.Unicode.GeneralCategory
          [LclId] =
              [x_s2m6l] \u [] tagToEnum# [x_s2m6l];
        } in  : [sat_s2m6m sat_s2m6p];

GHC.Unicode.$fEnumGeneralCategory_$cenumFrom
  :: GHC.Unicode.GeneralCategory -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [a_s2m6q]
        case
            case a_s2m6q of sat_s2m6r { __DEFAULT -> dataToTag# [sat_s2m6r]; }
        of
        a#_s2m6s
        { __DEFAULT ->
              case ># [a#_s2m6s 29#] of {
                __DEFAULT -> GHC.Unicode.$fEnumGeneralCategory_go a#_s2m6s;
                1# -> [] [];
              };
        };

GHC.Unicode.$fEnumGeneralCategory_$cenumFromThen
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [a_s2m6u b_s2m6v]
        case
            case a_s2m6u of sat_s2m6w { __DEFAULT -> dataToTag# [sat_s2m6w]; }
        of
        a#_s2m6x
        { __DEFAULT ->
              case
                  case b_s2m6v of sat_s2m6y { __DEFAULT -> dataToTag# [sat_s2m6y]; }
              of
              b#_s2m6z
              { __DEFAULT ->
                    case ># [a#_s2m6x b#_s2m6z] of {
                      __DEFAULT ->
                          case >=# [b#_s2m6z a#_s2m6x] of {
                            __DEFAULT ->
                                case ># [29# b#_s2m6z] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2m6N [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2m6x b#_s2m6z] \u []
                                                case
                                                    -# [b#_s2m6z a#_s2m6x]
                                                of
                                                delta_s2m6E [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [29# delta_s2m6E]
                                                      of
                                                      y'_s2m6F [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_dn_s2m6G [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2m6E
                                                                            y'_s2m6F
                                                                            go_dn_s2m6G] \r [x_s2m6H]
                                                                      case
                                                                          <# [x_s2m6H y'_s2m6F]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2m6L [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2m6E
                                                                                   go_dn_s2m6G
                                                                                   x_s2m6H] \u []
                                                                                      case
                                                                                          +# [x_s2m6H
                                                                                              delta_s2m6E]
                                                                                      of
                                                                                      sat_s2m6K
                                                                                      { __DEFAULT ->
                                                                                            go_dn_s2m6G
                                                                                                sat_s2m6K;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2m6J [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2m6H] \u []
                                                                                      tagToEnum# [x_s2m6H];
                                                                            } in 
                                                                              : [sat_s2m6J
                                                                                 sat_s2m6L];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2m6M [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2m6H] \u []
                                                                                      tagToEnum# [x_s2m6H];
                                                                            } in 
                                                                              : [sat_s2m6M
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_dn_s2m6G b#_s2m6z;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2m6D [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2m6x] \u [] tagToEnum# [a#_s2m6x];
                                      } in  : [sat_s2m6D sat_s2m6N];
                                  1# ->
                                      case ># [29# a#_s2m6x] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2m6P [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2m6x] \u [] tagToEnum# [a#_s2m6x];
                                            } in  : [sat_s2m6P GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                            1# ->
                                case <# [29# b#_s2m6z] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2m71 [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2m6x b#_s2m6z] \u []
                                                case
                                                    -# [b#_s2m6z a#_s2m6x]
                                                of
                                                delta_s2m6S [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [29# delta_s2m6S]
                                                      of
                                                      y'_s2m6T [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_up_s2m6U [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2m6S
                                                                            y'_s2m6T
                                                                            go_up_s2m6U] \r [x_s2m6V]
                                                                      case
                                                                          ># [x_s2m6V y'_s2m6T]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2m6Z [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2m6S
                                                                                   go_up_s2m6U
                                                                                   x_s2m6V] \u []
                                                                                      case
                                                                                          +# [x_s2m6V
                                                                                              delta_s2m6S]
                                                                                      of
                                                                                      sat_s2m6Y
                                                                                      { __DEFAULT ->
                                                                                            go_up_s2m6U
                                                                                                sat_s2m6Y;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2m6X [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2m6V] \u []
                                                                                      tagToEnum# [x_s2m6V];
                                                                            } in 
                                                                              : [sat_s2m6X
                                                                                 sat_s2m6Z];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2m70 [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2m6V] \u []
                                                                                      tagToEnum# [x_s2m6V];
                                                                            } in 
                                                                              : [sat_s2m70
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_up_s2m6U b#_s2m6z;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2m6R [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2m6x] \u [] tagToEnum# [a#_s2m6x];
                                      } in  : [sat_s2m6R sat_s2m71];
                                  1# ->
                                      case <# [29# a#_s2m6x] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2m73 [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2m6x] \u [] tagToEnum# [a#_s2m6x];
                                            } in  : [sat_s2m73 GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                          };
                      1# ->
                          case >=# [b#_s2m6z a#_s2m6x] of {
                            __DEFAULT ->
                                case ># [0# b#_s2m6z] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2m7g [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2m6x b#_s2m6z] \u []
                                                case
                                                    -# [b#_s2m6z a#_s2m6x]
                                                of
                                                delta_s2m77 [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [0# delta_s2m77]
                                                      of
                                                      y'_s2m78 [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_dn_s2m79 [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2m77
                                                                            y'_s2m78
                                                                            go_dn_s2m79] \r [x_s2m7a]
                                                                      case
                                                                          <# [x_s2m7a y'_s2m78]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2m7e [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2m77
                                                                                   go_dn_s2m79
                                                                                   x_s2m7a] \u []
                                                                                      case
                                                                                          +# [x_s2m7a
                                                                                              delta_s2m77]
                                                                                      of
                                                                                      sat_s2m7d
                                                                                      { __DEFAULT ->
                                                                                            go_dn_s2m79
                                                                                                sat_s2m7d;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2m7c [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2m7a] \u []
                                                                                      tagToEnum# [x_s2m7a];
                                                                            } in 
                                                                              : [sat_s2m7c
                                                                                 sat_s2m7e];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2m7f [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2m7a] \u []
                                                                                      tagToEnum# [x_s2m7a];
                                                                            } in 
                                                                              : [sat_s2m7f
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_dn_s2m79 b#_s2m6z;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2m76 [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2m6x] \u [] tagToEnum# [a#_s2m6x];
                                      } in  : [sat_s2m76 sat_s2m7g];
                                  1# ->
                                      case ># [0# a#_s2m6x] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2m7i [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2m6x] \u [] tagToEnum# [a#_s2m6x];
                                            } in  : [sat_s2m7i GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                            1# ->
                                case <# [0# b#_s2m6z] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2m7u [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2m6x b#_s2m6z] \u []
                                                case
                                                    -# [b#_s2m6z a#_s2m6x]
                                                of
                                                delta_s2m7l [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [0# delta_s2m7l]
                                                      of
                                                      y'_s2m7m [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_up_s2m7n [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2m7l
                                                                            y'_s2m7m
                                                                            go_up_s2m7n] \r [x_s2m7o]
                                                                      case
                                                                          ># [x_s2m7o y'_s2m7m]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2m7s [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2m7l
                                                                                   go_up_s2m7n
                                                                                   x_s2m7o] \u []
                                                                                      case
                                                                                          +# [x_s2m7o
                                                                                              delta_s2m7l]
                                                                                      of
                                                                                      sat_s2m7r
                                                                                      { __DEFAULT ->
                                                                                            go_up_s2m7n
                                                                                                sat_s2m7r;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2m7q [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2m7o] \u []
                                                                                      tagToEnum# [x_s2m7o];
                                                                            } in 
                                                                              : [sat_s2m7q
                                                                                 sat_s2m7s];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2m7t [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2m7o] \u []
                                                                                      tagToEnum# [x_s2m7o];
                                                                            } in 
                                                                              : [sat_s2m7t
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_up_s2m7n b#_s2m6z;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2m7k [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2m6x] \u [] tagToEnum# [a#_s2m6x];
                                      } in  : [sat_s2m7k sat_s2m7u];
                                  1# ->
                                      case <# [0# a#_s2m6x] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2m7w [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2m6x] \u [] tagToEnum# [a#_s2m6x];
                                            } in  : [sat_s2m7w GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$trModule4];

GHC.Unicode.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$trModule2];

GHC.Unicode.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Unicode.$trModule3
                                     GHC.Unicode.$trModule1];

GHC.Unicode.$tcGeneralCategory2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GeneralCategory"#;

GHC.Unicode.$tcGeneralCategory1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tcGeneralCategory2];

GHC.Unicode.$tcGeneralCategory :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10145990250269206894##
                                    14660269375011335890##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tcGeneralCategory1
                                    0#
                                    GHC.Types.krep$*];

GHC.Unicode.$tc'ClosePunctuation1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Unicode.$tcGeneralCategory
                                              GHC.Types.[]];

GHC.Unicode.$tc'UppercaseLetter2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'UppercaseLetter"#;

GHC.Unicode.$tc'UppercaseLetter1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'UppercaseLetter2];

GHC.Unicode.$tc'UppercaseLetter :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14647285109492872061##
                                    14425225614845259385##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'UppercaseLetter1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'LowercaseLetter2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'LowercaseLetter"#;

GHC.Unicode.$tc'LowercaseLetter1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'LowercaseLetter2];

GHC.Unicode.$tc'LowercaseLetter :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6843638521722139917##
                                    11845029203120951590##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'LowercaseLetter1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'TitlecaseLetter2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'TitlecaseLetter"#;

GHC.Unicode.$tc'TitlecaseLetter1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'TitlecaseLetter2];

GHC.Unicode.$tc'TitlecaseLetter :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11035134207864173010##
                                    10162510539839760824##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'TitlecaseLetter1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'ModifierLetter2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ModifierLetter"#;

GHC.Unicode.$tc'ModifierLetter1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'ModifierLetter2];

GHC.Unicode.$tc'ModifierLetter :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9531845544999081993##
                                    15142721146394159202##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'ModifierLetter1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'OtherLetter2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OtherLetter"#;

GHC.Unicode.$tc'OtherLetter1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'OtherLetter2];

GHC.Unicode.$tc'OtherLetter :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4852466454551376074##
                                    478150797319163725##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'OtherLetter1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'NonSpacingMark2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'NonSpacingMark"#;

GHC.Unicode.$tc'NonSpacingMark1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'NonSpacingMark2];

GHC.Unicode.$tc'NonSpacingMark :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11798799283128539890##
                                    8595267121230037978##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'NonSpacingMark1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'SpacingCombiningMark2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'SpacingCombiningMark"#;

GHC.Unicode.$tc'SpacingCombiningMark1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'SpacingCombiningMark2];

GHC.Unicode.$tc'SpacingCombiningMark :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [161806050746895686##
                                    6274417789988196957##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'SpacingCombiningMark1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'EnclosingMark2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EnclosingMark"#;

GHC.Unicode.$tc'EnclosingMark1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'EnclosingMark2];

GHC.Unicode.$tc'EnclosingMark :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [18110486507519489617##
                                    1830565827398073667##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'EnclosingMark1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'DecimalNumber2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'DecimalNumber"#;

GHC.Unicode.$tc'DecimalNumber1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'DecimalNumber2];

GHC.Unicode.$tc'DecimalNumber :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7339032513903136575##
                                    4295356444207098462##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'DecimalNumber1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'LetterNumber2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'LetterNumber"#;

GHC.Unicode.$tc'LetterNumber1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'LetterNumber2];

GHC.Unicode.$tc'LetterNumber :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10629256336866531923##
                                    16896950428492761972##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'LetterNumber1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'OtherNumber2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OtherNumber"#;

GHC.Unicode.$tc'OtherNumber1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'OtherNumber2];

GHC.Unicode.$tc'OtherNumber :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10187389108931559810##
                                    2377339607923931442##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'OtherNumber1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'ConnectorPunctuation2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ConnectorPunctuation"#;

GHC.Unicode.$tc'ConnectorPunctuation1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'ConnectorPunctuation2];

GHC.Unicode.$tc'ConnectorPunctuation :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4917643529853318260##
                                    11665519332165151523##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'ConnectorPunctuation1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'DashPunctuation2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'DashPunctuation"#;

GHC.Unicode.$tc'DashPunctuation1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'DashPunctuation2];

GHC.Unicode.$tc'DashPunctuation :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10309144240368445329##
                                    13155144127162508040##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'DashPunctuation1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'OpenPunctuation2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OpenPunctuation"#;

GHC.Unicode.$tc'OpenPunctuation1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'OpenPunctuation2];

GHC.Unicode.$tc'OpenPunctuation :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11156540492509602203##
                                    14579738194966332373##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'OpenPunctuation1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'ClosePunctuation3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ClosePunctuation"#;

GHC.Unicode.$tc'ClosePunctuation2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'ClosePunctuation3];

GHC.Unicode.$tc'ClosePunctuation :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2732552725164352280##
                                    2123618155201944931##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'ClosePunctuation2
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'InitialQuote2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'InitialQuote"#;

GHC.Unicode.$tc'InitialQuote1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'InitialQuote2];

GHC.Unicode.$tc'InitialQuote :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15372309041196331722##
                                    15030215702152843543##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'InitialQuote1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'FinalQuote2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'FinalQuote"#;

GHC.Unicode.$tc'FinalQuote1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'FinalQuote2];

GHC.Unicode.$tc'FinalQuote :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7492133048483711520##
                                    4486297505861009288##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'FinalQuote1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'OtherPunctuation2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OtherPunctuation"#;

GHC.Unicode.$tc'OtherPunctuation1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'OtherPunctuation2];

GHC.Unicode.$tc'OtherPunctuation :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17526727746027692027##
                                    9970963912577062569##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'OtherPunctuation1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'MathSymbol2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'MathSymbol"#;

GHC.Unicode.$tc'MathSymbol1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'MathSymbol2];

GHC.Unicode.$tc'MathSymbol :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4306295684901311676##
                                    14195098983421669147##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'MathSymbol1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'CurrencySymbol2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CurrencySymbol"#;

GHC.Unicode.$tc'CurrencySymbol1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'CurrencySymbol2];

GHC.Unicode.$tc'CurrencySymbol :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [150101909358894799##
                                    4247883766619991310##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'CurrencySymbol1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'ModifierSymbol2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ModifierSymbol"#;

GHC.Unicode.$tc'ModifierSymbol1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'ModifierSymbol2];

GHC.Unicode.$tc'ModifierSymbol :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17930136738185325280##
                                    9680003641195432205##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'ModifierSymbol1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'OtherSymbol2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OtherSymbol"#;

GHC.Unicode.$tc'OtherSymbol1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'OtherSymbol2];

GHC.Unicode.$tc'OtherSymbol :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11720563220218392367##
                                    765393478666748433##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'OtherSymbol1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'Space2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Space"#;

GHC.Unicode.$tc'Space1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'Space2];

GHC.Unicode.$tc'Space :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13451262004661357021##
                                    7623263649021992415##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'Space1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'LineSeparator2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'LineSeparator"#;

GHC.Unicode.$tc'LineSeparator1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'LineSeparator2];

GHC.Unicode.$tc'LineSeparator :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3777504190602031786##
                                    16534792546094157357##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'LineSeparator1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'ParagraphSeparator2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ParagraphSeparator"#;

GHC.Unicode.$tc'ParagraphSeparator1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'ParagraphSeparator2];

GHC.Unicode.$tc'ParagraphSeparator :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [1259977240315406014##
                                    6836752952671088565##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'ParagraphSeparator1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'Control2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Control"#;

GHC.Unicode.$tc'Control1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'Control2];

GHC.Unicode.$tc'Control :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3769799789009110362##
                                    7129109849289868145##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'Control1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'Format2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Format"#;

GHC.Unicode.$tc'Format1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'Format2];

GHC.Unicode.$tc'Format :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15516392160505082493##
                                    8582194312248021938##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'Format1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'Surrogate2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Surrogate"#;

GHC.Unicode.$tc'Surrogate1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'Surrogate2];

GHC.Unicode.$tc'Surrogate :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8891432866311764671##
                                    15154926068870472193##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'Surrogate1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'PrivateUse2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'PrivateUse"#;

GHC.Unicode.$tc'PrivateUse1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'PrivateUse2];

GHC.Unicode.$tc'PrivateUse :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9277443220957795657##
                                    16819524490051355354##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'PrivateUse1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.$tc'NotAssigned2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'NotAssigned"#;

GHC.Unicode.$tc'NotAssigned1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Unicode.$tc'NotAssigned2];

GHC.Unicode.$tc'NotAssigned :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6894305772705953782##
                                    14217837899895516928##
                                    GHC.Unicode.$trModule
                                    GHC.Unicode.$tc'NotAssigned1
                                    0#
                                    GHC.Unicode.$tc'ClosePunctuation1];

GHC.Unicode.toLower [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Char
[GblId, Arity=1, Str=<S(S),1*U(U)>m, Unf=OtherCon []] =
    [] \r [w_s2m7x]
        case w_s2m7x of {
          GHC.Types.C# ww1_s2m7z [Occ=Once] ->
              case ord# [ww1_s2m7z] of sat_s2m7B {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2m7B GHC.Prim.realWorld#] of {
                      Unit# ds1_s2m7E ->
                          case int2Word# [ds1_s2m7E] of sat_s2m7F {
                            __DEFAULT ->
                                case leWord# [sat_s2m7F 1114111##] of {
                                  __DEFAULT -> GHC.Char.$wlvl ds1_s2m7E;
                                  1# ->
                                      case chr# [ds1_s2m7E] of sat_s2m7H {
                                        __DEFAULT -> GHC.Types.C# [sat_s2m7H];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.toUpper [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Char
[GblId, Arity=1, Str=<S(S),1*U(U)>m, Unf=OtherCon []] =
    [] \r [w_s2m7I]
        case w_s2m7I of {
          GHC.Types.C# ww1_s2m7K [Occ=Once] ->
              case ord# [ww1_s2m7K] of sat_s2m7M {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2m7M GHC.Prim.realWorld#] of {
                      Unit# ds1_s2m7P ->
                          case int2Word# [ds1_s2m7P] of sat_s2m7Q {
                            __DEFAULT ->
                                case leWord# [sat_s2m7Q 1114111##] of {
                                  __DEFAULT -> GHC.Char.$wlvl ds1_s2m7P;
                                  1# ->
                                      case chr# [ds1_s2m7P] of sat_s2m7S {
                                        __DEFAULT -> GHC.Types.C# [sat_s2m7S];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.toTitle [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Char
[GblId, Arity=1, Str=<S(S),1*U(U)>m, Unf=OtherCon []] =
    [] \r [w_s2m7T]
        case w_s2m7T of {
          GHC.Types.C# ww1_s2m7V [Occ=Once] ->
              case ord# [ww1_s2m7V] of sat_s2m7X {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2m7X GHC.Prim.realWorld#] of {
                      Unit# ds1_s2m80 ->
                          case int2Word# [ds1_s2m80] of sat_s2m81 {
                            __DEFAULT ->
                                case leWord# [sat_s2m81 1114111##] of {
                                  __DEFAULT -> GHC.Char.$wlvl ds1_s2m80;
                                  1# ->
                                      case chr# [ds1_s2m80] of sat_s2m83 {
                                        __DEFAULT -> GHC.Types.C# [sat_s2m83];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.wgencat :: GHC.Types.Int -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s2m84]
        case ds_s2m84 of {
          GHC.Types.I# ds2_s2m86 [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [ds2_s2m86 GHC.Prim.realWorld#] of {
                Unit# ds4_s2m8a [Occ=Once] -> GHC.Types.I# [ds4_s2m8a];
              };
        };

GHC.Unicode.isAsciiUpper :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2m8b]
        case c_s2m8b of {
          GHC.Types.C# c1_s2m8d ->
              case geChar# [c1_s2m8d 'A'#] of {
                __DEFAULT -> GHC.Types.False [];
                1# ->
                    case leChar# [c1_s2m8d 'Z'#] of sat_s2m8f {
                      __DEFAULT -> tagToEnum# [sat_s2m8f];
                    };
              };
        };

GHC.Unicode.isAsciiLower :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2m8g]
        case c_s2m8g of {
          GHC.Types.C# c1_s2m8i ->
              case geChar# [c1_s2m8i 'a'#] of {
                __DEFAULT -> GHC.Types.False [];
                1# ->
                    case leChar# [c1_s2m8i 'z'#] of sat_s2m8k {
                      __DEFAULT -> tagToEnum# [sat_s2m8k];
                    };
              };
        };

GHC.Unicode.isLatin1 :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2m8l]
        case c_s2m8l of {
          GHC.Types.C# c1_s2m8n [Occ=Once] ->
              case leChar# [c1_s2m8n '\255'#] of sat_s2m8o {
                __DEFAULT -> tagToEnum# [sat_s2m8o];
              };
        };

GHC.Unicode.isAscii :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2m8p]
        case c_s2m8p of {
          GHC.Types.C# c1_s2m8r [Occ=Once] ->
              case ltChar# [c1_s2m8r '\128'#] of sat_s2m8s {
                __DEFAULT -> tagToEnum# [sat_s2m8s];
              };
        };

GHC.Unicode.isOctDigit :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2m8t]
        case c_s2m8t of {
          GHC.Types.C# c#_s2m8v [Occ=Once] ->
              case ord# [c#_s2m8v] of sat_s2m8w {
                __DEFAULT ->
                    case -# [sat_s2m8w 48#] of sat_s2m8x {
                      __DEFAULT ->
                          case int2Word# [sat_s2m8x] of sat_s2m8y {
                            __DEFAULT ->
                                case leWord# [sat_s2m8y 7##] of sat_s2m8z {
                                  __DEFAULT -> tagToEnum# [sat_s2m8z];
                                };
                          };
                    };
              };
        };

GHC.Unicode.isDigit :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2m8A]
        case c_s2m8A of {
          GHC.Types.C# c#_s2m8C [Occ=Once] ->
              case ord# [c#_s2m8C] of sat_s2m8D {
                __DEFAULT ->
                    case -# [sat_s2m8D 48#] of sat_s2m8E {
                      __DEFAULT ->
                          case int2Word# [sat_s2m8E] of sat_s2m8F {
                            __DEFAULT ->
                                case leWord# [sat_s2m8F 9##] of sat_s2m8G {
                                  __DEFAULT -> tagToEnum# [sat_s2m8G];
                                };
                          };
                    };
              };
        };

GHC.Unicode.isHexDigit :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2m8H]
        case c_s2m8H of {
          GHC.Types.C# c#_s2m8J ->
              case ord# [c#_s2m8J] of sat_s2m8K {
                __DEFAULT ->
                    case -# [sat_s2m8K 48#] of sat_s2m8L {
                      __DEFAULT ->
                          case int2Word# [sat_s2m8L] of sat_s2m8M {
                            __DEFAULT ->
                                case leWord# [sat_s2m8M 9##] of {
                                  __DEFAULT ->
                                      case ord# [c#_s2m8J] of sat_s2m8O {
                                        __DEFAULT ->
                                            case -# [sat_s2m8O 65#] of sat_s2m8P {
                                              __DEFAULT ->
                                                  case int2Word# [sat_s2m8P] of sat_s2m8Q {
                                                    __DEFAULT ->
                                                        case leWord# [sat_s2m8Q 5##] of {
                                                          __DEFAULT ->
                                                              case ord# [c#_s2m8J] of sat_s2m8S {
                                                                __DEFAULT ->
                                                                    case
                                                                        -# [sat_s2m8S 97#]
                                                                    of
                                                                    sat_s2m8T
                                                                    { __DEFAULT ->
                                                                          case
                                                                              int2Word# [sat_s2m8T]
                                                                          of
                                                                          sat_s2m8U
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    leWord# [sat_s2m8U
                                                                                             5##]
                                                                                of
                                                                                sat_s2m8V
                                                                                { __DEFAULT ->
                                                                                      tagToEnum# [sat_s2m8V];
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                          1# -> GHC.Types.True [];
                                                        };
                                                  };
                                            };
                                      };
                                  1# -> GHC.Types.True [];
                                };
                          };
                    };
              };
        };

GHC.Unicode.isLower :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2m8W]
        case c_s2m8W of {
          GHC.Types.C# c#_s2m8Y [Occ=Once] ->
              case ord# [c#_s2m8Y] of sat_s2m90 {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2m90 GHC.Prim.realWorld#] of {
                      Unit# ds1_s2m93 [Occ=Once!] ->
                          case ds1_s2m93 of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

lvl66_r2j7h :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "succ{GeneralCategory}: tried to take `succ' of last tag in enumeration"#;

GHC.Unicode.$fEnumGeneralCategory2 :: GHC.Unicode.GeneralCategory
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl66_r2j7h of sat_s2m95 {
          __DEFAULT -> GHC.Err.error $dIP3_r2j7a sat_s2m95;
        };

GHC.Unicode.$fEnumGeneralCategory_$csucc
  :: GHC.Unicode.GeneralCategory -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [a_s2m96]
        case a_s2m96 of x1_s2m97 {
          __DEFAULT ->
              case dataToTag# [x1_s2m97] of a#_s2m98 {
                __DEFAULT ->
                    case +# [a#_s2m98 1#] of sat_s2m99 {
                      __DEFAULT -> tagToEnum# [sat_s2m99];
                    };
              };
          GHC.Unicode.NotAssigned -> GHC.Unicode.$fEnumGeneralCategory2;
        };

lvl67_r2j7i :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "pred{GeneralCategory}: tried to take `pred' of first tag in enumeration"#;

GHC.Unicode.$fEnumGeneralCategory1 :: GHC.Unicode.GeneralCategory
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl67_r2j7i of sat_s2m9a {
          __DEFAULT -> GHC.Err.error $dIP3_r2j7a sat_s2m9a;
        };

GHC.Unicode.$fEnumGeneralCategory_$cpred
  :: GHC.Unicode.GeneralCategory -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [a_s2m9b]
        case a_s2m9b of x1_s2m9c {
          __DEFAULT ->
              case dataToTag# [x1_s2m9c] of a#_s2m9d {
                __DEFAULT ->
                    case +# [a#_s2m9d -1#] of sat_s2m9e {
                      __DEFAULT -> tagToEnum# [sat_s2m9e];
                    };
              };
          GHC.Unicode.UppercaseLetter -> GHC.Unicode.$fEnumGeneralCategory1;
        };

GHC.Unicode.$fEnumGeneralCategory_$cenumFromTo
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [x_s2m9f y_s2m9g]
        case
            case x_s2m9f of sat_s2m9h { __DEFAULT -> dataToTag# [sat_s2m9h]; }
        of
        a#_s2m9i
        { __DEFAULT ->
              case
                  case y_s2m9g of sat_s2m9j { __DEFAULT -> dataToTag# [sat_s2m9j]; }
              of
              a#1_s2m9k
              { __DEFAULT ->
                    case ># [a#_s2m9i a#1_s2m9k] of {
                      __DEFAULT ->
                          let {
                            go_s2m9m [Occ=LoopBreaker]
                              :: GHC.Prim.Int# -> [GHC.Unicode.GeneralCategory]
                            [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
                                sat-only [a#1_s2m9k go_s2m9m] \r [x1_s2m9n]
                                    let {
                                      sat_s2m9t [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                      [LclId] =
                                          [a#1_s2m9k go_s2m9m x1_s2m9n] \u []
                                              case ==# [x1_s2m9n a#1_s2m9k] of {
                                                __DEFAULT ->
                                                    case +# [x1_s2m9n 1#] of sat_s2m9s {
                                                      __DEFAULT -> go_s2m9m sat_s2m9s;
                                                    };
                                                1# -> [] [];
                                              }; } in
                                    let {
                                      sat_s2m9q [Occ=Once] :: GHC.Unicode.GeneralCategory
                                      [LclId] =
                                          [x1_s2m9n] \u []
                                              case >=# [x1_s2m9n 0#] of {
                                                __DEFAULT -> GHC.Unicode.$wlvl x1_s2m9n;
                                                1# ->
                                                    case <=# [x1_s2m9n 29#] of {
                                                      __DEFAULT -> GHC.Unicode.$wlvl x1_s2m9n;
                                                      1# -> tagToEnum# [x1_s2m9n];
                                                    };
                                              };
                                    } in  : [sat_s2m9q sat_s2m9t];
                          } in  go_s2m9m a#_s2m9i;
                      1# -> [] [];
                    };
              };
        };

GHC.Unicode.$fEnumGeneralCategory_$cenumFromThenTo
  :: GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory
     -> GHC.Unicode.GeneralCategory
     -> [GHC.Unicode.GeneralCategory]
[GblId, Arity=3, Str=<S,U><S,U><S,U>, Unf=OtherCon []] =
    [] \r [x1_s2m9u x2_s2m9v y_s2m9w]
        case
            case x1_s2m9u of sat_s2m9x { __DEFAULT -> dataToTag# [sat_s2m9x]; }
        of
        a#_s2m9y
        { __DEFAULT ->
              case
                  case x2_s2m9v of sat_s2m9z { __DEFAULT -> dataToTag# [sat_s2m9z]; }
              of
              a#1_s2m9A
              { __DEFAULT ->
                    case
                        case y_s2m9w of sat_s2m9B { __DEFAULT -> dataToTag# [sat_s2m9B]; }
                    of
                    a#2_s2m9C
                    { __DEFAULT ->
                          case >=# [a#1_s2m9A a#_s2m9y] of {
                            __DEFAULT ->
                                case ># [a#2_s2m9C a#1_s2m9A] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2m9V [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2m9y a#1_s2m9A a#2_s2m9C] \u []
                                                case
                                                    -# [a#1_s2m9A a#_s2m9y]
                                                of
                                                delta_s2m9I [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [a#2_s2m9C delta_s2m9I]
                                                      of
                                                      y'_s2m9J [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_dn_s2m9K [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2m9I
                                                                            y'_s2m9J
                                                                            go_dn_s2m9K] \r [x_s2m9L]
                                                                      case
                                                                          <# [x_s2m9L y'_s2m9J]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2m9R [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2m9I
                                                                                   go_dn_s2m9K
                                                                                   x_s2m9L] \u []
                                                                                      case
                                                                                          +# [x_s2m9L
                                                                                              delta_s2m9I]
                                                                                      of
                                                                                      sat_s2m9Q
                                                                                      { __DEFAULT ->
                                                                                            go_dn_s2m9K
                                                                                                sat_s2m9Q;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2m9P [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2m9L] \u []
                                                                                      case
                                                                                          >=# [x_s2m9L
                                                                                               0#]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            GHC.Unicode.$wlvl
                                                                                                x_s2m9L;
                                                                                        1# ->
                                                                                            case
                                                                                                <=# [x_s2m9L
                                                                                                     29#]
                                                                                            of
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Unicode.$wlvl
                                                                                                      x_s2m9L;
                                                                                              1# ->
                                                                                                  tagToEnum# [x_s2m9L];
                                                                                            };
                                                                                      };
                                                                            } in 
                                                                              : [sat_s2m9P
                                                                                 sat_s2m9R];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2m9U [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2m9L] \u []
                                                                                      case
                                                                                          >=# [x_s2m9L
                                                                                               0#]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            GHC.Unicode.$wlvl
                                                                                                x_s2m9L;
                                                                                        1# ->
                                                                                            case
                                                                                                <=# [x_s2m9L
                                                                                                     29#]
                                                                                            of
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Unicode.$wlvl
                                                                                                      x_s2m9L;
                                                                                              1# ->
                                                                                                  tagToEnum# [x_s2m9L];
                                                                                            };
                                                                                      };
                                                                            } in 
                                                                              : [sat_s2m9U
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_dn_s2m9K a#1_s2m9A;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2m9H [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2m9y] \u []
                                                case >=# [a#_s2m9y 0#] of {
                                                  __DEFAULT -> GHC.Unicode.$wlvl a#_s2m9y;
                                                  1# ->
                                                      case <=# [a#_s2m9y 29#] of {
                                                        __DEFAULT -> GHC.Unicode.$wlvl a#_s2m9y;
                                                        1# -> tagToEnum# [a#_s2m9y];
                                                      };
                                                };
                                      } in  : [sat_s2m9H sat_s2m9V];
                                  1# ->
                                      case ># [a#2_s2m9C a#_s2m9y] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2m9Z [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2m9y] \u []
                                                      case >=# [a#_s2m9y 0#] of {
                                                        __DEFAULT -> GHC.Unicode.$wlvl a#_s2m9y;
                                                        1# ->
                                                            case <=# [a#_s2m9y 29#] of {
                                                              __DEFAULT ->
                                                                  GHC.Unicode.$wlvl a#_s2m9y;
                                                              1# -> tagToEnum# [a#_s2m9y];
                                                            };
                                                      };
                                            } in  : [sat_s2m9Z GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                            1# ->
                                case <# [a#2_s2m9C a#1_s2m9A] of {
                                  __DEFAULT ->
                                      let {
                                        sat_s2mah [Occ=Once] :: [GHC.Unicode.GeneralCategory]
                                        [LclId] =
                                            [a#_s2m9y a#1_s2m9A a#2_s2m9C] \u []
                                                case
                                                    -# [a#1_s2m9A a#_s2m9y]
                                                of
                                                delta_s2ma4 [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case
                                                          -# [a#2_s2m9C delta_s2ma4]
                                                      of
                                                      y'_s2ma5 [Dmd=<S,U>]
                                                      { __DEFAULT ->
                                                            let {
                                                              go_up_s2ma6 [Occ=LoopBreaker]
                                                                :: GHC.Prim.Int#
                                                                   -> [GHC.Unicode.GeneralCategory]
                                                              [LclId,
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [delta_s2ma4
                                                                            y'_s2ma5
                                                                            go_up_s2ma6] \r [x_s2ma7]
                                                                      case
                                                                          ># [x_s2ma7 y'_s2ma5]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s2mad [Occ=Once]
                                                                                :: [GHC.Unicode.GeneralCategory]
                                                                              [LclId] =
                                                                                  [delta_s2ma4
                                                                                   go_up_s2ma6
                                                                                   x_s2ma7] \u []
                                                                                      case
                                                                                          +# [x_s2ma7
                                                                                              delta_s2ma4]
                                                                                      of
                                                                                      sat_s2mac
                                                                                      { __DEFAULT ->
                                                                                            go_up_s2ma6
                                                                                                sat_s2mac;
                                                                                      }; } in
                                                                            let {
                                                                              sat_s2mab [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2ma7] \u []
                                                                                      case
                                                                                          >=# [x_s2ma7
                                                                                               0#]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            GHC.Unicode.$wlvl
                                                                                                x_s2ma7;
                                                                                        1# ->
                                                                                            case
                                                                                                <=# [x_s2ma7
                                                                                                     29#]
                                                                                            of
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Unicode.$wlvl
                                                                                                      x_s2ma7;
                                                                                              1# ->
                                                                                                  tagToEnum# [x_s2ma7];
                                                                                            };
                                                                                      };
                                                                            } in 
                                                                              : [sat_s2mab
                                                                                 sat_s2mad];
                                                                        1# ->
                                                                            let {
                                                                              sat_s2mag [Occ=Once]
                                                                                :: GHC.Unicode.GeneralCategory
                                                                              [LclId] =
                                                                                  [x_s2ma7] \u []
                                                                                      case
                                                                                          >=# [x_s2ma7
                                                                                               0#]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            GHC.Unicode.$wlvl
                                                                                                x_s2ma7;
                                                                                        1# ->
                                                                                            case
                                                                                                <=# [x_s2ma7
                                                                                                     29#]
                                                                                            of
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Unicode.$wlvl
                                                                                                      x_s2ma7;
                                                                                              1# ->
                                                                                                  tagToEnum# [x_s2ma7];
                                                                                            };
                                                                                      };
                                                                            } in 
                                                                              : [sat_s2mag
                                                                                 GHC.Types.[]];
                                                                      };
                                                            } in  go_up_s2ma6 a#1_s2m9A;
                                                      };
                                                }; } in
                                      let {
                                        sat_s2ma3 [Occ=Once] :: GHC.Unicode.GeneralCategory
                                        [LclId] =
                                            [a#_s2m9y] \u []
                                                case >=# [a#_s2m9y 0#] of {
                                                  __DEFAULT -> GHC.Unicode.$wlvl a#_s2m9y;
                                                  1# ->
                                                      case <=# [a#_s2m9y 29#] of {
                                                        __DEFAULT -> GHC.Unicode.$wlvl a#_s2m9y;
                                                        1# -> tagToEnum# [a#_s2m9y];
                                                      };
                                                };
                                      } in  : [sat_s2ma3 sat_s2mah];
                                  1# ->
                                      case <# [a#2_s2m9C a#_s2m9y] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s2mal [Occ=Once] :: GHC.Unicode.GeneralCategory
                                              [LclId] =
                                                  [a#_s2m9y] \u []
                                                      case >=# [a#_s2m9y 0#] of {
                                                        __DEFAULT -> GHC.Unicode.$wlvl a#_s2m9y;
                                                        1# ->
                                                            case <=# [a#_s2m9y 29#] of {
                                                              __DEFAULT ->
                                                                  GHC.Unicode.$wlvl a#_s2m9y;
                                                              1# -> tagToEnum# [a#_s2m9y];
                                                            };
                                                      };
                                            } in  : [sat_s2mal GHC.Types.[]];
                                        1# -> [] [];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Unicode.$fEnumGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum GHC.Unicode.GeneralCategory
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Unicode.$fEnumGeneralCategory_$csucc
                                    GHC.Unicode.$fEnumGeneralCategory_$cpred
                                    GHC.Unicode.$fEnumGeneralCategory_$ctoEnum
                                    GHC.Unicode.$fEnumGeneralCategory_$cfromEnum
                                    GHC.Unicode.$fEnumGeneralCategory_$cenumFrom
                                    GHC.Unicode.$fEnumGeneralCategory_$cenumFromThen
                                    GHC.Unicode.$fEnumGeneralCategory_$cenumFromTo
                                    GHC.Unicode.$fEnumGeneralCategory_$cenumFromThenTo];

GHC.Unicode.$wgeneralCategory [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s2mam]
        case ord# [ww_s2mam] of sat_s2mao {
          __DEFAULT ->
              case __pkg_ccall base-4.11.0.0 [sat_s2mao GHC.Prim.realWorld#] of {
                Unit# ds1_s2mar ->
                    case >=# [ds1_s2mar 0#] of {
                      __DEFAULT -> GHC.Unicode.$wlvl ds1_s2mar;
                      1# ->
                          case <=# [ds1_s2mar 29#] of {
                            __DEFAULT -> GHC.Unicode.$wlvl ds1_s2mar;
                            1# -> tagToEnum# [ds1_s2mar];
                          };
                    };
              };
        };

GHC.Unicode.generalCategory [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Unicode.GeneralCategory
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s2mau]
        case w_s2mau of {
          GHC.Types.C# ww1_s2maw [Occ=Once] ->
              GHC.Unicode.$wgeneralCategory ww1_s2maw;
        };

GHC.Unicode.$wisPunctuation [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Types.Bool
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s2max]
        case ord# [ww_s2max] of sat_s2maz {
          __DEFAULT ->
              case __pkg_ccall base-4.11.0.0 [sat_s2maz GHC.Prim.realWorld#] of {
                Unit# ds1_s2maC ->
                    case >=# [ds1_s2maC 0#] of {
                      __DEFAULT -> GHC.Unicode.$wlvl ds1_s2maC;
                      1# ->
                          case <=# [ds1_s2maC 29#] of {
                            __DEFAULT -> GHC.Unicode.$wlvl ds1_s2maC;
                            1# ->
                                case ds1_s2maC of {
                                  __DEFAULT -> GHC.Types.False [];
                                  11# -> GHC.Types.True [];
                                  12# -> GHC.Types.True [];
                                  13# -> GHC.Types.True [];
                                  14# -> GHC.Types.True [];
                                  15# -> GHC.Types.True [];
                                  16# -> GHC.Types.True [];
                                  17# -> GHC.Types.True [];
                                };
                          };
                    };
              };
        };

GHC.Unicode.isPunctuation [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s2maI]
        case w_s2maI of {
          GHC.Types.C# ww1_s2maK [Occ=Once] ->
              GHC.Unicode.$wisPunctuation ww1_s2maK;
        };

GHC.Unicode.$wisSymbol [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Types.Bool
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s2maL]
        case ord# [ww_s2maL] of sat_s2maN {
          __DEFAULT ->
              case __pkg_ccall base-4.11.0.0 [sat_s2maN GHC.Prim.realWorld#] of {
                Unit# ds1_s2maQ ->
                    case >=# [ds1_s2maQ 0#] of {
                      __DEFAULT -> GHC.Unicode.$wlvl ds1_s2maQ;
                      1# ->
                          case <=# [ds1_s2maQ 29#] of {
                            __DEFAULT -> GHC.Unicode.$wlvl ds1_s2maQ;
                            1# ->
                                case ds1_s2maQ of {
                                  __DEFAULT -> GHC.Types.False [];
                                  18# -> GHC.Types.True [];
                                  19# -> GHC.Types.True [];
                                  20# -> GHC.Types.True [];
                                  21# -> GHC.Types.True [];
                                };
                          };
                    };
              };
        };

GHC.Unicode.isSymbol [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Bool
[GblId, Arity=1, Str=<S(S),1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s2maW]
        case w_s2maW of {
          GHC.Types.C# ww1_s2maY [Occ=Once] ->
              GHC.Unicode.$wisSymbol ww1_s2maY;
        };

GHC.Unicode.isUpper :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2maZ]
        case c_s2maZ of {
          GHC.Types.C# c#_s2mb1 [Occ=Once] ->
              case ord# [c#_s2mb1] of sat_s2mb3 {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2mb3 GHC.Prim.realWorld#] of {
                      Unit# ds1_s2mb6 [Occ=Once!] ->
                          case ds1_s2mb6 of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

GHC.Unicode.isPrint :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2mb8]
        case c_s2mb8 of {
          GHC.Types.C# c#_s2mba [Occ=Once] ->
              case ord# [c#_s2mba] of sat_s2mbc {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2mbc GHC.Prim.realWorld#] of {
                      Unit# ds1_s2mbf [Occ=Once!] ->
                          case ds1_s2mbf of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

GHC.Unicode.isControl :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2mbh]
        case c_s2mbh of {
          GHC.Types.C# c#_s2mbj [Occ=Once] ->
              case ord# [c#_s2mbj] of sat_s2mbl {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2mbl GHC.Prim.realWorld#] of {
                      Unit# ds1_s2mbo [Occ=Once!] ->
                          case ds1_s2mbo of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

GHC.Unicode.isAlphaNum :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2mbq]
        case c_s2mbq of {
          GHC.Types.C# c#_s2mbs [Occ=Once] ->
              case ord# [c#_s2mbs] of sat_s2mbu {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2mbu GHC.Prim.realWorld#] of {
                      Unit# ds1_s2mbx [Occ=Once!] ->
                          case ds1_s2mbx of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

GHC.Unicode.isAlpha :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [c_s2mbz]
        case c_s2mbz of {
          GHC.Types.C# c#_s2mbB [Occ=Once] ->
              case ord# [c#_s2mbB] of sat_s2mbD {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s2mbD GHC.Prim.realWorld#] of {
                      Unit# ds1_s2mbG [Occ=Once!] ->
                          case ds1_s2mbG of {
                            __DEFAULT -> GHC.Types.True [];
                            0# -> GHC.Types.False [];
                          };
                    };
              };
        };

GHC.Unicode.$wisSpace [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Char# -> GHC.Types.Bool
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ww_s2mbI]
        case ord# [ww_s2mbI] of sat_s2mbK {
          __DEFAULT ->
              case int2Word# [sat_s2mbK] of x_s2mbJ [Dmd=<S,U>] {
                __DEFAULT ->
                    case leWord# [x_s2mbJ 887##] of {
                      __DEFAULT ->
                          case ord# [ww_s2mbI] of sat_s2mbN {
                            __DEFAULT ->
                                case __pkg_ccall base-4.11.0.0 [sat_s2mbN GHC.Prim.realWorld#] of {
                                  Unit# ds1_s2mbQ [Occ=Once!] ->
                                      case ds1_s2mbQ of {
                                        __DEFAULT -> GHC.Types.True [];
                                        0# -> GHC.Types.False [];
                                      };
                                };
                          };
                      1# ->
                          case x_s2mbJ of wild_s2mbS {
                            __DEFAULT ->
                                case minusWord# [wild_s2mbS 9##] of sat_s2mbT {
                                  __DEFAULT ->
                                      case leWord# [sat_s2mbT 4##] of {
                                        __DEFAULT ->
                                            case wild_s2mbS of {
                                              __DEFAULT -> GHC.Types.False [];
                                              160## -> GHC.Types.True [];
                                            };
                                        1# -> GHC.Types.True [];
                                      };
                                };
                            32## -> GHC.Types.True [];
                          };
                    };
              };
        };

GHC.Unicode.isSpace [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Char -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [w_s2mbW]
        case w_s2mbW of {
          GHC.Types.C# ww1_s2mbY [Occ=Once] ->
              GHC.Unicode.$wisSpace ww1_s2mbY;
        };

GHC.Unicode.UppercaseLetter :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.UppercaseLetter! [];

GHC.Unicode.LowercaseLetter :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.LowercaseLetter! [];

GHC.Unicode.TitlecaseLetter :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.TitlecaseLetter! [];

GHC.Unicode.ModifierLetter :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.ModifierLetter! [];

GHC.Unicode.OtherLetter :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.OtherLetter! [];

GHC.Unicode.NonSpacingMark :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.NonSpacingMark! [];

GHC.Unicode.SpacingCombiningMark :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.SpacingCombiningMark! [];

GHC.Unicode.EnclosingMark :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.EnclosingMark! [];

GHC.Unicode.DecimalNumber :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.DecimalNumber! [];

GHC.Unicode.LetterNumber :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.LetterNumber! [];

GHC.Unicode.OtherNumber :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.OtherNumber! [];

GHC.Unicode.ConnectorPunctuation :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.ConnectorPunctuation! [];

GHC.Unicode.DashPunctuation :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.DashPunctuation! [];

GHC.Unicode.OpenPunctuation :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.OpenPunctuation! [];

GHC.Unicode.ClosePunctuation :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.ClosePunctuation! [];

GHC.Unicode.InitialQuote :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.InitialQuote! [];

GHC.Unicode.FinalQuote :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.FinalQuote! [];

GHC.Unicode.OtherPunctuation :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.OtherPunctuation! [];

GHC.Unicode.MathSymbol :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.MathSymbol! [];

GHC.Unicode.CurrencySymbol :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.CurrencySymbol! [];

GHC.Unicode.ModifierSymbol :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.ModifierSymbol! [];

GHC.Unicode.OtherSymbol :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.OtherSymbol! [];

GHC.Unicode.Space :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.Space! [];

GHC.Unicode.LineSeparator :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.LineSeparator! [];

GHC.Unicode.ParagraphSeparator :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.ParagraphSeparator! [];

GHC.Unicode.Control :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.Control! [];

GHC.Unicode.Format :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.Format! [];

GHC.Unicode.Surrogate :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.Surrogate! [];

GHC.Unicode.PrivateUse :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.PrivateUse! [];

GHC.Unicode.NotAssigned :: GHC.Unicode.GeneralCategory
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Unicode.NotAssigned! [];

